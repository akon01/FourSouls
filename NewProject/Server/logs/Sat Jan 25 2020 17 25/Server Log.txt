Start Log 

 Player 1 17:26:00 $MATCH:  

 Player 1 17:26:01 $START_GAME:  

 Player 1 17:26:01 $MOVE_TO_TABLE:  

 Player 2 17:26:01 $MOVE_TO_TABLE:  

 Player 2 17:26:11 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 1 17:26:11 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 17:26:11 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":290,"itemCardId":291} 

 Player 2 17:26:11 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":295}],"result":true,"preventMethod":false,"methodScopeId":294,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 17:26:11 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":294,"itemCardId":295} 

 Player 2 17:26:11 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[11,140,99,41,24,48,100,60,126,107,51,93,31,58,82,50,115,65,26,10,8,86,141,89,101,55,131,128,109,75,54,34,62,18,53,66,17,134,56,37,38,57,102,63,52,104,133,129,85,12,47,113,67,87,135,103,136,95,71,138,84,79,119,83,7,16,32,90,64,118,139,42,110,77,74,121,122,114,45,61,59,19,80,39,72,94,44,88,98,30,22,117,92,25,28,91,46,43,120,116,105,69,96,13,15,33,124,27,9,97,40,29,23,108,123,36,78,130,125,14,70,73,49,20,127,112,142,76,137,111,106,132,81,21,35,68]} 

 Player 2 17:26:11 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[234,258,231,269,244,268,240,233,255,265,237,263,248,271,232,281,249,245,229,275,241,273,262,267,261,264,256,246,235,236,260,250,239,228,257,247,243,272,279,259,274,238,270,276,242,277,278,280,266,251,253,230,252,254]} 

 Player 2 17:26:11 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[176,216,165,202,185,194,163,203,156,161,181,211,160,208,219,188,173,171,213,168,195,217,152,221,193,178,209,187,183,159,146,225,175,149,212,190,186,224,180,179,170,172,167,164,215,150,197,182,192,158,223,151,218,174,198,166,157,189,145,177,199,220,196,222,200,214,154,201,162,153,184,210,191,169,204,155,147,205,148,207,206]} 

 Player 2 17:26:11 $DRAW_CARD:  
{"deckType":5} 

 Player 2 17:26:11 $FLIP_CARD:  
{"cardId":206} 

 Player 2 17:26:11 $ADD_STORE_CARD:  
{"cardId":206} 

 Player 2 17:26:11 $DRAW_CARD:  
{"deckType":5} 

 Player 2 17:26:11 $FLIP_CARD:  
{"cardId":207} 

 Player 2 17:26:11 $ADD_STORE_CARD:  
{"cardId":207} 

 Player 2 17:26:11 $DRAW_CARD:  
{"deckType":2} 

 Player 2 17:26:11 $FLIP_CARD:  
{"cardId":254} 

 Player 2 17:26:11 $REGISTER_PASSIVE_ITEM:  
{"cardId":254} 

 Player 2 17:26:11 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":254} 

 Player 2 17:26:11 $NEW_MONSTER_ON_PLACE:  
{"cardId":254,"monsterPlaceId":1} 

 Player 2 17:26:11 $DRAW_CARD:  
{"deckType":2} 

 Player 2 17:26:11 $FLIP_CARD:  
{"cardId":252} 

 Player 2 17:26:11 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":252} 

 Player 2 17:26:12 $NEW_MONSTER_ON_PLACE:  
{"cardId":252,"monsterPlaceId":2} 

 Player 2 17:26:12 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 17:26:12 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 17:26:12 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:26:12 $MOVE_CARD:  
{"moveIndex":1,"cardId":68,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:26:12 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":291}],"result":true,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 17:26:12 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":68,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:26:12 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":68} 

 Player 2 17:26:12 $FLIP_CARD:  
{"cardId":68} 

 Player 2 17:26:12 $FLIP_CARD:  
{"cardId":68} 

 Player 2 17:26:12 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":68} 

 Player 2 17:26:12 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:26:12 $MOVE_CARD:  
{"moveIndex":2,"cardId":35,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:26:12 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":35,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:26:13 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":35} 

 Player 2 17:26:13 $FLIP_CARD:  
{"cardId":35} 

 Player 2 17:26:13 $FLIP_CARD:  
{"cardId":35} 

 Player 2 17:26:13 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":35} 

 Player 2 17:26:13 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:26:13 $MOVE_CARD:  
{"moveIndex":3,"cardId":21,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:26:13 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":21,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:26:13 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":21} 

 Player 2 17:26:13 $FLIP_CARD:  
{"cardId":21} 

 Player 2 17:26:13 $FLIP_CARD:  
{"cardId":21} 

 Player 2 17:26:13 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":21} 

 Player 2 17:26:13 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 17:26:13 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":294,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 17:26:13 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:26:13 $MOVE_CARD:  
{"moveIndex":4,"cardId":81,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:26:14 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":81,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:26:14 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":81} 

 Player 2 17:26:14 $FLIP_CARD:  
{"cardId":81} 

 Player 2 17:26:14 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":81} 

 Player 2 17:26:14 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:26:14 $MOVE_CARD:  
{"moveIndex":5,"cardId":132,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:26:14 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":132,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:26:14 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":132} 

 Player 2 17:26:14 $FLIP_CARD:  
{"cardId":132} 

 Player 2 17:26:14 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":132} 

 Player 2 17:26:14 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:26:14 $MOVE_CARD:  
{"moveIndex":6,"cardId":106,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:26:14 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":106,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:26:15 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":106} 

 Player 2 17:26:15 $FLIP_CARD:  
{"cardId":106} 

 Player 2 17:26:15 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":106} 

 Player 2 17:26:15 $GAME_HAS_STARTED:  

 Player 2 17:26:15 $SET_TURN:  
{"playerId":1} 

 Player 2 17:26:15 $START_TURN:  
{"playerId":1} 

 Player 2 17:26:15 $UPDATE_ACTIONS:  

 Player 1 17:26:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:26:15 $NEXT_STACK_ID:  

 Player 1 17:26:15 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:26:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 17:26:15 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 1 17:26:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 17:26:15 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 1 17:26:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 1 17:26:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:26:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 17:26:15 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 1 17:26:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 1 17:26:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 1 17:26:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:26:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 1 17:26:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 17:26:15 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 17:26:15 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:26:15 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:26:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 17:26:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 17:26:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 17:26:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 17:26:15 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 17:26:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 1 17:26:15 $DRAW_CARD:  
{"deckType":1} 

 Player 1 17:26:15 $MOVE_CARD:  
{"moveIndex":7,"cardId":111,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 17:26:16 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":111,"flipIfFlipped":false,"playerId":1} 

 Player 1 17:26:16 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":111} 

 Player 1 17:26:16 $FLIP_CARD:  
{"cardId":111} 

 Player 1 17:26:16 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":111} 

 Player 1 17:26:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 17:26:16 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 1 17:26:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:26:16 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 1 17:26:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 1 17:26:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:26:16 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 1 17:26:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 1 17:26:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 1 17:26:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 17:26:16 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 17:26:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 17:26:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 17:26:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 17:26:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 17:26:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 17:26:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 17:26:16 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 17:26:16 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 1 17:26:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 1 17:26:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:26:16 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 1 17:26:16 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 1 17:26:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 1 17:26:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:26:31 $MOVE_CARD:  
{"moveIndex":8,"cardId":122,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Hand"} 

 Player 2 17:26:31 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":122,"flipIfFlipped":true,"playerId":1} 

 Player 1 17:26:31 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":122} 

 Player 1 17:26:34 $SHOW_DECISION:  
{"startCardId":122,"endCardId":122,"flipEndCard":true} 

 Player 1 17:26:37 $NEXT_STACK_ID:  

 Player 1 17:26:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:26:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Purple Heart "} 

 Player 1 17:26:37 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":122,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 17:26:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Purple Heart "} 

 Player 1 17:26:37 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":122,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 17:26:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add PlayLootCardStackEffect 2 "}} 

 Player 1 17:26:37 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":122} 

 Player 1 17:26:37 $MOVE_CARD:  
{"moveIndex":9,"cardId":122,"placeID":300,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 17:26:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:26:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:26:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Purple Heart "} 

 Player 2 17:26:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Purple Heart "} 

 Player 2 17:26:37 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":122,"flipIfFlipped":true,"playerId":1} 

 Player 1 17:26:37 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":122} 

 Player 1 17:26:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Purple Heart: AddTrinket"} 

 Player 1 17:26:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:26:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Purple Heart: AddTrinket"} 

 Player 1 17:26:37 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":122,"lootPlayerId":1,"effectToDo":{"effectName":"AddTrinket","cardEffectNum":0,"cardPlayerId":1,"cardId":122,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 17:26:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding PlayLootCardStackEffect 2"},"childOfId":10} 

 Player 1 17:26:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 1 17:26:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:26:37 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 1 17:26:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 1 17:26:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 17:26:37 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 17:26:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Purple Heart "} 

 Player 2 17:26:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Purple Heart "} 

 Player 2 17:26:37 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 17:26:37 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 1 17:26:38 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 1 17:26:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve PlayLootCardStackEffect 2 "}} 

 Player 1 17:26:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Purple Heart: AddTrinket"} 

 Player 1 17:26:38 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":122,"particleType":6} 

 Player 1 17:26:39 $DISABLE_PARTICLE_EFFECT:  
{"cardId":122,"particleType":6} 

 Player 1 17:26:40 $CARD_ADD_TRINKET:  
{"cardId":122,"playerId":1,"addMuiliEffect":false} 

 Player 1 17:26:40 $REMOVE_FROM_PILE:  
{"cardId":122} 

 Player 1 17:26:40 $REGISTER_PASSIVE_ITEM:  
{"cardId":122} 

 Player 1 17:26:40 $MOVE_CARD:  
{"moveIndex":10,"cardId":122,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 

 Player 2 17:26:40 $MOVE_CARD_END:  
{"moveIndex":10,"cardId":122,"flipIfFlipped":true,"playerId":1} 

 Player 1 17:26:40 $ADD_AN_ITEM:  
{"playerId":1,"cardId":122,"isReward":true} 

 Player 1 17:26:40 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":122}],"result":true,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 1 17:26:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Purple Heart: AddTrinket"} 

 Player 1 17:26:40 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":122,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 17:26:40 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:26:40 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":122,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 17:26:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve PlayLootCardStackEffect 2  "}} 

 Player 1 17:26:40 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:26:40 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":122,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 17:26:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve PlayLootCardStackEffect 2"},"childOfId":15} 

 Player 1 17:26:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 1 17:26:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 17:26:40 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 17:26:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Purple Heart "} 

 Player 2 17:26:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Purple Heart "} 

 Player 2 17:26:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Purple Heart "} 

 Player 2 17:26:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Purple Heart "} 

 Player 2 17:26:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Purple Heart "} 

 Player 2 17:26:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Purple Heart "} 

 Player 2 17:26:40 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 17:26:40 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 1 17:26:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 1 17:26:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:26:41 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 1 17:26:41 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 1 17:26:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 1 17:26:41 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:26:43 $SHOW_DECISION:  
{"startCardId":290,"endCardId":254} 

 Player 1 17:26:46 $NEXT_STACK_ID:  

 Player 1 17:26:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:26:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Dip"} 

 Player 1 17:26:46 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":254,"stackEffectType":4}} 

 Player 1 17:26:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Dip"} 

 Player 1 17:26:46 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":254,"stackEffectType":4}} 

 Player 1 17:26:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add DeclareAttack 3 "}} 

 Player 1 17:26:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:26:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Dip"} 

 Player 1 17:26:46 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":254,"stackEffectType":4}} 

 Player 1 17:26:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding DeclareAttack 3"},"childOfId":20} 

 Player 1 17:26:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 1 17:26:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:26:46 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 1 17:26:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 1 17:26:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 17:26:46 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 17:26:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:26:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:26:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Dip"} 

 Player 2 17:26:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Dip"} 

 Player 2 17:26:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Dip"} 

 Player 2 17:26:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Dip"} 

 Player 2 17:26:46 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 17:26:46 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 1 17:26:46 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 1 17:26:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve DeclareAttack 3 "}} 

 Player 1 17:26:46 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":254,"particleType":5} 

 Player 1 17:26:46 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":3,"originStackId":3},"isAfterActivation":true,"index":3} 

 Player 1 17:26:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Dip"} 

 Player 1 17:26:46 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":254,"stackEffectType":4}} 

 Player 1 17:26:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:26:46 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":254,"stackEffectType":4}} 

 Player 1 17:26:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Remove After Resolve DeclareAttack 3  "}} 

 Player 1 17:26:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:26:46 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":254,"stackEffectType":4}} 

 Player 1 17:26:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Response Remove After Resolve DeclareAttack 3"},"childOfId":25} 

 Player 1 17:26:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Wait For Response From Player 2 "},"childOfId":25} 

 Player 1 17:26:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 17:26:47 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 17:26:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Dip"} 

 Player 2 17:26:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Dip"} 

 Player 2 17:26:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Dip"} 

 Player 2 17:26:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Dip"} 

 Player 2 17:26:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Dip"} 

 Player 2 17:26:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Dip"} 

 Player 2 17:26:47 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 17:26:47 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 1 17:26:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 1 "},"childOfId":25} 

 Player 1 17:26:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:26:47 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 1 17:26:47 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 1 17:26:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Stack Was Emptied "}} 

 Player 1 17:26:47 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:38:46 $NEXT_STACK_ID:  

 Player 1 17:38:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:38:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Dip<Monster>"} 

 Player 1 17:38:46 $ADD_TO_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":254}} 

 Player 1 17:38:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Dip<Monster>"} 

 Player 1 17:38:46 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":254}} 

 Player 1 17:38:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Add AttackRoll 4 "}} 

 Player 1 17:38:46 $ROLL_DICE:  
{"playerId":1} 

 Player 2 17:38:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:38:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:38:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Dip<Monster>"} 

 Player 2 17:38:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Dip<Monster>"} 

 Player 1 17:38:48 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":2} 

 Player 1 17:38:48 $UPDATE_STACK_VIS:  
{"stackId":4,"text":"player rolled 2 vs Holy Dip<Monster>"} 

 Player 1 17:38:48 $SHOW_DICE_ROLL:  
{"stackId":4} 

 Player 1 17:38:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Holy Dip<Monster>"} 

 Player 1 17:38:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:38:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Holy Dip<Monster>"} 

 Player 1 17:38:51 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":290,"numberRolled":2,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":254}} 

 Player 1 17:38:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Response Adding AttackRoll 4"},"childOfId":30} 

 Player 1 17:38:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Wait For Response From Player 1 "},"childOfId":30} 

 Player 1 17:38:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:38:51 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 1 17:38:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 2 "},"childOfId":30} 

 Player 1 17:38:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 17:38:51 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 17:38:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Dip<Monster>"} 

 Player 2 17:38:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Dip<Monster>"} 

 Player 2 17:38:52 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 17:38:52 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 1 17:38:52 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 1 17:38:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Resolve AttackRoll 4 "}} 

 Player 1 17:38:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Added 0 to original roll"}} 

 Player 1 17:38:52 $NEXT_STACK_ID:  

 Player 1 17:38:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Holy Dip<Monster>"} 

 Player 1 17:38:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:38:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dip combat damage to Isaac \n2:Player 1 rolled 2 vs Holy Dip<Monster>"} 

 Player 1 17:38:52 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":290,"entityToDoDamageCardId":254,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 17:38:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dip combat damage to Isaac \n2:Player 1 rolled 2 vs Holy Dip<Monster>"} 

 Player 1 17:38:52 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":290,"numberRolled":2,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":254}} 

 Player 1 17:38:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dip combat damage to Isaac \n2:Player 1 rolled 2 vs Holy Dip<Monster>"} 

 Player 1 17:38:52 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":290,"entityToDoDamageCardId":254,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 17:38:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dip combat damage to Isaac \n2:Player 1 rolled 2 vs Holy Dip<Monster>"} 

 Player 1 17:38:52 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":290,"numberRolled":2,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":254}} 

 Player 1 17:38:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dip combat damage to Isaac \n2:Player 1 rolled 2 vs Holy Dip<Monster>"} 

 Player 1 17:38:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dip combat damage to Isaac \n2:Player 1 rolled 2 vs Holy Dip<Monster>"} 

 Player 1 17:38:52 $REPLACE_STACK:  
{"currentStack":[{"entityId":5,"creatorCardId":290,"entityToDoDamageCardId":254,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":4,"creatorCardId":290,"numberRolled":2,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":254}]} 

 Player 1 17:38:52 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":2},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":4,"originStackId":4},"isAfterActivation":true,"index":4} 

 Player 1 17:38:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dip combat damage to Isaac \n2:Player 1 rolled 2 vs Holy Dip<Monster>"} 

 Player 1 17:38:52 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":290,"numberRolled":2,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":254}} 

 Player 1 17:38:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dip combat damage to Isaac"} 

 Player 1 17:38:52 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":290,"numberRolled":2,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":254}} 

 Player 1 17:38:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Remove After Resolve AttackRoll 4  "}} 

 Player 1 17:38:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dip combat damage to Isaac"} 

 Player 1 17:38:52 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":290,"numberRolled":2,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":254}} 

 Player 1 17:38:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Response Remove After Resolve AttackRoll 4"},"childOfId":36} 

 Player 1 17:38:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 1 "},"childOfId":36} 

 Player 1 17:38:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:38:52 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 1 17:38:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Wait For Response From Player 2 "},"childOfId":36} 

 Player 1 17:38:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 17:38:52 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 17:38:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Dip<Monster>"} 

 Player 2 17:38:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Dip<Monster>"} 

 Player 2 17:38:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dip combat damage to Isaac"} 

 Player 2 17:38:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dip combat damage to Isaac"} 

 Player 2 17:38:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dip combat damage to Isaac"} 

 Player 2 17:38:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dip combat damage to Isaac"} 

 Player 2 17:38:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dip combat damage to Isaac"} 

 Player 2 17:38:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dip combat damage to Isaac"} 

 Player 2 17:38:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dip combat damage to Isaac"} 

 Player 2 17:38:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dip combat damage to Isaac"} 

 Player 2 17:38:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dip combat damage to Isaac"} 

 Player 2 17:38:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dip combat damage to Isaac"} 

 Player 2 17:38:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dip combat damage to Isaac \n2:Player 1 is rolling against Holy Dip<Monster>"} 

 Player 2 17:38:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dip combat damage to Isaac \n2:Player 1 is rolling against Holy Dip<Monster>"} 

 Player 2 17:38:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dip combat damage to Isaac \n2:Player 1 is rolling against Holy Dip<Monster>"} 

 Player 2 17:38:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dip combat damage to Isaac \n2:Player 1 is rolling against Holy Dip<Monster>"} 

 Player 2 17:38:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dip combat damage to Isaac \n2:Player 1 is rolling against Holy Dip<Monster>"} 

 Player 2 17:38:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dip combat damage to Isaac \n2:Player 1 is rolling against Holy Dip<Monster>"} 

 Player 2 17:38:53 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 17:38:53 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 1 17:38:53 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 1 17:38:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Resolve CombatDamage 5 "}} 

 Player 1 17:38:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dip 1 combat damage to Isaac"} 

 Player 1 17:38:53 $UPDATE_STACK_VIS:  
{"stackId":5,"text":"Holy Dip will deal 1 combat damage to Isaac"} 

 Player 1 17:38:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dip 1 combat damage to Isaac"} 

 Player 1 17:38:53 $PLAYER_GET_HIT:  
{"playerId":1,"damage":1,"damageDealerId":254} 

 Player 1 17:38:53 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":254}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 1 17:38:53 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_TAKEN","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":0,"number":254}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":6,"originStackId":5},"isAfterActivation":true,"index":6} 

 Player 1 17:38:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dip 1 combat damage to Isaac"} 

 Player 1 17:38:53 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":290,"entityToDoDamageCardId":254,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 17:38:53 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:38:53 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":290,"entityToDoDamageCardId":254,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 17:38:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Remove After Resolve CombatDamage 5  "}} 

 Player 1 17:38:53 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:38:53 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":290,"entityToDoDamageCardId":254,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 17:38:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Response Remove After Resolve CombatDamage 5"},"childOfId":41} 

 Player 1 17:38:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 2 "},"childOfId":41} 

 Player 1 17:38:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 17:38:54 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 17:38:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dip combat damage to Isaac"} 

 Player 2 17:38:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dip combat damage to Isaac"} 

 Player 2 17:38:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dip combat damage to Isaac"} 

 Player 2 17:38:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dip combat damage to Isaac"} 

 Player 2 17:38:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dip combat damage to Isaac"} 

 Player 2 17:38:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dip combat damage to Isaac"} 

 Player 2 17:38:54 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 17:38:54 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 1 17:38:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Wait For Response From Player 1 "},"childOfId":41} 

 Player 1 17:38:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:38:54 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 1 17:38:54 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 1 17:38:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Stack Was Emptied "}} 

 Player 1 17:38:54 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:38:55 $NEXT_STACK_ID:  

 Player 1 17:38:55 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:38:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Dip<Monster>"} 

 Player 1 17:38:55 $ADD_TO_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":254}} 

 Player 1 17:38:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Dip<Monster>"} 

 Player 1 17:38:55 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":254}} 

 Player 1 17:38:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Add AttackRoll 6 "}} 

 Player 1 17:38:55 $ROLL_DICE:  
{"playerId":1} 

 Player 2 17:38:55 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:38:55 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:38:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Dip<Monster>"} 

 Player 2 17:38:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Dip<Monster>"} 

 Player 1 17:38:57 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":4} 

 Player 1 17:38:57 $UPDATE_STACK_VIS:  
{"stackId":6,"text":"player rolled 4 vs Holy Dip<Monster>"} 

 Player 1 17:38:58 $SHOW_DICE_ROLL:  
{"stackId":6} 

 Player 2 17:49:13 $MATCH: 