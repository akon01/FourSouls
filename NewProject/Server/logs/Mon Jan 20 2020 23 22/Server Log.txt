Start Log 

 Player 2 23:22:38 $MATCH:  

 Player 2 23:22:39 $START_GAME:  

 Player 2 23:22:39 $MOVE_TO_TABLE:  

 Player 1 23:22:39 $MOVE_TO_TABLE:  

 Player 1 23:22:41 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 23:22:46 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 2 23:22:46 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":296,"itemCardId":297} 

 Player 2 23:22:46 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":291}],"result":true,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 23:22:46 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":290,"itemCardId":291} 

 Player 2 23:22:46 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[142,68,50,40,107,116,20,84,30,35,127,90,98,140,113,115,87,105,136,94,31,37,29,26,25,42,62,10,49,36,51,126,101,60,129,121,74,81,39,73,43,128,27,112,11,134,133,45,125,117,44,52,22,72,65,64,85,54,70,138,109,103,118,17,32,83,89,7,46,132,135,48,9,61,123,79,119,71,137,23,69,99,122,21,67,80,77,111,12,38,15,91,93,139,95,57,102,78,82,59,8,120,33,34,141,56,63,76,96,19,108,124,106,53,41,14,86,75,114,18,58,110,13,28,47,24,16,100,130,55,92,104,97,66,88,131]} 

 Player 2 23:22:46 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[245,277,249,260,281,242,254,238,269,244,273,228,262,236,237,256,231,246,268,267,271,233,252,234,265,253,275,274,232,247,280,235,279,248,257,272,230,241,259,240,251,243,258,266,239,276,263,278,250,261,270,229,264,255]} 

 Player 2 23:22:47 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[177,187,212,160,197,182,146,201,214,159,150,170,168,179,163,155,209,148,223,171,206,172,202,181,174,158,210,153,180,194,205,149,152,217,184,215,207,208,164,175,145,225,157,186,199,193,185,196,218,189,198,224,188,211,147,216,204,191,213,222,165,178,183,221,176,161,195,166,203,220,169,173,192,219,156,200,190,162,151,154,167]} 

 Player 2 23:22:47 $DRAW_CARD:  
{"deckType":5} 

 Player 2 23:22:47 $FLIP_CARD:  
{"cardId":167} 

 Player 2 23:22:47 $ADD_STORE_CARD:  
{"cardId":167} 

 Player 2 23:22:47 $DRAW_CARD:  
{"deckType":5} 

 Player 2 23:22:47 $FLIP_CARD:  
{"cardId":154} 

 Player 2 23:22:47 $ADD_STORE_CARD:  
{"cardId":154} 

 Player 2 23:22:47 $DRAW_CARD:  
{"deckType":2} 

 Player 2 23:22:47 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":255} 

 Player 2 23:22:47 $DRAW_CARD:  
{"deckType":2} 

 Player 2 23:22:47 $FLIP_CARD:  
{"cardId":264} 

 Player 2 23:22:47 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":264} 

 Player 2 23:22:47 $NEW_MONSTER_ON_PLACE:  
{"cardId":264,"monsterPlaceId":1} 

 Player 2 23:22:47 $DRAW_CARD:  
{"deckType":2} 

 Player 2 23:22:47 $FLIP_CARD:  
{"cardId":229} 

 Player 2 23:22:47 $REGISTER_PASSIVE_ITEM:  
{"cardId":229} 

 Player 2 23:22:47 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":229} 

 Player 2 23:22:47 $NEW_MONSTER_ON_PLACE:  
{"cardId":229,"monsterPlaceId":2} 

 Player 2 23:22:47 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 23:22:47 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 23:22:47 $DRAW_CARD:  
{"deckType":1} 

 Player 2 23:22:47 $MOVE_CARD:  
{"moveIndex":1,"cardId":131,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 23:22:47 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":297}],"result":true,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 23:22:47 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":131,"flipIfFlipped":false,"playerId":2} 

 Player 2 23:22:47 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":131} 

 Player 2 23:22:47 $FLIP_CARD:  
{"cardId":131} 

 Player 2 23:22:47 $FLIP_CARD:  
{"cardId":131} 

 Player 2 23:22:47 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":131} 

 Player 2 23:22:47 $DRAW_CARD:  
{"deckType":1} 

 Player 2 23:22:47 $MOVE_CARD:  
{"moveIndex":2,"cardId":88,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 23:22:48 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":88,"flipIfFlipped":false,"playerId":2} 

 Player 2 23:22:48 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":88} 

 Player 2 23:22:48 $FLIP_CARD:  
{"cardId":88} 

 Player 2 23:22:48 $FLIP_CARD:  
{"cardId":88} 

 Player 2 23:22:48 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":88} 

 Player 2 23:22:48 $DRAW_CARD:  
{"deckType":1} 

 Player 2 23:22:48 $MOVE_CARD:  
{"moveIndex":3,"cardId":66,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 23:22:48 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":66,"flipIfFlipped":false,"playerId":2} 

 Player 2 23:22:48 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":66} 

 Player 2 23:22:48 $FLIP_CARD:  
{"cardId":66} 

 Player 2 23:22:48 $FLIP_CARD:  
{"cardId":66} 

 Player 2 23:22:48 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":66} 

 Player 2 23:22:48 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 23:22:48 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 23:22:48 $DRAW_CARD:  
{"deckType":1} 

 Player 2 23:22:48 $MOVE_CARD:  
{"moveIndex":4,"cardId":97,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 23:22:49 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":97,"flipIfFlipped":false,"playerId":2} 

 Player 2 23:22:49 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":97} 

 Player 2 23:22:49 $FLIP_CARD:  
{"cardId":97} 

 Player 2 23:22:49 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":97} 

 Player 2 23:22:49 $DRAW_CARD:  
{"deckType":1} 

 Player 2 23:22:49 $MOVE_CARD:  
{"moveIndex":5,"cardId":104,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 23:22:49 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":104,"flipIfFlipped":false,"playerId":2} 

 Player 2 23:22:49 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":104} 

 Player 2 23:22:49 $FLIP_CARD:  
{"cardId":104} 

 Player 2 23:22:49 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":104} 

 Player 2 23:22:49 $DRAW_CARD:  
{"deckType":1} 

 Player 2 23:22:49 $MOVE_CARD:  
{"moveIndex":6,"cardId":92,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 23:22:50 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":92,"flipIfFlipped":false,"playerId":2} 

 Player 2 23:22:50 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":92} 

 Player 2 23:22:50 $FLIP_CARD:  
{"cardId":92} 

 Player 2 23:22:50 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":92} 

 Player 2 23:22:50 $GAME_HAS_STARTED:  

 Player 2 23:22:50 $SET_TURN:  
{"playerId":2} 

 Player 2 23:22:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:22:50 $NEXT_STACK_ID:  

 Player 2 23:22:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:22:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 23:22:50 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 23:22:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 23:22:50 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 23:22:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 2 23:22:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:22:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 23:22:50 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 23:22:50 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 23:22:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 2 23:22:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 2 23:22:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:22:50 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 23:22:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 2 23:22:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:22:50 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:22:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:22:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:22:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 23:22:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 23:22:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 23:22:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 23:22:50 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:22:50 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 23:22:50 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 23:22:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 2 23:22:50 $DRAW_CARD:  
{"deckType":1} 

 Player 2 23:22:50 $MOVE_CARD:  
{"moveIndex":7,"cardId":55,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 23:22:51 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":55,"flipIfFlipped":false,"playerId":2} 

 Player 2 23:22:51 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":55} 

 Player 2 23:22:51 $FLIP_CARD:  
{"cardId":55} 

 Player 2 23:22:51 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":55} 

 Player 2 23:22:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 23:22:51 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 23:22:51 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 23:22:51 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:22:51 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 23:22:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 2 23:22:51 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:22:51 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 23:22:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 2 23:22:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 2 23:22:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:22:51 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:22:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 23:22:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 23:22:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 23:22:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 23:22:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 23:22:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 23:22:51 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:22:51 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 2 23:22:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 2 23:22:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:22:51 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 2 23:22:51 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 2 23:22:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 2 23:22:51 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:22:51 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 23:22:51 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 23:22:51 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 23:22:52 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 23:22:52 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 23:22:52 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 23:22:52 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 23:22:52 $UPDATE_ACTIONS:  

 Player 2 23:22:53 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 23:22:54 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 23:23:09 $SHOW_DECISION:  
{"startCardId":97,"endCardId":97,"flipEndCard":true} 

 Player 2 23:23:12 $NEXT_STACK_ID:  

 Player 2 23:23:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:23:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Credit Card "} 

 Player 2 23:23:12 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":97,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 23:23:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Credit Card "} 

 Player 2 23:23:12 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":97,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 23:23:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add PlayLootCardStackEffect 2 "}} 

 Player 2 23:23:12 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":97} 

 Player 2 23:23:12 $MOVE_CARD:  
{"moveIndex":8,"cardId":97,"placeID":300,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 23:23:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:23:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:23:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Credit Card "} 

 Player 1 23:23:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Credit Card "} 

 Player 1 23:23:13 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":97,"flipIfFlipped":true,"playerId":2} 

 Player 2 23:23:13 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":97} 

 Player 2 23:23:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Credit Card: ChainEffects"} 

 Player 2 23:23:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:23:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Credit Card: ChainEffects"} 

 Player 2 23:23:13 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":97,"lootPlayerId":2,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":97,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 23:23:13 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 23:23:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding PlayLootCardStackEffect 2"},"childOfId":10} 

 Player 2 23:23:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 2 23:23:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:23:13 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 2 23:23:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 2 23:23:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:23:13 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:23:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Credit Card "} 

 Player 1 23:23:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Credit Card "} 

 Player 1 23:23:13 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:23:13 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 2 23:23:13 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 2 23:23:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve PlayLootCardStackEffect 2 "}} 

 Player 2 23:23:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Credit Card: ChainEffects"} 

 Player 2 23:23:13 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":97,"particleType":6} 

 Player 2 23:23:15 $DISABLE_PARTICLE_EFFECT:  
{"cardId":97,"particleType":6} 

 Player 2 23:23:15 $REGISTER_ONE_TURN_PASSIVE_EFFECT:  
{"cardId":97,"effectIndex":{"type":3,"index":0},"conditionData":[null]} 

 Player 2 23:23:15 $REMOVE_FROM_PILE:  
{"cardId":97} 

 Player 2 23:23:15 $MOVE_CARD:  
{"moveIndex":9,"cardId":97,"placeID":301,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 23:23:16 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":97,"flipIfFlipped":true,"playerId":2} 

 Player 2 23:23:16 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":97} 

 Player 2 23:23:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Credit Card: ChainEffects"} 

 Player 2 23:23:16 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":97,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 23:23:16 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 23:23:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:23:16 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":97,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 23:23:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve PlayLootCardStackEffect 2  "}} 

 Player 2 23:23:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:23:16 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":97,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 23:23:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve PlayLootCardStackEffect 2"},"childOfId":15} 

 Player 2 23:23:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 2 23:23:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:23:16 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:23:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Credit Card "} 

 Player 1 23:23:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Credit Card "} 

 Player 1 23:23:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Credit Card "} 

 Player 1 23:23:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Credit Card "} 

 Player 1 23:23:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Credit Card "} 

 Player 1 23:23:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Credit Card "} 

 Player 1 23:23:16 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:23:16 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 23:23:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 2 23:23:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:23:16 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 2 23:23:16 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 2 23:23:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 2 23:23:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:23:16 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 23:23:16 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 23:23:16 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 23:23:16 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 23:23:17 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 23:23:17 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 23:23:17 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 23:23:17 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 23:23:17 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 23:23:17 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 23:23:17 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 23:23:18 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 23:23:18 $SHOW_DECISION:  
{"startCardId":290,"endCardId":154} 

 Player 2 23:23:19 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 23:23:21 $NEXT_STACK_ID:  

 Player 2 23:23:21 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:23:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Champion Belt for 0"} 

 Player 2 23:23:21 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":290,"itemToPurchaseCardId":154,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 

 Player 2 23:23:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Champion Belt for 0"} 

 Player 2 23:23:21 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":290,"itemToPurchaseCardId":154,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 

 Player 2 23:23:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add PurchaseItem 3 "}} 

 Player 2 23:23:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:23:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Champion Belt for 0"} 

 Player 2 23:23:21 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":290,"itemToPurchaseCardId":154,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 

 Player 2 23:23:21 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 23:23:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding PurchaseItem 3"},"childOfId":20} 

 Player 2 23:23:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 2 23:23:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:23:21 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 2 23:23:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 2 23:23:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:23:21 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:23:21 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:23:21 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:23:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Champion Belt for 10"} 

 Player 1 23:23:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Champion Belt for 10"} 

 Player 1 23:23:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Champion Belt for 10"} 

 Player 1 23:23:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Champion Belt for 10"} 

 Player 1 23:23:21 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:23:22 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 2 23:23:22 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 2 23:23:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve PurchaseItem 3 "}} 

 Player 2 23:23:22 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 23:23:22 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":0}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 2 23:23:22 $REMOVE_ITEM_FROM_SHOP:  
{"cardId":154} 

 Player 2 23:23:22 $NEXT_STACK_ID:  

 Player 2 23:23:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Champion Belt for 0"} 

 Player 2 23:23:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:23:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Champion Belt for 0 \n2:Refill Store slot"} 

 Player 2 23:23:22 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":290,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 2 23:23:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Champion Belt for 0 \n2:Refill Store slot"} 

 Player 2 23:23:22 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":290,"itemToPurchaseCardId":154,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 

 Player 2 23:23:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Champion Belt for 0 \n2:Refill Store slot"} 

 Player 2 23:23:22 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":290,"itemToPurchaseCardId":154,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 

 Player 2 23:23:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Champion Belt for 0 \n2:Refill Store slot"} 

 Player 2 23:23:22 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":290,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 2 23:23:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Champion Belt for 0 \n2:Refill Store slot"} 

 Player 2 23:23:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Champion Belt for 0 \n2:Refill Store slot"} 

 Player 2 23:23:22 $REPLACE_STACK:  
{"currentStack":[{"entityId":3,"creatorCardId":290,"itemToPurchaseCardId":154,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9},{"entityId":4,"creatorCardId":290,"slotType":5,"slotToFillId":0,"stackEffectType":10}]} 

 Player 2 23:23:22 $REGISTER_PASSIVE_ITEM:  
{"cardId":154} 

 Player 2 23:23:22 $MOVE_CARD:  
{"moveIndex":10,"cardId":154,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 

 Player 1 23:23:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Champion Belt for 10"} 

 Player 1 23:23:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Champion Belt for 10"} 

 Player 1 23:23:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 23:23:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 23:23:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 23:23:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 23:23:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 23:23:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 23:23:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 23:23:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 23:23:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 23:23:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 23:23:22 $MOVE_CARD_END:  
{"moveIndex":10,"cardId":154,"flipIfFlipped":true,"playerId":2} 

 Player 2 23:23:22 $ADD_AN_ITEM:  
{"playerId":2,"cardId":154,"isReward":false} 

 Player 2 23:23:22 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":154}],"result":true,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 2 23:23:22 $NEXT_STACK_ID:  

 Player 2 23:23:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Champion Belt for 0 \n2:Refill Store slot"} 

 Player 2 23:23:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Champion Belt for 0 \n2:Refill Store slot \n3:Activate Champion Belt effect AddAttackOpportunity<AddAttackOpportunity>"} 

 Player 2 23:23:22 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":5,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":154,"effectToDo":{"effectName":"AddAttackOpportunity","cardEffectNum":1,"cardPlayerId":2,"cardId":154,"effctType":0},"isAfterActivation":true,"index":5,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 23:23:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Champion Belt for 0 \n2:Refill Store slot \n3:Activate Champion Belt effect AddAttackOpportunity<AddAttackOpportunity>"} 

 Player 2 23:23:22 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":5,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":154,"effectToDo":{"effectName":"AddAttackOpportunity","cardEffectNum":1,"cardPlayerId":2,"cardId":154,"effctType":0},"isAfterActivation":true,"index":5,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 23:23:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Add ActivatePassiveEffect 5 "}} 

 Player 2 23:23:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Champion Belt for 0 \n2:Refill Store slot \n3:Activate Champion Belt effect AddAttackOpportunity<AddAttackOpportunity>"} 

 Player 2 23:23:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Champion Belt for 0 \n2:Refill Store slot \n3:Activate Champion Belt effect AddAttackOpportunity<AddAttackOpportunity>"} 

 Player 2 23:23:23 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[290],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":5,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":154,"effectToDo":{"effectName":"AddAttackOpportunity","cardEffectNum":1,"cardPlayerId":2,"cardId":154,"effctType":0},"isAfterActivation":true,"index":5,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 23:23:23 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 23:23:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Response Adding ActivatePassiveEffect 5"},"childOfId":25} 

 Player 2 23:23:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Wait For Response From Player 2 "},"childOfId":25} 

 Player 2 23:23:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:23:23 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 2 23:23:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 1 "},"childOfId":25} 

 Player 2 23:23:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:23:23 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:23:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Champion Belt for 10 \n2:Refill Store slot"} 

 Player 1 23:23:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Champion Belt for 10 \n2:Refill Store slot"} 

 Player 1 23:23:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Champion Belt for 10 \n2:Refill Store slot \n3:Activate Champion Belt "} 

 Player 1 23:23:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Champion Belt for 10 \n2:Refill Store slot \n3:Activate Champion Belt "} 

 Player 1 23:23:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Champion Belt for 10 \n2:Refill Store slot \n3:Activate Champion Belt "} 

 Player 1 23:23:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Champion Belt for 10 \n2:Refill Store slot \n3:Activate Champion Belt "} 

 Player 1 23:23:23 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:23:23 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 2 23:23:23 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 2 23:23:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Resolve ActivatePassiveEffect 5 "}} 

 Player 2 23:23:23 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":154,"particleType":6} 

 Player 2 23:23:25 $DISABLE_PARTICLE_EFFECT:  
{"cardId":154,"particleType":6} 

 Player 2 23:23:25 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":154}],"result":true,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 2 23:23:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Champion Belt for 0 \n2:Refill Store slot \n3:Activate Champion Belt effect AddAttackOpportunity<AddAttackOpportunity>"} 

 Player 2 23:23:25 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[290],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":5,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":154,"isAfterActivation":true,"index":5,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 23:23:25 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 23:23:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Champion Belt for 0 \n2:Refill Store slot"} 

 Player 2 23:23:25 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[290],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":5,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":154,"isAfterActivation":true,"index":5,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 23:23:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Remove After Resolve ActivatePassiveEffect 5  "}} 

 Player 2 23:23:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Champion Belt for 0 \n2:Refill Store slot"} 

 Player 2 23:23:25 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[290],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":5,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":154,"isAfterActivation":true,"index":5,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 23:23:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Response Remove After Resolve ActivatePassiveEffect 5"},"childOfId":30} 

 Player 2 23:23:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Wait For Response From Player 1 "},"childOfId":30} 

 Player 2 23:23:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:23:25 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:23:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Champion Belt for 10 \n2:Refill Store slot \n3:Activate Champion Belt "} 

 Player 1 23:23:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Champion Belt for 10 \n2:Refill Store slot \n3:Activate Champion Belt "} 

 Player 1 23:23:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Champion Belt for 10 \n2:Refill Store slot \n3:Activate Champion Belt "} 

 Player 1 23:23:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Champion Belt for 10 \n2:Refill Store slot \n3:Activate Champion Belt "} 

 Player 1 23:23:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Champion Belt for 10 \n2:Refill Store slot \n3:Activate Champion Belt "} 

 Player 1 23:23:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Champion Belt for 10 \n2:Refill Store slot \n3:Activate Champion Belt "} 

 Player 2 23:23:28 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 23:23:31 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:23:31 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 2 23:23:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 2 "},"childOfId":30} 

 Player 2 23:23:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:23:31 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 2 23:23:31 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 2 23:23:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Resolve RefillEmptySlot 4 "}} 

 Player 2 23:23:31 $DRAW_CARD:  
{"deckType":5} 

 Player 2 23:23:31 $FLIP_CARD:  
{"cardId":151} 

 Player 2 23:23:31 $ADD_STORE_CARD:  
{"cardId":151} 

 Player 2 23:23:31 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 23:23:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Champion Belt for 0"} 

 Player 2 23:23:31 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":290,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 2 23:23:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Remove After Resolve RefillEmptySlot 4  "}} 

 Player 2 23:23:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Champion Belt for 0"} 

 Player 2 23:23:31 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":290,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 2 23:23:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Response Remove After Resolve RefillEmptySlot 4"},"childOfId":35} 

 Player 2 23:23:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Wait For Response From Player 2 "},"childOfId":35} 

 Player 2 23:23:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:23:31 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 2 23:23:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 1 "},"childOfId":35} 

 Player 2 23:23:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:23:31 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:23:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Champion Belt for 10 \n2:Refill Store slot"} 

 Player 1 23:23:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Champion Belt for 10 \n2:Refill Store slot"} 

 Player 1 23:23:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Champion Belt for 10 \n2:Refill Store slot"} 

 Player 1 23:23:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Champion Belt for 10 \n2:Refill Store slot"} 

 Player 1 23:23:32 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 1 23:23:32 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:23:32 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 2 23:23:32 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 2 23:23:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Resolve PurchaseItem 3 "}} 

 Player 2 23:23:32 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 23:23:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:23:32 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":290,"itemToPurchaseCardId":154,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 

 Player 2 23:23:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Remove After Resolve PurchaseItem 3  "}} 

 Player 2 23:23:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:23:32 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":290,"itemToPurchaseCardId":154,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 

 Player 2 23:23:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Response Remove After Resolve PurchaseItem 3"},"childOfId":40} 

 Player 2 23:23:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Wait For Response From Player 1 "},"childOfId":40} 

 Player 2 23:23:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:23:32 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 2 23:23:32 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 2 23:23:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 2 "},"childOfId":40} 

 Player 2 23:23:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:23:32 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 2 23:23:32 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 2 23:23:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Stack Was Emptied "}} 

 Player 2 23:23:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:23:32 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 23:23:32 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 23:23:32 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 23:23:32 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 23:23:32 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 23:23:32 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 23:23:32 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 23:23:32 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 23:23:32 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 23:23:32 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 23:23:33 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 23:23:33 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 23:23:33 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 23:23:33 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 23:23:33 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 23:23:33 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 23:23:33 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 23:23:33 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 23:23:33 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 23:23:33 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 23:23:33 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 1 23:23:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Champion Belt for 10"} 

 Player 1 23:23:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Champion Belt for 10"} 

 Player 1 23:23:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Champion Belt for 10"} 

 Player 1 23:23:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Champion Belt for 10"} 

 Player 1 23:23:33 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:23:33 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 23:23:34 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 23:23:35 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 23:23:46 $SHOW_DECISION:  
{"startCardId":290,"endCardId":264} 

 Player 2 23:23:49 $NEXT_STACK_ID:  

 Player 2 23:23:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:23:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Pooter"} 

 Player 2 23:23:49 $ADD_TO_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":264,"stackEffectType":4}} 

 Player 2 23:23:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Pooter"} 

 Player 2 23:23:50 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":264,"stackEffectType":4}} 

 Player 2 23:23:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Add DeclareAttack 6 "}} 

 Player 2 23:23:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:23:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Pooter"} 

 Player 2 23:23:50 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":264,"stackEffectType":4}} 

 Player 2 23:23:50 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 2 23:23:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Response Adding DeclareAttack 6"},"childOfId":45} 

 Player 2 23:23:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Wait For Response From Player 2 "},"childOfId":45} 

 Player 2 23:23:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:23:50 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 2 23:23:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Wait For Response From Player 1 "},"childOfId":45} 

 Player 2 23:23:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:23:50 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:23:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:23:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:23:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Pooter"} 

 Player 1 23:23:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Pooter"} 

 Player 1 23:23:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Pooter"} 

 Player 1 23:23:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Pooter"} 

 Player 1 23:23:50 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:23:50 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 2 23:23:50 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 2 23:23:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Resolve DeclareAttack 6 "}} 

 Player 2 23:23:50 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":264,"particleType":5} 

 Player 2 23:23:50 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":6,"originStackId":6},"isAfterActivation":true,"index":6} 

 Player 2 23:23:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Pooter"} 

 Player 2 23:23:50 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":264,"stackEffectType":4}} 

 Player 2 23:23:50 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 2 23:23:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:23:50 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":264,"stackEffectType":4}} 

 Player 2 23:23:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Remove After Resolve DeclareAttack 6  "}} 

 Player 2 23:23:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:23:50 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":264,"stackEffectType":4}} 

 Player 2 23:23:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Response Remove After Resolve DeclareAttack 6"},"childOfId":50} 

 Player 2 23:23:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Wait For Response From Player 1 "},"childOfId":50} 

 Player 2 23:23:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:23:50 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:23:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Pooter"} 

 Player 1 23:23:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Pooter"} 

 Player 1 23:23:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Pooter"} 

 Player 1 23:23:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Pooter"} 

 Player 1 23:23:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Pooter"} 

 Player 1 23:23:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Pooter"} 

 Player 1 23:23:50 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:23:50 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 2 23:23:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Wait For Response From Player 2 "},"childOfId":50} 

 Player 2 23:23:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:23:51 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 2 23:23:51 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 2 23:23:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Stack Was Emptied "}} 

 Player 2 23:23:51 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:23:51 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 23:23:51 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 23:23:51 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 23:23:51 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 23:23:51 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 23:23:51 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 23:23:51 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 23:23:51 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 23:23:51 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 23:23:51 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 23:23:51 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 23:23:51 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 23:23:51 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 23:23:51 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 23:23:51 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 23:23:51 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 23:23:51 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 23:23:51 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 23:23:51 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 23:23:51 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 23:23:51 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 23:23:51 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 2 23:23:51 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 2 23:23:51 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 2 23:23:51 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 2 23:23:52 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 2 23:23:52 $NEXT_STACK_ID:  

 Player 2 23:23:52 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:23:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster>"} 

 Player 2 23:23:53 $ADD_TO_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":264}} 

 Player 2 23:23:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster>"} 

 Player 2 23:23:53 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":264}} 

 Player 2 23:23:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Add AttackRoll 7 "}} 

 Player 2 23:23:53 $ROLL_DICE:  
{"playerId":2} 

 Player 1 23:23:53 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:23:53 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:23:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster>"} 

 Player 1 23:23:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster>"} 

 Player 2 23:23:53 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 2 23:23:54 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":1} 

 Player 2 23:23:54 $UPDATE_STACK_VIS:  
{"stackId":7,"text":"player rolled 1 vs Pooter<Monster>"} 

 Player 2 23:23:54 $SHOW_DICE_ROLL:  
{"stackId":7} 

 Player 2 23:23:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Pooter<Monster>"} 

 Player 2 23:23:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:23:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Pooter<Monster>"} 

 Player 2 23:23:57 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":290,"numberRolled":1,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":264}} 

 Player 2 23:23:57 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 2 23:23:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":56,"_text":"Response Adding AttackRoll 7"},"childOfId":55} 

 Player 2 23:23:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":57,"_text":"Wait For Response From Player 2 "},"childOfId":55} 

 Player 2 23:23:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 23:23:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster>"} 

 Player 1 23:23:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster>"} 

 Player 2 23:23:59 $SHOW_DECISION:  
{"startCardId":290,"endCardId":291} 

 Player 2 23:24:02 $NEXT_STACK_ID:  

 Player 2 23:24:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Pooter<Monster>"} 

 Player 2 23:24:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Pooter<Monster> \n2:Player 2 activated The D6"} 

 Player 2 23:24:03 $ADD_TO_STACK:  
{"stackEffect":{"entityId":8,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 23:24:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Pooter<Monster> \n2:Player 2 activated The D6"} 

 Player 2 23:24:03 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 23:24:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":58,"_text":"Add ActivateItem 8 "}} 

 Player 2 23:24:03 $USE_ITEM:  
{"cardId":291} 

 Player 2 23:24:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:24:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Pooter<Monster> \n2:Player 2 activated The D6"} 

 Player 2 23:24:03 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 23:24:03 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 2 23:24:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":59,"_text":"Response Adding ActivateItem 8"},"childOfId":58} 

 Player 2 23:24:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":60,"_text":"Wait For Response From Player 2 "},"childOfId":58} 

 Player 2 23:24:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 23:24:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster>"} 

 Player 1 23:24:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster>"} 

 Player 1 23:24:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6"} 

 Player 1 23:24:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6"} 

 Player 1 23:24:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6"} 

 Player 1 23:24:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6"} 

 Player 2 23:24:05 $ACTION_MASSAGE_REMOVE:  
{"id":60} 

 Player 2 23:24:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":61,"_text":"Wait For Response From Player 1 "},"childOfId":58} 

 Player 2 23:24:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:24:05 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:24:24 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":true} 

 Player 1 23:24:24 $SHOW_DECISION:  
{"startCardId":296,"endCardId":296} 

 Player 2 23:24:24 $ACTION_MASSAGE_REMOVE:  
{"id":61} 

 Player 2 23:24:24 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 2 23:24:24 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 2 23:24:24 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 1 23:24:27 $NEXT_STACK_ID:  

 Player 1 23:24:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6"} 

 Player 1 23:24:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6 \n3:Player 1 activated Samson"} 

 Player 1 23:24:27 $ADD_TO_STACK:  
{"stackEffect":{"entityId":9,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 23:24:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6 \n3:Player 1 activated Samson"} 

 Player 1 23:24:27 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 23:24:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":62,"_text":"Add ActivateItem 9 "}} 

 Player 2 23:24:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Pooter<Monster> \n2:Player 2 activated The D6"} 

 Player 2 23:24:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Pooter<Monster> \n2:Player 2 activated The D6"} 

 Player 2 23:24:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Pooter<Monster> \n2:Player 2 activated The D6 \n3:Player 1 activated Samson"} 

 Player 2 23:24:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Pooter<Monster> \n2:Player 2 activated The D6 \n3:Player 1 activated Samson"} 

 Player 1 23:24:31 $SHOW_DECISION:  
{"startCardId":296,"endCardId":131,"flipEndCard":true} 

 Player 1 23:24:34 $USE_ITEM:  
{"cardId":296} 

 Player 1 23:24:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 23:24:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6 \n3:Player 1 activated Samson"} 

 Player 1 23:24:34 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 23:24:34 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 1 23:24:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":63,"_text":"Response Adding ActivateItem 9"},"childOfId":62} 

 Player 1 23:24:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":64,"_text":"Wait For Response From Player 2 "},"childOfId":62} 

 Player 1 23:24:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 23:24:34 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 23:24:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Pooter<Monster> \n2:Player 2 activated The D6 \n3:Player 1 activated Samson"} 

 Player 2 23:24:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Pooter<Monster> \n2:Player 2 activated The D6 \n3:Player 1 activated Samson"} 

 Player 2 23:24:37 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 23:24:37 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 1 23:24:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":65,"_text":"Wait For Response From Player 1 "},"childOfId":62} 

 Player 1 23:24:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:24:49 $ACTION_MASSAGE_REMOVE:  
{"id":65} 

 Player 1 23:24:49 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 1 23:24:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":66,"_text":"Resolve ActivateItem 9 "}} 

 Player 1 23:24:49 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":296,"particleType":6} 

 Player 1 23:24:51 $DISABLE_PARTICLE_EFFECT:  
{"cardId":296,"particleType":6} 

 Player 1 23:24:51 $NEXT_STACK_ID:  

 Player 1 23:24:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6 \n3:Player 1 activated Samson"} 

 Player 1 23:24:51 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":131} 

 Player 1 23:24:51 $MOVE_CARD:  
{"moveIndex":11,"cardId":131,"placeID":300,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 23:24:51 $MOVE_CARD_END:  
{"moveIndex":11,"cardId":131,"flipIfFlipped":true,"playerId":1} 

 Player 1 23:24:51 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":131} 

 Player 1 23:24:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6 \n3:Player 1 play The Emperor: LookAtTopDeckAndPutOnTop \n4:Player 1 activated Samson"} 

 Player 1 23:24:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 23:24:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6 \n3:Player 1 play The Emperor: LookAtTopDeckAndPutOnTop \n4:Player 1 activated Samson"} 

 Player 1 23:24:51 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":1,"effectToDo":{"effectName":"LookAtTopDeckAndPutOnTop","cardEffectNum":0,"cardPlayerId":1,"cardId":131,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 23:24:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6 \n3:Player 1 play The Emperor: LookAtTopDeckAndPutOnTop \n4:Player 1 activated Samson"} 

 Player 1 23:24:51 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":264}} 

 Player 1 23:24:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6 \n3:Player 1 play The Emperor: LookAtTopDeckAndPutOnTop \n4:Player 1 activated Samson"} 

 Player 1 23:24:51 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 23:24:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6 \n3:Player 1 play The Emperor: LookAtTopDeckAndPutOnTop \n4:Player 1 activated Samson"} 

 Player 1 23:24:51 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":290,"numberRolled":1,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":264}} 

 Player 1 23:24:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6 \n3:Player 1 play The Emperor: LookAtTopDeckAndPutOnTop \n4:Player 1 activated Samson"} 

 Player 1 23:24:51 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 23:24:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6 \n3:Player 1 play The Emperor: LookAtTopDeckAndPutOnTop \n4:Player 1 activated Samson"} 

 Player 1 23:24:51 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":1,"effectToDo":{"effectName":"LookAtTopDeckAndPutOnTop","cardEffectNum":0,"cardPlayerId":1,"cardId":131,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 23:24:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6 \n3:Player 1 play The Emperor: LookAtTopDeckAndPutOnTop \n4:Player 1 activated Samson"} 

 Player 1 23:24:52 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 23:24:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6 \n3:Player 1 play The Emperor: LookAtTopDeckAndPutOnTop \n4:Player 1 activated Samson"} 

 Player 1 23:24:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6 \n3:Player 1 play The Emperor: LookAtTopDeckAndPutOnTop \n4:Player 1 activated Samson"} 

 Player 1 23:24:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6 \n3:Player 1 play The Emperor: LookAtTopDeckAndPutOnTop \n4:Player 1 activated Samson"} 

 Player 1 23:24:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6 \n3:Player 1 play The Emperor: LookAtTopDeckAndPutOnTop \n4:Player 1 activated Samson"} 

 Player 1 23:24:52 $REPLACE_STACK:  
{"currentStack":[{"entityId":7,"creatorCardId":290,"numberRolled":1,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":264},{"entityId":8,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1},{"entityId":10,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":1,"effectToDo":{"effectName":"LookAtTopDeckAndPutOnTop","cardEffectNum":0,"cardPlayerId":1,"cardId":131,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":9,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 

 Player 1 23:24:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6 \n3:Player 1 play The Emperor: LookAtTopDeckAndPutOnTop \n4:Player 1 activated Samson"} 

 Player 1 23:24:52 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 23:24:52 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 1 23:24:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6 \n3:Player 1 play The Emperor: LookAtTopDeckAndPutOnTop"} 

 Player 1 23:24:52 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 23:24:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":67,"_text":"Remove After Resolve ActivateItem 9  "}} 

 Player 1 23:24:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6 \n3:Player 1 play The Emperor: LookAtTopDeckAndPutOnTop"} 

 Player 1 23:24:52 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":9,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 23:24:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":68,"_text":"Response Remove After Resolve ActivateItem 9"},"childOfId":67} 

 Player 1 23:24:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":69,"_text":"Wait For Response From Player 2 "},"childOfId":67} 

 Player 1 23:24:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 23:24:52 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 23:24:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Pooter<Monster> \n2:Player 2 activated The D6 \n3:Player 1 activated Samson"} 

 Player 2 23:24:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Pooter<Monster> \n2:Player 2 activated The D6 \n3:Player 1 activated Samson"} 

 Player 2 23:24:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Pooter<Monster> \n2:Player 2 activated The D6 \n3:Player 1 play The Emperor "} 

 Player 2 23:24:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Pooter<Monster> \n2:Player 2 activated The D6 \n3:Player 1 play The Emperor "} 

 Player 2 23:24:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Pooter<Monster> \n2:Player 2 activated The D6 \n3:Player 1 play The Emperor "} 

 Player 2 23:24:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Pooter<Monster> \n2:Player 2 activated The D6 \n3:Player 1 play The Emperor "} 

 Player 2 23:24:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Pooter<Monster> \n2:Player 2 activated The D6 \n3:Player 1 play The Emperor "} 

 Player 2 23:24:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Pooter<Monster> \n2:Player 2 activated The D6 \n3:Player 1 play The Emperor "} 

 Player 2 23:24:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Pooter<Monster> \n2:Player 2 activated The D6 \n3:Player 1 play The Emperor "} 

 Player 2 23:24:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Pooter<Monster> \n2:Player 2 activated The D6 \n3:Player 1 play The Emperor "} 

 Player 2 23:24:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Pooter<Monster> \n2:Player 2 activated The D6 \n3:Player 1 play The Emperor "} 

 Player 2 23:24:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Pooter<Monster> \n2:Player 2 activated The D6 \n3:Player 1 play The Emperor "} 

 Player 2 23:24:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Pooter<Monster> \n2:Player 2 activated The D6 \n3:Player 1 play The Emperor "} 

 Player 2 23:24:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Pooter<Monster> \n2:Player 2 activated The D6 \n3:Player 1 play The Emperor "} 

 Player 2 23:24:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Pooter<Monster> \n2:Player 2 activated The D6 \n3:Player 1 play The Emperor "} 

 Player 2 23:24:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Pooter<Monster> \n2:Player 2 activated The D6 \n3:Player 1 play The Emperor "} 

 Player 2 23:24:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Pooter<Monster> \n2:Player 2 activated The D6 \n3:Player 1 play The Emperor "} 

 Player 2 23:24:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Pooter<Monster> \n2:Player 2 activated The D6 \n3:Player 1 play The Emperor "} 

 Player 2 23:24:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Pooter<Monster> \n2:Player 2 activated The D6 \n3:Player 1 play The Emperor "} 

 Player 2 23:24:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Pooter<Monster> \n2:Player 2 activated The D6 \n3:Player 1 play The Emperor "} 

 Player 2 23:24:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Pooter<Monster> \n2:Player 2 activated The D6 \n3:Player 1 play The Emperor "} 

 Player 2 23:24:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Pooter<Monster> \n2:Player 2 activated The D6 \n3:Player 1 play The Emperor "} 

 Player 2 23:24:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6 \n3:Player 1 play The Emperor  \n4:Player 1 activated Samson"} 

 Player 2 23:24:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6 \n3:Player 1 play The Emperor  \n4:Player 1 activated Samson"} 

 Player 2 23:24:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6 \n3:Player 1 play The Emperor  \n4:Player 1 activated Samson"} 

 Player 2 23:24:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6 \n3:Player 1 play The Emperor  \n4:Player 1 activated Samson"} 

 Player 2 23:24:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6 \n3:Player 1 play The Emperor  \n4:Player 1 activated Samson"} 

 Player 2 23:24:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6 \n3:Player 1 play The Emperor  \n4:Player 1 activated Samson"} 

 Player 1 23:24:54 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 2 23:24:55 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 23:24:55 $ACTION_MASSAGE_REMOVE:  
{"id":69} 

 Player 1 23:24:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":70,"_text":"Wait For Response From Player 1 "},"childOfId":67} 

 Player 1 23:24:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:24:58 $ACTION_MASSAGE_REMOVE:  
{"id":70} 

 Player 1 23:24:58 $ACTION_MASSAGE_REMOVE:  
{"id":68} 

 Player 1 23:24:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":71,"_text":"Resolve PlayLootCardStackEffect 10 "}} 

 Player 1 23:24:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6 \n3:Player 1 play The Emperor: LookAtTopDeckAndPutOnTop"} 

 Player 1 23:24:58 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":131,"particleType":6} 

 Player 1 23:25:00 $DISABLE_PARTICLE_EFFECT:  
{"cardId":131,"particleType":6} 

 Player 1 23:25:00 $LOG_ERROR:  
{"message":"\"Cannot read property 'getTarget' of undefined\"","stack":"\"TypeError: Cannot read property 'getTarget' of undefined\\n    at LookAtTopDeckAndPutOnTop.<anonymous> (src/project.dev.js:15968:34)\\n    at step (src/cocos2d-jsb.js:70997:23)\\n    at Object.next (src/cocos2d-jsb.js:70941:20)\\n    at src/cocos2d-jsb.js:70919:73\\n    at new Promise (<anonymous>)\\n    at 371.window.__awaiter (src/cocos2d-jsb.js:70899:16)\\n    at LookAtTopDeckAndPutOnTop.doEffect (src/project.dev.js:15952:16)\\n    at CardEffect.<anonymous> (src/project.dev.js:4878:40)\\n    at step (src/cocos2d-jsb.js:70997:23)\\n    at Object.next (src/cocos2d-jsb.js:70941:20)\""} 
//////Error From Player 1////
  

 Player 1 23:25:00 $LOG_ERROR:  
//////Error From Player 1////

 "\"Cannot read property 'getTarget' of undefined\""

 + "\"TypeError: Cannot read property 'getTarget' of undefined\
    at LookAtTopDeckAndPutOnTop.<anonymous> (src/project.dev.js:15968:34)\
    at step (src/cocos2d-jsb.js:70997:23)\
    at Object.next (src/cocos2d-jsb.js:70941:20)\
    at src/cocos2d-jsb.js:70919:73\
    at new Promise (<anonymous>)\
    at 371.window.__awaiter (src/cocos2d-jsb.js:70899:16)\
    at LookAtTopDeckAndPutOnTop.doEffect (src/project.dev.js:15952:16)\
    at CardEffect.<anonymous> (src/project.dev.js:4878:40)\
    at step (src/cocos2d-jsb.js:70997:23)\
    at Object.next (src/cocos2d-jsb.js:70941:20)\""

////// 
//////Error From Player 1////

 "\"Cannot read property 'getTarget' of undefined\""

 + "\"TypeError: Cannot read property 'getTarget' of undefined\
    at LookAtTopDeckAndPutOnTop.<anonymous> (src/project.dev.js:15968:34)\
    at step (src/cocos2d-jsb.js:70997:23)\
    at Object.next (src/cocos2d-jsb.js:70941:20)\
    at src/cocos2d-jsb.js:70919:73\
    at new Promise (<anonymous>)\
    at 371.window.__awaiter (src/cocos2d-jsb.js:70899:16)\
    at LookAtTopDeckAndPutOnTop.doEffect (src/project.dev.js:15952:16)\
    at CardEffect.<anonymous> (src/project.dev.js:4878:40)\
    at step (src/cocos2d-jsb.js:70997:23)\
    at Object.next (src/cocos2d-jsb.js:70941:20)\""

////// 

 Player 1 23:25:00 $REMOVE_FROM_PILE:  
{"cardId":131} 

 Player 1 23:25:00 $MOVE_CARD:  
{"moveIndex":12,"cardId":131,"placeID":301,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 23:25:00 $MOVE_CARD_END:  
{"moveIndex":12,"cardId":131,"flipIfFlipped":true,"playerId":1} 

 Player 1 23:25:00 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":131} 

 Player 1 23:25:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6 \n3:Player 1 play The Emperor: LookAtTopDeckAndPutOnTop"} 

 Player 1 23:25:00 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 23:25:00 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 1 23:25:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6"} 

 Player 1 23:25:00 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 23:25:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":72,"_text":"Remove After Resolve PlayLootCardStackEffect 10  "}} 

 Player 1 23:25:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6"} 

 Player 1 23:25:01 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":10,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 23:25:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":73,"_text":"Response Remove After Resolve PlayLootCardStackEffect 10"},"childOfId":72} 

 Player 1 23:25:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":74,"_text":"Wait For Response From Player 1 "},"childOfId":72} 

 Player 1 23:25:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:25:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6 \n3:Player 1 play The Emperor "} 

 Player 2 23:25:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6 \n3:Player 1 play The Emperor "} 

 Player 2 23:25:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6 \n3:Player 1 play The Emperor "} 

 Player 2 23:25:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6 \n3:Player 1 play The Emperor "} 

 Player 2 23:25:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6 \n3:Player 1 play The Emperor "} 

 Player 2 23:25:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6 \n3:Player 1 play The Emperor "} 

 Player 1 23:25:03 $ACTION_MASSAGE_REMOVE:  
{"id":74} 

 Player 1 23:25:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":75,"_text":"Wait For Response From Player 2 "},"childOfId":72} 

 Player 1 23:25:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 23:25:03 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 1 23:25:03 $ACTION_MASSAGE_REMOVE:  
{"id":72} 

 Player 2 23:25:06 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 23:25:06 $ACTION_MASSAGE_REMOVE:  
{"id":75} 

 Player 1 23:25:06 $ACTION_MASSAGE_REMOVE:  
{"id":73} 

 Player 1 23:25:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":76,"_text":"Resolve ActivateItem 8 "}} 

 Player 1 23:25:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6"} 

 Player 1 23:25:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6"} 

 Player 1 23:25:06 $DO_STACK_EFFECT:  
{"originPlayerId":1,"playerId":2,"currentStack":[{"entityId":7,"creatorCardId":290,"numberRolled":1,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":264},{"entityId":8,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 

 Player 2 23:25:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6"} 

 Player 2 23:25:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6"} 

 Player 2 23:25:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6"} 

 Player 2 23:25:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6"} 

 Player 2 23:25:06 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":291,"particleType":6} 

 Player 2 23:25:08 $DISABLE_PARTICLE_EFFECT:  
{"cardId":291,"particleType":6} 

 Player 2 23:25:08 $ROLL_DICE:  
{"playerId":2} 

 Player 2 23:25:10 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":2} 

 Player 2 23:25:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6"} 

 Player 2 23:25:10 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 23:25:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6"} 

 Player 2 23:25:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6"} 

 Player 2 23:25:10 $FINISH_DO_STACK_EFFECT:  
{"playerId":1,"newStack":[{"entityId":7,"creatorCardId":290,"numberRolled":2,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":264},{"entityId":8,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 

 Player 1 23:25:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6"} 

 Player 1 23:25:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6"} 

 Player 1 23:25:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6"} 

 Player 1 23:25:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6"} 

 Player 1 23:25:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6"} 

 Player 1 23:25:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6"} 

 Player 1 23:25:10 $ACTION_MASSAGE_REMOVE:  
{"id":76} 

 Player 1 23:25:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6"} 

 Player 1 23:25:10 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":290,"numberRolled":1,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":264}} 

 Player 1 23:25:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6"} 

 Player 1 23:25:10 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":290,"numberRolled":2,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":264}} 

 Player 1 23:25:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6"} 

 Player 1 23:25:10 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 23:25:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6"} 

 Player 1 23:25:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6"} 

 Player 1 23:25:11 $REPLACE_STACK:  
{"currentStack":[{"entityId":7,"creatorCardId":290,"numberRolled":2,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":264},{"entityId":8,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 

 Player 1 23:25:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster>"} 

 Player 1 23:25:11 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 23:25:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":77,"_text":"Remove After Resolve ActivateItem 8  "}} 

 Player 1 23:25:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster>"} 

 Player 1 23:25:11 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":8,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 23:25:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":78,"_text":"Response Remove After Resolve ActivateItem 8"},"childOfId":77} 

 Player 1 23:25:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":79,"_text":"Wait For Response From Player 2 "},"childOfId":77} 

 Player 1 23:25:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 23:25:11 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 23:25:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6"} 

 Player 2 23:25:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6"} 

 Player 2 23:25:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6"} 

 Player 2 23:25:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6"} 

 Player 2 23:25:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6"} 

 Player 2 23:25:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6"} 

 Player 2 23:25:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6"} 

 Player 2 23:25:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6"} 

 Player 2 23:25:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6"} 

 Player 2 23:25:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6"} 

 Player 2 23:25:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6"} 

 Player 2 23:25:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6"} 

 Player 2 23:25:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6"} 

 Player 2 23:25:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated The D6"} 

 Player 1 23:25:13 $ACTION_MASSAGE_REMOVE:  
{"id":77} 

 Player 2 23:26:41 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 23:26:41 $ACTION_MASSAGE_REMOVE:  
{"id":79} 

 Player 1 23:26:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":80,"_text":"Wait For Response From Player 1 "},"childOfId":77} 

 Player 1 23:26:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:26:44 $RECHARGE_ITEM:  
{"cardId":296} 

 Player 1 23:26:44 $RECHARGE_ITEM:  
{"cardId":297} 

 Player 1 23:27:07 $ACTION_MASSAGE_REMOVE:  
{"id":80} 

 Player 1 23:27:07 $ACTION_MASSAGE_REMOVE:  
{"id":78} 

 Player 1 23:27:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":81,"_text":"Resolve AttackRoll 7 "}} 

 Player 1 23:27:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster>"} 

 Player 1 23:27:07 $DO_STACK_EFFECT:  
{"originPlayerId":1,"playerId":2,"currentStack":[{"entityId":7,"creatorCardId":290,"numberRolled":2,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":264}]} 

 Player 2 23:27:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster>"} 

 Player 2 23:27:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster>"} 

 Player 2 23:27:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":82,"_text":"Added 0 to original roll"}} 

 Player 2 23:27:07 $NEXT_STACK_ID:  

 Player 2 23:27:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster>"} 

 Player 2 23:27:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:27:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 2 is rolling against Pooter<Monster>"} 

 Player 2 23:27:07 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":11,"creatorCardId":290,"entityToDoDamageCardId":264,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 23:27:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 2 is rolling against Pooter<Monster>"} 

 Player 2 23:27:07 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":290,"numberRolled":2,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":264}} 

 Player 2 23:27:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 2 is rolling against Pooter<Monster>"} 

 Player 2 23:27:07 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":290,"entityToDoDamageCardId":264,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 23:27:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 2 is rolling against Pooter<Monster>"} 

 Player 2 23:27:07 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":290,"numberRolled":2,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":264}} 

 Player 2 23:27:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 2 is rolling against Pooter<Monster>"} 

 Player 2 23:27:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 2 is rolling against Pooter<Monster>"} 

 Player 2 23:27:08 $REPLACE_STACK:  
{"currentStack":[{"entityId":11,"creatorCardId":290,"entityToDoDamageCardId":264,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":7,"creatorCardId":290,"numberRolled":2,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":264}]} 

 Player 2 23:27:08 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":2},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":7,"originStackId":7},"isAfterActivation":true,"index":7} 

 Player 2 23:27:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 2 is rolling against Pooter<Monster>"} 

 Player 2 23:27:08 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":290,"numberRolled":2,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":264}} 

 Player 2 23:27:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 2 is rolling against Pooter<Monster>"} 

 Player 2 23:27:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 2 is rolling against Pooter<Monster>"} 

 Player 2 23:27:08 $FINISH_DO_STACK_EFFECT:  
{"playerId":1,"newStack":[{"entityId":11,"creatorCardId":290,"entityToDoDamageCardId":264,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":7,"creatorCardId":290,"numberRolled":2,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":264}]} 

 Player 1 23:27:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster>"} 

 Player 1 23:27:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster>"} 

 Player 1 23:27:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac"} 

 Player 1 23:27:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac"} 

 Player 1 23:27:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac"} 

 Player 1 23:27:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac"} 

 Player 1 23:27:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac"} 

 Player 1 23:27:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac"} 

 Player 1 23:27:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac"} 

 Player 1 23:27:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac"} 

 Player 1 23:27:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac"} 

 Player 1 23:27:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac"} 

 Player 1 23:27:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 2 is rolling against Pooter<Monster>"} 

 Player 1 23:27:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 2 is rolling against Pooter<Monster>"} 

 Player 1 23:27:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 2 is rolling against Pooter<Monster>"} 

 Player 1 23:27:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 2 is rolling against Pooter<Monster>"} 

 Player 1 23:27:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 2 is rolling against Pooter<Monster>"} 

 Player 1 23:27:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 2 is rolling against Pooter<Monster>"} 

 Player 1 23:27:08 $ACTION_MASSAGE_REMOVE:  
{"id":81} 

 Player 1 23:27:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 2 is rolling against Pooter<Monster>"} 

 Player 1 23:27:08 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":290,"entityToDoDamageCardId":264,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 23:27:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 2 is rolling against Pooter<Monster>"} 

 Player 1 23:27:08 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":290,"entityToDoDamageCardId":264,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 23:27:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 2 is rolling against Pooter<Monster>"} 

 Player 1 23:27:08 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":290,"numberRolled":2,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":264}} 

 Player 1 23:27:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 2 is rolling against Pooter<Monster>"} 

 Player 1 23:27:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 2 is rolling against Pooter<Monster>"} 

 Player 1 23:27:08 $REPLACE_STACK:  
{"currentStack":[{"entityId":11,"creatorCardId":290,"entityToDoDamageCardId":264,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":7,"creatorCardId":290,"numberRolled":2,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":264}]} 

 Player 1 23:27:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac"} 

 Player 1 23:27:08 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":290,"numberRolled":2,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":264}} 

 Player 1 23:27:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":83,"_text":"Remove After Resolve AttackRoll 7  "}} 

 Player 1 23:27:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac"} 

 Player 1 23:27:08 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":290,"numberRolled":2,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":264}} 

 Player 1 23:27:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":84,"_text":"Response Remove After Resolve AttackRoll 7"},"childOfId":83} 

 Player 1 23:27:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":85,"_text":"Wait For Response From Player 2 "},"childOfId":83} 

 Player 1 23:27:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 23:27:09 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 23:27:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 2 is rolling against Pooter<Monster>"} 

 Player 2 23:27:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 2 is rolling against Pooter<Monster>"} 

 Player 2 23:27:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 2 is rolling against Pooter<Monster>"} 

 Player 2 23:27:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 2 is rolling against Pooter<Monster>"} 

 Player 2 23:27:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 2 is rolling against Pooter<Monster>"} 

 Player 2 23:27:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 2 is rolling against Pooter<Monster>"} 

 Player 2 23:27:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 2 is rolling against Pooter<Monster>"} 

 Player 2 23:27:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 2 is rolling against Pooter<Monster>"} 

 Player 2 23:27:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 2 is rolling against Pooter<Monster>"} 

 Player 2 23:27:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 2 is rolling against Pooter<Monster>"} 

 Player 2 23:27:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 2 is rolling against Pooter<Monster>"} 

 Player 2 23:27:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 2 is rolling against Pooter<Monster>"} 

 Player 2 23:27:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 2 is rolling against Pooter<Monster>"} 

 Player 2 23:27:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 2 is rolling against Pooter<Monster>"} 

 Player 2 23:27:10 $ACTION_MASSAGE_REMOVE:  
{"id":82} 

 Player 1 23:27:11 $ACTION_MASSAGE_REMOVE:  
{"id":83} 

 Player 2 23:27:12 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 23:27:12 $ACTION_MASSAGE_REMOVE:  
{"id":85} 

 Player 1 23:27:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":86,"_text":"Wait For Response From Player 1 "},"childOfId":83} 

 Player 1 23:27:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:27:16 $SHOW_DECISION:  
{"startCardId":296,"endCardId":296} 

 Player 1 23:27:19 $NEXT_STACK_ID:  

 Player 1 23:27:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac"} 

 Player 1 23:27:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 1 activated Samson"} 

 Player 1 23:27:19 $ADD_TO_STACK:  
{"stackEffect":{"entityId":12,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 23:27:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 1 activated Samson"} 

 Player 1 23:27:19 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":12,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 23:27:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":87,"_text":"Add ActivateItem 12 "}} 

 Player 2 23:27:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac"} 

 Player 2 23:27:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac"} 

 Player 2 23:27:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 1 activated Samson"} 

 Player 2 23:27:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 1 activated Samson"} 

 Player 1 23:27:22 $SHOW_DECISION:  
{"startCardId":296,"endCardId":66,"flipEndCard":true} 

 Player 1 23:27:25 $USE_ITEM:  
{"cardId":296} 

 Player 1 23:27:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 23:27:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 1 activated Samson"} 

 Player 1 23:27:25 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":12,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 23:27:25 $ACTION_MASSAGE_REMOVE:  
{"id":87} 

 Player 1 23:27:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":88,"_text":"Response Adding ActivateItem 12"},"childOfId":87} 

 Player 1 23:27:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":89,"_text":"Wait For Response From Player 2 "},"childOfId":87} 

 Player 1 23:27:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 23:27:25 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 23:27:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 1 activated Samson"} 

 Player 2 23:27:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 1 activated Samson"} 

 Player 2 23:27:31 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 23:27:31 $ACTION_MASSAGE_REMOVE:  
{"id":89} 

 Player 1 23:27:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":90,"_text":"Wait For Response From Player 1 "},"childOfId":87} 

 Player 1 23:27:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:27:34 $ACTION_MASSAGE_REMOVE:  
{"id":90} 

 Player 1 23:27:34 $ACTION_MASSAGE_REMOVE:  
{"id":88} 

 Player 1 23:27:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":91,"_text":"Resolve ActivateItem 12 "}} 

 Player 1 23:27:34 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":296,"particleType":6} 

 Player 1 23:27:36 $DISABLE_PARTICLE_EFFECT:  
{"cardId":296,"particleType":6} 

 Player 1 23:27:36 $NEXT_STACK_ID:  

 Player 1 23:27:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 1 activated Samson"} 

 Player 1 23:27:36 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":66} 

 Player 1 23:27:36 $MOVE_CARD:  
{"moveIndex":13,"cardId":66,"placeID":300,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 23:27:37 $MOVE_CARD_END:  
{"moveIndex":13,"cardId":66,"flipIfFlipped":true,"playerId":1} 

 Player 1 23:27:37 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":66} 

 Player 1 23:27:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 1 play 4 Cents(6): addMoney \n3:Player 1 activated Samson"} 

 Player 1 23:27:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 23:27:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 1 play 4 Cents(6): addMoney \n3:Player 1 activated Samson"} 

 Player 1 23:27:37 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":13,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":66,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":66,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 23:27:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 1 play 4 Cents(6): addMoney \n3:Player 1 activated Samson"} 

 Player 1 23:27:37 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":290,"entityToDoDamageCardId":264,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 23:27:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 1 play 4 Cents(6): addMoney \n3:Player 1 activated Samson"} 

 Player 1 23:27:37 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":290,"entityToDoDamageCardId":264,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 23:27:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 1 play 4 Cents(6): addMoney \n3:Player 1 activated Samson"} 

 Player 1 23:27:37 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":13,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":66,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":66,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 23:27:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 1 play 4 Cents(6): addMoney \n3:Player 1 activated Samson"} 

 Player 1 23:27:37 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":12,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 23:27:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 1 play 4 Cents(6): addMoney \n3:Player 1 activated Samson"} 

 Player 1 23:27:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 1 play 4 Cents(6): addMoney \n3:Player 1 activated Samson"} 

 Player 1 23:27:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 1 play 4 Cents(6): addMoney \n3:Player 1 activated Samson"} 

 Player 1 23:27:37 $REPLACE_STACK:  
{"currentStack":[{"entityId":11,"creatorCardId":290,"entityToDoDamageCardId":264,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":13,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":66,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":66,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":12,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 

 Player 1 23:27:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 1 play 4 Cents(6): addMoney \n3:Player 1 activated Samson"} 

 Player 1 23:27:37 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":12,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 23:27:37 $ACTION_MASSAGE_REMOVE:  
{"id":91} 

 Player 1 23:27:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 1 play 4 Cents(6): addMoney"} 

 Player 1 23:27:37 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":12,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 23:27:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":92,"_text":"Remove After Resolve ActivateItem 12  "}} 

 Player 1 23:27:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 1 play 4 Cents(6): addMoney"} 

 Player 1 23:27:38 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":12,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 23:27:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":93,"_text":"Response Remove After Resolve ActivateItem 12"},"childOfId":92} 

 Player 1 23:27:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":94,"_text":"Wait For Response From Player 2 "},"childOfId":92} 

 Player 1 23:27:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 23:27:38 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 23:27:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 1 activated Samson"} 

 Player 2 23:27:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 1 activated Samson"} 

 Player 2 23:27:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 1 play 4 Cents(6) "} 

 Player 2 23:27:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 1 play 4 Cents(6) "} 

 Player 2 23:27:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 1 play 4 Cents(6) "} 

 Player 2 23:27:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 1 play 4 Cents(6) "} 

 Player 2 23:27:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 1 play 4 Cents(6) "} 

 Player 2 23:27:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 1 play 4 Cents(6) "} 

 Player 2 23:27:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 1 play 4 Cents(6) "} 

 Player 2 23:27:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 1 play 4 Cents(6) "} 

 Player 2 23:27:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 1 play 4 Cents(6) "} 

 Player 2 23:27:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 1 play 4 Cents(6) "} 

 Player 2 23:27:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 1 play 4 Cents(6) "} 

 Player 2 23:27:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 1 play 4 Cents(6) "} 

 Player 2 23:27:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 1 play 4 Cents(6) "} 

 Player 2 23:27:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 1 play 4 Cents(6) "} 

 Player 2 23:27:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 1 play 4 Cents(6)  \n3:Player 1 activated Samson"} 

 Player 2 23:27:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 1 play 4 Cents(6)  \n3:Player 1 activated Samson"} 

 Player 2 23:27:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 1 play 4 Cents(6)  \n3:Player 1 activated Samson"} 

 Player 2 23:27:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 1 play 4 Cents(6)  \n3:Player 1 activated Samson"} 

 Player 2 23:27:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 1 play 4 Cents(6)  \n3:Player 1 activated Samson"} 

 Player 2 23:27:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 1 play 4 Cents(6)  \n3:Player 1 activated Samson"} 

 Player 2 23:27:39 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 2 23:27:39 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 2 23:27:39 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 2 23:27:39 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 2 23:27:39 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 2 23:27:39 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 2 23:27:39 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 2 23:27:39 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 2 23:27:39 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 23:27:39 $ACTION_MASSAGE_REMOVE:  
{"id":94} 

 Player 1 23:27:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":95,"_text":"Wait For Response From Player 1 "},"childOfId":92} 

 Player 1 23:27:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:27:40 $ACTION_MASSAGE_REMOVE:  
{"id":92} 

 Player 1 23:27:45 $ACTION_MASSAGE_REMOVE:  
{"id":95} 

 Player 1 23:27:45 $ACTION_MASSAGE_REMOVE:  
{"id":93} 

 Player 1 23:27:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":96,"_text":"Resolve PlayLootCardStackEffect 13 "}} 

 Player 1 23:27:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 1 play 4 Cents(6): addMoney"} 

 Player 1 23:27:45 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":66,"particleType":6} 

 Player 1 23:27:47 $DISABLE_PARTICLE_EFFECT:  
{"cardId":66,"particleType":6} 

 Player 1 23:27:47 $SET_MONEY:  
{"playerId":1,"numOfCoins":7} 

 Player 1 23:27:47 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 1 23:27:47 $REMOVE_FROM_PILE:  
{"cardId":66} 

 Player 1 23:27:47 $MOVE_CARD:  
{"moveIndex":14,"cardId":66,"placeID":301,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 23:27:47 $MOVE_CARD_END:  
{"moveIndex":14,"cardId":66,"flipIfFlipped":true,"playerId":1} 

 Player 1 23:27:47 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":66} 

 Player 1 23:27:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 1 play 4 Cents(6): addMoney"} 

 Player 1 23:27:47 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":13,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":66,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 23:27:47 $ACTION_MASSAGE_REMOVE:  
{"id":96} 

 Player 1 23:27:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac"} 

 Player 1 23:27:47 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":13,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":66,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 23:27:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":97,"_text":"Remove After Resolve PlayLootCardStackEffect 13  "}} 

 Player 1 23:27:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac"} 

 Player 1 23:27:47 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":13,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":66,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 23:27:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":98,"_text":"Response Remove After Resolve PlayLootCardStackEffect 13"},"childOfId":97} 

 Player 1 23:27:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":99,"_text":"Wait For Response From Player 1 "},"childOfId":97} 

 Player 1 23:27:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:27:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 1 play 4 Cents(6) "} 

 Player 2 23:27:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 1 play 4 Cents(6) "} 

 Player 2 23:27:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 1 play 4 Cents(6) "} 

 Player 2 23:27:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 1 play 4 Cents(6) "} 

 Player 2 23:27:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 1 play 4 Cents(6) "} 

 Player 2 23:27:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac \n2:Player 1 play 4 Cents(6) "} 

 Player 1 23:27:50 $ACTION_MASSAGE_REMOVE:  
{"id":97} 

 Player 1 23:27:54 $ACTION_MASSAGE_REMOVE:  
{"id":99} 

 Player 1 23:27:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":100,"_text":"Wait For Response From Player 2 "},"childOfId":97} 

 Player 1 23:27:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 23:27:54 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 23:27:54 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 23:27:54 $ACTION_MASSAGE_REMOVE:  
{"id":100} 

 Player 1 23:27:54 $ACTION_MASSAGE_REMOVE:  
{"id":98} 

 Player 1 23:27:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":101,"_text":"Resolve CombatDamage 11 "}} 

 Player 1 23:27:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac"} 

 Player 1 23:27:54 $DO_STACK_EFFECT:  
{"originPlayerId":1,"playerId":2,"currentStack":[{"entityId":11,"creatorCardId":290,"entityToDoDamageCardId":264,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}]} 

 Player 2 23:27:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac"} 

 Player 2 23:27:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac"} 

 Player 2 23:27:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter 1 combat damage to Isaac"} 

 Player 2 23:27:54 $UPDATE_STACK_VIS:  
{"stackId":11,"text":"Pooter will deal 1 combat damage to Isaac"} 

 Player 2 23:27:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter 1 combat damage to Isaac"} 

 Player 2 23:27:54 $PLAYER_GET_HIT:  
{"playerId":2,"damage":1,"damageDealerId":264} 

 Player 2 23:27:54 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":264}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":8,"originStackId":-1},"isAfterActivation":true,"index":8} 

 Player 2 23:27:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter 1 combat damage to Isaac"} 

 Player 2 23:27:54 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":11,"creatorCardId":290,"entityToDoDamageCardId":264,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 23:27:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter 1 combat damage to Isaac"} 

 Player 2 23:27:54 $FINISH_DO_STACK_EFFECT:  
{"playerId":1,"newStack":[{"entityId":11,"creatorCardId":290,"entityToDoDamageCardId":264,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}]} 

 Player 1 23:27:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac"} 

 Player 1 23:27:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac"} 

 Player 1 23:27:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac"} 

 Player 1 23:27:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac"} 

 Player 1 23:27:54 $ACTION_MASSAGE_REMOVE:  
{"id":101} 

 Player 1 23:27:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac"} 

 Player 1 23:27:55 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":290,"entityToDoDamageCardId":264,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 23:27:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac"} 

 Player 1 23:27:55 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":290,"entityToDoDamageCardId":264,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 23:27:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac"} 

 Player 1 23:27:55 $REPLACE_STACK:  
{"currentStack":[{"entityId":11,"creatorCardId":290,"entityToDoDamageCardId":264,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}]} 

 Player 1 23:27:55 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:27:55 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":290,"entityToDoDamageCardId":264,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 23:27:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":102,"_text":"Remove After Resolve CombatDamage 11  "}} 

 Player 1 23:27:55 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:27:55 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":11,"creatorCardId":290,"entityToDoDamageCardId":264,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 23:27:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":103,"_text":"Response Remove After Resolve CombatDamage 11"},"childOfId":102} 

 Player 1 23:27:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":104,"_text":"Wait For Response From Player 2 "},"childOfId":102} 

 Player 1 23:27:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 23:27:55 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 23:27:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter 1 combat damage to Isaac"} 

 Player 2 23:27:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter 1 combat damage to Isaac"} 

 Player 2 23:27:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter 1 combat damage to Isaac"} 

 Player 2 23:27:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter 1 combat damage to Isaac"} 

 Player 2 23:27:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter 1 combat damage to Isaac"} 

 Player 2 23:27:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter 1 combat damage to Isaac"} 

 Player 2 23:27:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac"} 

 Player 2 23:27:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac"} 

 Player 2 23:27:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac"} 

 Player 2 23:27:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Isaac"} 

 Player 2 23:27:55 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 23:27:55 $ACTION_MASSAGE_REMOVE:  
{"id":104} 

 Player 1 23:27:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":105,"_text":"Wait For Response From Player 1 "},"childOfId":102} 

 Player 1 23:27:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:27:57 $ACTION_MASSAGE_REMOVE:  
{"id":105} 

 Player 1 23:27:57 $ACTION_MASSAGE_REMOVE:  
{"id":103} 

 Player 1 23:27:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":106,"_text":"Stack Was Emptied "}} 

 Player 1 23:27:57 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 23:27:57 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:27:57 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 23:27:57 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 23:27:58 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 23:27:58 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 23:27:58 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 23:27:58 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 23:27:58 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 23:27:58 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 23:27:58 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 23:27:58 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 23:27:58 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 23:27:58 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 23:27:58 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 23:27:58 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 23:27:58 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 1 23:27:58 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 23:27:58 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 1 23:27:58 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 1 23:27:58 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 1 23:27:58 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 1 23:27:58 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 1 23:27:58 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 1 23:27:58 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 1 23:27:58 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 1 23:27:58 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 1 23:27:58 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 1 23:27:58 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 1 23:27:58 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 1 23:27:58 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 1 23:27:58 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 1 23:27:58 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 1 23:27:58 $ACTION_MASSAGE_REMOVE:  
{"id":72} 

 Player 1 23:27:58 $ACTION_MASSAGE_REMOVE:  
{"id":76} 

 Player 1 23:27:58 $ACTION_MASSAGE_REMOVE:  
{"id":77} 

 Player 1 23:27:58 $ACTION_MASSAGE_REMOVE:  
{"id":81} 

 Player 1 23:27:58 $ACTION_MASSAGE_REMOVE:  
{"id":82} 

 Player 1 23:27:58 $ACTION_MASSAGE_REMOVE:  
{"id":83} 

 Player 1 23:27:58 $ACTION_MASSAGE_REMOVE:  
{"id":87} 

 Player 1 23:27:58 $ACTION_MASSAGE_REMOVE:  
{"id":91} 

 Player 1 23:27:58 $ACTION_MASSAGE_REMOVE:  
{"id":92} 

 Player 1 23:27:58 $ACTION_MASSAGE_REMOVE:  
{"id":96} 

 Player 1 23:27:58 $ACTION_MASSAGE_REMOVE:  
{"id":97} 

 Player 1 23:27:58 $ACTION_MASSAGE_REMOVE:  
{"id":101} 

 Player 1 23:27:58 $ACTION_MASSAGE_REMOVE:  
{"id":102} 

 Player 1 23:27:59 $ACTION_MASSAGE_REMOVE:  
{"id":106} 

 Player 1 23:27:59 $TURN_PLAYER_DO_STACK_EFFECT:  
{"playerId":2} 

 Player 1 23:27:59 $ACTION_MASSAGE_REMOVE:  
{"id":86} 

 Player 1 23:27:59 $ACTION_MASSAGE_REMOVE:  
{"id":84} 

 Player 1 23:27:59 $ACTION_MASSAGE_REMOVE:  
{"id":102} 

 Player 1 23:27:59 $ACTION_MASSAGE_REMOVE:  
{"id":106} 

 Player 2 23:28:05 $NEXT_STACK_ID:  

 Player 2 23:28:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:28:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster>"} 

 Player 2 23:28:05 $ADD_TO_STACK:  
{"stackEffect":{"entityId":14,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":264}} 

 Player 2 23:28:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster>"} 

 Player 2 23:28:05 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":14,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":264}} 

 Player 2 23:28:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":107,"_text":"Add AttackRoll 14 "}} 

 Player 2 23:28:05 $ROLL_DICE:  
{"playerId":2} 

 Player 1 23:28:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:28:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:28:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster>"} 

 Player 1 23:28:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster>"} 

 Player 2 23:28:06 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":5} 

 Player 2 23:28:06 $UPDATE_STACK_VIS:  
{"stackId":14,"text":"player rolled 5 vs Pooter<Monster>"} 

 Player 2 23:28:06 $SHOW_DICE_ROLL:  
{"stackId":14} 

 Player 2 23:28:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 5 vs Pooter<Monster>"} 

 Player 2 23:28:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:28:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 5 vs Pooter<Monster>"} 

 Player 2 23:28:09 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":14,"creatorCardId":290,"numberRolled":5,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":264}} 

 Player 2 23:28:10 $ACTION_MASSAGE_REMOVE:  
{"id":107} 

 Player 2 23:28:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":108,"_text":"Response Adding AttackRoll 14"},"childOfId":107} 

 Player 2 23:28:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":109,"_text":"Wait For Response From Player 2 "},"childOfId":107} 

 Player 2 23:28:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:28:10 $ACTION_MASSAGE_REMOVE:  
{"id":109} 

 Player 2 23:28:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":110,"_text":"Wait For Response From Player 1 "},"childOfId":107} 

 Player 2 23:28:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:28:10 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:28:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster>"} 

 Player 1 23:28:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster>"} 

 Player 1 23:28:10 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:28:10 $ACTION_MASSAGE_REMOVE:  
{"id":110} 

 Player 2 23:28:10 $ACTION_MASSAGE_REMOVE:  
{"id":108} 

 Player 2 23:28:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":111,"_text":"Resolve AttackRoll 14 "}} 

 Player 2 23:28:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":112,"_text":"Added 0 to original roll"}} 

 Player 2 23:28:10 $NEXT_STACK_ID:  

 Player 2 23:28:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 5 vs Pooter<Monster>"} 

 Player 2 23:28:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:28:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Pooter \n2:Player 2 rolled 5 vs Pooter<Monster>"} 

 Player 2 23:28:10 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":15,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":264,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 23:28:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Pooter \n2:Player 2 rolled 5 vs Pooter<Monster>"} 

 Player 2 23:28:10 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":14,"creatorCardId":290,"numberRolled":5,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":264}} 

 Player 2 23:28:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Pooter \n2:Player 2 rolled 5 vs Pooter<Monster>"} 

 Player 2 23:28:10 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":15,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":264,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 23:28:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Pooter \n2:Player 2 rolled 5 vs Pooter<Monster>"} 

 Player 2 23:28:10 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":14,"creatorCardId":290,"numberRolled":5,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":264}} 

 Player 2 23:28:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Pooter \n2:Player 2 rolled 5 vs Pooter<Monster>"} 

 Player 2 23:28:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Pooter \n2:Player 2 rolled 5 vs Pooter<Monster>"} 

 Player 2 23:28:10 $REPLACE_STACK:  
{"currentStack":[{"entityId":15,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":264,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":14,"creatorCardId":290,"numberRolled":5,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":264}]} 

 Player 2 23:28:10 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":1},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":9,"originStackId":14},"isAfterActivation":true,"index":9} 

 Player 2 23:28:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Pooter \n2:Player 2 rolled 5 vs Pooter<Monster>"} 

 Player 2 23:28:10 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":14,"creatorCardId":290,"numberRolled":5,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":264}} 

 Player 2 23:28:10 $ACTION_MASSAGE_REMOVE:  
{"id":111} 

 Player 2 23:28:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Pooter"} 

 Player 2 23:28:10 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":14,"creatorCardId":290,"numberRolled":5,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":264}} 

 Player 2 23:28:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":113,"_text":"Remove After Resolve AttackRoll 14  "}} 

 Player 2 23:28:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Pooter"} 

 Player 2 23:28:10 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":14,"creatorCardId":290,"numberRolled":5,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":264}} 

 Player 2 23:28:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":114,"_text":"Response Remove After Resolve AttackRoll 14"},"childOfId":113} 

 Player 2 23:28:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":115,"_text":"Wait For Response From Player 2 "},"childOfId":113} 

 Player 2 23:28:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:28:10 $ACTION_MASSAGE_REMOVE:  
{"id":115} 

 Player 2 23:28:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":116,"_text":"Wait For Response From Player 1 "},"childOfId":113} 

 Player 2 23:28:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:28:10 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:28:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster>"} 

 Player 1 23:28:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster>"} 

 Player 1 23:28:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Pooter"} 

 Player 1 23:28:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Pooter"} 

 Player 1 23:28:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Pooter"} 

 Player 1 23:28:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Pooter"} 

 Player 1 23:28:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Pooter"} 

 Player 1 23:28:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Pooter"} 

 Player 1 23:28:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Pooter"} 

 Player 1 23:28:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Pooter"} 

 Player 1 23:28:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Pooter"} 

 Player 1 23:28:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Pooter"} 

 Player 1 23:28:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Pooter \n2:Player 2 is rolling against Pooter<Monster>"} 

 Player 1 23:28:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Pooter \n2:Player 2 is rolling against Pooter<Monster>"} 

 Player 1 23:28:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Pooter \n2:Player 2 is rolling against Pooter<Monster>"} 

 Player 1 23:28:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Pooter \n2:Player 2 is rolling against Pooter<Monster>"} 

 Player 1 23:28:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Pooter \n2:Player 2 is rolling against Pooter<Monster>"} 

 Player 1 23:28:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Pooter \n2:Player 2 is rolling against Pooter<Monster>"} 

 Player 1 23:28:11 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:28:11 $ACTION_MASSAGE_REMOVE:  
{"id":116} 

 Player 2 23:28:11 $ACTION_MASSAGE_REMOVE:  
{"id":114} 

 Player 2 23:28:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":117,"_text":"Resolve CombatDamage 15 "}} 

 Player 2 23:28:11 $UPDATE_STACK_VIS:  
{"stackId":15,"text":"Isaac will deal 1 combat damage to Pooter"} 

 Player 2 23:28:11 $MONSTER_GET_DAMAGED:  
{"cardId":264,"hpLeft":1,"damageDealerId":290} 

 Player 2 23:28:11 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":290}],"result":null,"preventMethod":false,"methodScopeId":264,"scopeIsPlayer":false,"index":10,"originStackId":-1},"isAfterActivation":true,"index":10} 

 Player 2 23:28:11 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":5},{"type":0,"number":290},{"type":0,"number":264}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":11,"originStackId":15},"isAfterActivation":true,"index":11} 

 Player 2 23:28:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Pooter"} 

 Player 2 23:28:11 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":15,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":264,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 23:28:11 $ACTION_MASSAGE_REMOVE:  
{"id":117} 

 Player 2 23:28:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:28:11 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":15,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":264,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 23:28:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":118,"_text":"Remove After Resolve CombatDamage 15  "}} 

 Player 2 23:28:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:28:11 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":15,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":264,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 23:28:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":119,"_text":"Response Remove After Resolve CombatDamage 15"},"childOfId":118} 

 Player 2 23:28:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":120,"_text":"Wait For Response From Player 1 "},"childOfId":118} 

 Player 2 23:28:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:28:11 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:28:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Pooter"} 

 Player 1 23:28:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Pooter"} 

 Player 1 23:28:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Pooter"} 

 Player 1 23:28:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Pooter"} 

 Player 1 23:28:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Pooter"} 

 Player 1 23:28:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Pooter"} 

 Player 1 23:28:12 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:28:12 $ACTION_MASSAGE_REMOVE:  
{"id":120} 

 Player 2 23:28:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":121,"_text":"Wait For Response From Player 2 "},"childOfId":118} 

 Player 2 23:28:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:28:12 $ACTION_MASSAGE_REMOVE:  
{"id":121} 

 Player 2 23:28:12 $ACTION_MASSAGE_REMOVE:  
{"id":119} 

 Player 2 23:28:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":122,"_text":"Stack Was Emptied "}} 

 Player 2 23:28:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:28:12 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 23:28:12 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 23:28:12 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 23:28:12 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 23:28:12 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 23:28:12 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 23:28:12 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 23:28:12 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 23:28:12 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 23:28:12 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 23:28:12 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 23:28:12 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 23:28:12 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 23:28:12 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 23:28:12 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 23:28:12 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 23:28:12 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 23:28:12 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 23:28:12 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 23:28:12 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 23:28:12 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 23:28:12 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 2 23:28:12 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 2 23:28:12 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 2 23:28:12 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 2 23:28:12 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 2 23:28:12 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 2 23:28:12 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 2 23:28:12 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 2 23:28:12 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 2 23:28:12 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 2 23:28:12 $ACTION_MASSAGE_REMOVE:  
{"id":72} 

 Player 2 23:28:12 $ACTION_MASSAGE_REMOVE:  
{"id":76} 

 Player 2 23:28:12 $ACTION_MASSAGE_REMOVE:  
{"id":77} 

 Player 2 23:28:13 $ACTION_MASSAGE_REMOVE:  
{"id":81} 

 Player 2 23:28:13 $ACTION_MASSAGE_REMOVE:  
{"id":82} 

 Player 2 23:28:13 $ACTION_MASSAGE_REMOVE:  
{"id":83} 

 Player 2 23:28:13 $ACTION_MASSAGE_REMOVE:  
{"id":87} 

 Player 2 23:28:13 $ACTION_MASSAGE_REMOVE:  
{"id":91} 

 Player 2 23:28:13 $ACTION_MASSAGE_REMOVE:  
{"id":92} 

 Player 2 23:28:13 $ACTION_MASSAGE_REMOVE:  
{"id":96} 

 Player 2 23:28:13 $ACTION_MASSAGE_REMOVE:  
{"id":97} 

 Player 2 23:28:13 $ACTION_MASSAGE_REMOVE:  
{"id":101} 

 Player 2 23:28:13 $ACTION_MASSAGE_REMOVE:  
{"id":102} 

 Player 2 23:28:13 $ACTION_MASSAGE_REMOVE:  
{"id":106} 

 Player 2 23:28:13 $ACTION_MASSAGE_REMOVE:  
{"id":107} 

 Player 2 23:28:13 $ACTION_MASSAGE_REMOVE:  
{"id":111} 

 Player 2 23:28:13 $ACTION_MASSAGE_REMOVE:  
{"id":112} 

 Player 2 23:28:13 $ACTION_MASSAGE_REMOVE:  
{"id":113} 

 Player 2 23:28:13 $ACTION_MASSAGE_REMOVE:  
{"id":117} 

 Player 2 23:28:13 $ACTION_MASSAGE_REMOVE:  
{"id":118} 

 Player 2 23:28:13 $ACTION_MASSAGE_REMOVE:  
{"id":122} 

 Player 2 23:28:13 $ACTION_MASSAGE_REMOVE:  
{"id":112} 

 Player 2 23:28:13 $ACTION_MASSAGE_REMOVE:  
{"id":113} 

 Player 2 23:28:13 $ACTION_MASSAGE_REMOVE:  
{"id":122} 

 Player 2 23:28:14 $ACTION_MASSAGE_REMOVE:  
{"id":118} 

 Player 2 23:28:14 $NEXT_STACK_ID:  

 Player 2 23:28:14 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:28:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster>"} 

 Player 2 23:28:14 $ADD_TO_STACK:  
{"stackEffect":{"entityId":16,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":264}} 

 Player 2 23:28:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster>"} 

 Player 2 23:28:14 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":16,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":264}} 

 Player 2 23:28:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":123,"_text":"Add AttackRoll 16 "}} 

 Player 2 23:28:14 $ROLL_DICE:  
{"playerId":2} 

 Player 1 23:28:14 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:28:14 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:28:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster>"} 

 Player 1 23:28:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster>"} 

 Player 2 23:28:16 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":2} 

 Player 2 23:28:16 $UPDATE_STACK_VIS:  
{"stackId":16,"text":"player rolled 2 vs Pooter<Monster>"} 

 Player 2 23:28:16 $SHOW_DICE_ROLL:  
{"stackId":16} 

 Player 2 23:28:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 2 vs Pooter<Monster>"} 

 Player 2 23:28:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:28:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 2 vs Pooter<Monster>"} 

 Player 2 23:28:19 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":16,"creatorCardId":290,"numberRolled":2,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":264}} 

 Player 2 23:28:19 $ACTION_MASSAGE_REMOVE:  
{"id":123} 

 Player 2 23:28:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":124,"_text":"Response Adding AttackRoll 16"},"childOfId":123} 

 Player 2 23:28:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":125,"_text":"Wait For Response From Player 2 "},"childOfId":123} 

 Player 2 23:28:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 23:28:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster>"} 

 Player 1 23:28:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster>"} 

 Player 2 23:28:25 $SHOW_DECISION:  
{"startCardId":290,"endCardId":290} 

 Player 2 23:28:28 $NEXT_STACK_ID:  

 Player 2 23:28:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 2 vs Pooter<Monster>"} 

 Player 2 23:28:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 2 vs Pooter<Monster> \n2:Player 2 activated Isaac"} 

 Player 2 23:28:28 $ADD_TO_STACK:  
{"stackEffect":{"entityId":17,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 23:28:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 2 vs Pooter<Monster> \n2:Player 2 activated Isaac"} 

 Player 2 23:28:28 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":17,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 23:28:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":126,"_text":"Add ActivateItem 17 "}} 

 Player 1 23:28:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster>"} 

 Player 1 23:28:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster>"} 

 Player 1 23:28:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated Isaac"} 

 Player 1 23:28:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated Isaac"} 

 Player 2 23:28:31 $SHOW_DECISION:  
{"startCardId":290,"endCardId":92,"flipEndCard":true} 

 Player 2 23:28:34 $USE_ITEM:  
{"cardId":290} 

 Player 2 23:28:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:28:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 2 vs Pooter<Monster> \n2:Player 2 activated Isaac"} 

 Player 2 23:28:34 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":17,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 23:28:34 $ACTION_MASSAGE_REMOVE:  
{"id":126} 

 Player 2 23:28:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":127,"_text":"Response Adding ActivateItem 17"},"childOfId":126} 

 Player 2 23:28:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":128,"_text":"Wait For Response From Player 2 "},"childOfId":126} 

 Player 2 23:28:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:28:34 $ACTION_MASSAGE_REMOVE:  
{"id":128} 

 Player 2 23:28:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":129,"_text":"Wait For Response From Player 1 "},"childOfId":126} 

 Player 2 23:28:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:28:34 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:28:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated Isaac"} 

 Player 1 23:28:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated Isaac"} 

 Player 1 23:28:40 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":true} 

 Player 1 23:28:40 $SHOW_DECISION:  
{"startCardId":296,"endCardId":297} 

 Player 2 23:28:40 $ACTION_MASSAGE_REMOVE:  
{"id":129} 

 Player 2 23:28:40 $ACTION_MASSAGE_REMOVE:  
{"id":127} 

 Player 2 23:28:40 $ACTION_MASSAGE_REMOVE:  
{"id":125} 

 Player 2 23:28:40 $ACTION_MASSAGE_REMOVE:  
{"id":124} 

 Player 1 23:28:43 $NEXT_STACK_ID:  

 Player 1 23:28:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated Isaac"} 

 Player 1 23:28:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated Isaac \n3:Player 1 activated Blood Lust"} 

 Player 1 23:28:43 $ADD_TO_STACK:  
{"stackEffect":{"entityId":18,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":297,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 23:28:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated Isaac \n3:Player 1 activated Blood Lust"} 

 Player 1 23:28:43 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":18,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":297,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 23:28:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":130,"_text":"Add ActivateItem 18 "}} 

 Player 2 23:28:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 2 vs Pooter<Monster> \n2:Player 2 activated Isaac"} 

 Player 2 23:28:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 2 vs Pooter<Monster> \n2:Player 2 activated Isaac"} 

 Player 2 23:28:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 2 vs Pooter<Monster> \n2:Player 2 activated Isaac \n3:Player 1 activated Blood Lust"} 

 Player 2 23:28:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 2 vs Pooter<Monster> \n2:Player 2 activated Isaac \n3:Player 1 activated Blood Lust"} 

 Player 1 23:28:44 $SHOW_DECISION:  
{"startCardId":297,"endCardId":264} 

 Player 1 23:28:47 $USE_ITEM:  
{"cardId":297} 

 Player 1 23:28:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 23:28:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated Isaac \n3:Player 1 activated Blood Lust"} 

 Player 1 23:28:47 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":18,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":297,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 23:28:47 $ACTION_MASSAGE_REMOVE:  
{"id":130} 

 Player 1 23:28:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":131,"_text":"Response Adding ActivateItem 18"},"childOfId":130} 

 Player 1 23:28:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":132,"_text":"Wait For Response From Player 2 "},"childOfId":130} 

 Player 1 23:28:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 23:28:47 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 23:28:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 2 vs Pooter<Monster> \n2:Player 2 activated Isaac \n3:Player 1 activated Blood Lust"} 

 Player 2 23:28:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 2 vs Pooter<Monster> \n2:Player 2 activated Isaac \n3:Player 1 activated Blood Lust"} 

 Player 2 23:28:47 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 23:28:47 $ACTION_MASSAGE_REMOVE:  
{"id":132} 

 Player 1 23:28:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":133,"_text":"Wait For Response From Player 1 "},"childOfId":130} 

 Player 1 23:28:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:28:47 $ACTION_MASSAGE_REMOVE:  
{"id":133} 

 Player 1 23:28:47 $ACTION_MASSAGE_REMOVE:  
{"id":131} 

 Player 1 23:28:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":134,"_text":"Resolve ActivateItem 18 "}} 

 Player 1 23:28:47 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":297,"particleType":6} 

 Player 1 23:28:49 $DISABLE_PARTICLE_EFFECT:  
{"cardId":297,"particleType":6} 

 Player 1 23:28:49 $MONSTER_GAIN_DMG:  
{"cardId":264,"DMGToGain":1} 

 Player 1 23:28:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated Isaac \n3:Player 1 activated Blood Lust"} 

 Player 1 23:28:49 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":18,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":297,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 23:28:49 $ACTION_MASSAGE_REMOVE:  
{"id":134} 

 Player 1 23:28:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated Isaac"} 

 Player 1 23:28:49 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":18,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":297,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 23:28:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":135,"_text":"Remove After Resolve ActivateItem 18  "}} 

 Player 1 23:28:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated Isaac"} 

 Player 1 23:28:49 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":18,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":297,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 23:28:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":136,"_text":"Response Remove After Resolve ActivateItem 18"},"childOfId":135} 

 Player 1 23:28:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":137,"_text":"Wait For Response From Player 1 "},"childOfId":135} 

 Player 1 23:28:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:28:50 $ACTION_MASSAGE_REMOVE:  
{"id":137} 

 Player 1 23:28:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":138,"_text":"Wait For Response From Player 2 "},"childOfId":135} 

 Player 1 23:28:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 23:28:50 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 23:28:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 2 vs Pooter<Monster> \n2:Player 2 activated Isaac \n3:Player 1 activated Blood Lust"} 

 Player 2 23:28:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 2 vs Pooter<Monster> \n2:Player 2 activated Isaac \n3:Player 1 activated Blood Lust"} 

 Player 2 23:28:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 2 vs Pooter<Monster> \n2:Player 2 activated Isaac \n3:Player 1 activated Blood Lust"} 

 Player 2 23:28:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 2 vs Pooter<Monster> \n2:Player 2 activated Isaac \n3:Player 1 activated Blood Lust"} 

 Player 2 23:28:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 2 vs Pooter<Monster> \n2:Player 2 activated Isaac \n3:Player 1 activated Blood Lust"} 

 Player 2 23:28:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 2 vs Pooter<Monster> \n2:Player 2 activated Isaac \n3:Player 1 activated Blood Lust"} 

 Player 2 23:28:50 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 23:28:50 $ACTION_MASSAGE_REMOVE:  
{"id":138} 

 Player 1 23:28:50 $ACTION_MASSAGE_REMOVE:  
{"id":136} 

 Player 1 23:28:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":139,"_text":"Resolve ActivateItem 17 "}} 

 Player 1 23:28:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated Isaac"} 

 Player 1 23:28:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated Isaac"} 

 Player 1 23:28:50 $DO_STACK_EFFECT:  
{"originPlayerId":1,"playerId":2,"currentStack":[{"entityId":16,"creatorCardId":290,"numberRolled":2,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":264},{"entityId":17,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 

 Player 2 23:28:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 2 vs Pooter<Monster> \n2:Player 2 activated Isaac"} 

 Player 2 23:28:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 2 vs Pooter<Monster> \n2:Player 2 activated Isaac"} 

 Player 2 23:28:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 2 vs Pooter<Monster> \n2:Player 2 activated Isaac"} 

 Player 2 23:28:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 2 vs Pooter<Monster> \n2:Player 2 activated Isaac"} 

 Player 2 23:28:50 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":290,"particleType":6} 

 Player 2 23:28:52 $DISABLE_PARTICLE_EFFECT:  
{"cardId":290,"particleType":6} 

 Player 2 23:28:52 $NEXT_STACK_ID:  

 Player 2 23:28:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated Isaac"} 

 Player 2 23:28:52 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":92} 

 Player 2 23:28:52 $MOVE_CARD:  
{"moveIndex":15,"cardId":92,"placeID":300,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 23:28:52 $ACTION_MASSAGE_REMOVE:  
{"id":135} 

 Player 1 23:28:53 $MOVE_CARD_END:  
{"moveIndex":15,"cardId":92,"flipIfFlipped":true,"playerId":2} 

 Player 2 23:28:53 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":92} 

 Player 2 23:28:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5): DealDamage \n3:Player 2 activated Isaac"} 

 Player 2 23:28:57 $SHOW_DECISION:  
{"startCardId":92,"endCardId":264} 

 Player 2 23:29:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:29:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5): DealDamage \n3:Player 2 activated Isaac"} 

 Player 2 23:29:00 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":19,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":92,"lootPlayerId":2,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":92,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 23:29:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5): DealDamage \n3:Player 2 activated Isaac"} 

 Player 2 23:29:00 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":16,"creatorCardId":290,"numberRolled":2,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":264}} 

 Player 2 23:29:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5): DealDamage \n3:Player 2 activated Isaac"} 

 Player 2 23:29:00 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":16,"creatorCardId":290,"numberRolled":2,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":264}} 

 Player 2 23:29:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5): DealDamage \n3:Player 2 activated Isaac"} 

 Player 2 23:29:00 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":19,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":92,"lootPlayerId":2,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":92,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 23:29:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5): DealDamage \n3:Player 2 activated Isaac"} 

 Player 2 23:29:00 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":17,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 23:29:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5): DealDamage \n3:Player 2 activated Isaac"} 

 Player 2 23:29:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5): DealDamage \n3:Player 2 activated Isaac"} 

 Player 2 23:29:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5): DealDamage \n3:Player 2 activated Isaac"} 

 Player 2 23:29:00 $REPLACE_STACK:  
{"currentStack":[{"entityId":16,"creatorCardId":290,"numberRolled":2,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":264},{"entityId":19,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":92,"lootPlayerId":2,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":92,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":17,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 

 Player 2 23:29:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5): DealDamage \n3:Player 2 activated Isaac"} 

 Player 2 23:29:00 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":17,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 23:29:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5): DealDamage \n3:Player 2 activated Isaac"} 

 Player 2 23:29:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5): DealDamage \n3:Player 2 activated Isaac"} 

 Player 2 23:29:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5): DealDamage \n3:Player 2 activated Isaac"} 

 Player 2 23:29:00 $FINISH_DO_STACK_EFFECT:  
{"playerId":1,"newStack":[{"entityId":16,"creatorCardId":290,"numberRolled":2,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":264},{"entityId":19,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":92,"lootPlayerId":2,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":92,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":17,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 

 Player 1 23:29:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated Isaac"} 

 Player 1 23:29:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 activated Isaac"} 

 Player 1 23:29:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5) "} 

 Player 1 23:29:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5) "} 

 Player 1 23:29:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5) "} 

 Player 1 23:29:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5) "} 

 Player 1 23:29:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5) "} 

 Player 1 23:29:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5) "} 

 Player 1 23:29:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5) "} 

 Player 1 23:29:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5) "} 

 Player 1 23:29:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5) "} 

 Player 1 23:29:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5) "} 

 Player 1 23:29:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5) "} 

 Player 1 23:29:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5) "} 

 Player 1 23:29:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5) "} 

 Player 1 23:29:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5) "} 

 Player 1 23:29:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5)  \n3:Player 2 activated Isaac"} 

 Player 1 23:29:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5)  \n3:Player 2 activated Isaac"} 

 Player 1 23:29:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5)  \n3:Player 2 activated Isaac"} 

 Player 1 23:29:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5)  \n3:Player 2 activated Isaac"} 

 Player 1 23:29:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5)  \n3:Player 2 activated Isaac"} 

 Player 1 23:29:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5)  \n3:Player 2 activated Isaac"} 

 Player 1 23:29:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5)  \n3:Player 2 activated Isaac"} 

 Player 1 23:29:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5)  \n3:Player 2 activated Isaac"} 

 Player 1 23:29:01 $ACTION_MASSAGE_REMOVE:  
{"id":139} 

 Player 1 23:29:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5)  \n3:Player 2 activated Isaac"} 

 Player 1 23:29:01 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":17,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 23:29:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5)  \n3:Player 2 activated Isaac"} 

 Player 1 23:29:01 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":19,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":92,"lootPlayerId":2,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":92,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 23:29:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5)  \n3:Player 2 activated Isaac"} 

 Player 1 23:29:01 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":16,"creatorCardId":290,"numberRolled":2,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":264}} 

 Player 1 23:29:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5)  \n3:Player 2 activated Isaac"} 

 Player 1 23:29:01 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":19,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":92,"lootPlayerId":2,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":92,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 23:29:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5)  \n3:Player 2 activated Isaac"} 

 Player 1 23:29:01 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":17,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 23:29:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5)  \n3:Player 2 activated Isaac"} 

 Player 1 23:29:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5)  \n3:Player 2 activated Isaac"} 

 Player 1 23:29:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5)  \n3:Player 2 activated Isaac"} 

 Player 1 23:29:01 $REPLACE_STACK:  
{"currentStack":[{"entityId":16,"creatorCardId":290,"numberRolled":2,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":264},{"entityId":19,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":92,"lootPlayerId":2,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":92,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":17,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 

 Player 1 23:29:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5) "} 

 Player 1 23:29:01 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":17,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 23:29:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":140,"_text":"Remove After Resolve ActivateItem 17  "}} 

 Player 1 23:29:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5) "} 

 Player 1 23:29:01 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":17,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 23:29:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":141,"_text":"Response Remove After Resolve ActivateItem 17"},"childOfId":140} 

 Player 1 23:29:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":142,"_text":"Wait For Response From Player 2 "},"childOfId":140} 

 Player 1 23:29:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 23:29:01 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 23:29:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5): DealDamage \n3:Player 2 activated Isaac"} 

 Player 2 23:29:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5): DealDamage \n3:Player 2 activated Isaac"} 

 Player 2 23:29:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5): DealDamage \n3:Player 2 activated Isaac"} 

 Player 2 23:29:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5): DealDamage \n3:Player 2 activated Isaac"} 

 Player 2 23:29:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5): DealDamage \n3:Player 2 activated Isaac"} 

 Player 2 23:29:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5): DealDamage \n3:Player 2 activated Isaac"} 

 Player 2 23:29:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5): DealDamage \n3:Player 2 activated Isaac"} 

 Player 2 23:29:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5): DealDamage \n3:Player 2 activated Isaac"} 

 Player 2 23:29:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5): DealDamage \n3:Player 2 activated Isaac"} 

 Player 2 23:29:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5): DealDamage \n3:Player 2 activated Isaac"} 

 Player 2 23:29:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5): DealDamage \n3:Player 2 activated Isaac"} 

 Player 2 23:29:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5): DealDamage \n3:Player 2 activated Isaac"} 

 Player 2 23:29:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5): DealDamage \n3:Player 2 activated Isaac"} 

 Player 2 23:29:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5): DealDamage \n3:Player 2 activated Isaac"} 

 Player 2 23:29:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5): DealDamage \n3:Player 2 activated Isaac"} 

 Player 2 23:29:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5): DealDamage \n3:Player 2 activated Isaac"} 

 Player 2 23:29:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5)  \n3:Player 2 activated Isaac"} 

 Player 2 23:29:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5)  \n3:Player 2 activated Isaac"} 

 Player 2 23:29:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5)  \n3:Player 2 activated Isaac"} 

 Player 2 23:29:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5)  \n3:Player 2 activated Isaac"} 

 Player 2 23:29:02 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 23:29:02 $ACTION_MASSAGE_REMOVE:  
{"id":142} 

 Player 1 23:29:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":143,"_text":"Wait For Response From Player 1 "},"childOfId":140} 

 Player 1 23:29:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:29:02 $ACTION_MASSAGE_REMOVE:  
{"id":143} 

 Player 1 23:29:02 $ACTION_MASSAGE_REMOVE:  
{"id":141} 

 Player 1 23:29:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":144,"_text":"Resolve PlayLootCardStackEffect 19 "}} 

 Player 1 23:29:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5) "} 

 Player 1 23:29:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5) "} 

 Player 1 23:29:02 $DO_STACK_EFFECT:  
{"originPlayerId":1,"playerId":2,"currentStack":[{"entityId":16,"creatorCardId":290,"numberRolled":2,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":264},{"entityId":19,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":92,"lootPlayerId":2,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":92,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}]} 

 Player 2 23:29:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5) "} 

 Player 2 23:29:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5) "} 

 Player 2 23:29:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5) "} 

 Player 2 23:29:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5) "} 

 Player 2 23:29:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5): DealDamage"} 

 Player 2 23:29:02 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":92,"particleType":6} 

 Player 1 23:29:03 $ACTION_MASSAGE_REMOVE:  
{"id":140} 

 Player 2 23:29:04 $DISABLE_PARTICLE_EFFECT:  
{"cardId":92,"particleType":6} 

 Player 2 23:29:04 $MONSTER_GET_DAMAGED:  
{"cardId":264,"hpLeft":0,"damageDealerId":290} 

 Player 2 23:29:04 $NEXT_STACK_ID:  

 Player 2 23:29:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5): DealDamage"} 

 Player 2 23:29:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:29:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5): DealDamage \n3:[object Object] killed by Isaac"} 

 Player 2 23:29:04 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":20,"creatorCardId":290,"monsterToDieCardId":264,"stackEffectType":5,"killerId":290}} 

 Player 2 23:29:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5): DealDamage \n3:[object Object] killed by Isaac"} 

 Player 2 23:29:04 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":16,"creatorCardId":290,"numberRolled":2,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":264}} 

 Player 2 23:29:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5): DealDamage \n3:[object Object] killed by Isaac"} 

 Player 2 23:29:04 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":16,"creatorCardId":290,"numberRolled":2,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":264}} 

 Player 2 23:29:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5): DealDamage \n3:[object Object] killed by Isaac"} 

 Player 2 23:29:04 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":19,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":92,"lootPlayerId":2,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":92,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 23:29:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5): DealDamage \n3:[object Object] killed by Isaac"} 

 Player 2 23:29:04 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":20,"creatorCardId":290,"monsterToDieCardId":264,"stackEffectType":5,"killerId":290}} 

 Player 2 23:29:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5): DealDamage \n3:[object Object] killed by Isaac"} 

 Player 2 23:29:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5): DealDamage \n3:[object Object] killed by Isaac"} 

 Player 2 23:29:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5): DealDamage \n3:[object Object] killed by Isaac"} 

 Player 2 23:29:05 $REPLACE_STACK:  
{"currentStack":[{"entityId":16,"creatorCardId":290,"numberRolled":2,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":264},{"entityId":19,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":92,"lootPlayerId":2,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":92,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":20,"creatorCardId":290,"monsterToDieCardId":264,"stackEffectType":5,"killerId":290}]} 

 Player 2 23:29:05 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":290}],"result":null,"preventMethod":false,"methodScopeId":264,"scopeIsPlayer":false,"index":12,"originStackId":-1},"isAfterActivation":true,"index":12} 

 Player 2 23:29:05 $REMOVE_FROM_PILE:  
{"cardId":92} 

 Player 2 23:29:05 $MOVE_CARD:  
{"moveIndex":16,"cardId":92,"placeID":301,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 23:29:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5) "} 

 Player 1 23:29:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5) "} 

 Player 1 23:29:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:[object Object] killed by Isaac"} 

 Player 1 23:29:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:[object Object] killed by Isaac"} 

 Player 1 23:29:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:[object Object] killed by Isaac"} 

 Player 1 23:29:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:[object Object] killed by Isaac"} 

 Player 1 23:29:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:[object Object] killed by Isaac"} 

 Player 1 23:29:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:[object Object] killed by Isaac"} 

 Player 1 23:29:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:[object Object] killed by Isaac"} 

 Player 1 23:29:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:[object Object] killed by Isaac"} 

 Player 1 23:29:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:[object Object] killed by Isaac"} 

 Player 1 23:29:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:[object Object] killed by Isaac"} 

 Player 1 23:29:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:[object Object] killed by Isaac"} 

 Player 1 23:29:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:[object Object] killed by Isaac"} 

 Player 1 23:29:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:[object Object] killed by Isaac"} 

 Player 1 23:29:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:[object Object] killed by Isaac"} 

 Player 1 23:29:05 $MOVE_CARD_END:  
{"moveIndex":16,"cardId":92,"flipIfFlipped":true,"playerId":2} 

 Player 2 23:29:05 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":92} 

 Player 2 23:29:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5): DealDamage \n3:[object Object] killed by Isaac"} 

 Player 2 23:29:05 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":19,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":92,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 23:29:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5): DealDamage \n3:[object Object] killed by Isaac"} 

 Player 2 23:29:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5): DealDamage \n3:[object Object] killed by Isaac"} 

 Player 2 23:29:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5): DealDamage \n3:[object Object] killed by Isaac"} 

 Player 2 23:29:05 $FINISH_DO_STACK_EFFECT:  
{"playerId":1,"newStack":[{"entityId":16,"creatorCardId":290,"numberRolled":2,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":264},{"entityId":19,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":92,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":20,"creatorCardId":290,"monsterToDieCardId":264,"stackEffectType":5,"killerId":290}]} 

 Player 1 23:29:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5)  \n3:[object Object] killed by Isaac"} 

 Player 1 23:29:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5)  \n3:[object Object] killed by Isaac"} 

 Player 1 23:29:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5)  \n3:[object Object] killed by Isaac"} 

 Player 1 23:29:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5)  \n3:[object Object] killed by Isaac"} 

 Player 1 23:29:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5)  \n3:[object Object] killed by Isaac"} 

 Player 1 23:29:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5)  \n3:[object Object] killed by Isaac"} 

 Player 1 23:29:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5)  \n3:[object Object] killed by Isaac"} 

 Player 1 23:29:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5)  \n3:[object Object] killed by Isaac"} 

 Player 1 23:29:06 $ACTION_MASSAGE_REMOVE:  
{"id":144} 

 Player 1 23:29:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5)  \n3:[object Object] killed by Isaac"} 

 Player 1 23:29:06 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":19,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":92,"lootPlayerId":2,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":92,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 23:29:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5)  \n3:[object Object] killed by Isaac"} 

 Player 1 23:29:06 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":20,"creatorCardId":290,"monsterToDieCardId":264,"stackEffectType":5,"killerId":290}} 

 Player 1 23:29:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5)  \n3:[object Object] killed by Isaac"} 

 Player 1 23:29:06 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":16,"creatorCardId":290,"numberRolled":2,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":264}} 

 Player 1 23:29:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5)  \n3:[object Object] killed by Isaac"} 

 Player 1 23:29:06 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":19,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":92,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 23:29:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5)  \n3:[object Object] killed by Isaac"} 

 Player 1 23:29:06 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":20,"creatorCardId":290,"monsterToDieCardId":264,"stackEffectType":5,"killerId":290}} 

 Player 1 23:29:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5)  \n3:[object Object] killed by Isaac"} 

 Player 1 23:29:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5)  \n3:[object Object] killed by Isaac"} 

 Player 1 23:29:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5)  \n3:[object Object] killed by Isaac"} 

 Player 1 23:29:06 $REPLACE_STACK:  
{"currentStack":[{"entityId":16,"creatorCardId":290,"numberRolled":2,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":264},{"entityId":19,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":92,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":20,"creatorCardId":290,"monsterToDieCardId":264,"stackEffectType":5,"killerId":290}]} 

 Player 1 23:29:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:[object Object] killed by Isaac"} 

 Player 1 23:29:06 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":19,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":92,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 23:29:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":145,"_text":"Remove After Resolve PlayLootCardStackEffect 19  "}} 

 Player 1 23:29:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:[object Object] killed by Isaac"} 

 Player 1 23:29:06 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":19,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":92,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 23:29:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":146,"_text":"Response Remove After Resolve PlayLootCardStackEffect 19"},"childOfId":145} 

 Player 1 23:29:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":147,"_text":"Wait For Response From Player 2 "},"childOfId":145} 

 Player 1 23:29:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 23:29:06 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 23:29:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5): DealDamage \n3:[object Object] killed by Isaac"} 

 Player 2 23:29:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5): DealDamage \n3:[object Object] killed by Isaac"} 

 Player 2 23:29:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5): DealDamage \n3:[object Object] killed by Isaac"} 

 Player 2 23:29:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5): DealDamage \n3:[object Object] killed by Isaac"} 

 Player 2 23:29:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5): DealDamage \n3:[object Object] killed by Isaac"} 

 Player 2 23:29:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5): DealDamage \n3:[object Object] killed by Isaac"} 

 Player 2 23:29:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5): DealDamage \n3:[object Object] killed by Isaac"} 

 Player 2 23:29:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5): DealDamage \n3:[object Object] killed by Isaac"} 

 Player 2 23:29:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5): DealDamage \n3:[object Object] killed by Isaac"} 

 Player 2 23:29:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5): DealDamage \n3:[object Object] killed by Isaac"} 

 Player 2 23:29:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5): DealDamage \n3:[object Object] killed by Isaac"} 

 Player 2 23:29:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5): DealDamage \n3:[object Object] killed by Isaac"} 

 Player 2 23:29:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5): DealDamage \n3:[object Object] killed by Isaac"} 

 Player 2 23:29:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5): DealDamage \n3:[object Object] killed by Isaac"} 

 Player 2 23:29:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5): DealDamage \n3:[object Object] killed by Isaac"} 

 Player 2 23:29:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5): DealDamage \n3:[object Object] killed by Isaac"} 

 Player 2 23:29:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5)  \n3:[object Object] killed by Isaac"} 

 Player 2 23:29:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5)  \n3:[object Object] killed by Isaac"} 

 Player 2 23:29:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5)  \n3:[object Object] killed by Isaac"} 

 Player 2 23:29:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:Player 2 play Bomb(5)  \n3:[object Object] killed by Isaac"} 

 Player 2 23:29:07 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 23:29:07 $ACTION_MASSAGE_REMOVE:  
{"id":147} 

 Player 1 23:29:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":148,"_text":"Wait For Response From Player 1 "},"childOfId":145} 

 Player 1 23:29:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:29:07 $ACTION_MASSAGE_REMOVE:  
{"id":148} 

 Player 1 23:29:07 $ACTION_MASSAGE_REMOVE:  
{"id":146} 

 Player 1 23:29:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":149,"_text":"Resolve MonsterDeath 20 "}} 

 Player 1 23:29:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:[object Object] killed by Isaac"} 

 Player 1 23:29:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:[object Object] killed by Isaac"} 

 Player 1 23:29:07 $DO_STACK_EFFECT:  
{"originPlayerId":1,"playerId":2,"currentStack":[{"entityId":16,"creatorCardId":290,"numberRolled":2,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":264},{"entityId":20,"creatorCardId":290,"monsterToDieCardId":264,"stackEffectType":5,"killerId":290}]} 

 Player 2 23:29:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:[object Object] killed by Isaac"} 

 Player 2 23:29:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:[object Object] killed by Isaac"} 

 Player 2 23:29:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:[object Object] killed by Isaac"} 

 Player 2 23:29:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:[object Object] killed by Isaac"} 

 Player 2 23:29:07 $DISABLE_PARTICLE_EFFECT:  
{"cardId":264,"particleType":5} 

 Player 2 23:29:07 $CANCEL_ATTACK:  

 Player 2 23:29:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 2 23:29:07 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":16,"creatorCardId":290,"numberRolled":2,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":264}} 

 Player 2 23:29:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":150,"_text":"Fizzle AttackRoll 16"}} 

 Player 2 23:29:07 $FIZZLE_STACK_EFFECT:  
{"entityId":16} 

 Player 2 23:29:07 $NEXT_STACK_ID:  

 Player 2 23:29:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 2 23:29:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:29:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Pooter<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 23:29:07 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":21,"creatorCardId":290,"monsterCardWithRewardId":264,"playerCardIdToReward":290,"stackEffectType":7}} 

 Player 2 23:29:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Pooter<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 23:29:07 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":20,"creatorCardId":290,"monsterToDieCardId":264,"stackEffectType":5,"killerId":290}} 

 Player 2 23:29:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Pooter<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 23:29:07 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":21,"creatorCardId":290,"monsterCardWithRewardId":264,"playerCardIdToReward":290,"stackEffectType":7}} 

 Player 2 23:29:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Pooter<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 23:29:07 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":20,"creatorCardId":290,"monsterToDieCardId":264,"stackEffectType":5,"killerId":290}} 

 Player 2 23:29:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Pooter<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 23:29:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Pooter<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 23:29:07 $REPLACE_STACK:  
{"currentStack":[{"entityId":21,"creatorCardId":290,"monsterCardWithRewardId":264,"playerCardIdToReward":290,"stackEffectType":7},{"entityId":20,"creatorCardId":290,"monsterToDieCardId":264,"stackEffectType":5,"killerId":290}]} 

 Player 2 23:29:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Pooter<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 23:29:07 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":20,"creatorCardId":290,"monsterToDieCardId":264,"stackEffectType":5,"killerId":290}} 

 Player 2 23:29:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Pooter<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 23:29:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Pooter<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 23:29:08 $FINISH_DO_STACK_EFFECT:  
{"playerId":1,"newStack":[{"entityId":21,"creatorCardId":290,"monsterCardWithRewardId":264,"playerCardIdToReward":290,"stackEffectType":7},{"entityId":20,"creatorCardId":290,"monsterToDieCardId":264,"stackEffectType":5,"killerId":290}]} 

 Player 1 23:29:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:[object Object] killed by Isaac"} 

 Player 1 23:29:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Pooter<Monster> \n2:[object Object] killed by Isaac"} 

 Player 1 23:29:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 23:29:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 23:29:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Pooter<Monster> reward"} 

 Player 1 23:29:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Pooter<Monster> reward"} 

 Player 1 23:29:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Pooter<Monster> reward"} 

 Player 1 23:29:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Pooter<Monster> reward"} 

 Player 1 23:29:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Pooter<Monster> reward"} 

 Player 1 23:29:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Pooter<Monster> reward"} 

 Player 1 23:29:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Pooter<Monster> reward"} 

 Player 1 23:29:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Pooter<Monster> reward"} 

 Player 1 23:29:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Pooter<Monster> reward"} 

 Player 1 23:29:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Pooter<Monster> reward"} 

 Player 1 23:29:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Pooter<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 1 23:29:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Pooter<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 1 23:29:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Pooter<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 1 23:29:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Pooter<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 1 23:29:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Pooter<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 1 23:29:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Pooter<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 1 23:29:08 $ACTION_MASSAGE_REMOVE:  
{"id":149} 

 Player 1 23:29:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Pooter<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 1 23:29:08 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":21,"creatorCardId":290,"monsterCardWithRewardId":264,"playerCardIdToReward":290,"stackEffectType":7}} 

 Player 1 23:29:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Pooter<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 1 23:29:08 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":21,"creatorCardId":290,"monsterCardWithRewardId":264,"playerCardIdToReward":290,"stackEffectType":7}} 

 Player 1 23:29:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Pooter<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 1 23:29:08 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":20,"creatorCardId":290,"monsterToDieCardId":264,"stackEffectType":5,"killerId":290}} 

 Player 1 23:29:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Pooter<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 1 23:29:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Pooter<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 1 23:29:08 $REPLACE_STACK:  
{"currentStack":[{"entityId":21,"creatorCardId":290,"monsterCardWithRewardId":264,"playerCardIdToReward":290,"stackEffectType":7},{"entityId":20,"creatorCardId":290,"monsterToDieCardId":264,"stackEffectType":5,"killerId":290}]} 

 Player 1 23:29:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Pooter<Monster> reward"} 

 Player 1 23:29:08 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":20,"creatorCardId":290,"monsterToDieCardId":264,"stackEffectType":5,"killerId":290}} 

 Player 1 23:29:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":151,"_text":"Remove After Resolve MonsterDeath 20  "}} 

 Player 1 23:29:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Pooter<Monster> reward"} 

 Player 1 23:29:08 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":20,"creatorCardId":290,"monsterToDieCardId":264,"stackEffectType":5,"killerId":290}} 

 Player 1 23:29:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":152,"_text":"Response Remove After Resolve MonsterDeath 20"},"childOfId":151} 

 Player 1 23:29:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":153,"_text":"Wait For Response From Player 2 "},"childOfId":151} 

 Player 1 23:29:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 23:29:08 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 1 23:29:08 $ACTION_MASSAGE_REMOVE:  
{"id":145} 

 Player 2 23:29:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Pooter<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 23:29:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Pooter<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 23:29:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Pooter<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 23:29:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Pooter<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 23:29:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Pooter<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 23:29:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Pooter<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 23:29:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Pooter<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 23:29:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Pooter<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 23:29:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Pooter<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 23:29:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Pooter<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 23:29:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Pooter<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 23:29:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Pooter<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 23:29:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Pooter<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 23:29:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Pooter<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 23:29:09 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 23:29:09 $ACTION_MASSAGE_REMOVE:  
{"id":153} 

 Player 1 23:29:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":154,"_text":"Wait For Response From Player 1 "},"childOfId":151} 

 Player 1 23:29:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:29:09 $ACTION_MASSAGE_REMOVE:  
{"id":154} 

 Player 1 23:29:09 $ACTION_MASSAGE_REMOVE:  
{"id":152} 

 Player 1 23:29:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":155,"_text":"Resolve MonsterRewardStackEffect 21 "}} 

 Player 1 23:29:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Pooter<Monster> reward"} 

 Player 1 23:29:09 $DO_STACK_EFFECT:  
{"originPlayerId":1,"playerId":2,"currentStack":[{"entityId":21,"creatorCardId":290,"monsterCardWithRewardId":264,"playerCardIdToReward":290,"stackEffectType":7}]} 

 Player 2 23:29:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Pooter<Monster> reward"} 

 Player 2 23:29:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Pooter<Monster> reward"} 

 Player 2 23:29:09 $DRAW_CARD:  
{"deckType":1} 

 Player 2 23:29:09 $MOVE_CARD:  
{"moveIndex":17,"cardId":130,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 23:29:09 $MOVE_CARD_END:  
{"moveIndex":17,"cardId":130,"flipIfFlipped":false,"playerId":2} 

 Player 2 23:29:09 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":130} 

 Player 2 23:29:09 $FLIP_CARD:  
{"cardId":130} 

 Player 2 23:29:10 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":130} 

 Player 2 23:29:10 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":264,"scopeIsPlayer":false,"index":13,"originStackId":21},"isAfterActivation":true,"index":13} 

 Player 2 23:29:10 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:29:10 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 23:29:10 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 23:29:10 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 23:29:10 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 23:29:10 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 23:29:10 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 23:29:10 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 23:29:10 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 23:29:10 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 23:29:10 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 23:29:10 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 23:29:10 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 23:29:10 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 23:29:10 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 23:29:10 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 23:29:10 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 23:29:10 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 23:29:10 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 23:29:10 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 23:29:10 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 23:29:10 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 23:29:10 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 2 23:29:10 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 2 23:29:10 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 2 23:29:10 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 2 23:29:10 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 2 23:29:10 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 2 23:29:10 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 2 23:29:10 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 2 23:29:10 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 2 23:29:10 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 2 23:29:10 $ACTION_MASSAGE_REMOVE:  
{"id":72} 

 Player 2 23:29:10 $ACTION_MASSAGE_REMOVE:  
{"id":76} 

 Player 2 23:29:10 $ACTION_MASSAGE_REMOVE:  
{"id":77} 

 Player 2 23:29:10 $ACTION_MASSAGE_REMOVE:  
{"id":81} 

 Player 2 23:29:10 $ACTION_MASSAGE_REMOVE:  
{"id":82} 

 Player 2 23:29:10 $ACTION_MASSAGE_REMOVE:  
{"id":83} 

 Player 2 23:29:10 $ACTION_MASSAGE_REMOVE:  
{"id":87} 

 Player 2 23:29:10 $ACTION_MASSAGE_REMOVE:  
{"id":91} 

 Player 2 23:29:10 $ACTION_MASSAGE_REMOVE:  
{"id":92} 

 Player 2 23:29:10 $ACTION_MASSAGE_REMOVE:  
{"id":96} 

 Player 2 23:29:10 $ACTION_MASSAGE_REMOVE:  
{"id":97} 

 Player 2 23:29:10 $ACTION_MASSAGE_REMOVE:  
{"id":101} 

 Player 2 23:29:10 $ACTION_MASSAGE_REMOVE:  
{"id":102} 

 Player 2 23:29:11 $ACTION_MASSAGE_REMOVE:  
{"id":106} 

 Player 2 23:29:11 $ACTION_MASSAGE_REMOVE:  
{"id":107} 

 Player 2 23:29:11 $ACTION_MASSAGE_REMOVE:  
{"id":111} 

 Player 2 23:29:11 $ACTION_MASSAGE_REMOVE:  
{"id":112} 

 Player 2 23:29:11 $ACTION_MASSAGE_REMOVE:  
{"id":113} 

 Player 2 23:29:11 $ACTION_MASSAGE_REMOVE:  
{"id":117} 

 Player 2 23:29:11 $ACTION_MASSAGE_REMOVE:  
{"id":118} 

 Player 2 23:29:11 $ACTION_MASSAGE_REMOVE:  
{"id":122} 

 Player 2 23:29:11 $ACTION_MASSAGE_REMOVE:  
{"id":123} 

 Player 2 23:29:11 $ACTION_MASSAGE_REMOVE:  
{"id":126} 

 Player 2 23:29:11 $ACTION_MASSAGE_REMOVE:  
{"id":130} 

 Player 2 23:29:11 $ACTION_MASSAGE_REMOVE:  
{"id":134} 

 Player 2 23:29:11 $ACTION_MASSAGE_REMOVE:  
{"id":135} 

 Player 2 23:29:11 $ACTION_MASSAGE_REMOVE:  
{"id":139} 

 Player 2 23:29:11 $ACTION_MASSAGE_REMOVE:  
{"id":140} 

 Player 2 23:29:11 $ACTION_MASSAGE_REMOVE:  
{"id":144} 

 Player 2 23:29:11 $ACTION_MASSAGE_REMOVE:  
{"id":145} 

 Player 2 23:29:11 $ACTION_MASSAGE_REMOVE:  
{"id":149} 

 Player 2 23:29:11 $ACTION_MASSAGE_REMOVE:  
{"id":150} 

 Player 2 23:29:11 $ACTION_MASSAGE_REMOVE:  
{"id":151} 

 Player 2 23:29:11 $ACTION_MASSAGE_REMOVE:  
{"id":155} 

 Player 2 23:29:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:29:11 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":21,"creatorCardId":290,"monsterCardWithRewardId":264,"playerCardIdToReward":290,"stackEffectType":7}} 

 Player 2 23:29:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":156,"_text":"Fizzle MonsterRewardStackEffect 21"}} 

 Player 2 23:29:11 $FIZZLE_STACK_EFFECT:  
{"entityId":21} 

 Player 2 23:29:11 $MOVE_CARD:  
{"moveIndex":18,"cardId":264,"placeID":303,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 2 23:29:11 $ACTION_MASSAGE_REMOVE:  
{"id":150} 

 Player 1 23:29:11 $ACTION_MASSAGE_REMOVE:  
{"id":151} 

 Player 1 23:29:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Pooter<Monster> reward"} 

 Player 1 23:29:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Pooter<Monster> reward"} 

 Player 1 23:29:11 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 23:29:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:29:11 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 23:29:11 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 23:29:11 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 23:29:11 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 23:29:11 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 23:29:11 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 23:29:11 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 23:29:11 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 23:29:11 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 23:29:11 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 23:29:11 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 23:29:11 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 23:29:11 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 23:29:11 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 23:29:11 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 1 23:29:11 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 23:29:12 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 1 23:29:12 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 1 23:29:12 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 1 23:29:12 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 1 23:29:12 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 1 23:29:12 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 1 23:29:12 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 1 23:29:12 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 1 23:29:12 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 1 23:29:12 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 1 23:29:12 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 1 23:29:12 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 1 23:29:12 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 1 23:29:12 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 1 23:29:12 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 1 23:29:12 $ACTION_MASSAGE_REMOVE:  
{"id":72} 

 Player 1 23:29:12 $ACTION_MASSAGE_REMOVE:  
{"id":76} 

 Player 1 23:29:12 $ACTION_MASSAGE_REMOVE:  
{"id":77} 

 Player 1 23:29:12 $ACTION_MASSAGE_REMOVE:  
{"id":81} 

 Player 1 23:29:12 $ACTION_MASSAGE_REMOVE:  
{"id":82} 

 Player 1 23:29:12 $ACTION_MASSAGE_REMOVE:  
{"id":83} 

 Player 1 23:29:12 $ACTION_MASSAGE_REMOVE:  
{"id":87} 

 Player 1 23:29:12 $ACTION_MASSAGE_REMOVE:  
{"id":91} 

 Player 1 23:29:12 $ACTION_MASSAGE_REMOVE:  
{"id":92} 

 Player 1 23:29:12 $ACTION_MASSAGE_REMOVE:  
{"id":96} 

 Player 1 23:29:12 $ACTION_MASSAGE_REMOVE:  
{"id":97} 

 Player 1 23:29:12 $ACTION_MASSAGE_REMOVE:  
{"id":101} 

 Player 1 23:29:12 $ACTION_MASSAGE_REMOVE:  
{"id":102} 

 Player 1 23:29:12 $ACTION_MASSAGE_REMOVE:  
{"id":106} 

 Player 1 23:29:12 $ACTION_MASSAGE_REMOVE:  
{"id":107} 

 Player 1 23:29:12 $ACTION_MASSAGE_REMOVE:  
{"id":111} 

 Player 1 23:29:12 $ACTION_MASSAGE_REMOVE:  
{"id":112} 

 Player 1 23:29:12 $ACTION_MASSAGE_REMOVE:  
{"id":113} 

 Player 1 23:29:12 $ACTION_MASSAGE_REMOVE:  
{"id":117} 

 Player 1 23:29:12 $ACTION_MASSAGE_REMOVE:  
{"id":118} 

 Player 1 23:29:12 $ACTION_MASSAGE_REMOVE:  
{"id":122} 

 Player 1 23:29:12 $ACTION_MASSAGE_REMOVE:  
{"id":123} 

 Player 1 23:29:12 $ACTION_MASSAGE_REMOVE:  
{"id":126} 

 Player 1 23:29:12 $ACTION_MASSAGE_REMOVE:  
{"id":130} 

 Player 1 23:29:12 $ACTION_MASSAGE_REMOVE:  
{"id":134} 

 Player 1 23:29:12 $ACTION_MASSAGE_REMOVE:  
{"id":135} 

 Player 1 23:29:12 $ACTION_MASSAGE_REMOVE:  
{"id":139} 

 Player 1 23:29:12 $ACTION_MASSAGE_REMOVE:  
{"id":140} 

 Player 1 23:29:12 $ACTION_MASSAGE_REMOVE:  
{"id":144} 

 Player 1 23:29:12 $ACTION_MASSAGE_REMOVE:  
{"id":145} 

 Player 1 23:29:12 $ACTION_MASSAGE_REMOVE:  
{"id":149} 

 Player 1 23:29:13 $ACTION_MASSAGE_REMOVE:  
{"id":150} 

 Player 1 23:29:13 $ACTION_MASSAGE_REMOVE:  
{"id":151} 

 Player 1 23:29:13 $ACTION_MASSAGE_REMOVE:  
{"id":155} 

 Player 1 23:29:13 $ACTION_MASSAGE_REMOVE:  
{"id":156} 

 Player 1 23:29:13 $MOVE_CARD_END:  
{"moveIndex":18,"cardId":264,"flipIfFlipped":true,"playerId":2} 

 Player 2 23:29:13 $ACTION_MASSAGE_REMOVE:  
{"id":156} 

 Player 2 23:29:13 $MOVE_CARD_TO_PILE:  
{"type":2,"cardId":264} 

 Player 2 23:29:13 $REMOVE_MONSTER:  
{"holderId":1,"monsterId":264} 

 Player 2 23:29:13 $NEXT_STACK_ID:  

 Player 2 23:29:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:29:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 2 23:29:13 $ADD_TO_STACK:  
{"stackEffect":{"entityId":22,"creatorCardId":290,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 2 23:29:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 2 23:29:13 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":22,"creatorCardId":290,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 2 23:29:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":157,"_text":"Add RefillEmptySlot 22 "}} 

 Player 2 23:29:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:29:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 2 23:29:13 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":22,"creatorCardId":290,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 2 23:29:13 $ACTION_MASSAGE_REMOVE:  
{"id":157} 

 Player 2 23:29:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":158,"_text":"Response Adding RefillEmptySlot 22"},"childOfId":157} 

 Player 2 23:29:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":159,"_text":"Wait For Response From Player 2 "},"childOfId":157} 

 Player 2 23:29:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:29:13 $ACTION_MASSAGE_REMOVE:  
{"id":159} 

 Player 2 23:29:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":160,"_text":"Wait For Response From Player 1 "},"childOfId":157} 

 Player 2 23:29:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:29:13 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:29:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:29:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:29:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 1 23:29:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 1 23:29:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 1 23:29:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 1 23:29:13 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:29:13 $ACTION_MASSAGE_REMOVE:  
{"id":160} 

 Player 2 23:29:13 $ACTION_MASSAGE_REMOVE:  
{"id":158} 

 Player 2 23:29:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":161,"_text":"Resolve RefillEmptySlot 22 "}} 

 Player 2 23:29:13 $DRAW_CARD:  
{"deckType":2} 

 Player 2 23:29:13 $FLIP_CARD:  
{"cardId":270} 

 Player 2 23:29:13 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":270} 

 Player 2 23:29:13 $NEW_MONSTER_ON_PLACE:  
{"cardId":270,"monsterPlaceId":1} 

 Player 2 23:29:13 $SHOW_DECISION:  
{"startCardId":290,"endCardId":270} 

 Player 2 23:29:16 $NEXT_STACK_ID:  

 Player 2 23:29:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 2 23:29:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest"} 

 Player 2 23:29:16 $ADD_TO_STACK:  
{"stackEffect":{"entityId":23,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":270,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 23:29:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest"} 

 Player 2 23:29:16 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":23,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":270,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 23:29:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":162,"_text":"Add ActivateItem 23 "}} 

 Player 2 23:29:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:29:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest"} 

 Player 2 23:29:16 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":23,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":270,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 23:29:16 $ACTION_MASSAGE_REMOVE:  
{"id":162} 

 Player 2 23:29:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":163,"_text":"Response Adding ActivateItem 23"},"childOfId":162} 

 Player 2 23:29:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":164,"_text":"Wait For Response From Player 2 "},"childOfId":162} 

 Player 2 23:29:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:29:17 $ACTION_MASSAGE_REMOVE:  
{"id":164} 

 Player 2 23:29:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":165,"_text":"Wait For Response From Player 1 "},"childOfId":162} 

 Player 2 23:29:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:29:17 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:29:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 1 23:29:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 1 23:29:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest"} 

 Player 1 23:29:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest"} 

 Player 1 23:29:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest"} 

 Player 1 23:29:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest"} 

 Player 1 23:29:17 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:29:17 $ACTION_MASSAGE_REMOVE:  
{"id":165} 

 Player 2 23:29:17 $ACTION_MASSAGE_REMOVE:  
{"id":163} 

 Player 2 23:29:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":166,"_text":"Resolve ActivateItem 23 "}} 

 Player 2 23:29:17 $NEXT_STACK_ID:  

 Player 2 23:29:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest"} 

 Player 2 23:29:17 $NEXT_STACK_ID:  

 Player 2 23:29:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest"} 

 Player 2 23:29:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 roll a dice"} 

 Player 2 23:29:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 roll a dice"} 

 Player 2 23:29:17 $ADD_TO_STACK:  
{"stackEffect":{"entityId":25,"creatorCardId":290,"stackEffectToLock":{"entityId":23,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":270,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"stackEffectType":11}} 

 Player 2 23:29:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 roll a dice"} 

 Player 2 23:29:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 roll a dice"} 

 Player 2 23:29:17 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":25,"creatorCardId":290,"stackEffectToLock":{"entityId":23,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":270,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"stackEffectType":11}} 

 Player 2 23:29:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":167,"_text":"Add RollDiceStackEffect 25 "}} 

 Player 2 23:29:17 $ROLL_DICE:  
{"playerId":2} 

 Player 1 23:29:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest"} 

 Player 1 23:29:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest"} 

 Player 1 23:29:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest"} 

 Player 1 23:29:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest"} 

 Player 1 23:29:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 roll a dice"} 

 Player 1 23:29:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 roll a dice"} 

 Player 1 23:29:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 roll a dice"} 

 Player 1 23:29:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 roll a dice"} 

 Player 2 23:29:18 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":1} 

 Player 2 23:29:18 $UPDATE_STACK_VIS:  
{"stackId":25,"text":"player 2 rolled 1"} 

 Player 2 23:29:18 $SHOW_DICE_ROLL:  
{"stackId":25} 

 Player 2 23:29:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 rolled 1"} 

 Player 2 23:29:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:29:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 rolled 1"} 

 Player 2 23:29:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 rolled 1"} 

 Player 2 23:29:21 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":25,"creatorCardId":290,"stackEffectToLock":{"entityId":23,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":270,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"numberRolled":1,"stackEffectType":11}} 

 Player 2 23:29:21 $ACTION_MASSAGE_REMOVE:  
{"id":167} 

 Player 2 23:29:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":168,"_text":"Response Adding RollDiceStackEffect 25"},"childOfId":167} 

 Player 2 23:29:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":169,"_text":"Wait For Response From Player 2 "},"childOfId":167} 

 Player 2 23:29:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:29:21 $ACTION_MASSAGE_REMOVE:  
{"id":169} 

 Player 2 23:29:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":170,"_text":"Wait For Response From Player 1 "},"childOfId":167} 

 Player 2 23:29:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:29:22 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:29:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 roll a dice"} 

 Player 1 23:29:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 roll a dice"} 

 Player 1 23:29:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 roll a dice"} 

 Player 1 23:29:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 roll a dice"} 

 Player 1 23:29:22 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:29:22 $ACTION_MASSAGE_REMOVE:  
{"id":170} 

 Player 2 23:29:22 $ACTION_MASSAGE_REMOVE:  
{"id":168} 

 Player 2 23:29:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":171,"_text":"Resolve RollDiceStackEffect 25 "}} 

 Player 2 23:29:22 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":14,"originStackId":25},"isAfterActivation":true,"index":14} 

 Player 2 23:29:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 rolled 1"} 

 Player 2 23:29:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 rolled 1"} 

 Player 2 23:29:22 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":25,"creatorCardId":290,"stackEffectToLock":{"entityId":23,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":270,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"numberRolled":1,"stackEffectType":11}} 

 Player 2 23:29:22 $ACTION_MASSAGE_REMOVE:  
{"id":171} 

 Player 2 23:29:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest"} 

 Player 2 23:29:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest"} 

 Player 2 23:29:22 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":25,"creatorCardId":290,"stackEffectToLock":{"entityId":23,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":270,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"numberRolled":1,"stackEffectType":11}} 

 Player 2 23:29:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":172,"_text":"Remove After Resolve RollDiceStackEffect 25  "}} 

 Player 2 23:29:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest"} 

 Player 2 23:29:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest"} 

 Player 2 23:29:22 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":25,"creatorCardId":290,"stackEffectToLock":{"entityId":23,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":270,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"numberRolled":1,"stackEffectType":11}} 

 Player 2 23:29:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":173,"_text":"Response Remove After Resolve RollDiceStackEffect 25"},"childOfId":172} 

 Player 2 23:29:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":174,"_text":"Wait For Response From Player 1 "},"childOfId":172} 

 Player 2 23:29:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:29:22 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:29:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 roll a dice"} 

 Player 1 23:29:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 roll a dice"} 

 Player 1 23:29:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 roll a dice"} 

 Player 1 23:29:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 roll a dice"} 

 Player 1 23:29:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 roll a dice"} 

 Player 1 23:29:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 roll a dice"} 

 Player 1 23:29:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 roll a dice"} 

 Player 1 23:29:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 roll a dice"} 

 Player 1 23:29:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 roll a dice"} 

 Player 1 23:29:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 roll a dice"} 

 Player 1 23:29:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 roll a dice"} 

 Player 1 23:29:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 roll a dice"} 

 Player 1 23:29:22 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:29:22 $ACTION_MASSAGE_REMOVE:  
{"id":174} 

 Player 2 23:29:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":175,"_text":"Wait For Response From Player 2 "},"childOfId":172} 

 Player 2 23:29:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:29:23 $ACTION_MASSAGE_REMOVE:  
{"id":175} 

 Player 2 23:29:23 $ACTION_MASSAGE_REMOVE:  
{"id":173} 

 Player 2 23:29:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":176,"_text":"Resolve ActivateItem 23 "}} 

 Player 2 23:29:23 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":270,"particleType":6} 

 Player 2 23:29:24 $DISABLE_PARTICLE_EFFECT:  
{"cardId":270,"particleType":6} 

 Player 2 23:29:25 $PLAYER_GET_HIT:  
{"playerId":2,"damage":1,"damageDealerId":270} 

 Player 2 23:29:25 $NEXT_STACK_ID:  

 Player 2 23:29:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest"} 

 Player 2 23:29:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:29:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to die"} 

 Player 2 23:29:25 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":26,"creatorCardId":290,"playerToDieCardId":290,"stackEffectType":15,"killerId":270}} 

 Player 2 23:29:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to die"} 

 Player 2 23:29:25 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":22,"creatorCardId":290,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 2 23:29:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to die"} 

 Player 2 23:29:25 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":22,"creatorCardId":290,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 2 23:29:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to die"} 

 Player 2 23:29:25 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":23,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":270,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 23:29:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to die"} 

 Player 2 23:29:25 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":26,"creatorCardId":290,"playerToDieCardId":290,"stackEffectType":15,"killerId":270}} 

 Player 2 23:29:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to die"} 

 Player 2 23:29:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to die"} 

 Player 2 23:29:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to die"} 

 Player 2 23:29:25 $REPLACE_STACK:  
{"currentStack":[{"entityId":22,"creatorCardId":290,"slotType":2,"slotToFillId":1,"stackEffectType":10},{"entityId":23,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":270,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1},{"entityId":26,"creatorCardId":290,"playerToDieCardId":290,"stackEffectType":15,"killerId":270}]} 

 Player 2 23:29:25 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":270}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":15,"originStackId":-1},"isAfterActivation":true,"index":15} 

 Player 2 23:29:25 $MOVE_CARD:  
{"moveIndex":19,"cardId":270,"placeID":303,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 2 23:29:25 $ACTION_MASSAGE_REMOVE:  
{"id":172} 

 Player 1 23:29:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest"} 

 Player 1 23:29:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest"} 

 Player 1 23:29:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 is about to die"} 

 Player 1 23:29:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 is about to die"} 

 Player 1 23:29:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 is about to die"} 

 Player 1 23:29:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 is about to die"} 

 Player 1 23:29:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 is about to die"} 

 Player 1 23:29:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 is about to die"} 

 Player 1 23:29:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 is about to die"} 

 Player 1 23:29:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 is about to die"} 

 Player 1 23:29:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 is about to die"} 

 Player 1 23:29:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 is about to die"} 

 Player 1 23:29:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 is about to die"} 

 Player 1 23:29:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 is about to die"} 

 Player 1 23:29:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 is about to die"} 

 Player 1 23:29:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 is about to die"} 

 Player 1 23:29:25 $MOVE_CARD_END:  
{"moveIndex":19,"cardId":270,"flipIfFlipped":true,"playerId":2} 

 Player 2 23:29:25 $MOVE_CARD_TO_PILE:  
{"type":2,"cardId":270} 

 Player 2 23:29:25 $REMOVE_MONSTER:  
{"holderId":1,"monsterId":270} 

 Player 2 23:29:26 $NEXT_STACK_ID:  

 Player 2 23:29:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to die"} 

 Player 2 23:29:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to die \n4:Refill holder1 slot"} 

 Player 2 23:29:26 $ADD_TO_STACK:  
{"stackEffect":{"entityId":27,"creatorCardId":290,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 2 23:29:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to die \n4:Refill holder1 slot"} 

 Player 2 23:29:26 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":27,"creatorCardId":290,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 2 23:29:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":177,"_text":"Add RefillEmptySlot 27 "}} 

 Player 2 23:29:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:29:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to die \n4:Refill holder1 slot"} 

 Player 2 23:29:26 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":27,"creatorCardId":290,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 2 23:29:26 $ACTION_MASSAGE_REMOVE:  
{"id":177} 

 Player 2 23:29:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":178,"_text":"Response Adding RefillEmptySlot 27"},"childOfId":177} 

 Player 2 23:29:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":179,"_text":"Wait For Response From Player 2 "},"childOfId":177} 

 Player 2 23:29:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:29:26 $ACTION_MASSAGE_REMOVE:  
{"id":179} 

 Player 2 23:29:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":180,"_text":"Wait For Response From Player 1 "},"childOfId":177} 

 Player 2 23:29:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:29:26 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:29:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to die"} 

 Player 1 23:29:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to die"} 

 Player 1 23:29:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to die \n4:Refill holder1 slot"} 

 Player 1 23:29:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to die \n4:Refill holder1 slot"} 

 Player 1 23:29:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to die \n4:Refill holder1 slot"} 

 Player 1 23:29:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to die \n4:Refill holder1 slot"} 

 Player 1 23:29:26 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:29:26 $ACTION_MASSAGE_REMOVE:  
{"id":180} 

 Player 2 23:29:26 $ACTION_MASSAGE_REMOVE:  
{"id":178} 

 Player 2 23:29:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":181,"_text":"Resolve RefillEmptySlot 27 "}} 

 Player 2 23:29:26 $DRAW_CARD:  
{"deckType":2} 

 Player 2 23:29:26 $FLIP_CARD:  
{"cardId":261} 

 Player 2 23:29:26 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":261} 

 Player 2 23:29:26 $NEW_MONSTER_ON_PLACE:  
{"cardId":261,"monsterPlaceId":1} 

 Player 2 23:29:26 $ACTION_MASSAGE_REMOVE:  
{"id":181} 

 Player 2 23:29:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to die"} 

 Player 2 23:29:26 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":27,"creatorCardId":290,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 2 23:29:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":182,"_text":"Remove After Resolve RefillEmptySlot 27  "}} 

 Player 2 23:29:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to die"} 

 Player 2 23:29:26 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":27,"creatorCardId":290,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 2 23:29:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":183,"_text":"Response Remove After Resolve RefillEmptySlot 27"},"childOfId":182} 

 Player 2 23:29:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":184,"_text":"Wait For Response From Player 1 "},"childOfId":182} 

 Player 2 23:29:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:29:26 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:29:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to die \n4:Refill holder1 slot"} 

 Player 1 23:29:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to die \n4:Refill holder1 slot"} 

 Player 1 23:29:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to die \n4:Refill holder1 slot"} 

 Player 1 23:29:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to die \n4:Refill holder1 slot"} 

 Player 1 23:29:27 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:29:27 $ACTION_MASSAGE_REMOVE:  
{"id":184} 

 Player 2 23:29:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":185,"_text":"Wait For Response From Player 2 "},"childOfId":182} 

 Player 2 23:29:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:29:27 $ACTION_MASSAGE_REMOVE:  
{"id":185} 

 Player 2 23:29:27 $ACTION_MASSAGE_REMOVE:  
{"id":183} 

 Player 2 23:29:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":186,"_text":"Resolve PlayerDeath 26 "}} 

 Player 2 23:29:27 $NEXT_STACK_ID:  

 Player 2 23:29:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to die"} 

 Player 2 23:29:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:29:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to die \n4:Player 2 is about to pay death penalties"} 

 Player 2 23:29:27 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":28,"creatorCardId":290,"playerToPayCardId":290,"stackEffectType":16}} 

 Player 2 23:29:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to die \n4:Player 2 is about to pay death penalties"} 

 Player 2 23:29:27 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":22,"creatorCardId":290,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 2 23:29:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to die \n4:Player 2 is about to pay death penalties"} 

 Player 2 23:29:27 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":26,"creatorCardId":290,"playerToDieCardId":290,"stackEffectType":15,"killerId":270}} 

 Player 2 23:29:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to die \n4:Player 2 is about to pay death penalties"} 

 Player 2 23:29:27 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":22,"creatorCardId":290,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 2 23:29:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to die \n4:Player 2 is about to pay death penalties"} 

 Player 2 23:29:27 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":23,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":270,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 23:29:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to die \n4:Player 2 is about to pay death penalties"} 

 Player 2 23:29:27 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":26,"creatorCardId":290,"playerToDieCardId":290,"stackEffectType":15,"killerId":270}} 

 Player 2 23:29:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to die \n4:Player 2 is about to pay death penalties"} 

 Player 2 23:29:27 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":28,"creatorCardId":290,"playerToPayCardId":290,"stackEffectType":16}} 

 Player 2 23:29:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to die \n4:Player 2 is about to pay death penalties"} 

 Player 2 23:29:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to die \n4:Player 2 is about to pay death penalties"} 

 Player 2 23:29:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to die \n4:Player 2 is about to pay death penalties"} 

 Player 2 23:29:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to die \n4:Player 2 is about to pay death penalties"} 

 Player 2 23:29:27 $REPLACE_STACK:  
{"currentStack":[{"entityId":22,"creatorCardId":290,"slotType":2,"slotToFillId":1,"stackEffectType":10},{"entityId":23,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":270,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1},{"entityId":26,"creatorCardId":290,"playerToDieCardId":290,"stackEffectType":15,"killerId":270},{"entityId":28,"creatorCardId":290,"playerToPayCardId":290,"stackEffectType":16}]} 

 Player 2 23:29:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to die \n4:Player 2 is about to pay death penalties"} 

 Player 2 23:29:27 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":26,"creatorCardId":290,"playerToDieCardId":290,"stackEffectType":15,"killerId":270}} 

 Player 2 23:29:27 $ACTION_MASSAGE_REMOVE:  
{"id":186} 

 Player 2 23:29:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to pay death penalties"} 

 Player 2 23:29:27 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":26,"creatorCardId":290,"playerToDieCardId":290,"stackEffectType":15,"killerId":270}} 

 Player 2 23:29:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":187,"_text":"Remove After Resolve PlayerDeath 26  "}} 

 Player 2 23:29:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to pay death penalties"} 

 Player 2 23:29:27 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":26,"creatorCardId":290,"playerToDieCardId":290,"stackEffectType":15,"killerId":270}} 

 Player 2 23:29:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":188,"_text":"Response Remove After Resolve PlayerDeath 26"},"childOfId":187} 

 Player 2 23:29:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":189,"_text":"Wait For Response From Player 2 "},"childOfId":187} 

 Player 2 23:29:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:29:28 $ACTION_MASSAGE_REMOVE:  
{"id":189} 

 Player 2 23:29:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":190,"_text":"Wait For Response From Player 1 "},"childOfId":187} 

 Player 2 23:29:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:29:28 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:29:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to die"} 

 Player 1 23:29:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to die"} 

 Player 1 23:29:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to pay death penalties"} 

 Player 1 23:29:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to pay death penalties"} 

 Player 1 23:29:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to pay death penalties"} 

 Player 1 23:29:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to pay death penalties"} 

 Player 1 23:29:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to pay death penalties"} 

 Player 1 23:29:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to pay death penalties"} 

 Player 1 23:29:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to pay death penalties"} 

 Player 1 23:29:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to pay death penalties"} 

 Player 1 23:29:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to pay death penalties"} 

 Player 1 23:29:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to pay death penalties"} 

 Player 1 23:29:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to pay death penalties"} 

 Player 1 23:29:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to pay death penalties"} 

 Player 1 23:29:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to pay death penalties"} 

 Player 1 23:29:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to pay death penalties"} 

 Player 1 23:29:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to pay death penalties"} 

 Player 1 23:29:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to pay death penalties"} 

 Player 1 23:29:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to pay death penalties"} 

 Player 1 23:29:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to pay death penalties"} 

 Player 1 23:29:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to pay death penalties"} 

 Player 1 23:29:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to pay death penalties"} 

 Player 1 23:29:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to die \n4:Player 2 is about to pay death penalties"} 

 Player 1 23:29:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to die \n4:Player 2 is about to pay death penalties"} 

 Player 1 23:29:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to die \n4:Player 2 is about to pay death penalties"} 

 Player 1 23:29:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to die \n4:Player 2 is about to pay death penalties"} 

 Player 1 23:29:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to die \n4:Player 2 is about to pay death penalties"} 

 Player 1 23:29:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to die \n4:Player 2 is about to pay death penalties"} 

 Player 1 23:29:28 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:29:28 $ACTION_MASSAGE_REMOVE:  
{"id":190} 

 Player 2 23:29:28 $ACTION_MASSAGE_REMOVE:  
{"id":188} 

 Player 2 23:29:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":191,"_text":"Resolve PlayerDeathPenalties 28 "}} 

 Player 2 23:29:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":192,"_text":"Player 2 pays Penalties"}} 

 Player 2 23:29:28 $SET_MONEY:  
{"playerId":2,"numOfCoins":2} 

 Player 2 23:29:28 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-1}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":16,"originStackId":-1},"isAfterActivation":true,"index":16} 

 Player 2 23:29:29 $ACTION_MASSAGE_REMOVE:  
{"id":182} 

 Player 2 23:29:30 $ACTION_MASSAGE_REMOVE:  
{"id":187} 

 Player 1 23:29:32 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:29:34 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":55} 

 Player 2 23:29:34 $MOVE_CARD:  
{"moveIndex":20,"cardId":55,"placeID":301,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 23:29:34 $MOVE_CARD_END:  
{"moveIndex":20,"cardId":55,"flipIfFlipped":true,"playerId":2} 

 Player 2 23:29:34 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":55} 

 Player 2 23:29:36 $REMOVE_FROM_PASSIVE_MANAGER:  
{"cardId":154} 

 Player 2 23:29:36 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_LOSE_ITEM","args":[{"type":0,"number":154}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":17,"originStackId":-1},"isAfterActivation":true,"index":17} 

 Player 2 23:29:36 $MOVE_CARD:  
{"moveIndex":21,"cardId":154,"placeID":303,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 23:29:36 $MOVE_CARD_END:  
{"moveIndex":21,"cardId":154,"flipIfFlipped":true,"playerId":2} 

 Player 2 23:29:36 $MOVE_CARD_TO_PILE:  
{"type":5,"cardId":154} 

 Player 2 23:29:36 $USE_ITEM:  
{"cardId":290} 

 Player 2 23:29:36 $USE_ITEM:  
{"cardId":291} 

 Player 2 23:29:36 $ACTION_MASSAGE_REMOVE:  
{"id":192} 

 Player 2 23:29:37 $PLAYER_DIED:  
{"playerId":2} 

 Player 2 23:29:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to pay death penalties"} 

 Player 2 23:29:37 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":28,"creatorCardId":290,"playerToPayCardId":290,"stackEffectType":16}} 

 Player 2 23:29:37 $ACTION_MASSAGE_REMOVE:  
{"id":191} 

 Player 2 23:29:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest"} 

 Player 2 23:29:37 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":28,"creatorCardId":290,"playerToPayCardId":290,"stackEffectType":16}} 

 Player 2 23:29:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":193,"_text":"Remove After Resolve PlayerDeathPenalties 28  "}} 

 Player 2 23:29:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest"} 

 Player 2 23:29:37 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":28,"creatorCardId":290,"playerToPayCardId":290,"stackEffectType":16}} 

 Player 2 23:29:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":194,"_text":"Response Remove After Resolve PlayerDeathPenalties 28"},"childOfId":193} 

 Player 2 23:29:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":195,"_text":"Wait For Response From Player 1 "},"childOfId":193} 

 Player 2 23:29:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:29:37 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:29:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to pay death penalties"} 

 Player 1 23:29:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to pay death penalties"} 

 Player 1 23:29:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to pay death penalties"} 

 Player 1 23:29:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to pay death penalties"} 

 Player 1 23:29:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to pay death penalties"} 

 Player 1 23:29:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 is about to pay death penalties"} 

 Player 1 23:29:37 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:29:37 $ACTION_MASSAGE_REMOVE:  
{"id":195} 

 Player 2 23:29:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":196,"_text":"Wait For Response From Player 2 "},"childOfId":193} 

 Player 2 23:29:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:29:37 $ACTION_MASSAGE_REMOVE:  
{"id":196} 

 Player 2 23:29:37 $ACTION_MASSAGE_REMOVE:  
{"id":194} 

 Player 2 23:29:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":197,"_text":"Resolve ActivateItem 23 "}} 

 Player 2 23:29:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest"} 

 Player 2 23:29:37 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":23,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":270,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 23:29:37 $ACTION_MASSAGE_REMOVE:  
{"id":166} 

 Player 2 23:29:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 2 23:29:37 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":23,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":270,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 23:29:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":198,"_text":"Remove After Resolve ActivateItem 23  "}} 

 Player 2 23:29:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 2 23:29:37 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":23,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":270,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 23:29:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":199,"_text":"Response Remove After Resolve ActivateItem 23"},"childOfId":198} 

 Player 2 23:29:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":200,"_text":"Wait For Response From Player 2 "},"childOfId":198} 

 Player 2 23:29:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:29:37 $ACTION_MASSAGE_REMOVE:  
{"id":200} 

 Player 2 23:29:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":201,"_text":"Wait For Response From Player 1 "},"childOfId":198} 

 Player 2 23:29:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:29:38 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:29:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest"} 

 Player 1 23:29:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest"} 

 Player 1 23:29:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest"} 

 Player 1 23:29:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest"} 

 Player 1 23:29:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest"} 

 Player 1 23:29:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Spiked Chest"} 

 Player 1 23:29:38 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:29:38 $ACTION_MASSAGE_REMOVE:  
{"id":201} 

 Player 2 23:29:38 $ACTION_MASSAGE_REMOVE:  
{"id":199} 

 Player 2 23:29:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":202,"_text":"Resolve RefillEmptySlot 22 "}} 

 Player 2 23:29:38 $ACTION_MASSAGE_REMOVE:  
{"id":161} 

 Player 2 23:29:38 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:29:38 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":22,"creatorCardId":290,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 2 23:29:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":203,"_text":"Remove After Resolve RefillEmptySlot 22  "}} 

 Player 2 23:29:38 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:29:38 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":22,"creatorCardId":290,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 2 23:29:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":204,"_text":"Response Remove After Resolve RefillEmptySlot 22"},"childOfId":203} 

 Player 2 23:29:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":205,"_text":"Wait For Response From Player 1 "},"childOfId":203} 

 Player 2 23:29:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:29:38 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:29:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 1 23:29:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 1 23:29:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 1 23:29:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 1 23:29:38 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:29:38 $ACTION_MASSAGE_REMOVE:  
{"id":205} 

 Player 2 23:29:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":206,"_text":"Wait For Response From Player 2 "},"childOfId":203} 

 Player 2 23:29:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:29:38 $ACTION_MASSAGE_REMOVE:  
{"id":206} 

 Player 2 23:29:38 $ACTION_MASSAGE_REMOVE:  
{"id":204} 

 Player 2 23:29:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":207,"_text":"Stack Was Emptied "}} 

 Player 2 23:29:38 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:29:38 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 23:29:38 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 23:29:38 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 23:29:38 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 23:29:38 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 23:29:38 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 23:29:38 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 23:29:38 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 23:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 23:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 23:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 23:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 23:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 23:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 23:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 23:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 23:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 23:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 23:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 23:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 23:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 23:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 2 23:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 2 23:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 2 23:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 2 23:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 2 23:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 2 23:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 2 23:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 2 23:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 2 23:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 2 23:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":72} 

 Player 2 23:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":76} 

 Player 2 23:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":77} 

 Player 2 23:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":81} 

 Player 2 23:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":82} 

 Player 2 23:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":83} 

 Player 2 23:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":87} 

 Player 2 23:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":91} 

 Player 2 23:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":92} 

 Player 2 23:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":96} 

 Player 2 23:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":97} 

 Player 2 23:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":101} 

 Player 2 23:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":102} 

 Player 2 23:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":106} 

 Player 2 23:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":107} 

 Player 2 23:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":111} 

 Player 2 23:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":112} 

 Player 2 23:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":113} 

 Player 2 23:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":117} 

 Player 2 23:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":118} 

 Player 2 23:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":122} 

 Player 2 23:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":123} 

 Player 2 23:29:40 $ACTION_MASSAGE_REMOVE:  
{"id":126} 

 Player 2 23:29:40 $ACTION_MASSAGE_REMOVE:  
{"id":130} 

 Player 2 23:29:40 $ACTION_MASSAGE_REMOVE:  
{"id":134} 

 Player 2 23:29:40 $ACTION_MASSAGE_REMOVE:  
{"id":135} 

 Player 2 23:29:40 $ACTION_MASSAGE_REMOVE:  
{"id":139} 

 Player 2 23:29:40 $ACTION_MASSAGE_REMOVE:  
{"id":140} 

 Player 2 23:29:40 $ACTION_MASSAGE_REMOVE:  
{"id":144} 

 Player 2 23:29:40 $ACTION_MASSAGE_REMOVE:  
{"id":145} 

 Player 2 23:29:40 $ACTION_MASSAGE_REMOVE:  
{"id":149} 

 Player 2 23:29:40 $ACTION_MASSAGE_REMOVE:  
{"id":150} 

 Player 2 23:29:40 $ACTION_MASSAGE_REMOVE:  
{"id":151} 

 Player 2 23:29:40 $ACTION_MASSAGE_REMOVE:  
{"id":155} 

 Player 2 23:29:40 $ACTION_MASSAGE_REMOVE:  
{"id":156} 

 Player 2 23:29:40 $ACTION_MASSAGE_REMOVE:  
{"id":157} 

 Player 2 23:29:40 $ACTION_MASSAGE_REMOVE:  
{"id":161} 

 Player 2 23:29:40 $ACTION_MASSAGE_REMOVE:  
{"id":162} 

 Player 2 23:29:40 $ACTION_MASSAGE_REMOVE:  
{"id":166} 

 Player 2 23:29:40 $ACTION_MASSAGE_REMOVE:  
{"id":167} 

 Player 2 23:29:40 $ACTION_MASSAGE_REMOVE:  
{"id":171} 

 Player 2 23:29:40 $ACTION_MASSAGE_REMOVE:  
{"id":172} 

 Player 2 23:29:40 $ACTION_MASSAGE_REMOVE:  
{"id":176} 

 Player 2 23:29:40 $ACTION_MASSAGE_REMOVE:  
{"id":177} 

 Player 2 23:29:40 $ACTION_MASSAGE_REMOVE:  
{"id":181} 

 Player 2 23:29:40 $ACTION_MASSAGE_REMOVE:  
{"id":182} 

 Player 2 23:29:40 $ACTION_MASSAGE_REMOVE:  
{"id":186} 

 Player 2 23:29:40 $ACTION_MASSAGE_REMOVE:  
{"id":187} 

 Player 2 23:29:40 $ACTION_MASSAGE_REMOVE:  
{"id":191} 

 Player 2 23:29:40 $ACTION_MASSAGE_REMOVE:  
{"id":192} 

 Player 2 23:29:40 $ACTION_MASSAGE_REMOVE:  
{"id":193} 

 Player 2 23:29:40 $ACTION_MASSAGE_REMOVE:  
{"id":197} 

 Player 2 23:29:40 $ACTION_MASSAGE_REMOVE:  
{"id":198} 

 Player 2 23:29:40 $ACTION_MASSAGE_REMOVE:  
{"id":202} 

 Player 2 23:29:40 $ACTION_MASSAGE_REMOVE:  
{"id":203} 

 Player 2 23:29:40 $ACTION_MASSAGE_REMOVE:  
{"id":207} 

 Player 2 23:29:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:29:40 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:29:40 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 23:29:40 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 23:29:40 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 23:29:40 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 23:29:40 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 23:29:40 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 23:29:40 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 23:29:40 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 23:29:40 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 23:29:40 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 23:29:40 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 23:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 23:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 23:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 23:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 23:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 23:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 23:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 23:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 23:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 23:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 23:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 2 23:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 2 23:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 2 23:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 2 23:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 2 23:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 2 23:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 2 23:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 2 23:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 2 23:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 2 23:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":72} 

 Player 2 23:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":76} 

 Player 2 23:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":77} 

 Player 2 23:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":81} 

 Player 2 23:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":82} 

 Player 2 23:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":83} 

 Player 2 23:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":87} 

 Player 2 23:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":91} 

 Player 2 23:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":92} 

 Player 2 23:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":96} 

 Player 2 23:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":97} 

 Player 2 23:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":101} 

 Player 2 23:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":102} 

 Player 2 23:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":106} 

 Player 2 23:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":107} 

 Player 2 23:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":111} 

 Player 2 23:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":112} 

 Player 2 23:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":113} 

 Player 2 23:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":117} 

 Player 2 23:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":118} 

 Player 2 23:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":122} 

 Player 2 23:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":123} 

 Player 2 23:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":126} 

 Player 2 23:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":130} 

 Player 2 23:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":134} 

 Player 2 23:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":135} 

 Player 2 23:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":139} 

 Player 2 23:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":140} 

 Player 2 23:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":144} 

 Player 2 23:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":145} 

 Player 2 23:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":149} 

 Player 2 23:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":150} 

 Player 2 23:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":151} 

 Player 2 23:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":155} 

 Player 2 23:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":156} 

 Player 2 23:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":157} 

 Player 2 23:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":161} 

 Player 2 23:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":162} 

 Player 2 23:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":166} 

 Player 2 23:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":167} 

 Player 2 23:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":171} 

 Player 2 23:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":172} 

 Player 2 23:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":176} 

 Player 2 23:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":177} 

 Player 2 23:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":181} 

 Player 2 23:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":182} 

 Player 2 23:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":186} 

 Player 2 23:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":187} 

 Player 2 23:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":191} 

 Player 2 23:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":192} 

 Player 2 23:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":193} 

 Player 2 23:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":197} 

 Player 2 23:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":198} 

 Player 2 23:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":202} 

 Player 2 23:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":203} 

 Player 2 23:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":207} 

 Player 2 23:29:42 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 2 23:29:42 $END_TURN:  

 Player 2 23:29:42 $SET_TURN:  
{"playerId":1} 

 Player 2 23:29:42 $START_TURN:  
{"playerId":1} 

 Player 2 23:29:42 $FINISH_DO_STACK_EFFECT:  
{"playerId":1,"newStack":[]} 

 Player 2 23:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":193} 

 Player 2 23:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":207} 

 Player 2 23:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":198} 

 Player 2 23:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":203} 

 Player 1 23:29:42 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 23:29:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 23:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 23:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 23:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 23:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 23:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 23:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 23:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 23:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 23:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 23:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 23:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 23:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 23:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 23:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 1 23:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 23:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 1 23:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 1 23:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 1 23:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 1 23:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 1 23:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 1 23:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 1 23:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 1 23:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 1 23:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 1 23:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 1 23:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 1 23:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 1 23:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 1 23:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 1 23:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":72} 

 Player 1 23:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":76} 

 Player 1 23:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":77} 

 Player 1 23:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":81} 

 Player 1 23:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":82} 

 Player 1 23:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":83} 

 Player 1 23:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":87} 

 Player 1 23:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":91} 

 Player 1 23:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":92} 

 Player 1 23:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":96} 

 Player 1 23:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":97} 

 Player 1 23:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":101} 

 Player 1 23:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":102} 

 Player 1 23:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":106} 

 Player 1 23:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":107} 

 Player 1 23:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":111} 

 Player 1 23:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":112} 

 Player 1 23:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":113} 

 Player 1 23:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":117} 

 Player 1 23:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":118} 

 Player 1 23:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":122} 

 Player 1 23:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":123} 

 Player 1 23:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":126} 

 Player 1 23:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":130} 

 Player 1 23:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":134} 

 Player 1 23:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":135} 

 Player 1 23:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":139} 

 Player 1 23:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":140} 

 Player 1 23:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":144} 

 Player 1 23:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":145} 

 Player 1 23:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":149} 

 Player 1 23:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":150} 

 Player 1 23:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":151} 

 Player 1 23:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":155} 

 Player 1 23:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":156} 

 Player 1 23:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":157} 

 Player 1 23:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":161} 

 Player 1 23:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":162} 

 Player 1 23:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":166} 

 Player 1 23:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":167} 

 Player 1 23:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":171} 

 Player 1 23:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":172} 

 Player 1 23:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":176} 

 Player 1 23:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":177} 

 Player 1 23:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":181} 

 Player 1 23:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":182} 

 Player 1 23:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":186} 

 Player 1 23:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":187} 

 Player 1 23:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":191} 

 Player 1 23:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":192} 

 Player 1 23:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":193} 

 Player 1 23:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":197} 

 Player 1 23:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":198} 

 Player 1 23:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":202} 

 Player 1 23:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":203} 

 Player 1 23:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":207} 

 Player 1 23:29:44 $RECHARGE_ITEM:  
{"cardId":296} 

 Player 1 23:29:44 $PLAYER_RECHARGE_ITEM:  
{"playerId":1,"cardId":296} 

 Player 1 23:29:44 $RECHARGE_ITEM:  
{"cardId":297} 

 Player 1 23:29:44 $PLAYER_RECHARGE_ITEM:  
{"playerId":1,"cardId":297} 

 Player 1 23:29:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:29:44 $NEXT_STACK_ID:  

 Player 1 23:29:44 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:29:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 23:29:44 $ADD_TO_STACK:  
{"stackEffect":{"entityId":29,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 

 Player 1 23:29:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 23:29:44 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":29,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 

 Player 1 23:29:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":208,"_text":"Add StartTurnLoot 29 "}} 

 Player 1 23:29:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:29:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 23:29:44 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":29,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 

 Player 1 23:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":208} 

 Player 1 23:29:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":209,"_text":"Response Adding StartTurnLoot 29"},"childOfId":208} 

 Player 1 23:29:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":210,"_text":"Wait For Response From Player 1 "},"childOfId":208} 

 Player 1 23:29:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:29:45 $ACTION_MASSAGE_REMOVE:  
{"id":155} 

 Player 1 23:29:45 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:29:45 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 23:29:45 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 23:29:45 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 23:29:45 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 23:29:45 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 23:29:45 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 23:29:45 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 23:29:45 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 23:29:45 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 23:29:45 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 23:29:45 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 23:29:45 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 23:29:45 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 23:29:45 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 23:29:45 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 1 23:29:45 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 23:29:45 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 1 23:29:45 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 1 23:29:45 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 1 23:29:45 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 1 23:29:45 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 1 23:29:45 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 1 23:29:45 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 1 23:29:45 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 1 23:29:45 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 1 23:29:45 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 1 23:29:45 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 1 23:29:45 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 1 23:29:45 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 1 23:29:45 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 1 23:29:45 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 1 23:29:45 $ACTION_MASSAGE_REMOVE:  
{"id":72} 

 Player 1 23:29:45 $ACTION_MASSAGE_REMOVE:  
{"id":76} 

 Player 1 23:29:45 $ACTION_MASSAGE_REMOVE:  
{"id":77} 

 Player 1 23:29:45 $ACTION_MASSAGE_REMOVE:  
{"id":81} 

 Player 1 23:29:45 $ACTION_MASSAGE_REMOVE:  
{"id":82} 

 Player 1 23:29:45 $ACTION_MASSAGE_REMOVE:  
{"id":83} 

 Player 1 23:29:45 $ACTION_MASSAGE_REMOVE:  
{"id":87} 

 Player 1 23:29:45 $ACTION_MASSAGE_REMOVE:  
{"id":91} 

 Player 1 23:29:45 $ACTION_MASSAGE_REMOVE:  
{"id":92} 

 Player 1 23:29:45 $ACTION_MASSAGE_REMOVE:  
{"id":96} 

 Player 1 23:29:45 $ACTION_MASSAGE_REMOVE:  
{"id":97} 

 Player 1 23:29:46 $ACTION_MASSAGE_REMOVE:  
{"id":101} 

 Player 1 23:29:46 $ACTION_MASSAGE_REMOVE:  
{"id":102} 

 Player 1 23:29:46 $ACTION_MASSAGE_REMOVE:  
{"id":106} 

 Player 1 23:29:46 $ACTION_MASSAGE_REMOVE:  
{"id":107} 

 Player 1 23:29:46 $ACTION_MASSAGE_REMOVE:  
{"id":111} 

 Player 1 23:29:46 $ACTION_MASSAGE_REMOVE:  
{"id":112} 

 Player 1 23:29:46 $ACTION_MASSAGE_REMOVE:  
{"id":113} 

 Player 1 23:29:46 $ACTION_MASSAGE_REMOVE:  
{"id":117} 

 Player 1 23:29:46 $ACTION_MASSAGE_REMOVE:  
{"id":118} 

 Player 1 23:29:46 $ACTION_MASSAGE_REMOVE:  
{"id":122} 

 Player 1 23:29:46 $ACTION_MASSAGE_REMOVE:  
{"id":123} 

 Player 1 23:29:46 $ACTION_MASSAGE_REMOVE:  
{"id":126} 

 Player 1 23:29:46 $ACTION_MASSAGE_REMOVE:  
{"id":130} 

 Player 1 23:29:46 $ACTION_MASSAGE_REMOVE:  
{"id":134} 

 Player 1 23:29:46 $ACTION_MASSAGE_REMOVE:  
{"id":135} 

 Player 1 23:29:46 $ACTION_MASSAGE_REMOVE:  
{"id":139} 

 Player 1 23:29:46 $ACTION_MASSAGE_REMOVE:  
{"id":140} 

 Player 1 23:29:46 $ACTION_MASSAGE_REMOVE:  
{"id":144} 

 Player 1 23:29:46 $ACTION_MASSAGE_REMOVE:  
{"id":145} 

 Player 1 23:29:46 $ACTION_MASSAGE_REMOVE:  
{"id":149} 

 Player 1 23:29:46 $ACTION_MASSAGE_REMOVE:  
{"id":150} 

 Player 1 23:29:46 $ACTION_MASSAGE_REMOVE:  
{"id":151} 

 Player 1 23:29:46 $ACTION_MASSAGE_REMOVE:  
{"id":155} 

 Player 1 23:29:46 $ACTION_MASSAGE_REMOVE:  
{"id":156} 

 Player 1 23:29:46 $ACTION_MASSAGE_REMOVE:  
{"id":157} 

 Player 1 23:29:46 $ACTION_MASSAGE_REMOVE:  
{"id":161} 

 Player 1 23:29:46 $ACTION_MASSAGE_REMOVE:  
{"id":162} 

 Player 1 23:29:46 $ACTION_MASSAGE_REMOVE:  
{"id":166} 

 Player 1 23:29:46 $ACTION_MASSAGE_REMOVE:  
{"id":167} 

 Player 1 23:29:46 $ACTION_MASSAGE_REMOVE:  
{"id":171} 

 Player 1 23:29:46 $ACTION_MASSAGE_REMOVE:  
{"id":172} 

 Player 1 23:29:46 $ACTION_MASSAGE_REMOVE:  
{"id":176} 

 Player 1 23:29:46 $ACTION_MASSAGE_REMOVE:  
{"id":177} 

 Player 1 23:29:46 $ACTION_MASSAGE_REMOVE:  
{"id":181} 

 Player 1 23:29:46 $ACTION_MASSAGE_REMOVE:  
{"id":182} 

 Player 1 23:29:46 $ACTION_MASSAGE_REMOVE:  
{"id":186} 

 Player 1 23:29:46 $ACTION_MASSAGE_REMOVE:  
{"id":187} 

 Player 1 23:29:46 $ACTION_MASSAGE_REMOVE:  
{"id":191} 

 Player 1 23:29:46 $ACTION_MASSAGE_REMOVE:  
{"id":192} 

 Player 1 23:29:46 $ACTION_MASSAGE_REMOVE:  
{"id":193} 

 Player 1 23:29:46 $ACTION_MASSAGE_REMOVE:  
{"id":197} 

 Player 1 23:29:46 $ACTION_MASSAGE_REMOVE:  
{"id":198} 

 Player 1 23:29:46 $ACTION_MASSAGE_REMOVE:  
{"id":202} 

 Player 1 23:29:46 $ACTION_MASSAGE_REMOVE:  
{"id":203} 

 Player 1 23:29:46 $ACTION_MASSAGE_REMOVE:  
{"id":207} 

 Player 1 23:29:46 $ACTION_MASSAGE_REMOVE:  
{"id":208} 

 Player 1 23:29:47 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:29:47 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":29,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 

 Player 1 23:29:47 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 1 23:29:47 $LOG_ERROR:  
{"message":"\"Cannot read property 'entityId' of undefined\"","stack":"\"TypeError: Cannot read property 'entityId' of undefined\\n    at Function.<anonymous> (src/project.dev.js:27929:47)\\n    at step (src/cocos2d-jsb.js:70997:23)\\n    at Object.next (src/cocos2d-jsb.js:70941:20)\\n    at src/cocos2d-jsb.js:70919:73\\n    at new Promise (<anonymous>)\\n    at 371.window.__awaiter (src/cocos2d-jsb.js:70899:16)\\n    at Function.Stack.removeAfterResolve (src/project.dev.js:27922:16)\\n    at Function.<anonymous> (src/project.dev.js:27608:32)\\n    at step (src/cocos2d-jsb.js:70997:23)\\n    at Object.next (src/cocos2d-jsb.js:70941:20)\""} 
//////Error From Player 1////
  

 Player 1 23:29:47 $LOG_ERROR:  
//////Error From Player 1////

 "\"Cannot read property 'entityId' of undefined\""

 + "\"TypeError: Cannot read property 'entityId' of undefined\
    at Function.<anonymous> (src/project.dev.js:27929:47)\
    at step (src/cocos2d-jsb.js:70997:23)\
    at Object.next (src/cocos2d-jsb.js:70941:20)\
    at src/cocos2d-jsb.js:70919:73\
    at new Promise (<anonymous>)\
    at 371.window.__awaiter (src/cocos2d-jsb.js:70899:16)\
    at Function.Stack.removeAfterResolve (src/project.dev.js:27922:16)\
    at Function.<anonymous> (src/project.dev.js:27608:32)\
    at step (src/cocos2d-jsb.js:70997:23)\
    at Object.next (src/cocos2d-jsb.js:70941:20)\""

////// 
//////Error From Player 1////

 "\"Cannot read property 'entityId' of undefined\""

 + "\"TypeError: Cannot read property 'entityId' of undefined\
    at Function.<anonymous> (src/project.dev.js:27929:47)\
    at step (src/cocos2d-jsb.js:70997:23)\
    at Object.next (src/cocos2d-jsb.js:70941:20)\
    at src/cocos2d-jsb.js:70919:73\
    at new Promise (<anonymous>)\
    at 371.window.__awaiter (src/cocos2d-jsb.js:70899:16)\
    at Function.Stack.removeAfterResolve (src/project.dev.js:27922:16)\
    at Function.<anonymous> (src/project.dev.js:27608:32)\
    at step (src/cocos2d-jsb.js:70997:23)\
    at Object.next (src/cocos2d-jsb.js:70941:20)\""

////// 

 Player 2 23:29:47 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 23:29:47 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:29:47 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:29:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 23:29:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 23:29:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 23:29:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 23:29:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 23:29:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 23:29:47 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 23:29:47 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:29:47 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 23:29:47 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 23:29:48 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 23:29:48 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 23:29:48 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 23:29:48 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 23:29:48 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 23:29:48 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 23:29:48 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 23:29:48 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 23:29:48 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 23:29:48 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 23:29:48 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 23:29:48 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 23:29:48 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 23:29:48 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 23:29:48 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 23:29:49 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 23:29:49 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 23:29:49 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 23:29:49 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 23:29:49 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 2 23:29:49 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 2 23:29:49 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 2 23:29:49 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 2 23:29:49 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 2 23:29:49 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 2 23:29:49 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 2 23:29:49 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 2 23:29:49 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 2 23:29:49 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 2 23:29:49 $ACTION_MASSAGE_REMOVE:  
{"id":72} 

 Player 2 23:29:49 $ACTION_MASSAGE_REMOVE:  
{"id":76} 

 Player 2 23:29:50 $ACTION_MASSAGE_REMOVE:  
{"id":77} 

 Player 2 23:29:50 $ACTION_MASSAGE_REMOVE:  
{"id":81} 

 Player 2 23:29:50 $ACTION_MASSAGE_REMOVE:  
{"id":82} 

 Player 2 23:29:50 $ACTION_MASSAGE_REMOVE:  
{"id":83} 

 Player 2 23:29:50 $ACTION_MASSAGE_REMOVE:  
{"id":87} 

 Player 2 23:29:50 $ACTION_MASSAGE_REMOVE:  
{"id":91} 

 Player 2 23:29:50 $ACTION_MASSAGE_REMOVE:  
{"id":92} 

 Player 2 23:29:50 $ACTION_MASSAGE_REMOVE:  
{"id":96} 

 Player 2 23:29:50 $ACTION_MASSAGE_REMOVE:  
{"id":97} 

 Player 2 23:29:50 $ACTION_MASSAGE_REMOVE:  
{"id":101} 

 Player 2 23:29:50 $ACTION_MASSAGE_REMOVE:  
{"id":102} 

 Player 2 23:29:50 $ACTION_MASSAGE_REMOVE:  
{"id":106} 

 Player 2 23:29:50 $ACTION_MASSAGE_REMOVE:  
{"id":107} 

 Player 2 23:29:50 $ACTION_MASSAGE_REMOVE:  
{"id":111} 

 Player 2 23:29:50 $ACTION_MASSAGE_REMOVE:  
{"id":112} 

 Player 2 23:29:51 $ACTION_MASSAGE_REMOVE:  
{"id":113} 

 Player 2 23:29:51 $ACTION_MASSAGE_REMOVE:  
{"id":117} 

 Player 2 23:29:51 $ACTION_MASSAGE_REMOVE:  
{"id":118} 

 Player 2 23:29:51 $ACTION_MASSAGE_REMOVE:  
{"id":122} 

 Player 2 23:29:51 $ACTION_MASSAGE_REMOVE:  
{"id":123} 

 Player 2 23:29:51 $ACTION_MASSAGE_REMOVE:  
{"id":126} 

 Player 2 23:29:51 $ACTION_MASSAGE_REMOVE:  
{"id":130} 

 Player 2 23:29:51 $ACTION_MASSAGE_REMOVE:  
{"id":134} 

 Player 2 23:29:51 $ACTION_MASSAGE_REMOVE:  
{"id":135} 

 Player 2 23:29:51 $ACTION_MASSAGE_REMOVE:  
{"id":139} 

 Player 2 23:29:51 $ACTION_MASSAGE_REMOVE:  
{"id":140} 

 Player 2 23:29:51 $ACTION_MASSAGE_REMOVE:  
{"id":144} 

 Player 2 23:29:51 $ACTION_MASSAGE_REMOVE:  
{"id":145} 

 Player 2 23:29:51 $ACTION_MASSAGE_REMOVE:  
{"id":149} 

 Player 2 23:29:51 $ACTION_MASSAGE_REMOVE:  
{"id":150} 

 Player 2 23:29:51 $ACTION_MASSAGE_REMOVE:  
{"id":151} 

 Player 2 23:29:51 $ACTION_MASSAGE_REMOVE:  
{"id":155} 

 Player 2 23:29:51 $ACTION_MASSAGE_REMOVE:  
{"id":156} 

 Player 2 23:29:51 $ACTION_MASSAGE_REMOVE:  
{"id":157} 

 Player 2 23:29:51 $ACTION_MASSAGE_REMOVE:  
{"id":161} 

 Player 2 23:29:51 $ACTION_MASSAGE_REMOVE:  
{"id":162} 

 Player 2 23:29:51 $ACTION_MASSAGE_REMOVE:  
{"id":166} 

 Player 2 23:29:51 $ACTION_MASSAGE_REMOVE:  
{"id":167} 

 Player 2 23:29:51 $ACTION_MASSAGE_REMOVE:  
{"id":171} 

 Player 2 23:29:51 $ACTION_MASSAGE_REMOVE:  
{"id":172} 

 Player 2 23:29:51 $ACTION_MASSAGE_REMOVE:  
{"id":176} 

 Player 2 23:29:51 $ACTION_MASSAGE_REMOVE:  
{"id":177} 

 Player 2 23:29:51 $ACTION_MASSAGE_REMOVE:  
{"id":181} 

 Player 2 23:29:51 $ACTION_MASSAGE_REMOVE:  
{"id":182} 

 Player 2 23:29:51 $ACTION_MASSAGE_REMOVE:  
{"id":186} 

 Player 2 23:29:51 $ACTION_MASSAGE_REMOVE:  
{"id":187} 

 Player 2 23:29:51 $ACTION_MASSAGE_REMOVE:  
{"id":191} 

 Player 2 23:29:52 $ACTION_MASSAGE_REMOVE:  
{"id":192} 

 Player 2 23:29:52 $ACTION_MASSAGE_REMOVE:  
{"id":193} 

 Player 2 23:29:52 $ACTION_MASSAGE_REMOVE:  
{"id":197} 

 Player 2 23:29:52 $ACTION_MASSAGE_REMOVE:  
{"id":198} 

 Player 2 23:29:52 $ACTION_MASSAGE_REMOVE:  
{"id":202} 

 Player 2 23:29:52 $ACTION_MASSAGE_REMOVE:  
{"id":203} 

 Player 2 23:29:52 $ACTION_MASSAGE_REMOVE:  
{"id":207} 

 Player 2 23:29:52 $ACTION_MASSAGE_REMOVE:  
{"id":208} 

 Player 1 23:29:52 $ACTION_MASSAGE_REMOVE:  
{"id":210} 

 Player 1 23:29:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":211,"_text":"Wait For Response From Player 2 "},"childOfId":208} 

 Player 1 23:29:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 23:29:52 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 23:29:52 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 23:29:52 $ACTION_MASSAGE_REMOVE:  
{"id":211} 

 Player 1 23:29:52 $ACTION_MASSAGE_REMOVE:  
{"id":209} 

 Player 2 23:41:35 $MATCH: 