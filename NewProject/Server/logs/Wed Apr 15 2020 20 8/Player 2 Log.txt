Start Log 
 Player 2 20:08:55 $MOVE_TO_TABLE:  
 Player 2 20:09:04 $FINISH_LOAD:  

 {"id":2,"turnPlayerId":2} 
 Player 2 20:09:04 $SET_CHAR:  

 {"originPlayerId":2,"playerId":1,"charCardId":319,"itemCardId":320} 
 Player 2 20:09:04 $ASSIGN_CHAR_TO_PLAYER:  

 {"playerId":2,"charCardId":325,"itemCardId":326} 
 Player 2 20:09:04 $DECK_ARRAGMENT:  

 {"deckType":1,"arrangement":[120,93,137,9,61,68,50,117,22,136,78,12,29,65,48,102,97,74,124,73,82,75,40,10,17,84,132,32,16,105,26,20,94,110,54,39,56,103,14,37,30,122,104,139,59,53,38,69,71,88,46,95,31,34,111,98,44,115,42,11,62,15,91,24,100,96,19,131,27,109,79,81,41,63,127,134,7,119,92,126,60,18,114,45,51,52,70,4,121,5,49,72,57,76,85,64,25,116,13,89,67,21,87,36,66,128,130,135,125,112,77,107,28,108,6,58,123,113,43,106,23,129,35,8,83,80,133,101,55,90,47,99,118,33,86,138]} 
 Player 2 20:09:04 $DECK_ARRAGMENT:  

 {"deckType":2,"arrangement":[296,224,292,223,239,274,238,258,271,251,248,308,285,234,244,243,287,306,256,286,291,226,289,252,288,262,225,268,255,260,272,310,307,227,290,283,297,270,237,233,282,267,284,250,299,269,298,261,305,264,293,266,229,309,276,265,280,232,275,247,303,263,228,230,294,236,235,273,279,300,277,231,241,295,253,304,281,246,245,302,249,240,278,257,259,301,242,254]} 
 Player 2 20:09:04 $DECK_ARRAGMENT:  

 {"deckType":5,"arrangement":[180,143,156,191,155,207,182,189,184,204,176,158,151,171,216,157,152,173,215,206,159,163,185,170,165,175,153,168,193,169,192,177,210,142,212,195,220,154,218,211,205,200,141,149,221,144,162,174,219,197,161,203,172,194,209,188,201,179,166,217,145,208,167,148,164,202,213,147,214,181,196,190,198,183,150,178,146,199,187,186,160]} 
 Player 2 20:09:04 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 20:09:04 $FLIP_CARD:  

 {"cardId":160} 
 Player 2 20:09:04 $ADD_STORE_CARD:  

 {"cardId":160} 
 Player 2 20:09:04 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 20:09:04 $FLIP_CARD:  

 {"cardId":186} 
 Player 2 20:09:04 $ADD_STORE_CARD:  

 {"cardId":186} 
 Player 2 20:09:04 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 20:09:04 $FLIP_CARD:  

 {"cardId":254} 
 Player 2 20:09:04 $REGISTER_PASSIVE_ITEM:  

 {"cardId":254} 
 Player 2 20:09:04 $ADD_MONSTER:  

 {"monsterPlaceId":1,"monsterId":254} 
 Player 2 20:09:04 $NEW_MONSTER_ON_PLACE:  

 {"cardId":254,"monsterPlaceId":1} 
 Player 2 20:09:04 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 20:09:04 $FLIP_CARD:  

 {"cardId":242} 
 Player 2 20:09:04 $REGISTER_PASSIVE_ITEM:  

 {"cardId":242} 
 Player 2 20:09:04 $ADD_MONSTER:  

 {"monsterPlaceId":2,"monsterId":242} 
 Player 2 20:09:04 $NEW_MONSTER_ON_PLACE:  

 {"cardId":242,"monsterPlaceId":2} 
 Player 2 20:09:04 $SET_MONEY:  

 {"playerId":1,"numOfCoins":3} 
 Player 2 20:09:04 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":319,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 20:09:04 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 20:09:04 $MOVE_CARD:  

 {"moveIndex":1,"cardId":138,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 20:09:05 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":138} 
 Player 2 20:09:05 $FLIP_CARD:  

 {"cardId":138} 
 Player 2 20:09:05 $FLIP_CARD:  

 {"cardId":138} 
 Player 2 20:09:05 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":138} 
 Player 2 20:09:05 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 20:09:05 $MOVE_CARD:  

 {"moveIndex":2,"cardId":86,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 20:09:05 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":86} 
 Player 2 20:09:05 $FLIP_CARD:  

 {"cardId":86} 
 Player 2 20:09:05 $FLIP_CARD:  

 {"cardId":86} 
 Player 2 20:09:05 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":86} 
 Player 2 20:09:05 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 20:09:06 $MOVE_CARD:  

 {"moveIndex":3,"cardId":33,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 20:09:06 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":33} 
 Player 2 20:09:06 $FLIP_CARD:  

 {"cardId":33} 
 Player 2 20:09:06 $FLIP_CARD:  

 {"cardId":33} 
 Player 2 20:09:06 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":33} 
 Player 2 20:09:06 $SET_MONEY:  

 {"playerId":2,"numOfCoins":3} 
 Player 2 20:09:06 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 2 20:09:06 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 20:09:06 $MOVE_CARD:  

 {"moveIndex":4,"cardId":118,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 20:09:06 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":118} 
 Player 2 20:09:06 $FLIP_CARD:  

 {"cardId":118} 
 Player 2 20:09:07 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":118} 
 Player 2 20:09:07 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 20:09:07 $MOVE_CARD:  

 {"moveIndex":5,"cardId":99,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 20:09:07 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":99} 
 Player 2 20:09:07 $FLIP_CARD:  

 {"cardId":99} 
 Player 2 20:09:07 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":99} 
 Player 2 20:09:07 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 20:09:07 $MOVE_CARD:  

 {"moveIndex":6,"cardId":47,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 20:09:07 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":47} 
 Player 2 20:09:07 $FLIP_CARD:  

 {"cardId":47} 
 Player 2 20:09:08 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":47} 
 Player 2 20:09:08 $GAME_HAS_STARTED:  
 Player 2 20:09:08 $SET_TURN:  

 {"playerId":2} 
 Player 2 20:09:08 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:09:08 $NEXT_STACK_ID:  
 Player 2 20:09:08 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:09:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 
 Player 2 20:09:08 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 
 Player 2 20:09:08 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":1,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 
 Player 2 20:09:08 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 20:09:08 $SHOW_STACK_EFFECT:  

 {"effectId":1} 
 Player 2 20:09:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 
 Player 2 20:09:11 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:09:11 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 
 Player 2 20:09:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 
 Player 2 20:09:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 2 20:09:11 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:09:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 2 20:09:11 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:09:11 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:09:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 
 Player 2 20:09:11 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 
 Player 2 20:09:11 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 20:09:11 $MOVE_CARD:  

 {"moveIndex":7,"cardId":90,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 20:09:11 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":90} 
 Player 2 20:09:11 $FLIP_CARD:  

 {"cardId":90} 
 Player 2 20:09:11 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":90} 
 Player 2 20:09:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Has Drawen Loot For Start Turn"} 
 Player 2 20:09:11 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 
 Player 2 20:09:11 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":1} 
 Player 2 20:09:11 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 20:09:11 $SHOW_STACK_EFFECT:  

 {"effectId":1} 
 Player 2 20:09:14 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":1} 
 Player 2 20:09:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 
 Player 2 20:09:14 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:09:14 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 
 Player 2 20:09:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 
 Player 2 20:09:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Player 2 20:09:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:09:14 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:09:15 $ACTION_MASSAGE_REMOVE:  

 {"id":7} 
 Player 2 20:09:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Player 2 20:09:15 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:09:15 $ACTION_MASSAGE_REMOVE:  

 {"id":8} 
 Player 2 20:09:15 $ACTION_MASSAGE_REMOVE:  

 {"id":6} 
 Player 2 20:09:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":9,"_text":"Stack Was Emptied "}} 
 Player 2 20:09:15 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:09:15 $CLEAR_SE_VIS:  
 Player 2 20:09:15 $UPDATE_ACTIONS:  
 Player 2 20:09:19 $MOVE_CARD:  

 {"moveIndex":8,"cardId":281,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 
 Player 2 20:09:19 $DECK_ARRAGMENT:  

 {"deckType":2,"arrangement":[296,224,292,223,239,274,238,258,271,251,248,308,285,234,244,243,287,306,256,286,291,226,289,252,288,262,225,268,255,260,272,310,307,227,290,283,297,270,237,233,282,267,284,250,299,269,298,261,305,264,293,266,229,309,276,265,280,232,275,247,303,263,228,230,294,236,235,273,279,300,277,231,241,295,253,304,246,245,302,249,240,278,257,259,301]} 
 Player 2 20:09:19 $FLIP_CARD:  

 {"cardId":281} 
 Player 2 20:09:19 $REGISTER_PASSIVE_ITEM:  

 {"cardId":281} 
 Player 2 20:09:20 $ADD_MONSTER:  

 {"monsterPlaceId":1,"monsterId":281} 
 Player 2 20:09:20 $NEW_MONSTER_ON_PLACE:  

 {"cardId":281,"monsterPlaceId":1} 
 Player 2 20:09:22 $NEXT_STACK_ID:  
 Player 2 20:09:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 declared attack on Isaac!"} 
 Player 2 20:09:22 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":281,"stackEffectType":4}} 
 Player 2 20:09:22 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":2,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":281,"stackEffectType":4}} 
 Player 2 20:09:22 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 20:09:22 $SHOW_STACK_EFFECT:  

 {"effectId":2} 
 Player 2 20:09:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":10,"_text":"Add DeclareAttack 2 "}} 
 Player 2 20:09:25 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:09:25 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":281,"stackEffectType":4}} 
 Player 2 20:09:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":11,"_text":"Response Adding DeclareAttack 2"},"childOfId":10} 
 Player 2 20:09:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 
 Player 2 20:09:25 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:09:25 $ACTION_MASSAGE_REMOVE:  

 {"id":12} 
 Player 2 20:09:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 
 Player 2 20:09:25 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:09:25 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:09:25 $ACTION_MASSAGE_REMOVE:  

 {"id":13} 
 Player 2 20:09:25 $ACTION_MASSAGE_REMOVE:  

 {"id":11} 
 Player 2 20:09:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":14,"_text":"Resolve DeclareAttack 2 "}} 
 Player 2 20:09:25 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":281,"stackEffectType":4}} 
 Player 2 20:09:25 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":281,"particleType":5} 
 Player 2 20:09:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Has Entered Battle with Isaac!"} 
 Player 2 20:09:25 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":3,"originStackId":2},"isAfterActivation":true,"index":3} 
 Player 2 20:09:25 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":281,"stackEffectType":4}} 
 Player 2 20:09:25 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":2} 
 Player 2 20:09:25 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 20:09:26 $SHOW_STACK_EFFECT:  

 {"effectId":2} 
 Player 2 20:09:28 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":2} 
 Player 2 20:09:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":15,"_text":"Remove After Resolve DeclareAttack 2  "}} 
 Player 2 20:09:28 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:09:28 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":281,"stackEffectType":4}} 
 Player 2 20:09:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":16,"_text":"Response Remove After Resolve DeclareAttack 2"},"childOfId":15} 
 Player 2 20:09:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 
 Player 2 20:09:28 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:09:28 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:09:29 $ACTION_MASSAGE_REMOVE:  

 {"id":17} 
 Player 2 20:09:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 
 Player 2 20:09:29 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:09:29 $ACTION_MASSAGE_REMOVE:  

 {"id":18} 
 Player 2 20:09:29 $ACTION_MASSAGE_REMOVE:  

 {"id":16} 
 Player 2 20:09:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":19,"_text":"Stack Was Emptied "}} 
 Player 2 20:09:29 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:09:29 $CLEAR_SE_VIS:  
 Player 2 20:09:30 $NEXT_STACK_ID:  
 Player 2 20:09:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 
 Player 2 20:09:30 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":325,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 2 20:09:30 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":325,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 2 20:09:30 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 20:09:30 $SHOW_STACK_EFFECT:  

 {"effectId":3} 
 Player 2 20:09:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":20,"_text":"Add AttackRoll 3 "}} 
 Player 2 20:09:33 $ROLL_DICE:  

 {"playerId":2} 
 Player 2 20:09:34 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":3} 
 Player 2 20:09:34 $UPDATE_STACK_VIS:  

 {"stackId":3,"text":"player rolled 3 vs Isaac!<Monster>"} 
 Player 2 20:09:34 $SHOW_DICE_ROLL:  

 {"stackId":3} 
 Player 2 20:09:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 3 vs Isaac!<Monster>"} 
 Player 2 20:09:37 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:09:37 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":325,"numberRolled":3,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 2 20:09:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":21,"_text":"Response Adding AttackRoll 3"},"childOfId":20} 
 Player 2 20:09:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 
 Player 2 20:09:37 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:09:37 $ACTION_MASSAGE_REMOVE:  

 {"id":22} 
 Player 2 20:09:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 
 Player 2 20:09:37 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:09:37 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:09:37 $ACTION_MASSAGE_REMOVE:  

 {"id":23} 
 Player 2 20:09:37 $ACTION_MASSAGE_REMOVE:  

 {"id":21} 
 Player 2 20:09:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":24,"_text":"Resolve AttackRoll 3 "}} 
 Player 2 20:09:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 3 vs Isaac!<Monster>"} 
 Player 2 20:09:37 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":325,"numberRolled":3,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 2 20:09:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":25,"_text":"Added 0 to original roll"}} 
 Player 2 20:09:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Rolled 4 Against Isaac!<Monster> 3"} 
 Player 2 20:09:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Roll Hit"} 
 Player 2 20:09:38 $NEXT_STACK_ID:  
 Player 2 20:09:38 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:09:38 $CLEAR_SE_VIS:  
 Player 2 20:09:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac! \n2:Player 2 Roll Hit"} 
 Player 2 20:09:38 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":4,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 
 Player 2 20:09:38 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":325,"numberRolled":3,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 2 20:09:38 $REPLACE_STACK:  

 {"currentStack":[{"entityId":4,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":3,"creatorCardId":325,"numberRolled":3,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":281}]} 
 Player 2 20:09:38 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 20:09:38 $SHOW_STACK_EFFECT:  

 {"effectId":4} 
 Player 2 20:09:40 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":4,"originStackId":3},"isAfterActivation":true,"index":4} 
 Player 2 20:09:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac! \n2:Player 2 Roll Hit"} 
 Player 2 20:09:40 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":325,"numberRolled":3,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 2 20:09:41 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":3} 
 Player 2 20:09:41 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 20:09:41 $SHOW_STACK_EFFECT:  

 {"effectId":3} 
 Player 2 20:09:43 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":3} 
 Player 2 20:09:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":26,"_text":"Remove After Resolve AttackRoll 3  "}} 
 Player 2 20:09:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac!"} 
 Player 2 20:09:44 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":325,"numberRolled":3,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 2 20:09:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":27,"_text":"Response Remove After Resolve AttackRoll 3"},"childOfId":26} 
 Player 2 20:09:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":26} 
 Player 2 20:09:44 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:09:44 $ACTION_MASSAGE_REMOVE:  

 {"id":28} 
 Player 2 20:09:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":29,"_text":"Wait For Response From Player 1 "},"childOfId":26} 
 Player 2 20:09:44 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:09:44 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:09:44 $ACTION_MASSAGE_REMOVE:  

 {"id":29} 
 Player 2 20:09:44 $ACTION_MASSAGE_REMOVE:  

 {"id":27} 
 Player 2 20:09:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":30,"_text":"Resolve CombatDamage 4 "}} 
 Player 2 20:09:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac!"} 
 Player 2 20:09:44 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":4,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 
 Player 2 20:09:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson will deal 1 combat damage to Isaac! "} 
 Player 2 20:09:44 $UPDATE_STACK_VIS:  

 {"stackId":4,"text":"Samson will deal 1 combat damage to Isaac!"} 
 Player 2 20:09:44 $LOG_ERROR:  

 {"message":"\"Cannot read property 'character' of null\"","stack":"\"TypeError: Cannot read property 'character' of null\\n    at Function.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:230:32), <anonymous>:342:47)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\\n    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113284:71\\n    at new Promise (<anonymous>)\\n    at 486.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113264:14)\\n    at Function.PassiveManager.testPassivesCondtions (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:230:32), <anonymous>:297:16)\\n    at Function.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:230:32), <anonymous>:419:51)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\""} 
 Player 2 20:09:44 $MONSTER_GET_DAMAGED:  

 {"cardId":281,"hpLeft":6,"damageDealerId":325} 
 Player 2 20:09:44 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":325},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 
 Player 2 20:09:44 $LOG_ERROR:  

 {"message":"\"Cannot read property 'getTarget' of undefined\"","stack":"\"TypeError: Cannot read property 'getTarget' of undefined\\n    at EntityTakeDamage.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:102:46)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\\n    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113284:71\\n    at new Promise (<anonymous>)\\n    at 486.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113264:14)\\n    at EntityTakeDamage.testCondition (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:93:16)\\n    at Function.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:230:32), <anonymous>:365:56)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\""} 
 Player 2 20:09:44 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":4},{"type":0,"number":325},{"type":0,"number":281}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":6,"originStackId":4},"isAfterActivation":true,"index":6} 
 Player 2 20:09:44 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":4,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 
 Player 2 20:09:44 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":4} 
 Player 2 20:09:45 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 20:09:45 $SHOW_STACK_EFFECT:  

 {"effectId":4} 
 Player 2 20:09:47 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":4} 
 Player 2 20:09:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":31,"_text":"Remove After Resolve CombatDamage 4  "}} 
 Player 2 20:09:47 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:09:47 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":4,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 
 Player 2 20:09:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":32,"_text":"Response Remove After Resolve CombatDamage 4"},"childOfId":31} 
 Player 2 20:09:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":31} 
 Player 2 20:09:47 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:09:47 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:09:47 $ACTION_MASSAGE_REMOVE:  

 {"id":33} 
 Player 2 20:09:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":34,"_text":"Wait For Response From Player 2 "},"childOfId":31} 
 Player 2 20:09:48 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:09:48 $ACTION_MASSAGE_REMOVE:  

 {"id":34} 
 Player 2 20:09:48 $ACTION_MASSAGE_REMOVE:  

 {"id":32} 
 Player 2 20:09:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":35,"_text":"Stack Was Emptied "}} 
 Player 2 20:09:48 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:09:48 $CLEAR_SE_VIS:  
 Player 2 20:10:51 $MATCH: 