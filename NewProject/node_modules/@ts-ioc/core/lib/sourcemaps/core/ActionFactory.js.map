{"version":3,"sources":["core/ActionFactory.ts"],"names":[],"mappings":";;AAAA,qCAOmB;AACnB,yDAAwD;AAGxD;;;;;GAKG;AACH;IAAA;IAqEmB,CAAC;IApEhB;;;;;;OAMG;IACH,8BAAM,GAAN,UAAO,IAAY;QACf,IAAI,MAAuB,CAAC;QAC5B,QAAQ,IAAI,EAAE;YACV,KAAK,qBAAW,CAAC,iBAAiB;gBAC9B,MAAM,GAAG,IAAI,iCAAuB,EAAE,CAAC;gBACvC,MAAM;YAEV,KAAK,qBAAW,CAAC,gBAAgB;gBAC7B,MAAM,GAAG,IAAI,gCAAsB,EAAE,CAAC;gBACtC,MAAM;YAEV,KAAK,qBAAW,CAAC,cAAc;gBAC3B,MAAM,GAAG,IAAI,8BAAoB,EAAE,CAAC;gBACpC,MAAM;YAEV,KAAK,qBAAW,CAAC,YAAY;gBACzB,MAAM,GAAG,IAAI,4BAAkB,EAAE,CAAC;gBAClC,MAAM;YAEV,KAAK,qBAAW,CAAC,sBAAsB;gBACnC,MAAM,GAAG,IAAI,qCAA2B,EAAE,CAAC;gBAC3C,MAAM;YAEV,KAAK,qBAAW,CAAC,aAAa;gBAC1B,MAAM,GAAG,IAAI,6BAAmB,EAAE,CAAC;gBACnC,MAAM;YAEV,KAAK,qBAAW,CAAC,mBAAmB;gBAChC,MAAM,GAAG,IAAI,mCAAyB,EAAE,CAAC;gBACzC,MAAM;YAEV,KAAK,qBAAW,CAAC,kBAAkB;gBAC/B,MAAM,GAAG,IAAI,kCAAwB,EAAE,CAAC;gBACxC,MAAM;YAEV,KAAK,qBAAW,CAAC,KAAK;gBAClB,MAAM,GAAG,IAAI,qBAAW,EAAE,CAAC;gBAC3B,MAAM;YAEV,KAAK,qBAAW,CAAC,UAAU;gBACvB,MAAM,GAAG,IAAI,0BAAgB,EAAE,CAAC;gBAChC,MAAM;YAEV,KAAK,qBAAW,CAAC,OAAO;gBACpB,MAAM,GAAG,IAAI,uBAAa,EAAE,CAAC;gBAC7B,MAAM;YACV,KAAK,qBAAW,CAAC,aAAa;gBAC1B,MAAM,GAAG,IAAI,6BAAa,EAAE,CAAC;gBAC7B,MAAM;YACV;gBACI,MAAM,GAAG,IAAI,yBAAe,CAAC,IAAI,CAAC,CAAC;gBACnC,MAAM;SAEb;QAED,OAAO,MAAM,CAAC;IAClB,CAAC;IAE0B,+BAAiB,GAAxB;QACI,OAAO,EAAC,MAAM,EAAC,eAAe,EAAC,QAAQ,EAAC,EAAC,QAAQ,EAAC,CAAC,MAAM,CAAC,EAAC,EAAC,CAAC;IACjE,CAAC;IACN,oBAAC;AAAD,CArEnB,AAqEoB,IAAA;AArEP,sCAAa","file":"../../core/ActionFactory.js","sourcesContent":["import {\r\n    ActionComponent, ActionComposite,\r\n    CoreActions, BindParameterTypeAction,\r\n    BindPropertyTypeAction, InjectPropertyAction,\r\n    BindParameterProviderAction, BindProviderAction,\r\n    ComponentInitAction, ComponentBeforeInitAction, ComponentAfterInitAction,\r\n    CacheAction, SingletionAction, AutorunAction\r\n} from './actions';\r\nimport { MethodAutorun } from './actions/MethodAutorun';\r\n\r\n\r\n/**\r\n * action factory.\r\n *\r\n * @export\r\n * @class ActionFactory\r\n */\r\nexport class ActionFactory {\r\n    /**\r\n     * create action by action type. type in 'CoreActions'\r\n     *\r\n     * @param {string} type\r\n     * @returns {ActionComponent}\r\n     * @memberof ActionFactory\r\n     */\r\n    create(type: string): ActionComponent {\r\n        let action: ActionComponent;\r\n        switch (type) {\r\n            case CoreActions.bindParameterType:\r\n                action = new BindParameterTypeAction();\r\n                break;\r\n\r\n            case CoreActions.bindPropertyType:\r\n                action = new BindPropertyTypeAction();\r\n                break;\r\n\r\n            case CoreActions.injectProperty:\r\n                action = new InjectPropertyAction();\r\n                break;\r\n\r\n            case CoreActions.bindProvider:\r\n                action = new BindProviderAction();\r\n                break;\r\n\r\n            case CoreActions.bindParameterProviders:\r\n                action = new BindParameterProviderAction();\r\n                break;\r\n\r\n            case CoreActions.componentInit:\r\n                action = new ComponentInitAction();\r\n                break;\r\n\r\n            case CoreActions.componentBeforeInit:\r\n                action = new ComponentBeforeInitAction();\r\n                break;\r\n\r\n            case CoreActions.componentAfterInit:\r\n                action = new ComponentAfterInitAction();\r\n                break;\r\n\r\n            case CoreActions.cache:\r\n                action = new CacheAction();\r\n                break;\r\n\r\n            case CoreActions.singletion:\r\n                action = new SingletionAction();\r\n                break;\r\n\r\n            case CoreActions.autorun:\r\n                action = new AutorunAction();\r\n                break;\r\n            case CoreActions.methodAutorun:\r\n                action = new MethodAutorun();\r\n                break;\r\n            default:\r\n                action = new ActionComposite(type);\r\n                break;\r\n\r\n        }\r\n\r\n        return action;\r\n    }\r\n\n                        static getClassAnnations():any  {\n                            return {\"name\":\"ActionFactory\",\"params\":{\"create\":[\"type\"]}};\n                        }\n                   }\r\n"]}