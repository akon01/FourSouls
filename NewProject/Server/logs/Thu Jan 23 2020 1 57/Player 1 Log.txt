Start Log 
 Player 1 01:57:37 $START_GAME:  
 Player 1 01:57:37 $MOVE_TO_TABLE:  
 Player 1 01:57:45 $FINISH_LOAD:  

 {"id":1,"turnPlayerId":2} 
 Player 1 01:57:45 $DECK_ARRAGMENT:  

 {"deckType":5,"arrangement":[182,156,168,192,225,157,185,184,221,175,213,191,219,176,152,169,215,203,218,208,200,159,146,174,209,195,177,179,224,150,167,183,189,211,198,154,151,186,196,155,172,197,212,188,171,202,181,214,216,178,190,210,201,223,206,164,180,149,205,199,187,204,161,222,147,158,193,170,163,145,162,194,160,165,217,173,153,207,220,148,166]} 
 Player 1 01:57:48 $EDEN_CHOSEN:  

 {"cardId":182,"playerId":2} 
 Player 1 01:57:49 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":182}],"result":true,"preventMethod":false,"methodScopeId":288,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 1 01:57:50 $MOVE_CARD_END:  

 {"moveIndex":1,"cardId":56,"flipIfFlipped":false,"playerId":2} 
 Player 1 01:57:50 $MOVE_CARD_END:  

 {"moveIndex":2,"cardId":73,"flipIfFlipped":false,"playerId":2} 
 Player 1 01:57:51 $MOVE_CARD_END:  

 {"moveIndex":3,"cardId":86,"flipIfFlipped":false,"playerId":2} 
 Player 1 01:57:51 $MOVE_CARD_END:  

 {"moveIndex":4,"cardId":17,"flipIfFlipped":false,"playerId":2} 
 Player 1 01:57:51 $MOVE_CARD_END:  

 {"moveIndex":5,"cardId":41,"flipIfFlipped":false,"playerId":2} 
 Player 1 01:57:52 $MOVE_CARD_END:  

 {"moveIndex":6,"cardId":90,"flipIfFlipped":false,"playerId":2} 
 Player 1 01:57:52 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 01:57:52 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 01:57:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 01:57:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 01:57:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 01:57:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 01:57:53 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 01:57:53 $MOVE_CARD_END:  

 {"moveIndex":7,"cardId":8,"flipIfFlipped":false,"playerId":2} 
 Player 1 01:57:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 01:57:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 01:57:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 01:57:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 01:57:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 01:57:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 01:57:53 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 01:58:20 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 01:58:20 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 01:58:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 3 Cents(3) "} 
 Player 1 01:58:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 3 Cents(3) "} 
 Player 1 01:58:20 $MOVE_CARD_END:  

 {"moveIndex":8,"cardId":41,"flipIfFlipped":true,"playerId":2} 
 Player 1 01:58:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 3 Cents(3) "} 
 Player 1 01:58:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 3 Cents(3) "} 
 Player 1 01:58:20 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 01:58:23 $MOVE_CARD_END:  

 {"moveIndex":9,"cardId":41,"flipIfFlipped":true,"playerId":2} 
 Player 1 01:58:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 3 Cents(3) "} 
 Player 1 01:58:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 3 Cents(3) "} 
 Player 1 01:58:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 3 Cents(3) "} 
 Player 1 01:58:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 3 Cents(3) "} 
 Player 1 01:58:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 3 Cents(3) "} 
 Player 1 01:58:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 3 Cents(3) "} 
 Player 1 01:58:23 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 01:58:30 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 01:58:30 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 01:58:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Samson"} 
 Player 1 01:58:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Samson"} 
 Player 1 01:58:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Samson"} 
 Player 1 01:58:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Samson"} 
 Player 1 01:58:36 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 01:58:38 $MOVE_CARD_END:  

 {"moveIndex":10,"cardId":17,"flipIfFlipped":true,"playerId":2} 
 Player 1 01:58:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Samson"} 
 Player 1 01:58:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Samson"} 
 Player 1 01:58:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 1 Penny(9) "} 
 Player 1 01:58:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 1 Penny(9) "} 
 Player 1 01:58:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 1 Penny(9) "} 
 Player 1 01:58:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 1 Penny(9) "} 
 Player 1 01:58:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 1 Penny(9) "} 
 Player 1 01:58:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 1 Penny(9) "} 
 Player 1 01:58:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 1 Penny(9) "} 
 Player 1 01:58:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 1 Penny(9) "} 
 Player 1 01:58:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 1 Penny(9) "} 
 Player 1 01:58:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 1 Penny(9) "} 
 Player 1 01:58:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 1 Penny(9)  \n2:Player 2 activated Samson"} 
 Player 1 01:58:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 1 Penny(9)  \n2:Player 2 activated Samson"} 
 Player 1 01:58:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 1 Penny(9)  \n2:Player 2 activated Samson"} 
 Player 1 01:58:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 1 Penny(9)  \n2:Player 2 activated Samson"} 
 Player 1 01:58:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 1 Penny(9)  \n2:Player 2 activated Samson"} 
 Player 1 01:58:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 1 Penny(9)  \n2:Player 2 activated Samson"} 
 Player 1 01:58:40 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 01:58:42 $MOVE_CARD_END:  

 {"moveIndex":11,"cardId":17,"flipIfFlipped":true,"playerId":2} 
 Player 1 01:58:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 1 Penny(9) "} 
 Player 1 01:58:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 1 Penny(9) "} 
 Player 1 01:58:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 1 Penny(9) "} 
 Player 1 01:58:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 1 Penny(9) "} 
 Player 1 01:58:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 1 Penny(9) "} 
 Player 1 01:58:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 1 Penny(9) "} 
 Player 1 01:58:43 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 01:58:48 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 01:58:48 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 01:58:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Dark One"} 
 Player 1 01:58:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Dark One"} 
 Player 1 01:58:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Dark One"} 
 Player 1 01:58:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Dark One"} 
 Player 1 01:58:48 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 01:58:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Dark One"} 
 Player 1 01:58:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Dark One"} 
 Player 1 01:58:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Dark One"} 
 Player 1 01:58:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Dark One"} 
 Player 1 01:58:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Dark One"} 
 Player 1 01:58:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Dark One"} 
 Player 1 01:58:49 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 01:58:58 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 01:58:59 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 01:58:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Dark One<Monster>"} 
 Player 1 01:58:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Dark One<Monster>"} 
 Player 1 01:59:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Dark One<Monster>"} 
 Player 1 01:59:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Dark One<Monster>"} 
 Player 1 01:59:03 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 01:59:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Dark One<Monster>"} 
 Player 1 01:59:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Dark One<Monster>"} 
 Player 1 01:59:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One"} 
 Player 1 01:59:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One"} 
 Player 1 01:59:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One"} 
 Player 1 01:59:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One"} 
 Player 1 01:59:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One"} 
 Player 1 01:59:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One"} 
 Player 1 01:59:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One"} 
 Player 1 01:59:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One"} 
 Player 1 01:59:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One"} 
 Player 1 01:59:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One"} 
 Player 1 01:59:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One \n2:Player 2 is rolling against Dark One<Monster>"} 
 Player 1 01:59:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One \n2:Player 2 is rolling against Dark One<Monster>"} 
 Player 1 01:59:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One \n2:Player 2 is rolling against Dark One<Monster>"} 
 Player 1 01:59:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One \n2:Player 2 is rolling against Dark One<Monster>"} 
 Player 1 01:59:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One \n2:Player 2 is rolling against Dark One<Monster>"} 
 Player 1 01:59:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One \n2:Player 2 is rolling against Dark One<Monster>"} 
 Player 1 01:59:04 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 01:59:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One"} 
 Player 1 01:59:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One"} 
 Player 1 01:59:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One \n2:Activate Dark One "} 
 Player 1 01:59:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One \n2:Activate Dark One "} 
 Player 1 01:59:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One \n2:Activate Dark One "} 
 Player 1 01:59:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One \n2:Activate Dark One "} 
 Player 1 01:59:05 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 01:59:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One \n2:Activate Dark One "} 
 Player 1 01:59:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One \n2:Activate Dark One "} 
 Player 1 01:59:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One \n2:Activate Dark One "} 
 Player 1 01:59:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One \n2:Activate Dark One "} 
 Player 1 01:59:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One \n2:Activate Dark One "} 
 Player 1 01:59:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One \n2:Activate Dark One "} 
 Player 1 01:59:07 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 01:59:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One"} 
 Player 1 01:59:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One"} 
 Player 1 01:59:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One"} 
 Player 1 01:59:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One"} 
 Player 1 01:59:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One"} 
 Player 1 01:59:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One"} 
 Player 1 01:59:08 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 01:59:09 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 01:59:09 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 01:59:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Dark One<Monster>"} 
 Player 1 01:59:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Dark One<Monster>"} 
 Player 1 01:59:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Dark One<Monster>"} 
 Player 1 01:59:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Dark One<Monster>"} 
 Player 1 01:59:14 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 01:59:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Dark One<Monster>"} 
 Player 1 01:59:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Dark One<Monster>"} 
 Player 1 01:59:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One"} 
 Player 1 01:59:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One"} 
 Player 1 01:59:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One"} 
 Player 1 01:59:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One"} 
 Player 1 01:59:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One"} 
 Player 1 01:59:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One"} 
 Player 1 01:59:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One"} 
 Player 1 01:59:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One"} 
 Player 1 01:59:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One"} 
 Player 1 01:59:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One"} 
 Player 1 01:59:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One \n2:Player 2 is rolling against Dark One<Monster>"} 
 Player 1 01:59:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One \n2:Player 2 is rolling against Dark One<Monster>"} 
 Player 1 01:59:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One \n2:Player 2 is rolling against Dark One<Monster>"} 
 Player 1 01:59:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One \n2:Player 2 is rolling against Dark One<Monster>"} 
 Player 1 01:59:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One \n2:Player 2 is rolling against Dark One<Monster>"} 
 Player 1 01:59:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One \n2:Player 2 is rolling against Dark One<Monster>"} 
 Player 1 01:59:15 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 01:59:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One"} 
 Player 1 01:59:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One"} 
 Player 1 01:59:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One \n2:Activate Dark One "} 
 Player 1 01:59:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One \n2:Activate Dark One "} 
 Player 1 01:59:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One \n2:Activate Dark One "} 
 Player 1 01:59:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One \n2:Activate Dark One "} 
 Player 1 01:59:16 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 01:59:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One \n2:Activate Dark One "} 
 Player 1 01:59:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One \n2:Activate Dark One "} 
 Player 1 01:59:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One \n2:Activate Dark One "} 
 Player 1 01:59:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One \n2:Activate Dark One "} 
 Player 1 01:59:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One \n2:Activate Dark One "} 
 Player 1 01:59:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One \n2:Activate Dark One "} 
 Player 1 01:59:18 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 01:59:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One"} 
 Player 1 01:59:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One"} 
 Player 1 01:59:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One"} 
 Player 1 01:59:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One"} 
 Player 1 01:59:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One"} 
 Player 1 01:59:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One"} 
 Player 1 01:59:19 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 01:59:25 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 01:59:25 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 01:59:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Dark One<Monster>"} 
 Player 1 01:59:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Dark One<Monster>"} 
 Player 1 01:59:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Dark One<Monster>"} 
 Player 1 01:59:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Dark One<Monster>"} 
 Player 1 01:59:29 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 01:59:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Dark One<Monster>"} 
 Player 1 01:59:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Dark One<Monster>"} 
 Player 1 01:59:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Samson"} 
 Player 1 01:59:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Samson"} 
 Player 1 01:59:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Samson"} 
 Player 1 01:59:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Samson"} 
 Player 1 01:59:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Samson"} 
 Player 1 01:59:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Samson"} 
 Player 1 01:59:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Samson"} 
 Player 1 01:59:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Samson"} 
 Player 1 01:59:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Samson"} 
 Player 1 01:59:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Samson"} 
 Player 1 01:59:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Samson \n2:Player 2 is rolling against Dark One<Monster>"} 
 Player 1 01:59:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Samson \n2:Player 2 is rolling against Dark One<Monster>"} 
 Player 1 01:59:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Samson \n2:Player 2 is rolling against Dark One<Monster>"} 
 Player 1 01:59:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Samson \n2:Player 2 is rolling against Dark One<Monster>"} 
 Player 1 01:59:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Samson \n2:Player 2 is rolling against Dark One<Monster>"} 
 Player 1 01:59:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Samson \n2:Player 2 is rolling against Dark One<Monster>"} 
 Player 1 01:59:30 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 01:59:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Samson"} 
 Player 1 01:59:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Samson"} 
 Player 1 01:59:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 01:59:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 01:59:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 01:59:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 01:59:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 01:59:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 01:59:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 01:59:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 01:59:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 01:59:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 01:59:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Samson \n2:Player 2 is about to die"} 
 Player 1 01:59:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Samson \n2:Player 2 is about to die"} 
 Player 1 01:59:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Samson \n2:Player 2 is about to die"} 
 Player 1 01:59:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Samson \n2:Player 2 is about to die"} 
 Player 1 01:59:32 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 01:59:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 01:59:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 01:59:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 01:59:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 01:59:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 01:59:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 01:59:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 01:59:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 01:59:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 01:59:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 01:59:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 01:59:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 01:59:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 1 01:59:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 1 01:59:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 1 01:59:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 1 01:59:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 1 01:59:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 1 01:59:33 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 01:59:36 $MOVE_CARD_END:  

 {"moveIndex":12,"cardId":8,"flipIfFlipped":true,"playerId":2} 
 Player 1 01:59:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 01:59:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 01:59:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 01:59:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 01:59:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 01:59:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 01:59:36 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 01:59:37 $STACK_EMPTIED:  

 {"playerId":2} 
 Player 1 01:59:37 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 01:59:37 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 01:59:37 $NEXT_STACK_ID:  
 Player 1 01:59:37 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 01:59:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 01:59:37 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":16,"creatorCardId":288,"turnPlayerCardId":288,"stackEffectType":13}} 
 Player 1 01:59:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 01:59:37 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":16,"creatorCardId":288,"turnPlayerCardId":288,"stackEffectType":13}} 
 Player 1 01:59:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":124,"_text":"Add StartTurnLoot 16 "}} 
 Player 1 01:59:37 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 01:59:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 01:59:37 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":16,"creatorCardId":288,"turnPlayerCardId":288,"stackEffectType":13}} 
 Player 1 01:59:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":125,"_text":"Response Adding StartTurnLoot 16"},"childOfId":124} 
 Player 1 01:59:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":126,"_text":"Wait For Response From Player 1 "},"childOfId":124} 
 Player 1 01:59:37 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 01:59:37 $ACTION_MASSAGE_REMOVE:  

 {"id":126} 
 Player 1 01:59:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":127,"_text":"Wait For Response From Player 2 "},"childOfId":124} 
 Player 1 01:59:37 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 01:59:37 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 01:59:37 $ACTION_MASSAGE_REMOVE:  

 {"id":127} 
 Player 1 01:59:37 $ACTION_MASSAGE_REMOVE:  

 {"id":125} 
 Player 1 01:59:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":128,"_text":"Resolve StartTurnLoot 16 "}} 
 Player 1 01:59:37 $DRAW_CARD:  

 {"deckType":1} 
 Player 1 01:59:37 $MOVE_CARD:  

 {"moveIndex":13,"cardId":93,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 1 01:59:38 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":93} 
 Player 1 01:59:38 $FLIP_CARD:  

 {"cardId":93} 
 Player 1 01:59:38 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":93} 
 Player 1 01:59:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 01:59:38 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":16,"creatorCardId":288,"turnPlayerCardId":288,"stackEffectType":13}} 
 Player 1 01:59:38 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 01:59:38 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":16,"creatorCardId":288,"turnPlayerCardId":288,"stackEffectType":13}} 
 Player 1 01:59:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":129,"_text":"Remove After Resolve StartTurnLoot 16  "}} 
 Player 1 01:59:38 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 01:59:38 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":16,"creatorCardId":288,"turnPlayerCardId":288,"stackEffectType":13}} 
 Player 1 01:59:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":130,"_text":"Response Remove After Resolve StartTurnLoot 16"},"childOfId":129} 
 Player 1 01:59:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":131,"_text":"Wait For Response From Player 2 "},"childOfId":129} 
 Player 1 01:59:38 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 01:59:38 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 01:59:38 $ACTION_MASSAGE_REMOVE:  

 {"id":131} 
 Player 1 01:59:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":132,"_text":"Wait For Response From Player 1 "},"childOfId":129} 
 Player 1 01:59:38 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 01:59:38 $ACTION_MASSAGE_REMOVE:  

 {"id":132} 
 Player 1 01:59:38 $ACTION_MASSAGE_REMOVE:  

 {"id":130} 
 Player 1 01:59:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":133,"_text":"Stack Was Emptied "}} 
 Player 1 01:59:39 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 01:59:40 $SHOW_DECISION:  

 {"startCardId":288,"endCardId":243} 
 Player 1 01:59:43 $NEXT_STACK_ID:  
 Player 1 01:59:43 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 01:59:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Dark One"} 
 Player 1 01:59:43 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":17,"creatorCardId":288,"attackingPlayerCardId":288,"idOfCardBeingAttacked":243,"stackEffectType":4}} 
 Player 1 01:59:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Dark One"} 
 Player 1 01:59:43 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":17,"creatorCardId":288,"attackingPlayerCardId":288,"idOfCardBeingAttacked":243,"stackEffectType":4}} 
 Player 1 01:59:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":134,"_text":"Add DeclareAttack 17 "}} 
 Player 1 01:59:43 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 01:59:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Dark One"} 
 Player 1 01:59:43 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":17,"creatorCardId":288,"attackingPlayerCardId":288,"idOfCardBeingAttacked":243,"stackEffectType":4}} 
 Player 1 01:59:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":135,"_text":"Response Adding DeclareAttack 17"},"childOfId":134} 
 Player 1 01:59:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":136,"_text":"Wait For Response From Player 1 "},"childOfId":134} 
 Player 1 01:59:43 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 01:59:43 $ACTION_MASSAGE_REMOVE:  

 {"id":136} 
 Player 1 01:59:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":137,"_text":"Wait For Response From Player 2 "},"childOfId":134} 
 Player 1 01:59:43 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 01:59:43 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 01:59:44 $ACTION_MASSAGE_REMOVE:  

 {"id":137} 
 Player 1 01:59:44 $ACTION_MASSAGE_REMOVE:  

 {"id":135} 
 Player 1 01:59:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":138,"_text":"Resolve DeclareAttack 17 "}} 
 Player 1 01:59:44 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":243,"particleType":5} 
 Player 1 01:59:44 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":288,"scopeIsPlayer":true,"index":2,"originStackId":17},"isAfterActivation":true,"index":2} 
 Player 1 01:59:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Dark One"} 
 Player 1 01:59:44 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":17,"creatorCardId":288,"attackingPlayerCardId":288,"idOfCardBeingAttacked":243,"stackEffectType":4}} 
 Player 1 01:59:44 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 01:59:44 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":17,"creatorCardId":288,"attackingPlayerCardId":288,"idOfCardBeingAttacked":243,"stackEffectType":4}} 
 Player 1 01:59:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":139,"_text":"Remove After Resolve DeclareAttack 17  "}} 
 Player 1 01:59:44 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 01:59:44 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":17,"creatorCardId":288,"attackingPlayerCardId":288,"idOfCardBeingAttacked":243,"stackEffectType":4}} 
 Player 1 01:59:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":140,"_text":"Response Remove After Resolve DeclareAttack 17"},"childOfId":139} 
 Player 1 01:59:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":141,"_text":"Wait For Response From Player 2 "},"childOfId":139} 
 Player 1 01:59:44 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 01:59:44 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 01:59:44 $ACTION_MASSAGE_REMOVE:  

 {"id":141} 
 Player 1 01:59:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":142,"_text":"Wait For Response From Player 1 "},"childOfId":139} 
 Player 1 01:59:44 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 01:59:44 $ACTION_MASSAGE_REMOVE:  

 {"id":142} 
 Player 1 01:59:44 $ACTION_MASSAGE_REMOVE:  

 {"id":140} 
 Player 1 01:59:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":143,"_text":"Stack Was Emptied "}} 
 Player 1 01:59:44 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 01:59:46 $NEXT_STACK_ID:  
 Player 1 01:59:46 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 01:59:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Dark One<Monster>"} 
 Player 1 01:59:47 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":18,"creatorCardId":288,"rollingPlayerCardId":288,"stackEffectType":2,"attackedMonsterCardId":243}} 
 Player 1 01:59:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Dark One<Monster>"} 
 Player 1 01:59:47 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":18,"creatorCardId":288,"rollingPlayerCardId":288,"stackEffectType":2,"attackedMonsterCardId":243}} 
 Player 1 01:59:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":144,"_text":"Add AttackRoll 18 "}} 
 Player 1 01:59:47 $ROLL_DICE:  

 {"playerId":1} 
 Player 1 01:59:48 $ROLL_DICE_ENDED:  

 {"playerId":1,"numberRolled":2} 
 Player 1 01:59:48 $UPDATE_STACK_VIS:  

 {"stackId":18,"text":"player rolled 2 vs Dark One<Monster>"} 
 Player 1 01:59:48 $SHOW_DICE_ROLL:  

 {"stackId":18} 
 Player 1 01:59:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Dark One<Monster>"} 
 Player 1 01:59:51 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 01:59:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Dark One<Monster>"} 
 Player 1 01:59:51 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":18,"creatorCardId":288,"numberRolled":2,"rollingPlayerCardId":288,"stackEffectType":2,"attackedMonsterCardId":243}} 
 Player 1 01:59:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":145,"_text":"Response Adding AttackRoll 18"},"childOfId":144} 
 Player 1 01:59:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":146,"_text":"Wait For Response From Player 1 "},"childOfId":144} 
 Player 1 01:59:51 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 01:59:51 $ACTION_MASSAGE_REMOVE:  

 {"id":146} 
 Player 1 01:59:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":147,"_text":"Wait For Response From Player 2 "},"childOfId":144} 
 Player 1 01:59:51 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 01:59:52 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 01:59:52 $ACTION_MASSAGE_REMOVE:  

 {"id":147} 
 Player 1 01:59:52 $ACTION_MASSAGE_REMOVE:  

 {"id":145} 
 Player 1 01:59:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":148,"_text":"Resolve AttackRoll 18 "}} 
 Player 1 01:59:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":149,"_text":"Added 0 to original roll"}} 
 Player 1 01:59:52 $NEXT_STACK_ID:  
 Player 1 01:59:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Dark One<Monster>"} 
 Player 1 01:59:52 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 01:59:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Eden \n2:Player 1 rolled 2 vs Dark One<Monster>"} 
 Player 1 01:59:52 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":19,"creatorCardId":288,"entityToDoDamageCardId":243,"entityToTakeDamageCardId":288,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 01:59:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Eden \n2:Player 1 rolled 2 vs Dark One<Monster>"} 
 Player 1 01:59:52 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":18,"creatorCardId":288,"numberRolled":2,"rollingPlayerCardId":288,"stackEffectType":2,"attackedMonsterCardId":243}} 
 Player 1 01:59:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Eden \n2:Player 1 rolled 2 vs Dark One<Monster>"} 
 Player 1 01:59:52 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":19,"creatorCardId":288,"entityToDoDamageCardId":243,"entityToTakeDamageCardId":288,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 01:59:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Eden \n2:Player 1 rolled 2 vs Dark One<Monster>"} 
 Player 1 01:59:52 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":18,"creatorCardId":288,"numberRolled":2,"rollingPlayerCardId":288,"stackEffectType":2,"attackedMonsterCardId":243}} 
 Player 1 01:59:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Eden \n2:Player 1 rolled 2 vs Dark One<Monster>"} 
 Player 1 01:59:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Eden \n2:Player 1 rolled 2 vs Dark One<Monster>"} 
 Player 1 01:59:52 $REPLACE_STACK:  

 {"currentStack":[{"entityId":19,"creatorCardId":288,"entityToDoDamageCardId":243,"entityToTakeDamageCardId":288,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":18,"creatorCardId":288,"numberRolled":2,"rollingPlayerCardId":288,"stackEffectType":2,"attackedMonsterCardId":243}]} 
 Player 1 01:59:52 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":288,"scopeIsPlayer":true,"index":3,"originStackId":18},"isAfterActivation":true,"index":3} 
 Player 1 01:59:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Eden \n2:Player 1 rolled 2 vs Dark One<Monster>"} 
 Player 1 01:59:52 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":18,"creatorCardId":288,"numberRolled":2,"rollingPlayerCardId":288,"stackEffectType":2,"attackedMonsterCardId":243}} 
 Player 1 01:59:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Eden"} 
 Player 1 01:59:52 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":18,"creatorCardId":288,"numberRolled":2,"rollingPlayerCardId":288,"stackEffectType":2,"attackedMonsterCardId":243}} 
 Player 1 01:59:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":150,"_text":"Remove After Resolve AttackRoll 18  "}} 
 Player 1 01:59:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Eden"} 
 Player 1 01:59:52 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":18,"creatorCardId":288,"numberRolled":2,"rollingPlayerCardId":288,"stackEffectType":2,"attackedMonsterCardId":243}} 
 Player 1 01:59:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":151,"_text":"Response Remove After Resolve AttackRoll 18"},"childOfId":150} 
 Player 1 01:59:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":152,"_text":"Wait For Response From Player 1 "},"childOfId":150} 
 Player 1 01:59:52 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 01:59:52 $ACTION_MASSAGE_REMOVE:  

 {"id":152} 
 Player 1 01:59:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":153,"_text":"Wait For Response From Player 2 "},"childOfId":150} 
 Player 1 01:59:52 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 01:59:52 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 01:59:53 $ACTION_MASSAGE_REMOVE:  

 {"id":153} 
 Player 1 01:59:53 $ACTION_MASSAGE_REMOVE:  

 {"id":151} 
 Player 1 01:59:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":154,"_text":"Resolve CombatDamage 19 "}} 
 Player 1 01:59:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One 1 combat damage to Eden"} 
 Player 1 01:59:53 $UPDATE_STACK_VIS:  

 {"stackId":19,"text":"Dark One will deal 1 combat damage to Eden"} 
 Player 1 01:59:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One 1 combat damage to Eden"} 
 Player 1 01:59:53 $PLAYER_GET_HIT:  

 {"playerId":1,"damage":1,"damageDealerId":243} 
 Player 1 01:59:53 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":243}],"result":null,"preventMethod":false,"methodScopeId":288,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 
 Player 1 01:59:53 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_TAKEN","args":[{"type":2,"number":1},{"type":2,"number":1},{"type":0,"number":243}],"result":null,"preventMethod":false,"methodScopeId":288,"scopeIsPlayer":true,"index":5,"originStackId":19},"isAfterActivation":true,"index":5} 
 Player 1 01:59:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One 1 combat damage to Eden"} 
 Player 1 01:59:53 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":19,"creatorCardId":288,"entityToDoDamageCardId":243,"entityToTakeDamageCardId":288,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 01:59:53 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 01:59:53 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":19,"creatorCardId":288,"entityToDoDamageCardId":243,"entityToTakeDamageCardId":288,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 01:59:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":155,"_text":"Remove After Resolve CombatDamage 19  "}} 
 Player 1 01:59:53 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 01:59:53 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":19,"creatorCardId":288,"entityToDoDamageCardId":243,"entityToTakeDamageCardId":288,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 01:59:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":156,"_text":"Response Remove After Resolve CombatDamage 19"},"childOfId":155} 
 Player 1 01:59:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":157,"_text":"Wait For Response From Player 2 "},"childOfId":155} 
 Player 1 01:59:53 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 01:59:53 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 01:59:54 $ACTION_MASSAGE_REMOVE:  

 {"id":157} 
 Player 1 01:59:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":158,"_text":"Wait For Response From Player 1 "},"childOfId":155} 
 Player 1 01:59:54 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 01:59:54 $ACTION_MASSAGE_REMOVE:  

 {"id":158} 
 Player 1 01:59:54 $ACTION_MASSAGE_REMOVE:  

 {"id":156} 
 Player 1 01:59:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":159,"_text":"Stack Was Emptied "}} 
 Player 1 01:59:54 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 01:59:57 $NEXT_STACK_ID:  
 Player 1 01:59:58 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 01:59:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Dark One<Monster>"} 
 Player 1 01:59:58 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":20,"creatorCardId":288,"rollingPlayerCardId":288,"stackEffectType":2,"attackedMonsterCardId":243}} 
 Player 1 01:59:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Dark One<Monster>"} 
 Player 1 01:59:58 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":20,"creatorCardId":288,"rollingPlayerCardId":288,"stackEffectType":2,"attackedMonsterCardId":243}} 
 Player 1 01:59:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":160,"_text":"Add AttackRoll 20 "}} 
 Player 1 01:59:58 $ROLL_DICE:  

 {"playerId":1} 
 Player 1 02:00:00 $ROLL_DICE_ENDED:  

 {"playerId":1,"numberRolled":2} 
 Player 1 02:00:00 $UPDATE_STACK_VIS:  

 {"stackId":20,"text":"player rolled 2 vs Dark One<Monster>"} 
 Player 1 02:00:00 $SHOW_DICE_ROLL:  

 {"stackId":20} 
 Player 1 02:00:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Dark One<Monster>"} 
 Player 1 02:00:03 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:00:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Dark One<Monster>"} 
 Player 1 02:00:03 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":20,"creatorCardId":288,"numberRolled":2,"rollingPlayerCardId":288,"stackEffectType":2,"attackedMonsterCardId":243}} 
 Player 1 02:00:03 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":161,"_text":"Response Adding AttackRoll 20"},"childOfId":160} 
 Player 1 02:00:03 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":162,"_text":"Wait For Response From Player 1 "},"childOfId":160} 
 Player 1 02:00:03 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:00:03 $ACTION_MASSAGE_REMOVE:  

 {"id":162} 
 Player 1 02:00:03 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":163,"_text":"Wait For Response From Player 2 "},"childOfId":160} 
 Player 1 02:00:03 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 02:00:03 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 02:00:03 $ACTION_MASSAGE_REMOVE:  

 {"id":163} 
 Player 1 02:00:03 $ACTION_MASSAGE_REMOVE:  

 {"id":161} 
 Player 1 02:00:03 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":164,"_text":"Resolve AttackRoll 20 "}} 
 Player 1 02:00:03 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":165,"_text":"Added 0 to original roll"}} 
 Player 1 02:00:03 $NEXT_STACK_ID:  
 Player 1 02:00:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Dark One<Monster>"} 
 Player 1 02:00:03 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:00:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Eden \n2:Player 1 rolled 2 vs Dark One<Monster>"} 
 Player 1 02:00:03 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":21,"creatorCardId":288,"entityToDoDamageCardId":243,"entityToTakeDamageCardId":288,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 02:00:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Eden \n2:Player 1 rolled 2 vs Dark One<Monster>"} 
 Player 1 02:00:04 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":20,"creatorCardId":288,"numberRolled":2,"rollingPlayerCardId":288,"stackEffectType":2,"attackedMonsterCardId":243}} 
 Player 1 02:00:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Eden \n2:Player 1 rolled 2 vs Dark One<Monster>"} 
 Player 1 02:00:04 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":21,"creatorCardId":288,"entityToDoDamageCardId":243,"entityToTakeDamageCardId":288,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 02:00:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Eden \n2:Player 1 rolled 2 vs Dark One<Monster>"} 
 Player 1 02:00:04 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":20,"creatorCardId":288,"numberRolled":2,"rollingPlayerCardId":288,"stackEffectType":2,"attackedMonsterCardId":243}} 
 Player 1 02:00:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Eden \n2:Player 1 rolled 2 vs Dark One<Monster>"} 
 Player 1 02:00:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Eden \n2:Player 1 rolled 2 vs Dark One<Monster>"} 
 Player 1 02:00:04 $REPLACE_STACK:  

 {"currentStack":[{"entityId":21,"creatorCardId":288,"entityToDoDamageCardId":243,"entityToTakeDamageCardId":288,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":20,"creatorCardId":288,"numberRolled":2,"rollingPlayerCardId":288,"stackEffectType":2,"attackedMonsterCardId":243}]} 
 Player 1 02:00:04 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":1},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":288,"scopeIsPlayer":true,"index":6,"originStackId":20},"isAfterActivation":true,"index":6} 
 Player 1 02:00:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Eden \n2:Player 1 rolled 2 vs Dark One<Monster>"} 
 Player 1 02:00:04 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":20,"creatorCardId":288,"numberRolled":2,"rollingPlayerCardId":288,"stackEffectType":2,"attackedMonsterCardId":243}} 
 Player 1 02:00:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Eden"} 
 Player 1 02:00:04 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":20,"creatorCardId":288,"numberRolled":2,"rollingPlayerCardId":288,"stackEffectType":2,"attackedMonsterCardId":243}} 
 Player 1 02:00:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":166,"_text":"Remove After Resolve AttackRoll 20  "}} 
 Player 1 02:00:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Eden"} 
 Player 1 02:00:04 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":20,"creatorCardId":288,"numberRolled":2,"rollingPlayerCardId":288,"stackEffectType":2,"attackedMonsterCardId":243}} 
 Player 1 02:00:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":167,"_text":"Response Remove After Resolve AttackRoll 20"},"childOfId":166} 
 Player 1 02:00:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":168,"_text":"Wait For Response From Player 1 "},"childOfId":166} 
 Player 1 02:00:04 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:00:04 $ACTION_MASSAGE_REMOVE:  

 {"id":168} 
 Player 1 02:00:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":169,"_text":"Wait For Response From Player 2 "},"childOfId":166} 
 Player 1 02:00:04 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 02:00:04 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 02:00:05 $ACTION_MASSAGE_REMOVE:  

 {"id":169} 
 Player 1 02:00:05 $ACTION_MASSAGE_REMOVE:  

 {"id":167} 
 Player 1 02:00:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":170,"_text":"Resolve CombatDamage 21 "}} 
 Player 1 02:00:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One 1 combat damage to Eden"} 
 Player 1 02:00:05 $UPDATE_STACK_VIS:  

 {"stackId":21,"text":"Dark One will deal 1 combat damage to Eden"} 
 Player 1 02:00:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One 1 combat damage to Eden"} 
 Player 1 02:00:05 $PLAYER_GET_HIT:  

 {"playerId":1,"damage":1,"damageDealerId":243} 
 Player 1 02:00:05 $NEXT_STACK_ID:  
 Player 1 02:00:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One 1 combat damage to Eden"} 
 Player 1 02:00:05 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:00:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One 1 combat damage to Eden \n2:Player 1 is about to die"} 
 Player 1 02:00:05 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":22,"creatorCardId":288,"playerToDieCardId":288,"stackEffectType":15,"killerId":243}} 
 Player 1 02:00:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One 1 combat damage to Eden \n2:Player 1 is about to die"} 
 Player 1 02:00:05 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":21,"creatorCardId":288,"entityToDoDamageCardId":243,"entityToTakeDamageCardId":288,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 02:00:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One 1 combat damage to Eden \n2:Player 1 is about to die"} 
 Player 1 02:00:05 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":21,"creatorCardId":288,"entityToDoDamageCardId":243,"entityToTakeDamageCardId":288,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 02:00:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One 1 combat damage to Eden \n2:Player 1 is about to die"} 
 Player 1 02:00:05 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":22,"creatorCardId":288,"playerToDieCardId":288,"stackEffectType":15,"killerId":243}} 
 Player 1 02:00:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One 1 combat damage to Eden \n2:Player 1 is about to die"} 
 Player 1 02:00:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One 1 combat damage to Eden \n2:Player 1 is about to die"} 
 Player 1 02:00:05 $REPLACE_STACK:  

 {"currentStack":[{"entityId":21,"creatorCardId":288,"entityToDoDamageCardId":243,"entityToTakeDamageCardId":288,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":22,"creatorCardId":288,"playerToDieCardId":288,"stackEffectType":15,"killerId":243}]} 
 Player 1 02:00:05 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":243}],"result":null,"preventMethod":false,"methodScopeId":288,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 
 Player 1 02:00:05 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_TAKEN","args":[{"type":2,"number":1},{"type":2,"number":1},{"type":0,"number":243}],"result":null,"preventMethod":false,"methodScopeId":288,"scopeIsPlayer":true,"index":8,"originStackId":21},"isAfterActivation":true,"index":8} 
 Player 1 02:00:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 1 02:00:05 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":21,"creatorCardId":288,"entityToDoDamageCardId":243,"entityToTakeDamageCardId":288,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 02:00:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":171,"_text":"Remove After Resolve CombatDamage 21  "}} 
 Player 1 02:00:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 1 02:00:05 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":21,"creatorCardId":288,"entityToDoDamageCardId":243,"entityToTakeDamageCardId":288,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 02:00:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":172,"_text":"Response Remove After Resolve CombatDamage 21"},"childOfId":171} 
 Player 1 02:00:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":173,"_text":"Wait For Response From Player 1 "},"childOfId":171} 
 Player 1 02:00:05 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:00:05 $ACTION_MASSAGE_REMOVE:  

 {"id":173} 
 Player 1 02:00:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":174,"_text":"Wait For Response From Player 2 "},"childOfId":171} 
 Player 1 02:00:05 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 02:00:05 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 02:00:06 $ACTION_MASSAGE_REMOVE:  

 {"id":174} 
 Player 1 02:00:06 $ACTION_MASSAGE_REMOVE:  

 {"id":172} 
 Player 1 02:00:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":175,"_text":"Resolve PlayerDeath 22 "}} 
 Player 1 02:00:06 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":243,"particleType":5} 
 Player 1 02:00:06 $CANCEL_ATTACK:  
 Player 1 02:00:06 $NEXT_STACK_ID:  
 Player 1 02:00:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 1 02:00:06 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:00:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 
 Player 1 02:00:06 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":23,"creatorCardId":288,"playerToPayCardId":288,"stackEffectType":16}} 
 Player 1 02:00:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 
 Player 1 02:00:06 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":22,"creatorCardId":288,"playerToDieCardId":288,"stackEffectType":15,"killerId":243}} 
 Player 1 02:00:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 
 Player 1 02:00:06 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":22,"creatorCardId":288,"playerToDieCardId":288,"stackEffectType":15,"killerId":243}} 
 Player 1 02:00:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 
 Player 1 02:00:06 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":23,"creatorCardId":288,"playerToPayCardId":288,"stackEffectType":16}} 
 Player 1 02:00:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 
 Player 1 02:00:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 
 Player 1 02:00:06 $REPLACE_STACK:  

 {"currentStack":[{"entityId":22,"creatorCardId":288,"playerToDieCardId":288,"stackEffectType":15,"killerId":243},{"entityId":23,"creatorCardId":288,"playerToPayCardId":288,"stackEffectType":16}]} 
 Player 1 02:00:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 
 Player 1 02:00:06 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":22,"creatorCardId":288,"playerToDieCardId":288,"stackEffectType":15,"killerId":243}} 
 Player 1 02:00:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 1 02:00:06 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":22,"creatorCardId":288,"playerToDieCardId":288,"stackEffectType":15,"killerId":243}} 
 Player 1 02:00:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":176,"_text":"Remove After Resolve PlayerDeath 22  "}} 
 Player 1 02:00:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 1 02:00:06 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":22,"creatorCardId":288,"playerToDieCardId":288,"stackEffectType":15,"killerId":243}} 
 Player 1 02:00:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":177,"_text":"Response Remove After Resolve PlayerDeath 22"},"childOfId":176} 
 Player 1 02:00:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":178,"_text":"Wait For Response From Player 1 "},"childOfId":176} 
 Player 1 02:00:07 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:00:07 $ACTION_MASSAGE_REMOVE:  

 {"id":178} 
 Player 1 02:00:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":179,"_text":"Wait For Response From Player 2 "},"childOfId":176} 
 Player 1 02:00:07 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 02:00:07 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 02:00:07 $ACTION_MASSAGE_REMOVE:  

 {"id":179} 
 Player 1 02:00:07 $ACTION_MASSAGE_REMOVE:  

 {"id":177} 
 Player 1 02:00:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":180,"_text":"Resolve PlayerDeathPenalties 23 "}} 
 Player 1 02:00:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":181,"_text":"Player 1 pays Penalties"}} 
 Player 1 02:00:07 $SET_MONEY:  

 {"playerId":1,"numOfCoins":2} 
 Player 1 02:00:07 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-1}],"result":null,"preventMethod":false,"methodScopeId":288,"scopeIsPlayer":true,"index":9,"originStackId":-1},"isAfterActivation":true,"index":9} 
 Player 1 02:00:12 $PLAYER_LOSE_LOOT:  

 {"playerId":1,"cardId":93} 
 Player 1 02:00:12 $MOVE_CARD:  

 {"moveIndex":14,"cardId":93,"placeID":301,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 02:00:13 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":93} 
 Player 1 02:00:13 $USE_ITEM:  

 {"cardId":288} 
 Player 1 02:00:13 $USE_ITEM:  

 {"cardId":182} 
 Player 1 02:00:13 $PLAYER_DIED:  

 {"playerId":1} 
 Player 1 02:00:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 1 02:00:13 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":23,"creatorCardId":288,"playerToPayCardId":288,"stackEffectType":16}} 
 Player 1 02:00:13 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:00:13 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":23,"creatorCardId":288,"playerToPayCardId":288,"stackEffectType":16}} 
 Player 1 02:00:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":182,"_text":"Remove After Resolve PlayerDeathPenalties 23  "}} 
 Player 1 02:00:13 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:00:13 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":23,"creatorCardId":288,"playerToPayCardId":288,"stackEffectType":16}} 
 Player 1 02:00:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":183,"_text":"Response Remove After Resolve PlayerDeathPenalties 23"},"childOfId":182} 
 Player 1 02:00:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":184,"_text":"Wait For Response From Player 2 "},"childOfId":182} 
 Player 1 02:00:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 02:00:13 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 02:00:13 $ACTION_MASSAGE_REMOVE:  

 {"id":184} 
 Player 1 02:00:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":185,"_text":"Wait For Response From Player 1 "},"childOfId":182} 
 Player 1 02:00:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:00:13 $ACTION_MASSAGE_REMOVE:  

 {"id":185} 
 Player 1 02:00:13 $ACTION_MASSAGE_REMOVE:  

 {"id":183} 
 Player 1 02:00:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":186,"_text":"Stack Was Emptied "}} 
 Player 1 02:00:13 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:00:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:00:13 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:00:13 $REPLACE_STACK:  

 {"currentStack":[]} 
 Player 1 02:00:13 $END_TURN:  
 Player 1 02:00:14 $SET_TURN:  

 {"playerId":2} 
 Player 1 02:00:14 $START_TURN:  

 {"playerId":2} 
 Player 1 02:00:14 $STACK_EMPTIED:  

 {"playerId":2} 
 Player 1 02:00:14 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:00:14 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:00:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 02:00:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 02:00:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 02:00:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 02:00:14 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:00:15 $MOVE_CARD_END:  

 {"moveIndex":15,"cardId":22,"flipIfFlipped":false,"playerId":2} 
 Player 1 02:00:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 02:00:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 02:00:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 02:00:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 02:00:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 02:00:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 02:00:15 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:00:33 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:00:33 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:00:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 2 Cents(2) "} 
 Player 1 02:00:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 2 Cents(2) "} 
 Player 1 02:00:33 $MOVE_CARD_END:  

 {"moveIndex":16,"cardId":22,"flipIfFlipped":true,"playerId":2} 
 Player 1 02:00:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 2 Cents(2) "} 
 Player 1 02:00:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 2 Cents(2) "} 
 Player 1 02:00:34 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:00:36 $MOVE_CARD_END:  

 {"moveIndex":17,"cardId":22,"flipIfFlipped":true,"playerId":2} 
 Player 1 02:00:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 2 Cents(2) "} 
 Player 1 02:00:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 2 Cents(2) "} 
 Player 1 02:00:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 2 Cents(2) "} 
 Player 1 02:00:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 2 Cents(2) "} 
 Player 1 02:00:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 2 Cents(2) "} 
 Player 1 02:00:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 2 Cents(2) "} 
 Player 1 02:00:37 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:00:42 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:00:42 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:00:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Samson"} 
 Player 1 02:00:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Samson"} 
 Player 1 02:00:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Samson"} 
 Player 1 02:00:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Samson"} 
 Player 1 02:00:47 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:00:49 $MOVE_CARD_END:  

 {"moveIndex":18,"cardId":90,"flipIfFlipped":true,"playerId":2} 
 Player 1 02:00:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Samson"} 
 Player 1 02:00:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Samson"} 
 Player 1 02:00:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Bomb(3) "} 
 Player 1 02:00:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Bomb(3) "} 
 Player 1 02:00:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Bomb(3) "} 
 Player 1 02:00:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Bomb(3) "} 
 Player 1 02:00:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Bomb(3) "} 
 Player 1 02:00:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Bomb(3) "} 
 Player 1 02:00:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Bomb(3) "} 
 Player 1 02:00:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Bomb(3) "} 
 Player 1 02:00:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Bomb(3) "} 
 Player 1 02:00:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Bomb(3) "} 
 Player 1 02:00:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Bomb(3)  \n2:Player 2 activated Samson"} 
 Player 1 02:00:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Bomb(3)  \n2:Player 2 activated Samson"} 
 Player 1 02:00:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Bomb(3)  \n2:Player 2 activated Samson"} 
 Player 1 02:00:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Bomb(3)  \n2:Player 2 activated Samson"} 
 Player 1 02:00:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Bomb(3)  \n2:Player 2 activated Samson"} 
 Player 1 02:00:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Bomb(3)  \n2:Player 2 activated Samson"} 
 Player 1 02:00:55 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:00:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Bomb(3) "} 
 Player 1 02:00:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Bomb(3) "} 
 Player 1 02:00:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 1 02:00:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 1 02:00:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 1 02:00:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 1 02:00:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 1 02:00:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 1 02:00:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 1 02:00:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 1 02:00:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 1 02:00:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 1 02:00:58 $MOVE_CARD_END:  

 {"moveIndex":19,"cardId":90,"flipIfFlipped":true,"playerId":2} 
 Player 1 02:00:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Bomb(3)  \n2:[object Object] killed by Samson"} 
 Player 1 02:00:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Bomb(3)  \n2:[object Object] killed by Samson"} 
 Player 1 02:00:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Bomb(3)  \n2:[object Object] killed by Samson"} 
 Player 1 02:00:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Bomb(3)  \n2:[object Object] killed by Samson"} 
 Player 1 02:00:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Bomb(3)  \n2:[object Object] killed by Samson"} 
 Player 1 02:00:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Bomb(3)  \n2:[object Object] killed by Samson"} 
 Player 1 02:00:58 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:00:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 1 02:00:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 1 02:00:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Charger<Monster> reward"} 
 Player 1 02:00:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Charger<Monster> reward"} 
 Player 1 02:00:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Charger<Monster> reward"} 
 Player 1 02:00:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Charger<Monster> reward"} 
 Player 1 02:00:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Charger<Monster> reward"} 
 Player 1 02:00:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Charger<Monster> reward"} 
 Player 1 02:00:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Charger<Monster> reward"} 
 Player 1 02:00:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Charger<Monster> reward"} 
 Player 1 02:00:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Charger<Monster> reward"} 
 Player 1 02:00:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Charger<Monster> reward"} 
 Player 1 02:00:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Charger<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 1 02:00:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Charger<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 1 02:00:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Charger<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 1 02:00:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Charger<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 1 02:00:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Charger<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 1 02:00:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Charger<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 1 02:00:59 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:01:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Charger<Monster> reward"} 
 Player 1 02:01:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Charger<Monster> reward"} 
 Player 1 02:01:00 $STACK_EMPTIED:  

 {"playerId":2} 
 Player 1 02:01:00 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:01:00 $MOVE_CARD_END:  

 {"moveIndex":20,"cardId":231,"flipIfFlipped":true,"playerId":2} 
 Player 1 02:01:01 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:01:01 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:01:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot"} 
 Player 1 02:01:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot"} 
 Player 1 02:01:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot"} 
 Player 1 02:01:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot"} 
 Player 1 02:01:01 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:01:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot"} 
 Player 1 02:01:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot"} 
 Player 1 02:01:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot"} 
 Player 1 02:01:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot"} 
 Player 1 02:01:01 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:01:15 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:01:15 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:01:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 
 Player 1 02:01:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 
 Player 1 02:01:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 
 Player 1 02:01:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 
 Player 1 02:01:16 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:01:16 $MOVE_CARD_END:  

 {"moveIndex":21,"cardId":210,"flipIfFlipped":true,"playerId":2} 
 Player 1 02:01:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 
 Player 1 02:01:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 
 Player 1 02:01:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 
 Player 1 02:01:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 
 Player 1 02:01:16 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:01:29 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:01:29 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:01:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Holy Dinga"} 
 Player 1 02:01:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Holy Dinga"} 
 Player 1 02:01:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Holy Dinga"} 
 Player 1 02:01:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Holy Dinga"} 
 Player 1 02:01:29 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:01:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Holy Dinga"} 
 Player 1 02:01:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Holy Dinga"} 
 Player 1 02:01:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Holy Dinga"} 
 Player 1 02:01:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Holy Dinga"} 
 Player 1 02:01:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Holy Dinga"} 
 Player 1 02:01:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Holy Dinga"} 
 Player 1 02:01:30 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:01:31 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:01:31 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:01:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:01:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:01:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:01:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:01:36 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:01:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:01:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:01:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 1 02:01:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 1 02:01:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 1 02:01:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 1 02:01:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 1 02:01:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 1 02:01:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 1 02:01:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 1 02:01:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 1 02:01:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 1 02:01:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:Player 2 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:01:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:Player 2 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:01:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:Player 2 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:01:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:Player 2 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:01:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:Player 2 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:01:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:Player 2 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:01:38 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:01:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 1 02:01:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 1 02:01:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 1 02:01:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 1 02:01:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 1 02:01:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 1 02:01:38 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:01:40 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:01:40 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:01:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:01:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:01:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:01:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:01:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:01:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:01:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster> \n2:Player 2 activated Spoon Bender"} 
 Player 1 02:01:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster> \n2:Player 2 activated Spoon Bender"} 
 Player 1 02:01:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster> \n2:Player 2 activated Spoon Bender"} 
 Player 1 02:01:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster> \n2:Player 2 activated Spoon Bender"} 
 Player 1 02:01:56 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:01:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster> \n2:Player 2 activated Spoon Bender"} 
 Player 1 02:01:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster> \n2:Player 2 activated Spoon Bender"} 
 Player 1 02:01:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster> \n2:Player 2 activated Spoon Bender"} 
 Player 1 02:01:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster> \n2:Player 2 activated Spoon Bender"} 
 Player 1 02:01:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster> \n2:Player 2 activated Spoon Bender"} 
 Player 1 02:01:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster> \n2:Player 2 activated Spoon Bender"} 
 Player 1 02:01:59 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:02:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:02:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:02:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Holy Dinga combat damage to Samson"} 
 Player 1 02:02:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Holy Dinga combat damage to Samson"} 
 Player 1 02:02:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Holy Dinga combat damage to Samson"} 
 Player 1 02:02:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Holy Dinga combat damage to Samson"} 
 Player 1 02:02:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Holy Dinga combat damage to Samson"} 
 Player 1 02:02:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Holy Dinga combat damage to Samson"} 
 Player 1 02:02:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Holy Dinga combat damage to Samson"} 
 Player 1 02:02:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Holy Dinga combat damage to Samson"} 
 Player 1 02:02:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Holy Dinga combat damage to Samson"} 
 Player 1 02:02:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Holy Dinga combat damage to Samson"} 
 Player 1 02:02:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Holy Dinga combat damage to Samson \n2:Player 2 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:02:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Holy Dinga combat damage to Samson \n2:Player 2 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:02:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Holy Dinga combat damage to Samson \n2:Player 2 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:02:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Holy Dinga combat damage to Samson \n2:Player 2 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:02:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Holy Dinga combat damage to Samson \n2:Player 2 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:02:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Holy Dinga combat damage to Samson \n2:Player 2 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:02:04 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:02:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Holy Dinga combat damage to Samson"} 
 Player 1 02:02:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Holy Dinga combat damage to Samson"} 
 Player 1 02:02:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Holy Dinga combat damage to Samson"} 
 Player 1 02:02:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Holy Dinga combat damage to Samson"} 
 Player 1 02:02:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Holy Dinga combat damage to Samson"} 
 Player 1 02:02:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Holy Dinga combat damage to Samson"} 
 Player 1 02:02:04 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:02:22 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:02:22 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:02:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:02:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:02:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:02:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:02:28 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:02:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:02:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:02:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 1 02:02:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 1 02:02:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 1 02:02:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 1 02:02:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 1 02:02:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 1 02:02:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 1 02:02:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 1 02:02:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 1 02:02:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 1 02:02:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:Player 2 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:02:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:Player 2 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:02:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:Player 2 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:02:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:Player 2 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:02:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:Player 2 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:02:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:Player 2 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:02:29 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:02:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 1 02:02:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 1 02:02:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 1 02:02:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 1 02:02:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 1 02:02:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 1 02:02:30 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:02:45 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:02:45 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:02:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:02:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:02:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:02:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:02:50 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:02:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:02:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:02:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 1 02:02:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 1 02:02:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 1 02:02:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 1 02:02:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 1 02:02:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 1 02:02:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 1 02:02:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 1 02:02:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 1 02:02:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 1 02:02:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:Player 2 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:02:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:Player 2 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:02:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:Player 2 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:02:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:Player 2 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:02:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:Player 2 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:02:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:Player 2 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:02:52 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:02:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 1 02:02:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 1 02:02:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 1 02:02:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 1 02:02:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 1 02:02:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 1 02:02:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 1 02:02:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 1 02:02:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 1 02:02:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 1 02:02:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 1 02:02:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 1 02:02:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:[object Object] killed by Samson"} 
 Player 1 02:02:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:[object Object] killed by Samson"} 
 Player 1 02:02:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:[object Object] killed by Samson"} 
 Player 1 02:02:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:[object Object] killed by Samson"} 
 Player 1 02:02:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:[object Object] killed by Samson"} 
 Player 1 02:02:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:[object Object] killed by Samson"} 
 Player 1 02:02:53 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:02:54 $NEXT_STACK_ID:  
 Player 1 02:02:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 1 02:02:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 1 02:02:54 $NEXT_STACK_ID:  
 Player 1 02:02:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 1 02:02:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 1 02:02:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward"} 
 Player 1 02:02:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward"} 
 Player 1 02:02:54 $NEXT_STACK_ID:  
 Player 1 02:02:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward"} 
 Player 1 02:02:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward"} 
 Player 1 02:02:54 $NEXT_STACK_ID:  
 Player 1 02:02:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward"} 
 Player 1 02:02:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward"} 
 Player 1 02:02:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward"} 
 Player 1 02:02:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward"} 
 Player 1 02:02:55 $NEXT_STACK_ID:  
 Player 1 02:02:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward"} 
 Player 1 02:02:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward"} 
 Player 1 02:02:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward"} 
 Player 1 02:02:55 $NEXT_STACK_ID:  
 Player 1 02:02:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward"} 
 Player 1 02:02:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward"} 
 Player 1 02:02:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward"} 
 Player 1 02:02:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 1 02:02:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 1 02:02:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 1 02:02:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 1 02:02:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 1 02:02:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 1 02:02:55 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:02:55 $NEXT_STACK_ID:  
 Player 1 02:02:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward"} 
 Player 1 02:02:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward"} 
 Player 1 02:02:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward"} 
 Player 1 02:02:56 $NEXT_STACK_ID:  
 Player 1 02:02:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward"} 
 Player 1 02:02:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward"} 
 Player 1 02:02:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward"} 
 Player 1 02:02:56 $NEXT_STACK_ID:  
 Player 1 02:02:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 roll a dice"} 
 Player 1 02:02:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 roll a dice"} 
 Player 1 02:02:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 roll a dice"} 
 Player 1 02:02:56 $NEXT_STACK_ID:  
 Player 1 02:02:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 roll a dice"} 
 Player 1 02:02:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 roll a dice"} 
 Player 1 02:02:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 roll a dice"} 
 Player 1 02:02:59 $NEXT_STACK_ID:  
 Player 1 02:02:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 roll a dice"} 
 Player 1 02:02:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 roll a dice"} 
 Player 1 02:02:59 $NEXT_STACK_ID:  
 Player 1 02:02:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 roll a dice"} 
 Player 1 02:02:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 roll a dice"} 
 Player 1 02:02:59 $NEXT_STACK_ID:  
 Player 1 02:02:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 roll a dice"} 
 Player 1 02:03:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 roll a dice"} 
 Player 1 02:03:00 $NEXT_STACK_ID:  
 Player 1 02:03:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 roll a dice"} 
 Player 1 02:03:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 roll a dice"} 
 Player 1 02:03:00 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:04:31 $NEXT_STACK_ID:  
 Player 1 02:04:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 roll a dice"} 
 Player 1 02:04:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 roll a dice"} 
 Player 1 02:04:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 roll a dice"} 
 Player 1 02:04:31 $NEXT_STACK_ID:  
 Player 1 02:04:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 roll a dice"} 
 Player 1 02:04:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 roll a dice"} 
 Player 1 02:04:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 roll a dice"} 
 Player 1 02:04:31 $NEXT_STACK_ID:  
 Player 1 02:04:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 roll a dice"} 
 Player 1 02:04:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 roll a dice"} 
 Player 1 02:04:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 roll a dice"} 
 Player 1 02:04:31 $NEXT_STACK_ID:  
 Player 1 02:04:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 roll a dice"} 
 Player 1 02:04:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 roll a dice"} 
 Player 1 02:04:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 roll a dice"} 
 Player 1 02:05:11 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false}