Start Log 

 Player 1 05:37:19 $MATCH:  

 Player 1 05:37:20 $START_GAME:  

 Player 2 05:37:20 $MOVE_TO_TABLE:  

 Player 1 05:37:20 $MOVE_TO_TABLE:  

 Player 2 05:37:28 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 1 05:37:28 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 05:37:28 $SET_CHAR:  
{"originPlayerId":2,"playerId":1,"charCardId":292,"itemCardId":293} 

 Player 1 05:37:28 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":292,"itemCardId":293} 

 Player 1 05:37:28 $SET_CHAR_END:  
{"playerId":2} 

 Player 2 05:37:29 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":290,"itemCardId":291} 

 Player 2 05:37:29 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[60,52,38,18,82,9,130,124,116,20,15,36,133,109,108,14,95,12,85,63,99,10,72,135,94,49,69,19,45,13,41,59,106,119,62,138,137,11,70,80,44,92,126,74,76,39,50,93,117,58,33,131,73,31,87,86,83,79,91,140,26,110,29,32,103,132,100,34,123,81,53,96,121,142,16,21,23,57,89,78,77,37,55,118,27,122,48,111,97,40,114,90,68,28,88,129,66,107,115,125,8,46,98,84,51,42,47,113,17,43,141,136,30,112,54,25,75,24,105,22,71,56,65,102,67,134,35,128,101,139,61,127,104,120,7,64]} 

 Player 2 05:37:29 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[270,247,241,260,269,252,246,281,251,238,273,261,279,234,280,231,233,253,255,237,228,274,266,259,235,240,264,256,267,277,257,271,254,230,245,265,229,275,250,278,268,249,263,244,258,248,243,276,232,239,236,242,262,272]} 

 Player 2 05:37:29 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[203,165,199,156,188,217,185,196,197,215,195,194,160,154,166,183,173,145,155,207,191,159,176,147,172,210,204,219,209,223,146,171,167,218,225,187,175,162,213,153,200,170,148,216,202,168,157,164,205,163,211,152,220,178,190,212,158,221,208,180,179,222,186,193,181,224,182,206,198,192,214,149,201,177,169,151,161,184,150,174,189]} 

 Player 2 05:37:29 $DRAW_CARD:  
{"deckType":5} 

 Player 2 05:37:29 $FLIP_CARD:  
{"cardId":189} 

 Player 2 05:37:29 $ADD_STORE_CARD:  
{"cardId":189} 

 Player 2 05:37:29 $DRAW_CARD:  
{"deckType":5} 

 Player 2 05:37:29 $FLIP_CARD:  
{"cardId":174} 

 Player 2 05:37:29 $ADD_STORE_CARD:  
{"cardId":174} 

 Player 2 05:37:29 $DRAW_CARD:  
{"deckType":2} 

 Player 2 05:37:29 $FLIP_CARD:  
{"cardId":272} 

 Player 2 05:37:29 $REGISTER_PASSIVE_ITEM:  
{"cardId":272} 

 Player 2 05:37:29 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":272} 

 Player 2 05:37:29 $NEW_MONSTER_ON_PLACE:  
{"cardId":272,"monsterPlaceId":1} 

 Player 2 05:37:29 $DRAW_CARD:  
{"deckType":2} 

 Player 2 05:37:29 $FLIP_CARD:  
{"cardId":262} 

 Player 2 05:37:29 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":262} 

 Player 2 05:37:29 $NEW_MONSTER_ON_PLACE:  
{"cardId":262,"monsterPlaceId":2} 

 Player 2 05:37:29 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 05:37:30 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 05:37:30 $DRAW_CARD:  
{"deckType":1} 

 Player 2 05:37:30 $MOVE_CARD:  
{"moveIndex":1,"cardId":64,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 05:37:30 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":64,"flipIfFlipped":false,"playerId":2} 

 Player 2 05:37:30 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":64} 

 Player 2 05:37:30 $FLIP_CARD:  
{"cardId":64} 

 Player 2 05:37:30 $FLIP_CARD:  
{"cardId":64} 

 Player 2 05:37:30 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":64} 

 Player 2 05:37:30 $DRAW_CARD:  
{"deckType":1} 

 Player 2 05:37:30 $MOVE_CARD:  
{"moveIndex":2,"cardId":7,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 05:37:31 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":7,"flipIfFlipped":false,"playerId":2} 

 Player 2 05:37:31 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":7} 

 Player 2 05:37:31 $FLIP_CARD:  
{"cardId":7} 

 Player 2 05:37:31 $FLIP_CARD:  
{"cardId":7} 

 Player 2 05:37:31 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":7} 

 Player 2 05:37:31 $DRAW_CARD:  
{"deckType":1} 

 Player 2 05:37:31 $MOVE_CARD:  
{"moveIndex":3,"cardId":120,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 05:37:31 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":120,"flipIfFlipped":false,"playerId":2} 

 Player 2 05:37:31 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":120} 

 Player 2 05:37:31 $FLIP_CARD:  
{"cardId":120} 

 Player 2 05:37:31 $FLIP_CARD:  
{"cardId":120} 

 Player 2 05:37:31 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":120} 

 Player 2 05:37:31 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 05:37:31 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 05:37:31 $DRAW_CARD:  
{"deckType":1} 

 Player 2 05:37:31 $MOVE_CARD:  
{"moveIndex":4,"cardId":104,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 05:37:32 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":104,"flipIfFlipped":false,"playerId":2} 

 Player 2 05:37:32 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":104} 

 Player 2 05:37:32 $FLIP_CARD:  
{"cardId":104} 

 Player 2 05:37:32 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":104} 

 Player 2 05:37:32 $DRAW_CARD:  
{"deckType":1} 

 Player 2 05:37:32 $MOVE_CARD:  
{"moveIndex":5,"cardId":127,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 05:37:32 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":127,"flipIfFlipped":false,"playerId":2} 

 Player 2 05:37:32 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":127} 

 Player 2 05:37:32 $FLIP_CARD:  
{"cardId":127} 

 Player 2 05:37:32 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":127} 

 Player 2 05:37:32 $DRAW_CARD:  
{"deckType":1} 

 Player 2 05:37:32 $MOVE_CARD:  
{"moveIndex":6,"cardId":61,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 05:37:33 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":61,"flipIfFlipped":false,"playerId":2} 

 Player 2 05:37:33 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":61} 

 Player 2 05:37:33 $FLIP_CARD:  
{"cardId":61} 

 Player 2 05:37:33 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":61} 

 Player 2 05:37:33 $GAME_HAS_STARTED:  

 Player 2 05:37:33 $SET_TURN:  
{"playerId":2} 

 Player 2 05:37:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 05:37:33 $NEXT_STACK_ID:  

 Player 2 05:37:33 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 05:37:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 05:37:33 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 05:37:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 05:37:33 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 1 05:37:33 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 05:37:33 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 05:37:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 05:37:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 05:37:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 2 05:37:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 05:37:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 05:37:36 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 05:37:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 2 05:37:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 2 05:37:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 05:37:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 2 05:37:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 05:37:36 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 05:37:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 05:37:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 05:37:36 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 05:37:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 2 05:37:36 $DRAW_CARD:  
{"deckType":1} 

 Player 2 05:37:36 $MOVE_CARD:  
{"moveIndex":7,"cardId":139,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 05:37:36 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":139,"flipIfFlipped":false,"playerId":2} 

 Player 2 05:37:37 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":139} 

 Player 2 05:37:37 $FLIP_CARD:  
{"cardId":139} 

 Player 2 05:37:37 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":139} 

 Player 2 05:37:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 05:37:37 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 05:37:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 05:37:37 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 05:37:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 2 05:37:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 05:37:37 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 05:37:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 2 05:37:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 2 05:37:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 05:37:37 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 05:37:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 05:37:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 05:37:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 05:37:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 05:37:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 05:37:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 05:37:37 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 05:37:37 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 2 05:37:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 2 05:37:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 05:37:37 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 2 05:37:37 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 2 05:37:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 2 05:37:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 05:37:37 $UPDATE_ACTIONS:  

 Player 2 05:38:28 $SET_MONEY:  
{"playerId":2,"numOfCoins":10} 

 Player 2 05:38:28 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":7}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 05:38:32 $SHOW_DECISION:  
{"startCardId":61,"endCardId":61,"flipEndCard":true} 

 Player 2 05:38:35 $NEXT_STACK_ID:  

 Player 2 05:38:35 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 05:38:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(1) "} 

 Player 2 05:38:35 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":61,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 05:38:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(1) "} 

 Player 2 05:38:35 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":61,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 05:38:35 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 05:38:35 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 05:38:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(1) "} 

 Player 1 05:38:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(1) "} 

 Player 2 05:38:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add PlayLootCardStackEffect 2 "}} 

 Player 2 05:38:38 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":61} 

 Player 2 05:38:38 $MOVE_CARD:  
{"moveIndex":8,"cardId":61,"placeID":300,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 05:38:38 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":61,"flipIfFlipped":true,"playerId":2} 

 Player 2 05:38:38 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":61} 

 Player 2 05:38:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(1): addMoney"} 

 Player 2 05:38:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 05:38:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(1): addMoney"} 

 Player 2 05:38:38 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":61,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":61,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 05:38:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding PlayLootCardStackEffect 2"},"childOfId":10} 

 Player 2 05:38:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 2 05:38:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 05:38:38 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 2 05:38:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 2 05:38:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 05:38:39 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 05:38:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(1) "} 

 Player 1 05:38:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(1) "} 

 Player 1 05:38:39 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 05:38:39 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 2 05:38:39 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 2 05:38:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve PlayLootCardStackEffect 2 "}} 

 Player 2 05:38:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(1): addMoney"} 

 Player 2 05:38:39 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":61,"particleType":6} 

 Player 2 05:38:41 $DISABLE_PARTICLE_EFFECT:  
{"cardId":61,"particleType":6} 

 Player 2 05:38:41 $SET_MONEY:  
{"playerId":2,"numOfCoins":14} 

 Player 2 05:38:41 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 2 05:38:41 $REMOVE_FROM_PILE:  
{"cardId":61} 

 Player 2 05:38:41 $MOVE_CARD:  
{"moveIndex":9,"cardId":61,"placeID":301,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 05:38:41 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":61,"flipIfFlipped":true,"playerId":2} 

 Player 2 05:38:41 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":61} 

 Player 2 05:38:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(1): addMoney"} 

 Player 2 05:38:41 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":61,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 05:38:41 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 05:38:41 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":61,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 05:38:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve PlayLootCardStackEffect 2  "}} 

 Player 2 05:38:41 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 05:38:41 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":61,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 05:38:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve PlayLootCardStackEffect 2"},"childOfId":15} 

 Player 2 05:38:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 2 05:38:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 05:38:41 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 05:38:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(1) "} 

 Player 1 05:38:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(1) "} 

 Player 1 05:38:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(1) "} 

 Player 1 05:38:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(1) "} 

 Player 1 05:38:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(1) "} 

 Player 1 05:38:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(1) "} 

 Player 1 05:38:42 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 05:38:42 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 05:38:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 2 05:38:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 05:38:42 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 2 05:38:42 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 2 05:38:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 2 05:38:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 06:24:40 $SHOW_DECISION:  
{"startCardId":290,"endCardId":262} 

 Player 2 06:24:43 $NEXT_STACK_ID:  

 Player 2 06:24:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 06:24:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Nerve Ending"} 

 Player 2 06:24:43 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":262,"stackEffectType":4}} 

 Player 2 06:24:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Nerve Ending"} 

 Player 2 06:24:43 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":262,"stackEffectType":4}} 

 Player 1 06:24:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 06:24:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 06:24:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Nerve Ending"} 

 Player 1 06:24:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Nerve Ending"} 

 Player 2 06:24:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add DeclareAttack 3 "}} 

 Player 2 06:24:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 06:24:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Nerve Ending"} 

 Player 2 06:24:46 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":262,"stackEffectType":4}} 

 Player 2 06:24:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding DeclareAttack 3"},"childOfId":20} 

 Player 2 06:24:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 2 06:24:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 06:24:46 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 2 06:24:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 2 06:24:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 06:24:46 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 06:24:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Nerve Ending"} 

 Player 1 06:24:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Nerve Ending"} 

 Player 1 06:24:46 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 06:24:46 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 2 06:24:46 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 2 06:24:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve DeclareAttack 3 "}} 

 Player 2 06:24:46 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":262,"particleType":5} 

 Player 2 06:24:46 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":5,"originStackId":3},"isAfterActivation":true,"index":5} 

 Player 2 06:24:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Nerve Ending"} 

 Player 2 06:24:46 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":262,"stackEffectType":4}} 

 Player 2 06:24:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 06:24:46 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":262,"stackEffectType":4}} 

 Player 2 06:24:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Remove After Resolve DeclareAttack 3  "}} 

 Player 2 06:24:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 06:24:46 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":262,"stackEffectType":4}} 

 Player 2 06:24:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Response Remove After Resolve DeclareAttack 3"},"childOfId":25} 

 Player 2 06:24:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Wait For Response From Player 1 "},"childOfId":25} 

 Player 2 06:24:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 06:24:47 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 06:24:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Nerve Ending"} 

 Player 1 06:24:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Nerve Ending"} 

 Player 1 06:24:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Nerve Ending"} 

 Player 1 06:24:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Nerve Ending"} 

 Player 1 06:24:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Nerve Ending"} 

 Player 1 06:24:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Nerve Ending"} 

 Player 1 06:24:47 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 06:24:47 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 2 06:24:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":25} 

 Player 2 06:24:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 06:24:47 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 2 06:24:47 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 2 06:24:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Stack Was Emptied "}} 

 Player 2 06:24:47 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 06:28:51 $MATCH: 