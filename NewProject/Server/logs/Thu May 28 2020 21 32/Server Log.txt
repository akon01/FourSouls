Start Log 

 Player 1 21:32:12 $MATCH:  

 Player 1 21:32:13 $START_GAME:  

 Player 1 21:32:13 $MOVE_TO_TABLE:  

 Player 2 21:32:13 $MOVE_TO_TABLE:  

 Player 1 21:32:22 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 21:32:22 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 2 21:32:22 $SET_CHAR:  
{"originPlayerId":2,"playerId":1,"charCardId":335,"itemCardId":336} 

 Player 1 21:32:23 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":335,"itemCardId":336} 

 Player 1 21:32:23 $SET_CHAR_END:  
{"playerId":2} 

 Player 2 21:32:23 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":329,"itemCardId":332} 

 Player 2 21:32:23 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[17,54,88,48,64,118,114,139,27,62,116,61,10,110,133,135,76,95,108,5,60,55,65,8,39,91,100,130,134,82,36,66,32,86,35,79,80,99,85,56,57,41,68,18,26,51,77,119,70,71,124,105,58,121,11,103,14,15,128,75,23,106,126,109,78,89,22,81,132,37,40,127,83,33,94,123,112,93,47,104,131,13,24,59,87,137,34,21,45,115,117,42,46,84,12,136,43,44,50,31,107,98,101,30,90,122,9,20,113,125,52,97,63,96,67,72,102,25,69,29,7,28,38,19,53,6,138,74,129,49,120,73,92,16,4,111]} 

 Player 2 21:32:23 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[288,259,268,315,304,271,296,314,257,279,281,242,251,270,237,234,294,265,262,290,254,229,301,298,275,273,305,230,306,249,244,278,243,282,300,280,256,285,236,287,307,267,228,303,297,319,310,238,295,269,311,264,231,276,318,302,239,313,263,240,308,316,252,241,272,245,250,227,284,232,233,309,320,261,299,292,274,235,255,258,283,260,253,289,293,248,266,246,317,312,291,286,247,277]} 

 Player 2 21:32:23 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[147,224,195,155,221,210,163,194,189,178,213,182,173,223,212,225,142,214,192,187,203,188,169,184,218,196,190,205,199,174,216,211,153,164,159,197,200,208,185,150,146,165,177,201,160,202,171,143,207,144,162,183,149,148,151,156,176,157,172,198,180,206,154,161,191,193,168,175,186,166,219,181,220,167,141,152,170,215,158,217,209,204,179,145,222]} 

 Player 2 21:32:23 $DRAW_CARD:  
{"deckType":5} 

 Player 2 21:32:23 $FLIP_CARD:  
{"cardId":222} 

 Player 2 21:32:23 $ADD_STORE_CARD:  
{"cardId":222} 

 Player 2 21:32:23 $DRAW_CARD:  
{"deckType":5} 

 Player 2 21:32:23 $FLIP_CARD:  
{"cardId":145} 

 Player 2 21:32:23 $ADD_STORE_CARD:  
{"cardId":145} 

 Player 2 21:32:23 $DRAW_CARD:  
{"deckType":2} 

 Player 2 21:32:23 $FLIP_CARD:  
{"cardId":277} 

 Player 2 21:32:23 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":277} 

 Player 2 21:32:23 $NEW_MONSTER_ON_PLACE:  
{"cardId":277,"monsterPlaceId":1} 

 Player 2 21:32:23 $DRAW_CARD:  
{"deckType":2} 

 Player 2 21:32:23 $FLIP_CARD:  
{"cardId":247} 

 Player 2 21:32:23 $REGISTER_PASSIVE_ITEM:  
{"cardId":247} 

 Player 2 21:32:23 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":247} 

 Player 2 21:32:23 $NEW_MONSTER_ON_PLACE:  
{"cardId":247,"monsterPlaceId":2} 

 Player 2 21:32:23 $REGISTER_PASSIVE_ITEM:  
{"cardId":322} 

 Player 2 21:32:23 $REGISTER_PASSIVE_ITEM:  
{"cardId":323} 

 Player 2 21:32:23 $REGISTER_PASSIVE_ITEM:  
{"cardId":324} 

 Player 2 21:32:23 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 21:32:23 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":335,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 21:32:23 $DRAW_CARD:  
{"deckType":1} 

 Player 2 21:32:23 $MOVE_CARD:  
{"moveIndex":1,"cardId":111,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 21:32:24 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":111,"flipIfFlipped":false,"playerId":2} 

 Player 2 21:32:24 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":111} 

 Player 2 21:32:24 $FLIP_CARD:  
{"cardId":111} 

 Player 2 21:32:24 $FLIP_CARD:  
{"cardId":111} 

 Player 2 21:32:24 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":111} 

 Player 2 21:32:24 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":111}],"result":null,"preventMethod":false,"methodScopeId":335,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 21:32:24 $DRAW_CARD:  
{"deckType":1} 

 Player 2 21:32:24 $MOVE_CARD:  
{"moveIndex":2,"cardId":4,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 21:32:24 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":4,"flipIfFlipped":false,"playerId":2} 

 Player 2 21:32:24 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":4} 

 Player 2 21:32:24 $FLIP_CARD:  
{"cardId":4} 

 Player 2 21:32:24 $FLIP_CARD:  
{"cardId":4} 

 Player 2 21:32:24 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":4} 

 Player 2 21:32:24 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":4}],"result":null,"preventMethod":false,"methodScopeId":335,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 21:32:24 $DRAW_CARD:  
{"deckType":1} 

 Player 2 21:32:24 $MOVE_CARD:  
{"moveIndex":3,"cardId":16,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 21:32:25 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":16,"flipIfFlipped":false,"playerId":2} 

 Player 2 21:32:25 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":16} 

 Player 2 21:32:25 $FLIP_CARD:  
{"cardId":16} 

 Player 2 21:32:25 $FLIP_CARD:  
{"cardId":16} 

 Player 2 21:32:25 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":16} 

 Player 2 21:32:25 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":16}],"result":null,"preventMethod":false,"methodScopeId":335,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 2 21:32:25 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 21:32:25 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":329,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 2 21:32:25 $DRAW_CARD:  
{"deckType":1} 

 Player 2 21:32:25 $MOVE_CARD:  
{"moveIndex":4,"cardId":92,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 21:32:26 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":92,"flipIfFlipped":false,"playerId":2} 

 Player 2 21:32:26 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":92} 

 Player 2 21:32:26 $FLIP_CARD:  
{"cardId":92} 

 Player 2 21:32:26 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":92} 

 Player 2 21:32:26 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":92}],"result":null,"preventMethod":false,"methodScopeId":329,"scopeIsPlayer":true,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 

 Player 2 21:32:26 $DRAW_CARD:  
{"deckType":1} 

 Player 2 21:32:26 $MOVE_CARD:  
{"moveIndex":5,"cardId":73,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 21:32:26 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":73,"flipIfFlipped":false,"playerId":2} 

 Player 2 21:32:26 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":73} 

 Player 2 21:32:26 $FLIP_CARD:  
{"cardId":73} 

 Player 2 21:32:26 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":73} 

 Player 2 21:32:26 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":73}],"result":null,"preventMethod":false,"methodScopeId":329,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 

 Player 2 21:32:26 $DRAW_CARD:  
{"deckType":1} 

 Player 2 21:32:26 $MOVE_CARD:  
{"moveIndex":6,"cardId":120,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 21:32:27 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":120,"flipIfFlipped":false,"playerId":2} 

 Player 2 21:32:27 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":120} 

 Player 2 21:32:27 $FLIP_CARD:  
{"cardId":120} 

 Player 2 21:32:27 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":120} 

 Player 2 21:32:27 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":120}],"result":null,"preventMethod":false,"methodScopeId":329,"scopeIsPlayer":true,"index":8,"originStackId":-1},"isAfterActivation":true,"index":8} 

 Player 2 21:32:27 $GAME_HAS_STARTED:  

 Player 2 21:32:27 $SET_TURN:  
{"playerId":2} 

 Player 2 21:32:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:32:27 $NEXT_STACK_ID:  

 Player 2 21:32:27 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":329,"turnPlayerCardId":329,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}} 

 Player 2 21:32:27 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":329,"turnPlayerCardId":329,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}} 

 Player 2 21:32:28 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 21:32:28 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 2 21:32:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add Start Turn Loot Draw 1 "}} 

 Player 2 21:32:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:32:30 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":329,"turnPlayerCardId":329,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}} 

 Player 2 21:32:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding Start Turn Loot Draw 1"},"childOfId":0} 

 Player 2 21:32:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 2 21:32:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:32:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 2 21:32:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:32:30 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:32:30 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335,336]} 

 Player 1 21:32:30 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:32:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve Start Turn Loot Draw 1 "}} 

 Player 2 21:32:30 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":1,"creatorCardId":329,"turnPlayerCardId":329,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}]} 

 Player 2 21:32:30 $DRAW_CARD:  
{"deckType":1} 

 Player 2 21:32:30 $MOVE_CARD:  
{"moveIndex":7,"cardId":49,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 21:32:30 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":49,"flipIfFlipped":false,"playerId":2} 

 Player 2 21:32:30 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":49} 

 Player 2 21:32:31 $FLIP_CARD:  
{"cardId":49} 

 Player 2 21:32:31 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":49} 

 Player 2 21:32:31 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":49}],"result":null,"preventMethod":false,"methodScopeId":329,"scopeIsPlayer":true,"index":9,"originStackId":-1},"isAfterActivation":true,"index":9} 

 Player 2 21:32:31 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":1,"text":"Player 2 Has Drawn Loot For Start Turn"} 

 Player 2 21:32:31 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":329,"turnPlayerCardId":329,"stackEffectType":13,"lable":"Player 2 Has Drawn Loot For Start Turn"}} 

 Player 2 21:32:31 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 21:32:31 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 21:32:31 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 2 21:32:34 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":1} 

 Player 2 21:32:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve Start Turn Loot Draw 1  "}} 

 Player 2 21:32:34 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":329,"turnPlayerCardId":329,"stackEffectType":13,"lable":"Player 2 Has Drawn Loot For Start Turn"}} 

 Player 2 21:32:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve Start Turn Loot Draw 1"},"childOfId":5} 

 Player 2 21:32:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 2 21:32:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:32:34 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:32:34 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335,336]} 

 Player 1 21:32:34 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:32:34 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 2 21:32:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 2 21:32:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:32:34 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 2 21:32:34 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 2 21:32:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 2 21:32:34 $CLEAR_SE_VIS:  

 Player 2 21:32:34 $UPDATE_ACTIONS:  

 Player 2 21:32:39 $NEXT_STACK_ID:  

 Player 2 21:32:39 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":329,"hasLockingStackEffect":false,"itemToPlayCardId":332,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":false,"stackEffectType":1,"lable":"Player 2 is going to activate Sleight Of Hand"}} 

 Player 2 21:32:39 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":329,"hasLockingStackEffect":false,"itemToPlayCardId":332,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":false,"stackEffectType":1,"lable":"Player 2 is going to activate Sleight Of Hand"}} 

 Player 2 21:32:39 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 21:32:39 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 2 21:32:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add Activate Item 2 "}} 

 Player 2 21:32:42 $SHOW_ANNOUNCEMENT:  
{"text":"Player 2 is Choosing Target"} 

 Player 2 21:32:46 $HIDE_ANNOUNCEMENT:  

 Player 2 21:32:46 $SHOW_DECISION:  
{"startCardId":332,"endCardId":3} 

 Player 2 21:32:49 $USE_ITEM:  
{"cardId":332} 

 Player 2 21:32:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:32:49 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":329,"hasLockingStackEffect":false,"itemToPlayCardId":332,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1,"lable":"Player 2 is going to activate Sleight Of Hand"}} 

 Player 2 21:32:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding Activate Item 2"},"childOfId":10} 

 Player 2 21:32:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 2 21:32:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:32:49 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 2 21:32:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 2 21:32:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:32:49 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:32:49 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335,336]} 

 Player 1 21:32:49 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:32:49 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 2 21:32:49 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 2 21:32:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve Activate Item 2 "}} 

 Player 2 21:32:50 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":2,"creatorCardId":329,"hasLockingStackEffect":false,"itemToPlayCardId":332,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1,"lable":"Player 2 is going to activate Sleight Of Hand"}]} 

 Player 2 21:32:50 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":332,"particleType":6} 

 Player 2 21:32:51 $DISABLE_PARTICLE_EFFECT:  
{"cardId":332,"particleType":6} 

 Player 2 21:33:12 $DECK_ADD_TO_TOP:  
{"deckType":1,"cardId":74} 

 Player 2 21:33:12 $DECK_ADD_TO_TOP:  
{"deckType":1,"cardId":138} 

 Player 2 21:33:12 $DECK_ADD_TO_TOP:  
{"deckType":1,"cardId":129} 

 Player 2 21:33:12 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":2,"text":"Player 2 has activated Sleight Of Hand"} 

 Player 2 21:33:12 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ACTIVATE_ITEM","args":[{"type":0,"number":332}],"result":null,"preventMethod":false,"methodScopeId":329,"scopeIsPlayer":true,"index":10,"originStackId":-1},"isAfterActivation":true,"index":10} 

 Player 2 21:33:12 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":329,"hasLockingStackEffect":false,"itemToPlayCardId":332,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1,"lable":"Player 2 has activated Sleight Of Hand"}} 

 Player 2 21:33:12 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 21:33:13 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 21:33:13 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 2 21:33:15 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":2} 

 Player 2 21:33:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve Activate Item 2  "}} 

 Player 2 21:33:15 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":329,"hasLockingStackEffect":false,"itemToPlayCardId":332,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1,"lable":"Player 2 has activated Sleight Of Hand"}} 

 Player 2 21:33:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve Activate Item 2"},"childOfId":15} 

 Player 2 21:33:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 2 21:33:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:33:15 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:33:15 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335,336]} 

 Player 1 21:33:16 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:33:16 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 21:33:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 2 21:33:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:33:16 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 2 21:33:16 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 2 21:33:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 2 21:33:16 $CLEAR_SE_VIS:  

 Player 2 21:33:20 $NEXT_STACK_ID:  

 Player 2 21:33:20 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":329,"attackingPlayerCardId":329,"idOfCardBeingAttacked":277,"stackEffectType":4,"lable":"Player 2 declared attack on Holy Dinga"}} 

 Player 2 21:33:20 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":329,"attackingPlayerCardId":329,"idOfCardBeingAttacked":277,"stackEffectType":4,"lable":"Player 2 declared attack on Holy Dinga"}} 

 Player 2 21:33:20 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 21:33:20 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 2 21:33:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add Player Declare Attack On Monster 3 "}} 

 Player 2 21:33:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:33:23 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":329,"attackingPlayerCardId":329,"idOfCardBeingAttacked":277,"stackEffectType":4,"lable":"Player 2 declared attack on Holy Dinga"}} 

 Player 2 21:33:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding Player Declare Attack On Monster 3"},"childOfId":20} 

 Player 2 21:33:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 2 21:33:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:33:23 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 2 21:33:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 2 21:33:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:33:23 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:33:23 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335,336]} 

 Player 1 21:33:24 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:33:24 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 2 21:33:24 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 2 21:33:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve Player Declare Attack On Monster 3 "}} 

 Player 2 21:33:24 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":3,"creatorCardId":329,"attackingPlayerCardId":329,"idOfCardBeingAttacked":277,"stackEffectType":4,"lable":"Player 2 declared attack on Holy Dinga"}]} 

 Player 2 21:33:24 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":277,"particleType":5} 

 Player 2 21:33:24 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":3,"text":"Player 2 Has Entered Battle with Holy Dinga"} 

 Player 2 21:33:24 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":329,"scopeIsPlayer":true,"index":11,"originStackId":3},"isAfterActivation":true,"index":11} 

 Player 2 21:33:24 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":329,"attackingPlayerCardId":329,"idOfCardBeingAttacked":277,"stackEffectType":4,"lable":"Player 2 Has Entered Battle with Holy Dinga"}} 

 Player 2 21:33:24 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 21:33:24 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 21:33:24 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 2 21:33:27 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":3} 

 Player 2 21:33:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Remove After Resolve Player Declare Attack On Monster 3  "}} 

 Player 2 21:33:27 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":329,"attackingPlayerCardId":329,"idOfCardBeingAttacked":277,"stackEffectType":4,"lable":"Player 2 Has Entered Battle with Holy Dinga"}} 

 Player 2 21:33:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Response Remove After Resolve Player Declare Attack On Monster 3"},"childOfId":25} 

 Player 2 21:33:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Wait For Response From Player 1 "},"childOfId":25} 

 Player 2 21:33:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:33:27 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:33:27 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335,336]} 

 Player 1 21:33:27 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:33:27 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 2 21:33:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":25} 

 Player 2 21:33:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:33:27 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 2 21:33:27 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 2 21:33:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Stack Was Emptied "}} 

 Player 2 21:33:27 $CLEAR_SE_VIS:  

 Player 2 21:33:27 $NEXT_STACK_ID:  

 Player 2 21:33:27 $ADD_TO_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":329,"rollingPlayerCardId":329,"stackEffectType":2,"attackedMonsterCardId":277,"lable":"Player 2 is rolling against Holy Dinga<Monster>"}} 

 Player 2 21:33:27 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":329,"rollingPlayerCardId":329,"stackEffectType":2,"attackedMonsterCardId":277,"lable":"Player 2 is rolling against Holy Dinga<Monster>"}} 

 Player 2 21:33:28 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 21:33:28 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 2 21:33:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Add Player Attack Roll On Monster 4 "}} 

 Player 2 21:33:30 $ROLL_DICE:  
{"playerId":2} 

 Player 2 21:33:32 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":5} 

 Player 2 21:33:32 $UPDATE_STACK_VIS:  
{"stackId":4,"text":"player rolled 5 vs Holy Dinga<Monster>"} 

 Player 2 21:33:32 $SHOW_DICE_ROLL:  
{"stackId":4} 

 Player 2 21:33:35 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":4,"text":"Player 2 rolled 5 vs Holy Dinga<Monster>"} 

 Player 2 21:33:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:33:35 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":329,"numberRolled":5,"rollingPlayerCardId":329,"stackEffectType":2,"attackedMonsterCardId":277,"lable":"Player 2 rolled 5 vs Holy Dinga<Monster>"}} 

 Player 2 21:33:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Response Adding Player Attack Roll On Monster 4"},"childOfId":30} 

 Player 2 21:33:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Wait For Response From Player 2 "},"childOfId":30} 

 Player 2 21:33:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:33:35 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 2 21:33:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":30} 

 Player 2 21:33:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:33:35 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:33:35 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335,336]} 

 Player 1 21:33:35 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:33:35 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 2 21:33:35 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 2 21:33:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Resolve Player Attack Roll On Monster 4 "}} 

 Player 2 21:33:35 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":4,"creatorCardId":329,"numberRolled":5,"rollingPlayerCardId":329,"stackEffectType":2,"attackedMonsterCardId":277,"lable":"Player 2 rolled 5 vs Holy Dinga<Monster>"}]} 

 Player 2 21:33:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Added 0 to original roll"}} 

 Player 2 21:33:35 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":4,"text":"Player 2 Rolled 5 Against Holy Dinga<Monster> 3"} 

 Player 2 21:33:35 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":4,"text":"Player 2 Roll Hit"} 

 Player 2 21:33:35 $NEXT_STACK_ID:  

 Player 2 21:33:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:33:35 $CLEAR_SE_VIS:  

 Player 2 21:33:35 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":329,"entityToDoDamageCardId":329,"entityToTakeDamageCardId":277,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5,"lable":"Cain is going to hurt Holy Dinga"}} 

 Player 2 21:33:35 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":329,"numberRolled":5,"rollingPlayerCardId":329,"stackEffectType":2,"attackedMonsterCardId":277,"lable":"Player 2 Roll Hit"}} 

 Player 2 21:33:36 $REPLACE_STACK:  
{"currentStack":[{"entityId":5,"creatorCardId":329,"entityToDoDamageCardId":329,"entityToTakeDamageCardId":277,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5,"lable":"Cain is going to hurt Holy Dinga"},{"entityId":4,"creatorCardId":329,"numberRolled":5,"rollingPlayerCardId":329,"stackEffectType":2,"attackedMonsterCardId":277,"lable":"Player 2 Roll Hit"}]} 

 Player 2 21:33:36 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 21:33:36 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":329,"scopeIsPlayer":true,"index":12,"originStackId":4},"isAfterActivation":true,"index":12} 

 Player 2 21:33:36 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":329,"numberRolled":5,"rollingPlayerCardId":329,"stackEffectType":2,"attackedMonsterCardId":277,"lable":"Player 2 Roll Hit"}} 

 Player 2 21:33:36 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 21:33:36 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 21:33:36 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 2 21:33:38 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":4} 

 Player 2 21:33:38 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 2 21:33:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Remove After Resolve Player Attack Roll On Monster 4  "}} 

 Player 2 21:33:41 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":329,"numberRolled":5,"rollingPlayerCardId":329,"stackEffectType":2,"attackedMonsterCardId":277,"lable":"Player 2 Roll Hit"}} 

 Player 2 21:33:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Response Remove After Resolve Player Attack Roll On Monster 4"},"childOfId":36} 

 Player 2 21:33:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 2 "},"childOfId":36} 

 Player 2 21:33:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:33:41 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 2 21:33:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Wait For Response From Player 1 "},"childOfId":36} 

 Player 2 21:33:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:33:41 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:33:41 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335,336]} 

 Player 1 21:33:41 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:33:41 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 21:33:41 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 2 21:33:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Resolve Monster Combat Damage To A Player 5 "}} 

 Player 2 21:33:42 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":5,"creatorCardId":329,"entityToDoDamageCardId":329,"entityToTakeDamageCardId":277,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5,"lable":"Cain is going to hurt Holy Dinga"}]} 

 Player 2 21:33:42 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":5,"text":"Cain will deal 1 combat damage to Holy Dinga "} 

 Player 2 21:33:42 $UPDATE_STACK_VIS:  
{"stackId":5,"text":"Cain will deal 1 combat damage to Holy Dinga"} 

 Player 2 21:33:42 $MONSTER_GET_DAMAGED:  
{"cardId":277,"hpLeft":2,"damageDealerId":329} 

 Player 2 21:33:42 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":329},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":277,"scopeIsPlayer":false,"index":13,"originStackId":-1},"isAfterActivation":true,"index":13} 

 Player 2 21:33:42 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":5},{"type":0,"number":329},{"type":0,"number":277}],"result":null,"preventMethod":false,"methodScopeId":329,"scopeIsPlayer":true,"index":14,"originStackId":5},"isAfterActivation":true,"index":14} 

 Player 2 21:33:42 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":329,"entityToDoDamageCardId":329,"entityToTakeDamageCardId":277,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5,"lable":"Cain will deal 1 combat damage to Holy Dinga "}} 

 Player 2 21:33:42 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 21:33:42 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 21:33:42 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 2 21:33:44 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":5} 

 Player 2 21:33:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Remove After Resolve Monster Combat Damage To A Player 5  "}} 

 Player 2 21:33:44 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":329,"entityToDoDamageCardId":329,"entityToTakeDamageCardId":277,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5,"lable":"Cain will deal 1 combat damage to Holy Dinga "}} 

 Player 2 21:33:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Response Remove After Resolve Monster Combat Damage To A Player 5"},"childOfId":41} 

 Player 2 21:33:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 1 "},"childOfId":41} 

 Player 2 21:33:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:33:45 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:33:45 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335,336]} 

 Player 1 21:33:45 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:33:45 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 2 21:33:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Wait For Response From Player 2 "},"childOfId":41} 

 Player 2 21:33:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:33:45 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 21:33:45 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 2 21:33:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Stack Was Emptied "}} 

 Player 2 21:33:45 $CLEAR_SE_VIS:  

 Player 2 21:33:46 $NEXT_STACK_ID:  

 Player 2 21:33:46 $ADD_TO_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":329,"rollingPlayerCardId":329,"stackEffectType":2,"attackedMonsterCardId":277,"lable":"Player 2 is rolling against Holy Dinga<Monster>"}} 

 Player 2 21:33:46 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":329,"rollingPlayerCardId":329,"stackEffectType":2,"attackedMonsterCardId":277,"lable":"Player 2 is rolling against Holy Dinga<Monster>"}} 

 Player 2 21:33:46 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 21:33:46 $SHOW_STACK_EFFECT:  
{"effectId":6} 

 Player 2 21:33:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Add Player Attack Roll On Monster 6 "}} 

 Player 2 21:33:49 $ROLL_DICE:  
{"playerId":2} 

 Player 2 21:33:51 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":6} 

 Player 2 21:33:51 $UPDATE_STACK_VIS:  
{"stackId":6,"text":"player rolled 6 vs Holy Dinga<Monster>"} 

 Player 2 21:33:51 $SHOW_DICE_ROLL:  
{"stackId":6} 

 Player 2 21:33:54 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":6,"text":"Player 2 rolled 6 vs Holy Dinga<Monster>"} 

 Player 2 21:33:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:33:54 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":329,"numberRolled":6,"rollingPlayerCardId":329,"stackEffectType":2,"attackedMonsterCardId":277,"lable":"Player 2 rolled 6 vs Holy Dinga<Monster>"}} 

 Player 2 21:33:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Response Adding Player Attack Roll On Monster 6"},"childOfId":46} 

 Player 2 21:33:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Wait For Response From Player 2 "},"childOfId":46} 

 Player 2 21:33:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:33:54 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 2 21:33:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Wait For Response From Player 1 "},"childOfId":46} 

 Player 2 21:33:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:33:54 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:33:54 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335,336]} 

 Player 1 21:33:54 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:33:54 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 2 21:33:54 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 2 21:33:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Resolve Player Attack Roll On Monster 6 "}} 

 Player 2 21:33:55 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":6,"creatorCardId":329,"numberRolled":6,"rollingPlayerCardId":329,"stackEffectType":2,"attackedMonsterCardId":277,"lable":"Player 2 rolled 6 vs Holy Dinga<Monster>"}]} 

 Player 2 21:33:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Added 0 to original roll"}} 

 Player 2 21:33:55 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":6,"text":"Player 2 Rolled 6 Against Holy Dinga<Monster> 3"} 

 Player 2 21:33:55 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":6,"text":"Player 2 Roll Hit"} 

 Player 2 21:33:55 $NEXT_STACK_ID:  

 Player 2 21:33:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:33:55 $CLEAR_SE_VIS:  

 Player 2 21:33:55 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":329,"entityToDoDamageCardId":329,"entityToTakeDamageCardId":277,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6,"lable":"Cain is going to hurt Holy Dinga"}} 

 Player 2 21:33:55 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":329,"numberRolled":6,"rollingPlayerCardId":329,"stackEffectType":2,"attackedMonsterCardId":277,"lable":"Player 2 Roll Hit"}} 

 Player 2 21:33:55 $REPLACE_STACK:  
{"currentStack":[{"entityId":7,"creatorCardId":329,"entityToDoDamageCardId":329,"entityToTakeDamageCardId":277,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6,"lable":"Cain is going to hurt Holy Dinga"},{"entityId":6,"creatorCardId":329,"numberRolled":6,"rollingPlayerCardId":329,"stackEffectType":2,"attackedMonsterCardId":277,"lable":"Player 2 Roll Hit"}]} 

 Player 2 21:33:55 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 21:33:55 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":6},{"type":2,"number":1},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":329,"scopeIsPlayer":true,"index":15,"originStackId":6},"isAfterActivation":true,"index":15} 

 Player 2 21:33:55 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":329,"numberRolled":6,"rollingPlayerCardId":329,"stackEffectType":2,"attackedMonsterCardId":277,"lable":"Player 2 Roll Hit"}} 

 Player 2 21:33:55 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 21:33:55 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 21:33:55 $SHOW_STACK_EFFECT:  
{"effectId":6} 

 Player 2 21:33:57 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":6} 

 Player 2 21:33:57 $SHOW_STACK_EFFECT:  
{"effectId":7} 

 Player 2 21:34:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Remove After Resolve Player Attack Roll On Monster 6  "}} 

 Player 2 21:34:01 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":329,"numberRolled":6,"rollingPlayerCardId":329,"stackEffectType":2,"attackedMonsterCardId":277,"lable":"Player 2 Roll Hit"}} 

 Player 2 21:34:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Response Remove After Resolve Player Attack Roll On Monster 6"},"childOfId":52} 

 Player 2 21:34:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Wait For Response From Player 2 "},"childOfId":52} 

 Player 2 21:34:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:34:01 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 2 21:34:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Wait For Response From Player 1 "},"childOfId":52} 

 Player 2 21:34:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:34:01 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:34:01 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335,336]} 

 Player 1 21:34:01 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:34:01 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 2 21:34:01 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 2 21:34:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":56,"_text":"Resolve Monster Combat Damage To A Player 7 "}} 

 Player 2 21:34:01 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":7,"creatorCardId":329,"entityToDoDamageCardId":329,"entityToTakeDamageCardId":277,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6,"lable":"Cain is going to hurt Holy Dinga"}]} 

 Player 2 21:34:01 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":7,"text":"Cain will deal 1 combat damage to Holy Dinga "} 

 Player 2 21:34:01 $UPDATE_STACK_VIS:  
{"stackId":7,"text":"Cain will deal 1 combat damage to Holy Dinga"} 

 Player 2 21:34:01 $MONSTER_GET_DAMAGED:  
{"cardId":277,"hpLeft":1,"damageDealerId":329} 

 Player 2 21:34:01 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":329},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":277,"scopeIsPlayer":false,"index":16,"originStackId":-1},"isAfterActivation":true,"index":16} 

 Player 2 21:34:01 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":6},{"type":0,"number":329},{"type":0,"number":277}],"result":null,"preventMethod":false,"methodScopeId":329,"scopeIsPlayer":true,"index":17,"originStackId":7},"isAfterActivation":true,"index":17} 

 Player 2 21:34:01 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":329,"entityToDoDamageCardId":329,"entityToTakeDamageCardId":277,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6,"lable":"Cain will deal 1 combat damage to Holy Dinga "}} 

 Player 2 21:34:01 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 21:34:01 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 21:34:01 $SHOW_STACK_EFFECT:  
{"effectId":7} 

 Player 2 21:34:04 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":7} 

 Player 2 21:34:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":57,"_text":"Remove After Resolve Monster Combat Damage To A Player 7  "}} 

 Player 2 21:34:04 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":329,"entityToDoDamageCardId":329,"entityToTakeDamageCardId":277,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6,"lable":"Cain will deal 1 combat damage to Holy Dinga "}} 

 Player 2 21:34:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":58,"_text":"Response Remove After Resolve Monster Combat Damage To A Player 7"},"childOfId":57} 

 Player 2 21:34:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":59,"_text":"Wait For Response From Player 1 "},"childOfId":57} 

 Player 2 21:34:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:34:04 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:34:04 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335,336]} 

 Player 1 21:34:04 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:34:04 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 2 21:34:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":60,"_text":"Wait For Response From Player 2 "},"childOfId":57} 

 Player 2 21:34:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:34:04 $ACTION_MASSAGE_REMOVE:  
{"id":60} 

 Player 2 21:34:04 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 2 21:34:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":61,"_text":"Stack Was Emptied "}} 

 Player 2 21:34:04 $CLEAR_SE_VIS:  

 Player 2 21:34:32 $NEXT_STACK_ID:  

 Player 2 21:34:32 $ADD_TO_STACK:  
{"stackEffect":{"entityId":8,"creatorCardId":329,"rollingPlayerCardId":329,"stackEffectType":2,"attackedMonsterCardId":277,"lable":"Player 2 is rolling against Holy Dinga<Monster>"}} 

 Player 2 21:34:32 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":329,"rollingPlayerCardId":329,"stackEffectType":2,"attackedMonsterCardId":277,"lable":"Player 2 is rolling against Holy Dinga<Monster>"}} 

 Player 2 21:34:32 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 21:34:32 $SHOW_STACK_EFFECT:  
{"effectId":8} 

 Player 2 21:34:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":62,"_text":"Add Player Attack Roll On Monster 8 "}} 

 Player 2 21:34:35 $ROLL_DICE:  
{"playerId":2} 

 Player 2 21:34:37 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":6} 

 Player 2 21:34:37 $UPDATE_STACK_VIS:  
{"stackId":8,"text":"player rolled 6 vs Holy Dinga<Monster>"} 

 Player 2 21:34:37 $SHOW_DICE_ROLL:  
{"stackId":8} 

 Player 2 21:34:40 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":8,"text":"Player 2 rolled 6 vs Holy Dinga<Monster>"} 

 Player 2 21:34:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:34:40 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":329,"numberRolled":6,"rollingPlayerCardId":329,"stackEffectType":2,"attackedMonsterCardId":277,"lable":"Player 2 rolled 6 vs Holy Dinga<Monster>"}} 

 Player 2 21:34:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":63,"_text":"Response Adding Player Attack Roll On Monster 8"},"childOfId":62} 

 Player 2 21:34:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":64,"_text":"Wait For Response From Player 2 "},"childOfId":62} 

 Player 2 21:34:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:34:40 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 2 21:34:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":65,"_text":"Wait For Response From Player 1 "},"childOfId":62} 

 Player 2 21:34:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:34:40 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:34:40 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335,336]} 

 Player 1 21:34:40 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:34:40 $ACTION_MASSAGE_REMOVE:  
{"id":65} 

 Player 2 21:34:40 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 2 21:34:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":66,"_text":"Resolve Player Attack Roll On Monster 8 "}} 

 Player 2 21:34:40 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":8,"creatorCardId":329,"numberRolled":6,"rollingPlayerCardId":329,"stackEffectType":2,"attackedMonsterCardId":277,"lable":"Player 2 rolled 6 vs Holy Dinga<Monster>"}]} 

 Player 2 21:34:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":67,"_text":"Added 0 to original roll"}} 

 Player 2 21:34:41 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":8,"text":"Player 2 Rolled 6 Against Holy Dinga<Monster> 3"} 

 Player 2 21:34:41 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":8,"text":"Player 2 Roll Hit"} 

 Player 2 21:34:41 $NEXT_STACK_ID:  

 Player 2 21:34:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:34:41 $CLEAR_SE_VIS:  

 Player 2 21:34:41 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":329,"entityToDoDamageCardId":329,"entityToTakeDamageCardId":277,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6,"lable":"Cain is going to hurt Holy Dinga"}} 

 Player 2 21:34:41 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":329,"numberRolled":6,"rollingPlayerCardId":329,"stackEffectType":2,"attackedMonsterCardId":277,"lable":"Player 2 Roll Hit"}} 

 Player 2 21:34:41 $REPLACE_STACK:  
{"currentStack":[{"entityId":9,"creatorCardId":329,"entityToDoDamageCardId":329,"entityToTakeDamageCardId":277,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6,"lable":"Cain is going to hurt Holy Dinga"},{"entityId":8,"creatorCardId":329,"numberRolled":6,"rollingPlayerCardId":329,"stackEffectType":2,"attackedMonsterCardId":277,"lable":"Player 2 Roll Hit"}]} 

 Player 2 21:34:41 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 21:34:41 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":6},{"type":2,"number":1},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":329,"scopeIsPlayer":true,"index":18,"originStackId":8},"isAfterActivation":true,"index":18} 

 Player 2 21:34:41 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":329,"numberRolled":6,"rollingPlayerCardId":329,"stackEffectType":2,"attackedMonsterCardId":277,"lable":"Player 2 Roll Hit"}} 

 Player 2 21:34:41 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 21:34:41 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 21:34:41 $SHOW_STACK_EFFECT:  
{"effectId":8} 

 Player 2 21:34:43 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":8} 

 Player 2 21:34:43 $SHOW_STACK_EFFECT:  
{"effectId":9} 

 Player 2 21:34:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":68,"_text":"Remove After Resolve Player Attack Roll On Monster 8  "}} 

 Player 2 21:34:46 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":8,"creatorCardId":329,"numberRolled":6,"rollingPlayerCardId":329,"stackEffectType":2,"attackedMonsterCardId":277,"lable":"Player 2 Roll Hit"}} 

 Player 2 21:34:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":69,"_text":"Response Remove After Resolve Player Attack Roll On Monster 8"},"childOfId":68} 

 Player 2 21:34:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":70,"_text":"Wait For Response From Player 2 "},"childOfId":68} 

 Player 2 21:34:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:34:47 $ACTION_MASSAGE_REMOVE:  
{"id":70} 

 Player 2 21:34:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":71,"_text":"Wait For Response From Player 1 "},"childOfId":68} 

 Player 2 21:34:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:34:47 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:34:47 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335,336]} 

 Player 1 21:34:47 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:34:47 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 2 21:34:47 $ACTION_MASSAGE_REMOVE:  
{"id":69} 

 Player 2 21:34:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":72,"_text":"Resolve Monster Combat Damage To A Player 9 "}} 

 Player 2 21:34:47 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":9,"creatorCardId":329,"entityToDoDamageCardId":329,"entityToTakeDamageCardId":277,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6,"lable":"Cain is going to hurt Holy Dinga"}]} 

 Player 2 21:34:47 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":9,"text":"Cain will deal 1 combat damage to Holy Dinga "} 

 Player 2 21:34:47 $UPDATE_STACK_VIS:  
{"stackId":9,"text":"Cain will deal 1 combat damage to Holy Dinga"} 

 Player 2 21:34:47 $MONSTER_GET_DAMAGED:  
{"cardId":277,"hpLeft":0,"damageDealerId":329} 

 Player 2 21:34:47 $NEXT_STACK_ID:  

 Player 2 21:34:47 $CLEAR_SE_VIS:  

 Player 2 21:34:47 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":329,"entityToDoDamageCardId":329,"entityToTakeDamageCardId":277,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6,"lable":"Cain will deal 1 combat damage to Holy Dinga "}} 

 Player 2 21:34:47 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":329,"monsterToDieCardId":277,"stackEffectType":5,"killerId":329,"lable":"[object Object] Is Going To Be Killed by Cain"}} 

 Player 2 21:34:47 $REPLACE_STACK:  
{"currentStack":[{"entityId":9,"creatorCardId":329,"entityToDoDamageCardId":329,"entityToTakeDamageCardId":277,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6,"lable":"Cain will deal 1 combat damage to Holy Dinga "},{"entityId":10,"creatorCardId":329,"monsterToDieCardId":277,"stackEffectType":5,"killerId":329,"lable":"[object Object] Is Going To Be Killed by Cain"}]} 

 Player 2 21:34:47 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":329,"monsterToDieCardId":277,"stackEffectType":5,"killerId":329,"lable":"[object Object] Is Going To Be Killed by Cain"}} 

 Player 2 21:34:47 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 21:34:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:34:47 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":329},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":277,"scopeIsPlayer":false,"index":19,"originStackId":-1},"isAfterActivation":true,"index":19} 

 Player 2 21:34:47 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":6},{"type":0,"number":329},{"type":0,"number":277}],"result":null,"preventMethod":false,"methodScopeId":329,"scopeIsPlayer":true,"index":20,"originStackId":9},"isAfterActivation":true,"index":20} 

 Player 2 21:34:47 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":329,"entityToDoDamageCardId":329,"entityToTakeDamageCardId":277,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6,"lable":"Cain will deal 1 combat damage to Holy Dinga "}} 

 Player 2 21:34:47 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 21:34:47 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 21:34:47 $SHOW_STACK_EFFECT:  
{"effectId":9} 

 Player 2 21:34:50 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":9} 

 Player 2 21:34:50 $SHOW_STACK_EFFECT:  
{"effectId":10} 

 Player 2 21:34:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":73,"_text":"Remove After Resolve Monster Combat Damage To A Player 9  "}} 

 Player 2 21:34:53 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":9,"creatorCardId":329,"entityToDoDamageCardId":329,"entityToTakeDamageCardId":277,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6,"lable":"Cain will deal 1 combat damage to Holy Dinga "}} 

 Player 2 21:34:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":74,"_text":"Response Remove After Resolve Monster Combat Damage To A Player 9"},"childOfId":73} 

 Player 2 21:34:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":75,"_text":"Wait For Response From Player 2 "},"childOfId":73} 

 Player 2 21:34:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:34:53 $ACTION_MASSAGE_REMOVE:  
{"id":75} 

 Player 2 21:34:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":76,"_text":"Wait For Response From Player 1 "},"childOfId":73} 

 Player 2 21:34:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:34:53 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:34:53 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335,336]} 

 Player 1 21:34:53 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:34:53 $ACTION_MASSAGE_REMOVE:  
{"id":76} 

 Player 2 21:34:53 $ACTION_MASSAGE_REMOVE:  
{"id":74} 

 Player 2 21:34:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":77,"_text":"Resolve Monster Is Going To Die 10 "}} 

 Player 2 21:34:53 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":10,"creatorCardId":329,"monsterToDieCardId":277,"stackEffectType":5,"killerId":329,"lable":"[object Object] Is Going To Be Killed by Cain"}]} 

 Player 2 21:34:53 $DISABLE_PARTICLE_EFFECT:  
{"cardId":277,"particleType":5} 

 Player 2 21:34:53 $CANCEL_ATTACK:  

 Player 2 21:34:53 $NEXT_STACK_ID:  

 Player 2 21:34:53 $NEXT_STACK_ID:  

 Player 2 21:34:53 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":12,"text":"Player 2 Is About To Roll A Dice"} 

 Player 2 21:34:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:34:53 $CLEAR_SE_VIS:  

 Player 2 21:34:53 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":329,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"monsterCardWithRewardId":277,"playerCardIdToReward":329,"stackEffectType":7,"lable":"Player 2 Is Going To Get Holy Dinga<Monster>'s Reward"}} 

 Player 2 21:34:53 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":329,"monsterToDieCardId":277,"stackEffectType":5,"killerId":329,"lable":"[object Object] Is Going To Be Killed by Cain"}} 

 Player 2 21:34:53 $REPLACE_STACK:  
{"currentStack":[{"entityId":11,"creatorCardId":329,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"monsterCardWithRewardId":277,"playerCardIdToReward":329,"stackEffectType":7,"lable":"Player 2 Is Going To Get Holy Dinga<Monster>'s Reward"},{"entityId":10,"creatorCardId":329,"monsterToDieCardId":277,"stackEffectType":5,"killerId":329,"lable":"[object Object] Is Going To Be Killed by Cain"}]} 

 Player 2 21:34:54 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 21:34:54 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":329,"monsterToDieCardId":277,"stackEffectType":5,"killerId":329,"lable":"[object Object] Is Going To Be Killed by Cain"}} 

 Player 2 21:34:54 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 21:34:54 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 21:34:54 $SHOW_STACK_EFFECT:  
{"effectId":10} 

 Player 1 21:34:54 $NEXT_STACK_ID:  

 Player 1 21:34:54 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":13,"text":"Player 2 Is About To Roll A Dice"} 

 Player 1 21:34:54 $NEXT_STACK_ID:  

 Player 1 21:34:54 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":14,"text":"Player 2 Is About To Roll A Dice"} 

 Player 2 21:34:56 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":10} 

 Player 2 21:34:56 $SHOW_STACK_EFFECT:  
{"effectId":11} 

 Player 2 21:34:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":78,"_text":"Remove After Resolve Monster Is Going To Die 10  "}} 

 Player 2 21:34:59 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":10,"creatorCardId":329,"monsterToDieCardId":277,"stackEffectType":5,"killerId":329,"lable":"[object Object] Is Going To Be Killed by Cain"}} 

 Player 2 21:34:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":79,"_text":"Response Remove After Resolve Monster Is Going To Die 10"},"childOfId":78} 

 Player 2 21:34:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":80,"_text":"Wait For Response From Player 2 "},"childOfId":78} 

 Player 2 21:34:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:34:59 $ACTION_MASSAGE_REMOVE:  
{"id":80} 

 Player 2 21:34:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":81,"_text":"Wait For Response From Player 1 "},"childOfId":78} 

 Player 2 21:34:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:34:59 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:34:59 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335,336]} 

 Player 1 21:34:59 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:34:59 $ACTION_MASSAGE_REMOVE:  
{"id":81} 

 Player 2 21:34:59 $ACTION_MASSAGE_REMOVE:  
{"id":79} 

 Player 2 21:34:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":82,"_text":"Resolve Monster Death Reward 11 "}} 

 Player 2 21:35:00 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":11,"creatorCardId":329,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"monsterCardWithRewardId":277,"playerCardIdToReward":329,"stackEffectType":7,"lable":"Player 2 Is Going To Get Holy Dinga<Monster>'s Reward"}]} 

 Player 2 21:35:00 $ADD_TO_STACK:  
{"stackEffect":{"entityId":12,"creatorCardId":329,"stackEffectToLock":{"entityId":11,"creatorCardId":329,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"monsterCardWithRewardId":277,"playerCardIdToReward":329,"stackEffectType":7,"lable":"Player 2 Is Going To Get Holy Dinga<Monster>'s Reward"},"hasLockingStackEffect":false,"stackEffectType":11,"lable":"Player 2 Is About To Roll A Dice"}} 

 Player 2 21:35:00 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":12,"creatorCardId":329,"stackEffectToLock":{"entityId":11,"creatorCardId":329,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"monsterCardWithRewardId":277,"playerCardIdToReward":329,"stackEffectType":7,"lable":"Player 2 Is Going To Get Holy Dinga<Monster>'s Reward"},"hasLockingStackEffect":false,"stackEffectType":11,"lable":"Player 2 Is About To Roll A Dice"}} 

 Player 2 21:35:00 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 21:35:00 $SHOW_STACK_EFFECT:  
{"effectId":12} 

 Player 1 21:35:00 $NEXT_STACK_ID:  

 Player 1 21:35:00 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":15,"text":"Player 2 Is About To Roll A Dice"} 

 Player 1 21:35:00 $NEXT_STACK_ID:  

 Player 1 21:35:00 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":16,"text":"Player 2 Is About To Roll A Dice"} 

 Player 1 21:35:00 $NEXT_STACK_ID:  

 Player 1 21:35:00 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":17,"text":"Player 2 Is About To Roll A Dice"} 

 Player 2 21:35:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":83,"_text":"Add Roll Dice 12 "}} 

 Player 2 21:35:02 $ROLL_DICE:  
{"playerId":2} 

 Player 2 21:35:04 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":4} 

 Player 2 21:35:04 $UPDATE_STACK_VIS:  
{"stackId":12,"text":"player 2 rolled 4"} 

 Player 2 21:35:04 $SHOW_DICE_ROLL:  
{"stackId":12} 

 Player 2 21:35:07 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":12,"text":"Player 2 Rolled 4"} 

 Player 2 21:35:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:35:07 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":12,"creatorCardId":329,"stackEffectToLock":{"entityId":11,"creatorCardId":329,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"monsterCardWithRewardId":277,"playerCardIdToReward":329,"stackEffectType":7,"lable":"Player 2 Is Going To Get Holy Dinga<Monster>'s Reward"},"hasLockingStackEffect":false,"numberRolled":4,"stackEffectType":11,"lable":"Player 2 Rolled 4"}} 

 Player 2 21:35:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":84,"_text":"Response Adding Roll Dice 12"},"childOfId":83} 

 Player 2 21:35:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":85,"_text":"Wait For Response From Player 2 "},"childOfId":83} 

 Player 2 21:35:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:35:07 $ACTION_MASSAGE_REMOVE:  
{"id":85} 

 Player 2 21:35:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":86,"_text":"Wait For Response From Player 1 "},"childOfId":83} 

 Player 2 21:35:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:35:07 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:35:07 $NEXT_STACK_ID:  

 Player 1 21:35:07 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":18,"text":"Player 2 Is About To Roll A Dice"} 

 Player 1 21:35:07 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335,336]} 

 Player 1 21:35:07 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:35:07 $ACTION_MASSAGE_REMOVE:  
{"id":86} 

 Player 2 21:35:07 $ACTION_MASSAGE_REMOVE:  
{"id":84} 

 Player 2 21:35:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":87,"_text":"Resolve Roll Dice 12 "}} 

 Player 2 21:35:07 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":11,"creatorCardId":329,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"monsterCardWithRewardId":277,"playerCardIdToReward":329,"stackEffectType":7,"lable":"Player 2 Is Going To Get Holy Dinga<Monster>'s Reward"},{"entityId":12,"creatorCardId":329,"stackEffectToLock":{"entityId":11,"creatorCardId":329,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"monsterCardWithRewardId":277,"playerCardIdToReward":329,"stackEffectType":7,"lable":"Player 2 Is Going To Get Holy Dinga<Monster>'s Reward"},"hasLockingStackEffect":false,"numberRolled":4,"stackEffectType":11,"lable":"Player 2 Rolled 4"}]} 

 Player 2 21:35:07 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":329,"scopeIsPlayer":true,"index":21,"originStackId":12},"isAfterActivation":true,"index":21} 

 Player 2 21:35:07 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":12,"creatorCardId":329,"stackEffectToLock":{"entityId":11,"creatorCardId":329,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"monsterCardWithRewardId":277,"playerCardIdToReward":329,"stackEffectType":7,"lable":"Player 2 Is Going To Get Holy Dinga<Monster>'s Reward"},"hasLockingStackEffect":false,"numberRolled":4,"stackEffectType":11,"lable":"Player 2 Rolled 4"}} 

 Player 2 21:35:07 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":11,"creatorCardId":329,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"monsterCardWithRewardId":277,"playerCardIdToReward":329,"stackEffectType":7,"lable":"Player 2 Is Going To Get Holy Dinga<Monster>'s Reward"}]} 

 Player 2 21:35:07 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 21:35:07 $SHOW_STACK_EFFECT:  
{"effectId":12} 

 Player 1 21:35:07 $NEXT_STACK_ID:  

 Player 1 21:35:07 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":19,"text":"Player 2 Is About To Roll A Dice"} 

 Player 1 21:35:07 $NEXT_STACK_ID:  

 Player 1 21:35:07 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":20,"text":"Player 2 Is About To Roll A Dice"} 

 Player 1 21:35:07 $NEXT_STACK_ID:  

 Player 1 21:35:07 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":21,"text":"Player 2 Is About To Roll A Dice"} 

 Player 1 21:35:08 $NEXT_STACK_ID:  

 Player 1 21:35:08 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":22,"text":"Player 2 Is About To Roll A Dice"} 

 Player 2 21:35:10 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":12} 

 Player 2 21:35:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":88,"_text":"Remove After Resolve Roll Dice 12  "}} 

 Player 2 21:35:10 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":12,"creatorCardId":329,"stackEffectToLock":{"entityId":11,"creatorCardId":329,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"monsterCardWithRewardId":277,"playerCardIdToReward":329,"stackEffectType":7,"lable":"Player 2 Is Going To Get Holy Dinga<Monster>'s Reward"},"hasLockingStackEffect":false,"numberRolled":4,"stackEffectType":11,"lable":"Player 2 Rolled 4"}} 

 Player 2 21:35:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":89,"_text":"Response Remove After Resolve Roll Dice 12"},"childOfId":88} 

 Player 2 21:35:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":90,"_text":"Wait For Response From Player 1 "},"childOfId":88} 

 Player 2 21:35:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:35:10 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:35:10 $NEXT_STACK_ID:  

 Player 1 21:35:10 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":23,"text":"Player 2 Is About To Roll A Dice"} 

 Player 1 21:35:10 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335,336]} 

 Player 1 21:35:10 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:35:10 $ACTION_MASSAGE_REMOVE:  
{"id":90} 

 Player 2 21:35:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":91,"_text":"Wait For Response From Player 2 "},"childOfId":88} 

 Player 2 21:35:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:35:11 $ACTION_MASSAGE_REMOVE:  
{"id":91} 

 Player 2 21:35:11 $ACTION_MASSAGE_REMOVE:  
{"id":89} 

 Player 2 21:35:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":92,"_text":"Resolve Monster Death Reward 11 "}} 

 Player 2 21:35:11 $SET_MONEY:  
{"playerId":2,"numOfCoins":7} 

 Player 2 21:35:11 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":329,"scopeIsPlayer":true,"index":22,"originStackId":-1},"isAfterActivation":true,"index":22} 

 Player 2 21:35:11 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":277,"scopeIsPlayer":false,"index":23,"originStackId":11},"isAfterActivation":true,"index":23} 

 Player 2 21:35:11 $MOVE_CARD:  
{"moveIndex":8,"cardId":277,"placeID":346,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 21:35:11 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":277,"flipIfFlipped":true,"playerId":2} 

 Player 2 21:35:11 $MOVE_CARD_TO_PILE:  
{"type":2,"cardId":277} 

 Player 2 21:35:11 $REMOVE_MONSTER:  
{"holderId":1,"monsterId":277} 

 Player 2 21:35:11 $NEXT_STACK_ID:  

 Player 2 21:35:11 $ADD_TO_STACK:  
{"stackEffect":{"entityId":24,"creatorCardId":329,"slotType":2,"slotToFillId":1,"stackEffectType":10,"lable":"Refill holder1 Slot"}} 

 Player 2 21:35:11 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":24,"creatorCardId":329,"slotType":2,"slotToFillId":1,"stackEffectType":10,"lable":"Refill holder1 Slot"}} 

 Player 2 21:35:11 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 21:35:11 $SHOW_STACK_EFFECT:  
{"effectId":24} 

 Player 2 21:35:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":93,"_text":"Add Reffil Empty Monster Slot 24 "}} 

 Player 2 21:35:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:35:14 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":24,"creatorCardId":329,"slotType":2,"slotToFillId":1,"stackEffectType":10,"lable":"Refill holder1 Slot"}} 

 Player 2 21:35:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":94,"_text":"Response Adding Reffil Empty Monster Slot 24"},"childOfId":93} 

 Player 2 21:35:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":95,"_text":"Wait For Response From Player 2 "},"childOfId":93} 

 Player 2 21:35:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:35:14 $ACTION_MASSAGE_REMOVE:  
{"id":95} 

 Player 2 21:35:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":96,"_text":"Wait For Response From Player 1 "},"childOfId":93} 

 Player 2 21:35:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:35:14 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:35:14 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335,336]} 

 Player 1 21:35:14 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:35:14 $ACTION_MASSAGE_REMOVE:  
{"id":96} 

 Player 2 21:35:14 $ACTION_MASSAGE_REMOVE:  
{"id":94} 

 Player 2 21:35:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":97,"_text":"Resolve Reffil Empty Monster Slot 24 "}} 

 Player 2 21:35:15 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":11,"creatorCardId":329,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"monsterCardWithRewardId":277,"playerCardIdToReward":329,"stackEffectType":7,"lable":"Player 2 Is Going To Get Holy Dinga<Monster>'s Reward"},{"entityId":24,"creatorCardId":329,"slotType":2,"slotToFillId":1,"stackEffectType":10,"lable":"Refill holder1 Slot"}]} 

 Player 2 21:35:15 $DRAW_CARD:  
{"deckType":2} 

 Player 2 21:35:15 $FLIP_CARD:  
{"cardId":286} 

 Player 2 21:35:15 $REGISTER_PASSIVE_ITEM:  
{"cardId":286} 

 Player 2 21:35:15 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":286} 

 Player 2 21:35:15 $NEW_MONSTER_ON_PLACE:  
{"cardId":286,"monsterPlaceId":1} 

 Player 2 21:35:15 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":24,"creatorCardId":329,"slotType":2,"slotToFillId":1,"stackEffectType":10,"lable":"Refill holder1 Slot"}} 

 Player 2 21:35:15 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":11,"creatorCardId":329,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"monsterCardWithRewardId":277,"playerCardIdToReward":329,"stackEffectType":7,"lable":"Player 2 Is Going To Get Holy Dinga<Monster>'s Reward"}]} 

 Player 2 21:35:15 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 21:35:15 $SHOW_STACK_EFFECT:  
{"effectId":24} 

 Player 1 21:35:15 $NEXT_STACK_ID:  

 Player 1 21:35:15 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":25,"text":"Player 2 Is About To Roll A Dice"} 

 Player 1 21:35:15 $NEXT_STACK_ID:  

 Player 1 21:35:15 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":26,"text":"Player 2 Is About To Roll A Dice"} 

 Player 2 21:35:17 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":24} 

 Player 2 21:35:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":98,"_text":"Remove After Resolve Reffil Empty Monster Slot 24  "}} 

 Player 2 21:35:18 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":24,"creatorCardId":329,"slotType":2,"slotToFillId":1,"stackEffectType":10,"lable":"Refill holder1 Slot"}} 

 Player 2 21:35:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":99,"_text":"Response Remove After Resolve Reffil Empty Monster Slot 24"},"childOfId":98} 

 Player 2 21:35:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":100,"_text":"Wait For Response From Player 1 "},"childOfId":98} 

 Player 2 21:35:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:35:18 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:35:18 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335,336]} 

 Player 1 21:35:18 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:35:18 $ACTION_MASSAGE_REMOVE:  
{"id":100} 

 Player 2 21:35:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":101,"_text":"Wait For Response From Player 2 "},"childOfId":98} 

 Player 2 21:35:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:35:18 $ACTION_MASSAGE_REMOVE:  
{"id":101} 

 Player 2 21:35:18 $ACTION_MASSAGE_REMOVE:  
{"id":99} 

 Player 2 21:35:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":102,"_text":"Resolve Monster Death Reward 11 "}} 

 Player 2 21:35:18 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":11,"creatorCardId":329,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"monsterCardWithRewardId":277,"playerCardIdToReward":329,"stackEffectType":7,"lable":"Player 2 Is Going To Get Holy Dinga<Monster>'s Reward"}} 

 Player 2 21:35:18 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 21:35:18 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 21:35:18 $SHOW_STACK_EFFECT:  
{"effectId":11} 

 Player 1 21:35:18 $NEXT_STACK_ID:  

 Player 1 21:35:18 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":27,"text":"Player 2 Is About To Roll A Dice"} 

 Player 2 21:35:21 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":11} 

 Player 2 21:35:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":103,"_text":"Remove After Resolve Monster Death Reward 11  "}} 

 Player 2 21:35:21 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":11,"creatorCardId":329,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"monsterCardWithRewardId":277,"playerCardIdToReward":329,"stackEffectType":7,"lable":"Player 2 Is Going To Get Holy Dinga<Monster>'s Reward"}} 

 Player 2 21:35:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":104,"_text":"Response Remove After Resolve Monster Death Reward 11"},"childOfId":103} 

 Player 2 21:35:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":105,"_text":"Wait For Response From Player 2 "},"childOfId":103} 

 Player 2 21:35:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:35:21 $ACTION_MASSAGE_REMOVE:  
{"id":105} 

 Player 2 21:35:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":106,"_text":"Wait For Response From Player 1 "},"childOfId":103} 

 Player 2 21:35:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:35:21 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:35:21 $NEXT_STACK_ID:  

 Player 1 21:35:21 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":28,"text":"Player 2 Is About To Roll A Dice"} 

 Player 1 21:35:21 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335,336]} 

 Player 1 21:35:21 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:35:21 $ACTION_MASSAGE_REMOVE:  
{"id":106} 

 Player 2 21:35:21 $ACTION_MASSAGE_REMOVE:  
{"id":104} 

 Player 2 21:35:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":107,"_text":"Stack Was Emptied "}} 

 Player 2 21:35:21 $CLEAR_SE_VIS:  

 Player 2 21:35:34 $NEXT_STACK_ID:  

 Player 2 21:35:34 $ADD_TO_STACK:  
{"stackEffect":{"entityId":29,"creatorCardId":329,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":120,"lootPlayerId":2,"lable":"Player 2 Is Going To Play A Sack ","hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 21:35:34 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":29,"creatorCardId":329,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":120,"lootPlayerId":2,"lable":"Player 2 Is Going To Play A Sack ","hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 21:35:34 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 21:35:34 $SHOW_STACK_EFFECT:  
{"effectId":29} 

 Player 2 21:35:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":108,"_text":"Add Play Loot Card 29 "}} 

 Player 2 21:35:37 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":120} 

 Player 2 21:35:37 $MOVE_CARD:  
{"moveIndex":9,"cardId":120,"placeID":343,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 21:35:37 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":120,"flipIfFlipped":true,"playerId":2} 

 Player 2 21:35:37 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":120} 

 Player 2 21:35:37 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":29,"text":"Player 2 Is Going To Play A Sack: GainLoot"} 

 Player 2 21:35:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:35:37 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":29,"creatorCardId":329,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":120,"lootPlayerId":2,"effectToDo":{"effectName":"GainLoot","cardEffectNum":0,"cardPlayerId":2,"cardId":120,"effctType":1},"lable":"Player 2 Is Going To Play A Sack: GainLoot","hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 21:35:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":109,"_text":"Response Adding Play Loot Card 29"},"childOfId":108} 

 Player 2 21:35:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":110,"_text":"Wait For Response From Player 2 "},"childOfId":108} 

 Player 2 21:35:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:35:38 $ACTION_MASSAGE_REMOVE:  
{"id":110} 

 Player 2 21:35:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":111,"_text":"Wait For Response From Player 1 "},"childOfId":108} 

 Player 2 21:35:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:35:38 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:35:38 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335,336]} 

 Player 1 21:35:38 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:35:38 $ACTION_MASSAGE_REMOVE:  
{"id":111} 

 Player 2 21:35:38 $ACTION_MASSAGE_REMOVE:  
{"id":109} 

 Player 2 21:35:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":112,"_text":"Resolve Play Loot Card 29 "}} 

 Player 2 21:35:38 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":29,"creatorCardId":329,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":120,"lootPlayerId":2,"effectToDo":{"effectName":"GainLoot","cardEffectNum":0,"cardPlayerId":2,"cardId":120,"effctType":1},"lable":"Player 2 Is Going To Play A Sack: GainLoot","hasDataBeenCollectedYet":true,"stackEffectType":8}]} 

 Player 2 21:35:38 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":29,"text":"Player 2 Plays A Sack: GainLoot"} 

 Player 2 21:35:38 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":120,"particleType":6} 

 Player 2 21:35:40 $DISABLE_PARTICLE_EFFECT:  
{"cardId":120,"particleType":6} 

 Player 2 21:35:40 $DRAW_CARD:  
{"deckType":1} 

 Player 2 21:35:40 $MOVE_CARD:  
{"moveIndex":10,"cardId":129,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 21:35:40 $MOVE_CARD_END:  
{"moveIndex":10,"cardId":129,"flipIfFlipped":false,"playerId":2} 

 Player 2 21:35:40 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":129} 

 Player 2 21:35:40 $FLIP_CARD:  
{"cardId":129} 

 Player 2 21:35:40 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":129} 

 Player 2 21:35:40 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":129}],"result":null,"preventMethod":false,"methodScopeId":329,"scopeIsPlayer":true,"index":24,"originStackId":-1},"isAfterActivation":true,"index":24} 

 Player 2 21:35:40 $DRAW_CARD:  
{"deckType":1} 

 Player 2 21:35:40 $MOVE_CARD:  
{"moveIndex":11,"cardId":138,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 21:35:41 $MOVE_CARD_END:  
{"moveIndex":11,"cardId":138,"flipIfFlipped":false,"playerId":2} 

 Player 2 21:35:41 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":138} 

 Player 2 21:35:41 $FLIP_CARD:  
{"cardId":138} 

 Player 2 21:35:41 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":138} 

 Player 2 21:35:41 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":138}],"result":null,"preventMethod":false,"methodScopeId":329,"scopeIsPlayer":true,"index":25,"originStackId":-1},"isAfterActivation":true,"index":25} 

 Player 2 21:35:41 $DRAW_CARD:  
{"deckType":1} 

 Player 2 21:35:41 $MOVE_CARD:  
{"moveIndex":12,"cardId":74,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 21:35:41 $MOVE_CARD_END:  
{"moveIndex":12,"cardId":74,"flipIfFlipped":false,"playerId":2} 

 Player 2 21:35:41 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":74} 

 Player 2 21:35:41 $FLIP_CARD:  
{"cardId":74} 

 Player 2 21:35:41 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":74} 

 Player 2 21:35:41 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":74}],"result":null,"preventMethod":false,"methodScopeId":329,"scopeIsPlayer":true,"index":26,"originStackId":-1},"isAfterActivation":true,"index":26} 

 Player 2 21:35:41 $REMOVE_FROM_PILE:  
{"cardId":120} 

 Player 2 21:35:42 $MOVE_CARD:  
{"moveIndex":13,"cardId":120,"placeID":344,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 21:35:42 $MOVE_CARD_END:  
{"moveIndex":13,"cardId":120,"flipIfFlipped":true,"playerId":2} 

 Player 2 21:35:42 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":120} 

 Player 2 21:35:42 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":29,"creatorCardId":329,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":120,"lootPlayerId":2,"lable":"Player 2 Plays A Sack: GainLoot","hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 21:35:42 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 21:35:42 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 21:35:42 $SHOW_STACK_EFFECT:  
{"effectId":29} 

 Player 2 21:35:45 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":29} 

 Player 2 21:35:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":113,"_text":"Remove After Resolve Play Loot Card 29  "}} 

 Player 2 21:35:45 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":29,"creatorCardId":329,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":120,"lootPlayerId":2,"lable":"Player 2 Plays A Sack: GainLoot","hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 21:35:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":114,"_text":"Response Remove After Resolve Play Loot Card 29"},"childOfId":113} 

 Player 2 21:35:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":115,"_text":"Wait For Response From Player 1 "},"childOfId":113} 

 Player 2 21:35:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:35:45 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:35:45 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335,336]} 

 Player 1 21:35:45 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:35:45 $ACTION_MASSAGE_REMOVE:  
{"id":115} 

 Player 2 21:35:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":116,"_text":"Wait For Response From Player 2 "},"childOfId":113} 

 Player 2 21:35:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:35:45 $ACTION_MASSAGE_REMOVE:  
{"id":116} 

 Player 2 21:35:45 $ACTION_MASSAGE_REMOVE:  
{"id":114} 

 Player 2 21:35:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":117,"_text":"Stack Was Emptied "}} 

 Player 2 21:35:45 $CLEAR_SE_VIS:  

 Player 2 21:36:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:36:18 $CLEAR_SE_VIS:  

 Player 2 21:36:18 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 2 21:36:18 $CLEAR_SE_VIS:  

 Player 2 21:36:18 $END_TURN:  

 Player 2 21:36:18 $SET_TURN:  
{"playerId":1} 

 Player 2 21:36:18 $START_TURN:  
{"playerId":1} 

 Player 1 21:36:18 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 21:36:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:36:18 $NEXT_STACK_ID:  

 Player 1 21:36:18 $ADD_TO_STACK:  
{"stackEffect":{"entityId":30,"creatorCardId":335,"turnPlayerCardId":335,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"}} 

 Player 1 21:36:18 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":30,"creatorCardId":335,"turnPlayerCardId":335,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"}} 

 Player 1 21:36:18 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 21:36:18 $SHOW_STACK_EFFECT:  
{"effectId":30} 

 Player 2 21:36:18 $STACK_EMPTIED:  
{"playerId":1} 

 Player 1 21:36:18 $CLEAR_SE_VIS:  

 Player 1 21:36:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":118,"_text":"Add Start Turn Loot Draw 30 "}} 

 Player 1 21:36:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:36:21 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":30,"creatorCardId":335,"turnPlayerCardId":335,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"}} 

 Player 1 21:36:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":119,"_text":"Response Adding Start Turn Loot Draw 30"},"childOfId":118} 

 Player 1 21:36:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":120,"_text":"Wait For Response From Player 1 "},"childOfId":118} 

 Player 1 21:36:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:36:21 $ACTION_MASSAGE_REMOVE:  
{"id":120} 

 Player 1 21:36:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":121,"_text":"Wait For Response From Player 2 "},"childOfId":118} 

 Player 1 21:36:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:36:22 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:36:22 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[329]} 

 Player 2 21:36:22 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:36:22 $ACTION_MASSAGE_REMOVE:  
{"id":121} 

 Player 1 21:36:22 $ACTION_MASSAGE_REMOVE:  
{"id":119} 

 Player 1 21:36:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":122,"_text":"Resolve Start Turn Loot Draw 30 "}} 

 Player 1 21:36:22 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":30,"creatorCardId":335,"turnPlayerCardId":335,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"}]} 

 Player 1 21:36:22 $DRAW_CARD:  
{"deckType":1} 

 Player 1 21:36:22 $MOVE_CARD:  
{"moveIndex":14,"cardId":6,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 21:36:22 $MOVE_CARD_END:  
{"moveIndex":14,"cardId":6,"flipIfFlipped":false,"playerId":1} 

 Player 1 21:36:22 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":6} 

 Player 1 21:36:22 $FLIP_CARD:  
{"cardId":6} 

 Player 1 21:36:22 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":6} 

 Player 1 21:36:22 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":6}],"result":null,"preventMethod":false,"methodScopeId":335,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 21:36:22 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":30,"text":"Player 1 Has Drawn Loot For Start Turn"} 

 Player 1 21:36:22 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":30,"creatorCardId":335,"turnPlayerCardId":335,"stackEffectType":13,"lable":"Player 1 Has Drawn Loot For Start Turn"}} 

 Player 1 21:36:22 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 1 21:36:22 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 21:36:22 $SHOW_STACK_EFFECT:  
{"effectId":30} 

 Player 1 21:36:25 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":30} 

 Player 1 21:36:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":123,"_text":"Remove After Resolve Start Turn Loot Draw 30  "}} 

 Player 1 21:36:25 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":30,"creatorCardId":335,"turnPlayerCardId":335,"stackEffectType":13,"lable":"Player 1 Has Drawn Loot For Start Turn"}} 

 Player 1 21:36:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":124,"_text":"Response Remove After Resolve Start Turn Loot Draw 30"},"childOfId":123} 

 Player 1 21:36:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":125,"_text":"Wait For Response From Player 2 "},"childOfId":123} 

 Player 1 21:36:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:36:25 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:36:25 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[329]} 

 Player 2 21:36:25 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:36:25 $ACTION_MASSAGE_REMOVE:  
{"id":125} 

 Player 1 21:36:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":126,"_text":"Wait For Response From Player 1 "},"childOfId":123} 

 Player 1 21:36:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:36:26 $ACTION_MASSAGE_REMOVE:  
{"id":126} 

 Player 1 21:36:26 $ACTION_MASSAGE_REMOVE:  
{"id":124} 

 Player 1 21:36:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":127,"_text":"Stack Was Emptied "}} 

 Player 1 21:36:26 $CLEAR_SE_VIS:  

 Player 1 21:36:30 $NEXT_STACK_ID:  

 Player 1 21:36:30 $ADD_TO_STACK:  
{"stackEffect":{"entityId":31,"creatorCardId":335,"hasLockingStackEffect":false,"itemToPlayCardId":336,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1,"lable":"Player 1 is going to activate Incubus"}} 

 Player 1 21:36:30 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":31,"creatorCardId":335,"hasLockingStackEffect":false,"itemToPlayCardId":336,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1,"lable":"Player 1 is going to activate Incubus"}} 

 Player 1 21:36:30 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 21:36:30 $SHOW_STACK_EFFECT:  
{"effectId":31} 

 Player 1 21:36:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":128,"_text":"Add Activate Item 31 "}} 

 Player 1 21:36:33 $SHOW_ANNOUNCEMENT:  
{"text":"Player 1 Is Choosing Effect From Incubus"} 

 Player 1 21:36:37 $HIDE_ANNOUNCEMENT:  

 Player 1 21:36:37 $SHOW_EFFECT_CHOSEN:  
{"cardId":336,"pos":{"x":-667,"y":-250.659},"size":{"w":490,"h":80}} 

 Player 1 21:36:40 $USE_ITEM:  
{"cardId":336} 

 Player 1 21:36:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:36:41 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":31,"creatorCardId":335,"hasLockingStackEffect":false,"itemToPlayCardId":336,"itemPlayerId":1,"effectToDoData":{"type":1,"index":1},"hasDataBeenCollectedYet":true,"stackEffectType":1,"lable":"Player 1 is going to activate Incubus"}} 

 Player 1 21:36:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":129,"_text":"Response Adding Activate Item 31"},"childOfId":128} 

 Player 1 21:36:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":130,"_text":"Wait For Response From Player 1 "},"childOfId":128} 

 Player 1 21:36:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:36:41 $ACTION_MASSAGE_REMOVE:  
{"id":130} 

 Player 1 21:36:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":131,"_text":"Wait For Response From Player 2 "},"childOfId":128} 

 Player 1 21:36:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:36:41 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:36:41 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[329]} 

 Player 2 21:36:41 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:36:41 $ACTION_MASSAGE_REMOVE:  
{"id":131} 

 Player 1 21:36:41 $ACTION_MASSAGE_REMOVE:  
{"id":129} 

 Player 1 21:36:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":132,"_text":"Resolve Activate Item 31 "}} 

 Player 1 21:36:41 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":31,"creatorCardId":335,"hasLockingStackEffect":false,"itemToPlayCardId":336,"itemPlayerId":1,"effectToDoData":{"type":1,"index":1},"hasDataBeenCollectedYet":true,"stackEffectType":1,"lable":"Player 1 is going to activate Incubus"}]} 

 Player 1 21:36:41 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":336,"particleType":6} 

 Player 1 21:36:43 $DISABLE_PARTICLE_EFFECT:  
{"cardId":336,"particleType":6} 

 Player 1 21:36:43 $DRAW_CARD:  
{"deckType":1} 

 Player 1 21:36:43 $MOVE_CARD:  
{"moveIndex":15,"cardId":53,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 21:36:43 $MOVE_CARD_END:  
{"moveIndex":15,"cardId":53,"flipIfFlipped":false,"playerId":1} 

 Player 1 21:36:43 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":53} 

 Player 1 21:36:43 $FLIP_CARD:  
{"cardId":53} 

 Player 1 21:36:43 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":53} 

 Player 1 21:36:43 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":53}],"result":null,"preventMethod":false,"methodScopeId":335,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 1 21:36:43 $SHOW_ANNOUNCEMENT:  
{"text":"Player 1 is Choosing Target"} 

 Player 1 21:36:50 $HIDE_ANNOUNCEMENT:  

 Player 1 21:36:50 $MOVE_CARD:  
{"moveIndex":16,"cardId":16,"placeID":3,"flipIfFlipped":false,"playerId":1,"placeType":"Card"} 

 Player 2 21:36:50 $MOVE_CARD_END:  
{"moveIndex":16,"cardId":16,"flipIfFlipped":false,"playerId":1} 

 Player 1 21:36:51 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":16} 

 Player 1 21:36:51 $DECK_ADD_TO_TOP:  
{"deckType":1,"cardId":16} 

 Player 1 21:36:51 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":31,"text":"Player 1 has activated Incubus"} 

 Player 1 21:36:51 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ACTIVATE_ITEM","args":[{"type":0,"number":336}],"result":null,"preventMethod":false,"methodScopeId":335,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 1 21:36:51 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":31,"creatorCardId":335,"hasLockingStackEffect":false,"itemToPlayCardId":336,"itemPlayerId":1,"effectToDoData":{"type":1,"index":1},"hasDataBeenCollectedYet":true,"stackEffectType":1,"lable":"Player 1 has activated Incubus"}} 

 Player 1 21:36:51 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 1 21:36:51 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 21:36:51 $SHOW_STACK_EFFECT:  
{"effectId":31} 

 Player 1 21:36:54 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":31} 

 Player 1 21:36:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":133,"_text":"Remove After Resolve Activate Item 31  "}} 

 Player 1 21:36:54 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":31,"creatorCardId":335,"hasLockingStackEffect":false,"itemToPlayCardId":336,"itemPlayerId":1,"effectToDoData":{"type":1,"index":1},"hasDataBeenCollectedYet":true,"stackEffectType":1,"lable":"Player 1 has activated Incubus"}} 

 Player 1 21:36:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":134,"_text":"Response Remove After Resolve Activate Item 31"},"childOfId":133} 

 Player 1 21:36:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":135,"_text":"Wait For Response From Player 2 "},"childOfId":133} 

 Player 1 21:36:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:36:54 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:36:54 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[329]} 

 Player 2 21:36:54 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:36:54 $ACTION_MASSAGE_REMOVE:  
{"id":135} 

 Player 1 21:36:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":136,"_text":"Wait For Response From Player 1 "},"childOfId":133} 

 Player 1 21:36:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:36:54 $ACTION_MASSAGE_REMOVE:  
{"id":136} 

 Player 1 21:36:54 $ACTION_MASSAGE_REMOVE:  
{"id":134} 

 Player 1 21:36:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":137,"_text":"Stack Was Emptied "}} 

 Player 1 21:36:54 $CLEAR_SE_VIS:  

 Player 1 21:36:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:36:56 $CLEAR_SE_VIS:  

 Player 1 21:36:56 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 1 21:36:56 $CLEAR_SE_VIS:  

 Player 1 21:36:56 $END_TURN:  

 Player 1 21:36:56 $SET_TURN:  
{"playerId":2} 

 Player 1 21:36:56 $START_TURN:  
{"playerId":2} 

 Player 2 21:36:56 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 21:36:56 $RECHARGE_ITEM:  
{"cardId":332} 

 Player 2 21:36:56 $PLAYER_RECHARGE_ITEM:  
{"playerId":2,"cardId":332} 

 Player 2 21:36:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:36:56 $NEXT_STACK_ID:  

 Player 2 21:36:56 $ADD_TO_STACK:  
{"stackEffect":{"entityId":32,"creatorCardId":329,"turnPlayerCardId":329,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}} 

 Player 2 21:36:56 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":32,"creatorCardId":329,"turnPlayerCardId":329,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}} 

 Player 2 21:36:56 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 21:36:56 $SHOW_STACK_EFFECT:  
{"effectId":32} 

 Player 1 21:36:56 $STACK_EMPTIED:  
{"playerId":2} 

 Player 2 21:36:56 $CLEAR_SE_VIS:  

 Player 2 21:36:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":138,"_text":"Add Start Turn Loot Draw 32 "}} 

 Player 2 21:36:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:36:59 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":32,"creatorCardId":329,"turnPlayerCardId":329,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}} 

 Player 2 21:36:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":139,"_text":"Response Adding Start Turn Loot Draw 32"},"childOfId":138} 

 Player 2 21:36:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":140,"_text":"Wait For Response From Player 2 "},"childOfId":138} 

 Player 2 21:36:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:36:59 $ACTION_MASSAGE_REMOVE:  
{"id":140} 

 Player 2 21:36:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":141,"_text":"Wait For Response From Player 1 "},"childOfId":138} 

 Player 2 21:36:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:36:59 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:36:59 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335]} 

 Player 1 21:36:59 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:36:59 $ACTION_MASSAGE_REMOVE:  
{"id":141} 

 Player 2 21:36:59 $ACTION_MASSAGE_REMOVE:  
{"id":139} 

 Player 2 21:36:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":142,"_text":"Resolve Start Turn Loot Draw 32 "}} 

 Player 2 21:36:59 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":32,"creatorCardId":329,"turnPlayerCardId":329,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}]} 

 Player 2 21:36:59 $DRAW_CARD:  
{"deckType":1} 

 Player 2 21:37:00 $MOVE_CARD:  
{"moveIndex":17,"cardId":16,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 21:37:00 $MOVE_CARD_END:  
{"moveIndex":17,"cardId":16,"flipIfFlipped":false,"playerId":2} 

 Player 2 21:37:00 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":16} 

 Player 2 21:37:00 $FLIP_CARD:  
{"cardId":16} 

 Player 2 21:37:00 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":16} 

 Player 2 21:37:00 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":16}],"result":null,"preventMethod":false,"methodScopeId":329,"scopeIsPlayer":true,"index":27,"originStackId":-1},"isAfterActivation":true,"index":27} 

 Player 2 21:37:00 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":32,"text":"Player 2 Has Drawn Loot For Start Turn"} 

 Player 2 21:37:00 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":32,"creatorCardId":329,"turnPlayerCardId":329,"stackEffectType":13,"lable":"Player 2 Has Drawn Loot For Start Turn"}} 

 Player 2 21:37:00 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 21:37:00 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 21:37:00 $SHOW_STACK_EFFECT:  
{"effectId":32} 

 Player 2 21:37:03 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":32} 

 Player 2 21:37:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":143,"_text":"Remove After Resolve Start Turn Loot Draw 32  "}} 

 Player 2 21:37:03 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":32,"creatorCardId":329,"turnPlayerCardId":329,"stackEffectType":13,"lable":"Player 2 Has Drawn Loot For Start Turn"}} 

 Player 2 21:37:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":144,"_text":"Response Remove After Resolve Start Turn Loot Draw 32"},"childOfId":143} 

 Player 2 21:37:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":145,"_text":"Wait For Response From Player 1 "},"childOfId":143} 

 Player 2 21:37:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:37:03 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:37:03 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335]} 

 Player 1 21:37:03 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:37:03 $ACTION_MASSAGE_REMOVE:  
{"id":145} 

 Player 2 21:37:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":146,"_text":"Wait For Response From Player 2 "},"childOfId":143} 

 Player 2 21:37:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:37:03 $ACTION_MASSAGE_REMOVE:  
{"id":146} 

 Player 2 21:37:03 $ACTION_MASSAGE_REMOVE:  
{"id":144} 

 Player 2 21:37:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":147,"_text":"Stack Was Emptied "}} 

 Player 2 21:37:03 $CLEAR_SE_VIS:  

 Player 2 21:37:11 $NEXT_STACK_ID:  

 Player 2 21:37:11 $ADD_TO_STACK:  
{"stackEffect":{"entityId":33,"creatorCardId":329,"hasLockingStackEffect":false,"itemToPlayCardId":332,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":false,"stackEffectType":1,"lable":"Player 2 is going to activate Sleight Of Hand"}} 

 Player 2 21:37:11 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":33,"creatorCardId":329,"hasLockingStackEffect":false,"itemToPlayCardId":332,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":false,"stackEffectType":1,"lable":"Player 2 is going to activate Sleight Of Hand"}} 

 Player 2 21:37:11 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 21:37:11 $SHOW_STACK_EFFECT:  
{"effectId":33} 

 Player 2 21:37:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":148,"_text":"Add Activate Item 33 "}} 

 Player 2 21:37:14 $SHOW_ANNOUNCEMENT:  
{"text":"Player 2 is Choosing Target"} 

 Player 2 21:37:19 $HIDE_ANNOUNCEMENT:  

 Player 2 21:37:19 $SHOW_DECISION:  
{"startCardId":332,"endCardId":140} 

 Player 2 21:37:22 $USE_ITEM:  
{"cardId":332} 

 Player 2 21:37:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:37:22 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":33,"creatorCardId":329,"hasLockingStackEffect":false,"itemToPlayCardId":332,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1,"lable":"Player 2 is going to activate Sleight Of Hand"}} 

 Player 2 21:37:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":149,"_text":"Response Adding Activate Item 33"},"childOfId":148} 

 Player 2 21:37:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":150,"_text":"Wait For Response From Player 2 "},"childOfId":148} 

 Player 2 21:37:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:37:22 $ACTION_MASSAGE_REMOVE:  
{"id":150} 

 Player 2 21:37:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":151,"_text":"Wait For Response From Player 1 "},"childOfId":148} 

 Player 2 21:37:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:37:22 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:37:22 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335]} 

 Player 1 21:37:22 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:37:22 $ACTION_MASSAGE_REMOVE:  
{"id":151} 

 Player 2 21:37:22 $ACTION_MASSAGE_REMOVE:  
{"id":149} 

 Player 2 21:37:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":152,"_text":"Resolve Activate Item 33 "}} 

 Player 2 21:37:22 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":33,"creatorCardId":329,"hasLockingStackEffect":false,"itemToPlayCardId":332,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1,"lable":"Player 2 is going to activate Sleight Of Hand"}]} 

 Player 2 21:37:22 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":332,"particleType":6} 

 Player 2 21:37:24 $DISABLE_PARTICLE_EFFECT:  
{"cardId":332,"particleType":6} 

 Player 2 21:37:50 $DECK_ADD_TO_TOP:  
{"deckType":5,"cardId":209} 

 Player 2 21:37:50 $DECK_ADD_TO_TOP:  
{"deckType":5,"cardId":204} 

 Player 2 21:37:50 $DECK_ADD_TO_TOP:  
{"deckType":5,"cardId":179} 

 Player 2 21:37:50 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":33,"text":"Player 2 has activated Sleight Of Hand"} 

 Player 2 21:37:50 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ACTIVATE_ITEM","args":[{"type":0,"number":332}],"result":null,"preventMethod":false,"methodScopeId":329,"scopeIsPlayer":true,"index":28,"originStackId":-1},"isAfterActivation":true,"index":28} 

 Player 2 21:37:50 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":33,"creatorCardId":329,"hasLockingStackEffect":false,"itemToPlayCardId":332,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1,"lable":"Player 2 has activated Sleight Of Hand"}} 

 Player 2 21:37:50 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 21:37:50 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 21:37:50 $SHOW_STACK_EFFECT:  
{"effectId":33} 

 Player 2 21:37:53 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":33} 

 Player 2 21:37:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":153,"_text":"Remove After Resolve Activate Item 33  "}} 

 Player 2 21:37:53 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":33,"creatorCardId":329,"hasLockingStackEffect":false,"itemToPlayCardId":332,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1,"lable":"Player 2 has activated Sleight Of Hand"}} 

 Player 2 21:37:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":154,"_text":"Response Remove After Resolve Activate Item 33"},"childOfId":153} 

 Player 2 21:37:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":155,"_text":"Wait For Response From Player 1 "},"childOfId":153} 

 Player 2 21:37:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:37:53 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:37:53 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335]} 

 Player 1 21:37:53 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:37:53 $ACTION_MASSAGE_REMOVE:  
{"id":155} 

 Player 2 21:37:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":156,"_text":"Wait For Response From Player 2 "},"childOfId":153} 

 Player 2 21:37:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:37:53 $ACTION_MASSAGE_REMOVE:  
{"id":156} 

 Player 2 21:37:53 $ACTION_MASSAGE_REMOVE:  
{"id":154} 

 Player 2 21:37:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":157,"_text":"Stack Was Emptied "}} 

 Player 2 21:37:53 $CLEAR_SE_VIS:  

 Player 2 21:39:59 $NEXT_STACK_ID:  

 Player 2 21:39:59 $ADD_TO_STACK:  
{"stackEffect":{"entityId":34,"creatorCardId":329,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":74,"lootPlayerId":2,"lable":"Player 2 Is Going To Play A Dime(3) ","hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 21:39:59 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":34,"creatorCardId":329,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":74,"lootPlayerId":2,"lable":"Player 2 Is Going To Play A Dime(3) ","hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 21:39:59 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 21:39:59 $SHOW_STACK_EFFECT:  
{"effectId":34} 

 Player 2 21:40:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":158,"_text":"Add Play Loot Card 34 "}} 

 Player 2 21:40:02 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":74} 

 Player 2 21:40:02 $MOVE_CARD:  
{"moveIndex":18,"cardId":74,"placeID":343,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 21:40:03 $MOVE_CARD_END:  
{"moveIndex":18,"cardId":74,"flipIfFlipped":true,"playerId":2} 

 Player 2 21:40:03 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":74} 

 Player 2 21:40:03 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":34,"text":"Player 2 Is Going To Play A Dime(3): addMoney"} 

 Player 2 21:40:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:40:03 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":34,"creatorCardId":329,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":74,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":74,"effctType":1},"lable":"Player 2 Is Going To Play A Dime(3): addMoney","hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 21:40:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":159,"_text":"Response Adding Play Loot Card 34"},"childOfId":158} 

 Player 2 21:40:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":160,"_text":"Wait For Response From Player 2 "},"childOfId":158} 

 Player 2 21:40:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:40:03 $ACTION_MASSAGE_REMOVE:  
{"id":160} 

 Player 2 21:40:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":161,"_text":"Wait For Response From Player 1 "},"childOfId":158} 

 Player 2 21:40:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:40:03 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:40:03 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335]} 

 Player 1 21:40:03 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:40:03 $ACTION_MASSAGE_REMOVE:  
{"id":161} 

 Player 2 21:40:03 $ACTION_MASSAGE_REMOVE:  
{"id":159} 

 Player 2 21:40:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":162,"_text":"Resolve Play Loot Card 34 "}} 

 Player 2 21:40:03 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":34,"creatorCardId":329,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":74,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":74,"effctType":1},"lable":"Player 2 Is Going To Play A Dime(3): addMoney","hasDataBeenCollectedYet":true,"stackEffectType":8}]} 

 Player 2 21:40:03 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":34,"text":"Player 2 Plays A Dime(3): addMoney"} 

 Player 2 21:40:03 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":74,"particleType":6} 

 Player 2 21:40:05 $DISABLE_PARTICLE_EFFECT:  
{"cardId":74,"particleType":6} 

 Player 2 21:40:05 $SET_MONEY:  
{"playerId":2,"numOfCoins":17} 

 Player 2 21:40:05 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":10}],"result":null,"preventMethod":false,"methodScopeId":329,"scopeIsPlayer":true,"index":29,"originStackId":-1},"isAfterActivation":true,"index":29} 

 Player 2 21:40:05 $REMOVE_FROM_PILE:  
{"cardId":74} 

 Player 2 21:40:05 $MOVE_CARD:  
{"moveIndex":19,"cardId":74,"placeID":344,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 21:40:06 $MOVE_CARD_END:  
{"moveIndex":19,"cardId":74,"flipIfFlipped":true,"playerId":2} 

 Player 2 21:40:06 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":74} 

 Player 2 21:40:06 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":34,"creatorCardId":329,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":74,"lootPlayerId":2,"lable":"Player 2 Plays A Dime(3): addMoney","hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 21:40:06 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 21:40:06 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 21:40:06 $SHOW_STACK_EFFECT:  
{"effectId":34} 

 Player 2 21:40:09 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":34} 

 Player 2 21:40:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":163,"_text":"Remove After Resolve Play Loot Card 34  "}} 

 Player 2 21:40:09 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":34,"creatorCardId":329,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":74,"lootPlayerId":2,"lable":"Player 2 Plays A Dime(3): addMoney","hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 21:40:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":164,"_text":"Response Remove After Resolve Play Loot Card 34"},"childOfId":163} 

 Player 2 21:40:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":165,"_text":"Wait For Response From Player 1 "},"childOfId":163} 

 Player 2 21:40:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:40:09 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:40:09 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335]} 

 Player 1 21:40:09 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:40:09 $ACTION_MASSAGE_REMOVE:  
{"id":165} 

 Player 2 21:40:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":166,"_text":"Wait For Response From Player 2 "},"childOfId":163} 

 Player 2 21:40:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:40:09 $ACTION_MASSAGE_REMOVE:  
{"id":166} 

 Player 2 21:40:09 $ACTION_MASSAGE_REMOVE:  
{"id":164} 

 Player 2 21:40:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":167,"_text":"Stack Was Emptied "}} 

 Player 2 21:40:09 $CLEAR_SE_VIS:  

 Player 2 21:40:13 $NEXT_STACK_ID:  

 Player 2 21:40:13 $ADD_TO_STACK:  
{"stackEffect":{"entityId":35,"creatorCardId":329,"hasLockingStackEffect":false,"itemToPlayCardId":329,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":false,"stackEffectType":1,"lable":"Player 2 is going to activate Cain"}} 

 Player 2 21:40:13 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":35,"creatorCardId":329,"hasLockingStackEffect":false,"itemToPlayCardId":329,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":false,"stackEffectType":1,"lable":"Player 2 is going to activate Cain"}} 

 Player 2 21:40:13 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 21:40:13 $SHOW_STACK_EFFECT:  
{"effectId":35} 

 Player 2 21:40:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":168,"_text":"Add Activate Item 35 "}} 

 Player 2 21:40:16 $SHOW_ANNOUNCEMENT:  
{"text":"Player 2 Is Choosing Loot To Play"} 

 Player 2 21:40:18 $HIDE_ANNOUNCEMENT:  

 Player 2 21:40:18 $MOVE_CARD:  
{"moveIndex":20,"cardId":138,"placeID":343,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 21:40:19 $MOVE_CARD_END:  
{"moveIndex":20,"cardId":138,"flipIfFlipped":true,"playerId":2} 

 Player 2 21:40:19 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":138} 

 Player 2 21:40:19 $SHOW_DECISION:  
{"startCardId":329,"endCardId":138,"flipEndCard":true} 

 Player 2 21:40:22 $USE_ITEM:  
{"cardId":329} 

 Player 2 21:40:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:40:22 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":35,"creatorCardId":329,"hasLockingStackEffect":false,"itemToPlayCardId":329,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1,"lable":"Player 2 is going to activate Cain"}} 

 Player 2 21:40:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":169,"_text":"Response Adding Activate Item 35"},"childOfId":168} 

 Player 2 21:40:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":170,"_text":"Wait For Response From Player 2 "},"childOfId":168} 

 Player 2 21:40:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:40:22 $ACTION_MASSAGE_REMOVE:  
{"id":170} 

 Player 2 21:40:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":171,"_text":"Wait For Response From Player 1 "},"childOfId":168} 

 Player 2 21:40:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:40:22 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:40:22 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335]} 

 Player 1 21:40:22 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:40:22 $ACTION_MASSAGE_REMOVE:  
{"id":171} 

 Player 2 21:40:22 $ACTION_MASSAGE_REMOVE:  
{"id":169} 

 Player 2 21:40:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":172,"_text":"Resolve Activate Item 35 "}} 

 Player 2 21:40:22 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":35,"creatorCardId":329,"hasLockingStackEffect":false,"itemToPlayCardId":329,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1,"lable":"Player 2 is going to activate Cain"}]} 

 Player 2 21:40:22 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":329,"particleType":6} 

 Player 2 21:40:24 $DISABLE_PARTICLE_EFFECT:  
{"cardId":329,"particleType":6} 

 Player 2 21:40:24 $NEXT_STACK_ID:  

 Player 2 21:40:24 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":138} 

 Player 2 21:40:24 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":36,"text":"Player 2 Is Going To Play 3 Cents: DoublePlayerMoney"} 

 Player 2 21:40:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:40:24 $CLEAR_SE_VIS:  

 Player 2 21:40:24 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":36,"creatorCardId":329,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":138,"lootPlayerId":2,"effectToDo":{"effectName":"DoublePlayerMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":138,"effctType":1},"lable":"Player 2 Is Going To Play 3 Cents: DoublePlayerMoney","hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 21:40:24 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":35,"creatorCardId":329,"hasLockingStackEffect":false,"itemToPlayCardId":329,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1,"lable":"Player 2 is going to activate Cain"}} 

 Player 2 21:40:24 $REPLACE_STACK:  
{"currentStack":[{"entityId":36,"creatorCardId":329,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":138,"lootPlayerId":2,"effectToDo":{"effectName":"DoublePlayerMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":138,"effctType":1},"lable":"Player 2 Is Going To Play 3 Cents: DoublePlayerMoney","hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":35,"creatorCardId":329,"hasLockingStackEffect":false,"itemToPlayCardId":329,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1,"lable":"Player 2 is going to activate Cain"}]} 

 Player 2 21:40:25 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 21:40:25 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":35,"text":"Player 2 has activated Cain"} 

 Player 2 21:40:25 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ACTIVATE_ITEM","args":[{"type":0,"number":329}],"result":null,"preventMethod":false,"methodScopeId":329,"scopeIsPlayer":true,"index":30,"originStackId":-1},"isAfterActivation":true,"index":30} 

 Player 2 21:40:25 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":35,"creatorCardId":329,"hasLockingStackEffect":false,"itemToPlayCardId":329,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1,"lable":"Player 2 has activated Cain"}} 

 Player 2 21:40:25 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 21:40:25 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 21:40:25 $SHOW_STACK_EFFECT:  
{"effectId":35} 

 Player 2 21:40:27 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":35} 

 Player 2 21:40:27 $SHOW_STACK_EFFECT:  
{"effectId":36} 

 Player 2 21:40:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":173,"_text":"Remove After Resolve Activate Item 35  "}} 

 Player 2 21:40:30 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":35,"creatorCardId":329,"hasLockingStackEffect":false,"itemToPlayCardId":329,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1,"lable":"Player 2 has activated Cain"}} 

 Player 2 21:40:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":174,"_text":"Response Remove After Resolve Activate Item 35"},"childOfId":173} 

 Player 2 21:40:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":175,"_text":"Wait For Response From Player 2 "},"childOfId":173} 

 Player 2 21:40:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:40:30 $ACTION_MASSAGE_REMOVE:  
{"id":175} 

 Player 2 21:40:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":176,"_text":"Wait For Response From Player 1 "},"childOfId":173} 

 Player 2 21:40:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:40:30 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:40:30 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335]} 

 Player 1 21:40:30 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:40:30 $ACTION_MASSAGE_REMOVE:  
{"id":176} 

 Player 2 21:40:31 $ACTION_MASSAGE_REMOVE:  
{"id":174} 

 Player 2 21:40:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":177,"_text":"Resolve Play Loot Card 36 "}} 

 Player 2 21:40:31 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":36,"creatorCardId":329,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":138,"lootPlayerId":2,"effectToDo":{"effectName":"DoublePlayerMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":138,"effctType":1},"lable":"Player 2 Is Going To Play 3 Cents: DoublePlayerMoney","hasDataBeenCollectedYet":true,"stackEffectType":8}]} 

 Player 2 21:40:31 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":36,"text":"Player 2 Plays 3 Cents: DoublePlayerMoney"} 

 Player 2 21:40:31 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":138,"particleType":6} 

 Player 2 21:40:33 $DISABLE_PARTICLE_EFFECT:  
{"cardId":138,"particleType":6} 

 Player 2 21:40:33 $SET_MONEY:  
{"playerId":2,"numOfCoins":34} 

 Player 2 21:40:33 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":17}],"result":null,"preventMethod":false,"methodScopeId":329,"scopeIsPlayer":true,"index":31,"originStackId":-1},"isAfterActivation":true,"index":31} 

 Player 2 21:40:33 $NEXT_STACK_ID:  

 Player 2 21:40:33 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":37,"creatorCardId":329,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":323,"effectToDo":{"effectName":"GainBonusSoul","cardEffectNum":0,"cardPlayerId":2,"cardId":323,"effctType":0},"isAfterActivation":true,"index":31,"hasDataBeenCollectedYet":false,"stackEffectType":14,"lable":"Activate Soul Of Greed Effect GainBonusSoul<GainBonusSoul>"}} 

 Player 2 21:40:33 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":37,"creatorCardId":329,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":323,"effectToDo":{"effectName":"GainBonusSoul","cardEffectNum":0,"cardPlayerId":2,"cardId":323,"effctType":0},"isAfterActivation":true,"index":31,"hasDataBeenCollectedYet":false,"stackEffectType":14,"lable":"Activate Soul Of Greed Effect GainBonusSoul<GainBonusSoul>"}} 

 Player 2 21:40:33 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 21:40:33 $SHOW_STACK_EFFECT:  
{"effectId":37} 

 Player 2 21:40:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":178,"_text":"Add Activate Passive Effect 37 "}} 

 Player 2 21:40:36 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":37,"text":"Activate Soul Of Greed effect GainBonusSoul<GainBonusSoul>"} 

 Player 2 21:40:36 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[329],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":323,"effectCardPlayer":323},"entityId":37,"creatorCardId":329,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":323,"effectToDo":{"effectName":"GainBonusSoul","cardEffectNum":0,"cardPlayerId":2,"cardId":323,"effctType":0},"isAfterActivation":true,"index":31,"hasDataBeenCollectedYet":true,"stackEffectType":14,"lable":"Activate Soul Of Greed effect GainBonusSoul<GainBonusSoul>"}} 

 Player 2 21:40:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":179,"_text":"Response Adding Activate Passive Effect 37"},"childOfId":178} 

 Player 2 21:40:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":180,"_text":"Wait For Response From Player 1 "},"childOfId":178} 

 Player 2 21:40:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:40:36 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:40:36 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335]} 

 Player 1 21:40:36 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:40:36 $ACTION_MASSAGE_REMOVE:  
{"id":180} 

 Player 2 21:40:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":181,"_text":"Wait For Response From Player 2 "},"childOfId":178} 

 Player 2 21:40:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:40:36 $ACTION_MASSAGE_REMOVE:  
{"id":181} 

 Player 2 21:40:36 $ACTION_MASSAGE_REMOVE:  
{"id":179} 

 Player 2 21:40:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":182,"_text":"Resolve Activate Passive Effect 37 "}} 

 Player 2 21:40:36 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":36,"creatorCardId":329,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":138,"lootPlayerId":2,"effectToDo":{"effectName":"DoublePlayerMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":138,"effctType":1},"lable":"Player 2 Plays 3 Cents: DoublePlayerMoney","hasDataBeenCollectedYet":true,"stackEffectType":8},{"effectCollectedData":{"effectTargets":[329],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":323,"effectCardPlayer":323},"entityId":37,"creatorCardId":329,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":323,"effectToDo":{"effectName":"GainBonusSoul","cardEffectNum":0,"cardPlayerId":2,"cardId":323,"effctType":0},"isAfterActivation":true,"index":31,"hasDataBeenCollectedYet":true,"stackEffectType":14,"lable":"Activate Soul Of Greed effect GainBonusSoul<GainBonusSoul>"}]} 

 Player 2 21:40:36 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":323,"particleType":6} 

 Player 2 21:40:38 $DISABLE_PARTICLE_EFFECT:  
{"cardId":323,"particleType":6} 

 Player 2 21:40:38 $MOVE_CARD:  
{"moveIndex":21,"cardId":323,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"soulsLayout"} 

 Player 1 21:40:38 $MOVE_CARD_END:  
{"moveIndex":21,"cardId":323,"flipIfFlipped":true,"playerId":2} 

 Player 2 21:40:38 $GET_SOUL:  
{"playerId":2,"cardId":323} 

 Player 2 21:40:38 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":17}],"result":null,"preventMethod":false,"methodScopeId":329,"scopeIsPlayer":false,"index":31,"originStackId":-1},"isAfterActivation":true,"index":31} 

 Player 2 21:40:38 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":37,"text":"Activated Soul Of Greed Effect"} 

 Player 2 21:40:38 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[329],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":323,"effectCardPlayer":323},"entityId":37,"creatorCardId":329,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":323,"effectToDo":{"effectName":"GainBonusSoul","cardEffectNum":0,"cardPlayerId":2,"cardId":323,"effctType":0},"isAfterActivation":true,"index":31,"hasDataBeenCollectedYet":true,"stackEffectType":14,"lable":"Activated Soul Of Greed Effect"}} 

 Player 2 21:40:38 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":36,"creatorCardId":329,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":138,"lootPlayerId":2,"effectToDo":{"effectName":"DoublePlayerMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":138,"effctType":1},"lable":"Player 2 Plays 3 Cents: DoublePlayerMoney","hasDataBeenCollectedYet":true,"stackEffectType":8}]} 

 Player 2 21:40:39 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 21:40:39 $SHOW_STACK_EFFECT:  
{"effectId":37} 

 Player 2 21:40:41 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":37} 

 Player 2 21:40:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":183,"_text":"Remove After Resolve Activate Passive Effect 37  "}} 

 Player 2 21:40:41 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[329],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":323,"effectCardPlayer":323},"entityId":37,"creatorCardId":329,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":323,"effectToDo":{"effectName":"GainBonusSoul","cardEffectNum":0,"cardPlayerId":2,"cardId":323,"effctType":0},"isAfterActivation":true,"index":31,"hasDataBeenCollectedYet":true,"stackEffectType":14,"lable":"Activated Soul Of Greed Effect"}} 

 Player 2 21:40:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":184,"_text":"Response Remove After Resolve Activate Passive Effect 37"},"childOfId":183} 

 Player 2 21:40:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":185,"_text":"Wait For Response From Player 2 "},"childOfId":183} 

 Player 2 21:40:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:40:42 $ACTION_MASSAGE_REMOVE:  
{"id":185} 

 Player 2 21:40:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":186,"_text":"Wait For Response From Player 1 "},"childOfId":183} 

 Player 2 21:40:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:40:42 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:40:42 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335]} 

 Player 1 21:40:42 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:40:42 $ACTION_MASSAGE_REMOVE:  
{"id":186} 

 Player 2 21:40:42 $ACTION_MASSAGE_REMOVE:  
{"id":184} 

 Player 2 21:40:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":187,"_text":"Resolve Play Loot Card 36 "}} 

 Player 2 21:40:42 $REMOVE_FROM_PILE:  
{"cardId":138} 

 Player 2 21:40:42 $MOVE_CARD:  
{"moveIndex":22,"cardId":138,"placeID":344,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 21:40:42 $MOVE_CARD_END:  
{"moveIndex":22,"cardId":138,"flipIfFlipped":true,"playerId":2} 

 Player 2 21:40:42 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":138} 

 Player 2 21:40:42 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":36,"creatorCardId":329,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":138,"lootPlayerId":2,"lable":"Player 2 Plays 3 Cents: DoublePlayerMoney","hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 21:40:42 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 21:40:42 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 21:40:42 $SHOW_STACK_EFFECT:  
{"effectId":36} 

 Player 2 21:40:45 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":36} 

 Player 2 21:40:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":188,"_text":"Remove After Resolve Play Loot Card 36  "}} 

 Player 2 21:40:45 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":36,"creatorCardId":329,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":138,"lootPlayerId":2,"lable":"Player 2 Plays 3 Cents: DoublePlayerMoney","hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 21:40:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":189,"_text":"Response Remove After Resolve Play Loot Card 36"},"childOfId":188} 

 Player 2 21:40:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":190,"_text":"Wait For Response From Player 1 "},"childOfId":188} 

 Player 2 21:40:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:40:45 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:40:45 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335]} 

 Player 1 21:40:46 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:40:46 $ACTION_MASSAGE_REMOVE:  
{"id":190} 

 Player 2 21:40:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":191,"_text":"Wait For Response From Player 2 "},"childOfId":188} 

 Player 2 21:40:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:40:46 $ACTION_MASSAGE_REMOVE:  
{"id":191} 

 Player 2 21:40:46 $ACTION_MASSAGE_REMOVE:  
{"id":189} 

 Player 2 21:40:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":192,"_text":"Stack Was Emptied "}} 

 Player 2 21:40:46 $CLEAR_SE_VIS:  

 Player 2 21:41:32 $NEXT_STACK_ID:  

 Player 2 21:41:32 $ADD_TO_STACK:  
{"stackEffect":{"entityId":38,"creatorCardId":329,"itemToPurchaseCardId":140,"playerWhoBuysCardId":329,"cost":10,"stackEffectType":9,"lable":"Player 2 Is About To Buy Treasure Deck For 10"}} 

 Player 2 21:41:32 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":38,"creatorCardId":329,"itemToPurchaseCardId":140,"playerWhoBuysCardId":329,"cost":10,"stackEffectType":9,"lable":"Player 2 Is About To Buy Treasure Deck For 10"}} 

 Player 2 21:41:32 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 21:41:32 $SHOW_STACK_EFFECT:  
{"effectId":38} 

 Player 2 21:41:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":193,"_text":"Add Player Purchase Item 38 "}} 

 Player 2 21:41:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:41:35 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":38,"creatorCardId":329,"itemToPurchaseCardId":140,"playerWhoBuysCardId":329,"cost":10,"stackEffectType":9,"lable":"Player 2 Is About To Buy Treasure Deck For 10"}} 

 Player 2 21:41:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":194,"_text":"Response Adding Player Purchase Item 38"},"childOfId":193} 

 Player 2 21:41:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":195,"_text":"Wait For Response From Player 2 "},"childOfId":193} 

 Player 2 21:41:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:41:36 $ACTION_MASSAGE_REMOVE:  
{"id":195} 

 Player 2 21:41:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":196,"_text":"Wait For Response From Player 1 "},"childOfId":193} 

 Player 2 21:41:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:41:36 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:41:36 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335]} 

 Player 1 21:41:36 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:41:36 $ACTION_MASSAGE_REMOVE:  
{"id":196} 

 Player 2 21:41:36 $ACTION_MASSAGE_REMOVE:  
{"id":194} 

 Player 2 21:41:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":197,"_text":"Resolve Player Purchase Item 38 "}} 

 Player 2 21:41:36 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":38,"creatorCardId":329,"itemToPurchaseCardId":140,"playerWhoBuysCardId":329,"cost":10,"stackEffectType":9,"lable":"Player 2 Is About To Buy Treasure Deck For 10"}]} 

 Player 2 21:41:36 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":38,"text":"Player 2 Has Bought Treasure Deck For 10 cents"} 

 Player 2 21:41:36 $SET_MONEY:  
{"playerId":2,"numOfCoins":24} 

 Player 2 21:41:36 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-10}],"result":null,"preventMethod":false,"methodScopeId":329,"scopeIsPlayer":true,"index":32,"originStackId":-1},"isAfterActivation":true,"index":32} 

 Player 2 21:41:36 $DRAW_CARD:  
{"deckType":5} 

 Player 2 21:41:36 $REGISTER_PASSIVE_ITEM:  
{"cardId":179} 

 Player 2 21:41:36 $MOVE_CARD:  
{"moveIndex":23,"cardId":179,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 

 Player 1 21:41:36 $MOVE_CARD_END:  
{"moveIndex":23,"cardId":179,"flipIfFlipped":true,"playerId":2} 

 Player 2 21:41:36 $ADD_AN_ITEM:  
{"playerId":2,"cardId":179,"isReward":false} 

 Player 2 21:41:37 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":179}],"result":true,"preventMethod":false,"methodScopeId":329,"scopeIsPlayer":true,"index":33,"originStackId":-1},"isAfterActivation":true,"index":33} 

 Player 2 21:41:37 $NEXT_STACK_ID:  

 Player 2 21:41:37 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":39,"creatorCardId":329,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":179,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":2,"cardId":179,"effctType":0},"isAfterActivation":true,"index":33,"hasDataBeenCollectedYet":false,"stackEffectType":14,"lable":"Activate Lard Effect GainStats<GainStats>"}} 

 Player 2 21:41:37 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":39,"creatorCardId":329,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":179,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":2,"cardId":179,"effctType":0},"isAfterActivation":true,"index":33,"hasDataBeenCollectedYet":false,"stackEffectType":14,"lable":"Activate Lard Effect GainStats<GainStats>"}} 

 Player 2 21:41:37 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 21:41:37 $SHOW_STACK_EFFECT:  
{"effectId":39} 

 Player 2 21:41:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":198,"_text":"Add Activate Passive Effect 39 "}} 

 Player 2 21:41:40 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":39,"text":"Activate Lard effect GainStats<GainStats>"} 

 Player 2 21:41:40 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[329],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":329,"effectCardPlayer":329},"entityId":39,"creatorCardId":329,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":179,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":2,"cardId":179,"effctType":0},"isAfterActivation":true,"index":33,"hasDataBeenCollectedYet":true,"stackEffectType":14,"lable":"Activate Lard effect GainStats<GainStats>"}} 

 Player 2 21:41:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":199,"_text":"Response Adding Activate Passive Effect 39"},"childOfId":198} 

 Player 2 21:41:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":200,"_text":"Wait For Response From Player 1 "},"childOfId":198} 

 Player 2 21:41:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:41:40 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:41:40 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335]} 

 Player 1 21:41:40 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:41:40 $ACTION_MASSAGE_REMOVE:  
{"id":200} 

 Player 2 21:41:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":201,"_text":"Wait For Response From Player 2 "},"childOfId":198} 

 Player 2 21:41:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:41:40 $ACTION_MASSAGE_REMOVE:  
{"id":201} 

 Player 2 21:41:40 $ACTION_MASSAGE_REMOVE:  
{"id":199} 

 Player 2 21:41:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":202,"_text":"Resolve Activate Passive Effect 39 "}} 

 Player 2 21:41:40 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":38,"creatorCardId":329,"itemToPurchaseCardId":140,"playerWhoBuysCardId":329,"cost":10,"stackEffectType":9,"lable":"Player 2 Has Bought Treasure Deck For 10 cents"},{"effectCollectedData":{"effectTargets":[329],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":329,"effectCardPlayer":329},"entityId":39,"creatorCardId":329,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":179,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":2,"cardId":179,"effctType":0},"isAfterActivation":true,"index":33,"hasDataBeenCollectedYet":true,"stackEffectType":14,"lable":"Activate Lard effect GainStats<GainStats>"}]} 

 Player 2 21:41:40 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":179,"particleType":6} 

 Player 2 21:41:42 $DISABLE_PARTICLE_EFFECT:  
{"cardId":179,"particleType":6} 

 Player 2 21:41:42 $PLAYER_GAIN_HP:  
{"playerId":2,"hpToGain":2,"isTemp":false} 

 Player 2 21:41:42 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":179}],"result":true,"preventMethod":false,"methodScopeId":329,"scopeIsPlayer":true,"index":33,"originStackId":-1},"isAfterActivation":true,"index":33} 

 Player 2 21:41:42 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":39,"text":"Activated Lard Effect"} 

 Player 2 21:41:42 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[329],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":329,"effectCardPlayer":329},"entityId":39,"creatorCardId":329,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":179,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":2,"cardId":179,"effctType":0},"isAfterActivation":true,"index":33,"hasDataBeenCollectedYet":true,"stackEffectType":14,"lable":"Activated Lard Effect"}} 

 Player 2 21:41:42 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":38,"creatorCardId":329,"itemToPurchaseCardId":140,"playerWhoBuysCardId":329,"cost":10,"stackEffectType":9,"lable":"Player 2 Has Bought Treasure Deck For 10 cents"}]} 

 Player 2 21:41:42 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 21:41:42 $SHOW_STACK_EFFECT:  
{"effectId":39} 

 Player 2 21:41:45 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":39} 

 Player 2 21:41:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":203,"_text":"Remove After Resolve Activate Passive Effect 39  "}} 

 Player 2 21:41:45 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[329],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":329,"effectCardPlayer":329},"entityId":39,"creatorCardId":329,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":179,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":2,"cardId":179,"effctType":0},"isAfterActivation":true,"index":33,"hasDataBeenCollectedYet":true,"stackEffectType":14,"lable":"Activated Lard Effect"}} 

 Player 2 21:41:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":204,"_text":"Response Remove After Resolve Activate Passive Effect 39"},"childOfId":203} 

 Player 2 21:41:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":205,"_text":"Wait For Response From Player 2 "},"childOfId":203} 

 Player 2 21:41:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:41:45 $ACTION_MASSAGE_REMOVE:  
{"id":205} 

 Player 2 21:41:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":206,"_text":"Wait For Response From Player 1 "},"childOfId":203} 

 Player 2 21:41:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:41:45 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:41:45 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335]} 

 Player 1 21:41:45 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:41:45 $ACTION_MASSAGE_REMOVE:  
{"id":206} 

 Player 2 21:41:45 $ACTION_MASSAGE_REMOVE:  
{"id":204} 

 Player 2 21:41:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":207,"_text":"Resolve Player Purchase Item 38 "}} 

 Player 2 21:41:45 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_BUY_ITEM","args":[{"type":2,"number":-10},{"type":0,"number":140}],"result":null,"preventMethod":false,"methodScopeId":329,"scopeIsPlayer":true,"index":34,"originStackId":38},"isAfterActivation":true,"index":34} 

 Player 2 21:41:45 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 21:41:45 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 21:41:45 $SHOW_STACK_EFFECT:  
{"effectId":38} 

 Player 2 21:41:48 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":38} 

 Player 2 21:41:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":208,"_text":"Remove After Resolve Player Purchase Item 38  "}} 

 Player 2 21:41:48 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":38,"creatorCardId":329,"itemToPurchaseCardId":140,"playerWhoBuysCardId":329,"cost":10,"stackEffectType":9,"lable":"Player 2 Has Bought Treasure Deck For 10 cents"}} 

 Player 2 21:41:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":209,"_text":"Response Remove After Resolve Player Purchase Item 38"},"childOfId":208} 

 Player 2 21:41:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":210,"_text":"Wait For Response From Player 1 "},"childOfId":208} 

 Player 2 21:41:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:41:48 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:41:48 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335]} 

 Player 1 21:41:48 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:41:49 $ACTION_MASSAGE_REMOVE:  
{"id":210} 

 Player 2 21:41:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":211,"_text":"Wait For Response From Player 2 "},"childOfId":208} 

 Player 2 21:41:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:41:49 $ACTION_MASSAGE_REMOVE:  
{"id":211} 

 Player 2 21:41:49 $ACTION_MASSAGE_REMOVE:  
{"id":209} 

 Player 2 21:41:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":212,"_text":"Stack Was Emptied "}} 

 Player 2 21:41:49 $CLEAR_SE_VIS:  

 Player 2 21:41:52 $NEXT_STACK_ID:  

 Player 2 21:41:52 $ADD_TO_STACK:  
{"stackEffect":{"entityId":40,"creatorCardId":329,"itemToPurchaseCardId":140,"playerWhoBuysCardId":329,"cost":10,"stackEffectType":9,"lable":"Player 2 Is About To Buy Treasure Deck For 10"}} 

 Player 2 21:41:52 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":40,"creatorCardId":329,"itemToPurchaseCardId":140,"playerWhoBuysCardId":329,"cost":10,"stackEffectType":9,"lable":"Player 2 Is About To Buy Treasure Deck For 10"}} 

 Player 2 21:41:53 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 21:41:53 $SHOW_STACK_EFFECT:  
{"effectId":40} 

 Player 2 21:41:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":213,"_text":"Add Player Purchase Item 40 "}} 

 Player 2 21:41:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:41:56 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":40,"creatorCardId":329,"itemToPurchaseCardId":140,"playerWhoBuysCardId":329,"cost":10,"stackEffectType":9,"lable":"Player 2 Is About To Buy Treasure Deck For 10"}} 

 Player 2 21:41:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":214,"_text":"Response Adding Player Purchase Item 40"},"childOfId":213} 

 Player 2 21:41:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":215,"_text":"Wait For Response From Player 2 "},"childOfId":213} 

 Player 2 21:41:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:41:56 $ACTION_MASSAGE_REMOVE:  
{"id":215} 

 Player 2 21:41:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":216,"_text":"Wait For Response From Player 1 "},"childOfId":213} 

 Player 2 21:41:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:41:56 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:41:56 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335]} 

 Player 1 21:41:56 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:41:56 $ACTION_MASSAGE_REMOVE:  
{"id":216} 

 Player 2 21:41:56 $ACTION_MASSAGE_REMOVE:  
{"id":214} 

 Player 2 21:41:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":217,"_text":"Resolve Player Purchase Item 40 "}} 

 Player 2 21:41:56 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":40,"creatorCardId":329,"itemToPurchaseCardId":140,"playerWhoBuysCardId":329,"cost":10,"stackEffectType":9,"lable":"Player 2 Is About To Buy Treasure Deck For 10"}]} 

 Player 2 21:41:56 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":40,"text":"Player 2 Has Bought Treasure Deck For 10 cents"} 

 Player 2 21:41:56 $SET_MONEY:  
{"playerId":2,"numOfCoins":14} 

 Player 2 21:41:56 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-10}],"result":null,"preventMethod":false,"methodScopeId":329,"scopeIsPlayer":true,"index":35,"originStackId":-1},"isAfterActivation":true,"index":35} 

 Player 2 21:41:56 $DRAW_CARD:  
{"deckType":5} 

 Player 2 21:41:56 $REGISTER_PASSIVE_ITEM:  
{"cardId":204} 

 Player 2 21:41:56 $MOVE_CARD:  
{"moveIndex":24,"cardId":204,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 

 Player 1 21:41:56 $MOVE_CARD_END:  
{"moveIndex":24,"cardId":204,"flipIfFlipped":true,"playerId":2} 

 Player 2 21:41:57 $ADD_AN_ITEM:  
{"playerId":2,"cardId":204,"isReward":false} 

 Player 2 21:41:57 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":204}],"result":true,"preventMethod":false,"methodScopeId":329,"scopeIsPlayer":true,"index":36,"originStackId":-1},"isAfterActivation":true,"index":36} 

 Player 2 21:41:57 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_BUY_ITEM","args":[{"type":2,"number":-10},{"type":0,"number":140}],"result":null,"preventMethod":false,"methodScopeId":329,"scopeIsPlayer":true,"index":37,"originStackId":40},"isAfterActivation":true,"index":37} 

 Player 2 21:41:57 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 21:41:57 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 21:41:57 $SHOW_STACK_EFFECT:  
{"effectId":40} 

 Player 2 21:42:00 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":40} 

 Player 2 21:42:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":218,"_text":"Remove After Resolve Player Purchase Item 40  "}} 

 Player 2 21:42:00 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":40,"creatorCardId":329,"itemToPurchaseCardId":140,"playerWhoBuysCardId":329,"cost":10,"stackEffectType":9,"lable":"Player 2 Has Bought Treasure Deck For 10 cents"}} 

 Player 2 21:42:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":219,"_text":"Response Remove After Resolve Player Purchase Item 40"},"childOfId":218} 

 Player 2 21:42:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":220,"_text":"Wait For Response From Player 1 "},"childOfId":218} 

 Player 2 21:42:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:42:00 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:42:00 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335]} 

 Player 1 21:42:00 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:42:00 $ACTION_MASSAGE_REMOVE:  
{"id":220} 

 Player 2 21:42:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":221,"_text":"Wait For Response From Player 2 "},"childOfId":218} 

 Player 2 21:42:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:42:00 $ACTION_MASSAGE_REMOVE:  
{"id":221} 

 Player 2 21:42:00 $ACTION_MASSAGE_REMOVE:  
{"id":219} 

 Player 2 21:42:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":222,"_text":"Stack Was Emptied "}} 

 Player 2 21:42:00 $CLEAR_SE_VIS:  

 Player 2 21:42:02 $NEXT_STACK_ID:  

 Player 2 21:42:02 $ADD_TO_STACK:  
{"stackEffect":{"entityId":41,"creatorCardId":329,"itemToPurchaseCardId":140,"playerWhoBuysCardId":329,"cost":10,"stackEffectType":9,"lable":"Player 2 Is About To Buy Treasure Deck For 10"}} 

 Player 2 21:42:02 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":41,"creatorCardId":329,"itemToPurchaseCardId":140,"playerWhoBuysCardId":329,"cost":10,"stackEffectType":9,"lable":"Player 2 Is About To Buy Treasure Deck For 10"}} 

 Player 2 21:42:02 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 21:42:02 $SHOW_STACK_EFFECT:  
{"effectId":41} 

 Player 2 21:42:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":223,"_text":"Add Player Purchase Item 41 "}} 

 Player 2 21:42:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:42:05 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":41,"creatorCardId":329,"itemToPurchaseCardId":140,"playerWhoBuysCardId":329,"cost":10,"stackEffectType":9,"lable":"Player 2 Is About To Buy Treasure Deck For 10"}} 

 Player 2 21:42:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":224,"_text":"Response Adding Player Purchase Item 41"},"childOfId":223} 

 Player 2 21:42:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":225,"_text":"Wait For Response From Player 2 "},"childOfId":223} 

 Player 2 21:42:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:42:05 $ACTION_MASSAGE_REMOVE:  
{"id":225} 

 Player 2 21:42:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":226,"_text":"Wait For Response From Player 1 "},"childOfId":223} 

 Player 2 21:42:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:42:05 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:42:05 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335]} 

 Player 1 21:42:05 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:42:05 $ACTION_MASSAGE_REMOVE:  
{"id":226} 

 Player 2 21:42:05 $ACTION_MASSAGE_REMOVE:  
{"id":224} 

 Player 2 21:42:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":227,"_text":"Resolve Player Purchase Item 41 "}} 

 Player 2 21:42:05 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":41,"creatorCardId":329,"itemToPurchaseCardId":140,"playerWhoBuysCardId":329,"cost":10,"stackEffectType":9,"lable":"Player 2 Is About To Buy Treasure Deck For 10"}]} 

 Player 2 21:42:05 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":41,"text":"Player 2 Has Bought Treasure Deck For 10 cents"} 

 Player 2 21:42:05 $SET_MONEY:  
{"playerId":2,"numOfCoins":4} 

 Player 2 21:42:05 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-10}],"result":null,"preventMethod":false,"methodScopeId":329,"scopeIsPlayer":true,"index":38,"originStackId":-1},"isAfterActivation":true,"index":38} 

 Player 2 21:42:05 $DRAW_CARD:  
{"deckType":5} 

 Player 2 21:42:05 $MOVE_CARD:  
{"moveIndex":25,"cardId":209,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 

 Player 1 21:42:06 $MOVE_CARD_END:  
{"moveIndex":25,"cardId":209,"flipIfFlipped":true,"playerId":2} 

 Player 2 21:42:06 $ADD_AN_ITEM:  
{"playerId":2,"cardId":209,"isReward":false} 

 Player 2 21:42:06 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":209}],"result":true,"preventMethod":false,"methodScopeId":329,"scopeIsPlayer":true,"index":39,"originStackId":-1},"isAfterActivation":true,"index":39} 

 Player 2 21:42:06 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_BUY_ITEM","args":[{"type":2,"number":-10},{"type":0,"number":140}],"result":null,"preventMethod":false,"methodScopeId":329,"scopeIsPlayer":true,"index":40,"originStackId":41},"isAfterActivation":true,"index":40} 

 Player 2 21:42:06 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 21:42:06 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 21:42:06 $SHOW_STACK_EFFECT:  
{"effectId":41} 

 Player 2 21:42:09 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":41} 

 Player 2 21:42:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":228,"_text":"Remove After Resolve Player Purchase Item 41  "}} 

 Player 2 21:42:09 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":41,"creatorCardId":329,"itemToPurchaseCardId":140,"playerWhoBuysCardId":329,"cost":10,"stackEffectType":9,"lable":"Player 2 Has Bought Treasure Deck For 10 cents"}} 

 Player 2 21:42:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":229,"_text":"Response Remove After Resolve Player Purchase Item 41"},"childOfId":228} 

 Player 2 21:42:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":230,"_text":"Wait For Response From Player 1 "},"childOfId":228} 

 Player 2 21:42:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:42:09 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:42:09 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335]} 

 Player 1 21:42:09 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:42:09 $ACTION_MASSAGE_REMOVE:  
{"id":230} 

 Player 2 21:42:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":231,"_text":"Wait For Response From Player 2 "},"childOfId":228} 

 Player 2 21:42:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:42:09 $ACTION_MASSAGE_REMOVE:  
{"id":231} 

 Player 2 21:42:09 $ACTION_MASSAGE_REMOVE:  
{"id":229} 

 Player 2 21:42:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":232,"_text":"Stack Was Emptied "}} 

 Player 2 21:42:09 $CLEAR_SE_VIS: 