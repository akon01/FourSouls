Start Log 

 Player 1 15:31:58 $MATCH:  

 Player 1 15:31:59 $START_GAME:  

 Player 1 15:31:59 $MOVE_TO_TABLE:  

 Player 2 15:31:59 $MOVE_TO_TABLE:  

 Player 2 15:32:07 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 1 15:32:07 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 15:32:07 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":280,"itemCardId":281} 

 Player 2 15:32:07 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":287}],"result":true,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 15:32:07 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":286,"itemCardId":287} 

 Player 2 15:32:07 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[83,126,116,15,123,94,43,61,28,106,105,72,57,17,26,100,112,51,23,49,47,37,7,134,84,59,77,16,91,130,65,38,82,86,76,115,74,22,102,141,75,88,87,80,131,68,58,41,95,69,113,85,89,18,53,121,19,114,31,32,54,14,29,129,117,50,118,110,98,70,39,79,140,132,63,138,120,34,11,107,104,9,25,13,56,101,52,35,119,27,45,8,124,139,73,93,96,48,40,92,30,42,127,36,66,108,60,99,136,71,44,109,12,64,10,90,81,142,67,20,62,55,128,21,33,133,97,111,78,46,24,103,122,135,137,125]} 

 Player 2 15:32:07 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[253,250,233,247,244,259,225,271,269,273,264,261,265,224,256,267,249,248,234,228,241,240,246,272,243,230,254,231,227,242,237,255,258,268,245,232,263,274,236,229,275,239,260,270,257,226,262,235,252,251,276,238,266,277]} 

 Player 2 15:32:07 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[171,208,175,172,169,189,157,168,202,164,218,156,152,211,204,149,179,187,221,177,163,184,170,186,155,160,161,154,159,217,151,148,176,183,147,212,174,181,182,220,180,167,197,198,207,153,192,201,173,206,185,191,166,196,200,209,216,219,165,205,150,178,194,215,190,188,203,162,214,145,193,213,158,195,199,146,210]} 

 Player 2 15:32:07 $DRAW_CARD:  
{"deckType":5} 

 Player 2 15:32:07 $FLIP_CARD:  
{"cardId":210} 

 Player 2 15:32:07 $ADD_STORE_CARD:  
{"cardId":210} 

 Player 2 15:32:07 $DRAW_CARD:  
{"deckType":5} 

 Player 2 15:32:07 $FLIP_CARD:  
{"cardId":146} 

 Player 2 15:32:07 $ADD_STORE_CARD:  
{"cardId":146} 

 Player 2 15:32:07 $DRAW_CARD:  
{"deckType":2} 

 Player 2 15:32:07 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":277} 

 Player 2 15:32:07 $DRAW_CARD:  
{"deckType":2} 

 Player 2 15:32:07 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":266} 

 Player 2 15:32:07 $DRAW_CARD:  
{"deckType":2} 

 Player 2 15:32:07 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":238} 

 Player 2 15:32:07 $DRAW_CARD:  
{"deckType":2} 

 Player 2 15:32:07 $FLIP_CARD:  
{"cardId":276} 

 Player 2 15:32:07 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":276} 

 Player 2 15:32:07 $NEW_MONSTER_ON_PLACE:  
{"cardId":276,"monsterPlaceId":1} 

 Player 2 15:32:07 $DRAW_CARD:  
{"deckType":2} 

 Player 2 15:32:08 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":251} 

 Player 2 15:32:08 $DRAW_CARD:  
{"deckType":2} 

 Player 2 15:32:08 $FLIP_CARD:  
{"cardId":252} 

 Player 2 15:32:08 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":252} 

 Player 2 15:32:08 $NEW_MONSTER_ON_PLACE:  
{"cardId":252,"monsterPlaceId":2} 

 Player 2 15:32:08 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 15:32:08 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":280,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 15:32:08 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:32:08 $MOVE_CARD:  
{"moveIndex":1,"cardId":125,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:32:08 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":281}],"result":true,"preventMethod":false,"methodScopeId":280,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 15:32:08 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":125,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:32:08 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":125} 

 Player 2 15:32:08 $FLIP_CARD:  
{"cardId":125} 

 Player 2 15:32:08 $FLIP_CARD:  
{"cardId":125} 

 Player 2 15:32:08 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":125} 

 Player 2 15:32:08 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:32:08 $MOVE_CARD:  
{"moveIndex":2,"cardId":137,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:32:09 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":137,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:32:09 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":137} 

 Player 2 15:32:09 $FLIP_CARD:  
{"cardId":137} 

 Player 2 15:32:09 $FLIP_CARD:  
{"cardId":137} 

 Player 2 15:32:09 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":137} 

 Player 2 15:32:09 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:32:09 $MOVE_CARD:  
{"moveIndex":3,"cardId":135,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:32:09 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":135,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:32:09 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":135} 

 Player 2 15:32:09 $FLIP_CARD:  
{"cardId":135} 

 Player 2 15:32:09 $FLIP_CARD:  
{"cardId":135} 

 Player 2 15:32:09 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":135} 

 Player 2 15:32:09 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 15:32:09 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 15:32:09 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:32:09 $MOVE_CARD:  
{"moveIndex":4,"cardId":122,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:32:10 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":122,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:32:10 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":122} 

 Player 2 15:32:10 $FLIP_CARD:  
{"cardId":122} 

 Player 2 15:32:10 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":122} 

 Player 2 15:32:10 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:32:10 $MOVE_CARD:  
{"moveIndex":5,"cardId":103,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:32:10 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":103,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:32:10 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":103} 

 Player 2 15:32:10 $FLIP_CARD:  
{"cardId":103} 

 Player 2 15:32:10 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":103} 

 Player 2 15:32:10 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:32:10 $MOVE_CARD:  
{"moveIndex":6,"cardId":24,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:32:11 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":24,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:32:11 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":24} 

 Player 2 15:32:11 $FLIP_CARD:  
{"cardId":24} 

 Player 2 15:32:11 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":24} 

 Player 2 15:32:11 $GAME_HAS_STARTED:  

 Player 2 15:32:11 $SET_TURN:  
{"playerId":2} 

 Player 2 15:32:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:32:11 $NEXT_STACK_ID:  

 Player 2 15:32:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:32:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 15:32:11 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 

 Player 2 15:32:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 15:32:11 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 

 Player 2 15:32:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 2 15:32:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:32:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 15:32:11 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 

 Player 2 15:32:11 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 15:32:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 2 15:32:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 2 15:32:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:32:11 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 15:32:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 2 15:32:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:32:11 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 15:32:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:32:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:32:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 15:32:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 15:32:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 15:32:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 15:32:11 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:32:11 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 15:32:11 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 15:32:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 2 15:32:11 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:32:11 $MOVE_CARD:  
{"moveIndex":7,"cardId":46,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:32:12 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":46,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:32:12 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":46} 

 Player 2 15:32:12 $FLIP_CARD:  
{"cardId":46} 

 Player 2 15:32:12 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":46} 

 Player 2 15:32:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 15:32:12 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 

 Player 2 15:32:12 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 15:32:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:32:12 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 

 Player 2 15:32:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 2 15:32:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:32:12 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 

 Player 2 15:32:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 2 15:32:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 2 15:32:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:32:12 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 15:32:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 15:32:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 15:32:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 15:32:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 15:32:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 15:32:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 15:32:12 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:32:12 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 2 15:32:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 2 15:32:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:32:13 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 2 15:32:13 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 2 15:32:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 2 15:32:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:32:13 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 15:32:13 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 15:32:13 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 15:32:13 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 15:32:13 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 15:32:13 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 15:32:13 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 15:32:13 $UPDATE_ACTIONS:  

 Player 2 15:32:14 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 15:32:15 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 15:32:17 $MOVE_CARD:  
{"moveIndex":8,"cardId":164,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 

 Player 1 15:32:17 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":164,"flipIfFlipped":true,"playerId":2} 

 Player 2 15:32:17 $REGISTER_PASSIVE_ITEM:  
{"cardId":164} 

 Player 2 15:32:17 $MOVE_CARD:  
{"moveIndex":9,"cardId":164,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 

 Player 1 15:32:17 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":164,"flipIfFlipped":true,"playerId":2} 

 Player 2 15:32:17 $ADD_AN_ITEM:  
{"playerId":2,"cardId":164,"isReward":true} 

 Player 2 15:32:17 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":164}],"result":true,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 2 15:32:20 $SHOW_DECISION:  
{"startCardId":286,"endCardId":276} 

 Player 2 15:32:23 $NEXT_STACK_ID:  

 Player 2 15:32:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:32:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Widow"} 

 Player 2 15:32:23 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":286,"attackingPlayerCardId":286,"idOfCardBeingAttacked":276,"stackEffectType":4}} 

 Player 2 15:32:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Widow"} 

 Player 2 15:32:23 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":286,"attackingPlayerCardId":286,"idOfCardBeingAttacked":276,"stackEffectType":4}} 

 Player 2 15:32:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add DeclareAttack 2 "}} 

 Player 2 15:32:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:32:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Widow"} 

 Player 2 15:32:23 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":286,"attackingPlayerCardId":286,"idOfCardBeingAttacked":276,"stackEffectType":4}} 

 Player 2 15:32:23 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 15:32:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding DeclareAttack 2"},"childOfId":10} 

 Player 2 15:32:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 2 15:32:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:32:24 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 2 15:32:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 2 15:32:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:32:24 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 15:32:24 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:32:24 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:32:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Widow"} 

 Player 1 15:32:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Widow"} 

 Player 1 15:32:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Widow"} 

 Player 1 15:32:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Widow"} 

 Player 1 15:32:24 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:32:24 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 2 15:32:24 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 2 15:32:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve DeclareAttack 2 "}} 

 Player 2 15:32:24 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":276,"particleType":5} 

 Player 2 15:32:24 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":5,"originStackId":2},"isAfterActivation":true,"index":5} 

 Player 2 15:32:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Widow"} 

 Player 2 15:32:24 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":286,"attackingPlayerCardId":286,"idOfCardBeingAttacked":276,"stackEffectType":4}} 

 Player 2 15:32:24 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 15:32:24 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:32:24 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":286,"attackingPlayerCardId":286,"idOfCardBeingAttacked":276,"stackEffectType":4}} 

 Player 2 15:32:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve DeclareAttack 2  "}} 

 Player 2 15:32:24 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:32:24 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":286,"attackingPlayerCardId":286,"idOfCardBeingAttacked":276,"stackEffectType":4}} 

 Player 2 15:32:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve DeclareAttack 2"},"childOfId":15} 

 Player 2 15:32:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 2 15:32:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:32:24 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 15:32:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Widow"} 

 Player 1 15:32:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Widow"} 

 Player 1 15:32:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Widow"} 

 Player 1 15:32:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Widow"} 

 Player 1 15:32:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Widow"} 

 Player 1 15:32:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Widow"} 

 Player 1 15:32:25 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:32:25 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 15:32:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 2 15:32:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:32:25 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 2 15:32:25 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 2 15:32:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 2 15:32:25 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:32:25 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 15:32:25 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 15:32:25 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 15:32:25 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 15:32:25 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 15:32:25 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 15:32:25 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 15:32:25 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 15:32:25 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 15:32:25 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 15:32:25 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 15:32:26 $NEXT_STACK_ID:  

 Player 2 15:32:26 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:32:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Widow<Monster>"} 

 Player 2 15:32:26 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":286,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":276}} 

 Player 2 15:32:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Widow<Monster>"} 

 Player 2 15:32:26 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":286,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":276}} 

 Player 2 15:32:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add AttackRoll 3 "}} 

 Player 2 15:32:26 $ROLL_DICE:  
{"playerId":2} 

 Player 1 15:32:26 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:32:26 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:32:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Widow<Monster>"} 

 Player 1 15:32:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Widow<Monster>"} 

 Player 2 15:32:26 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 15:32:27 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 15:32:27 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":2} 

 Player 2 15:32:27 $UPDATE_STACK_VIS:  
{"stackId":3,"text":"player rolled 2 vs Widow<Monster>"} 

 Player 2 15:32:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 2 vs Widow<Monster>"} 

 Player 2 15:32:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:32:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 2 vs Widow<Monster>"} 

 Player 2 15:32:28 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":286,"numberRolled":2,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":276}} 

 Player 2 15:32:28 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 15:32:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding AttackRoll 3"},"childOfId":20} 

 Player 2 15:32:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 2 15:32:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:32:28 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 2 15:32:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 2 15:32:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:32:28 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 15:32:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Widow<Monster>"} 

 Player 1 15:32:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Widow<Monster>"} 

 Player 1 15:32:28 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:32:28 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 2 15:32:28 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 2 15:32:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve AttackRoll 3 "}} 

 Player 2 15:32:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Added 0 to original roll"}} 

 Player 2 15:32:28 $NEXT_STACK_ID:  

 Player 2 15:32:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 2 vs Widow<Monster>"} 

 Player 2 15:32:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:32:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 rolled 2 vs Widow<Monster>"} 

 Player 2 15:32:28 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":286,"entityToDoDamageCardId":286,"entityToTakeDamageCardId":276,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 15:32:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 rolled 2 vs Widow<Monster>"} 

 Player 2 15:32:28 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":286,"numberRolled":2,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":276}} 

 Player 2 15:32:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 rolled 2 vs Widow<Monster>"} 

 Player 2 15:32:28 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":286,"entityToDoDamageCardId":286,"entityToTakeDamageCardId":276,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 15:32:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 rolled 2 vs Widow<Monster>"} 

 Player 2 15:32:28 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":286,"numberRolled":2,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":276}} 

 Player 2 15:32:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 rolled 2 vs Widow<Monster>"} 

 Player 2 15:32:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 rolled 2 vs Widow<Monster>"} 

 Player 2 15:32:28 $REPLACE_STACK:  
{"currentStack":[{"entityId":4,"creatorCardId":286,"entityToDoDamageCardId":286,"entityToTakeDamageCardId":276,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":3,"creatorCardId":286,"numberRolled":2,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":276}]} 

 Player 2 15:32:28 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":6,"originStackId":3},"isAfterActivation":true,"index":6} 

 Player 2 15:32:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 rolled 2 vs Widow<Monster>"} 

 Player 2 15:32:28 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":286,"numberRolled":2,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":276}} 

 Player 2 15:32:28 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 15:32:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow"} 

 Player 2 15:32:28 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":286,"numberRolled":2,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":276}} 

 Player 2 15:32:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Remove After Resolve AttackRoll 3  "}} 

 Player 2 15:32:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow"} 

 Player 2 15:32:29 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":286,"numberRolled":2,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":276}} 

 Player 2 15:32:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Response Remove After Resolve AttackRoll 3"},"childOfId":26} 

 Player 2 15:32:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":26} 

 Player 2 15:32:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:32:29 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 2 15:32:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Wait For Response From Player 1 "},"childOfId":26} 

 Player 2 15:32:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:32:29 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 15:32:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Widow<Monster>"} 

 Player 1 15:32:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Widow<Monster>"} 

 Player 1 15:32:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow"} 

 Player 1 15:32:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow"} 

 Player 1 15:32:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow"} 

 Player 1 15:32:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow"} 

 Player 1 15:32:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow"} 

 Player 1 15:32:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow"} 

 Player 1 15:32:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow"} 

 Player 1 15:32:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow"} 

 Player 1 15:32:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow"} 

 Player 1 15:32:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow"} 

 Player 1 15:32:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 is rolling against Widow<Monster>"} 

 Player 1 15:32:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 is rolling against Widow<Monster>"} 

 Player 1 15:32:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 is rolling against Widow<Monster>"} 

 Player 1 15:32:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 is rolling against Widow<Monster>"} 

 Player 1 15:32:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 is rolling against Widow<Monster>"} 

 Player 1 15:32:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 is rolling against Widow<Monster>"} 

 Player 1 15:32:29 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:32:29 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 15:32:29 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 2 15:32:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Resolve CombatDamage 4 "}} 

 Player 2 15:32:29 $UPDATE_STACK_VIS:  
{"stackId":4,"text":"Isaac will deal 1 combat damage to Widow"} 

 Player 2 15:32:29 $MONSTER_GET_DAMAGED:  
{"cardId":276,"hpLeft":2,"damageDealerId":286} 

 Player 2 15:32:29 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":286}],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":false,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 

 Player 2 15:32:29 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":4},{"type":0,"number":286},{"type":0,"number":276}],"result":null,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":8,"originStackId":4},"isAfterActivation":true,"index":8} 

 Player 2 15:32:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow"} 

 Player 2 15:32:29 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":286,"entityToDoDamageCardId":286,"entityToTakeDamageCardId":276,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 15:32:30 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 15:32:30 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:32:30 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":286,"entityToDoDamageCardId":286,"entityToTakeDamageCardId":276,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 15:32:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Remove After Resolve CombatDamage 4  "}} 

 Player 2 15:32:30 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:32:30 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":286,"entityToDoDamageCardId":286,"entityToTakeDamageCardId":276,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 15:32:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Response Remove After Resolve CombatDamage 4"},"childOfId":31} 

 Player 2 15:32:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":31} 

 Player 2 15:32:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:32:30 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 15:32:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow"} 

 Player 1 15:32:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow"} 

 Player 1 15:32:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow"} 

 Player 1 15:32:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow"} 

 Player 1 15:32:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow"} 

 Player 1 15:32:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow"} 

 Player 1 15:32:30 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:32:30 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 2 15:32:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Wait For Response From Player 2 "},"childOfId":31} 

 Player 2 15:32:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:32:30 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 15:32:30 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 2 15:32:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Stack Was Emptied "}} 

 Player 2 15:32:30 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:32:30 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 15:32:30 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 15:32:30 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 15:32:30 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 15:32:30 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 15:32:30 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 15:32:30 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 15:32:30 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 15:32:30 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 15:32:30 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 15:32:30 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 15:32:30 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 15:32:30 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 15:32:31 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 15:32:31 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 2 15:32:31 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 15:32:31 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 2 15:32:31 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 15:32:31 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 15:32:31 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 2 15:32:31 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 15:32:32 $NEXT_STACK_ID:  

 Player 2 15:32:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:32:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Widow<Monster>"} 

 Player 2 15:32:32 $ADD_TO_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":286,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":276}} 

 Player 2 15:32:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Widow<Monster>"} 

 Player 2 15:32:32 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":286,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":276}} 

 Player 2 15:32:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Add AttackRoll 5 "}} 

 Player 2 15:32:32 $ROLL_DICE:  
{"playerId":2} 

 Player 1 15:32:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:32:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:32:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Widow<Monster>"} 

 Player 1 15:32:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Widow<Monster>"} 

 Player 2 15:32:32 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 2 15:32:34 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":5} 

 Player 2 15:32:34 $UPDATE_STACK_VIS:  
{"stackId":5,"text":"player rolled 5 vs Widow<Monster>"} 

 Player 2 15:32:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 5 vs Widow<Monster>"} 

 Player 2 15:32:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:32:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 5 vs Widow<Monster>"} 

 Player 2 15:32:34 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":286,"numberRolled":5,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":276}} 

 Player 2 15:32:34 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 2 15:32:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Response Adding AttackRoll 5"},"childOfId":36} 

 Player 2 15:32:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 2 "},"childOfId":36} 

 Player 2 15:32:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:32:34 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 2 15:32:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Wait For Response From Player 1 "},"childOfId":36} 

 Player 2 15:32:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:32:34 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 15:32:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Widow<Monster>"} 

 Player 1 15:32:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Widow<Monster>"} 

 Player 1 15:32:35 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:32:35 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 15:32:35 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 2 15:32:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Resolve AttackRoll 5 "}} 

 Player 2 15:32:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Added 0 to original roll"}} 

 Player 2 15:32:35 $NEXT_STACK_ID:  

 Player 2 15:32:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 5 vs Widow<Monster>"} 

 Player 2 15:32:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:32:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 rolled 5 vs Widow<Monster>"} 

 Player 2 15:32:35 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":286,"entityToDoDamageCardId":286,"entityToTakeDamageCardId":276,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 15:32:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 rolled 5 vs Widow<Monster>"} 

 Player 2 15:32:35 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":286,"numberRolled":5,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":276}} 

 Player 2 15:32:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 rolled 5 vs Widow<Monster>"} 

 Player 2 15:32:35 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":286,"entityToDoDamageCardId":286,"entityToTakeDamageCardId":276,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 15:32:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 rolled 5 vs Widow<Monster>"} 

 Player 2 15:32:35 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":286,"numberRolled":5,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":276}} 

 Player 2 15:32:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 rolled 5 vs Widow<Monster>"} 

 Player 2 15:32:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 rolled 5 vs Widow<Monster>"} 

 Player 2 15:32:35 $REPLACE_STACK:  
{"currentStack":[{"entityId":6,"creatorCardId":286,"entityToDoDamageCardId":286,"entityToTakeDamageCardId":276,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":5,"creatorCardId":286,"numberRolled":5,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":276}]} 

 Player 2 15:32:35 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":1},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":9,"originStackId":5},"isAfterActivation":true,"index":9} 

 Player 2 15:32:35 $NEXT_STACK_ID:  

 Player 2 15:32:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 rolled 5 vs Widow<Monster>"} 

 Player 2 15:32:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 rolled 5 vs Widow<Monster> \n3:Activate Euthanasia effect KillEntity<KillEntity>"} 

 Player 2 15:32:35 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":7,"creatorCardId":286,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":164,"effectToDo":{"effectName":"KillEntity","cardEffectNum":0,"cardPlayerId":2,"cardId":164,"effctType":0},"isAfterActivation":true,"index":9,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 15:32:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 rolled 5 vs Widow<Monster> \n3:Activate Euthanasia effect KillEntity<KillEntity>"} 

 Player 2 15:32:35 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":7,"creatorCardId":286,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":164,"effectToDo":{"effectName":"KillEntity","cardEffectNum":0,"cardPlayerId":2,"cardId":164,"effctType":0},"isAfterActivation":true,"index":9,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 15:32:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Add ActivatePassiveEffect 7 "}} 

 Player 2 15:32:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 rolled 5 vs Widow<Monster> \n3:Activate Euthanasia effect KillEntity<KillEntity>"} 

 Player 2 15:32:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 rolled 5 vs Widow<Monster> \n3:Activate Euthanasia effect KillEntity<KillEntity>"} 

 Player 2 15:32:35 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[276],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":286,"effectCardPlayer":286},"entityId":7,"creatorCardId":286,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":164,"effectToDo":{"effectName":"KillEntity","cardEffectNum":0,"cardPlayerId":2,"cardId":164,"effctType":0},"isAfterActivation":true,"index":9,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 15:32:35 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 2 15:32:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Response Adding ActivatePassiveEffect 7"},"childOfId":42} 

 Player 2 15:32:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Wait For Response From Player 2 "},"childOfId":42} 

 Player 2 15:32:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:32:35 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 15:32:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Wait For Response From Player 1 "},"childOfId":42} 

 Player 2 15:32:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:32:36 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 15:32:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Widow<Monster>"} 

 Player 1 15:32:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Widow<Monster>"} 

 Player 1 15:32:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow"} 

 Player 1 15:32:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow"} 

 Player 1 15:32:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow"} 

 Player 1 15:32:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow"} 

 Player 1 15:32:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow"} 

 Player 1 15:32:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow"} 

 Player 1 15:32:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow"} 

 Player 1 15:32:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow"} 

 Player 1 15:32:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow"} 

 Player 1 15:32:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow"} 

 Player 1 15:32:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 is rolling against Widow<Monster>"} 

 Player 1 15:32:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 is rolling against Widow<Monster>"} 

 Player 1 15:32:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 is rolling against Widow<Monster> \n3:Activate Euthanasia "} 

 Player 1 15:32:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 is rolling against Widow<Monster> \n3:Activate Euthanasia "} 

 Player 1 15:32:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 is rolling against Widow<Monster> \n3:Activate Euthanasia "} 

 Player 1 15:32:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 is rolling against Widow<Monster> \n3:Activate Euthanasia "} 

 Player 1 15:32:36 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:32:36 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 2 15:32:36 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 2 15:32:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Resolve ActivatePassiveEffect 7 "}} 

 Player 2 15:32:36 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":164,"particleType":6} 

 Player 2 15:32:38 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 2 15:32:38 $DISABLE_PARTICLE_EFFECT:  
{"cardId":164,"particleType":6} 

 Player 2 15:32:38 $NEXT_STACK_ID:  

 Player 2 15:32:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 rolled 5 vs Widow<Monster> \n3:Activate Euthanasia effect KillEntity<KillEntity>"} 

 Player 2 15:32:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:32:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 rolled 5 vs Widow<Monster> \n3:Activate Euthanasia effect KillEntity<KillEntity> \n4:[object Object] killed by Isaac"} 

 Player 2 15:32:38 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":286,"monsterToDieCardId":276,"stackEffectType":5,"killerId":286}} 

 Player 2 15:32:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 rolled 5 vs Widow<Monster> \n3:Activate Euthanasia effect KillEntity<KillEntity> \n4:[object Object] killed by Isaac"} 

 Player 2 15:32:38 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":286,"entityToDoDamageCardId":286,"entityToTakeDamageCardId":276,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 15:32:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 rolled 5 vs Widow<Monster> \n3:Activate Euthanasia effect KillEntity<KillEntity> \n4:[object Object] killed by Isaac"} 

 Player 2 15:32:38 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[276],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":286,"effectCardPlayer":286},"entityId":7,"creatorCardId":286,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":164,"effectToDo":{"effectName":"KillEntity","cardEffectNum":0,"cardPlayerId":2,"cardId":164,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":1},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":9,"originStackId":5},"isAfterActivation":true,"index":9,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 15:32:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 rolled 5 vs Widow<Monster> \n3:Activate Euthanasia effect KillEntity<KillEntity> \n4:[object Object] killed by Isaac"} 

 Player 2 15:32:38 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":286,"entityToDoDamageCardId":286,"entityToTakeDamageCardId":276,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 15:32:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 rolled 5 vs Widow<Monster> \n3:Activate Euthanasia effect KillEntity<KillEntity> \n4:[object Object] killed by Isaac"} 

 Player 2 15:32:38 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":286,"numberRolled":5,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":276}} 

 Player 2 15:32:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 rolled 5 vs Widow<Monster> \n3:Activate Euthanasia effect KillEntity<KillEntity> \n4:[object Object] killed by Isaac"} 

 Player 2 15:32:39 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[276],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":286,"effectCardPlayer":286},"entityId":7,"creatorCardId":286,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":164,"effectToDo":{"effectName":"KillEntity","cardEffectNum":0,"cardPlayerId":2,"cardId":164,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":1},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":9,"originStackId":5},"isAfterActivation":true,"index":9,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 15:32:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 rolled 5 vs Widow<Monster> \n3:Activate Euthanasia effect KillEntity<KillEntity> \n4:[object Object] killed by Isaac"} 

 Player 2 15:32:39 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":286,"monsterToDieCardId":276,"stackEffectType":5,"killerId":286}} 

 Player 2 15:32:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 rolled 5 vs Widow<Monster> \n3:Activate Euthanasia effect KillEntity<KillEntity> \n4:[object Object] killed by Isaac"} 

 Player 2 15:32:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 rolled 5 vs Widow<Monster> \n3:Activate Euthanasia effect KillEntity<KillEntity> \n4:[object Object] killed by Isaac"} 

 Player 2 15:32:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 rolled 5 vs Widow<Monster> \n3:Activate Euthanasia effect KillEntity<KillEntity> \n4:[object Object] killed by Isaac"} 

 Player 2 15:32:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 rolled 5 vs Widow<Monster> \n3:Activate Euthanasia effect KillEntity<KillEntity> \n4:[object Object] killed by Isaac"} 

 Player 2 15:32:39 $REPLACE_STACK:  
{"currentStack":[{"entityId":6,"creatorCardId":286,"entityToDoDamageCardId":286,"entityToTakeDamageCardId":276,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":5,"creatorCardId":286,"numberRolled":5,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":276},{"effectCollectedData":{"effectTargets":[276],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":286,"effectCardPlayer":286},"entityId":7,"creatorCardId":286,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":164,"effectToDo":{"effectName":"KillEntity","cardEffectNum":0,"cardPlayerId":2,"cardId":164,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":1},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":9,"originStackId":5},"isAfterActivation":true,"index":9,"hasDataBeenCollectedYet":true,"stackEffectType":14},{"entityId":8,"creatorCardId":286,"monsterToDieCardId":276,"stackEffectType":5,"killerId":286}]} 

 Player 2 15:32:39 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":1},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":9,"originStackId":5},"isAfterActivation":true,"index":9} 

 Player 2 15:32:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 rolled 5 vs Widow<Monster> \n3:Activate Euthanasia effect KillEntity<KillEntity> \n4:[object Object] killed by Isaac"} 

 Player 2 15:32:39 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[276],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":286,"effectCardPlayer":286},"entityId":7,"creatorCardId":286,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":164,"isAfterActivation":true,"index":9,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 15:32:39 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 2 15:32:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 rolled 5 vs Widow<Monster> \n3:[object Object] killed by Isaac"} 

 Player 2 15:32:39 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[276],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":286,"effectCardPlayer":286},"entityId":7,"creatorCardId":286,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":164,"isAfterActivation":true,"index":9,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 15:32:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Remove After Resolve ActivatePassiveEffect 7  "}} 

 Player 2 15:32:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 rolled 5 vs Widow<Monster> \n3:[object Object] killed by Isaac"} 

 Player 2 15:32:39 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[276],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":286,"effectCardPlayer":286},"entityId":7,"creatorCardId":286,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":164,"isAfterActivation":true,"index":9,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 15:32:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Response Remove After Resolve ActivatePassiveEffect 7"},"childOfId":47} 

 Player 2 15:32:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Wait For Response From Player 2 "},"childOfId":47} 

 Player 2 15:32:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:32:39 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 2 15:32:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Wait For Response From Player 1 "},"childOfId":47} 

 Player 2 15:32:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:32:39 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 15:32:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 is rolling against Widow<Monster> \n3:Activate Euthanasia "} 

 Player 1 15:32:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 is rolling against Widow<Monster> \n3:Activate Euthanasia "} 

 Player 1 15:32:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 is rolling against Widow<Monster> \n3:[object Object] killed by Isaac"} 

 Player 1 15:32:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 is rolling against Widow<Monster> \n3:[object Object] killed by Isaac"} 

 Player 1 15:32:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 is rolling against Widow<Monster> \n3:[object Object] killed by Isaac"} 

 Player 1 15:32:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 is rolling against Widow<Monster> \n3:[object Object] killed by Isaac"} 

 Player 1 15:32:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 is rolling against Widow<Monster> \n3:[object Object] killed by Isaac"} 

 Player 1 15:32:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 is rolling against Widow<Monster> \n3:[object Object] killed by Isaac"} 

 Player 1 15:32:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 is rolling against Widow<Monster> \n3:[object Object] killed by Isaac"} 

 Player 1 15:32:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 is rolling against Widow<Monster> \n3:[object Object] killed by Isaac"} 

 Player 1 15:32:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 is rolling against Widow<Monster> \n3:[object Object] killed by Isaac"} 

 Player 1 15:32:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 is rolling against Widow<Monster> \n3:[object Object] killed by Isaac"} 

 Player 1 15:32:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 is rolling against Widow<Monster> \n3:[object Object] killed by Isaac"} 

 Player 1 15:32:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 is rolling against Widow<Monster> \n3:[object Object] killed by Isaac"} 

 Player 1 15:32:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 is rolling against Widow<Monster> \n3:[object Object] killed by Isaac"} 

 Player 1 15:32:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 is rolling against Widow<Monster> \n3:[object Object] killed by Isaac"} 

 Player 1 15:32:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 is rolling against Widow<Monster> \n3:[object Object] killed by Isaac"} 

 Player 1 15:32:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 is rolling against Widow<Monster> \n3:[object Object] killed by Isaac"} 

 Player 1 15:32:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 is rolling against Widow<Monster> \n3:[object Object] killed by Isaac"} 

 Player 1 15:32:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 is rolling against Widow<Monster> \n3:[object Object] killed by Isaac"} 

 Player 1 15:32:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 is rolling against Widow<Monster> \n3:[object Object] killed by Isaac"} 

 Player 1 15:32:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 is rolling against Widow<Monster> \n3:[object Object] killed by Isaac"} 

 Player 1 15:32:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 is rolling against Widow<Monster> \n3:Activate Euthanasia  \n4:[object Object] killed by Isaac"} 

 Player 1 15:32:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 is rolling against Widow<Monster> \n3:Activate Euthanasia  \n4:[object Object] killed by Isaac"} 

 Player 1 15:32:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 is rolling against Widow<Monster> \n3:Activate Euthanasia  \n4:[object Object] killed by Isaac"} 

 Player 1 15:32:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 is rolling against Widow<Monster> \n3:Activate Euthanasia  \n4:[object Object] killed by Isaac"} 

 Player 1 15:32:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 is rolling against Widow<Monster> \n3:Activate Euthanasia  \n4:[object Object] killed by Isaac"} 

 Player 1 15:32:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 is rolling against Widow<Monster> \n3:Activate Euthanasia  \n4:[object Object] killed by Isaac"} 

 Player 1 15:32:40 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:32:40 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 2 15:32:40 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 2 15:32:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Resolve MonsterDeath 8 "}} 

 Player 2 15:32:40 $DISABLE_PARTICLE_EFFECT:  
{"cardId":276,"particleType":5} 

 Player 2 15:32:40 $CANCEL_ATTACK:  

 Player 2 15:32:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 5 vs Widow<Monster> \n2:[object Object] killed by Isaac"} 

 Player 2 15:32:40 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":286,"entityToDoDamageCardId":286,"entityToTakeDamageCardId":276,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 15:32:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Fizzle CombatDamage 6"}} 

 Player 2 15:32:40 $FIZZLE_STACK_EFFECT:  
{"entityId":6} 

 Player 2 15:32:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 2 15:32:40 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":286,"numberRolled":5,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":276}} 

 Player 2 15:32:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Fizzle AttackRoll 5"}} 

 Player 2 15:32:40 $FIZZLE_STACK_EFFECT:  
{"entityId":5} 

 Player 2 15:32:40 $NEXT_STACK_ID:  

 Player 2 15:32:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 2 15:32:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:32:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Widow<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 15:32:40 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":286,"monsterCardWithRewardId":276,"playerCardIdToReward":286,"stackEffectType":7}} 

 Player 2 15:32:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Widow<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 15:32:41 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":286,"monsterToDieCardId":276,"stackEffectType":5,"killerId":286}} 

 Player 2 15:32:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Widow<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 15:32:41 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":286,"monsterCardWithRewardId":276,"playerCardIdToReward":286,"stackEffectType":7}} 

 Player 2 15:32:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Widow<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 15:32:41 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":286,"monsterToDieCardId":276,"stackEffectType":5,"killerId":286}} 

 Player 2 15:32:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Widow<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 15:32:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Widow<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 15:32:41 $REPLACE_STACK:  
{"currentStack":[{"entityId":9,"creatorCardId":286,"monsterCardWithRewardId":276,"playerCardIdToReward":286,"stackEffectType":7},{"entityId":8,"creatorCardId":286,"monsterToDieCardId":276,"stackEffectType":5,"killerId":286}]} 

 Player 2 15:32:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Widow<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 15:32:41 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":286,"monsterToDieCardId":276,"stackEffectType":5,"killerId":286}} 

 Player 2 15:32:41 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 2 15:32:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Widow<Monster> reward"} 

 Player 2 15:32:41 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":286,"monsterToDieCardId":276,"stackEffectType":5,"killerId":286}} 

 Player 2 15:32:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Remove After Resolve MonsterDeath 8  "}} 

 Player 2 15:32:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Widow<Monster> reward"} 

 Player 2 15:32:41 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":8,"creatorCardId":286,"monsterToDieCardId":276,"stackEffectType":5,"killerId":286}} 

 Player 2 15:32:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Response Remove After Resolve MonsterDeath 8"},"childOfId":54} 

 Player 2 15:32:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":56,"_text":"Wait For Response From Player 2 "},"childOfId":54} 

 Player 2 15:32:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:32:41 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 2 15:32:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":57,"_text":"Wait For Response From Player 1 "},"childOfId":54} 

 Player 2 15:32:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:32:41 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 2 15:32:41 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 1 15:32:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 is rolling against Widow<Monster> \n3:[object Object] killed by Isaac"} 

 Player 1 15:32:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 2 is rolling against Widow<Monster> \n3:[object Object] killed by Isaac"} 

 Player 1 15:32:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Widow<Monster> \n2:[object Object] killed by Isaac"} 

 Player 1 15:32:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Widow<Monster> \n2:[object Object] killed by Isaac"} 

 Player 1 15:32:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 15:32:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 15:32:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Widow<Monster> reward"} 

 Player 1 15:32:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Widow<Monster> reward"} 

 Player 1 15:32:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Widow<Monster> reward"} 

 Player 1 15:32:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Widow<Monster> reward"} 

 Player 1 15:32:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Widow<Monster> reward"} 

 Player 1 15:32:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Widow<Monster> reward"} 

 Player 1 15:32:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Widow<Monster> reward"} 

 Player 1 15:32:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Widow<Monster> reward"} 

 Player 1 15:32:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Widow<Monster> reward"} 

 Player 1 15:32:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Widow<Monster> reward"} 

 Player 1 15:32:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Widow<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 1 15:32:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Widow<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 1 15:32:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Widow<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 1 15:32:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Widow<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 1 15:32:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Widow<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 1 15:32:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Widow<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 1 15:32:42 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:32:42 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 2 15:32:42 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 2 15:32:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":58,"_text":"Resolve MonsterRewardStackEffect 9 "}} 

 Player 2 15:32:42 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:32:42 $MOVE_CARD:  
{"moveIndex":10,"cardId":78,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:32:42 $MOVE_CARD_END:  
{"moveIndex":10,"cardId":78,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:32:42 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":78} 

 Player 2 15:32:42 $FLIP_CARD:  
{"cardId":78} 

 Player 2 15:32:42 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":78} 

 Player 2 15:32:42 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:32:42 $MOVE_CARD:  
{"moveIndex":11,"cardId":111,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:32:43 $MOVE_CARD_END:  
{"moveIndex":11,"cardId":111,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:32:43 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":111} 

 Player 2 15:32:43 $FLIP_CARD:  
{"cardId":111} 

 Player 2 15:32:43 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":111} 

 Player 2 15:32:43 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":false,"index":10,"originStackId":9},"isAfterActivation":true,"index":10} 

 Player 2 15:32:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:32:43 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 15:32:43 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 15:32:43 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 15:32:43 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 15:32:43 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 15:32:43 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 15:32:43 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 15:32:43 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 15:32:43 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 15:32:43 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 15:32:43 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 15:32:43 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 15:32:43 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 15:32:43 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 15:32:43 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 2 15:32:43 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 15:32:43 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 2 15:32:43 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 15:32:43 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 2 15:32:43 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 15:32:44 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 2 15:32:44 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 2 15:32:44 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 2 15:32:44 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 2 15:32:44 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 2 15:32:44 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 2 15:32:44 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 2 15:32:44 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 2 15:32:44 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 2 15:32:44 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:32:44 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":286,"monsterCardWithRewardId":276,"playerCardIdToReward":286,"stackEffectType":7}} 

 Player 2 15:32:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":59,"_text":"Fizzle MonsterRewardStackEffect 9"}} 

 Player 2 15:32:44 $FIZZLE_STACK_EFFECT:  
{"entityId":9} 

 Player 2 15:32:44 $MOVE_CARD:  
{"moveIndex":12,"cardId":276,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"soulsLayout"} 

 Player 2 15:32:44 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 2 15:32:44 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 2 15:32:44 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 1 15:32:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Widow<Monster> reward"} 

 Player 1 15:32:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Widow<Monster> reward"} 

 Player 1 15:32:44 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 15:32:44 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:32:44 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 15:32:44 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 15:32:44 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 15:32:44 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 15:32:44 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 15:32:44 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 15:32:44 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 15:32:44 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 15:32:44 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 15:32:44 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 15:32:44 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 15:32:44 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 15:32:44 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 15:32:44 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 15:32:44 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 1 15:32:44 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 15:32:45 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 1 15:32:45 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 1 15:32:45 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 1 15:32:45 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 1 15:32:45 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 1 15:32:45 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 1 15:32:45 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 1 15:32:45 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 1 15:32:45 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 1 15:32:45 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 1 15:32:45 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 1 15:32:45 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 1 15:32:45 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 1 15:32:45 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 1 15:32:45 $MOVE_CARD_END:  
{"moveIndex":12,"cardId":276,"flipIfFlipped":true,"playerId":2} 

 Player 2 15:32:45 $GET_SOUL:  
{"playerId":2,"cardId":276} 

 Player 2 15:32:45 $REMOVE_MONSTER:  
{"holderId":1,"monsterId":276} 

 Player 2 15:32:45 $NEXT_STACK_ID:  

 Player 2 15:32:45 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:32:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 2 15:32:45 $ADD_TO_STACK:  
{"stackEffect":{"entityId":10,"creatorCardId":286,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 2 15:32:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 2 15:32:45 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":286,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 2 15:32:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":60,"_text":"Add RefillEmptySlot 10 "}} 

 Player 2 15:32:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:32:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 2 15:32:45 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":286,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 2 15:32:45 $ACTION_MASSAGE_REMOVE:  
{"id":60} 

 Player 2 15:32:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":61,"_text":"Response Adding RefillEmptySlot 10"},"childOfId":60} 

 Player 2 15:32:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":62,"_text":"Wait For Response From Player 2 "},"childOfId":60} 

 Player 2 15:32:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:32:45 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 2 15:32:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":63,"_text":"Wait For Response From Player 1 "},"childOfId":60} 

 Player 2 15:32:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:32:45 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 15:32:45 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:32:45 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:32:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 1 15:32:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 1 15:32:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 1 15:32:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 1 15:32:46 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:32:46 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 2 15:32:46 $ACTION_MASSAGE_REMOVE:  
{"id":61} 

 Player 2 15:32:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":64,"_text":"Resolve RefillEmptySlot 10 "}} 

 Player 2 15:32:46 $DRAW_CARD:  
{"deckType":2} 

 Player 2 15:32:46 $FLIP_CARD:  
{"cardId":235} 

 Player 2 15:32:46 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":235} 

 Player 2 15:32:46 $NEW_MONSTER_ON_PLACE:  
{"cardId":235,"monsterPlaceId":1} 

 Player 2 15:32:46 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 2 15:32:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:32:46 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":286,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 2 15:32:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":65,"_text":"Remove After Resolve RefillEmptySlot 10  "}} 

 Player 2 15:32:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:32:46 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":10,"creatorCardId":286,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 2 15:32:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":66,"_text":"Response Remove After Resolve RefillEmptySlot 10"},"childOfId":65} 

 Player 2 15:32:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":67,"_text":"Wait For Response From Player 1 "},"childOfId":65} 

 Player 2 15:32:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:32:46 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 2 15:32:46 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 1 15:32:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 1 15:32:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 1 15:32:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 1 15:32:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 1 15:32:46 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:32:46 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 2 15:32:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":68,"_text":"Wait For Response From Player 2 "},"childOfId":65} 

 Player 2 15:32:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:32:46 $ACTION_MASSAGE_REMOVE:  
{"id":68} 

 Player 2 15:32:46 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 2 15:32:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":69,"_text":"Stack Was Emptied "}} 

 Player 2 15:32:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:32:46 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 15:32:46 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 15:32:46 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 15:32:47 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 15:32:47 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 15:32:47 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 15:32:47 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 15:32:47 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 15:32:47 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 15:32:47 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 15:32:47 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 15:32:47 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 15:32:47 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 15:32:47 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 15:32:47 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 2 15:32:47 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 15:32:47 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 2 15:32:47 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 15:32:47 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 2 15:32:47 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 15:32:47 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 2 15:32:47 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 2 15:32:47 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 2 15:32:47 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 2 15:32:47 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 2 15:32:47 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 2 15:32:47 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 2 15:32:47 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 2 15:32:47 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 2 15:32:47 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 2 15:32:47 $ACTION_MASSAGE_REMOVE:  
{"id":60} 

 Player 2 15:32:47 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 2 15:32:47 $ACTION_MASSAGE_REMOVE:  
{"id":65} 

 Player 2 15:32:47 $ACTION_MASSAGE_REMOVE:  
{"id":69} 

 Player 2 15:32:47 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 2 15:32:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":70,"_text":"Stack Was Emptied "}} 

 Player 2 15:32:47 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:32:47 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 15:32:47 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 15:32:47 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 15:32:47 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 15:32:47 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 15:32:47 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 15:32:48 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 15:32:48 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 15:32:48 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 15:32:48 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 15:32:48 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 15:32:48 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 15:32:48 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 15:32:48 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 15:32:48 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 2 15:32:48 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 15:32:48 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 2 15:32:48 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 15:32:48 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 2 15:32:48 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 15:32:48 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 2 15:32:48 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 2 15:32:48 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 2 15:32:48 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 2 15:32:48 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 2 15:32:48 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 2 15:32:48 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 2 15:32:48 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 2 15:32:48 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 2 15:32:48 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 2 15:32:48 $ACTION_MASSAGE_REMOVE:  
{"id":60} 

 Player 2 15:32:48 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 2 15:32:48 $ACTION_MASSAGE_REMOVE:  
{"id":65} 

 Player 2 15:32:48 $ACTION_MASSAGE_REMOVE:  
{"id":69} 

 Player 2 15:32:48 $ACTION_MASSAGE_REMOVE:  
{"id":70} 

 Player 2 15:32:48 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 15:32:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":71,"_text":"Stack Was Emptied "}} 

 Player 2 15:32:48 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:32:48 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 15:32:48 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 15:32:48 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 15:32:48 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 15:32:48 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 15:32:48 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 15:32:48 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 15:32:48 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 15:32:48 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 15:32:49 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 15:32:49 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 15:32:49 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 15:32:49 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 15:32:49 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 15:32:49 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 2 15:32:49 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 15:32:49 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 2 15:32:49 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 15:32:49 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 2 15:32:49 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 15:32:49 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 2 15:32:49 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 2 15:32:49 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 2 15:32:49 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 2 15:32:49 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 2 15:32:49 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 2 15:32:49 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 2 15:32:49 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 2 15:32:49 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 2 15:32:49 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 2 15:32:49 $ACTION_MASSAGE_REMOVE:  
{"id":60} 

 Player 2 15:32:49 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 2 15:32:49 $ACTION_MASSAGE_REMOVE:  
{"id":65} 

 Player 2 15:32:49 $ACTION_MASSAGE_REMOVE:  
{"id":69} 

 Player 2 15:32:49 $ACTION_MASSAGE_REMOVE:  
{"id":70} 

 Player 2 15:32:49 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 2 15:32:49 $ACTION_MASSAGE_REMOVE:  
{"id":69} 

 Player 2 15:32:49 $ACTION_MASSAGE_REMOVE:  
{"id":70} 

 Player 2 15:32:49 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 2 15:32:49 $ACTION_MASSAGE_REMOVE:  
{"id":65} 

 Player 2 15:50:41 $MATCH: 