Start Log 

 Player 1 15:05:43 $MATCH:  

 Player 1 15:05:44 $START_GAME:  

 Player 1 15:05:44 $MOVE_TO_TABLE:  

 Player 2 15:05:44 $MOVE_TO_TABLE:  

 Player 2 15:05:52 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 1 15:05:52 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 15:05:52 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":276,"itemCardId":277} 

 Player 2 15:05:52 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":263}],"result":true,"preventMethod":false,"methodScopeId":262,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 15:05:52 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":262,"itemCardId":263} 

 Player 2 15:05:52 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[121,65,142,69,76,70,14,133,85,13,130,62,110,126,107,86,95,116,58,125,52,81,143,64,105,28,12,68,61,8,36,92,57,136,111,23,21,100,33,7,113,132,54,46,140,96,122,134,43,22,17,127,47,37,42,66,9,53,106,25,129,38,56,24,103,72,77,73,137,71,118,39,135,115,10,138,20,34,141,31,119,84,80,45,98,90,82,89,109,15,35,60,75,16,112,83,55,93,124,131,87,44,27,91,94,114,41,29,74,117,63,101,67,123,18,139,78,59,48,50,108,97,88,19,26,49,32,120,99,11,51,40,128,104,102,79,30]} 

 Player 2 15:05:52 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[233,234,228,246,214,256,209,237,253,207,242,206,211,213,220,238,259,217,251,235,208,248,245,249,212,219,224,221,250,210,241,231,226,255,247,232,252,254,229,222,218,230,236,227,243,225,244,258,240,216,223,239,257,215]} 

 Player 2 15:05:52 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[202,157,185,169,184,152,190,177,176,147,191,203,165,175,170,197,188,193,168,156,189,194,159,179,200,173,171,187,160,192,162,163,155,196,166,174,172,153,148,164,198,167,181,182,151,158,149,178,186,195,146,154,150,161,180,201,183,199]} 

 Player 2 15:05:52 $DRAW_CARD:  
{"deckType":5} 

 Player 2 15:05:52 $FLIP_CARD:  
{"cardId":199} 

 Player 2 15:05:52 $ADD_STORE_CARD:  
{"cardId":199} 

 Player 2 15:05:52 $DRAW_CARD:  
{"deckType":5} 

 Player 2 15:05:52 $FLIP_CARD:  
{"cardId":183} 

 Player 2 15:05:52 $ADD_STORE_CARD:  
{"cardId":183} 

 Player 2 15:05:52 $DRAW_CARD:  
{"deckType":2} 

 Player 2 15:05:52 $FLIP_CARD:  
{"cardId":215} 

 Player 2 15:05:52 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":215} 

 Player 2 15:05:52 $NEW_MONSTER_ON_PLACE:  
{"cardId":215,"monsterPlaceId":1} 

 Player 2 15:05:52 $DRAW_CARD:  
{"deckType":2} 

 Player 2 15:05:52 $FLIP_CARD:  
{"cardId":257} 

 Player 2 15:05:52 $REGISTER_PASSIVE_ITEM:  
{"cardId":257} 

 Player 2 15:05:52 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":257} 

 Player 2 15:05:52 $NEW_MONSTER_ON_PLACE:  
{"cardId":257,"monsterPlaceId":2} 

 Player 2 15:05:52 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 15:05:53 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 15:05:53 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:05:53 $MOVE_CARD:  
{"moveIndex":1,"cardId":30,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:05:53 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":277}],"result":true,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 15:05:53 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":30,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:05:53 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":30} 

 Player 2 15:05:53 $FLIP_CARD:  
{"cardId":30} 

 Player 2 15:05:53 $FLIP_CARD:  
{"cardId":30} 

 Player 2 15:05:53 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":30} 

 Player 2 15:05:53 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:05:53 $MOVE_CARD:  
{"moveIndex":2,"cardId":79,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:05:53 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":79,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:05:53 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":79} 

 Player 2 15:05:53 $FLIP_CARD:  
{"cardId":79} 

 Player 2 15:05:54 $FLIP_CARD:  
{"cardId":79} 

 Player 2 15:05:54 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":79} 

 Player 2 15:05:54 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:05:54 $MOVE_CARD:  
{"moveIndex":3,"cardId":102,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:05:54 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":102,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:05:54 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":102} 

 Player 2 15:05:54 $FLIP_CARD:  
{"cardId":102} 

 Player 2 15:05:54 $FLIP_CARD:  
{"cardId":102} 

 Player 2 15:05:54 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":102} 

 Player 2 15:05:54 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 15:05:54 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":262,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 15:05:54 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:05:54 $MOVE_CARD:  
{"moveIndex":4,"cardId":104,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:05:54 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":104,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:05:55 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":104} 

 Player 2 15:05:55 $FLIP_CARD:  
{"cardId":104} 

 Player 2 15:05:55 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":104} 

 Player 2 15:05:55 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:05:55 $MOVE_CARD:  
{"moveIndex":5,"cardId":128,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:05:55 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":128,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:05:55 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":128} 

 Player 2 15:05:55 $FLIP_CARD:  
{"cardId":128} 

 Player 2 15:05:55 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":128} 

 Player 2 15:05:55 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:05:55 $MOVE_CARD:  
{"moveIndex":6,"cardId":40,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:05:55 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":40,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:05:55 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":40} 

 Player 2 15:05:55 $FLIP_CARD:  
{"cardId":40} 

 Player 2 15:05:56 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":40} 

 Player 2 15:05:56 $GAME_HAS_STARTED:  

 Player 2 15:05:56 $SET_TURN:  
{"playerId":1} 

 Player 2 15:05:56 $START_TURN:  
{"playerId":1} 

 Player 2 15:05:56 $UPDATE_ACTIONS:  

 Player 1 15:05:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:05:56 $NEXT_STACK_ID:  

 Player 1 15:05:56 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:05:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 15:05:56 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":276,"turnPlayerCardId":276,"stackEffectType":13}} 

 Player 1 15:05:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 1 15:05:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:05:56 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 15:05:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 15:05:56 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":276,"turnPlayerCardId":276,"stackEffectType":13}} 

 Player 1 15:05:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 1 15:05:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 1 15:05:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:05:56 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 15:05:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 1 15:05:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 15:05:56 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 15:05:56 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:05:56 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:05:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 15:05:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 15:05:56 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 15:05:56 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 15:05:56 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 15:05:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 1 15:05:56 $DRAW_CARD:  
{"deckType":1} 

 Player 1 15:05:56 $MOVE_CARD:  
{"moveIndex":7,"cardId":51,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 15:05:57 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":51,"flipIfFlipped":false,"playerId":1} 

 Player 1 15:05:57 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":51} 

 Player 1 15:05:57 $FLIP_CARD:  
{"cardId":51} 

 Player 1 15:05:57 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":51} 

 Player 1 15:05:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 15:05:57 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":276,"turnPlayerCardId":276,"stackEffectType":13}} 

 Player 1 15:05:57 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 15:05:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 1 15:05:57 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:05:57 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":276,"turnPlayerCardId":276,"stackEffectType":13}} 

 Player 1 15:05:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 1 15:05:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 1 15:05:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 15:05:57 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 15:05:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 15:05:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 15:05:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 15:05:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 15:05:57 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 15:05:57 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 1 15:05:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 1 15:05:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:05:57 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 1 15:05:57 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 1 15:05:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 1 15:05:57 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:05:57 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 15:05:57 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 15:05:57 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 15:05:57 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 15:05:57 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 15:05:57 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 15:05:57 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 15:05:59 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 15:06:00 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 15:06:03 $MOVE_CARD:  
{"moveIndex":8,"cardId":157,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Hand"} 

 Player 2 15:06:03 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":157,"flipIfFlipped":true,"playerId":1} 

 Player 1 15:06:03 $REGISTER_PASSIVE_ITEM:  
{"cardId":157} 

 Player 1 15:06:03 $MOVE_CARD:  
{"moveIndex":9,"cardId":157,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 

 Player 2 15:06:04 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":157,"flipIfFlipped":true,"playerId":1} 

 Player 1 15:06:04 $ADD_AN_ITEM:  
{"playerId":1,"cardId":157,"isReward":true} 

 Player 1 15:06:04 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":157}],"result":true,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 1 15:06:06 $NEXT_STACK_ID:  

 Player 1 15:06:06 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:06:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on War"} 

 Player 1 15:06:06 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":276,"attackingPlayerCardId":276,"idOfCardBeingAttacked":257,"stackEffectType":4}} 

 Player 1 15:06:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add DeclareAttack 2 "}} 

 Player 1 15:06:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:06:06 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 15:06:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on War"} 

 Player 1 15:06:06 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":276,"attackingPlayerCardId":276,"idOfCardBeingAttacked":257,"stackEffectType":4}} 

 Player 1 15:06:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding DeclareAttack 2"},"childOfId":10} 

 Player 1 15:06:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 1 15:06:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:06:06 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 1 15:06:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 1 15:06:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 15:06:06 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 15:06:06 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:06:06 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:06:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on War"} 

 Player 2 15:06:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on War"} 

 Player 2 15:06:07 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 15:06:07 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 1 15:06:07 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 1 15:06:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve DeclareAttack 2 "}} 

 Player 1 15:06:07 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":257,"particleType":5} 

 Player 1 15:06:07 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":3,"originStackId":2},"isAfterActivation":true,"index":3} 

 Player 1 15:06:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on War"} 

 Player 1 15:06:07 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":276,"attackingPlayerCardId":276,"idOfCardBeingAttacked":257,"stackEffectType":4}} 

 Player 1 15:06:07 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 15:06:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve DeclareAttack 2  "}} 

 Player 1 15:06:07 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:06:07 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":276,"attackingPlayerCardId":276,"idOfCardBeingAttacked":257,"stackEffectType":4}} 

 Player 1 15:06:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve DeclareAttack 2"},"childOfId":15} 

 Player 1 15:06:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 1 15:06:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 15:06:07 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 15:06:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on War"} 

 Player 2 15:06:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on War"} 

 Player 2 15:06:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on War"} 

 Player 2 15:06:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on War"} 

 Player 2 15:06:07 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 15:06:07 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 1 15:06:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 1 15:06:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:06:07 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 1 15:06:07 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 1 15:06:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 1 15:06:07 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:06:07 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 15:06:07 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 15:06:07 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 15:06:07 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 15:06:08 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 15:06:08 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 15:06:08 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 15:06:08 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 15:06:08 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 15:06:08 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 15:06:08 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 15:06:08 $NEXT_STACK_ID:  

 Player 1 15:06:08 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:06:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against War<Monster>"} 

 Player 1 15:06:08 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":276,"rollingPlayerCardId":276,"stackEffectType":2,"attackedMonsterCardId":257}} 

 Player 1 15:06:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add AttackRoll 3 "}} 

 Player 1 15:06:08 $ROLL_DICE:  
{"playerId":1} 

 Player 2 15:06:08 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:06:08 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:06:09 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 15:06:10 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 15:06:10 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":3} 

 Player 1 15:06:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 3 vs War<Monster>"} 

 Player 1 15:06:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:06:10 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 15:06:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 3 vs War<Monster>"} 

 Player 1 15:06:10 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":276,"numberRolled":3,"rollingPlayerCardId":276,"stackEffectType":2,"attackedMonsterCardId":257}} 

 Player 1 15:06:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding AttackRoll 3"},"childOfId":20} 

 Player 1 15:06:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 1 15:06:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:06:10 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 1 15:06:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 1 15:06:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 15:06:10 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 15:06:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against War<Monster>"} 

 Player 2 15:06:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against War<Monster>"} 

 Player 2 15:06:11 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 15:06:11 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 1 15:06:11 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 1 15:06:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve AttackRoll 3 "}} 

 Player 1 15:06:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Added 0 to original roll"}} 

 Player 1 15:06:11 $NEXT_STACK_ID:  

 Player 1 15:06:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 3 vs War<Monster>"} 

 Player 1 15:06:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:06:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to The Lost \n2:Player 1 rolled 3 vs War<Monster>"} 

 Player 1 15:06:11 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":276,"entityToDoDamageCardId":257,"entityToTakeDamageCardId":276,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 15:06:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to The Lost \n2:Player 1 rolled 3 vs War<Monster>"} 

 Player 1 15:06:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to The Lost \n2:Player 1 rolled 3 vs War<Monster>"} 

 Player 1 15:06:11 $REPLACE_STACK:  
{"currentStack":[{"entityId":4,"creatorCardId":276,"entityToDoDamageCardId":257,"entityToTakeDamageCardId":276,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":3,"creatorCardId":276,"numberRolled":3,"rollingPlayerCardId":276,"stackEffectType":2,"attackedMonsterCardId":257}]} 

 Player 1 15:06:11 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":4,"originStackId":3},"isAfterActivation":true,"index":4} 

 Player 1 15:06:11 $NEXT_STACK_ID:  

 Player 1 15:06:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to The Lost \n2:Player 1 rolled 3 vs War<Monster>"} 

 Player 1 15:06:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to The Lost \n2:Player 1 rolled 3 vs War<Monster> \n3:Activate Dads Lost Coin effect Reroll Dice Passive<Reroll Dice Passive>"} 

 Player 1 15:06:11 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":5,"creatorCardId":276,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":157,"effectToDo":{"effectName":"RerollDicePassive","cardEffectNum":0,"cardPlayerId":1,"cardId":157,"effctType":0},"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 15:06:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Add ActivatePassiveEffect 5 "}} 

 Player 1 15:06:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to The Lost \n2:Player 1 rolled 3 vs War<Monster> \n3:Activate Dads Lost Coin effect Reroll Dice Passive<Reroll Dice Passive>"} 

 Player 1 15:06:11 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 1 15:06:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to The Lost \n2:Player 1 rolled 3 vs War<Monster> \n3:Activate Dads Lost Coin effect Reroll Dice Passive<Reroll Dice Passive>"} 

 Player 1 15:06:11 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[276],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":276,"effectCardPlayer":276},"entityId":5,"creatorCardId":276,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":157,"effectToDo":{"effectName":"RerollDicePassive","cardEffectNum":0,"cardPlayerId":1,"cardId":157,"effctType":0},"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 15:06:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Response Adding ActivatePassiveEffect 5"},"childOfId":26} 

 Player 1 15:06:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 1 "},"childOfId":26} 

 Player 1 15:06:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:06:11 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 1 15:06:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Wait For Response From Player 2 "},"childOfId":26} 

 Player 1 15:06:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 15:06:11 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 15:06:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against War<Monster>"} 

 Player 2 15:06:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against War<Monster>"} 

 Player 2 15:06:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to The Lost"} 

 Player 2 15:06:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to The Lost"} 

 Player 2 15:06:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to The Lost"} 

 Player 2 15:06:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to The Lost"} 

 Player 2 15:06:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to The Lost \n2:Player 1 is rolling against War<Monster>"} 

 Player 2 15:06:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to The Lost \n2:Player 1 is rolling against War<Monster>"} 

 Player 2 15:06:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to The Lost \n2:Player 1 is rolling against War<Monster> \n3:Activate Dads Lost Coin "} 

 Player 2 15:06:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to The Lost \n2:Player 1 is rolling against War<Monster> \n3:Activate Dads Lost Coin "} 

 Player 2 15:06:12 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 15:06:12 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 1 15:06:12 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 1 15:06:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Resolve ActivatePassiveEffect 5 "}} 

 Player 1 15:06:12 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":157,"particleType":6} 

 Player 1 15:06:14 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 15:06:14 $DISABLE_PARTICLE_EFFECT:  
{"cardId":157,"particleType":6} 

 Player 1 15:06:16 $ROLL_DICE:  
{"playerId":1} 

 Player 1 15:06:18 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":3} 

 Player 1 15:06:18 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":3},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":false,"index":4,"originStackId":3},"isAfterActivation":true,"index":4} 

 Player 1 15:06:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to The Lost \n2:Player 1 rolled 3 vs War<Monster> \n3:Activate Dads Lost Coin effect Reroll Dice Passive<Reroll Dice Passive>"} 

 Player 1 15:06:18 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[276],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":276,"effectCardPlayer":276},"entityId":5,"creatorCardId":276,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":157,"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 15:06:18 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 15:06:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Remove After Resolve ActivatePassiveEffect 5  "}} 

 Player 1 15:06:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to The Lost \n2:Player 1 rolled 3 vs War<Monster>"} 

 Player 1 15:06:18 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[276],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":276,"effectCardPlayer":276},"entityId":5,"creatorCardId":276,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":157,"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 15:06:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Response Remove After Resolve ActivatePassiveEffect 5"},"childOfId":31} 

 Player 1 15:06:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 2 "},"childOfId":31} 

 Player 1 15:06:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 15:06:18 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 15:06:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to The Lost \n2:Player 1 is rolling against War<Monster> \n3:Activate Dads Lost Coin "} 

 Player 2 15:06:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to The Lost \n2:Player 1 is rolling against War<Monster> \n3:Activate Dads Lost Coin "} 

 Player 2 15:06:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to The Lost \n2:Player 1 is rolling against War<Monster> \n3:Activate Dads Lost Coin "} 

 Player 2 15:06:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to The Lost \n2:Player 1 is rolling against War<Monster> \n3:Activate Dads Lost Coin "} 

 Player 2 15:06:18 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 15:06:18 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 1 15:06:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Wait For Response From Player 1 "},"childOfId":31} 

 Player 1 15:06:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:06:19 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 1 15:06:19 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 1 15:06:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Resolve AttackRoll 3 "}} 

 Player 1 15:06:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to The Lost \n2:Player 1 rolled 3 vs War<Monster>"} 

 Player 1 15:06:19 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":276,"numberRolled":3,"rollingPlayerCardId":276,"stackEffectType":2,"attackedMonsterCardId":257}} 

 Player 1 15:06:19 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 15:06:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Remove After Resolve AttackRoll 3  "}} 

 Player 1 15:06:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to The Lost"} 

 Player 1 15:06:19 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":276,"numberRolled":3,"rollingPlayerCardId":276,"stackEffectType":2,"attackedMonsterCardId":257}} 

 Player 1 15:06:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Response Remove After Resolve AttackRoll 3"},"childOfId":36} 

 Player 1 15:06:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 1 "},"childOfId":36} 

 Player 1 15:06:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:06:19 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 1 15:06:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Wait For Response From Player 2 "},"childOfId":36} 

 Player 1 15:06:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 15:06:19 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 15:06:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to The Lost \n2:Player 1 is rolling against War<Monster>"} 

 Player 2 15:06:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to The Lost \n2:Player 1 is rolling against War<Monster>"} 

 Player 2 15:06:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to The Lost \n2:Player 1 is rolling against War<Monster>"} 

 Player 2 15:06:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to The Lost \n2:Player 1 is rolling against War<Monster>"} 

 Player 2 15:06:19 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 15:06:19 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 1 15:06:19 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 1 15:06:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Resolve CombatDamage 4 "}} 

 Player 1 15:06:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War 1 combat damage to The Lost"} 

 Player 1 15:06:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War 1 combat damage to The Lost"} 

 Player 1 15:06:19 $PLAYER_GET_HIT:  
{"playerId":1,"damage":1,"damageDealerId":257} 

 Player 1 15:06:19 $NEXT_STACK_ID:  

 Player 1 15:06:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War 1 combat damage to The Lost"} 

 Player 1 15:06:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:06:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War 1 combat damage to The Lost \n2:Player 1 is about to die"} 

 Player 1 15:06:19 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":276,"playerToDieCardId":276,"stackEffectType":15,"killerId":257}} 

 Player 1 15:06:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War 1 combat damage to The Lost \n2:Player 1 is about to die"} 

 Player 1 15:06:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War 1 combat damage to The Lost \n2:Player 1 is about to die"} 

 Player 1 15:06:19 $REPLACE_STACK:  
{"currentStack":[{"entityId":4,"creatorCardId":276,"entityToDoDamageCardId":257,"entityToTakeDamageCardId":276,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":6,"creatorCardId":276,"playerToDieCardId":276,"stackEffectType":15,"killerId":257}]} 

 Player 1 15:06:19 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":257}],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 1 15:06:19 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 1 15:06:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Remove After Resolve CombatDamage 4  "}} 

 Player 1 15:06:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 1 15:06:20 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":276,"entityToDoDamageCardId":257,"entityToTakeDamageCardId":276,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 15:06:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Response Remove After Resolve CombatDamage 4"},"childOfId":41} 

 Player 1 15:06:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 1 "},"childOfId":41} 

 Player 1 15:06:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:06:20 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 1 15:06:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Wait For Response From Player 2 "},"childOfId":41} 

 Player 1 15:06:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 15:06:20 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 15:06:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to The Lost"} 

 Player 2 15:06:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to The Lost"} 

 Player 2 15:06:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 15:06:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 15:06:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 15:06:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 15:06:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to The Lost \n2:Player 1 is about to die"} 

 Player 2 15:06:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to The Lost \n2:Player 1 is about to die"} 

 Player 2 15:06:20 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 15:06:20 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 1 15:06:20 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 1 15:06:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Resolve PlayerDeath 6 "}} 

 Player 1 15:06:20 $DISABLE_PARTICLE_EFFECT:  
{"cardId":257,"particleType":5} 

 Player 1 15:06:20 $CANCEL_ATTACK:  

 Player 1 15:06:20 $NEXT_STACK_ID:  

 Player 1 15:06:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 1 15:06:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:06:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 15:06:20 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":276,"playerToPayCardId":276,"stackEffectType":16}} 

 Player 1 15:06:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 15:06:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 15:06:20 $REPLACE_STACK:  
{"currentStack":[{"entityId":6,"creatorCardId":276,"playerToDieCardId":276,"stackEffectType":15,"killerId":257},{"entityId":7,"creatorCardId":276,"playerToPayCardId":276,"stackEffectType":16}]} 

 Player 1 15:06:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 15:06:20 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":276,"playerToDieCardId":276,"stackEffectType":15,"killerId":257}} 

 Player 1 15:06:20 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 1 15:06:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Remove After Resolve PlayerDeath 6  "}} 

 Player 1 15:06:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 1 15:06:21 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":276,"playerToDieCardId":276,"stackEffectType":15,"killerId":257}} 

 Player 1 15:06:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Response Remove After Resolve PlayerDeath 6"},"childOfId":46} 

 Player 1 15:06:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Wait For Response From Player 1 "},"childOfId":46} 

 Player 1 15:06:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:06:21 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 1 15:06:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Wait For Response From Player 2 "},"childOfId":46} 

 Player 1 15:06:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 15:06:21 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 15:06:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 15:06:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 15:06:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 15:06:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 15:06:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 15:06:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 15:06:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 2 15:06:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 2 15:06:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 2 15:06:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 2 15:06:21 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 15:06:21 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 1 15:06:21 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 1 15:06:21 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 1 15:06:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Resolve PlayerDeathPenalties 7 "}} 

 Player 1 15:06:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Player 1 pays Penalties"}} 

 Player 1 15:06:21 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 1 15:06:22 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 1 15:06:23 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 2 15:10:13 $MATCH: 