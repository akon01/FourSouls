Start Log 
 Player 2 16:11:21 $MOVE_TO_TABLE:  
 Player 2 16:11:30 $FINISH_LOAD:  

 {"id":2,"turnPlayerId":2} 
 Player 2 16:11:30 $SET_CHAR:  

 {"originPlayerId":2,"playerId":1,"charCardId":317,"itemCardId":318} 
 Player 2 16:11:30 $ASSIGN_CHAR_TO_PLAYER:  

 {"playerId":2,"charCardId":323,"itemCardId":324} 
 Player 2 16:11:31 $DECK_ARRAGMENT:  

 {"deckType":1,"arrangement":[63,89,42,118,69,46,96,91,11,110,134,70,121,45,31,48,58,135,57,62,33,9,100,28,108,99,104,83,94,44,79,132,16,67,5,66,32,19,51,23,39,103,117,47,126,87,53,73,124,136,56,13,29,95,25,137,86,80,102,133,84,64,20,81,30,98,97,8,22,38,18,14,138,4,17,112,111,120,129,65,115,88,76,37,10,119,7,55,105,125,35,107,24,116,43,21,82,36,113,122,75,93,15,78,127,77,41,101,6,54,109,90,71,50,34,92,52,139,130,128,40,72,60,61,123,59,12,49,74,68,26,27,106,131,114,85]} 
 Player 2 16:11:31 $DECK_ARRAGMENT:  

 {"deckType":2,"arrangement":[248,222,266,239,278,276,245,297,252,243,270,299,295,288,223,242,264,267,235,273,308,287,258,256,271,228,277,294,246,230,307,279,233,265,281,290,263,262,234,251,225,237,255,283,229,296,261,302,227,244,284,254,236,306,293,232,301,260,249,231,226,292,257,298,300,274,286,253,282,285,247,259,241,238,240,291,250,289,305,303,268,280,269,224,304,275,272]} 
 Player 2 16:11:31 $DECK_ARRAGMENT:  

 {"deckType":5,"arrangement":[202,200,163,173,201,151,204,174,178,189,211,208,212,169,205,180,145,191,187,160,156,158,192,209,141,182,218,153,190,159,154,149,146,214,185,142,150,176,194,196,171,210,143,166,168,203,215,206,172,207,162,177,144,184,179,157,165,181,219,175,161,195,148,186,155,220,170,213,217,197,164,152,183,167,193,188,199,198,147,216]} 
 Player 2 16:11:31 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 16:11:31 $FLIP_CARD:  

 {"cardId":216} 
 Player 2 16:11:31 $ADD_STORE_CARD:  

 {"cardId":216} 
 Player 2 16:11:31 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 16:11:31 $FLIP_CARD:  

 {"cardId":147} 
 Player 2 16:11:31 $ADD_STORE_CARD:  

 {"cardId":147} 
 Player 2 16:11:31 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 16:11:31 $FLIP_CARD:  

 {"cardId":272} 
 Player 2 16:11:31 $ADD_MONSTER:  

 {"monsterPlaceId":1,"monsterId":272} 
 Player 2 16:11:31 $NEW_MONSTER_ON_PLACE:  

 {"cardId":272,"monsterPlaceId":1} 
 Player 2 16:11:31 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 16:11:31 $FLIP_CARD:  

 {"cardId":275} 
 Player 2 16:11:31 $REGISTER_PASSIVE_ITEM:  

 {"cardId":275} 
 Player 2 16:11:31 $ADD_MONSTER:  

 {"monsterPlaceId":2,"monsterId":275} 
 Player 2 16:11:31 $NEW_MONSTER_ON_PLACE:  

 {"cardId":275,"monsterPlaceId":2} 
 Player 2 16:11:31 $SET_MONEY:  

 {"playerId":1,"numOfCoins":3} 
 Player 2 16:11:31 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":317,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 16:11:31 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 16:11:31 $MOVE_CARD:  

 {"moveIndex":1,"cardId":85,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 16:11:31 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":85} 
 Player 2 16:11:31 $FLIP_CARD:  

 {"cardId":85} 
 Player 2 16:11:31 $FLIP_CARD:  

 {"cardId":85} 
 Player 2 16:11:31 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":85} 
 Player 2 16:11:32 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 16:11:32 $MOVE_CARD:  

 {"moveIndex":2,"cardId":114,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 16:11:32 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":114} 
 Player 2 16:11:32 $FLIP_CARD:  

 {"cardId":114} 
 Player 2 16:11:32 $FLIP_CARD:  

 {"cardId":114} 
 Player 2 16:11:32 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":114} 
 Player 2 16:11:32 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 16:11:32 $MOVE_CARD:  

 {"moveIndex":3,"cardId":131,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 16:11:32 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":131} 
 Player 2 16:11:32 $FLIP_CARD:  

 {"cardId":131} 
 Player 2 16:11:32 $FLIP_CARD:  

 {"cardId":131} 
 Player 2 16:11:33 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":131} 
 Player 2 16:11:33 $SET_MONEY:  

 {"playerId":2,"numOfCoins":3} 
 Player 2 16:11:33 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":323,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 2 16:11:33 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 16:11:33 $MOVE_CARD:  

 {"moveIndex":4,"cardId":106,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 16:11:33 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":106} 
 Player 2 16:11:33 $FLIP_CARD:  

 {"cardId":106} 
 Player 2 16:11:33 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":106} 
 Player 2 16:11:33 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 16:11:33 $MOVE_CARD:  

 {"moveIndex":5,"cardId":27,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 16:11:33 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":27} 
 Player 2 16:11:33 $FLIP_CARD:  

 {"cardId":27} 
 Player 2 16:11:34 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":27} 
 Player 2 16:11:34 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 16:11:34 $MOVE_CARD:  

 {"moveIndex":6,"cardId":26,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 16:11:34 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":26} 
 Player 2 16:11:34 $FLIP_CARD:  

 {"cardId":26} 
 Player 2 16:11:34 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":26} 
 Player 2 16:11:34 $GAME_HAS_STARTED:  
 Player 2 16:11:34 $SET_TURN:  

 {"playerId":2} 
 Player 2 16:11:34 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 16:11:34 $NEXT_STACK_ID:  
 Player 2 16:11:34 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 16:11:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 16:11:34 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13}} 
 Player 2 16:11:34 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":1,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13}} 
 Player 2 16:11:34 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 16:11:34 $SHOW_STACK_EFFECT:  

 {"effectId":1} 
 Player 2 16:11:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 
 Player 2 16:11:37 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 16:11:37 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13}} 
 Player 2 16:11:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 
 Player 2 16:11:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 2 16:11:37 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 16:11:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 2 16:11:37 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 16:11:37 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 16:11:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 
 Player 2 16:11:37 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13}} 
 Player 2 16:11:37 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 16:11:37 $MOVE_CARD:  

 {"moveIndex":7,"cardId":68,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 16:11:38 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":68} 
 Player 2 16:11:38 $FLIP_CARD:  

 {"cardId":68} 
 Player 2 16:11:38 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":68} 
 Player 2 16:11:38 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13}} 
 Player 2 16:11:38 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":1} 
 Player 2 16:11:38 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 16:11:38 $SHOW_STACK_EFFECT:  

 {"effectId":1} 
 Player 2 16:11:41 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":1} 
 Player 2 16:11:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 
 Player 2 16:11:41 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 16:11:41 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13}} 
 Player 2 16:11:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 
 Player 2 16:11:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Player 2 16:11:41 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 16:11:41 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 16:11:41 $ACTION_MASSAGE_REMOVE:  

 {"id":7} 
 Player 2 16:11:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Player 2 16:11:41 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 16:11:41 $ACTION_MASSAGE_REMOVE:  

 {"id":8} 
 Player 2 16:11:41 $ACTION_MASSAGE_REMOVE:  

 {"id":6} 
 Player 2 16:11:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":9,"_text":"Stack Was Emptied "}} 
 Player 2 16:11:41 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 16:11:41 $CLEAR_SE_VIS:  
 Player 2 16:11:41 $UPDATE_ACTIONS:  
 Player 2 16:11:56 $NEXT_STACK_ID:  
 Player 2 16:11:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Holy Mom's Eye"} 
 Player 2 16:11:56 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":323,"attackingPlayerCardId":323,"idOfCardBeingAttacked":275,"stackEffectType":4}} 
 Player 2 16:11:56 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":2,"creatorCardId":323,"attackingPlayerCardId":323,"idOfCardBeingAttacked":275,"stackEffectType":4}} 
 Player 2 16:11:56 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 16:11:56 $SHOW_STACK_EFFECT:  

 {"effectId":2} 
 Player 2 16:11:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":10,"_text":"Add DeclareAttack 2 "}} 
 Player 2 16:11:59 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 16:11:59 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":323,"attackingPlayerCardId":323,"idOfCardBeingAttacked":275,"stackEffectType":4}} 
 Player 2 16:11:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":11,"_text":"Response Adding DeclareAttack 2"},"childOfId":10} 
 Player 2 16:11:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 
 Player 2 16:11:59 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 16:11:59 $ACTION_MASSAGE_REMOVE:  

 {"id":12} 
 Player 2 16:11:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 
 Player 2 16:11:59 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 16:11:59 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 16:11:59 $ACTION_MASSAGE_REMOVE:  

 {"id":13} 
 Player 2 16:11:59 $ACTION_MASSAGE_REMOVE:  

 {"id":11} 
 Player 2 16:11:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":14,"_text":"Resolve DeclareAttack 2 "}} 
 Player 2 16:11:59 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":323,"attackingPlayerCardId":323,"idOfCardBeingAttacked":275,"stackEffectType":4}} 
 Player 2 16:11:59 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":275,"particleType":5} 
 Player 2 16:11:59 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":323,"scopeIsPlayer":true,"index":3,"originStackId":2},"isAfterActivation":true,"index":3} 
 Player 2 16:11:59 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":323,"attackingPlayerCardId":323,"idOfCardBeingAttacked":275,"stackEffectType":4}} 
 Player 2 16:11:59 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":2} 
 Player 2 16:11:59 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 16:11:59 $SHOW_STACK_EFFECT:  

 {"effectId":2} 
 Player 2 16:12:02 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":2} 
 Player 2 16:12:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":15,"_text":"Remove After Resolve DeclareAttack 2  "}} 
 Player 2 16:12:02 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 16:12:02 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":323,"attackingPlayerCardId":323,"idOfCardBeingAttacked":275,"stackEffectType":4}} 
 Player 2 16:12:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":16,"_text":"Response Remove After Resolve DeclareAttack 2"},"childOfId":15} 
 Player 2 16:12:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 
 Player 2 16:12:02 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 16:12:02 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 16:12:02 $ACTION_MASSAGE_REMOVE:  

 {"id":17} 
 Player 2 16:12:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 
 Player 2 16:12:02 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 16:12:02 $ACTION_MASSAGE_REMOVE:  

 {"id":18} 
 Player 2 16:12:02 $ACTION_MASSAGE_REMOVE:  

 {"id":16} 
 Player 2 16:12:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":19,"_text":"Stack Was Emptied "}} 
 Player 2 16:12:02 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 16:12:02 $CLEAR_SE_VIS:  
 Player 2 16:12:05 $NEXT_STACK_ID:  
 Player 2 16:12:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Holy Mom's Eye<Monster>"} 
 Player 2 16:12:05 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":323,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":275}} 
 Player 2 16:12:05 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":323,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":275}} 
 Player 2 16:12:05 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 16:12:05 $SHOW_STACK_EFFECT:  

 {"effectId":3} 
 Player 2 16:12:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":20,"_text":"Add AttackRoll 3 "}} 
 Player 2 16:12:08 $ROLL_DICE:  

 {"playerId":2} 
 Player 2 16:12:10 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":1} 
 Player 2 16:12:10 $UPDATE_STACK_VIS:  

 {"stackId":3,"text":"player rolled 1 vs Holy Mom's Eye<Monster>"} 
 Player 2 16:12:10 $SHOW_DICE_ROLL:  

 {"stackId":3} 
 Player 2 16:12:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs Holy Mom's Eye<Monster>"} 
 Player 2 16:12:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 16:12:13 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":323,"numberRolled":1,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":275}} 
 Player 2 16:12:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":21,"_text":"Response Adding AttackRoll 3"},"childOfId":20} 
 Player 2 16:12:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 
 Player 2 16:12:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 16:12:13 $ACTION_MASSAGE_REMOVE:  

 {"id":22} 
 Player 2 16:12:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 
 Player 2 16:12:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 16:12:13 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 16:12:13 $ACTION_MASSAGE_REMOVE:  

 {"id":23} 
 Player 2 16:12:13 $ACTION_MASSAGE_REMOVE:  

 {"id":21} 
 Player 2 16:12:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":24,"_text":"Resolve AttackRoll 3 "}} 
 Player 2 16:12:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs Holy Mom's Eye<Monster>"} 
 Player 2 16:12:13 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":323,"numberRolled":1,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":275}} 
 Player 2 16:12:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":25,"_text":"Added 0 to original roll"}} 
 Player 2 16:12:13 $NEXT_STACK_ID:  
 Player 2 16:12:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 16:12:13 $CLEAR_SE_VIS:  
 Player 2 16:12:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Holy Mom's Eye combat damage to Samson \n2:Player 2 rolled 1 vs Holy Mom's Eye<Monster>"} 
 Player 2 16:12:14 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":4,"creatorCardId":323,"entityToDoDamageCardId":275,"entityToTakeDamageCardId":323,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1}} 
 Player 2 16:12:14 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":323,"numberRolled":1,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":275}} 
 Player 2 16:12:14 $REPLACE_STACK:  

 {"currentStack":[{"entityId":4,"creatorCardId":323,"entityToDoDamageCardId":275,"entityToTakeDamageCardId":323,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1},{"entityId":3,"creatorCardId":323,"numberRolled":1,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":275}]} 
 Player 2 16:12:14 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 16:12:14 $SHOW_STACK_EFFECT:  

 {"effectId":4} 
 Player 2 16:12:16 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":323,"scopeIsPlayer":true,"index":4,"originStackId":3},"isAfterActivation":true,"index":4} 
 Player 2 16:12:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Holy Mom's Eye combat damage to Samson \n2:Player 2 rolled 1 vs Holy Mom's Eye<Monster>"} 
 Player 2 16:12:16 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":323,"numberRolled":1,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":275}} 
 Player 2 16:12:16 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":3} 
 Player 2 16:12:16 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 16:12:16 $SHOW_STACK_EFFECT:  

 {"effectId":3} 
 Player 2 16:12:19 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":3} 
 Player 2 16:12:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":26,"_text":"Remove After Resolve AttackRoll 3  "}} 
 Player 2 16:12:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Holy Mom's Eye combat damage to Samson"} 
 Player 2 16:12:19 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":323,"numberRolled":1,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":275}} 
 Player 2 16:12:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":27,"_text":"Response Remove After Resolve AttackRoll 3"},"childOfId":26} 
 Player 2 16:12:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":26} 
 Player 2 16:12:19 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 16:12:20 $ACTION_MASSAGE_REMOVE:  

 {"id":28} 
 Player 2 16:12:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":29,"_text":"Wait For Response From Player 1 "},"childOfId":26} 
 Player 2 16:12:20 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 16:12:20 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 16:12:20 $ACTION_MASSAGE_REMOVE:  

 {"id":29} 
 Player 2 16:12:20 $ACTION_MASSAGE_REMOVE:  

 {"id":27} 
 Player 2 16:12:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":30,"_text":"Resolve CombatDamage 4 "}} 
 Player 2 16:12:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Holy Mom's Eye combat damage to Samson"} 
 Player 2 16:12:20 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":4,"creatorCardId":323,"entityToDoDamageCardId":275,"entityToTakeDamageCardId":323,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1}} 
 Player 2 16:12:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Holy Mom's Eye 2 combat damage to Samson"} 
 Player 2 16:12:20 $UPDATE_STACK_VIS:  

 {"stackId":4,"text":"Holy Mom's Eye will deal 2 combat damage to Samson"} 
 Player 2 16:12:20 $PLAYER_GET_HIT:  

 {"playerId":2,"damage":2,"damageDealerId":275} 
 Player 2 16:12:20 $NEXT_STACK_ID:  
 Player 2 16:12:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Holy Mom's Eye 2 combat damage to Samson \n2:Player 2 is about to die"} 
 Player 2 16:12:20 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":5,"creatorCardId":323,"playerToDieCardId":323,"stackEffectType":15,"killerId":275}} 
 Player 2 16:12:20 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 16:12:20 $SHOW_STACK_EFFECT:  

 {"effectId":5} 
 Player 2 16:12:23 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 16:12:23 $CLEAR_SE_VIS:  
 Player 2 16:12:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Holy Mom's Eye 2 combat damage to Samson \n2:Player 2 is about to die"} 
 Player 2 16:12:23 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":4,"creatorCardId":323,"entityToDoDamageCardId":275,"entityToTakeDamageCardId":323,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1}} 
 Player 2 16:12:23 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":5,"creatorCardId":323,"playerToDieCardId":323,"stackEffectType":15,"killerId":275}} 
 Player 2 16:12:23 $REPLACE_STACK:  

 {"currentStack":[{"entityId":4,"creatorCardId":323,"entityToDoDamageCardId":275,"entityToTakeDamageCardId":323,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1},{"entityId":5,"creatorCardId":323,"playerToDieCardId":323,"stackEffectType":15,"killerId":275}]} 
 Player 2 16:12:23 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":275}],"result":null,"preventMethod":false,"methodScopeId":323,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 
 Player 2 16:12:23 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_TAKEN","args":[{"type":2,"number":2},{"type":2,"number":1},{"type":0,"number":275}],"result":null,"preventMethod":false,"methodScopeId":323,"scopeIsPlayer":true,"index":6,"originStackId":4},"isAfterActivation":true,"index":6} 
 Player 2 16:12:23 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":4} 
 Player 2 16:12:23 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 16:12:23 $SHOW_STACK_EFFECT:  

 {"effectId":4} 
 Player 2 16:12:26 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":4} 
 Player 2 16:12:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":31,"_text":"Remove After Resolve CombatDamage 4  "}} 
 Player 2 16:12:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 16:12:26 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":4,"creatorCardId":323,"entityToDoDamageCardId":275,"entityToTakeDamageCardId":323,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1}} 
 Player 2 16:12:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":32,"_text":"Response Remove After Resolve CombatDamage 4"},"childOfId":31} 
 Player 2 16:12:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":33,"_text":"Wait For Response From Player 2 "},"childOfId":31} 
 Player 2 16:12:26 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 16:12:26 $ACTION_MASSAGE_REMOVE:  

 {"id":33} 
 Player 2 16:12:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":34,"_text":"Wait For Response From Player 1 "},"childOfId":31} 
 Player 2 16:12:26 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 16:12:26 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 16:12:26 $ACTION_MASSAGE_REMOVE:  

 {"id":34} 
 Player 2 16:12:26 $ACTION_MASSAGE_REMOVE:  

 {"id":32} 
 Player 2 16:12:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":35,"_text":"Resolve PlayerDeath 5 "}} 
 Player 2 16:12:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 16:12:26 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":5,"creatorCardId":323,"playerToDieCardId":323,"stackEffectType":15,"killerId":275}} 
 Player 2 16:12:26 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":275,"particleType":5} 
 Player 2 16:12:26 $CANCEL_ATTACK:  
 Player 2 16:12:26 $NEXT_STACK_ID:  
 Player 2 16:12:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 2 16:12:27 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":6,"creatorCardId":323,"playerToPayCardId":323,"stackEffectType":16}} 
 Player 2 16:12:27 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 16:12:27 $SHOW_STACK_EFFECT:  

 {"effectId":6} 
 Player 2 16:12:29 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 16:12:29 $CLEAR_SE_VIS:  
 Player 2 16:12:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 2 16:12:29 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":5,"creatorCardId":323,"playerToDieCardId":323,"stackEffectType":15,"killerId":275}} 
 Player 2 16:12:29 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":6,"creatorCardId":323,"playerToPayCardId":323,"stackEffectType":16}} 
 Player 2 16:12:29 $REPLACE_STACK:  

 {"currentStack":[{"entityId":5,"creatorCardId":323,"playerToDieCardId":323,"stackEffectType":15,"killerId":275},{"entityId":6,"creatorCardId":323,"playerToPayCardId":323,"stackEffectType":16}]} 
 Player 2 16:12:29 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":5,"creatorCardId":323,"playerToDieCardId":323,"stackEffectType":15,"killerId":275}} 
 Player 2 16:12:30 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":5} 
 Player 2 16:12:30 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 16:12:30 $SHOW_STACK_EFFECT:  

 {"effectId":5} 
 Player 2 16:12:32 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":5} 
 Player 2 16:12:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":36,"_text":"Remove After Resolve PlayerDeath 5  "}} 
 Player 2 16:12:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 2 16:12:32 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":5,"creatorCardId":323,"playerToDieCardId":323,"stackEffectType":15,"killerId":275}} 
 Player 2 16:12:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":37,"_text":"Response Remove After Resolve PlayerDeath 5"},"childOfId":36} 
 Player 2 16:12:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":38,"_text":"Wait For Response From Player 2 "},"childOfId":36} 
 Player 2 16:12:32 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 16:12:33 $ACTION_MASSAGE_REMOVE:  

 {"id":38} 
 Player 2 16:12:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":39,"_text":"Wait For Response From Player 1 "},"childOfId":36} 
 Player 2 16:12:33 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 16:12:33 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 16:12:33 $ACTION_MASSAGE_REMOVE:  

 {"id":39} 
 Player 2 16:12:33 $ACTION_MASSAGE_REMOVE:  

 {"id":37} 
 Player 2 16:12:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":40,"_text":"Resolve PlayerDeathPenalties 6 "}} 
 Player 2 16:12:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 2 16:12:33 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":6,"creatorCardId":323,"playerToPayCardId":323,"stackEffectType":16}} 
 Player 2 16:12:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":41,"_text":"Player 2 pays Penalties"}} 
 Player 2 16:12:33 $SET_MONEY:  

 {"playerId":2,"numOfCoins":2} 
 Player 2 16:12:33 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-1}],"result":null,"preventMethod":false,"methodScopeId":323,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 
 Player 2 16:15:35 $MATCH: 