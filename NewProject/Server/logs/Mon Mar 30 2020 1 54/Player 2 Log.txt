Start Log 
 Player 2 01:54:16 $MOVE_TO_TABLE:  
 Player 2 01:54:26 $FINISH_LOAD:  

 {"id":2,"turnPlayerId":2} 
 Player 2 01:54:26 $SET_CHAR:  

 {"originPlayerId":2,"playerId":1,"charCardId":312,"itemCardId":313} 
 Player 2 01:54:26 $ASSIGN_CHAR_TO_PLAYER:  

 {"playerId":2,"charCardId":310,"itemCardId":311} 
 Player 2 01:54:26 $DECK_ARRAGMENT:  

 {"deckType":1,"arrangement":[117,75,110,83,141,24,55,17,99,36,57,89,23,106,137,25,53,119,60,51,21,82,130,113,16,101,138,13,116,79,118,124,6,29,22,135,10,37,61,87,11,121,48,109,127,62,126,81,15,43,92,69,67,34,91,128,59,7,70,76,112,95,18,74,136,35,115,49,45,68,72,140,27,58,42,40,100,26,123,139,133,77,80,19,65,84,46,63,132,120,28,85,93,30,102,20,12,98,88,111,94,47,131,97,103,107,96,129,8,104,50,14,33,52,108,134,122,66,86,54,114,39,105,78,90,73,41,56,32,64,38,9,71,31,125,44]} 
 Player 2 01:54:26 $DECK_ARRAGMENT:  

 {"deckType":2,"arrangement":[307,260,277,292,285,290,259,275,233,224,263,267,254,252,293,278,286,283,231,246,228,294,309,272,255,253,243,298,304,237,240,306,241,284,281,269,273,251,250,247,270,276,297,296,256,301,245,289,291,236,280,300,287,258,262,266,282,261,238,299,274,265,302,288,229,248,232,225,239,230,242,244,227,305,264,226,303,295,279,268,235,308,234,249,257,271]} 
 Player 2 01:54:26 $DECK_ARRAGMENT:  

 {"deckType":5,"arrangement":[222,202,169,159,152,146,183,199,188,205,217,194,165,158,160,220,193,201,153,216,155,170,211,144,176,214,174,190,178,173,150,204,172,164,163,198,149,180,196,167,189,208,154,215,145,185,162,156,166,203,148,209,175,187,168,177,181,219,157,212,221,179,184,147,218,182,161,191,213,192,195,197,171,210,151,206,186,200,143,207]} 
 Player 2 01:54:26 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 01:54:26 $FLIP_CARD:  

 {"cardId":207} 
 Player 2 01:54:26 $ADD_STORE_CARD:  

 {"cardId":207} 
 Player 2 01:54:26 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 01:54:26 $FLIP_CARD:  

 {"cardId":143} 
 Player 2 01:54:26 $ADD_STORE_CARD:  

 {"cardId":143} 
 Player 2 01:54:26 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 01:54:26 $DECK_ADD_TO_BOTTOM:  

 {"deckType":2,"cardId":271} 
 Player 2 01:54:26 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 01:54:26 $FLIP_CARD:  

 {"cardId":257} 
 Player 2 01:54:26 $ADD_MONSTER:  

 {"monsterPlaceId":1,"monsterId":257} 
 Player 2 01:54:26 $NEW_MONSTER_ON_PLACE:  

 {"cardId":257,"monsterPlaceId":1} 
 Player 2 01:54:26 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 01:54:26 $DECK_ADD_TO_BOTTOM:  

 {"deckType":2,"cardId":249} 
 Player 2 01:54:26 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 01:54:26 $DECK_ADD_TO_BOTTOM:  

 {"deckType":2,"cardId":234} 
 Player 2 01:54:27 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 01:54:27 $FLIP_CARD:  

 {"cardId":308} 
 Player 2 01:54:27 $ADD_MONSTER:  

 {"monsterPlaceId":2,"monsterId":308} 
 Player 2 01:54:27 $NEW_MONSTER_ON_PLACE:  

 {"cardId":308,"monsterPlaceId":2} 
 Player 2 01:54:27 $SET_MONEY:  

 {"playerId":1,"numOfCoins":3} 
 Player 2 01:54:27 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":312,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 01:54:27 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 01:54:27 $MOVE_CARD:  

 {"moveIndex":1,"cardId":44,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 01:54:27 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":44} 
 Player 2 01:54:27 $FLIP_CARD:  

 {"cardId":44} 
 Player 2 01:54:27 $FLIP_CARD:  

 {"cardId":44} 
 Player 2 01:54:27 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":44} 
 Player 2 01:54:27 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 01:54:27 $MOVE_CARD:  

 {"moveIndex":2,"cardId":125,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 01:54:28 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":125} 
 Player 2 01:54:28 $FLIP_CARD:  

 {"cardId":125} 
 Player 2 01:54:28 $FLIP_CARD:  

 {"cardId":125} 
 Player 2 01:54:28 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":125} 
 Player 2 01:54:28 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 01:54:28 $MOVE_CARD:  

 {"moveIndex":3,"cardId":31,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 01:54:28 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":31} 
 Player 2 01:54:28 $FLIP_CARD:  

 {"cardId":31} 
 Player 2 01:54:28 $FLIP_CARD:  

 {"cardId":31} 
 Player 2 01:54:28 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":31} 
 Player 2 01:54:28 $SET_MONEY:  

 {"playerId":2,"numOfCoins":3} 
 Player 2 01:54:28 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":310,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 2 01:54:28 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 01:54:28 $MOVE_CARD:  

 {"moveIndex":4,"cardId":71,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 01:54:29 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":71} 
 Player 2 01:54:29 $FLIP_CARD:  

 {"cardId":71} 
 Player 2 01:54:29 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":71} 
 Player 2 01:54:29 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 01:54:29 $MOVE_CARD:  

 {"moveIndex":5,"cardId":9,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 01:54:29 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":9} 
 Player 2 01:54:29 $FLIP_CARD:  

 {"cardId":9} 
 Player 2 01:54:29 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":9} 
 Player 2 01:54:29 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 01:54:29 $MOVE_CARD:  

 {"moveIndex":6,"cardId":38,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 01:54:30 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":38} 
 Player 2 01:54:30 $FLIP_CARD:  

 {"cardId":38} 
 Player 2 01:54:30 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":38} 
 Player 2 01:54:30 $GAME_HAS_STARTED:  
 Player 2 01:54:30 $SET_TURN:  

 {"playerId":2} 
 Player 2 01:54:30 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:54:30 $NEXT_STACK_ID:  
 Player 2 01:54:30 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 01:54:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 01:54:30 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":310,"turnPlayerCardId":310,"stackEffectType":13}} 
 Player 2 01:54:30 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":1,"creatorCardId":310,"turnPlayerCardId":310,"stackEffectType":13}} 
 Player 2 01:54:30 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 01:54:30 $SHOW_STACK_EFFECT:  

 {"effectId":1} 
 Player 2 01:54:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 
 Player 2 01:54:33 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:54:33 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":310,"turnPlayerCardId":310,"stackEffectType":13}} 
 Player 2 01:54:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 
 Player 2 01:54:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 2 01:54:33 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:54:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 2 01:54:33 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 01:54:33 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 01:54:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 
 Player 2 01:54:33 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":310,"turnPlayerCardId":310,"stackEffectType":13}} 
 Player 2 01:54:33 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 01:54:33 $MOVE_CARD:  

 {"moveIndex":7,"cardId":64,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 01:54:33 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":64} 
 Player 2 01:54:33 $FLIP_CARD:  

 {"cardId":64} 
 Player 2 01:54:33 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":64} 
 Player 2 01:54:33 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":310,"turnPlayerCardId":310,"stackEffectType":13}} 
 Player 2 01:54:33 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":1} 
 Player 2 01:54:33 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 01:54:33 $SHOW_STACK_EFFECT:  

 {"effectId":1} 
 Player 2 01:54:36 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":1} 
 Player 2 01:54:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 
 Player 2 01:54:36 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 01:54:36 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":310,"turnPlayerCardId":310,"stackEffectType":13}} 
 Player 2 01:54:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 
 Player 2 01:54:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Player 2 01:54:36 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 01:54:36 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 01:54:37 $ACTION_MASSAGE_REMOVE:  

 {"id":7} 
 Player 2 01:54:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Player 2 01:54:37 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:54:37 $ACTION_MASSAGE_REMOVE:  

 {"id":8} 
 Player 2 01:54:37 $ACTION_MASSAGE_REMOVE:  

 {"id":6} 
 Player 2 01:54:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":9,"_text":"Stack Was Emptied "}} 
 Player 2 01:54:37 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 01:54:37 $CLEAR_SE_VIS:  
 Player 2 01:54:37 $UPDATE_ACTIONS:  
 Player 2 01:54:52 $MOVE_CARD:  

 {"moveIndex":8,"cardId":96,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 
 Player 2 01:54:52 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":96} 
 Player 2 01:54:58 $NEXT_STACK_ID:  
 Player 2 01:54:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Credit Card "} 
 Player 2 01:54:58 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":310,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":96,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 2 01:54:58 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":2,"creatorCardId":310,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":96,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 2 01:54:58 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 01:54:58 $SHOW_STACK_EFFECT:  

 {"effectId":2} 
 Player 2 01:55:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":10,"_text":"Add PlayLootCardStackEffect 2 "}} 
 Player 2 01:55:01 $PLAYER_LOSE_LOOT:  

 {"playerId":2,"cardId":96} 
 Player 2 01:55:01 $MOVE_CARD:  

 {"moveIndex":9,"cardId":96,"placeID":328,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 01:55:01 $MOVE_CARD_TO_PILE:  

 {"type":7,"cardId":96} 
 Player 2 01:55:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Credit Card: ChainEffects"} 
 Player 2 01:55:01 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:55:01 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":310,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":96,"lootPlayerId":2,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":96,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 01:55:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":11,"_text":"Response Adding PlayLootCardStackEffect 2"},"childOfId":10} 
 Player 2 01:55:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 
 Player 2 01:55:01 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:55:01 $ACTION_MASSAGE_REMOVE:  

 {"id":12} 
 Player 2 01:55:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 
 Player 2 01:55:01 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 01:55:01 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 01:55:01 $ACTION_MASSAGE_REMOVE:  

 {"id":13} 
 Player 2 01:55:01 $ACTION_MASSAGE_REMOVE:  

 {"id":11} 
 Player 2 01:55:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":14,"_text":"Resolve PlayLootCardStackEffect 2 "}} 
 Player 2 01:55:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Credit Card: ChainEffects"} 
 Player 2 01:55:02 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":310,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":96,"lootPlayerId":2,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":96,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 01:55:02 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":96,"particleType":6} 
 Player 2 01:55:03 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":96,"particleType":6} 
 Player 2 01:55:03 $REGISTER_ONE_TURN_PASSIVE_EFFECT:  

 {"cardId":96,"effectIndex":{"type":3,"index":0},"conditionData":[null]} 
 Player 2 01:55:04 $REMOVE_FROM_PILE:  

 {"cardId":96} 
 Player 2 01:55:04 $MOVE_CARD:  

 {"moveIndex":10,"cardId":96,"placeID":329,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 01:55:04 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":96} 
 Player 2 01:55:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Credit Card: ChainEffects"} 
 Player 2 01:55:04 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":310,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":96,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 01:55:04 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":2} 
 Player 2 01:55:04 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 01:55:04 $SHOW_STACK_EFFECT:  

 {"effectId":2} 
 Player 2 01:55:07 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":2} 
 Player 2 01:55:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":15,"_text":"Remove After Resolve PlayLootCardStackEffect 2  "}} 
 Player 2 01:55:07 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 01:55:07 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":310,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":96,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 01:55:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":16,"_text":"Response Remove After Resolve PlayLootCardStackEffect 2"},"childOfId":15} 
 Player 2 01:55:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 
 Player 2 01:55:07 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 01:55:07 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 01:55:07 $ACTION_MASSAGE_REMOVE:  

 {"id":17} 
 Player 2 01:55:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 
 Player 2 01:55:07 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:55:07 $ACTION_MASSAGE_REMOVE:  

 {"id":18} 
 Player 2 01:55:07 $ACTION_MASSAGE_REMOVE:  

 {"id":16} 
 Player 2 01:55:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":19,"_text":"Stack Was Emptied "}} 
 Player 2 01:55:07 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 01:55:07 $CLEAR_SE_VIS:  
 Player 2 01:55:23 $NEXT_STACK_ID:  
 Player 2 01:55:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Spoon Bender for 0"} 
 Player 2 01:55:23 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":310,"itemToPurchaseCardId":207,"playerWhoBuysCardId":310,"cost":10,"stackEffectType":9}} 
 Player 2 01:55:23 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":310,"itemToPurchaseCardId":207,"playerWhoBuysCardId":310,"cost":10,"stackEffectType":9}} 
 Player 2 01:55:23 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 01:55:23 $SHOW_STACK_EFFECT:  

 {"effectId":3} 
 Player 2 01:55:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":20,"_text":"Add PurchaseItem 3 "}} 
 Player 2 01:55:26 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:55:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Spoon Bender for 0"} 
 Player 2 01:55:26 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":310,"itemToPurchaseCardId":207,"playerWhoBuysCardId":310,"cost":10,"stackEffectType":9}} 
 Player 2 01:55:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":21,"_text":"Response Adding PurchaseItem 3"},"childOfId":20} 
 Player 2 01:55:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 
 Player 2 01:55:26 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:55:26 $ACTION_MASSAGE_REMOVE:  

 {"id":22} 
 Player 2 01:55:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 
 Player 2 01:55:26 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 01:55:26 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 01:55:26 $ACTION_MASSAGE_REMOVE:  

 {"id":23} 
 Player 2 01:55:26 $ACTION_MASSAGE_REMOVE:  

 {"id":21} 
 Player 2 01:55:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":24,"_text":"Resolve PurchaseItem 3 "}} 
 Player 2 01:55:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Spoon Bender for 0"} 
 Player 2 01:55:26 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":310,"itemToPurchaseCardId":207,"playerWhoBuysCardId":310,"cost":10,"stackEffectType":9}} 
 Player 2 01:55:26 $SET_MONEY:  

 {"playerId":2,"numOfCoins":3} 
 Player 2 01:55:26 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":0}],"result":null,"preventMethod":false,"methodScopeId":310,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Player 2 01:55:26 $REMOVE_ITEM_FROM_SHOP:  

 {"cardId":207} 
 Player 2 01:55:26 $NEXT_STACK_ID:  
 Player 2 01:55:26 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:55:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Spoon Bender for 0 \n2:Refill Store slot"} 
 Player 2 01:55:26 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":4,"creatorCardId":310,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 
 Player 2 01:55:26 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 01:55:26 $SHOW_STACK_EFFECT:  

 {"effectId":4} 
 Player 2 01:55:29 $CLEAR_SE_VIS:  
 Player 2 01:55:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Spoon Bender for 0 \n2:Refill Store slot"} 
 Player 2 01:55:29 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":310,"itemToPurchaseCardId":207,"playerWhoBuysCardId":310,"cost":10,"stackEffectType":9}} 
 Player 2 01:55:29 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":4,"creatorCardId":310,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 
 Player 2 01:55:29 $REPLACE_STACK:  

 {"currentStack":[{"entityId":3,"creatorCardId":310,"itemToPurchaseCardId":207,"playerWhoBuysCardId":310,"cost":10,"stackEffectType":9},{"entityId":4,"creatorCardId":310,"slotType":5,"slotToFillId":0,"stackEffectType":10}]} 
 Player 2 01:55:29 $MOVE_CARD:  

 {"moveIndex":11,"cardId":207,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 
 Player 2 01:55:30 $ADD_AN_ITEM:  

 {"playerId":2,"cardId":207,"isReward":false} 
 Player 2 01:55:30 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":207}],"result":true,"preventMethod":false,"methodScopeId":310,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 
 Player 2 01:55:30 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_BUY_ITEM","args":[{"type":2,"number":0},{"type":0,"number":207}],"result":null,"preventMethod":false,"methodScopeId":310,"scopeIsPlayer":true,"index":5,"originStackId":3},"isAfterActivation":true,"index":5} 
 Player 2 01:55:30 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":3} 
 Player 2 01:55:30 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 01:55:30 $SHOW_STACK_EFFECT:  

 {"effectId":3} 
 Player 2 01:55:33 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":3} 
 Player 2 01:55:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":25,"_text":"Remove After Resolve PurchaseItem 3  "}} 
 Player 2 01:55:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill Store slot"} 
 Player 2 01:55:33 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":310,"itemToPurchaseCardId":207,"playerWhoBuysCardId":310,"cost":10,"stackEffectType":9}} 
 Player 2 01:55:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":26,"_text":"Response Remove After Resolve PurchaseItem 3"},"childOfId":25} 
 Player 2 01:55:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":27,"_text":"Wait For Response From Player 2 "},"childOfId":25} 
 Player 2 01:55:33 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:55:33 $ACTION_MASSAGE_REMOVE:  

 {"id":27} 
 Player 2 01:55:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":28,"_text":"Wait For Response From Player 1 "},"childOfId":25} 
 Player 2 01:55:33 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 01:55:33 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 01:55:33 $ACTION_MASSAGE_REMOVE:  

 {"id":28} 
 Player 2 01:55:33 $ACTION_MASSAGE_REMOVE:  

 {"id":26} 
 Player 2 01:55:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":29,"_text":"Resolve RefillEmptySlot 4 "}} 
 Player 2 01:55:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill Store slot"} 
 Player 2 01:55:33 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":4,"creatorCardId":310,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 
 Player 2 01:55:33 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 01:55:33 $FLIP_CARD:  

 {"cardId":200} 
 Player 2 01:55:33 $ADD_STORE_CARD:  

 {"cardId":200} 
 Player 2 01:55:33 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":4} 
 Player 2 01:55:33 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 01:55:33 $SHOW_STACK_EFFECT:  

 {"effectId":4} 
 Player 2 01:55:36 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":4} 
 Player 2 01:55:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":30,"_text":"Remove After Resolve RefillEmptySlot 4  "}} 
 Player 2 01:55:36 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 01:55:36 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":4,"creatorCardId":310,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 
 Player 2 01:55:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":31,"_text":"Response Remove After Resolve RefillEmptySlot 4"},"childOfId":30} 
 Player 2 01:55:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":32,"_text":"Wait For Response From Player 1 "},"childOfId":30} 
 Player 2 01:55:36 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 01:55:36 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 01:55:36 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 01:55:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Spoon Bender for 10"} 
 Player 2 01:55:36 $FINISH_DO_STACK_EFFECT:  

 {"playerId":1,"newStack":[{"entityId":3,"creatorCardId":310,"itemToPurchaseCardId":207,"playerWhoBuysCardId":310,"cost":10,"stackEffectType":9}]} 
 Player 2 01:55:36 $ACTION_MASSAGE_REMOVE:  

 {"id":32} 
 Player 2 01:55:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":33,"_text":"Wait For Response From Player 2 "},"childOfId":30} 
 Player 2 01:55:37 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:55:37 $ACTION_MASSAGE_REMOVE:  

 {"id":33} 
 Player 2 01:55:37 $ACTION_MASSAGE_REMOVE:  

 {"id":31} 
 Player 2 01:55:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":34,"_text":"Resolve PurchaseItem 3 "}} 
 Player 2 01:55:37 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":310,"itemToPurchaseCardId":207,"playerWhoBuysCardId":310,"cost":10,"stackEffectType":9}} 
 Player 2 01:55:37 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":3} 
 Player 2 01:55:37 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 01:55:37 $SHOW_STACK_EFFECT:  

 {"effectId":3} 
 Player 2 01:55:39 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":3} 
 Player 2 01:55:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":35,"_text":"Remove After Resolve PurchaseItem 3  "}} 
 Player 2 01:55:39 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 01:55:39 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":310,"itemToPurchaseCardId":207,"playerWhoBuysCardId":310,"cost":10,"stackEffectType":9}} 
 Player 2 01:55:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":36,"_text":"Response Remove After Resolve PurchaseItem 3"},"childOfId":35} 
 Player 2 01:55:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":37,"_text":"Wait For Response From Player 2 "},"childOfId":35} 
 Player 2 01:55:40 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:55:40 $ACTION_MASSAGE_REMOVE:  

 {"id":37} 
 Player 2 01:55:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":38,"_text":"Wait For Response From Player 1 "},"childOfId":35} 
 Player 2 01:55:40 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 01:55:40 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 01:55:40 $ACTION_MASSAGE_REMOVE:  

 {"id":38} 
 Player 2 01:55:40 $ACTION_MASSAGE_REMOVE:  

 {"id":36} 
 Player 2 01:55:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":39,"_text":"Stack Was Emptied "}} 
 Player 2 01:55:40 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 01:55:40 $CLEAR_SE_VIS:  
 Player 2 01:55:44 $NEXT_STACK_ID:  
 Player 2 01:55:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Razor Blade for 0"} 
 Player 2 01:55:44 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":5,"creatorCardId":310,"itemToPurchaseCardId":200,"playerWhoBuysCardId":310,"cost":10,"stackEffectType":9}} 
 Player 2 01:55:44 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":5,"creatorCardId":310,"itemToPurchaseCardId":200,"playerWhoBuysCardId":310,"cost":10,"stackEffectType":9}} 
 Player 2 01:55:44 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 01:55:44 $SHOW_STACK_EFFECT:  

 {"effectId":5} 
 Player 2 01:55:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":40,"_text":"Add PurchaseItem 5 "}} 
 Player 2 01:55:47 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:55:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Razor Blade for 0"} 
 Player 2 01:55:47 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":5,"creatorCardId":310,"itemToPurchaseCardId":200,"playerWhoBuysCardId":310,"cost":10,"stackEffectType":9}} 
 Player 2 01:55:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":41,"_text":"Response Adding PurchaseItem 5"},"childOfId":40} 
 Player 2 01:55:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":42,"_text":"Wait For Response From Player 2 "},"childOfId":40} 
 Player 2 01:55:47 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:55:47 $ACTION_MASSAGE_REMOVE:  

 {"id":42} 
 Player 2 01:55:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":43,"_text":"Wait For Response From Player 1 "},"childOfId":40} 
 Player 2 01:55:48 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 01:55:48 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 01:55:48 $ACTION_MASSAGE_REMOVE:  

 {"id":43} 
 Player 2 01:55:48 $ACTION_MASSAGE_REMOVE:  

 {"id":41} 
 Player 2 01:55:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":44,"_text":"Resolve PurchaseItem 5 "}} 
 Player 2 01:55:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Razor Blade for 0"} 
 Player 2 01:55:48 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":5,"creatorCardId":310,"itemToPurchaseCardId":200,"playerWhoBuysCardId":310,"cost":10,"stackEffectType":9}} 
 Player 2 01:55:48 $SET_MONEY:  

 {"playerId":2,"numOfCoins":3} 
 Player 2 01:55:48 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":0}],"result":null,"preventMethod":false,"methodScopeId":310,"scopeIsPlayer":true,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 
 Player 2 01:55:48 $REMOVE_ITEM_FROM_SHOP:  

 {"cardId":200} 
 Player 2 01:55:48 $NEXT_STACK_ID:  
 Player 2 01:55:48 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:55:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Razor Blade for 0 \n2:Refill Store slot"} 
 Player 2 01:55:48 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":6,"creatorCardId":310,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 
 Player 2 01:55:48 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 01:55:48 $SHOW_STACK_EFFECT:  

 {"effectId":6} 
 Player 2 01:56:37 $MATCH: 