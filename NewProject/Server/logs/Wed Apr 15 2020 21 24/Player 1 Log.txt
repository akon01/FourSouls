Start Log 
 Player 1 21:24:19 $START_GAME:  
 Player 1 21:24:19 $MOVE_TO_TABLE:  
 Player 1 21:24:28 $FINISH_LOAD:  

 {"id":1,"turnPlayerId":2} 
 Player 1 21:24:28 $ASSIGN_CHAR_TO_PLAYER:  

 {"playerId":1,"charCardId":315,"itemCardId":318} 
 Player 1 21:24:28 $SET_CHAR_END:  

 {"playerId":2} 
 Player 1 21:24:29 $MOVE_CARD_END:  

 {"moveIndex":1,"cardId":56,"flipIfFlipped":false,"playerId":2} 
 Player 1 21:24:29 $MOVE_CARD_END:  

 {"moveIndex":2,"cardId":85,"flipIfFlipped":false,"playerId":2} 
 Player 1 21:24:30 $MOVE_CARD_END:  

 {"moveIndex":3,"cardId":39,"flipIfFlipped":false,"playerId":2} 
 Player 1 21:24:31 $MOVE_CARD_END:  

 {"moveIndex":4,"cardId":72,"flipIfFlipped":false,"playerId":2} 
 Player 1 21:24:31 $MOVE_CARD_END:  

 {"moveIndex":5,"cardId":124,"flipIfFlipped":false,"playerId":2} 
 Player 1 21:24:32 $MOVE_CARD_END:  

 {"moveIndex":6,"cardId":76,"flipIfFlipped":false,"playerId":2} 
 Player 1 21:24:32 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 21:24:32 $NEXT_STACK_ID:  
 Player 1 21:24:32 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 21:24:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 
 Player 1 21:24:32 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":315,"turnPlayerCardId":315,"stackEffectType":13}} 
 Player 1 21:24:32 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":1,"creatorCardId":315,"turnPlayerCardId":315,"stackEffectType":13}} 
 Player 1 21:24:32 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 21:24:32 $SHOW_STACK_EFFECT:  

 {"effectId":1} 
 Player 1 21:24:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 
 Player 1 21:24:35 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 21:24:35 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":315,"turnPlayerCardId":315,"stackEffectType":13}} 
 Player 1 21:24:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 
 Player 1 21:24:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 1 21:24:35 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 21:24:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 1 21:24:35 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 21:24:35 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 21:24:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 
 Player 1 21:24:35 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":315,"turnPlayerCardId":315,"stackEffectType":13}} 
 Player 1 21:24:35 $DRAW_CARD:  

 {"deckType":1} 
 Player 1 21:24:35 $MOVE_CARD:  

 {"moveIndex":7,"cardId":115,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 1 21:24:36 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":115} 
 Player 1 21:24:36 $FLIP_CARD:  

 {"cardId":115} 
 Player 1 21:24:36 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":115} 
 Player 1 21:24:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Has Drawen Loot For Start Turn"} 
 Player 1 21:24:36 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":315,"turnPlayerCardId":315,"stackEffectType":13}} 
 Player 1 21:24:36 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":1} 
 Player 1 21:24:36 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 21:24:36 $SHOW_STACK_EFFECT:  

 {"effectId":1} 
 Player 1 21:24:39 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":1} 
 Player 1 21:24:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 
 Player 1 21:24:39 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 21:24:39 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":315,"turnPlayerCardId":315,"stackEffectType":13}} 
 Player 1 21:24:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 
 Player 1 21:24:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Player 1 21:24:39 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 21:24:39 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 21:24:39 $ACTION_MASSAGE_REMOVE:  

 {"id":7} 
 Player 1 21:24:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Player 1 21:24:39 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 21:24:39 $ACTION_MASSAGE_REMOVE:  

 {"id":8} 
 Player 1 21:24:39 $ACTION_MASSAGE_REMOVE:  

 {"id":6} 
 Player 1 21:24:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":9,"_text":"Stack Was Emptied "}} 
 Player 1 21:24:39 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 21:24:39 $CLEAR_SE_VIS:  
 Player 1 21:25:12 $MOVE_CARD:  

 {"moveIndex":8,"cardId":281,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Hand"} 
 Player 1 21:25:12 $DECK_ARRAGMENT:  

 {"deckType":2,"arrangement":[297,249,277,292,259,235,238,276,255,248,226,291,224,237,308,307,253,257,309,245,242,265,299,288,223,270,266,278,233,287,231,303,232,298,260,244,302,304,282,294,273,285,234,228,225,272,240,275,239,264,300,230,284,306,310,262,263,280,274,301,271,305,258,279,247,251,289,250,267,243,295,290,254,269,246,293,268,256,286,236,296,227,283,241,261]} 
 Player 1 21:25:12 $FLIP_CARD:  

 {"cardId":281} 
 Player 1 21:25:12 $REGISTER_PASSIVE_ITEM:  

 {"cardId":281} 
 Player 1 21:25:12 $ADD_MONSTER:  

 {"monsterPlaceId":1,"monsterId":281} 
 Player 1 21:25:12 $NEW_MONSTER_ON_PLACE:  

 {"cardId":281,"monsterPlaceId":1} 
 Player 1 21:25:18 $NEXT_STACK_ID:  
 Player 1 21:25:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 declared attack on Isaac!"} 
 Player 1 21:25:18 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":315,"attackingPlayerCardId":315,"idOfCardBeingAttacked":281,"stackEffectType":4}} 
 Player 1 21:25:18 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":2,"creatorCardId":315,"attackingPlayerCardId":315,"idOfCardBeingAttacked":281,"stackEffectType":4}} 
 Player 1 21:25:18 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 21:25:18 $SHOW_STACK_EFFECT:  

 {"effectId":2} 
 Player 1 21:25:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":10,"_text":"Add DeclareAttack 2 "}} 
 Player 1 21:25:21 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 21:25:21 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":315,"attackingPlayerCardId":315,"idOfCardBeingAttacked":281,"stackEffectType":4}} 
 Player 1 21:25:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":11,"_text":"Response Adding DeclareAttack 2"},"childOfId":10} 
 Player 1 21:25:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 
 Player 1 21:25:21 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 21:25:21 $ACTION_MASSAGE_REMOVE:  

 {"id":12} 
 Player 1 21:25:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 
 Player 1 21:25:21 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 21:25:21 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 21:25:21 $ACTION_MASSAGE_REMOVE:  

 {"id":13} 
 Player 1 21:25:21 $ACTION_MASSAGE_REMOVE:  

 {"id":11} 
 Player 1 21:25:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":14,"_text":"Resolve DeclareAttack 2 "}} 
 Player 1 21:25:21 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":315,"attackingPlayerCardId":315,"idOfCardBeingAttacked":281,"stackEffectType":4}} 
 Player 1 21:25:21 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":281,"particleType":5} 
 Player 1 21:25:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Has Entered Battle with Isaac!"} 
 Player 1 21:25:21 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":1,"originStackId":2},"isAfterActivation":true,"index":1} 
 Player 1 21:25:21 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":315,"attackingPlayerCardId":315,"idOfCardBeingAttacked":281,"stackEffectType":4}} 
 Player 1 21:25:21 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":2} 
 Player 1 21:25:21 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 21:25:21 $SHOW_STACK_EFFECT:  

 {"effectId":2} 
 Player 1 21:25:24 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":2} 
 Player 1 21:25:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":15,"_text":"Remove After Resolve DeclareAttack 2  "}} 
 Player 1 21:25:24 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 21:25:24 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":315,"attackingPlayerCardId":315,"idOfCardBeingAttacked":281,"stackEffectType":4}} 
 Player 1 21:25:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":16,"_text":"Response Remove After Resolve DeclareAttack 2"},"childOfId":15} 
 Player 1 21:25:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 
 Player 1 21:25:24 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 21:25:24 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 21:25:24 $ACTION_MASSAGE_REMOVE:  

 {"id":17} 
 Player 1 21:25:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 
 Player 1 21:25:24 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 21:25:24 $ACTION_MASSAGE_REMOVE:  

 {"id":18} 
 Player 1 21:25:25 $ACTION_MASSAGE_REMOVE:  

 {"id":16} 
 Player 1 21:25:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":19,"_text":"Stack Was Emptied "}} 
 Player 1 21:25:25 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 21:25:25 $CLEAR_SE_VIS:  
 Player 1 21:25:27 $NEXT_STACK_ID:  
 Player 1 21:25:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Isaac!<Monster>"} 
 Player 1 21:25:27 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":315,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 1 21:25:27 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":315,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 1 21:25:27 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 21:25:27 $SHOW_STACK_EFFECT:  

 {"effectId":3} 
 Player 1 21:25:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":20,"_text":"Add AttackRoll 3 "}} 
 Player 1 21:25:30 $ROLL_DICE:  

 {"playerId":1} 
 Player 1 21:25:32 $ROLL_DICE_ENDED:  

 {"playerId":1,"numberRolled":4} 
 Player 1 21:25:32 $UPDATE_STACK_VIS:  

 {"stackId":3,"text":"player rolled 4 vs Isaac!<Monster>"} 
 Player 1 21:25:32 $SHOW_DICE_ROLL:  

 {"stackId":3} 
 Player 1 21:25:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 4 vs Isaac!<Monster>"} 
 Player 1 21:25:35 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 21:25:35 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":315,"numberRolled":4,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 1 21:25:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":21,"_text":"Response Adding AttackRoll 3"},"childOfId":20} 
 Player 1 21:25:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":22,"_text":"Wait For Response From Player 1 "},"childOfId":20} 
 Player 1 21:25:35 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 21:25:35 $ACTION_MASSAGE_REMOVE:  

 {"id":22} 
 Player 1 21:25:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":23,"_text":"Wait For Response From Player 2 "},"childOfId":20} 
 Player 1 21:25:35 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 21:25:35 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 21:25:35 $ACTION_MASSAGE_REMOVE:  

 {"id":23} 
 Player 1 21:25:35 $ACTION_MASSAGE_REMOVE:  

 {"id":21} 
 Player 1 21:25:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":24,"_text":"Resolve AttackRoll 3 "}} 
 Player 1 21:25:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 4 vs Isaac!<Monster>"} 
 Player 1 21:25:35 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":315,"numberRolled":4,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 1 21:25:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":25,"_text":"Added 0 to original roll"}} 
 Player 1 21:25:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Rolled 3 Against Isaac!<Monster> 3"} 
 Player 1 21:25:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Roll Hit"} 
 Player 1 21:25:35 $NEXT_STACK_ID:  
 Player 1 21:25:35 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 21:25:35 $CLEAR_SE_VIS:  
 Player 1 21:25:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 1 Roll Hit"} 
 Player 1 21:25:35 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":4,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 
 Player 1 21:25:35 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":315,"numberRolled":4,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 1 21:25:36 $REPLACE_STACK:  

 {"currentStack":[{"entityId":4,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3},{"entityId":3,"creatorCardId":315,"numberRolled":4,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}]} 
 Player 1 21:25:36 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 21:25:36 $SHOW_STACK_EFFECT:  

 {"effectId":4} 
 Player 1 21:25:38 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":3},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":2,"originStackId":3},"isAfterActivation":true,"index":2} 
 Player 1 21:25:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 1 Roll Hit"} 
 Player 1 21:25:38 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":315,"numberRolled":4,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 1 21:25:38 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":3} 
 Player 1 21:25:38 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 21:25:38 $SHOW_STACK_EFFECT:  

 {"effectId":3} 
 Player 1 21:25:41 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":3} 
 Player 1 21:25:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":26,"_text":"Remove After Resolve AttackRoll 3  "}} 
 Player 1 21:25:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac!"} 
 Player 1 21:25:41 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":315,"numberRolled":4,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 1 21:25:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":27,"_text":"Response Remove After Resolve AttackRoll 3"},"childOfId":26} 
 Player 1 21:25:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":28,"_text":"Wait For Response From Player 1 "},"childOfId":26} 
 Player 1 21:25:41 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 21:25:41 $ACTION_MASSAGE_REMOVE:  

 {"id":28} 
 Player 1 21:25:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":29,"_text":"Wait For Response From Player 2 "},"childOfId":26} 
 Player 1 21:25:41 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 21:25:42 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 21:25:42 $ACTION_MASSAGE_REMOVE:  

 {"id":29} 
 Player 1 21:25:42 $ACTION_MASSAGE_REMOVE:  

 {"id":27} 
 Player 1 21:25:42 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":30,"_text":"Resolve CombatDamage 4 "}} 
 Player 1 21:25:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac!"} 
 Player 1 21:25:42 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":4,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 
 Player 1 21:25:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain will deal 1 combat damage to Isaac! "} 
 Player 1 21:25:42 $UPDATE_STACK_VIS:  

 {"stackId":4,"text":"Cain will deal 1 combat damage to Isaac!"} 
 Player 1 21:25:42 $MONSTER_GET_DAMAGED:  

 {"cardId":281,"hpLeft":6,"damageDealerId":315} 
 Player 1 21:25:42 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":315},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Player 1 21:25:42 $NEXT_STACK_ID:  
 Player 1 21:25:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Activate Isaac! Effect DealDamage<DealDamage>"} 
 Player 1 21:25:42 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":5,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":281,"effctType":0},"isAfterActivation":true,"index":3,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 21:25:42 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":5,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":281,"effctType":0},"isAfterActivation":true,"index":3,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 21:25:42 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 21:25:42 $SHOW_STACK_EFFECT:  

 {"effectId":5} 
 Player 1 21:25:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":31,"_text":"Add ActivatePassiveEffect 5 "}} 
 Player 1 21:25:57 $SHOW_DECISION:  

 {"startCardId":281,"endCardId":325} 
 Player 1 21:26:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Activate Isaac! effect DealDamage<DealDamage>"} 
 Player 1 21:26:00 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[325],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":5,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":281,"effctType":0},"isAfterActivation":true,"index":3,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 21:26:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":32,"_text":"Response Adding ActivatePassiveEffect 5"},"childOfId":31} 
 Player 1 21:26:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":33,"_text":"Wait For Response From Player 2 "},"childOfId":31} 
 Player 1 21:26:01 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 21:26:01 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 21:26:01 $ACTION_MASSAGE_REMOVE:  

 {"id":33} 
 Player 1 21:26:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":34,"_text":"Wait For Response From Player 1 "},"childOfId":31} 
 Player 1 21:26:01 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 21:26:01 $ACTION_MASSAGE_REMOVE:  

 {"id":34} 
 Player 1 21:26:01 $ACTION_MASSAGE_REMOVE:  

 {"id":32} 
 Player 1 21:26:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":35,"_text":"Resolve ActivatePassiveEffect 5 "}} 
 Player 1 21:26:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Activate Isaac! effect DealDamage<DealDamage>"} 
 Player 1 21:26:01 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[325],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":5,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":281,"effctType":0},"isAfterActivation":true,"index":3,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 21:26:01 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":281,"particleType":6} 
 Player 1 21:26:03 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":281,"particleType":6} 
 Player 1 21:26:03 $PLAYER_GET_HIT:  

 {"playerId":2,"damage":1,"damageDealerId":281} 
 Player 1 21:26:03 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":281}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 
 Player 1 21:26:03 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":315},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Player 1 21:26:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Activated Isaac! Effect"} 
 Player 1 21:26:03 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[325],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":5,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"isAfterActivation":true,"index":3,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 21:26:03 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":5} 
 Player 1 21:26:03 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 21:26:03 $SHOW_STACK_EFFECT:  

 {"effectId":5} 
 Player 1 21:26:06 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":5} 
 Player 1 21:26:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":36,"_text":"Remove After Resolve ActivatePassiveEffect 5  "}} 
 Player 1 21:26:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain will deal 1 combat damage to Isaac! "} 
 Player 1 21:26:06 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[325],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":5,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"isAfterActivation":true,"index":3,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 21:26:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":37,"_text":"Response Remove After Resolve ActivatePassiveEffect 5"},"childOfId":36} 
 Player 1 21:26:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":38,"_text":"Wait For Response From Player 1 "},"childOfId":36} 
 Player 1 21:26:06 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 21:26:06 $ACTION_MASSAGE_REMOVE:  

 {"id":38} 
 Player 1 21:26:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":39,"_text":"Wait For Response From Player 2 "},"childOfId":36} 
 Player 1 21:26:06 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 21:26:06 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 21:26:06 $ACTION_MASSAGE_REMOVE:  

 {"id":39} 
 Player 1 21:26:06 $ACTION_MASSAGE_REMOVE:  

 {"id":37} 
 Player 1 21:26:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":40,"_text":"Resolve CombatDamage 4 "}} 
 Player 1 21:26:06 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":3},{"type":0,"number":315},{"type":0,"number":281}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":5,"originStackId":4},"isAfterActivation":true,"index":5} 
 Player 1 21:26:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain will deal 1 combat damage to Isaac! "} 
 Player 1 21:26:06 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":4,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 
 Player 1 21:26:06 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":4} 
 Player 1 21:26:06 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 21:26:06 $SHOW_STACK_EFFECT:  

 {"effectId":4} 
 Player 1 21:26:09 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":4} 
 Player 1 21:26:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":41,"_text":"Remove After Resolve CombatDamage 4  "}} 
 Player 1 21:26:09 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 21:26:09 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":4,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 
 Player 1 21:26:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":42,"_text":"Response Remove After Resolve CombatDamage 4"},"childOfId":41} 
 Player 1 21:26:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":43,"_text":"Wait For Response From Player 2 "},"childOfId":41} 
 Player 1 21:26:09 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 21:26:09 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 21:26:10 $ACTION_MASSAGE_REMOVE:  

 {"id":43} 
 Player 1 21:26:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":44,"_text":"Wait For Response From Player 1 "},"childOfId":41} 
 Player 1 21:26:10 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 21:26:10 $ACTION_MASSAGE_REMOVE:  

 {"id":44} 
 Player 1 21:26:10 $ACTION_MASSAGE_REMOVE:  

 {"id":42} 
 Player 1 21:26:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":45,"_text":"Stack Was Emptied "}} 
 Player 1 21:26:10 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 21:26:10 $CLEAR_SE_VIS:  
 Player 1 21:26:12 $NEXT_STACK_ID:  
 Player 1 21:26:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Isaac!<Monster>"} 
 Player 1 21:26:12 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":6,"creatorCardId":315,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 1 21:26:12 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":6,"creatorCardId":315,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 1 21:26:12 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 21:26:12 $SHOW_STACK_EFFECT:  

 {"effectId":6} 
 Player 1 21:26:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":46,"_text":"Add AttackRoll 6 "}} 
 Player 1 21:26:15 $ROLL_DICE:  

 {"playerId":1} 
 Player 1 21:26:16 $ROLL_DICE_ENDED:  

 {"playerId":1,"numberRolled":5} 
 Player 1 21:26:16 $UPDATE_STACK_VIS:  

 {"stackId":6,"text":"player rolled 5 vs Isaac!<Monster>"} 
 Player 1 21:26:16 $SHOW_DICE_ROLL:  

 {"stackId":6} 
 Player 1 21:26:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 5 vs Isaac!<Monster>"} 
 Player 1 21:26:19 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 21:26:19 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":6,"creatorCardId":315,"numberRolled":5,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 1 21:26:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":47,"_text":"Response Adding AttackRoll 6"},"childOfId":46} 
 Player 1 21:26:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":48,"_text":"Wait For Response From Player 1 "},"childOfId":46} 
 Player 1 21:26:19 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 21:26:19 $ACTION_MASSAGE_REMOVE:  

 {"id":48} 
 Player 1 21:26:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":49,"_text":"Wait For Response From Player 2 "},"childOfId":46} 
 Player 1 21:26:19 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 21:26:19 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 21:26:19 $ACTION_MASSAGE_REMOVE:  

 {"id":49} 
 Player 1 21:26:19 $ACTION_MASSAGE_REMOVE:  

 {"id":47} 
 Player 1 21:26:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":50,"_text":"Resolve AttackRoll 6 "}} 
 Player 1 21:26:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 5 vs Isaac!<Monster>"} 
 Player 1 21:26:20 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":6,"creatorCardId":315,"numberRolled":5,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 1 21:26:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":51,"_text":"Added 0 to original roll"}} 
 Player 1 21:26:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Rolled 3 Against Isaac!<Monster> 3"} 
 Player 1 21:26:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Roll Hit"} 
 Player 1 21:26:20 $NEXT_STACK_ID:  
 Player 1 21:26:20 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 21:26:20 $CLEAR_SE_VIS:  
 Player 1 21:26:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 1 Roll Hit"} 
 Player 1 21:26:20 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 
 Player 1 21:26:20 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":6,"creatorCardId":315,"numberRolled":5,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 1 21:26:20 $REPLACE_STACK:  

 {"currentStack":[{"entityId":7,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3},{"entityId":6,"creatorCardId":315,"numberRolled":5,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}]} 
 Player 1 21:26:20 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 21:26:20 $SHOW_STACK_EFFECT:  

 {"effectId":7} 
 Player 1 21:26:22 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":3},{"type":2,"number":1},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":6,"originStackId":6},"isAfterActivation":true,"index":6} 
 Player 1 21:26:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 1 Roll Hit"} 
 Player 1 21:26:22 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":6,"creatorCardId":315,"numberRolled":5,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 1 21:26:23 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":6} 
 Player 1 21:26:23 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 21:26:23 $SHOW_STACK_EFFECT:  

 {"effectId":6} 
 Player 1 21:26:25 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":6} 
 Player 1 21:26:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":52,"_text":"Remove After Resolve AttackRoll 6  "}} 
 Player 1 21:26:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac!"} 
 Player 1 21:26:26 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":6,"creatorCardId":315,"numberRolled":5,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 1 21:26:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":53,"_text":"Response Remove After Resolve AttackRoll 6"},"childOfId":52} 
 Player 1 21:26:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":54,"_text":"Wait For Response From Player 1 "},"childOfId":52} 
 Player 1 21:26:26 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 21:26:26 $ACTION_MASSAGE_REMOVE:  

 {"id":54} 
 Player 1 21:26:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":55,"_text":"Wait For Response From Player 2 "},"childOfId":52} 
 Player 1 21:26:26 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 21:26:26 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 21:26:26 $ACTION_MASSAGE_REMOVE:  

 {"id":55} 
 Player 1 21:26:26 $ACTION_MASSAGE_REMOVE:  

 {"id":53} 
 Player 1 21:26:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":56,"_text":"Resolve CombatDamage 7 "}} 
 Player 1 21:26:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac!"} 
 Player 1 21:26:26 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":7,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 
 Player 1 21:26:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain will deal 1 combat damage to Isaac! "} 
 Player 1 21:26:26 $UPDATE_STACK_VIS:  

 {"stackId":7,"text":"Cain will deal 1 combat damage to Isaac!"} 
 Player 1 21:26:26 $MONSTER_GET_DAMAGED:  

 {"cardId":281,"hpLeft":5,"damageDealerId":315} 
 Player 1 21:26:26 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":315},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 
 Player 1 21:26:26 $NEXT_STACK_ID:  
 Player 1 21:26:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Activate Isaac! Effect DealDamage<DealDamage>"} 
 Player 1 21:26:26 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":8,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":281,"effctType":0},"isAfterActivation":true,"index":7,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 21:26:26 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":8,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":281,"effctType":0},"isAfterActivation":true,"index":7,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 21:26:26 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 21:26:26 $SHOW_STACK_EFFECT:  

 {"effectId":8} 
 Player 1 21:26:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":57,"_text":"Add ActivatePassiveEffect 8 "}} 
 Player 1 21:26:34 $SHOW_DECISION:  

 {"startCardId":281,"endCardId":325} 
 Player 1 21:26:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Activate Isaac! effect DealDamage<DealDamage>"} 
 Player 1 21:26:37 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[325],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":8,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":281,"effctType":0},"isAfterActivation":true,"index":7,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 21:26:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":58,"_text":"Response Adding ActivatePassiveEffect 8"},"childOfId":57} 
 Player 1 21:26:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":59,"_text":"Wait For Response From Player 2 "},"childOfId":57} 
 Player 1 21:26:37 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 21:26:37 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 21:26:37 $ACTION_MASSAGE_REMOVE:  

 {"id":59} 
 Player 1 21:26:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":60,"_text":"Wait For Response From Player 1 "},"childOfId":57} 
 Player 1 21:26:37 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 21:26:37 $SHOW_REACTIONS:  

 {"playerId":1,"cardsIds":[315,318,56,85,39,115]} 
 Player 1 21:26:41 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[315,318,56,85,39,115]} 
 Player 1 21:26:41 $ACTION_MASSAGE_REMOVE:  

 {"id":60} 
 Player 1 21:26:41 $ACTION_MASSAGE_REMOVE:  

 {"id":58} 
 Player 1 21:26:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":61,"_text":"Resolve ActivatePassiveEffect 8 "}} 
 Player 1 21:26:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Activate Isaac! effect DealDamage<DealDamage>"} 
 Player 1 21:26:41 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[325],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":8,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":281,"effctType":0},"isAfterActivation":true,"index":7,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 21:26:41 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":281,"particleType":6} 
 Player 1 21:26:43 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":281,"particleType":6} 
 Player 1 21:26:43 $PLAYER_GET_HIT:  

 {"playerId":2,"damage":1,"damageDealerId":281} 
 Player 1 21:26:43 $NEXT_STACK_ID:  
 Player 1 21:26:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Activate Isaac! effect DealDamage<DealDamage>"} 
 Player 1 21:26:43 $CLEAR_SE_VIS:  
 Player 1 21:26:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Activate Isaac! effect DealDamage<DealDamage> \n3:Player 2 Is About To Die"} 
 Player 1 21:26:43 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 
 Player 1 21:26:43 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[325],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":8,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":281,"effctType":0},"effectPassiveMeta":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":315},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 21:26:43 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":9,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":281}} 
 Player 1 21:26:43 $REPLACE_STACK:  

 {"currentStack":[{"entityId":7,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3},{"effectCollectedData":{"effectTargets":[325],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":8,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":281,"effctType":0},"effectPassiveMeta":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":315},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7,"hasDataBeenCollectedYet":true,"stackEffectType":14},{"entityId":9,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":281}]} 
 Player 1 21:26:43 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":9,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":281}} 
 Player 1 21:26:44 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 21:26:44 $SHOW_STACK_EFFECT:  

 {"effectId":9} 
 Player 1 21:26:46 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 21:26:46 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":281}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":8,"originStackId":-1},"isAfterActivation":true,"index":8} 
 Player 1 21:26:46 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":315},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 
 Player 1 21:26:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Activated Isaac! Effect \n3:Player 2 Is About To Die"} 
 Player 1 21:26:46 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[325],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":8,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"isAfterActivation":true,"index":7,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 21:26:46 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 21:26:46 $SHOW_STACK_EFFECT:  

 {"effectId":8} 
 Player 1 21:26:49 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":8} 
 Player 1 21:26:49 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":62,"_text":"Remove After Resolve ActivatePassiveEffect 8  "}} 
 Player 1 21:26:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Player 2 Is About To Die"} 
 Player 1 21:26:49 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[325],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":8,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"isAfterActivation":true,"index":7,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 21:26:49 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":63,"_text":"Response Remove After Resolve ActivatePassiveEffect 8"},"childOfId":62} 
 Player 1 21:26:49 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":64,"_text":"Wait For Response From Player 1 "},"childOfId":62} 
 Player 1 21:26:49 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 21:26:49 $SHOW_REACTIONS:  

 {"playerId":1,"cardsIds":[315,318,56,85,39,115]} 
 Player 1 21:26:52 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[315,318,56,85,39,115]} 
 Player 1 21:26:52 $ACTION_MASSAGE_REMOVE:  

 {"id":64} 
 Player 1 21:26:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":65,"_text":"Wait For Response From Player 2 "},"childOfId":62} 
 Player 1 21:26:52 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 21:26:52 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 21:26:52 $ACTION_MASSAGE_REMOVE:  

 {"id":65} 
 Player 1 21:26:52 $ACTION_MASSAGE_REMOVE:  

 {"id":63} 
 Player 1 21:26:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":66,"_text":"Resolve PlayerDeath 9 "}} 
 Player 1 21:26:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Player 2 Is About To Die"} 
 Player 1 21:26:52 $DO_STACK_EFFECT:  

 {"originPlayerId":1,"playerId":2,"currentStack":[{"entityId":7,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3},{"entityId":9,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":281}]} 
 Player 1 21:26:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Player 2 Is About To Die"} 
 Player 1 21:26:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 2 Is About To Die \n3:Player 2 Is About To Pay Death Penalties"} 
 Player 1 21:26:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 2 Is About To Die \n3:Player 2 Is About To Pay Death Penalties"} 
 Player 1 21:26:55 $CLEAR_SE_VIS:  
 Player 1 21:26:55 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 
 Player 1 21:26:55 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":9,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":281}} 
 Player 1 21:26:55 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":10,"creatorCardId":325,"playerToPayCardId":325,"stackEffectType":16}} 
 Player 1 21:26:55 $REPLACE_STACK:  

 {"currentStack":[{"entityId":7,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3},{"entityId":9,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":281},{"entityId":10,"creatorCardId":325,"playerToPayCardId":325,"stackEffectType":16}]} 
 Player 1 21:26:55 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 21:26:55 $SHOW_STACK_EFFECT:  

 {"effectId":9} 
 Player 1 21:26:58 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":9} 
 Player 1 21:26:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":67,"_text":"Remove After Resolve PlayerDeath 9  "}} 
 Player 1 21:26:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 2 Is About To Pay Death Penalties"} 
 Player 1 21:26:58 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":9,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":281}} 
 Player 1 21:26:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":68,"_text":"Response Remove After Resolve PlayerDeath 9"},"childOfId":67} 
 Player 1 21:26:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":69,"_text":"Wait For Response From Player 1 "},"childOfId":67} 
 Player 1 21:26:58 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 21:26:58 $SHOW_REACTIONS:  

 {"playerId":1,"cardsIds":[315,318,56,85,39,115]} 
 Player 1 21:27:12 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[315,318,56,85,39,115]} 
 Player 1 21:27:12 $ACTION_MASSAGE_REMOVE:  

 {"id":69} 
 Player 1 21:27:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":70,"_text":"Wait For Response From Player 2 "},"childOfId":67} 
 Player 1 21:27:12 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 21:27:12 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 21:27:12 $ACTION_MASSAGE_REMOVE:  

 {"id":70} 
 Player 1 21:27:12 $ACTION_MASSAGE_REMOVE:  

 {"id":68} 
 Player 1 21:27:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":71,"_text":"Resolve PlayerDeathPenalties 10 "}} 
 Player 1 21:27:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 2 Is About To Pay Death Penalties"} 
 Player 1 21:27:12 $DO_STACK_EFFECT:  

 {"originPlayerId":1,"playerId":2,"currentStack":[{"entityId":7,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3},{"entityId":10,"creatorCardId":325,"playerToPayCardId":325,"stackEffectType":16}]} 
 Player 1 21:27:16 $MOVE_CARD_END:  

 {"moveIndex":9,"cardId":76,"flipIfFlipped":true,"playerId":2} 
 Player 1 21:27:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 2 Is About To Pay Death Penalties"} 
 Player 1 21:27:17 $CLEAR_SE_VIS:  
 Player 1 21:27:17 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 
 Player 1 21:27:17 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":10,"creatorCardId":325,"playerToPayCardId":325,"stackEffectType":16}} 
 Player 1 21:27:17 $REPLACE_STACK:  

 {"currentStack":[{"entityId":7,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3},{"entityId":10,"creatorCardId":325,"playerToPayCardId":325,"stackEffectType":16}]} 
 Player 1 21:27:17 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 21:27:17 $SHOW_STACK_EFFECT:  

 {"effectId":10} 
 Player 1 21:27:20 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":10} 
 Player 1 21:27:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":73,"_text":"Remove After Resolve PlayerDeathPenalties 10  "}} 
 Player 1 21:27:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac!"} 
 Player 1 21:27:20 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":10,"creatorCardId":325,"playerToPayCardId":325,"stackEffectType":16}} 
 Player 1 21:27:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":74,"_text":"Response Remove After Resolve PlayerDeathPenalties 10"},"childOfId":73} 
 Player 1 21:27:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":75,"_text":"Wait For Response From Player 2 "},"childOfId":73} 
 Player 1 21:27:20 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 21:27:20 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 21:27:20 $ACTION_MASSAGE_REMOVE:  

 {"id":75} 
 Player 1 21:27:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":76,"_text":"Wait For Response From Player 1 "},"childOfId":73} 
 Player 1 21:27:20 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 21:27:20 $SHOW_REACTIONS:  

 {"playerId":1,"cardsIds":[315,318,56,85,39,115]} 
 Player 1 21:27:24 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[315,318,56,85,39,115]} 
 Player 1 21:27:24 $ACTION_MASSAGE_REMOVE:  

 {"id":76} 
 Player 1 21:27:24 $ACTION_MASSAGE_REMOVE:  

 {"id":74} 
 Player 1 21:27:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":77,"_text":"Resolve CombatDamage 7 "}} 
 Player 1 21:27:24 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":3},{"type":0,"number":315},{"type":0,"number":281}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":9,"originStackId":7},"isAfterActivation":true,"index":9} 
 Player 1 21:27:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac!"} 
 Player 1 21:27:24 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":7,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 
 Player 1 21:27:24 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":7} 
 Player 1 21:27:24 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 21:27:24 $SHOW_STACK_EFFECT:  

 {"effectId":7} 
 Player 1 21:27:27 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":7} 
 Player 1 21:27:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":78,"_text":"Remove After Resolve CombatDamage 7  "}} 
 Player 1 21:27:27 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 21:27:27 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":7,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 
 Player 1 21:27:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":79,"_text":"Response Remove After Resolve CombatDamage 7"},"childOfId":78} 
 Player 1 21:27:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":80,"_text":"Wait For Response From Player 1 "},"childOfId":78} 
 Player 1 21:27:27 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 21:27:27 $SHOW_REACTIONS:  

 {"playerId":1,"cardsIds":[315,318,56,85,39,115]} 
 Player 1 21:27:37 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[315,318,56,85,39,115]} 
 Player 1 21:27:37 $ACTION_MASSAGE_REMOVE:  

 {"id":80} 
 Player 1 21:27:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":81,"_text":"Wait For Response From Player 2 "},"childOfId":78} 
 Player 1 21:27:37 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 21:27:37 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 21:27:37 $ACTION_MASSAGE_REMOVE:  

 {"id":81} 
 Player 1 21:27:37 $ACTION_MASSAGE_REMOVE:  

 {"id":79} 
 Player 1 21:27:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":82,"_text":"Stack Was Emptied "}} 
 Player 1 21:27:37 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 21:27:37 $CLEAR_SE_VIS:  
 Player 1 21:27:42 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[315,318,56,85,39,115]} 
 Player 1 21:27:42 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[315,318,56,85,39,115]} 
 Player 1 21:27:42 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[315,318,56,85,39,115]} 
 Player 1 21:27:42 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[315,318,56,85,39,115]} 
 Player 1 21:27:42 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[315,318,56,85,39,115]} 
 Player 1 21:27:42 $NEXT_STACK_ID:  
 Player 1 21:27:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Isaac!<Monster>"} 
 Player 1 21:27:43 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":11,"creatorCardId":315,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 1 21:27:43 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":11,"creatorCardId":315,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 1 21:27:43 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 21:27:43 $SHOW_STACK_EFFECT:  

 {"effectId":11} 
 Player 1 21:27:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":83,"_text":"Add AttackRoll 11 "}} 
 Player 1 21:27:46 $ROLL_DICE:  

 {"playerId":1} 
 Player 1 21:27:48 $ROLL_DICE_ENDED:  

 {"playerId":1,"numberRolled":2} 
 Player 1 21:27:48 $UPDATE_STACK_VIS:  

 {"stackId":11,"text":"player rolled 2 vs Isaac!<Monster>"} 
 Player 1 21:27:48 $SHOW_DICE_ROLL:  

 {"stackId":11} 
 Player 1 21:27:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Isaac!<Monster>"} 
 Player 1 21:27:51 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 21:27:51 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":11,"creatorCardId":315,"numberRolled":2,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 1 21:27:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":84,"_text":"Response Adding AttackRoll 11"},"childOfId":83} 
 Player 1 21:27:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":85,"_text":"Wait For Response From Player 1 "},"childOfId":83} 
 Player 1 21:27:51 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 21:27:51 $ACTION_MASSAGE_REMOVE:  

 {"id":85} 
 Player 1 21:27:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":86,"_text":"Wait For Response From Player 2 "},"childOfId":83} 
 Player 1 21:27:51 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 21:27:51 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 21:27:51 $ACTION_MASSAGE_REMOVE:  

 {"id":86} 
 Player 1 21:27:51 $ACTION_MASSAGE_REMOVE:  

 {"id":84} 
 Player 1 21:27:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":87,"_text":"Resolve AttackRoll 11 "}} 
 Player 1 21:27:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Isaac!<Monster>"} 
 Player 1 21:27:51 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":11,"creatorCardId":315,"numberRolled":2,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 1 21:27:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":88,"_text":"Added 0 to original roll"}} 
 Player 1 21:27:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Rolled 3 Against Isaac!<Monster> 3"} 
 Player 1 21:27:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Roll Hit"} 
 Player 1 21:27:52 $NEXT_STACK_ID:  
 Player 1 21:27:52 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 21:27:52 $CLEAR_SE_VIS:  
 Player 1 21:27:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 1 Roll Hit"} 
 Player 1 21:27:52 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":12,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 
 Player 1 21:27:52 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":11,"creatorCardId":315,"numberRolled":2,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 1 21:27:52 $REPLACE_STACK:  

 {"currentStack":[{"entityId":12,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3},{"entityId":11,"creatorCardId":315,"numberRolled":2,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}]} 
 Player 1 21:27:52 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 21:27:52 $SHOW_STACK_EFFECT:  

 {"effectId":12} 
 Player 1 21:27:54 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":3},{"type":2,"number":1},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":10,"originStackId":11},"isAfterActivation":true,"index":10} 
 Player 1 21:27:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 1 Roll Hit"} 
 Player 1 21:27:54 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":11,"creatorCardId":315,"numberRolled":2,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 1 21:27:54 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":11} 
 Player 1 21:27:55 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 21:27:55 $SHOW_STACK_EFFECT:  

 {"effectId":11} 
 Player 1 21:27:57 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":11} 
 Player 1 21:27:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":89,"_text":"Remove After Resolve AttackRoll 11  "}} 
 Player 1 21:27:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac!"} 
 Player 1 21:27:57 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":11,"creatorCardId":315,"numberRolled":2,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 1 21:27:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":90,"_text":"Response Remove After Resolve AttackRoll 11"},"childOfId":89} 
 Player 1 21:27:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":91,"_text":"Wait For Response From Player 1 "},"childOfId":89} 
 Player 1 21:27:58 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 21:27:58 $ACTION_MASSAGE_REMOVE:  

 {"id":91} 
 Player 1 21:27:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":92,"_text":"Wait For Response From Player 2 "},"childOfId":89} 
 Player 1 21:27:58 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 21:27:58 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 21:27:58 $ACTION_MASSAGE_REMOVE:  

 {"id":92} 
 Player 1 21:27:58 $ACTION_MASSAGE_REMOVE:  

 {"id":90} 
 Player 1 21:27:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":93,"_text":"Resolve CombatDamage 12 "}} 
 Player 1 21:27:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac!"} 
 Player 1 21:27:58 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":12,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 
 Player 1 21:27:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain will deal 1 combat damage to Isaac! "} 
 Player 1 21:27:58 $UPDATE_STACK_VIS:  

 {"stackId":12,"text":"Cain will deal 1 combat damage to Isaac!"} 
 Player 1 21:27:58 $MONSTER_GET_DAMAGED:  

 {"cardId":281,"hpLeft":4,"damageDealerId":315} 
 Player 1 21:27:58 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":315},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":11,"originStackId":-1},"isAfterActivation":true,"index":11} 
 Player 1 21:27:58 $NEXT_STACK_ID:  
 Player 1 21:27:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Activate Isaac! Effect DealDamage<DealDamage>"} 
 Player 1 21:27:58 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":13,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":281,"effctType":0},"isAfterActivation":true,"index":11,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 21:27:58 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":13,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":281,"effctType":0},"isAfterActivation":true,"index":11,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 21:27:58 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 21:27:58 $SHOW_STACK_EFFECT:  

 {"effectId":13} 
 Player 1 21:28:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":94,"_text":"Add ActivatePassiveEffect 13 "}} 
 Player 1 21:28:01 $SHOW_DECISION:  

 {"startCardId":281,"endCardId":315} 
 Player 1 21:28:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Activate Isaac! effect DealDamage<DealDamage>"} 
 Player 1 21:28:04 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[315],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":13,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":281,"effctType":0},"isAfterActivation":true,"index":11,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 21:28:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":95,"_text":"Response Adding ActivatePassiveEffect 13"},"childOfId":94} 
 Player 1 21:28:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":96,"_text":"Wait For Response From Player 2 "},"childOfId":94} 
 Player 1 21:28:04 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 21:28:04 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 21:28:04 $ACTION_MASSAGE_REMOVE:  

 {"id":96} 
 Player 1 21:28:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":97,"_text":"Wait For Response From Player 1 "},"childOfId":94} 
 Player 1 21:28:04 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 21:28:04 $ACTION_MASSAGE_REMOVE:  

 {"id":97} 
 Player 1 21:28:04 $ACTION_MASSAGE_REMOVE:  

 {"id":95} 
 Player 1 21:28:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":98,"_text":"Resolve ActivatePassiveEffect 13 "}} 
 Player 1 21:28:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Activate Isaac! effect DealDamage<DealDamage>"} 
 Player 1 21:28:04 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[315],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":13,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":281,"effctType":0},"isAfterActivation":true,"index":11,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 21:28:04 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":281,"particleType":6} 
 Player 1 21:28:06 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":281,"particleType":6} 
 Player 1 21:28:06 $PLAYER_GET_HIT:  

 {"playerId":1,"damage":1,"damageDealerId":281} 
 Player 1 21:28:06 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":281}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":12,"originStackId":-1},"isAfterActivation":true,"index":12} 
 Player 1 21:28:06 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":315},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":11,"originStackId":-1},"isAfterActivation":true,"index":11} 
 Player 1 21:28:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Activated Isaac! Effect"} 
 Player 1 21:28:06 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[315],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":13,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"isAfterActivation":true,"index":11,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 21:28:06 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":13} 
 Player 1 21:28:06 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 21:28:06 $SHOW_STACK_EFFECT:  

 {"effectId":13} 
 Player 1 21:28:09 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":13} 
 Player 1 21:28:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":99,"_text":"Remove After Resolve ActivatePassiveEffect 13  "}} 
 Player 1 21:28:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain will deal 1 combat damage to Isaac! "} 
 Player 1 21:28:09 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[315],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":13,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"isAfterActivation":true,"index":11,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 21:28:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":100,"_text":"Response Remove After Resolve ActivatePassiveEffect 13"},"childOfId":99} 
 Player 1 21:28:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":101,"_text":"Wait For Response From Player 1 "},"childOfId":99} 
 Player 1 21:28:09 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 21:28:09 $ACTION_MASSAGE_REMOVE:  

 {"id":101} 
 Player 1 21:28:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":102,"_text":"Wait For Response From Player 2 "},"childOfId":99} 
 Player 1 21:28:09 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 21:28:09 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 21:28:10 $ACTION_MASSAGE_REMOVE:  

 {"id":102} 
 Player 1 21:28:10 $ACTION_MASSAGE_REMOVE:  

 {"id":100} 
 Player 1 21:28:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":103,"_text":"Resolve CombatDamage 12 "}} 
 Player 1 21:28:10 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":3},{"type":0,"number":315},{"type":0,"number":281}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":13,"originStackId":12},"isAfterActivation":true,"index":13} 
 Player 1 21:28:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain will deal 1 combat damage to Isaac! "} 
 Player 1 21:28:10 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":12,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 
 Player 1 21:28:10 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":12} 
 Player 1 21:28:10 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 21:28:10 $SHOW_STACK_EFFECT:  

 {"effectId":12} 
 Player 1 21:28:13 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":12} 
 Player 1 21:28:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":104,"_text":"Remove After Resolve CombatDamage 12  "}} 
 Player 1 21:28:13 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 21:28:13 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":12,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 
 Player 1 21:28:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":105,"_text":"Response Remove After Resolve CombatDamage 12"},"childOfId":104} 
 Player 1 21:28:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":106,"_text":"Wait For Response From Player 2 "},"childOfId":104} 
 Player 1 21:28:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 21:28:13 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 21:28:13 $ACTION_MASSAGE_REMOVE:  

 {"id":106} 
 Player 1 21:28:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":107,"_text":"Wait For Response From Player 1 "},"childOfId":104} 
 Player 1 21:28:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 21:28:13 $ACTION_MASSAGE_REMOVE:  

 {"id":107} 
 Player 1 21:28:13 $ACTION_MASSAGE_REMOVE:  

 {"id":105} 
 Player 1 21:28:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":108,"_text":"Stack Was Emptied "}} 
 Player 1 21:28:13 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 21:28:13 $CLEAR_SE_VIS:  
 Player 1 21:28:15 $NEXT_STACK_ID:  
 Player 1 21:28:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Isaac!<Monster>"} 
 Player 1 21:28:15 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":14,"creatorCardId":315,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 1 21:28:15 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":14,"creatorCardId":315,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 1 21:28:15 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 21:28:15 $SHOW_STACK_EFFECT:  

 {"effectId":14} 
 Player 1 21:28:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":109,"_text":"Add AttackRoll 14 "}} 
 Player 1 21:28:18 $ROLL_DICE:  

 {"playerId":1} 
 Player 1 21:28:21 $ROLL_DICE_ENDED:  

 {"playerId":1,"numberRolled":2} 
 Player 1 21:28:21 $UPDATE_STACK_VIS:  

 {"stackId":14,"text":"player rolled 2 vs Isaac!<Monster>"} 
 Player 1 21:28:21 $SHOW_DICE_ROLL:  

 {"stackId":14} 
 Player 1 21:28:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Isaac!<Monster>"} 
 Player 1 21:28:24 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 21:28:24 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":14,"creatorCardId":315,"numberRolled":2,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 1 21:28:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":110,"_text":"Response Adding AttackRoll 14"},"childOfId":109} 
 Player 1 21:28:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":111,"_text":"Wait For Response From Player 1 "},"childOfId":109} 
 Player 1 21:28:24 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 21:28:24 $ACTION_MASSAGE_REMOVE:  

 {"id":111} 
 Player 1 21:28:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":112,"_text":"Wait For Response From Player 2 "},"childOfId":109} 
 Player 1 21:28:24 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 21:28:24 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 21:28:24 $ACTION_MASSAGE_REMOVE:  

 {"id":112} 
 Player 1 21:28:24 $ACTION_MASSAGE_REMOVE:  

 {"id":110} 
 Player 1 21:28:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":113,"_text":"Resolve AttackRoll 14 "}} 
 Player 1 21:28:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Isaac!<Monster>"} 
 Player 1 21:28:24 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":14,"creatorCardId":315,"numberRolled":2,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 1 21:28:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":114,"_text":"Added 0 to original roll"}} 
 Player 1 21:28:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Rolled 3 Against Isaac!<Monster> 3"} 
 Player 1 21:28:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Roll Hit"} 
 Player 1 21:28:24 $NEXT_STACK_ID:  
 Player 1 21:28:24 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 21:28:24 $CLEAR_SE_VIS:  
 Player 1 21:28:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 1 Roll Hit"} 
 Player 1 21:28:24 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":15,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 
 Player 1 21:28:24 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":14,"creatorCardId":315,"numberRolled":2,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 1 21:28:24 $REPLACE_STACK:  

 {"currentStack":[{"entityId":15,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3},{"entityId":14,"creatorCardId":315,"numberRolled":2,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}]} 
 Player 1 21:28:24 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 21:28:24 $SHOW_STACK_EFFECT:  

 {"effectId":15} 
 Player 1 21:28:27 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":3},{"type":2,"number":1},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":14,"originStackId":14},"isAfterActivation":true,"index":14} 
 Player 1 21:28:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 1 Roll Hit"} 
 Player 1 21:28:27 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":14,"creatorCardId":315,"numberRolled":2,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 1 21:28:27 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":14} 
 Player 1 21:28:27 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 21:28:27 $SHOW_STACK_EFFECT:  

 {"effectId":14} 
 Player 1 21:28:30 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":14} 
 Player 1 21:28:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":115,"_text":"Remove After Resolve AttackRoll 14  "}} 
 Player 1 21:28:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac!"} 
 Player 1 21:28:30 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":14,"creatorCardId":315,"numberRolled":2,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 1 21:28:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":116,"_text":"Response Remove After Resolve AttackRoll 14"},"childOfId":115} 
 Player 1 21:28:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":117,"_text":"Wait For Response From Player 1 "},"childOfId":115} 
 Player 1 21:28:30 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 21:28:30 $ACTION_MASSAGE_REMOVE:  

 {"id":117} 
 Player 1 21:28:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":118,"_text":"Wait For Response From Player 2 "},"childOfId":115} 
 Player 1 21:28:30 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 21:28:30 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 21:28:31 $ACTION_MASSAGE_REMOVE:  

 {"id":118} 
 Player 1 21:28:31 $ACTION_MASSAGE_REMOVE:  

 {"id":116} 
 Player 1 21:28:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":119,"_text":"Resolve CombatDamage 15 "}} 
 Player 1 21:28:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac!"} 
 Player 1 21:28:31 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":15,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 
 Player 1 21:28:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain will deal 1 combat damage to Isaac! "} 
 Player 1 21:28:31 $UPDATE_STACK_VIS:  

 {"stackId":15,"text":"Cain will deal 1 combat damage to Isaac!"} 
 Player 1 21:28:31 $MONSTER_GET_DAMAGED:  

 {"cardId":281,"hpLeft":3,"damageDealerId":315} 
 Player 1 21:28:31 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":315},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":15,"originStackId":-1},"isAfterActivation":true,"index":15} 
 Player 1 21:28:31 $NEXT_STACK_ID:  
 Player 1 21:28:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Activate Isaac! Effect DealDamage<DealDamage>"} 
 Player 1 21:28:31 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":16,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":281,"effctType":0},"isAfterActivation":true,"index":15,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 21:28:31 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":16,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":281,"effctType":0},"isAfterActivation":true,"index":15,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 21:28:31 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 21:28:31 $SHOW_STACK_EFFECT:  

 {"effectId":16} 
 Player 1 21:28:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":120,"_text":"Add ActivatePassiveEffect 16 "}} 
 Player 1 21:28:34 $SHOW_DECISION:  

 {"startCardId":281,"endCardId":315} 
 Player 1 21:28:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Activate Isaac! effect DealDamage<DealDamage>"} 
 Player 1 21:28:37 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[315],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":16,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":281,"effctType":0},"isAfterActivation":true,"index":15,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 21:28:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":121,"_text":"Response Adding ActivatePassiveEffect 16"},"childOfId":120} 
 Player 1 21:28:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":122,"_text":"Wait For Response From Player 2 "},"childOfId":120} 
 Player 1 21:28:37 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 21:28:37 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 21:28:37 $ACTION_MASSAGE_REMOVE:  

 {"id":122} 
 Player 1 21:28:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":123,"_text":"Wait For Response From Player 1 "},"childOfId":120} 
 Player 1 21:28:37 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 21:28:37 $ACTION_MASSAGE_REMOVE:  

 {"id":123} 
 Player 1 21:28:37 $ACTION_MASSAGE_REMOVE:  

 {"id":121} 
 Player 1 21:28:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":124,"_text":"Resolve ActivatePassiveEffect 16 "}} 
 Player 1 21:28:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Activate Isaac! effect DealDamage<DealDamage>"} 
 Player 1 21:28:37 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[315],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":16,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":281,"effctType":0},"isAfterActivation":true,"index":15,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 21:28:37 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":281,"particleType":6} 
 Player 1 21:28:39 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":281,"particleType":6} 
 Player 1 21:28:39 $PLAYER_GET_HIT:  

 {"playerId":1,"damage":1,"damageDealerId":281} 
 Player 1 21:28:39 $NEXT_STACK_ID:  
 Player 1 21:28:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Activate Isaac! effect DealDamage<DealDamage>"} 
 Player 1 21:28:39 $CLEAR_SE_VIS:  
 Player 1 21:28:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Activate Isaac! effect DealDamage<DealDamage> \n3:Player 1 Is About To Die"} 
 Player 1 21:28:39 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":15,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 
 Player 1 21:28:39 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[315],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":16,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":281,"effctType":0},"effectPassiveMeta":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":315},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":15,"originStackId":-1},"isAfterActivation":true,"index":15,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 21:28:39 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":17,"creatorCardId":315,"playerToDieCardId":315,"stackEffectType":15,"killerId":281}} 
 Player 1 21:28:39 $REPLACE_STACK:  

 {"currentStack":[{"entityId":15,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3},{"effectCollectedData":{"effectTargets":[315],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":16,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":281,"effctType":0},"effectPassiveMeta":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":315},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":15,"originStackId":-1},"isAfterActivation":true,"index":15,"hasDataBeenCollectedYet":true,"stackEffectType":14},{"entityId":17,"creatorCardId":315,"playerToDieCardId":315,"stackEffectType":15,"killerId":281}]} 
 Player 1 21:28:39 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":17,"creatorCardId":315,"playerToDieCardId":315,"stackEffectType":15,"killerId":281}} 
 Player 1 21:28:39 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 21:28:39 $SHOW_STACK_EFFECT:  

 {"effectId":17} 
 Player 1 21:28:42 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 21:28:42 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":281}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":16,"originStackId":-1},"isAfterActivation":true,"index":16} 
 Player 1 21:28:42 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":315},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":15,"originStackId":-1},"isAfterActivation":true,"index":15} 
 Player 1 21:28:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Activated Isaac! Effect \n3:Player 1 Is About To Die"} 
 Player 1 21:28:42 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[315],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":16,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"isAfterActivation":true,"index":15,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 21:28:42 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 21:28:42 $SHOW_STACK_EFFECT:  

 {"effectId":16} 
 Player 1 21:28:45 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":16} 
 Player 1 21:28:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":125,"_text":"Remove After Resolve ActivatePassiveEffect 16  "}} 
 Player 1 21:28:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Player 1 Is About To Die"} 
 Player 1 21:28:45 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[315],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":16,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"isAfterActivation":true,"index":15,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 21:28:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":126,"_text":"Response Remove After Resolve ActivatePassiveEffect 16"},"childOfId":125} 
 Player 1 21:28:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":127,"_text":"Wait For Response From Player 1 "},"childOfId":125} 
 Player 1 21:28:45 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 21:28:45 $ACTION_MASSAGE_REMOVE:  

 {"id":127} 
 Player 1 21:28:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":128,"_text":"Wait For Response From Player 2 "},"childOfId":125} 
 Player 1 21:28:45 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 21:28:45 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 21:28:45 $ACTION_MASSAGE_REMOVE:  

 {"id":128} 
 Player 1 21:28:45 $ACTION_MASSAGE_REMOVE:  

 {"id":126} 
 Player 1 21:28:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":129,"_text":"Resolve PlayerDeath 17 "}} 
 Player 1 21:28:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Player 1 Is About To Die"} 
 Player 1 21:28:45 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":17,"creatorCardId":315,"playerToDieCardId":315,"stackEffectType":15,"killerId":281}} 
 Player 1 21:28:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Player 1 Has Died"} 
 Player 1 21:28:45 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":281,"particleType":5} 
 Player 1 21:28:45 $CANCEL_ATTACK:  
 Player 1 21:28:45 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":15} 
 Player 1 21:28:46 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":15} 
 Player 1 21:28:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":130,"_text":"Fizzle CombatDamage 15"}} 
 Player 1 21:28:46 $FIZZLE_STACK_EFFECT:  

 {"entityId":15} 
 Player 1 21:28:46 $NEXT_STACK_ID:  
 Player 1 21:28:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Has Died"} 
 Player 1 21:28:46 $CLEAR_SE_VIS:  
 Player 1 21:28:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Has Died \n2:Player 1 Is About To Pay Death Penalties"} 
 Player 1 21:28:46 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":17,"creatorCardId":315,"playerToDieCardId":315,"stackEffectType":15,"killerId":281}} 
 Player 1 21:28:46 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":18,"creatorCardId":315,"playerToPayCardId":315,"stackEffectType":16}} 
 Player 1 21:28:46 $REPLACE_STACK:  

 {"currentStack":[{"entityId":17,"creatorCardId":315,"playerToDieCardId":315,"stackEffectType":15,"killerId":281},{"entityId":18,"creatorCardId":315,"playerToPayCardId":315,"stackEffectType":16}]} 
 Player 1 21:28:46 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":18,"creatorCardId":315,"playerToPayCardId":315,"stackEffectType":16}} 
 Player 1 21:28:46 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 21:28:46 $SHOW_STACK_EFFECT:  

 {"effectId":18} 
 Player 1 21:28:48 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 21:28:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Has Died \n2:Player 1 Is About To Pay Death Penalties"} 
 Player 1 21:28:48 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":17,"creatorCardId":315,"playerToDieCardId":315,"stackEffectType":15,"killerId":281}} 
 Player 1 21:28:48 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 21:28:49 $SHOW_STACK_EFFECT:  

 {"effectId":17} 
 Player 1 21:28:51 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":17} 
 Player 1 21:28:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":131,"_text":"Remove After Resolve PlayerDeath 17  "}} 
 Player 1 21:28:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Pay Death Penalties"} 
 Player 1 21:28:51 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":17,"creatorCardId":315,"playerToDieCardId":315,"stackEffectType":15,"killerId":281}} 
 Player 1 21:28:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":132,"_text":"Response Remove After Resolve PlayerDeath 17"},"childOfId":131} 
 Player 1 21:28:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":133,"_text":"Wait For Response From Player 1 "},"childOfId":131} 
 Player 1 21:28:52 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 21:28:52 $ACTION_MASSAGE_REMOVE:  

 {"id":133} 
 Player 1 21:28:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":134,"_text":"Wait For Response From Player 2 "},"childOfId":131} 
 Player 1 21:28:52 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 21:28:52 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 21:28:52 $ACTION_MASSAGE_REMOVE:  

 {"id":134} 
 Player 1 21:28:52 $ACTION_MASSAGE_REMOVE:  

 {"id":132} 
 Player 1 21:28:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":135,"_text":"Resolve PlayerDeathPenalties 18 "}} 
 Player 1 21:28:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Pay Death Penalties"} 
 Player 1 21:28:52 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":18,"creatorCardId":315,"playerToPayCardId":315,"stackEffectType":16}} 
 Player 1 21:28:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":136,"_text":"Player 1 pays Penalties"}} 
 Player 1 21:28:52 $SET_MONEY:  

 {"playerId":1,"numOfCoins":2} 
 Player 1 21:28:52 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-1}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":17,"originStackId":-1},"isAfterActivation":true,"index":17} 
 Player 1 21:30:40 $PLAYER_LOSE_LOOT:  

 {"playerId":1,"cardId":39} 
 Player 1 21:30:40 $MOVE_CARD:  

 {"moveIndex":10,"cardId":39,"placeID":330,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 21:30:41 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":39} 
 Player 1 21:30:41 $USE_ITEM:  

 {"cardId":315} 
 Player 1 21:30:41 $USE_ITEM:  

 {"cardId":318} 
 Player 1 21:30:41 $PLAYER_DIED:  

 {"playerId":1} 
 Player 1 21:30:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Paid Death Penalties"} 
 Player 1 21:30:41 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":18,"creatorCardId":315,"playerToPayCardId":315,"stackEffectType":16}} 
 Player 1 21:30:41 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":18} 
 Player 1 21:30:41 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 21:30:41 $SHOW_STACK_EFFECT:  

 {"effectId":18} 
 Player 1 21:30:44 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":18} 
 Player 1 21:30:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":137,"_text":"Remove After Resolve PlayerDeathPenalties 18  "}} 
 Player 1 21:30:44 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 21:30:44 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":18,"creatorCardId":315,"playerToPayCardId":315,"stackEffectType":16}} 
 Player 1 21:30:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":138,"_text":"Response Remove After Resolve PlayerDeathPenalties 18"},"childOfId":137} 
 Player 1 21:30:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":139,"_text":"Wait For Response From Player 2 "},"childOfId":137} 
 Player 1 21:30:44 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 21:30:44 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 21:30:44 $ACTION_MASSAGE_REMOVE:  

 {"id":139} 
 Player 1 21:30:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":140,"_text":"Wait For Response From Player 1 "},"childOfId":137} 
 Player 1 21:30:44 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 21:30:44 $ACTION_MASSAGE_REMOVE:  

 {"id":140} 
 Player 1 21:30:44 $ACTION_MASSAGE_REMOVE:  

 {"id":138} 
 Player 1 21:30:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":141,"_text":"Stack Was Emptied "}} 
 Player 1 21:30:44 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 21:30:44 $CLEAR_SE_VIS:  
 Player 1 21:30:44 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 21:30:44 $CLEAR_SE_VIS:  
 Player 1 21:30:44 $REPLACE_STACK:  

 {"currentStack":[]} 
 Player 1 21:30:44 $CLEAR_SE_VIS:  
 Player 1 21:30:44 $END_TURN:  
 Player 1 21:30:44 $SET_TURN:  

 {"playerId":2} 
 Player 1 21:30:45 $START_TURN:  

 {"playerId":2} 
 Player 1 21:30:45 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":3},{"type":0,"number":315},{"type":0,"number":281}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":18,"originStackId":15},"isAfterActivation":true,"index":18} 
 Player 1 21:30:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":142,"_text":"Stack Was Emptied "}} 
 Player 1 21:30:45 $TURN_PLAYER_DO_STACK_EFFECT:  

 {"playerId":2} 
 Player 1 21:30:45 $STACK_EMPTIED:  

 {"playerId":2} 
 Player 1 21:30:45 $STACK_EMPTIED:  

 {"playerId":2} 
 Player 1 21:30:45 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 21:30:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 
 Player 1 21:30:48 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[]} 
 Player 1 21:30:48 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:30:48 $MOVE_CARD_END:  

 {"moveIndex":11,"cardId":40,"flipIfFlipped":false,"playerId":2} 
 Player 1 21:30:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 
 Player 1 21:30:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 
 Player 1 21:30:52 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[]} 
 Player 1 21:30:52 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:31:03 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 21:31:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 declared attack on Isaac!"} 
 Player 1 21:31:06 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[]} 
 Player 1 21:31:06 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:31:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 declared attack on Isaac!"} 
 Player 1 21:31:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 declared attack on Isaac!"} 
 Player 1 21:31:10 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[]} 
 Player 1 21:31:10 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:31:12 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 21:31:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 
 Player 1 21:31:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 
 Player 1 21:31:20 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[]} 
 Player 1 21:31:20 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:31:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 
 Player 1 21:31:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 
 Player 1 21:31:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac! \n2:Player 2 is rolling against Isaac!<Monster>"} 
 Player 1 21:31:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac! \n2:Player 2 is rolling against Isaac!<Monster>"} 
 Player 1 21:31:27 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[]} 
 Player 1 21:31:27 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:31:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac!"} 
 Player 1 21:31:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac! \n2:Activate Isaac! "} 
 Player 1 21:32:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac! \n2:Activate Isaac! "} 
 Player 1 21:32:15 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[]} 
 Player 1 21:32:15 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:32:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac! \n2:Activate Isaac! "} 
 Player 1 21:32:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac! \n2:Activate Isaac! "} 
 Player 1 21:32:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac! \n2:Activate Isaac! "} 
 Player 1 21:32:20 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[]} 
 Player 1 21:32:20 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:32:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac!"} 
 Player 1 21:32:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac!"} 
 Player 1 21:32:23 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[]} 
 Player 1 21:32:23 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:32:26 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 21:32:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 
 Player 1 21:32:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 
 Player 1 21:32:35 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[]} 
 Player 1 21:32:35 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:32:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 
 Player 1 21:32:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 
 Player 1 21:32:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac! \n2:Player 2 is rolling against Isaac!<Monster>"} 
 Player 1 21:32:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac! \n2:Player 2 is rolling against Isaac!<Monster>"} 
 Player 1 21:32:41 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[]} 
 Player 1 21:32:41 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:32:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac!"} 
 Player 1 21:32:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac! \n2:Activate Isaac! "} 
 Player 1 21:32:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac! \n2:Activate Isaac! "} 
 Player 1 21:32:51 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[]} 
 Player 1 21:32:51 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:32:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac! \n2:Activate Isaac! "} 
 Player 1 21:32:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac! \n2:Activate Isaac! "} 
 Player 1 21:32:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac! \n2:Activate Isaac!  \n3:Player 1 Is About To Die"} 
 Player 1 21:32:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac! \n2:Activate Isaac!  \n3:Player 1 Is About To Die"} 
 Player 1 21:32:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac! \n2:Activate Isaac!  \n3:Player 1 Is About To Die"} 
 Player 1 21:32:59 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[]} 
 Player 1 21:32:59 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:33:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac! \n2:Activate Isaac! "} 
 Player 1 21:33:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac! \n2:Player 1 Has Died"} 
 Player 1 21:33:00 $NEXT_STACK_ID:  
 Player 1 21:33:00 $CLEAR_SE_VIS:  
 Player 1 21:33:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac! \n2:Player 1 Has Died \n3:Player 1 Is About To Pay Death Penalties"} 
 Player 1 21:33:00 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":25,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 
 Player 1 21:33:00 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":27,"creatorCardId":315,"playerToDieCardId":315,"stackEffectType":15,"killerId":281}} 
 Player 1 21:33:00 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":28,"creatorCardId":315,"playerToPayCardId":315,"stackEffectType":16}} 
 Player 1 21:33:00 $REPLACE_STACK:  

 {"currentStack":[{"entityId":25,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3},{"entityId":27,"creatorCardId":315,"playerToDieCardId":315,"stackEffectType":15,"killerId":281},{"entityId":28,"creatorCardId":315,"playerToPayCardId":315,"stackEffectType":16}]} 
 Player 1 21:33:00 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":28,"creatorCardId":315,"playerToPayCardId":315,"stackEffectType":16}} 
 Player 1 21:33:00 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 21:33:00 $SHOW_STACK_EFFECT:  

 {"effectId":28} 
 Player 1 21:33:03 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 21:33:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac! \n2:Player 1 Has Died \n3:Player 1 Is About To Pay Death Penalties"} 
 Player 1 21:33:03 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":27,"creatorCardId":315,"playerToDieCardId":315,"stackEffectType":15,"killerId":281}} 
 Player 1 21:33:03 $FINISH_DO_STACK_EFFECT:  

 {"playerId":2,"newStack":[{"entityId":25,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3},{"entityId":27,"creatorCardId":315,"playerToDieCardId":315,"stackEffectType":15,"killerId":281},{"entityId":28,"creatorCardId":315,"playerToPayCardId":315,"stackEffectType":16}]} 
 Player 1 21:33:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac! \n2:Player 1 Has Died \n3:Player 1 Is About To Pay Death Penalties"} 
 Player 1 21:33:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac! \n2:Player 1 Is About To Die \n3:Player 1 Is About To Pay Death Penalties"} 
 Player 1 21:33:06 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[]} 
 Player 1 21:33:06 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:33:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac! \n2:Player 1 Is About To Die"} 
 Player 1 21:33:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":215,"_text":"Player 1 pays Penalties"}} 
 Player 1 21:33:06 $SET_MONEY:  

 {"playerId":1,"numOfCoins":1} 
 Player 1 21:33:07 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-1}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":19,"originStackId":-1},"isAfterActivation":true,"index":19} 
 Player 1 21:33:10 $PLAYER_LOSE_LOOT:  

 {"playerId":1,"cardId":115} 
 Player 1 21:33:10 $MOVE_CARD:  

 {"moveIndex":12,"cardId":115,"placeID":330,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 21:33:11 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":115} 
 Player 1 21:33:11 $USE_ITEM:  

 {"cardId":315} 
 Player 1 21:33:11 $USE_ITEM:  

 {"cardId":318} 
 Player 1 21:33:11 $PLAYER_DIED:  

 {"playerId":1} 
 Player 1 21:33:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac! \n2:Player 1 Paid Death Penalties"} 
 Player 1 21:33:11 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":28,"creatorCardId":315,"playerToPayCardId":315,"stackEffectType":16}} 
 Player 1 21:33:11 $FINISH_DO_STACK_EFFECT:  

 {"playerId":2,"newStack":[{"entityId":25,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3},{"entityId":28,"creatorCardId":315,"playerToPayCardId":315,"stackEffectType":16}]} 
 Player 1 21:33:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac! \n2:Player 1 Paid Death Penalties"} 
 Player 1 21:33:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac! \n2:Player 1 Is About To Pay Death Penalties"} 
 Player 1 21:33:14 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[]} 
 Player 1 21:33:14 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:33:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac!"} 
 Player 1 21:33:18 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[]} 
 Player 1 21:33:18 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:33:24 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 21:33:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 
 Player 1 21:33:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 
 Player 1 21:33:32 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[]} 
 Player 1 21:33:32 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:33:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 
 Player 1 21:33:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 
 Player 1 21:33:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac! \n2:Player 2 is rolling against Isaac!<Monster>"} 
 Player 1 21:33:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac! \n2:Player 2 is rolling against Isaac!<Monster>"} 
 Player 1 21:33:39 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[]} 
 Player 1 21:33:39 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:33:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac!"} 
 Player 1 21:33:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac! \n2:Activate Isaac! "} 
 Player 1 21:33:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac! \n2:Activate Isaac! "} 
 Player 1 21:33:45 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[]} 
 Player 1 21:33:45 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:33:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac! \n2:Activate Isaac! "} 
 Player 1 21:33:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac! \n2:Activate Isaac! "} 
 Player 1 21:33:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac! \n2:Activate Isaac! "} 
 Player 1 21:33:51 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[]} 
 Player 1 21:33:51 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:33:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac!"} 
 Player 1 21:33:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac!"} 
 Player 1 21:33:54 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[]} 
 Player 1 21:33:54 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:34:00 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 21:34:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 
 Player 1 21:34:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 
 Player 1 21:34:08 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[]} 
 Player 1 21:34:08 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:34:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 
 Player 1 21:34:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 
 Player 1 21:34:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac! \n2:Player 2 is rolling against Isaac!<Monster>"} 
 Player 1 21:34:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac! \n2:Player 2 is rolling against Isaac!<Monster>"} 
 Player 1 21:34:14 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[]} 
 Player 1 21:34:14 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:34:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac!"} 
 Player 1 21:34:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac! \n2:[object Object] Is Going To Be Killed by Samson"} 
 Player 1 21:34:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac! \n2:[object Object] Is Going To Be Killed by Samson"} 
 Player 1 21:34:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac! \n2:[object Object] Is Going To Be Killed by Samson \n3:Activate Isaac! "} 
 Player 1 21:34:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac! \n2:[object Object] Is Going To Be Killed by Samson \n3:Activate Isaac! "} 
 Player 1 21:34:23 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[]} 
 Player 1 21:34:23 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:34:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac! \n2:[object Object] Is Going To Be Killed by Samson \n3:Activate Isaac! "} 
 Player 1 21:34:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac! \n2:[object Object] Is Going To Be Killed by Samson \n3:Activate Isaac! "} 
 Player 1 21:34:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac! \n2:[object Object] Is Going To Be Killed by Samson \n3:Activate Isaac!  \n4:Player 2 Is About To Die"} 
 Player 1 21:34:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac! \n2:[object Object] Is Going To Be Killed by Samson \n3:Activate Isaac!  \n4:Player 2 Is About To Die"} 
 Player 1 21:34:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac! \n2:[object Object] Is Going To Be Killed by Samson \n3:Activate Isaac!  \n4:Player 2 Is About To Die"} 
 Player 1 21:34:32 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[]} 
 Player 1 21:34:32 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:34:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac! \n2:[object Object] Is Going To Be Killed by Samson \n3:Activate Isaac! "} 
 Player 1 21:34:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] Is Going To Be Killed by Samson \n2:Activate Isaac! "} 
 Player 1 21:34:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] Is Going To Be Killed by Samson \n2:Player 2 Is About To Die \n3:Player 2 Is About To Pay Death Penalties"} 
 Player 1 21:34:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] Is Going To Be Killed by Samson \n2:Player 2 Is About To Die \n3:Player 2 Is About To Pay Death Penalties"} 
 Player 1 21:34:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] Is Going To Be Killed by Samson \n2:Player 2 Is About To Die \n3:Player 2 Is About To Pay Death Penalties"} 
 Player 1 21:34:38 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[]} 
 Player 1 21:34:38 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:34:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] Is Going To Be Killed by Samson \n2:Player 2 Is About To Die"} 
 Player 1 21:34:43 $MOVE_CARD_END:  

 {"moveIndex":13,"cardId":40,"flipIfFlipped":true,"playerId":2} 
 Player 1 21:34:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] Is Going To Be Killed by Samson \n2:Player 2 Is About To Die"} 
 Player 1 21:34:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] Is Going To Be Killed by Samson \n2:Player 2 Is About To Pay Death Penalties"} 
 Player 1 21:34:46 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[]} 
 Player 1 21:34:46 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:34:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] Is Going To Be Killed by Samson"} 
 Player 1 21:34:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Get Isaac!<Monster>'s Reward \n2:[object Object] Is Going To Be Killed by Samson"} 
 Player 1 21:34:53 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[]} 
 Player 1 21:34:53 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:34:53 $MOVE_CARD_END:  

 {"moveIndex":14,"cardId":188,"flipIfFlipped":true,"playerId":2} 
 Player 1 21:34:55 $STACK_EMPTIED:  

 {"playerId":2} 
 Player 1 21:34:56 $STACK_EMPTIED:  

 {"playerId":2} 
 Player 1 21:34:56 $RECHARGE_ITEM:  

 {"cardId":315} 
 Player 1 21:34:56 $PLAYER_RECHARGE_ITEM:  

 {"playerId":1,"cardId":315} 
 Player 1 21:34:56 $RECHARGE_ITEM:  

 {"cardId":318} 
 Player 1 21:34:56 $PLAYER_RECHARGE_ITEM:  

 {"playerId":1,"cardId":318} 
 Player 1 21:34:56 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 21:34:56 $NEXT_STACK_ID:  
 Player 1 21:34:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 
 Player 1 21:34:56 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":39,"creatorCardId":315,"turnPlayerCardId":315,"stackEffectType":13}} 
 Player 1 21:34:56 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":39,"creatorCardId":315,"turnPlayerCardId":315,"stackEffectType":13}} 
 Player 1 21:34:56 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 21:34:56 $SHOW_STACK_EFFECT:  

 {"effectId":39} 
 Player 1 21:34:56 $CLEAR_SE_VIS:  
 Player 1 21:34:57 $CLEAR_SE_VIS:  
 Player 1 21:34:57 $CLEAR_SE_VIS:  
 Player 1 21:34:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":293,"_text":"Add StartTurnLoot 39 "}} 
 Player 1 21:34:58 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 21:34:58 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":39,"creatorCardId":315,"turnPlayerCardId":315,"stackEffectType":13}} 
 Player 1 21:34:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":294,"_text":"Response Adding StartTurnLoot 39"},"childOfId":293} 
 Player 1 21:34:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":295,"_text":"Wait For Response From Player 1 "},"childOfId":293} 
 Player 1 21:34:58 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 21:34:59 $ACTION_MASSAGE_REMOVE:  

 {"id":295} 
 Player 1 21:34:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":296,"_text":"Wait For Response From Player 2 "},"childOfId":293} 
 Player 1 21:34:59 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 21:34:59 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 21:34:59 $ACTION_MASSAGE_REMOVE:  

 {"id":296} 
 Player 1 21:34:59 $ACTION_MASSAGE_REMOVE:  

 {"id":294} 
 Player 1 21:34:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":297,"_text":"Resolve StartTurnLoot 39 "}} 
 Player 1 21:34:59 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":39,"creatorCardId":315,"turnPlayerCardId":315,"stackEffectType":13}} 
 Player 1 21:34:59 $DRAW_CARD:  

 {"deckType":1} 
 Player 1 21:35:00 $MOVE_CARD:  

 {"moveIndex":15,"cardId":18,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 1 21:35:00 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":18} 
 Player 1 21:35:00 $FLIP_CARD:  

 {"cardId":18} 
 Player 1 21:35:00 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":18} 
 Player 1 21:35:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Has Drawen Loot For Start Turn"} 
 Player 1 21:35:00 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":39,"creatorCardId":315,"turnPlayerCardId":315,"stackEffectType":13}} 
 Player 1 21:35:00 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":39} 
 Player 1 21:35:00 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 21:35:00 $SHOW_STACK_EFFECT:  

 {"effectId":39} 
 Player 1 21:35:03 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":39} 
 Player 1 21:35:03 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":298,"_text":"Remove After Resolve StartTurnLoot 39  "}} 
 Player 1 21:35:03 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 21:35:03 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":39,"creatorCardId":315,"turnPlayerCardId":315,"stackEffectType":13}} 
 Player 1 21:35:03 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":299,"_text":"Response Remove After Resolve StartTurnLoot 39"},"childOfId":298} 
 Player 1 21:35:03 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":300,"_text":"Wait For Response From Player 2 "},"childOfId":298} 
 Player 1 21:35:03 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 21:35:03 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 21:35:03 $ACTION_MASSAGE_REMOVE:  

 {"id":300} 
 Player 1 21:35:03 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":301,"_text":"Wait For Response From Player 1 "},"childOfId":298} 
 Player 1 21:35:03 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 21:35:03 $ACTION_MASSAGE_REMOVE:  

 {"id":301} 
 Player 1 21:35:04 $ACTION_MASSAGE_REMOVE:  

 {"id":299} 
 Player 1 21:35:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":302,"_text":"Stack Was Emptied "}} 
 Player 1 21:35:04 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 21:35:04 $CLEAR_SE_VIS: 