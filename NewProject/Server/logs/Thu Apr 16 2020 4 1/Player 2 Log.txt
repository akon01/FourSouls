Start Log 
 Player 2 04:01:37 $MOVE_TO_TABLE:  
 Player 2 04:01:47 $FINISH_LOAD:  

 {"id":2,"turnPlayerId":2} 
 Player 2 04:01:47 $SET_CHAR:  

 {"originPlayerId":2,"playerId":1,"charCardId":311,"itemCardId":312} 
 Player 2 04:01:47 $ASSIGN_CHAR_TO_PLAYER:  

 {"playerId":2,"charCardId":321,"itemCardId":322} 
 Player 2 04:01:47 $DECK_ARRAGMENT:  

 {"deckType":1,"arrangement":[101,137,89,25,16,55,48,66,120,139,23,35,110,20,87,39,74,129,44,108,30,134,70,49,58,54,8,115,128,24,69,41,51,100,32,118,75,34,6,124,85,17,135,106,111,79,64,73,78,93,127,114,18,90,112,72,97,121,40,52,57,63,84,37,33,71,88,80,94,60,77,56,98,136,68,117,13,9,50,83,19,26,122,67,76,99,96,46,132,125,5,43,105,28,14,103,7,91,53,10,119,12,104,38,61,107,138,81,47,130,21,4,86,29,62,27,95,133,22,11,36,65,123,42,113,15,59,45,116,92,131,31,82,126,109,102]} 
 Player 2 04:01:47 $DECK_ARRAGMENT:  

 {"deckType":2,"arrangement":[282,292,241,238,249,258,250,257,274,239,298,236,262,243,232,309,244,224,256,237,233,307,281,284,296,246,225,235,278,305,310,227,251,301,277,283,229,272,231,253,276,263,234,248,270,261,280,265,285,275,271,288,303,308,268,266,299,294,245,252,295,279,230,290,260,267,264,297,273,302,286,226,304,242,228,300,289,291,223,254,259,287,306,247,255,269,240,293]} 
 Player 2 04:01:47 $DECK_ARRAGMENT:  

 {"deckType":5,"arrangement":[220,170,201,208,173,221,161,199,150,196,174,189,209,171,158,153,149,169,217,184,206,152,197,156,185,194,186,212,183,215,172,192,145,193,143,151,218,176,141,147,181,167,154,159,180,205,207,216,202,163,211,219,203,190,188,165,195,168,144,162,142,146,182,164,179,155,157,210,160,148,191,166,213,200,177,198,187,178,204,214,175]} 
 Player 2 04:01:47 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 04:01:47 $FLIP_CARD:  

 {"cardId":175} 
 Player 2 04:01:47 $ADD_STORE_CARD:  

 {"cardId":175} 
 Player 2 04:01:47 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 04:01:47 $FLIP_CARD:  

 {"cardId":214} 
 Player 2 04:01:48 $ADD_STORE_CARD:  

 {"cardId":214} 
 Player 2 04:01:48 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 04:01:48 $FLIP_CARD:  

 {"cardId":293} 
 Player 2 04:01:48 $ADD_MONSTER:  

 {"monsterPlaceId":1,"monsterId":293} 
 Player 2 04:01:48 $NEW_MONSTER_ON_PLACE:  

 {"cardId":293,"monsterPlaceId":1} 
 Player 2 04:01:48 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 04:01:48 $FLIP_CARD:  

 {"cardId":240} 
 Player 2 04:01:48 $REGISTER_PASSIVE_ITEM:  

 {"cardId":240} 
 Player 2 04:01:48 $ADD_MONSTER:  

 {"monsterPlaceId":2,"monsterId":240} 
 Player 2 04:01:48 $NEW_MONSTER_ON_PLACE:  

 {"cardId":240,"monsterPlaceId":2} 
 Player 2 04:01:48 $SET_MONEY:  

 {"playerId":1,"numOfCoins":3} 
 Player 2 04:01:48 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 04:01:48 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 04:01:48 $MOVE_CARD:  

 {"moveIndex":1,"cardId":102,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.599999904632568,"y":-0.20000000298023224,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 04:01:48 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":102} 
 Player 2 04:01:48 $FLIP_CARD:  

 {"cardId":102} 
 Player 2 04:01:48 $FLIP_CARD:  

 {"cardId":102} 
 Player 2 04:01:48 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":102} 
 Player 2 04:01:48 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 04:01:48 $MOVE_CARD:  

 {"moveIndex":2,"cardId":109,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.599999904632568,"y":-0.20000000298023224,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 04:01:49 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":109} 
 Player 2 04:01:49 $FLIP_CARD:  

 {"cardId":109} 
 Player 2 04:01:49 $FLIP_CARD:  

 {"cardId":109} 
 Player 2 04:01:49 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":109} 
 Player 2 04:01:49 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 04:01:49 $MOVE_CARD:  

 {"moveIndex":3,"cardId":126,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.599999904632568,"y":-0.20000000298023224,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 04:01:49 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":126} 
 Player 2 04:01:49 $FLIP_CARD:  

 {"cardId":126} 
 Player 2 04:01:49 $FLIP_CARD:  

 {"cardId":126} 
 Player 2 04:01:49 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":126} 
 Player 2 04:01:49 $SET_MONEY:  

 {"playerId":2,"numOfCoins":3} 
 Player 2 04:01:49 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 2 04:01:49 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 04:01:49 $MOVE_CARD:  

 {"moveIndex":4,"cardId":82,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.599999904632568,"y":-0.20000000298023224,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 04:01:50 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":82} 
 Player 2 04:01:50 $FLIP_CARD:  

 {"cardId":82} 
 Player 2 04:01:50 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":82} 
 Player 2 04:01:50 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 04:01:50 $MOVE_CARD:  

 {"moveIndex":5,"cardId":31,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.599999904632568,"y":-0.20000000298023224,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 04:01:50 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":31} 
 Player 2 04:01:50 $FLIP_CARD:  

 {"cardId":31} 
 Player 2 04:01:50 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":31} 
 Player 2 04:01:50 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 04:01:50 $MOVE_CARD:  

 {"moveIndex":6,"cardId":131,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.599999904632568,"y":-0.20000000298023224,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 04:01:51 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":131} 
 Player 2 04:01:51 $FLIP_CARD:  

 {"cardId":131} 
 Player 2 04:01:51 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":131} 
 Player 2 04:01:51 $GAME_HAS_STARTED:  
 Player 2 04:01:51 $SET_TURN:  

 {"playerId":1} 
 Player 2 04:01:51 $START_TURN:  

 {"playerId":1} 
 Player 2 04:01:51 $UPDATE_ACTIONS:  
 Player 2 04:01:51 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:01:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 
 Player 2 04:01:54 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321,322]} 
 Player 2 04:01:54 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:01:55 $MOVE_CARD_END:  

 {"moveIndex":7,"cardId":92,"flipIfFlipped":false,"playerId":1} 
 Player 2 04:01:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 
 Player 2 04:01:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 
 Player 2 04:01:58 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321,322]} 
 Player 2 04:01:58 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:02:15 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:02:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Play Golden Horseshoe "} 
 Player 2 04:02:18 $MOVE_CARD_END:  

 {"moveIndex":8,"cardId":102,"flipIfFlipped":true,"playerId":1} 
 Player 2 04:02:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Play Golden Horseshoe "} 
 Player 2 04:02:19 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321,322]} 
 Player 2 04:02:19 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:02:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Play Golden Horseshoe "} 
 Player 2 04:02:22 $MOVE_CARD_END:  

 {"moveIndex":9,"cardId":102,"flipIfFlipped":true,"playerId":1} 
 Player 2 04:02:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Play Golden Horseshoe "} 
 Player 2 04:02:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Play Golden Horseshoe "} 
 Player 2 04:02:25 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321,322]} 
 Player 2 04:02:25 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:02:29 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:02:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 declared attack on Pooter"} 
 Player 2 04:02:32 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321,322]} 
 Player 2 04:02:32 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:02:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 declared attack on Pooter"} 
 Player 2 04:02:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 declared attack on Pooter"} 
 Player 2 04:02:36 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321,322]} 
 Player 2 04:02:36 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:02:38 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:02:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Pooter<Monster>"} 
 Player 2 04:02:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Pooter<Monster>"} 
 Player 2 04:02:45 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321,322]} 
 Player 2 04:02:45 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:02:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Pooter<Monster>"} 
 Player 2 04:02:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Pooter<Monster>"} 
 Player 2 04:02:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Pooter \n2:Player 1 is rolling against Pooter<Monster>"} 
 Player 2 04:02:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Pooter \n2:Player 1 is rolling against Pooter<Monster> \n3:Activate Cursed Fatty "} 
 Player 2 04:03:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Pooter \n2:Player 1 is rolling against Pooter<Monster> \n3:Activate Cursed Fatty "} 
 Player 2 04:03:00 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321,322]} 
 Player 2 04:03:00 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:03:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Pooter \n2:Player 1 is rolling against Pooter<Monster> \n3:Activate Cursed Fatty "} 
 Player 2 04:03:02 $MOVE_CARD_END:  

 {"moveIndex":10,"cardId":109,"flipIfFlipped":true,"playerId":1} 
 Player 2 04:03:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Pooter \n2:Player 1 is rolling against Pooter<Monster> \n3:Activate Cursed Fatty "} 
 Player 2 04:03:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Pooter \n2:Player 1 is rolling against Pooter<Monster> \n3:Activate Cursed Fatty "} 
 Player 2 04:03:06 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321,322]} 
 Player 2 04:03:06 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:03:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Pooter \n2:Player 1 is rolling against Pooter<Monster>"} 
 Player 2 04:03:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Pooter \n2:Player 1 is rolling against Pooter<Monster>"} 
 Player 2 04:03:09 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321,322]} 
 Player 2 04:03:09 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:03:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Pooter"} 
 Player 2 04:03:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Pooter"} 
 Player 2 04:03:12 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321,322]} 
 Player 2 04:03:13 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:03:24 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:03:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Pooter<Monster>"} 
 Player 2 04:03:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Pooter<Monster>"} 
 Player 2 04:03:33 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321,322]} 
 Player 2 04:03:33 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:03:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Pooter<Monster>"} 
 Player 2 04:03:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Pooter<Monster>"} 
 Player 2 04:03:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Pooter \n2:Player 1 is rolling against Pooter<Monster>"} 
 Player 2 04:03:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Pooter \n2:Player 1 is rolling against Pooter<Monster> \n3:Activate Cursed Fatty "} 
 Player 2 04:03:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Pooter \n2:Player 1 is rolling against Pooter<Monster> \n3:Activate Cursed Fatty "} 
 Player 2 04:03:47 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321,322]} 
 Player 2 04:03:47 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:03:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Pooter \n2:Player 1 is rolling against Pooter<Monster> \n3:Activate Cursed Fatty "} 
 Player 2 04:03:50 $MOVE_CARD_END:  

 {"moveIndex":11,"cardId":92,"flipIfFlipped":true,"playerId":1} 
 Player 2 04:03:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Pooter \n2:Player 1 is rolling against Pooter<Monster> \n3:Activate Cursed Fatty "} 
 Player 2 04:03:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Pooter \n2:Player 1 is rolling against Pooter<Monster> \n3:Activate Cursed Fatty "} 
 Player 2 04:03:54 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321,322]} 
 Player 2 04:03:54 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:03:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Pooter \n2:Player 1 is rolling against Pooter<Monster>"} 
 Player 2 04:03:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Pooter \n2:Player 1 is rolling against Pooter<Monster>"} 
 Player 2 04:03:57 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321,322]} 
 Player 2 04:03:57 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:03:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Pooter"} 
 Player 2 04:03:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Pooter \n2:[object Object] Is Going To Be Killed by Azazel"} 
 Player 2 04:04:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Pooter \n2:[object Object] Is Going To Be Killed by Azazel"} 
 Player 2 04:04:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Pooter \n2:[object Object] Is Going To Be Killed by Azazel"} 
 Player 2 04:04:04 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321,322]} 
 Player 2 04:04:04 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:04:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Pooter"} 
 Player 2 04:04:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Pooter"} 
 Player 2 04:04:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Get Pooter<Monster>'s Reward \n2:[object Object] Is Going To Be Killed by Azazel"} 
 Player 2 04:04:10 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321,322]} 
 Player 2 04:04:10 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:04:11 $MOVE_CARD_END:  

 {"moveIndex":12,"cardId":116,"flipIfFlipped":false,"playerId":1} 
 Player 2 04:04:11 $MOVE_CARD_END:  

 {"moveIndex":13,"cardId":293,"flipIfFlipped":true,"playerId":1} 
 Player 2 04:04:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Get Pooter<Monster>'s Reward"} 
 Player 2 04:04:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Get Pooter<Monster>'s Reward \n2:Refill holder1 Slot"} 
 Player 2 04:04:15 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321,322]} 
 Player 2 04:04:15 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:04:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Get Pooter<Monster>'s Reward \n2:Refill holder1 Slot"} 
 Player 2 04:04:18 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321,322]} 
 Player 2 04:04:18 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:04:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Get Pooter<Monster>'s Reward"} 
 Player 2 04:04:23 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321,322]} 
 Player 2 04:04:23 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:04:49 $STACK_EMPTIED:  

 {"playerId":1} 
 Player 2 04:04:49 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:04:49 $NEXT_STACK_ID:  
 Player 2 04:04:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 
 Player 2 04:04:49 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":13,"creatorCardId":321,"turnPlayerCardId":321,"stackEffectType":13}} 
 Player 2 04:04:49 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":13,"creatorCardId":321,"turnPlayerCardId":321,"stackEffectType":13}} 
 Player 2 04:04:49 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 04:04:49 $SHOW_STACK_EFFECT:  

 {"effectId":13} 
 Player 2 04:04:49 $CLEAR_SE_VIS:  
 Player 2 04:04:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":102,"_text":"Add StartTurnLoot 13 "}} 
 Player 2 04:04:52 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:04:52 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":13,"creatorCardId":321,"turnPlayerCardId":321,"stackEffectType":13}} 
 Player 2 04:04:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":103,"_text":"Response Adding StartTurnLoot 13"},"childOfId":102} 
 Player 2 04:04:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":104,"_text":"Wait For Response From Player 2 "},"childOfId":102} 
 Player 2 04:04:52 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:04:52 $ACTION_MASSAGE_REMOVE:  

 {"id":104} 
 Player 2 04:04:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":105,"_text":"Wait For Response From Player 1 "},"childOfId":102} 
 Player 2 04:04:52 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:04:52 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:04:52 $ACTION_MASSAGE_REMOVE:  

 {"id":105} 
 Player 2 04:04:52 $ACTION_MASSAGE_REMOVE:  

 {"id":103} 
 Player 2 04:04:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":106,"_text":"Resolve StartTurnLoot 13 "}} 
 Player 2 04:04:52 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":13,"creatorCardId":321,"turnPlayerCardId":321,"stackEffectType":13}} 
 Player 2 04:04:52 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 04:04:52 $MOVE_CARD:  

 {"moveIndex":14,"cardId":45,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.599999904632568,"y":-0.20000000298023224,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 04:04:53 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":45} 
 Player 2 04:04:53 $FLIP_CARD:  

 {"cardId":45} 
 Player 2 04:04:53 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":45} 
 Player 2 04:04:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Has Drawen Loot For Start Turn"} 
 Player 2 04:04:53 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":13,"creatorCardId":321,"turnPlayerCardId":321,"stackEffectType":13}} 
 Player 2 04:04:53 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":13} 
 Player 2 04:04:53 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 04:04:53 $SHOW_STACK_EFFECT:  

 {"effectId":13} 
 Player 2 04:04:56 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":13} 
 Player 2 04:04:56 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":107,"_text":"Remove After Resolve StartTurnLoot 13  "}} 
 Player 2 04:04:56 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:04:56 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":13,"creatorCardId":321,"turnPlayerCardId":321,"stackEffectType":13}} 
 Player 2 04:04:56 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":108,"_text":"Response Remove After Resolve StartTurnLoot 13"},"childOfId":107} 
 Player 2 04:04:56 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":109,"_text":"Wait For Response From Player 1 "},"childOfId":107} 
 Player 2 04:04:56 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:04:56 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:04:56 $ACTION_MASSAGE_REMOVE:  

 {"id":109} 
 Player 2 04:04:56 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":110,"_text":"Wait For Response From Player 2 "},"childOfId":107} 
 Player 2 04:04:56 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:04:56 $ACTION_MASSAGE_REMOVE:  

 {"id":110} 
 Player 2 04:04:56 $ACTION_MASSAGE_REMOVE:  

 {"id":108} 
 Player 2 04:04:56 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":111,"_text":"Stack Was Emptied "}} 
 Player 2 04:04:56 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:04:56 $CLEAR_SE_VIS:  
 Player 2 04:05:26 $NEXT_STACK_ID:  
 Player 2 04:05:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Play Bloody Penny "} 
 Player 2 04:05:26 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":14,"creatorCardId":321,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":82,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 2 04:05:26 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":14,"creatorCardId":321,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":82,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 2 04:05:26 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 04:05:26 $SHOW_STACK_EFFECT:  

 {"effectId":14} 
 Player 2 04:05:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":112,"_text":"Add PlayLootCardStackEffect 14 "}} 
 Player 2 04:05:29 $PLAYER_LOSE_LOOT:  

 {"playerId":2,"cardId":82} 
 Player 2 04:05:29 $MOVE_CARD:  

 {"moveIndex":15,"cardId":82,"placeID":329,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 04:05:29 $MOVE_CARD_TO_PILE:  

 {"type":7,"cardId":82} 
 Player 2 04:05:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Play Bloody Penny: AddTrinket"} 
 Player 2 04:05:30 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:05:30 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":14,"creatorCardId":321,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":82,"lootPlayerId":2,"effectToDo":{"effectName":"AddTrinket","cardEffectNum":0,"cardPlayerId":2,"cardId":82,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 04:05:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":113,"_text":"Response Adding PlayLootCardStackEffect 14"},"childOfId":112} 
 Player 2 04:05:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":114,"_text":"Wait For Response From Player 2 "},"childOfId":112} 
 Player 2 04:05:30 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:05:30 $ACTION_MASSAGE_REMOVE:  

 {"id":114} 
 Player 2 04:05:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":115,"_text":"Wait For Response From Player 1 "},"childOfId":112} 
 Player 2 04:05:30 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:05:30 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:05:30 $ACTION_MASSAGE_REMOVE:  

 {"id":115} 
 Player 2 04:05:30 $ACTION_MASSAGE_REMOVE:  

 {"id":113} 
 Player 2 04:05:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":116,"_text":"Resolve PlayLootCardStackEffect 14 "}} 
 Player 2 04:05:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Play Bloody Penny: AddTrinket"} 
 Player 2 04:05:30 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":14,"creatorCardId":321,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":82,"lootPlayerId":2,"effectToDo":{"effectName":"AddTrinket","cardEffectNum":0,"cardPlayerId":2,"cardId":82,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 04:05:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Plays Bloody Penny: AddTrinket"} 
 Player 2 04:05:30 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":82,"particleType":6} 
 Player 2 04:05:32 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":82,"particleType":6} 
 Player 2 04:05:32 $CARD_ADD_TRINKET:  

 {"cardId":82,"playerId":2,"addMuiliEffect":false} 
 Player 2 04:05:32 $REMOVE_FROM_PILE:  

 {"cardId":82} 
 Player 2 04:05:32 $REGISTER_PASSIVE_ITEM:  

 {"cardId":82} 
 Player 2 04:05:32 $MOVE_CARD:  

 {"moveIndex":16,"cardId":82,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 
 Player 2 04:05:32 $ADD_AN_ITEM:  

 {"playerId":2,"cardId":82,"isReward":true} 
 Player 2 04:05:32 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":82}],"result":true,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Player 2 04:05:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Plays Bloody Penny: AddTrinket"} 
 Player 2 04:05:33 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":14,"creatorCardId":321,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":82,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 04:05:33 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":14} 
 Player 2 04:05:33 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 04:05:33 $SHOW_STACK_EFFECT:  

 {"effectId":14} 
 Player 2 04:05:35 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":14} 
 Player 2 04:05:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":117,"_text":"Remove After Resolve PlayLootCardStackEffect 14  "}} 
 Player 2 04:05:35 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:05:35 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":14,"creatorCardId":321,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":82,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 04:05:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":118,"_text":"Response Remove After Resolve PlayLootCardStackEffect 14"},"childOfId":117} 
 Player 2 04:05:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":119,"_text":"Wait For Response From Player 1 "},"childOfId":117} 
 Player 2 04:05:36 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:05:36 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:05:36 $ACTION_MASSAGE_REMOVE:  

 {"id":119} 
 Player 2 04:05:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":120,"_text":"Wait For Response From Player 2 "},"childOfId":117} 
 Player 2 04:05:36 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:05:36 $ACTION_MASSAGE_REMOVE:  

 {"id":120} 
 Player 2 04:05:36 $ACTION_MASSAGE_REMOVE:  

 {"id":118} 
 Player 2 04:05:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":121,"_text":"Stack Was Emptied "}} 
 Player 2 04:05:36 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:05:36 $CLEAR_SE_VIS:  
 Player 2 04:05:50 $NEXT_STACK_ID:  
 Player 2 04:05:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is going to activate Incubus"} 
 Player 2 04:05:50 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":15,"creatorCardId":321,"hasLockingStackEffect":false,"itemToPlayCardId":322,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 04:05:50 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":15,"creatorCardId":321,"hasLockingStackEffect":false,"itemToPlayCardId":322,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 04:05:50 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 04:05:50 $SHOW_STACK_EFFECT:  

 {"effectId":15} 
 Player 2 04:05:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":122,"_text":"Add ActivateItem 15 "}} 
 Player 2 04:05:55 $SHOW_EFFECT_CHOSEN:  

 {"cardId":322,"pos":{"x":-667,"y":-171.15899658203125},"size":{"w":490,"h":77.5}} 
 Player 2 04:05:58 $SHOW_DECISION:  

 {"startCardId":322,"endCardId":311} 
 Player 2 04:06:01 $USE_ITEM:  

 {"cardId":322} 
 Player 2 04:06:01 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:06:01 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":15,"creatorCardId":321,"hasLockingStackEffect":false,"itemToPlayCardId":322,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 04:06:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":123,"_text":"Response Adding ActivateItem 15"},"childOfId":122} 
 Player 2 04:06:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":124,"_text":"Wait For Response From Player 2 "},"childOfId":122} 
 Player 2 04:06:01 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:06:01 $ACTION_MASSAGE_REMOVE:  

 {"id":124} 
 Player 2 04:06:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":125,"_text":"Wait For Response From Player 1 "},"childOfId":122} 
 Player 2 04:06:01 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:06:01 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:06:01 $ACTION_MASSAGE_REMOVE:  

 {"id":125} 
 Player 2 04:06:01 $ACTION_MASSAGE_REMOVE:  

 {"id":123} 
 Player 2 04:06:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":126,"_text":"Resolve ActivateItem 15 "}} 
 Player 2 04:06:01 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":15,"creatorCardId":321,"hasLockingStackEffect":false,"itemToPlayCardId":322,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 04:06:01 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":322,"particleType":6} 
 Player 2 04:06:03 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":322,"particleType":6} 
 Player 2 04:06:21 $PLAYER_LOSE_LOOT:  

 {"playerId":2,"cardId":31} 
 Player 2 04:06:21 $MOVE_CARD:  

 {"moveIndex":17,"cardId":31,"placeID":1,"flipIfFlipped":false,"playerId":2,"placeType":"Hand"} 
 Player 2 04:06:21 $FLIP_CARD:  

 {"cardId":31} 
 Player 2 04:06:21 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":31} 
 Player 2 04:06:21 $PLAYER_LOSE_LOOT:  

 {"playerId":1,"cardId":126} 
 Player 2 04:06:21 $MOVE_CARD:  

 {"moveIndex":18,"cardId":126,"placeID":2,"flipIfFlipped":false,"playerId":2,"placeType":"Hand"} 
 Player 2 04:06:22 $FLIP_CARD:  

 {"cardId":126} 
 Player 2 04:06:22 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":126} 
 Player 2 04:06:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 has activated Incubus"} 
 Player 2 04:06:22 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ACTIVATE_ITEM","args":[{"type":0,"number":322}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 
 Player 2 04:06:22 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":15,"creatorCardId":321,"hasLockingStackEffect":false,"itemToPlayCardId":322,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 04:06:22 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":15} 
 Player 2 04:06:22 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 04:06:22 $SHOW_STACK_EFFECT:  

 {"effectId":15} 
 Player 2 04:06:25 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":15} 
 Player 2 04:06:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":127,"_text":"Remove After Resolve ActivateItem 15  "}} 
 Player 2 04:06:25 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:06:25 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":15,"creatorCardId":321,"hasLockingStackEffect":false,"itemToPlayCardId":322,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 04:06:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":128,"_text":"Response Remove After Resolve ActivateItem 15"},"childOfId":127} 
 Player 2 04:06:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":129,"_text":"Wait For Response From Player 1 "},"childOfId":127} 
 Player 2 04:06:25 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:06:25 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:06:25 $ACTION_MASSAGE_REMOVE:  

 {"id":129} 
 Player 2 04:06:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":130,"_text":"Wait For Response From Player 2 "},"childOfId":127} 
 Player 2 04:06:25 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:06:25 $ACTION_MASSAGE_REMOVE:  

 {"id":130} 
 Player 2 04:06:25 $ACTION_MASSAGE_REMOVE:  

 {"id":128} 
 Player 2 04:06:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":131,"_text":"Stack Was Emptied "}} 
 Player 2 04:06:25 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:06:25 $CLEAR_SE_VIS:  
 Player 2 04:06:50 $NEXT_STACK_ID:  
 Player 2 04:06:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is going to activate Lilith"} 
 Player 2 04:06:50 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":16,"creatorCardId":321,"hasLockingStackEffect":false,"itemToPlayCardId":321,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 04:06:50 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":16,"creatorCardId":321,"hasLockingStackEffect":false,"itemToPlayCardId":321,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 04:06:50 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 04:06:50 $SHOW_STACK_EFFECT:  

 {"effectId":16} 
 Player 2 04:06:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":132,"_text":"Add ActivateItem 16 "}} 
 Player 2 04:06:55 $SHOW_DECISION:  

 {"startCardId":321,"endCardId":126,"flipEndCard":true} 
 Player 2 04:06:58 $USE_ITEM:  

 {"cardId":321} 
 Player 2 04:06:58 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:06:58 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":16,"creatorCardId":321,"hasLockingStackEffect":false,"itemToPlayCardId":321,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 04:06:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":133,"_text":"Response Adding ActivateItem 16"},"childOfId":132} 
 Player 2 04:06:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":134,"_text":"Wait For Response From Player 2 "},"childOfId":132} 
 Player 2 04:06:58 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:06:58 $ACTION_MASSAGE_REMOVE:  

 {"id":134} 
 Player 2 04:06:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":135,"_text":"Wait For Response From Player 1 "},"childOfId":132} 
 Player 2 04:06:58 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:06:58 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:06:59 $ACTION_MASSAGE_REMOVE:  

 {"id":135} 
 Player 2 04:06:59 $ACTION_MASSAGE_REMOVE:  

 {"id":133} 
 Player 2 04:06:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":136,"_text":"Resolve ActivateItem 16 "}} 
 Player 2 04:06:59 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":16,"creatorCardId":321,"hasLockingStackEffect":false,"itemToPlayCardId":321,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 04:06:59 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":321,"particleType":6} 
 Player 2 04:07:01 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":321,"particleType":6} 
 Player 2 04:07:01 $NEXT_STACK_ID:  
 Player 2 04:07:01 $PLAYER_LOSE_LOOT:  

 {"playerId":2,"cardId":126} 
 Player 2 04:07:01 $MOVE_CARD:  

 {"moveIndex":19,"cardId":126,"placeID":329,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 04:07:01 $MOVE_CARD_TO_PILE:  

 {"type":7,"cardId":126} 
 Player 2 04:07:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Play The Chariot: GainStats \n2:Player 2 is going to activate Lilith"} 
 Player 2 04:07:06 $SHOW_DECISION:  

 {"startCardId":126,"endCardId":321} 
 Player 2 04:07:09 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:07:09 $CLEAR_SE_VIS:  
 Player 2 04:07:09 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":17,"creatorCardId":321,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":126,"lootPlayerId":2,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":2,"cardId":126,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 04:07:09 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":16,"creatorCardId":321,"hasLockingStackEffect":false,"itemToPlayCardId":321,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 04:07:09 $REPLACE_STACK:  

 {"currentStack":[{"entityId":17,"creatorCardId":321,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":126,"lootPlayerId":2,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":2,"cardId":126,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":16,"creatorCardId":321,"hasLockingStackEffect":false,"itemToPlayCardId":321,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 
 Player 2 04:07:09 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 04:07:09 $SHOW_STACK_EFFECT:  

 {"effectId":17} 
 Player 2 04:07:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Play The Chariot: GainStats \n2:Player 2 has activated Lilith"} 
 Player 2 04:07:12 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ACTIVATE_ITEM","args":[{"type":0,"number":321}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 
 Player 2 04:07:12 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":16,"creatorCardId":321,"hasLockingStackEffect":false,"itemToPlayCardId":321,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 04:07:12 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":16} 
 Player 2 04:07:12 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 04:07:12 $SHOW_STACK_EFFECT:  

 {"effectId":16} 
 Player 2 04:07:15 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":16} 
 Player 2 04:07:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":137,"_text":"Remove After Resolve ActivateItem 16  "}} 
 Player 2 04:07:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Play The Chariot: GainStats"} 
 Player 2 04:07:15 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":16,"creatorCardId":321,"hasLockingStackEffect":false,"itemToPlayCardId":321,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 04:07:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":138,"_text":"Response Remove After Resolve ActivateItem 16"},"childOfId":137} 
 Player 2 04:07:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":139,"_text":"Wait For Response From Player 2 "},"childOfId":137} 
 Player 2 04:07:15 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:07:15 $ACTION_MASSAGE_REMOVE:  

 {"id":139} 
 Player 2 04:07:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":140,"_text":"Wait For Response From Player 1 "},"childOfId":137} 
 Player 2 04:07:15 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:07:15 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:07:15 $ACTION_MASSAGE_REMOVE:  

 {"id":140} 
 Player 2 04:07:15 $ACTION_MASSAGE_REMOVE:  

 {"id":138} 
 Player 2 04:07:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":141,"_text":"Resolve PlayLootCardStackEffect 17 "}} 
 Player 2 04:07:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Play The Chariot: GainStats"} 
 Player 2 04:07:15 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":17,"creatorCardId":321,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":126,"lootPlayerId":2,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":2,"cardId":126,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 04:07:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Plays The Chariot: GainStats"} 
 Player 2 04:07:15 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":126,"particleType":6} 
 Player 2 04:07:17 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":126,"particleType":6} 
 Player 2 04:07:17 $PLAYER_GAIN_HP:  

 {"playerId":2,"hpToGain":1,"isTemp":true} 
 Player 2 04:07:17 $PLAYER_GAIN_DMG:  

 {"playerId":2,"DMGToGain":1,"isTemp":true} 
 Player 2 04:07:17 $REMOVE_FROM_PILE:  

 {"cardId":126} 
 Player 2 04:07:17 $MOVE_CARD:  

 {"moveIndex":20,"cardId":126,"placeID":330,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 04:07:18 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":126} 
 Player 2 04:07:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Plays The Chariot: GainStats"} 
 Player 2 04:07:18 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":17,"creatorCardId":321,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":126,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 04:07:18 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":17} 
 Player 2 04:07:18 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 04:07:18 $SHOW_STACK_EFFECT:  

 {"effectId":17} 
 Player 2 04:07:21 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":17} 
 Player 2 04:07:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":142,"_text":"Remove After Resolve PlayLootCardStackEffect 17  "}} 
 Player 2 04:07:21 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:07:21 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":17,"creatorCardId":321,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":126,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 04:07:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":143,"_text":"Response Remove After Resolve PlayLootCardStackEffect 17"},"childOfId":142} 
 Player 2 04:07:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":144,"_text":"Wait For Response From Player 1 "},"childOfId":142} 
 Player 2 04:07:21 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:07:21 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:07:21 $ACTION_MASSAGE_REMOVE:  

 {"id":144} 
 Player 2 04:07:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":145,"_text":"Wait For Response From Player 2 "},"childOfId":142} 
 Player 2 04:07:21 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:07:21 $ACTION_MASSAGE_REMOVE:  

 {"id":145} 
 Player 2 04:07:21 $ACTION_MASSAGE_REMOVE:  

 {"id":143} 
 Player 2 04:07:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":146,"_text":"Stack Was Emptied "}} 
 Player 2 04:07:21 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:07:21 $CLEAR_SE_VIS:  
 Player 2 04:07:25 $NEXT_STACK_ID:  
 Player 2 04:07:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 declared attack on Gurdy"} 
 Player 2 04:07:25 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":18,"creatorCardId":321,"attackingPlayerCardId":321,"idOfCardBeingAttacked":269,"stackEffectType":4}} 
 Player 2 04:07:25 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":18,"creatorCardId":321,"attackingPlayerCardId":321,"idOfCardBeingAttacked":269,"stackEffectType":4}} 
 Player 2 04:07:25 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 04:07:25 $SHOW_STACK_EFFECT:  

 {"effectId":18} 
 Player 2 04:07:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":147,"_text":"Add DeclareAttack 18 "}} 
 Player 2 04:07:28 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:07:28 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":18,"creatorCardId":321,"attackingPlayerCardId":321,"idOfCardBeingAttacked":269,"stackEffectType":4}} 
 Player 2 04:07:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":148,"_text":"Response Adding DeclareAttack 18"},"childOfId":147} 
 Player 2 04:07:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":149,"_text":"Wait For Response From Player 2 "},"childOfId":147} 
 Player 2 04:07:28 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:07:28 $ACTION_MASSAGE_REMOVE:  

 {"id":149} 
 Player 2 04:07:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":150,"_text":"Wait For Response From Player 1 "},"childOfId":147} 
 Player 2 04:07:28 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:07:28 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:07:29 $ACTION_MASSAGE_REMOVE:  

 {"id":150} 
 Player 2 04:07:29 $ACTION_MASSAGE_REMOVE:  

 {"id":148} 
 Player 2 04:07:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":151,"_text":"Resolve DeclareAttack 18 "}} 
 Player 2 04:07:29 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":18,"creatorCardId":321,"attackingPlayerCardId":321,"idOfCardBeingAttacked":269,"stackEffectType":4}} 
 Player 2 04:07:29 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":269,"particleType":5} 
 Player 2 04:07:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Has Entered Battle with Gurdy"} 
 Player 2 04:07:29 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":6,"originStackId":18},"isAfterActivation":true,"index":6} 
 Player 2 04:07:29 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":18,"creatorCardId":321,"attackingPlayerCardId":321,"idOfCardBeingAttacked":269,"stackEffectType":4}} 
 Player 2 04:07:29 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":18} 
 Player 2 04:07:29 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 04:07:29 $SHOW_STACK_EFFECT:  

 {"effectId":18} 
 Player 2 04:07:32 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":18} 
 Player 2 04:07:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":152,"_text":"Remove After Resolve DeclareAttack 18  "}} 
 Player 2 04:07:32 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:07:32 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":18,"creatorCardId":321,"attackingPlayerCardId":321,"idOfCardBeingAttacked":269,"stackEffectType":4}} 
 Player 2 04:07:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":153,"_text":"Response Remove After Resolve DeclareAttack 18"},"childOfId":152} 
 Player 2 04:07:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":154,"_text":"Wait For Response From Player 1 "},"childOfId":152} 
 Player 2 04:07:32 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:07:32 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:07:32 $ACTION_MASSAGE_REMOVE:  

 {"id":154} 
 Player 2 04:07:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":155,"_text":"Wait For Response From Player 2 "},"childOfId":152} 
 Player 2 04:07:32 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:07:32 $ACTION_MASSAGE_REMOVE:  

 {"id":155} 
 Player 2 04:07:32 $ACTION_MASSAGE_REMOVE:  

 {"id":153} 
 Player 2 04:07:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":156,"_text":"Stack Was Emptied "}} 
 Player 2 04:07:32 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:07:32 $CLEAR_SE_VIS:  
 Player 2 04:07:34 $NEXT_STACK_ID:  
 Player 2 04:07:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Gurdy<Monster>"} 
 Player 2 04:07:34 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":19,"creatorCardId":321,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":269}} 
 Player 2 04:07:34 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":19,"creatorCardId":321,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":269}} 
 Player 2 04:07:34 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 04:07:34 $SHOW_STACK_EFFECT:  

 {"effectId":19} 
 Player 2 04:07:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":157,"_text":"Add AttackRoll 19 "}} 
 Player 2 04:07:37 $ROLL_DICE:  

 {"playerId":2} 
 Player 2 04:07:38 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":6} 
 Player 2 04:07:38 $UPDATE_STACK_VIS:  

 {"stackId":19,"text":"player rolled 6 vs Gurdy<Monster>"} 
 Player 2 04:07:38 $SHOW_DICE_ROLL:  

 {"stackId":19} 
 Player 2 04:07:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Gurdy<Monster>"} 
 Player 2 04:07:41 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:07:41 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":19,"creatorCardId":321,"numberRolled":6,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":269}} 
 Player 2 04:07:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":158,"_text":"Response Adding AttackRoll 19"},"childOfId":157} 
 Player 2 04:07:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":159,"_text":"Wait For Response From Player 2 "},"childOfId":157} 
 Player 2 04:07:41 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:07:41 $ACTION_MASSAGE_REMOVE:  

 {"id":159} 
 Player 2 04:07:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":160,"_text":"Wait For Response From Player 1 "},"childOfId":157} 
 Player 2 04:07:41 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:07:41 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:07:42 $ACTION_MASSAGE_REMOVE:  

 {"id":160} 
 Player 2 04:07:42 $ACTION_MASSAGE_REMOVE:  

 {"id":158} 
 Player 2 04:07:42 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":161,"_text":"Resolve AttackRoll 19 "}} 
 Player 2 04:07:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Gurdy<Monster>"} 
 Player 2 04:07:42 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":19,"creatorCardId":321,"numberRolled":6,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":269}} 
 Player 2 04:07:42 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":162,"_text":"Added 0 to original roll"}} 
 Player 2 04:07:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Rolled 6 Against Gurdy<Monster> 4"} 
 Player 2 04:07:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Roll Hit"} 
 Player 2 04:07:42 $NEXT_STACK_ID:  
 Player 2 04:07:42 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:07:42 $CLEAR_SE_VIS:  
 Player 2 04:07:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Gurdy \n2:Player 2 Roll Hit"} 
 Player 2 04:07:42 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":20,"creatorCardId":321,"entityToDoDamageCardId":321,"entityToTakeDamageCardId":269,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6}} 
 Player 2 04:07:42 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":19,"creatorCardId":321,"numberRolled":6,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":269}} 
 Player 2 04:07:42 $REPLACE_STACK:  

 {"currentStack":[{"entityId":20,"creatorCardId":321,"entityToDoDamageCardId":321,"entityToTakeDamageCardId":269,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6},{"entityId":19,"creatorCardId":321,"numberRolled":6,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":269}]} 
 Player 2 04:07:42 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 04:07:42 $SHOW_STACK_EFFECT:  

 {"effectId":20} 
 Player 2 04:07:45 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":6},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":7,"originStackId":19},"isAfterActivation":true,"index":7} 
 Player 2 04:07:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Gurdy \n2:Player 2 Roll Hit"} 
 Player 2 04:07:45 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":19,"creatorCardId":321,"numberRolled":6,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":269}} 
 Player 2 04:07:45 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":19} 
 Player 2 04:07:45 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 04:07:45 $SHOW_STACK_EFFECT:  

 {"effectId":19} 
 Player 2 04:07:48 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":19} 
 Player 2 04:07:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":163,"_text":"Remove After Resolve AttackRoll 19  "}} 
 Player 2 04:07:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Gurdy"} 
 Player 2 04:07:48 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":19,"creatorCardId":321,"numberRolled":6,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":269}} 
 Player 2 04:07:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":164,"_text":"Response Remove After Resolve AttackRoll 19"},"childOfId":163} 
 Player 2 04:07:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":165,"_text":"Wait For Response From Player 2 "},"childOfId":163} 
 Player 2 04:07:48 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:07:48 $ACTION_MASSAGE_REMOVE:  

 {"id":165} 
 Player 2 04:07:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":166,"_text":"Wait For Response From Player 1 "},"childOfId":163} 
 Player 2 04:07:48 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:07:48 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:07:48 $ACTION_MASSAGE_REMOVE:  

 {"id":166} 
 Player 2 04:07:48 $ACTION_MASSAGE_REMOVE:  

 {"id":164} 
 Player 2 04:07:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":167,"_text":"Resolve CombatDamage 20 "}} 
 Player 2 04:07:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Gurdy"} 
 Player 2 04:07:48 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":20,"creatorCardId":321,"entityToDoDamageCardId":321,"entityToTakeDamageCardId":269,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6}} 
 Player 2 04:07:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith will deal 2 combat damage to Gurdy "} 
 Player 2 04:07:48 $UPDATE_STACK_VIS:  

 {"stackId":20,"text":"Lilith will deal 2 combat damage to Gurdy"} 
 Player 2 04:07:48 $MONSTER_GET_DAMAGED:  

 {"cardId":269,"hpLeft":3,"damageDealerId":321} 
 Player 2 04:07:48 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":321},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":269,"scopeIsPlayer":false,"index":8,"originStackId":-1},"isAfterActivation":true,"index":8} 
 Player 2 04:07:48 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":2},{"type":2,"number":6},{"type":0,"number":321},{"type":0,"number":269}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":9,"originStackId":20},"isAfterActivation":true,"index":9} 
 Player 2 04:07:48 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":20,"creatorCardId":321,"entityToDoDamageCardId":321,"entityToTakeDamageCardId":269,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6}} 
 Player 2 04:07:48 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":20} 
 Player 2 04:07:48 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 04:07:48 $SHOW_STACK_EFFECT:  

 {"effectId":20} 
 Player 2 04:07:51 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":20} 
 Player 2 04:07:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":168,"_text":"Remove After Resolve CombatDamage 20  "}} 
 Player 2 04:07:51 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:07:51 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":20,"creatorCardId":321,"entityToDoDamageCardId":321,"entityToTakeDamageCardId":269,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6}} 
 Player 2 04:07:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":169,"_text":"Response Remove After Resolve CombatDamage 20"},"childOfId":168} 
 Player 2 04:07:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":170,"_text":"Wait For Response From Player 1 "},"childOfId":168} 
 Player 2 04:07:51 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:07:51 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:07:51 $ACTION_MASSAGE_REMOVE:  

 {"id":170} 
 Player 2 04:07:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":171,"_text":"Wait For Response From Player 2 "},"childOfId":168} 
 Player 2 04:07:51 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:07:51 $ACTION_MASSAGE_REMOVE:  

 {"id":171} 
 Player 2 04:07:52 $ACTION_MASSAGE_REMOVE:  

 {"id":169} 
 Player 2 04:07:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":172,"_text":"Stack Was Emptied "}} 
 Player 2 04:07:52 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:07:52 $CLEAR_SE_VIS:  
 Player 2 04:07:53 $NEXT_STACK_ID:  
 Player 2 04:07:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Gurdy<Monster>"} 
 Player 2 04:07:53 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":21,"creatorCardId":321,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":269}} 
 Player 2 04:07:53 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":21,"creatorCardId":321,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":269}} 
 Player 2 04:07:53 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 04:07:53 $SHOW_STACK_EFFECT:  

 {"effectId":21} 
 Player 2 04:07:56 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":173,"_text":"Add AttackRoll 21 "}} 
 Player 2 04:07:56 $ROLL_DICE:  

 {"playerId":2} 
 Player 2 04:07:57 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":2} 
 Player 2 04:07:57 $UPDATE_STACK_VIS:  

 {"stackId":21,"text":"player rolled 2 vs Gurdy<Monster>"} 
 Player 2 04:07:57 $SHOW_DICE_ROLL:  

 {"stackId":21} 
 Player 2 04:08:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 2 vs Gurdy<Monster>"} 
 Player 2 04:08:00 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:08:00 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":21,"creatorCardId":321,"numberRolled":2,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":269}} 
 Player 2 04:08:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":174,"_text":"Response Adding AttackRoll 21"},"childOfId":173} 
 Player 2 04:08:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":175,"_text":"Wait For Response From Player 2 "},"childOfId":173} 
 Player 2 04:08:00 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:08:00 $ACTION_MASSAGE_REMOVE:  

 {"id":175} 
 Player 2 04:08:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":176,"_text":"Wait For Response From Player 1 "},"childOfId":173} 
 Player 2 04:08:00 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:08:00 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:08:01 $ACTION_MASSAGE_REMOVE:  

 {"id":176} 
 Player 2 04:08:01 $ACTION_MASSAGE_REMOVE:  

 {"id":174} 
 Player 2 04:08:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":177,"_text":"Resolve AttackRoll 21 "}} 
 Player 2 04:08:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 2 vs Gurdy<Monster>"} 
 Player 2 04:08:01 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":21,"creatorCardId":321,"numberRolled":2,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":269}} 
 Player 2 04:08:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":178,"_text":"Added 0 to original roll"}} 
 Player 2 04:08:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Rolled 2 Against Gurdy<Monster> 4"} 
 Player 2 04:08:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Roll Miss"} 
 Player 2 04:08:01 $NEXT_STACK_ID:  
 Player 2 04:08:01 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:08:01 $CLEAR_SE_VIS:  
 Player 2 04:08:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Gurdy is going to hurt Lilith \n2:Player 2 Roll Miss"} 
 Player 2 04:08:01 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":22,"creatorCardId":321,"entityToDoDamageCardId":269,"entityToTakeDamageCardId":321,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":2}} 
 Player 2 04:08:01 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":21,"creatorCardId":321,"numberRolled":2,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":269}} 
 Player 2 04:08:01 $REPLACE_STACK:  

 {"currentStack":[{"entityId":22,"creatorCardId":321,"entityToDoDamageCardId":269,"entityToTakeDamageCardId":321,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":2},{"entityId":21,"creatorCardId":321,"numberRolled":2,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":269}]} 
 Player 2 04:08:01 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 04:08:01 $SHOW_STACK_EFFECT:  

 {"effectId":22} 
 Player 2 04:08:04 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":2},{"type":2,"number":1},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":10,"originStackId":21},"isAfterActivation":true,"index":10} 
 Player 2 04:08:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Gurdy is going to hurt Lilith \n2:Player 2 Roll Miss"} 
 Player 2 04:08:04 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":21,"creatorCardId":321,"numberRolled":2,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":269}} 
 Player 2 04:08:04 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":21} 
 Player 2 04:08:04 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 04:08:04 $SHOW_STACK_EFFECT:  

 {"effectId":21} 
 Player 2 04:08:07 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":21} 
 Player 2 04:08:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":179,"_text":"Remove After Resolve AttackRoll 21  "}} 
 Player 2 04:08:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Gurdy is going to hurt Lilith"} 
 Player 2 04:08:07 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":21,"creatorCardId":321,"numberRolled":2,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":269}} 
 Player 2 04:08:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":180,"_text":"Response Remove After Resolve AttackRoll 21"},"childOfId":179} 
 Player 2 04:08:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":181,"_text":"Wait For Response From Player 2 "},"childOfId":179} 
 Player 2 04:08:07 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:08:07 $ACTION_MASSAGE_REMOVE:  

 {"id":181} 
 Player 2 04:08:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":182,"_text":"Wait For Response From Player 1 "},"childOfId":179} 
 Player 2 04:08:07 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:08:07 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:08:07 $ACTION_MASSAGE_REMOVE:  

 {"id":182} 
 Player 2 04:08:07 $ACTION_MASSAGE_REMOVE:  

 {"id":180} 
 Player 2 04:08:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":183,"_text":"Resolve CombatDamage 22 "}} 
 Player 2 04:08:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Gurdy is going to hurt Lilith"} 
 Player 2 04:08:07 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":22,"creatorCardId":321,"entityToDoDamageCardId":269,"entityToTakeDamageCardId":321,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":2}} 
 Player 2 04:08:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Gurdy Is Going To Hurt Lilith For 1 DMG "} 
 Player 2 04:08:07 $UPDATE_STACK_VIS:  

 {"stackId":22,"text":"Gurdy will deal 1 combat damage to Lilith"} 
 Player 2 04:08:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Gurdy will deal 1 combat damage to Lilith"} 
 Player 2 04:08:07 $PLAYER_GET_HIT:  

 {"playerId":2,"damage":1,"damageDealerId":269} 
 Player 2 04:08:07 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":269}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":11,"originStackId":-1},"isAfterActivation":true,"index":11} 
 Player 2 04:08:07 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_TAKEN","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":0,"number":269}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":12,"originStackId":22},"isAfterActivation":true,"index":12} 
 Player 2 04:08:07 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":22,"creatorCardId":321,"entityToDoDamageCardId":269,"entityToTakeDamageCardId":321,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":2}} 
 Player 2 04:08:07 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":22} 
 Player 2 04:08:07 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 04:08:07 $SHOW_STACK_EFFECT:  

 {"effectId":22} 
 Player 2 04:08:10 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":22} 
 Player 2 04:08:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":184,"_text":"Remove After Resolve CombatDamage 22  "}} 
 Player 2 04:08:10 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:08:10 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":22,"creatorCardId":321,"entityToDoDamageCardId":269,"entityToTakeDamageCardId":321,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":2}} 
 Player 2 04:08:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":185,"_text":"Response Remove After Resolve CombatDamage 22"},"childOfId":184} 
 Player 2 04:08:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":186,"_text":"Wait For Response From Player 1 "},"childOfId":184} 
 Player 2 04:08:10 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:08:10 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:08:10 $ACTION_MASSAGE_REMOVE:  

 {"id":186} 
 Player 2 04:08:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":187,"_text":"Wait For Response From Player 2 "},"childOfId":184} 
 Player 2 04:08:10 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:08:10 $ACTION_MASSAGE_REMOVE:  

 {"id":187} 
 Player 2 04:08:10 $ACTION_MASSAGE_REMOVE:  

 {"id":185} 
 Player 2 04:08:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":188,"_text":"Stack Was Emptied "}} 
 Player 2 04:08:10 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:08:10 $CLEAR_SE_VIS:  
 Player 2 04:08:12 $NEXT_STACK_ID:  
 Player 2 04:08:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Gurdy<Monster>"} 
 Player 2 04:08:12 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":23,"creatorCardId":321,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":269}} 
 Player 2 04:08:12 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":23,"creatorCardId":321,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":269}} 
 Player 2 04:08:12 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 04:08:12 $SHOW_STACK_EFFECT:  

 {"effectId":23} 
 Player 2 04:08:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":189,"_text":"Add AttackRoll 23 "}} 
 Player 2 04:08:15 $ROLL_DICE:  

 {"playerId":2} 
 Player 2 04:08:17 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":1} 
 Player 2 04:08:17 $UPDATE_STACK_VIS:  

 {"stackId":23,"text":"player rolled 1 vs Gurdy<Monster>"} 
 Player 2 04:08:17 $SHOW_DICE_ROLL:  

 {"stackId":23} 
 Player 2 04:08:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs Gurdy<Monster>"} 
 Player 2 04:08:20 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:08:20 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":23,"creatorCardId":321,"numberRolled":1,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":269}} 
 Player 2 04:08:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":190,"_text":"Response Adding AttackRoll 23"},"childOfId":189} 
 Player 2 04:08:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":191,"_text":"Wait For Response From Player 2 "},"childOfId":189} 
 Player 2 04:08:20 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:08:20 $ACTION_MASSAGE_REMOVE:  

 {"id":191} 
 Player 2 04:08:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":192,"_text":"Wait For Response From Player 1 "},"childOfId":189} 
 Player 2 04:08:20 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:08:20 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:08:20 $ACTION_MASSAGE_REMOVE:  

 {"id":192} 
 Player 2 04:08:20 $ACTION_MASSAGE_REMOVE:  

 {"id":190} 
 Player 2 04:08:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":193,"_text":"Resolve AttackRoll 23 "}} 
 Player 2 04:08:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs Gurdy<Monster>"} 
 Player 2 04:08:20 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":23,"creatorCardId":321,"numberRolled":1,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":269}} 
 Player 2 04:08:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":194,"_text":"Added 0 to original roll"}} 
 Player 2 04:08:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Rolled 1 Against Gurdy<Monster> 4"} 
 Player 2 04:08:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Roll Miss"} 
 Player 2 04:08:21 $NEXT_STACK_ID:  
 Player 2 04:08:21 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:08:21 $CLEAR_SE_VIS:  
 Player 2 04:08:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Gurdy is going to hurt Lilith \n2:Player 2 Roll Miss"} 
 Player 2 04:08:21 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":24,"creatorCardId":321,"entityToDoDamageCardId":269,"entityToTakeDamageCardId":321,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1}} 
 Player 2 04:08:21 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":23,"creatorCardId":321,"numberRolled":1,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":269}} 
 Player 2 04:08:21 $REPLACE_STACK:  

 {"currentStack":[{"entityId":24,"creatorCardId":321,"entityToDoDamageCardId":269,"entityToTakeDamageCardId":321,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1},{"entityId":23,"creatorCardId":321,"numberRolled":1,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":269}]} 
 Player 2 04:08:21 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 04:08:21 $SHOW_STACK_EFFECT:  

 {"effectId":24} 
 Player 2 04:08:23 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":1},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":13,"originStackId":23},"isAfterActivation":true,"index":13} 
 Player 2 04:08:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Gurdy is going to hurt Lilith \n2:Player 2 Roll Miss"} 
 Player 2 04:08:23 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":23,"creatorCardId":321,"numberRolled":1,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":269}} 
 Player 2 04:08:23 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":23} 
 Player 2 04:08:24 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 04:08:24 $SHOW_STACK_EFFECT:  

 {"effectId":23} 
 Player 2 04:08:26 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":23} 
 Player 2 04:08:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":195,"_text":"Remove After Resolve AttackRoll 23  "}} 
 Player 2 04:08:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Gurdy is going to hurt Lilith"} 
 Player 2 04:08:27 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":23,"creatorCardId":321,"numberRolled":1,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":269}} 
 Player 2 04:08:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":196,"_text":"Response Remove After Resolve AttackRoll 23"},"childOfId":195} 
 Player 2 04:08:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":197,"_text":"Wait For Response From Player 2 "},"childOfId":195} 
 Player 2 04:08:27 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:08:27 $ACTION_MASSAGE_REMOVE:  

 {"id":197} 
 Player 2 04:08:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":198,"_text":"Wait For Response From Player 1 "},"childOfId":195} 
 Player 2 04:08:27 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:08:27 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:08:27 $ACTION_MASSAGE_REMOVE:  

 {"id":198} 
 Player 2 04:08:27 $ACTION_MASSAGE_REMOVE:  

 {"id":196} 
 Player 2 04:08:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":199,"_text":"Resolve CombatDamage 24 "}} 
 Player 2 04:08:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Gurdy is going to hurt Lilith"} 
 Player 2 04:08:27 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":24,"creatorCardId":321,"entityToDoDamageCardId":269,"entityToTakeDamageCardId":321,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1}} 
 Player 2 04:08:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Gurdy Is Going To Hurt Lilith For 1 DMG "} 
 Player 2 04:08:27 $UPDATE_STACK_VIS:  

 {"stackId":24,"text":"Gurdy will deal 1 combat damage to Lilith"} 
 Player 2 04:08:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Gurdy will deal 1 combat damage to Lilith"} 
 Player 2 04:08:27 $PLAYER_GET_HIT:  

 {"playerId":2,"damage":1,"damageDealerId":269} 
 Player 2 04:08:27 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":269}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":14,"originStackId":-1},"isAfterActivation":true,"index":14} 
 Player 2 04:08:27 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_TAKEN","args":[{"type":2,"number":1},{"type":2,"number":1},{"type":0,"number":269}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":15,"originStackId":24},"isAfterActivation":true,"index":15} 
 Player 2 04:08:27 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":24,"creatorCardId":321,"entityToDoDamageCardId":269,"entityToTakeDamageCardId":321,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1}} 
 Player 2 04:08:27 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":24} 
 Player 2 04:08:27 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 04:08:27 $SHOW_STACK_EFFECT:  

 {"effectId":24} 
 Player 2 04:08:30 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":24} 
 Player 2 04:08:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":200,"_text":"Remove After Resolve CombatDamage 24  "}} 
 Player 2 04:08:30 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:08:30 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":24,"creatorCardId":321,"entityToDoDamageCardId":269,"entityToTakeDamageCardId":321,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1}} 
 Player 2 04:08:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":201,"_text":"Response Remove After Resolve CombatDamage 24"},"childOfId":200} 
 Player 2 04:08:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":202,"_text":"Wait For Response From Player 1 "},"childOfId":200} 
 Player 2 04:08:30 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:08:30 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:08:30 $ACTION_MASSAGE_REMOVE:  

 {"id":202} 
 Player 2 04:08:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":203,"_text":"Wait For Response From Player 2 "},"childOfId":200} 
 Player 2 04:08:30 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:08:30 $ACTION_MASSAGE_REMOVE:  

 {"id":203} 
 Player 2 04:08:30 $ACTION_MASSAGE_REMOVE:  

 {"id":201} 
 Player 2 04:08:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":204,"_text":"Stack Was Emptied "}} 
 Player 2 04:08:30 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:08:30 $CLEAR_SE_VIS:  
 Player 2 04:08:33 $NEXT_STACK_ID:  
 Player 2 04:08:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Gurdy<Monster>"} 
 Player 2 04:08:33 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":25,"creatorCardId":321,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":269}} 
 Player 2 04:08:33 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":25,"creatorCardId":321,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":269}} 
 Player 2 04:08:33 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 04:08:33 $SHOW_STACK_EFFECT:  

 {"effectId":25} 
 Player 2 04:08:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":205,"_text":"Add AttackRoll 25 "}} 
 Player 2 04:08:36 $ROLL_DICE:  

 {"playerId":2} 
 Player 2 04:08:38 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":2} 
 Player 2 04:08:38 $UPDATE_STACK_VIS:  

 {"stackId":25,"text":"player rolled 2 vs Gurdy<Monster>"} 
 Player 2 04:08:38 $SHOW_DICE_ROLL:  

 {"stackId":25} 
 Player 2 04:08:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 2 vs Gurdy<Monster>"} 
 Player 2 04:08:41 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:08:41 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":25,"creatorCardId":321,"numberRolled":2,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":269}} 
 Player 2 04:08:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":206,"_text":"Response Adding AttackRoll 25"},"childOfId":205} 
 Player 2 04:08:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":207,"_text":"Wait For Response From Player 2 "},"childOfId":205} 
 Player 2 04:08:41 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:08:41 $ACTION_MASSAGE_REMOVE:  

 {"id":207} 
 Player 2 04:08:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":208,"_text":"Wait For Response From Player 1 "},"childOfId":205} 
 Player 2 04:08:41 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:08:41 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:08:41 $ACTION_MASSAGE_REMOVE:  

 {"id":208} 
 Player 2 04:08:41 $ACTION_MASSAGE_REMOVE:  

 {"id":206} 
 Player 2 04:08:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":209,"_text":"Resolve AttackRoll 25 "}} 
 Player 2 04:08:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 2 vs Gurdy<Monster>"} 
 Player 2 04:08:41 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":25,"creatorCardId":321,"numberRolled":2,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":269}} 
 Player 2 04:08:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":210,"_text":"Added 0 to original roll"}} 
 Player 2 04:08:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Rolled 2 Against Gurdy<Monster> 4"} 
 Player 2 04:08:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Roll Miss"} 
 Player 2 04:08:41 $NEXT_STACK_ID:  
 Player 2 04:08:41 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:08:41 $CLEAR_SE_VIS:  
 Player 2 04:08:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Gurdy is going to hurt Lilith \n2:Player 2 Roll Miss"} 
 Player 2 04:08:41 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":26,"creatorCardId":321,"entityToDoDamageCardId":269,"entityToTakeDamageCardId":321,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":2}} 
 Player 2 04:08:41 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":25,"creatorCardId":321,"numberRolled":2,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":269}} 
 Player 2 04:08:41 $REPLACE_STACK:  

 {"currentStack":[{"entityId":26,"creatorCardId":321,"entityToDoDamageCardId":269,"entityToTakeDamageCardId":321,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":2},{"entityId":25,"creatorCardId":321,"numberRolled":2,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":269}]} 
 Player 2 04:08:41 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 04:08:42 $SHOW_STACK_EFFECT:  

 {"effectId":26} 
 Player 2 04:08:44 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":2},{"type":2,"number":1},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":16,"originStackId":25},"isAfterActivation":true,"index":16} 
 Player 2 04:08:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Gurdy is going to hurt Lilith \n2:Player 2 Roll Miss"} 
 Player 2 04:08:44 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":25,"creatorCardId":321,"numberRolled":2,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":269}} 
 Player 2 04:08:44 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":25} 
 Player 2 04:08:44 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 04:08:44 $SHOW_STACK_EFFECT:  

 {"effectId":25} 
 Player 2 04:08:47 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":25} 
 Player 2 04:08:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":211,"_text":"Remove After Resolve AttackRoll 25  "}} 
 Player 2 04:08:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Gurdy is going to hurt Lilith"} 
 Player 2 04:08:47 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":25,"creatorCardId":321,"numberRolled":2,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":269}} 
 Player 2 04:08:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":212,"_text":"Response Remove After Resolve AttackRoll 25"},"childOfId":211} 
 Player 2 04:08:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":213,"_text":"Wait For Response From Player 2 "},"childOfId":211} 
 Player 2 04:08:47 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:08:47 $ACTION_MASSAGE_REMOVE:  

 {"id":213} 
 Player 2 04:08:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":214,"_text":"Wait For Response From Player 1 "},"childOfId":211} 
 Player 2 04:08:47 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:08:47 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:08:48 $ACTION_MASSAGE_REMOVE:  

 {"id":214} 
 Player 2 04:08:48 $ACTION_MASSAGE_REMOVE:  

 {"id":212} 
 Player 2 04:08:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":215,"_text":"Resolve CombatDamage 26 "}} 
 Player 2 04:08:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Gurdy is going to hurt Lilith"} 
 Player 2 04:08:48 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":26,"creatorCardId":321,"entityToDoDamageCardId":269,"entityToTakeDamageCardId":321,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":2}} 
 Player 2 04:08:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Gurdy Is Going To Hurt Lilith For 1 DMG "} 
 Player 2 04:08:48 $UPDATE_STACK_VIS:  

 {"stackId":26,"text":"Gurdy will deal 1 combat damage to Lilith"} 
 Player 2 04:08:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Gurdy will deal 1 combat damage to Lilith"} 
 Player 2 04:08:48 $PLAYER_GET_HIT:  

 {"playerId":2,"damage":1,"damageDealerId":269} 
 Player 2 04:08:48 $NEXT_STACK_ID:  
 Player 2 04:08:48 $CLEAR_SE_VIS:  
 Player 2 04:08:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Gurdy will deal 1 combat damage to Lilith \n2:Player 2 Is About To Die"} 
 Player 2 04:08:48 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":26,"creatorCardId":321,"entityToDoDamageCardId":269,"entityToTakeDamageCardId":321,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":2}} 
 Player 2 04:08:48 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":27,"creatorCardId":321,"playerToDieCardId":321,"stackEffectType":15,"killerId":269}} 
 Player 2 04:08:48 $REPLACE_STACK:  

 {"currentStack":[{"entityId":26,"creatorCardId":321,"entityToDoDamageCardId":269,"entityToTakeDamageCardId":321,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":2},{"entityId":27,"creatorCardId":321,"playerToDieCardId":321,"stackEffectType":15,"killerId":269}]} 
 Player 2 04:08:48 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":27,"creatorCardId":321,"playerToDieCardId":321,"stackEffectType":15,"killerId":269}} 
 Player 2 04:08:48 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 04:08:48 $SHOW_STACK_EFFECT:  

 {"effectId":27} 
 Player 2 04:08:51 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:08:51 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":269}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":17,"originStackId":-1},"isAfterActivation":true,"index":17} 
 Player 2 04:08:51 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_TAKEN","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":0,"number":269}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":18,"originStackId":26},"isAfterActivation":true,"index":18} 
 Player 2 04:08:51 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":26} 
 Player 2 04:08:51 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 04:08:51 $SHOW_STACK_EFFECT:  

 {"effectId":26} 
 Player 2 04:08:54 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":26} 
 Player 2 04:08:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":216,"_text":"Remove After Resolve CombatDamage 26  "}} 
 Player 2 04:08:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is About To Die"} 
 Player 2 04:08:54 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":26,"creatorCardId":321,"entityToDoDamageCardId":269,"entityToTakeDamageCardId":321,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":2}} 
 Player 2 04:08:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":217,"_text":"Response Remove After Resolve CombatDamage 26"},"childOfId":216} 
 Player 2 04:08:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":218,"_text":"Wait For Response From Player 2 "},"childOfId":216} 
 Player 2 04:08:54 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:08:54 $ACTION_MASSAGE_REMOVE:  

 {"id":218} 
 Player 2 04:08:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":219,"_text":"Wait For Response From Player 1 "},"childOfId":216} 
 Player 2 04:08:54 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:08:54 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:08:54 $ACTION_MASSAGE_REMOVE:  

 {"id":219} 
 Player 2 04:08:54 $ACTION_MASSAGE_REMOVE:  

 {"id":217} 
 Player 2 04:08:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":220,"_text":"Resolve PlayerDeath 27 "}} 
 Player 2 04:08:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is About To Die"} 
 Player 2 04:08:54 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":27,"creatorCardId":321,"playerToDieCardId":321,"stackEffectType":15,"killerId":269}} 
 Player 2 04:08:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Has Died"} 
 Player 2 04:08:54 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":269,"particleType":5} 
 Player 2 04:08:54 $CANCEL_ATTACK:  
 Player 2 04:08:54 $NEXT_STACK_ID:  
 Player 2 04:08:54 $CLEAR_SE_VIS:  
 Player 2 04:08:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Has Died \n2:Player 2 Is About To Pay Death Penalties"} 
 Player 2 04:08:54 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":27,"creatorCardId":321,"playerToDieCardId":321,"stackEffectType":15,"killerId":269}} 
 Player 2 04:08:54 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":28,"creatorCardId":321,"playerToPayCardId":321,"stackEffectType":16}} 
 Player 2 04:08:54 $REPLACE_STACK:  

 {"currentStack":[{"entityId":27,"creatorCardId":321,"playerToDieCardId":321,"stackEffectType":15,"killerId":269},{"entityId":28,"creatorCardId":321,"playerToPayCardId":321,"stackEffectType":16}]} 
 Player 2 04:08:54 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":28,"creatorCardId":321,"playerToPayCardId":321,"stackEffectType":16}} 
 Player 2 04:08:54 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 04:08:54 $SHOW_STACK_EFFECT:  

 {"effectId":28} 
 Player 2 04:08:57 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_PAY_DEATH_PANELTIES","args":[],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":1,"originStackId":28},"isAfterActivation":false,"index":1} 
 Player 2 04:08:57 $NEXT_STACK_ID:  
 Player 2 04:08:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Has Died \n2:Player 2 Is About To Pay Death Penalties"} 
 Player 2 04:08:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Has Died \n2:Player 2 Is About To Pay Death Penalties \n3:Activate Bloody Penny Effect GainLoot<GainLoot>"} 
 Player 2 04:08:57 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":29,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":82,"effectToDo":{"effectName":"GainLoot","cardEffectNum":0,"cardPlayerId":2,"cardId":82,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 04:08:57 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":29,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":82,"effectToDo":{"effectName":"GainLoot","cardEffectNum":0,"cardPlayerId":2,"cardId":82,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 04:08:57 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 04:08:57 $SHOW_STACK_EFFECT:  

 {"effectId":29} 
 Player 2 04:09:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":221,"_text":"Add ActivatePassiveEffect 29 "}} 
 Player 2 04:09:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Has Died \n2:Player 2 Is About To Pay Death Penalties \n3:Activate Bloody Penny effect GainLoot<GainLoot>"} 
 Player 2 04:09:00 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":321,"effectCardPlayer":321},"entityId":29,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":82,"effectToDo":{"effectName":"GainLoot","cardEffectNum":0,"cardPlayerId":2,"cardId":82,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 04:09:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":222,"_text":"Response Adding ActivatePassiveEffect 29"},"childOfId":221} 
 Player 2 04:09:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":223,"_text":"Wait For Response From Player 1 "},"childOfId":221} 
 Player 2 04:09:00 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:09:00 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:09:00 $ACTION_MASSAGE_REMOVE:  

 {"id":223} 
 Player 2 04:09:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":224,"_text":"Wait For Response From Player 2 "},"childOfId":221} 
 Player 2 04:09:00 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:09:00 $ACTION_MASSAGE_REMOVE:  

 {"id":224} 
 Player 2 04:09:00 $ACTION_MASSAGE_REMOVE:  

 {"id":222} 
 Player 2 04:09:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":225,"_text":"Resolve ActivatePassiveEffect 29 "}} 
 Player 2 04:09:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Has Died \n2:Player 2 Is About To Pay Death Penalties \n3:Activate Bloody Penny effect GainLoot<GainLoot>"} 
 Player 2 04:09:01 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":321,"effectCardPlayer":321},"entityId":29,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":82,"effectToDo":{"effectName":"GainLoot","cardEffectNum":0,"cardPlayerId":2,"cardId":82,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 04:09:01 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":82,"particleType":6} 
 Player 2 04:09:02 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":82,"particleType":6} 
 Player 2 04:09:02 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 04:09:02 $MOVE_CARD:  

 {"moveIndex":21,"cardId":59,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.599999904632568,"y":-0.20000000298023224,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 04:09:03 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":59} 
 Player 2 04:09:03 $FLIP_CARD:  

 {"cardId":59} 
 Player 2 04:09:03 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":59} 
 Player 2 04:09:03 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_PAY_DEATH_PANELTIES","args":[],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":1,"originStackId":28},"isAfterActivation":false,"index":1} 
 Player 2 04:09:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Has Died \n2:Player 2 Is About To Pay Death Penalties \n3:Activated Bloody Penny Effect"} 
 Player 2 04:09:03 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":321,"effectCardPlayer":321},"entityId":29,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":82,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 04:09:03 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":29} 
 Player 2 04:09:03 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 04:09:03 $SHOW_STACK_EFFECT:  

 {"effectId":29} 
 Player 2 04:09:06 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":29} 
 Player 2 04:09:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":226,"_text":"Remove After Resolve ActivatePassiveEffect 29  "}} 
 Player 2 04:09:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Has Died \n2:Player 2 Is About To Pay Death Penalties"} 
 Player 2 04:09:06 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":321,"effectCardPlayer":321},"entityId":29,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":82,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 04:09:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":227,"_text":"Response Remove After Resolve ActivatePassiveEffect 29"},"childOfId":226} 
 Player 2 04:09:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":228,"_text":"Wait For Response From Player 2 "},"childOfId":226} 
 Player 2 04:09:06 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:09:06 $ACTION_MASSAGE_REMOVE:  

 {"id":228} 
 Player 2 04:09:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":229,"_text":"Wait For Response From Player 1 "},"childOfId":226} 
 Player 2 04:09:06 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:09:06 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:09:06 $ACTION_MASSAGE_REMOVE:  

 {"id":229} 
 Player 2 04:09:06 $ACTION_MASSAGE_REMOVE:  

 {"id":227} 
 Player 2 04:09:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":230,"_text":"Resolve PlayerDeathPenalties 28 "}} 
 Player 2 04:09:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Has Died \n2:Player 2 Is About To Pay Death Penalties"} 
 Player 2 04:09:06 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":28,"creatorCardId":321,"playerToPayCardId":321,"stackEffectType":16}} 
 Player 2 04:09:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":231,"_text":"Player 2 pays Penalties"}} 
 Player 2 04:09:06 $SET_MONEY:  

 {"playerId":2,"numOfCoins":2} 
 Player 2 04:09:06 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-1}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":19,"originStackId":-1},"isAfterActivation":true,"index":19} 
 Player 2 04:09:15 $PLAYER_LOSE_LOOT:  

 {"playerId":2,"cardId":45} 
 Player 2 04:09:15 $MOVE_CARD:  

 {"moveIndex":22,"cardId":45,"placeID":330,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 04:09:15 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":45} 
 Player 2 04:09:23 $REMOVE_FROM_PASSIVE_MANAGER:  

 {"cardId":82} 
 Player 2 04:09:23 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_LOSE_ITEM","args":[{"type":0,"number":82}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":20,"originStackId":-1},"isAfterActivation":true,"index":20} 
 Player 2 04:09:23 $MOVE_CARD:  

 {"moveIndex":23,"cardId":82,"placeID":330,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 04:09:23 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":82} 
 Player 2 04:09:23 $USE_ITEM:  

 {"cardId":321} 
 Player 2 04:09:23 $USE_ITEM:  

 {"cardId":322} 
 Player 2 04:09:23 $PLAYER_DIED:  

 {"playerId":2} 
 Player 2 04:09:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Has Died \n2:Player 2 Paid Death Penalties"} 
 Player 2 04:09:24 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":28,"creatorCardId":321,"playerToPayCardId":321,"stackEffectType":16}} 
 Player 2 04:09:24 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":28} 
 Player 2 04:09:24 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 04:09:24 $SHOW_STACK_EFFECT:  

 {"effectId":28} 
 Player 2 04:09:26 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":28} 
 Player 2 04:09:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":232,"_text":"Remove After Resolve PlayerDeathPenalties 28  "}} 
 Player 2 04:09:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Has Died"} 
 Player 2 04:09:27 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":28,"creatorCardId":321,"playerToPayCardId":321,"stackEffectType":16}} 
 Player 2 04:09:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":233,"_text":"Response Remove After Resolve PlayerDeathPenalties 28"},"childOfId":232} 
 Player 2 04:09:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":234,"_text":"Wait For Response From Player 1 "},"childOfId":232} 
 Player 2 04:09:27 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:09:27 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:09:27 $ACTION_MASSAGE_REMOVE:  

 {"id":234} 
 Player 2 04:09:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":235,"_text":"Wait For Response From Player 2 "},"childOfId":232} 
 Player 2 04:09:27 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:09:27 $ACTION_MASSAGE_REMOVE:  

 {"id":235} 
 Player 2 04:09:27 $ACTION_MASSAGE_REMOVE:  

 {"id":233} 
 Player 2 04:09:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":236,"_text":"Resolve PlayerDeath 27 "}} 
 Player 2 04:09:27 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":28} 
 Player 2 04:09:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":237,"_text":"Fizzle PlayerDeathPenalties 28"}} 
 Player 2 04:09:27 $FIZZLE_STACK_EFFECT:  

 {"entityId":28} 
 Player 2 04:09:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Has Died"} 
 Player 2 04:09:27 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":27,"creatorCardId":321,"playerToDieCardId":321,"stackEffectType":15,"killerId":269}} 
 Player 2 04:09:27 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":27} 
 Player 2 04:09:27 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 04:09:27 $SHOW_STACK_EFFECT:  

 {"effectId":27} 
 Player 2 04:09:30 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":27} 
 Player 2 04:09:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":238,"_text":"Remove After Resolve PlayerDeath 27  "}} 
 Player 2 04:09:30 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:09:30 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":27,"creatorCardId":321,"playerToDieCardId":321,"stackEffectType":15,"killerId":269}} 
 Player 2 04:09:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":239,"_text":"Response Remove After Resolve PlayerDeath 27"},"childOfId":238} 
 Player 2 04:09:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":240,"_text":"Wait For Response From Player 2 "},"childOfId":238} 
 Player 2 04:09:30 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:09:30 $ACTION_MASSAGE_REMOVE:  

 {"id":240} 
 Player 2 04:09:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":241,"_text":"Wait For Response From Player 1 "},"childOfId":238} 
 Player 2 04:09:30 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:09:30 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:09:30 $ACTION_MASSAGE_REMOVE:  

 {"id":241} 
 Player 2 04:09:30 $ACTION_MASSAGE_REMOVE:  

 {"id":239} 
 Player 2 04:09:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":242,"_text":"Stack Was Emptied "}} 
 Player 2 04:09:30 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:09:30 $CLEAR_SE_VIS:  
 Player 2 04:09:30 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:09:30 $CLEAR_SE_VIS:  
 Player 2 04:09:30 $REPLACE_STACK:  

 {"currentStack":[]} 
 Player 2 04:09:30 $CLEAR_SE_VIS:  
 Player 2 04:09:30 $END_TURN:  
 Player 2 04:09:30 $SET_TURN:  

 {"playerId":1} 
 Player 2 04:09:30 $START_TURN:  

 {"playerId":1} 
 Player 2 04:09:31 $STACK_EMPTIED:  

 {"playerId":1} 
 Player 2 04:09:31 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:09:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Golden Horseshoe "} 
 Player 2 04:09:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Golden Horseshoe "} 
 Player 2 04:09:34 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 04:09:34 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:09:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Golden Horseshoe "} 
 Player 2 04:09:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Golden Horseshoe "} 
 Player 2 04:09:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Golden Horseshoe "} 
 Player 2 04:09:50 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 04:09:50 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:09:50 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:09:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 
 Player 2 04:09:53 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 04:09:53 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:09:54 $MOVE_CARD_END:  

 {"moveIndex":24,"cardId":15,"flipIfFlipped":false,"playerId":1} 
 Player 2 04:09:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 
 Player 2 04:09:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 
 Player 2 04:09:57 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 04:09:57 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:10:09 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:10:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 declared attack on Cursed Fatty"} 
 Player 2 04:10:13 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 04:10:13 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:10:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 declared attack on Cursed Fatty"} 
 Player 2 04:10:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 declared attack on Cursed Fatty"} 
 Player 2 04:10:16 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 04:10:16 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:10:20 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:10:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 2 04:10:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 2 04:10:28 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 04:10:28 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:10:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 2 04:10:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 2 04:10:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Cursed Fatty \n2:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 2 04:10:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Cursed Fatty \n2:Player 1 is rolling against Cursed Fatty<Monster> \n3:Activate Cursed Fatty "} 
 Player 2 04:10:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Cursed Fatty \n2:Player 1 is rolling against Cursed Fatty<Monster> \n3:Activate Cursed Fatty "} 
 Player 2 04:10:38 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 04:10:38 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:10:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Cursed Fatty \n2:Player 1 is rolling against Cursed Fatty<Monster> \n3:Activate Cursed Fatty "} 
 Player 2 04:10:40 $MOVE_CARD_END:  

 {"moveIndex":25,"cardId":15,"flipIfFlipped":true,"playerId":1} 
 Player 2 04:10:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Cursed Fatty \n2:Player 1 is rolling against Cursed Fatty<Monster> \n3:Activate Cursed Fatty "} 
 Player 2 04:10:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Cursed Fatty \n2:Player 1 is rolling against Cursed Fatty<Monster> \n3:Activate Cursed Fatty "} 
 Player 2 04:10:43 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 04:10:43 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:10:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Cursed Fatty \n2:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 2 04:10:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Cursed Fatty \n2:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 2 04:10:47 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 04:10:47 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:10:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Cursed Fatty"} 
 Player 2 04:10:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Cursed Fatty"} 
 Player 2 04:10:50 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 04:10:50 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:10:51 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:10:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 2 04:11:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 2 04:11:00 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 04:11:00 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:11:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 2 04:11:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 2 04:11:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Cursed Fatty \n2:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 2 04:11:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Cursed Fatty \n2:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 2 04:11:06 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 04:11:06 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:11:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Cursed Fatty"} 
 Player 2 04:11:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Cursed Fatty"} 
 Player 2 04:11:09 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 04:11:09 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:11:13 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:11:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 2 04:11:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 2 04:11:20 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 04:11:20 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:11:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 2 04:11:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 2 04:11:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Cursed Fatty \n2:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 2 04:11:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Cursed Fatty \n2:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 2 04:11:26 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 04:11:27 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:11:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Cursed Fatty"} 
 Player 2 04:11:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Cursed Fatty"} 
 Player 2 04:11:30 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 04:11:30 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:11:31 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:11:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 2 04:11:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 2 04:11:39 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 04:11:39 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:11:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 2 04:11:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 2 04:11:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Cursed Fatty \n2:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 2 04:11:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Cursed Fatty \n2:Player 1 is rolling against Cursed Fatty<Monster> \n3:Activate Cursed Fatty "} 
 Player 2 04:11:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Cursed Fatty \n2:Player 1 is rolling against Cursed Fatty<Monster> \n3:Activate Cursed Fatty "} 
 Player 2 04:11:49 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 04:11:49 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:11:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Cursed Fatty \n2:Player 1 is rolling against Cursed Fatty<Monster> \n3:Activate Cursed Fatty "} 
 Player 2 04:11:51 $MOVE_CARD_END:  

 {"moveIndex":26,"cardId":31,"flipIfFlipped":true,"playerId":1} 
 Player 2 04:11:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Cursed Fatty \n2:Player 1 is rolling against Cursed Fatty<Monster> \n3:Activate Cursed Fatty "} 
 Player 2 04:11:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Cursed Fatty \n2:Player 1 is rolling against Cursed Fatty<Monster> \n3:Activate Cursed Fatty "} 
 Player 2 04:11:54 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 04:11:54 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:11:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Cursed Fatty \n2:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 2 04:11:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Cursed Fatty \n2:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 2 04:11:58 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 04:11:58 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:11:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Cursed Fatty"} 
 Player 2 04:11:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Cursed Fatty \n2:[object Object] Is Going To Be Killed by Azazel"} 
 Player 2 04:12:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Cursed Fatty \n2:[object Object] Is Going To Be Killed by Azazel"} 
 Player 2 04:12:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Cursed Fatty \n2:[object Object] Is Going To Be Killed by Azazel"} 
 Player 2 04:12:04 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 04:12:04 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:12:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Cursed Fatty"} 
 Player 2 04:12:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Cursed Fatty"} 
 Player 2 04:12:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Get Cursed Fatty<Monster>'s Reward \n2:[object Object] Is Going To Be Killed by Azazel"} 
 Player 2 04:12:10 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 04:12:10 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:12:11 $MOVE_CARD_END:  

 {"moveIndex":27,"cardId":113,"flipIfFlipped":false,"playerId":1} 
 Player 2 04:12:12 $MOVE_CARD_END:  

 {"moveIndex":28,"cardId":42,"flipIfFlipped":false,"playerId":1} 
 Player 2 04:12:12 $MOVE_CARD_END:  

 {"moveIndex":29,"cardId":240,"flipIfFlipped":true,"playerId":1} 
 Player 2 04:12:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Get Cursed Fatty<Monster>'s Reward"} 
 Player 2 04:12:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Get Cursed Fatty<Monster>'s Reward \n2:Refill holder2 Slot"} 
 Player 2 04:12:15 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 04:12:15 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:12:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Get Cursed Fatty<Monster>'s Reward \n2:Refill holder2 Slot"} 
 Player 2 04:12:19 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 04:12:19 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:12:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Get Cursed Fatty<Monster>'s Reward"} 
 Player 2 04:12:22 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 04:12:22 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:12:32 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:12:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Play 3 Cents(7) "} 
 Player 2 04:12:35 $MOVE_CARD_END:  

 {"moveIndex":30,"cardId":42,"flipIfFlipped":true,"playerId":1} 
 Player 2 04:12:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Play 3 Cents(7) "} 
 Player 2 04:12:35 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 04:12:35 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:12:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Play 3 Cents(7) "} 
 Player 2 04:12:38 $MOVE_CARD_END:  

 {"moveIndex":31,"cardId":42,"flipIfFlipped":true,"playerId":1} 
 Player 2 04:12:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Play 3 Cents(7) "} 
 Player 2 04:12:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Play 3 Cents(7) "} 
 Player 2 04:12:41 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 04:12:41 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:12:43 $STACK_EMPTIED:  

 {"playerId":1} 
 Player 2 04:12:44 $RECHARGE_ITEM:  

 {"cardId":321} 
 Player 2 04:12:44 $PLAYER_RECHARGE_ITEM:  

 {"playerId":2,"cardId":321} 
 Player 2 04:12:44 $RECHARGE_ITEM:  

 {"cardId":322} 
 Player 2 04:12:44 $PLAYER_RECHARGE_ITEM:  

 {"playerId":2,"cardId":322} 
 Player 2 04:12:44 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:12:44 $NEXT_STACK_ID:  
 Player 2 04:12:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 
 Player 2 04:12:44 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":47,"creatorCardId":321,"turnPlayerCardId":321,"stackEffectType":13}} 
 Player 2 04:12:44 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":47,"creatorCardId":321,"turnPlayerCardId":321,"stackEffectType":13}} 
 Player 2 04:12:44 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 04:12:44 $SHOW_STACK_EFFECT:  

 {"effectId":47} 
 Player 2 04:12:44 $CLEAR_SE_VIS:  
 Player 2 04:12:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":387,"_text":"Add StartTurnLoot 47 "}} 
 Player 2 04:12:47 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:12:47 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":47,"creatorCardId":321,"turnPlayerCardId":321,"stackEffectType":13}} 
 Player 2 04:12:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":388,"_text":"Response Adding StartTurnLoot 47"},"childOfId":387} 
 Player 2 04:12:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":389,"_text":"Wait For Response From Player 2 "},"childOfId":387} 
 Player 2 04:12:47 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:12:47 $ACTION_MASSAGE_REMOVE:  

 {"id":389} 
 Player 2 04:12:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":390,"_text":"Wait For Response From Player 1 "},"childOfId":387} 
 Player 2 04:12:47 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:12:47 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:12:47 $ACTION_MASSAGE_REMOVE:  

 {"id":390} 
 Player 2 04:12:47 $ACTION_MASSAGE_REMOVE:  

 {"id":388} 
 Player 2 04:12:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":391,"_text":"Resolve StartTurnLoot 47 "}} 
 Player 2 04:12:47 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":47,"creatorCardId":321,"turnPlayerCardId":321,"stackEffectType":13}} 
 Player 2 04:12:47 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 04:12:47 $MOVE_CARD:  

 {"moveIndex":32,"cardId":123,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.599999904632568,"y":-0.20000000298023224,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 04:12:47 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":123} 
 Player 2 04:12:47 $FLIP_CARD:  

 {"cardId":123} 
 Player 2 04:12:48 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":123} 
 Player 2 04:12:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Has Drawen Loot For Start Turn"} 
 Player 2 04:12:48 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":47,"creatorCardId":321,"turnPlayerCardId":321,"stackEffectType":13}} 
 Player 2 04:12:48 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":47} 
 Player 2 04:12:48 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 04:12:48 $SHOW_STACK_EFFECT:  

 {"effectId":47} 
 Player 2 04:12:50 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":47} 
 Player 2 04:12:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":392,"_text":"Remove After Resolve StartTurnLoot 47  "}} 
 Player 2 04:12:51 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:12:51 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":47,"creatorCardId":321,"turnPlayerCardId":321,"stackEffectType":13}} 
 Player 2 04:12:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":393,"_text":"Response Remove After Resolve StartTurnLoot 47"},"childOfId":392} 
 Player 2 04:12:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":394,"_text":"Wait For Response From Player 1 "},"childOfId":392} 
 Player 2 04:12:51 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:12:51 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:12:51 $ACTION_MASSAGE_REMOVE:  

 {"id":394} 
 Player 2 04:12:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":395,"_text":"Wait For Response From Player 2 "},"childOfId":392} 
 Player 2 04:12:51 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:12:51 $ACTION_MASSAGE_REMOVE:  

 {"id":395} 
 Player 2 04:12:51 $ACTION_MASSAGE_REMOVE:  

 {"id":393} 
 Player 2 04:12:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":396,"_text":"Stack Was Emptied "}} 
 Player 2 04:12:51 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:12:51 $CLEAR_SE_VIS:  
 Player 2 04:13:00 $NEXT_STACK_ID:  
 Player 2 04:13:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Play Swallowed Penny "} 
 Player 2 04:13:00 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":48,"creatorCardId":321,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":123,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 2 04:13:00 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":48,"creatorCardId":321,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":123,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 2 04:13:00 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 04:13:00 $SHOW_STACK_EFFECT:  

 {"effectId":48} 
 Player 2 04:13:03 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":397,"_text":"Add PlayLootCardStackEffect 48 "}} 
 Player 2 04:13:03 $PLAYER_LOSE_LOOT:  

 {"playerId":2,"cardId":123} 
 Player 2 04:13:03 $MOVE_CARD:  

 {"moveIndex":33,"cardId":123,"placeID":329,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 04:13:04 $MOVE_CARD_TO_PILE:  

 {"type":7,"cardId":123} 
 Player 2 04:13:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Play Swallowed Penny: AddTrinket"} 
 Player 2 04:13:04 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:13:04 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":48,"creatorCardId":321,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":123,"lootPlayerId":2,"effectToDo":{"effectName":"AddTrinket","cardEffectNum":0,"cardPlayerId":2,"cardId":123,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 04:13:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":398,"_text":"Response Adding PlayLootCardStackEffect 48"},"childOfId":397} 
 Player 2 04:13:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":399,"_text":"Wait For Response From Player 2 "},"childOfId":397} 
 Player 2 04:13:04 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:13:04 $ACTION_MASSAGE_REMOVE:  

 {"id":399} 
 Player 2 04:13:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":400,"_text":"Wait For Response From Player 1 "},"childOfId":397} 
 Player 2 04:13:04 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:13:04 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:13:04 $ACTION_MASSAGE_REMOVE:  

 {"id":400} 
 Player 2 04:13:04 $ACTION_MASSAGE_REMOVE:  

 {"id":398} 
 Player 2 04:13:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":401,"_text":"Resolve PlayLootCardStackEffect 48 "}} 
 Player 2 04:13:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Play Swallowed Penny: AddTrinket"} 
 Player 2 04:13:04 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":48,"creatorCardId":321,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":123,"lootPlayerId":2,"effectToDo":{"effectName":"AddTrinket","cardEffectNum":0,"cardPlayerId":2,"cardId":123,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 04:13:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Plays Swallowed Penny: AddTrinket"} 
 Player 2 04:13:04 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":123,"particleType":6} 
 Player 2 04:13:06 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":123,"particleType":6} 
 Player 2 04:13:06 $CARD_ADD_TRINKET:  

 {"cardId":123,"playerId":2,"addMuiliEffect":false} 
 Player 2 04:13:06 $REMOVE_FROM_PILE:  

 {"cardId":123} 
 Player 2 04:13:06 $REGISTER_PASSIVE_ITEM:  

 {"cardId":123} 
 Player 2 04:13:06 $MOVE_CARD:  

 {"moveIndex":34,"cardId":123,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 
 Player 2 04:13:07 $ADD_AN_ITEM:  

 {"playerId":2,"cardId":123,"isReward":true} 
 Player 2 04:13:07 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":123}],"result":true,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":21,"originStackId":-1},"isAfterActivation":true,"index":21} 
 Player 2 04:13:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Plays Swallowed Penny: AddTrinket"} 
 Player 2 04:13:07 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":48,"creatorCardId":321,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":123,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 04:13:07 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":48} 
 Player 2 04:13:07 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 04:13:07 $SHOW_STACK_EFFECT:  

 {"effectId":48} 
 Player 2 04:13:10 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":48} 
 Player 2 04:13:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":402,"_text":"Remove After Resolve PlayLootCardStackEffect 48  "}} 
 Player 2 04:13:10 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:13:10 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":48,"creatorCardId":321,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":123,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 04:13:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":403,"_text":"Response Remove After Resolve PlayLootCardStackEffect 48"},"childOfId":402} 
 Player 2 04:13:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":404,"_text":"Wait For Response From Player 1 "},"childOfId":402} 
 Player 2 04:13:10 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:13:10 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:13:10 $ACTION_MASSAGE_REMOVE:  

 {"id":404} 
 Player 2 04:13:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":405,"_text":"Wait For Response From Player 2 "},"childOfId":402} 
 Player 2 04:13:10 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:13:10 $ACTION_MASSAGE_REMOVE:  

 {"id":405} 
 Player 2 04:13:10 $ACTION_MASSAGE_REMOVE:  

 {"id":403} 
 Player 2 04:13:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":406,"_text":"Stack Was Emptied "}} 
 Player 2 04:13:10 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:13:10 $CLEAR_SE_VIS:  
 Player 2 04:13:18 $NEXT_STACK_ID:  
 Player 2 04:13:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 declared attack on Dip"} 
 Player 2 04:13:18 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":49,"creatorCardId":321,"attackingPlayerCardId":321,"idOfCardBeingAttacked":255,"stackEffectType":4}} 
 Player 2 04:13:18 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":49,"creatorCardId":321,"attackingPlayerCardId":321,"idOfCardBeingAttacked":255,"stackEffectType":4}} 
 Player 2 04:13:18 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 04:13:18 $SHOW_STACK_EFFECT:  

 {"effectId":49} 
 Player 2 04:13:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":407,"_text":"Add DeclareAttack 49 "}} 
 Player 2 04:13:21 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:13:21 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":49,"creatorCardId":321,"attackingPlayerCardId":321,"idOfCardBeingAttacked":255,"stackEffectType":4}} 
 Player 2 04:13:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":408,"_text":"Response Adding DeclareAttack 49"},"childOfId":407} 
 Player 2 04:13:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":409,"_text":"Wait For Response From Player 2 "},"childOfId":407} 
 Player 2 04:13:21 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:13:22 $ACTION_MASSAGE_REMOVE:  

 {"id":409} 
 Player 2 04:13:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":410,"_text":"Wait For Response From Player 1 "},"childOfId":407} 
 Player 2 04:13:22 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:13:22 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:13:22 $ACTION_MASSAGE_REMOVE:  

 {"id":410} 
 Player 2 04:13:22 $ACTION_MASSAGE_REMOVE:  

 {"id":408} 
 Player 2 04:13:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":411,"_text":"Resolve DeclareAttack 49 "}} 
 Player 2 04:13:22 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":49,"creatorCardId":321,"attackingPlayerCardId":321,"idOfCardBeingAttacked":255,"stackEffectType":4}} 
 Player 2 04:13:22 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":255,"particleType":5} 
 Player 2 04:13:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Has Entered Battle with Dip"} 
 Player 2 04:13:22 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":22,"originStackId":49},"isAfterActivation":true,"index":22} 
 Player 2 04:13:22 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":49,"creatorCardId":321,"attackingPlayerCardId":321,"idOfCardBeingAttacked":255,"stackEffectType":4}} 
 Player 2 04:13:22 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":49} 
 Player 2 04:13:22 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 04:13:22 $SHOW_STACK_EFFECT:  

 {"effectId":49} 
 Player 2 04:13:25 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":49} 
 Player 2 04:13:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":412,"_text":"Remove After Resolve DeclareAttack 49  "}} 
 Player 2 04:13:25 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:13:25 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":49,"creatorCardId":321,"attackingPlayerCardId":321,"idOfCardBeingAttacked":255,"stackEffectType":4}} 
 Player 2 04:13:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":413,"_text":"Response Remove After Resolve DeclareAttack 49"},"childOfId":412} 
 Player 2 04:13:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":414,"_text":"Wait For Response From Player 1 "},"childOfId":412} 
 Player 2 04:13:25 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:13:25 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:13:25 $ACTION_MASSAGE_REMOVE:  

 {"id":414} 
 Player 2 04:13:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":415,"_text":"Wait For Response From Player 2 "},"childOfId":412} 
 Player 2 04:13:25 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:13:25 $ACTION_MASSAGE_REMOVE:  

 {"id":415} 
 Player 2 04:13:25 $ACTION_MASSAGE_REMOVE:  

 {"id":413} 
 Player 2 04:13:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":416,"_text":"Stack Was Emptied "}} 
 Player 2 04:13:25 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:13:25 $CLEAR_SE_VIS:  
 Player 2 04:13:26 $NEXT_STACK_ID:  
 Player 2 04:13:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Dip<Monster>"} 
 Player 2 04:13:26 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":50,"creatorCardId":321,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":255}} 
 Player 2 04:13:26 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":50,"creatorCardId":321,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":255}} 
 Player 2 04:13:26 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 04:13:26 $SHOW_STACK_EFFECT:  

 {"effectId":50} 
 Player 2 04:13:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":417,"_text":"Add AttackRoll 50 "}} 
 Player 2 04:13:29 $ROLL_DICE:  

 {"playerId":2} 
 Player 2 04:13:32 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":4} 
 Player 2 04:13:32 $UPDATE_STACK_VIS:  

 {"stackId":50,"text":"player rolled 4 vs Dip<Monster>"} 
 Player 2 04:13:32 $SHOW_DICE_ROLL:  

 {"stackId":50} 
 Player 2 04:13:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 4 vs Dip<Monster>"} 
 Player 2 04:13:35 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:13:35 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":50,"creatorCardId":321,"numberRolled":4,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":255}} 
 Player 2 04:13:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":418,"_text":"Response Adding AttackRoll 50"},"childOfId":417} 
 Player 2 04:13:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":419,"_text":"Wait For Response From Player 2 "},"childOfId":417} 
 Player 2 04:13:35 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:13:35 $ACTION_MASSAGE_REMOVE:  

 {"id":419} 
 Player 2 04:13:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":420,"_text":"Wait For Response From Player 1 "},"childOfId":417} 
 Player 2 04:13:35 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:13:35 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:13:35 $ACTION_MASSAGE_REMOVE:  

 {"id":420} 
 Player 2 04:13:35 $ACTION_MASSAGE_REMOVE:  

 {"id":418} 
 Player 2 04:13:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":421,"_text":"Resolve AttackRoll 50 "}} 
 Player 2 04:13:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 4 vs Dip<Monster>"} 
 Player 2 04:13:35 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":50,"creatorCardId":321,"numberRolled":4,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":255}} 
 Player 2 04:13:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":422,"_text":"Added 0 to original roll"}} 
 Player 2 04:13:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Rolled 4 Against Dip<Monster> 4"} 
 Player 2 04:13:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Roll Hit"} 
 Player 2 04:13:35 $NEXT_STACK_ID:  
 Player 2 04:13:35 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:13:35 $CLEAR_SE_VIS:  
 Player 2 04:13:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Dip \n2:Player 2 Roll Hit"} 
 Player 2 04:13:35 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":51,"creatorCardId":321,"entityToDoDamageCardId":321,"entityToTakeDamageCardId":255,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 
 Player 2 04:13:35 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":50,"creatorCardId":321,"numberRolled":4,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":255}} 
 Player 2 04:13:35 $REPLACE_STACK:  

 {"currentStack":[{"entityId":51,"creatorCardId":321,"entityToDoDamageCardId":321,"entityToTakeDamageCardId":255,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":50,"creatorCardId":321,"numberRolled":4,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":255}]} 
 Player 2 04:13:35 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 04:13:35 $SHOW_STACK_EFFECT:  

 {"effectId":51} 
 Player 2 04:13:38 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":23,"originStackId":50},"isAfterActivation":true,"index":23} 
 Player 2 04:13:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Dip \n2:Player 2 Roll Hit"} 
 Player 2 04:13:38 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":50,"creatorCardId":321,"numberRolled":4,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":255}} 
 Player 2 04:13:38 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":50} 
 Player 2 04:13:38 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 04:13:38 $SHOW_STACK_EFFECT:  

 {"effectId":50} 
 Player 2 04:13:41 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":50} 
 Player 2 04:13:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":423,"_text":"Remove After Resolve AttackRoll 50  "}} 
 Player 2 04:13:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Dip"} 
 Player 2 04:13:41 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":50,"creatorCardId":321,"numberRolled":4,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":255}} 
 Player 2 04:13:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":424,"_text":"Response Remove After Resolve AttackRoll 50"},"childOfId":423} 
 Player 2 04:13:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":425,"_text":"Wait For Response From Player 2 "},"childOfId":423} 
 Player 2 04:13:41 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:13:41 $ACTION_MASSAGE_REMOVE:  

 {"id":425} 
 Player 2 04:13:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":426,"_text":"Wait For Response From Player 1 "},"childOfId":423} 
 Player 2 04:13:41 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:13:41 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:13:41 $ACTION_MASSAGE_REMOVE:  

 {"id":426} 
 Player 2 04:13:41 $ACTION_MASSAGE_REMOVE:  

 {"id":424} 
 Player 2 04:13:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":427,"_text":"Resolve CombatDamage 51 "}} 
 Player 2 04:13:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Dip"} 
 Player 2 04:13:41 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":51,"creatorCardId":321,"entityToDoDamageCardId":321,"entityToTakeDamageCardId":255,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 
 Player 2 04:13:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith will deal 2 combat damage to Dip "} 
 Player 2 04:13:42 $UPDATE_STACK_VIS:  

 {"stackId":51,"text":"Lilith will deal 2 combat damage to Dip"} 
 Player 2 04:13:42 $MONSTER_GET_DAMAGED:  

 {"cardId":255,"hpLeft":0,"damageDealerId":321} 
 Player 2 04:13:42 $NEXT_STACK_ID:  
 Player 2 04:13:42 $CLEAR_SE_VIS:  
 Player 2 04:13:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith will deal 2 combat damage to Dip  \n2:[object Object] Is Going To Be Killed by Lilith"} 
 Player 2 04:13:42 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":51,"creatorCardId":321,"entityToDoDamageCardId":321,"entityToTakeDamageCardId":255,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 
 Player 2 04:13:42 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":52,"creatorCardId":321,"monsterToDieCardId":255,"stackEffectType":5,"killerId":321}} 
 Player 2 04:13:42 $REPLACE_STACK:  

 {"currentStack":[{"entityId":51,"creatorCardId":321,"entityToDoDamageCardId":321,"entityToTakeDamageCardId":255,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":52,"creatorCardId":321,"monsterToDieCardId":255,"stackEffectType":5,"killerId":321}]} 
 Player 2 04:13:42 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":52,"creatorCardId":321,"monsterToDieCardId":255,"stackEffectType":5,"killerId":321}} 
 Player 2 04:13:42 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 04:13:42 $SHOW_STACK_EFFECT:  

 {"effectId":52} 
 Player 2 04:13:44 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:13:44 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":321},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":255,"scopeIsPlayer":false,"index":24,"originStackId":-1},"isAfterActivation":true,"index":24} 
 Player 2 04:13:44 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":2},{"type":2,"number":4},{"type":0,"number":321},{"type":0,"number":255}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":25,"originStackId":51},"isAfterActivation":true,"index":25} 
 Player 2 04:13:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith will deal 2 combat damage to Dip  \n2:[object Object] Is Going To Be Killed by Lilith"} 
 Player 2 04:13:45 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":51,"creatorCardId":321,"entityToDoDamageCardId":321,"entityToTakeDamageCardId":255,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 
 Player 2 04:13:45 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":51} 
 Player 2 04:13:45 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 04:13:45 $SHOW_STACK_EFFECT:  

 {"effectId":51} 
 Player 2 04:13:47 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":51} 
 Player 2 04:13:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":428,"_text":"Remove After Resolve CombatDamage 51  "}} 
 Player 2 04:13:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] Is Going To Be Killed by Lilith"} 
 Player 2 04:13:48 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":51,"creatorCardId":321,"entityToDoDamageCardId":321,"entityToTakeDamageCardId":255,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 
 Player 2 04:13:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":429,"_text":"Response Remove After Resolve CombatDamage 51"},"childOfId":428} 
 Player 2 04:13:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":430,"_text":"Wait For Response From Player 2 "},"childOfId":428} 
 Player 2 04:13:48 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:13:48 $ACTION_MASSAGE_REMOVE:  

 {"id":430} 
 Player 2 04:13:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":431,"_text":"Wait For Response From Player 1 "},"childOfId":428} 
 Player 2 04:13:48 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:13:48 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:13:48 $ACTION_MASSAGE_REMOVE:  

 {"id":431} 
 Player 2 04:13:48 $ACTION_MASSAGE_REMOVE:  

 {"id":429} 
 Player 2 04:13:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":432,"_text":"Resolve MonsterDeath 52 "}} 
 Player 2 04:13:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] Is Going To Be Killed by Lilith"} 
 Player 2 04:13:48 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":52,"creatorCardId":321,"monsterToDieCardId":255,"stackEffectType":5,"killerId":321}} 
 Player 2 04:13:48 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":255,"particleType":5} 
 Player 2 04:13:48 $CANCEL_ATTACK:  
 Player 2 04:13:48 $NEXT_STACK_ID:  
 Player 2 04:13:48 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:13:48 $CLEAR_SE_VIS:  
 Player 2 04:13:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Get Dip<Monster>'s Reward \n2:[object Object] Is Going To Be Killed by Lilith"} 
 Player 2 04:13:48 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":53,"creatorCardId":321,"monsterCardWithRewardId":255,"playerCardIdToReward":321,"stackEffectType":7}} 
 Player 2 04:13:48 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":52,"creatorCardId":321,"monsterToDieCardId":255,"stackEffectType":5,"killerId":321}} 
 Player 2 04:13:48 $REPLACE_STACK:  

 {"currentStack":[{"entityId":53,"creatorCardId":321,"monsterCardWithRewardId":255,"playerCardIdToReward":321,"stackEffectType":7},{"entityId":52,"creatorCardId":321,"monsterToDieCardId":255,"stackEffectType":5,"killerId":321}]} 
 Player 2 04:13:48 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 04:13:48 $SHOW_STACK_EFFECT:  

 {"effectId":53} 
 Player 2 04:13:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Get Dip<Monster>'s Reward \n2:[object Object] Is Going To Be Killed by Lilith"} 
 Player 2 04:13:51 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":52,"creatorCardId":321,"monsterToDieCardId":255,"stackEffectType":5,"killerId":321}} 
 Player 2 04:13:51 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":52} 
 Player 2 04:13:51 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 04:13:51 $SHOW_STACK_EFFECT:  

 {"effectId":52} 
 Player 2 04:13:54 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":52} 
 Player 2 04:13:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":433,"_text":"Remove After Resolve MonsterDeath 52  "}} 
 Player 2 04:13:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Get Dip<Monster>'s Reward"} 
 Player 2 04:13:54 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":52,"creatorCardId":321,"monsterToDieCardId":255,"stackEffectType":5,"killerId":321}} 
 Player 2 04:13:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":434,"_text":"Response Remove After Resolve MonsterDeath 52"},"childOfId":433} 
 Player 2 04:13:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":435,"_text":"Wait For Response From Player 2 "},"childOfId":433} 
 Player 2 04:13:54 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:13:54 $ACTION_MASSAGE_REMOVE:  

 {"id":435} 
 Player 2 04:13:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":436,"_text":"Wait For Response From Player 1 "},"childOfId":433} 
 Player 2 04:13:54 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:13:54 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:13:54 $ACTION_MASSAGE_REMOVE:  

 {"id":436} 
 Player 2 04:13:54 $ACTION_MASSAGE_REMOVE:  

 {"id":434} 
 Player 2 04:13:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":437,"_text":"Resolve MonsterRewardStackEffect 53 "}} 
 Player 2 04:13:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Get Dip<Monster>'s Reward"} 
 Player 2 04:13:54 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":53,"creatorCardId":321,"monsterCardWithRewardId":255,"playerCardIdToReward":321,"stackEffectType":7}} 
 Player 2 04:13:54 $SET_MONEY:  

 {"playerId":2,"numOfCoins":3} 
 Player 2 04:13:54 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":1}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":26,"originStackId":-1},"isAfterActivation":true,"index":26} 
 Player 2 04:13:54 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":255,"scopeIsPlayer":false,"index":27,"originStackId":53},"isAfterActivation":true,"index":27} 
 Player 2 04:13:55 $MOVE_CARD:  

 {"moveIndex":35,"cardId":255,"placeID":332,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 04:13:55 $MOVE_CARD_TO_PILE:  

 {"type":2,"cardId":255} 
 Player 2 04:13:55 $REMOVE_MONSTER:  

 {"holderId":2,"monsterId":255} 
 Player 2 04:13:55 $NEXT_STACK_ID:  
 Player 2 04:13:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Get Dip<Monster>'s Reward \n2:Refill holder2 Slot"} 
 Player 2 04:13:55 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":54,"creatorCardId":321,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 
 Player 2 04:13:55 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":54,"creatorCardId":321,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 
 Player 2 04:13:55 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 04:13:55 $SHOW_STACK_EFFECT:  

 {"effectId":54} 
 Player 2 04:13:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":438,"_text":"Add RefillEmptySlot 54 "}} 
 Player 2 04:13:58 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:13:58 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":54,"creatorCardId":321,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 
 Player 2 04:13:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":439,"_text":"Response Adding RefillEmptySlot 54"},"childOfId":438} 
 Player 2 04:13:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":440,"_text":"Wait For Response From Player 2 "},"childOfId":438} 
 Player 2 04:13:58 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:13:58 $ACTION_MASSAGE_REMOVE:  

 {"id":440} 
 Player 2 04:13:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":441,"_text":"Wait For Response From Player 1 "},"childOfId":438} 
 Player 2 04:13:58 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:13:58 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:13:58 $ACTION_MASSAGE_REMOVE:  

 {"id":441} 
 Player 2 04:13:58 $ACTION_MASSAGE_REMOVE:  

 {"id":439} 
 Player 2 04:13:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":442,"_text":"Resolve RefillEmptySlot 54 "}} 
 Player 2 04:13:58 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":54,"creatorCardId":321,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 
 Player 2 04:13:58 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 04:13:58 $FLIP_CARD:  

 {"cardId":247} 
 Player 2 04:13:58 $REGISTER_PASSIVE_ITEM:  

 {"cardId":247} 
 Player 2 04:13:58 $ADD_MONSTER:  

 {"monsterPlaceId":2,"monsterId":247} 
 Player 2 04:13:59 $NEW_MONSTER_ON_PLACE:  

 {"cardId":247,"monsterPlaceId":2} 
 Player 2 04:13:59 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":54} 
 Player 2 04:13:59 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 04:13:59 $SHOW_STACK_EFFECT:  

 {"effectId":54} 
 Player 2 04:14:01 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":54} 
 Player 2 04:14:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":443,"_text":"Remove After Resolve RefillEmptySlot 54  "}} 
 Player 2 04:14:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Get Dip<Monster>'s Reward"} 
 Player 2 04:14:01 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":54,"creatorCardId":321,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 
 Player 2 04:14:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":444,"_text":"Response Remove After Resolve RefillEmptySlot 54"},"childOfId":443} 
 Player 2 04:14:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":445,"_text":"Wait For Response From Player 1 "},"childOfId":443} 
 Player 2 04:14:01 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:14:01 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:14:02 $ACTION_MASSAGE_REMOVE:  

 {"id":445} 
 Player 2 04:14:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":446,"_text":"Wait For Response From Player 2 "},"childOfId":443} 
 Player 2 04:14:02 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:14:02 $ACTION_MASSAGE_REMOVE:  

 {"id":446} 
 Player 2 04:14:02 $ACTION_MASSAGE_REMOVE:  

 {"id":444} 
 Player 2 04:14:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":447,"_text":"Resolve MonsterRewardStackEffect 53 "}} 
 Player 2 04:14:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Get Dip<Monster>'s Reward"} 
 Player 2 04:14:02 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":53,"creatorCardId":321,"monsterCardWithRewardId":255,"playerCardIdToReward":321,"stackEffectType":7}} 
 Player 2 04:14:02 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":53} 
 Player 2 04:14:02 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 04:14:02 $SHOW_STACK_EFFECT:  

 {"effectId":53} 
 Player 2 04:14:05 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":53} 
 Player 2 04:14:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":448,"_text":"Remove After Resolve MonsterRewardStackEffect 53  "}} 
 Player 2 04:14:05 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:14:05 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":53,"creatorCardId":321,"monsterCardWithRewardId":255,"playerCardIdToReward":321,"stackEffectType":7}} 
 Player 2 04:14:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":449,"_text":"Response Remove After Resolve MonsterRewardStackEffect 53"},"childOfId":448} 
 Player 2 04:14:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":450,"_text":"Wait For Response From Player 2 "},"childOfId":448} 
 Player 2 04:14:05 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:14:05 $ACTION_MASSAGE_REMOVE:  

 {"id":450} 
 Player 2 04:14:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":451,"_text":"Wait For Response From Player 1 "},"childOfId":448} 
 Player 2 04:14:05 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:14:05 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:14:05 $ACTION_MASSAGE_REMOVE:  

 {"id":451} 
 Player 2 04:14:05 $ACTION_MASSAGE_REMOVE:  

 {"id":449} 
 Player 2 04:14:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":452,"_text":"Stack Was Emptied "}} 
 Player 2 04:14:05 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:14:05 $CLEAR_SE_VIS:  
 Player 2 04:14:20 $NEXT_STACK_ID:  
 Player 2 04:14:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is going to activate Lilith"} 
 Player 2 04:14:20 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":55,"creatorCardId":321,"hasLockingStackEffect":false,"itemToPlayCardId":321,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 04:14:20 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":55,"creatorCardId":321,"hasLockingStackEffect":false,"itemToPlayCardId":321,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 04:14:20 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 04:14:20 $SHOW_STACK_EFFECT:  

 {"effectId":55} 
 Player 2 04:14:23 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":453,"_text":"Add ActivateItem 55 "}} 
 Player 2 04:14:26 $SHOW_DECISION:  

 {"startCardId":321,"endCardId":59,"flipEndCard":true} 
 Player 2 04:14:29 $USE_ITEM:  

 {"cardId":321} 
 Player 2 04:14:29 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:14:29 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":55,"creatorCardId":321,"hasLockingStackEffect":false,"itemToPlayCardId":321,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 04:14:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":454,"_text":"Response Adding ActivateItem 55"},"childOfId":453} 
 Player 2 04:14:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":455,"_text":"Wait For Response From Player 2 "},"childOfId":453} 
 Player 2 04:14:29 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:14:29 $ACTION_MASSAGE_REMOVE:  

 {"id":455} 
 Player 2 04:14:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":456,"_text":"Wait For Response From Player 1 "},"childOfId":453} 
 Player 2 04:14:29 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:14:29 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:14:29 $ACTION_MASSAGE_REMOVE:  

 {"id":456} 
 Player 2 04:14:29 $ACTION_MASSAGE_REMOVE:  

 {"id":454} 
 Player 2 04:14:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":457,"_text":"Resolve ActivateItem 55 "}} 
 Player 2 04:14:29 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":55,"creatorCardId":321,"hasLockingStackEffect":false,"itemToPlayCardId":321,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 04:14:29 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":321,"particleType":6} 
 Player 2 04:14:31 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":321,"particleType":6} 
 Player 2 04:14:31 $NEXT_STACK_ID:  
 Player 2 04:14:31 $PLAYER_LOSE_LOOT:  

 {"playerId":2,"cardId":59} 
 Player 2 04:14:31 $MOVE_CARD:  

 {"moveIndex":36,"cardId":59,"placeID":329,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 04:14:31 $MOVE_CARD_TO_PILE:  

 {"type":7,"cardId":59} 
 Player 2 04:14:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Play 4 Cents(2): addMoney \n2:Player 2 is going to activate Lilith"} 
 Player 2 04:14:31 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:14:31 $CLEAR_SE_VIS:  
 Player 2 04:14:31 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":56,"creatorCardId":321,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":59,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":59,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 04:14:32 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":55,"creatorCardId":321,"hasLockingStackEffect":false,"itemToPlayCardId":321,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 04:14:32 $REPLACE_STACK:  

 {"currentStack":[{"entityId":56,"creatorCardId":321,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":59,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":59,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":55,"creatorCardId":321,"hasLockingStackEffect":false,"itemToPlayCardId":321,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 
 Player 2 04:14:32 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 04:14:32 $SHOW_STACK_EFFECT:  

 {"effectId":56} 
 Player 2 04:14:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Play 4 Cents(2): addMoney \n2:Player 2 has activated Lilith"} 
 Player 2 04:14:34 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ACTIVATE_ITEM","args":[{"type":0,"number":321}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":28,"originStackId":-1},"isAfterActivation":true,"index":28} 
 Player 2 04:14:34 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":55,"creatorCardId":321,"hasLockingStackEffect":false,"itemToPlayCardId":321,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 04:14:34 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":55} 
 Player 2 04:14:34 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 04:14:34 $SHOW_STACK_EFFECT:  

 {"effectId":55} 
 Player 2 04:14:37 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":55} 
 Player 2 04:14:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":458,"_text":"Remove After Resolve ActivateItem 55  "}} 
 Player 2 04:14:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Play 4 Cents(2): addMoney"} 
 Player 2 04:14:37 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":55,"creatorCardId":321,"hasLockingStackEffect":false,"itemToPlayCardId":321,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 04:14:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":459,"_text":"Response Remove After Resolve ActivateItem 55"},"childOfId":458} 
 Player 2 04:14:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":460,"_text":"Wait For Response From Player 2 "},"childOfId":458} 
 Player 2 04:14:38 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:14:38 $ACTION_MASSAGE_REMOVE:  

 {"id":460} 
 Player 2 04:14:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":461,"_text":"Wait For Response From Player 1 "},"childOfId":458} 
 Player 2 04:14:38 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:14:38 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:14:38 $ACTION_MASSAGE_REMOVE:  

 {"id":461} 
 Player 2 04:14:38 $ACTION_MASSAGE_REMOVE:  

 {"id":459} 
 Player 2 04:14:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":462,"_text":"Resolve PlayLootCardStackEffect 56 "}} 
 Player 2 04:14:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Play 4 Cents(2): addMoney"} 
 Player 2 04:14:38 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":56,"creatorCardId":321,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":59,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":59,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 04:14:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Plays 4 Cents(2): addMoney"} 
 Player 2 04:14:38 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":59,"particleType":6} 
 Player 2 04:14:40 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":59,"particleType":6} 
 Player 2 04:14:40 $SET_MONEY:  

 {"playerId":2,"numOfCoins":7} 
 Player 2 04:14:40 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":29,"originStackId":-1},"isAfterActivation":true,"index":29} 
 Player 2 04:14:40 $REMOVE_FROM_PILE:  

 {"cardId":59} 
 Player 2 04:14:40 $MOVE_CARD:  

 {"moveIndex":37,"cardId":59,"placeID":330,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 04:14:40 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":59} 
 Player 2 04:14:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Plays 4 Cents(2): addMoney"} 
 Player 2 04:14:40 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":56,"creatorCardId":321,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":59,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 04:14:40 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":56} 
 Player 2 04:14:40 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 04:14:40 $SHOW_STACK_EFFECT:  

 {"effectId":56} 
 Player 2 04:14:43 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":56} 
 Player 2 04:14:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":463,"_text":"Remove After Resolve PlayLootCardStackEffect 56  "}} 
 Player 2 04:14:43 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:14:43 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":56,"creatorCardId":321,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":59,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 04:14:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":464,"_text":"Response Remove After Resolve PlayLootCardStackEffect 56"},"childOfId":463} 
 Player 2 04:14:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":465,"_text":"Wait For Response From Player 1 "},"childOfId":463} 
 Player 2 04:14:43 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:14:43 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:14:44 $ACTION_MASSAGE_REMOVE:  

 {"id":465} 
 Player 2 04:14:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":466,"_text":"Wait For Response From Player 2 "},"childOfId":463} 
 Player 2 04:14:44 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:14:44 $ACTION_MASSAGE_REMOVE:  

 {"id":466} 
 Player 2 04:14:44 $ACTION_MASSAGE_REMOVE:  

 {"id":464} 
 Player 2 04:14:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":467,"_text":"Stack Was Emptied "}} 
 Player 2 04:14:44 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:14:44 $CLEAR_SE_VIS:  
 Player 2 04:14:48 $NEXT_STACK_ID:  
 Player 2 04:14:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is going to activate Incubus"} 
 Player 2 04:14:48 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":57,"creatorCardId":321,"hasLockingStackEffect":false,"itemToPlayCardId":322,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 04:14:48 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":57,"creatorCardId":321,"hasLockingStackEffect":false,"itemToPlayCardId":322,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 04:14:48 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 04:14:48 $SHOW_STACK_EFFECT:  

 {"effectId":57} 
 Player 2 04:14:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":468,"_text":"Add ActivateItem 57 "}} 
 Player 2 04:14:52 $SHOW_EFFECT_CHOSEN:  

 {"cardId":322,"pos":{"x":-667,"y":-250.65899658203125},"size":{"w":490,"h":80}} 
 Player 2 04:14:55 $USE_ITEM:  

 {"cardId":322} 
 Player 2 04:14:55 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:14:55 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":57,"creatorCardId":321,"hasLockingStackEffect":false,"itemToPlayCardId":322,"itemPlayerId":2,"effectToDoData":{"type":1,"index":1},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 04:14:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":469,"_text":"Response Adding ActivateItem 57"},"childOfId":468} 
 Player 2 04:14:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":470,"_text":"Wait For Response From Player 2 "},"childOfId":468} 
 Player 2 04:14:55 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:14:55 $ACTION_MASSAGE_REMOVE:  

 {"id":470} 
 Player 2 04:14:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":471,"_text":"Wait For Response From Player 1 "},"childOfId":468} 
 Player 2 04:14:55 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:14:56 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:14:56 $ACTION_MASSAGE_REMOVE:  

 {"id":471} 
 Player 2 04:14:56 $ACTION_MASSAGE_REMOVE:  

 {"id":469} 
 Player 2 04:14:56 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":472,"_text":"Resolve ActivateItem 57 "}} 
 Player 2 04:14:56 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":57,"creatorCardId":321,"hasLockingStackEffect":false,"itemToPlayCardId":322,"itemPlayerId":2,"effectToDoData":{"type":1,"index":1},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 04:14:56 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":322,"particleType":6} 
 Player 2 04:14:58 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":322,"particleType":6} 
 Player 2 04:14:58 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 04:14:58 $MOVE_CARD:  

 {"moveIndex":38,"cardId":65,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.599999904632568,"y":-0.20000000298023224,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 04:14:58 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":65} 
 Player 2 04:14:58 $FLIP_CARD:  

 {"cardId":65} 
 Player 2 04:14:58 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":65} 
 Player 2 04:15:06 $MOVE_CARD:  

 {"moveIndex":39,"cardId":65,"placeID":3,"flipIfFlipped":false,"playerId":2,"placeType":"Card"} 
 Player 2 04:15:06 $PLAYER_LOSE_LOOT:  

 {"playerId":2,"cardId":65} 
 Player 2 04:15:06 $DECK_ADD_TO_TOP:  

 {"deckType":1,"cardId":65} 
 Player 2 04:15:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 has activated Incubus"} 
 Player 2 04:15:06 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ACTIVATE_ITEM","args":[{"type":0,"number":322}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":30,"originStackId":-1},"isAfterActivation":true,"index":30} 
 Player 2 04:15:06 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":57,"creatorCardId":321,"hasLockingStackEffect":false,"itemToPlayCardId":322,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 04:15:06 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":57} 
 Player 2 04:15:06 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 04:15:06 $SHOW_STACK_EFFECT:  

 {"effectId":57} 
 Player 2 04:15:09 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":57} 
 Player 2 04:15:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":473,"_text":"Remove After Resolve ActivateItem 57  "}} 
 Player 2 04:15:09 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:15:09 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":57,"creatorCardId":321,"hasLockingStackEffect":false,"itemToPlayCardId":322,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 04:15:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":474,"_text":"Response Remove After Resolve ActivateItem 57"},"childOfId":473} 
 Player 2 04:15:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":475,"_text":"Wait For Response From Player 1 "},"childOfId":473} 
 Player 2 04:15:09 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:15:09 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:15:09 $ACTION_MASSAGE_REMOVE:  

 {"id":475} 
 Player 2 04:15:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":476,"_text":"Wait For Response From Player 2 "},"childOfId":473} 
 Player 2 04:15:10 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:15:10 $ACTION_MASSAGE_REMOVE:  

 {"id":476} 
 Player 2 04:15:10 $ACTION_MASSAGE_REMOVE:  

 {"id":474} 
 Player 2 04:15:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":477,"_text":"Stack Was Emptied "}} 
 Player 2 04:15:10 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:15:10 $CLEAR_SE_VIS:  
 Player 2 04:15:12 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:15:12 $CLEAR_SE_VIS:  
 Player 2 04:15:12 $REPLACE_STACK:  

 {"currentStack":[]} 
 Player 2 04:15:12 $CLEAR_SE_VIS:  
 Player 2 04:15:12 $END_TURN:  
 Player 2 04:15:12 $SET_TURN:  

 {"playerId":1} 
 Player 2 04:15:12 $START_TURN:  

 {"playerId":1} 
 Player 2 04:15:12 $STACK_EMPTIED:  

 {"playerId":1} 
 Player 2 04:15:12 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:15:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Golden Horseshoe "} 
 Player 2 04:15:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Golden Horseshoe "} 
 Player 2 04:15:15 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 04:15:15 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:15:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Golden Horseshoe "} 
 Player 2 04:15:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Golden Horseshoe "} 
 Player 2 04:15:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Golden Horseshoe "} 
 Player 2 04:15:31 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 04:15:31 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:15:31 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:15:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 
 Player 2 04:15:34 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 04:15:34 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:15:35 $MOVE_CARD_END:  

 {"moveIndex":40,"cardId":65,"flipIfFlipped":false,"playerId":1} 
 Player 2 04:15:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 
 Player 2 04:15:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 
 Player 2 04:15:38 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 04:15:38 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:15:40 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:15:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Play 4 Cents(8) "} 
 Player 2 04:15:43 $MOVE_CARD_END:  

 {"moveIndex":41,"cardId":65,"flipIfFlipped":true,"playerId":1} 
 Player 2 04:15:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Play 4 Cents(8) "} 
 Player 2 04:15:44 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 04:15:44 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:15:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Play 4 Cents(8) "} 
 Player 2 04:15:46 $MOVE_CARD_END:  

 {"moveIndex":42,"cardId":65,"flipIfFlipped":true,"playerId":1} 
 Player 2 04:15:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Play 4 Cents(8) "} 
 Player 2 04:15:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Play 4 Cents(8) "} 
 Player 2 04:15:49 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 04:15:49 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:15:52 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:15:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Buy Treasure Deck For 10"} 
 Player 2 04:15:55 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 04:15:55 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:15:56 $MOVE_CARD_END:  

 {"moveIndex":43,"cardId":178,"flipIfFlipped":true,"playerId":1} 
 Player 2 04:15:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Buy Treasure Deck For 10"} 
 Player 2 04:15:59 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 04:15:59 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:16:02 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:16:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is going to activate Jaw Bone"} 
 Player 2 04:16:09 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 04:16:09 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:16:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is going to activate Jaw Bone"} 
 Player 2 04:16:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is going to activate Jaw Bone"} 
 Player 2 04:16:14 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 04:16:14 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:16:27 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:16:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 declared attack on Monster Deck"} 
 Player 2 04:16:30 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 04:16:30 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:16:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 declared attack on Monster Deck"} 
 Player 2 04:16:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 declared attack on Monster Deck \n2:Player 1 is going to activate Troll Bombs!"} 
 Player 2 04:16:39 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 04:16:39 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:16:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 declared attack on Monster Deck \n2:Player 1 is going to activate Troll Bombs!"} 
 Player 2 04:16:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 declared attack on Monster Deck \n2:Player 1 is going to activate Troll Bombs! \n3:Player 1 Is About To Die"} 
 Player 2 04:16:45 $MOVE_CARD_END:  

 {"moveIndex":44,"cardId":306,"flipIfFlipped":true,"playerId":1} 
 Player 2 04:16:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 declared attack on Monster Deck \n2:Player 1 is going to activate Troll Bombs! \n3:Player 1 Is About To Die"} 
 Player 2 04:16:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 declared attack on Monster Deck \n2:Player 1 is going to activate Troll Bombs! \n3:Player 1 Is About To Die"} 
 Player 2 04:16:48 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 04:16:48 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:16:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 declared attack on Monster Deck \n2:Player 1 is going to activate Troll Bombs!"} 
 Player 2 04:16:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 declared attack on Monster Deck \n2:Player 1 is going to activate Troll Bombs!"} 
 Player 2 04:16:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 declared attack on Monster Deck \n2:Player 1 Is About To Die \n3:Player 1 Is About To Pay Death Penalties"} 
 Player 2 04:16:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 declared attack on Monster Deck \n2:Player 1 Is About To Die \n3:Player 1 Is About To Pay Death Penalties"} 
 Player 2 04:16:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 declared attack on Monster Deck \n2:Player 1 Is About To Die \n3:Player 1 Is About To Pay Death Penalties"} 
 Player 2 04:16:54 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 04:16:54 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:16:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 declared attack on Monster Deck \n2:Player 1 Is About To Die"} 
 Player 2 04:17:00 $MOVE_CARD_END:  

 {"moveIndex":45,"cardId":116,"flipIfFlipped":true,"playerId":1} 
 Player 2 04:17:03 $MOVE_CARD_END:  

 {"moveIndex":46,"cardId":102,"flipIfFlipped":true,"playerId":1} 
 Player 2 04:17:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 declared attack on Monster Deck \n2:Player 1 Is About To Die"} 
 Player 2 04:17:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 declared attack on Monster Deck \n2:Player 1 Is About To Pay Death Penalties"} 
 Player 2 04:17:07 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 04:17:07 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:17:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 declared attack on Monster Deck"} 
 Player 2 04:17:10 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 04:17:10 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:17:10 $STACK_EMPTIED:  

 {"playerId":1} 
 Player 2 04:17:10 $RECHARGE_ITEM:  

 {"cardId":321} 
 Player 2 04:17:10 $PLAYER_RECHARGE_ITEM:  

 {"playerId":2,"cardId":321} 
 Player 2 04:17:10 $RECHARGE_ITEM:  

 {"cardId":322} 
 Player 2 04:17:10 $PLAYER_RECHARGE_ITEM:  

 {"playerId":2,"cardId":322} 
 Player 2 04:17:10 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:17:10 $NEXT_STACK_ID:  
 Player 2 04:17:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 
 Player 2 04:17:10 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":67,"creatorCardId":321,"turnPlayerCardId":321,"stackEffectType":13}} 
 Player 2 04:17:11 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":67,"creatorCardId":321,"turnPlayerCardId":321,"stackEffectType":13}} 
 Player 2 04:17:11 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 04:17:11 $SHOW_STACK_EFFECT:  

 {"effectId":67} 
 Player 2 04:17:11 $CLEAR_SE_VIS:  
 Player 2 04:17:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":559,"_text":"Add StartTurnLoot 67 "}} 
 Player 2 04:17:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:17:13 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":67,"creatorCardId":321,"turnPlayerCardId":321,"stackEffectType":13}} 
 Player 2 04:17:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":560,"_text":"Response Adding StartTurnLoot 67"},"childOfId":559} 
 Player 2 04:17:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":561,"_text":"Wait For Response From Player 2 "},"childOfId":559} 
 Player 2 04:17:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:17:13 $ACTION_MASSAGE_REMOVE:  

 {"id":561} 
 Player 2 04:17:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":562,"_text":"Wait For Response From Player 1 "},"childOfId":559} 
 Player 2 04:17:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:17:14 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:17:14 $ACTION_MASSAGE_REMOVE:  

 {"id":562} 
 Player 2 04:17:14 $ACTION_MASSAGE_REMOVE:  

 {"id":560} 
 Player 2 04:17:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":563,"_text":"Resolve StartTurnLoot 67 "}} 
 Player 2 04:17:14 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":67,"creatorCardId":321,"turnPlayerCardId":321,"stackEffectType":13}} 
 Player 2 04:17:14 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 04:17:14 $MOVE_CARD:  

 {"moveIndex":47,"cardId":36,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.599999904632568,"y":-0.20000000298023224,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 04:17:14 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":36} 
 Player 2 04:17:14 $FLIP_CARD:  

 {"cardId":36} 
 Player 2 04:17:14 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":36} 
 Player 2 04:17:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Has Drawen Loot For Start Turn"} 
 Player 2 04:17:14 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":67,"creatorCardId":321,"turnPlayerCardId":321,"stackEffectType":13}} 
 Player 2 04:17:14 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":67} 
 Player 2 04:17:14 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 04:17:14 $SHOW_STACK_EFFECT:  

 {"effectId":67} 
 Player 2 04:17:17 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":67} 
 Player 2 04:17:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":564,"_text":"Remove After Resolve StartTurnLoot 67  "}} 
 Player 2 04:17:17 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:17:17 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":67,"creatorCardId":321,"turnPlayerCardId":321,"stackEffectType":13}} 
 Player 2 04:17:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":565,"_text":"Response Remove After Resolve StartTurnLoot 67"},"childOfId":564} 
 Player 2 04:17:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":566,"_text":"Wait For Response From Player 1 "},"childOfId":564} 
 Player 2 04:17:17 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:17:17 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:17:18 $ACTION_MASSAGE_REMOVE:  

 {"id":566} 
 Player 2 04:17:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":567,"_text":"Wait For Response From Player 2 "},"childOfId":564} 
 Player 2 04:17:18 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:17:18 $ACTION_MASSAGE_REMOVE:  

 {"id":567} 
 Player 2 04:17:18 $ACTION_MASSAGE_REMOVE:  

 {"id":565} 
 Player 2 04:17:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":568,"_text":"Stack Was Emptied "}} 
 Player 2 04:17:18 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:17:18 $CLEAR_SE_VIS:  
 Player 2 04:17:34 $NEXT_STACK_ID:  
 Player 2 04:17:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is going to activate Incubus"} 
 Player 2 04:17:34 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":68,"creatorCardId":321,"hasLockingStackEffect":false,"itemToPlayCardId":322,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 04:17:34 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":68,"creatorCardId":321,"hasLockingStackEffect":false,"itemToPlayCardId":322,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 04:17:34 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 04:17:34 $SHOW_STACK_EFFECT:  

 {"effectId":68} 
 Player 2 04:17:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":569,"_text":"Add ActivateItem 68 "}} 
 Player 2 04:17:43 $SHOW_EFFECT_CHOSEN:  

 {"cardId":322,"pos":{"x":-667,"y":-250.65899658203125},"size":{"w":490,"h":80}} 
 Player 2 04:17:46 $USE_ITEM:  

 {"cardId":322} 
 Player 2 04:17:46 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:17:46 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":68,"creatorCardId":321,"hasLockingStackEffect":false,"itemToPlayCardId":322,"itemPlayerId":2,"effectToDoData":{"type":1,"index":1},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 04:17:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":570,"_text":"Response Adding ActivateItem 68"},"childOfId":569} 
 Player 2 04:17:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":571,"_text":"Wait For Response From Player 2 "},"childOfId":569} 
 Player 2 04:17:46 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:17:46 $ACTION_MASSAGE_REMOVE:  

 {"id":571} 
 Player 2 04:17:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":572,"_text":"Wait For Response From Player 1 "},"childOfId":569} 
 Player 2 04:17:47 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:17:47 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:17:47 $ACTION_MASSAGE_REMOVE:  

 {"id":572} 
 Player 2 04:17:47 $ACTION_MASSAGE_REMOVE:  

 {"id":570} 
 Player 2 04:17:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":573,"_text":"Resolve ActivateItem 68 "}} 
 Player 2 04:17:47 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":68,"creatorCardId":321,"hasLockingStackEffect":false,"itemToPlayCardId":322,"itemPlayerId":2,"effectToDoData":{"type":1,"index":1},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 04:17:47 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":322,"particleType":6} 
 Player 2 04:17:49 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":322,"particleType":6} 
 Player 2 04:17:49 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 04:17:49 $MOVE_CARD:  

 {"moveIndex":48,"cardId":11,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.599999904632568,"y":-0.20000000298023224,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 04:17:49 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":11} 
 Player 2 04:17:49 $FLIP_CARD:  

 {"cardId":11} 
 Player 2 04:17:49 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":11} 
 Player 2 04:17:52 $MOVE_CARD:  

 {"moveIndex":49,"cardId":11,"placeID":3,"flipIfFlipped":false,"playerId":2,"placeType":"Card"} 
 Player 2 04:17:53 $PLAYER_LOSE_LOOT:  

 {"playerId":2,"cardId":11} 
 Player 2 04:17:53 $DECK_ADD_TO_TOP:  

 {"deckType":1,"cardId":11} 
 Player 2 04:17:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 has activated Incubus"} 
 Player 2 04:17:53 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ACTIVATE_ITEM","args":[{"type":0,"number":322}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":31,"originStackId":-1},"isAfterActivation":true,"index":31} 
 Player 2 04:17:53 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":68,"creatorCardId":321,"hasLockingStackEffect":false,"itemToPlayCardId":322,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 04:17:53 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":68} 
 Player 2 04:17:53 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 04:17:53 $SHOW_STACK_EFFECT:  

 {"effectId":68} 
 Player 2 04:17:56 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":68} 
 Player 2 04:17:56 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":574,"_text":"Remove After Resolve ActivateItem 68  "}} 
 Player 2 04:17:56 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:17:56 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":68,"creatorCardId":321,"hasLockingStackEffect":false,"itemToPlayCardId":322,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 04:17:56 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":575,"_text":"Response Remove After Resolve ActivateItem 68"},"childOfId":574} 
 Player 2 04:17:56 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":576,"_text":"Wait For Response From Player 1 "},"childOfId":574} 
 Player 2 04:17:56 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:17:56 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:17:56 $ACTION_MASSAGE_REMOVE:  

 {"id":576} 
 Player 2 04:17:56 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":577,"_text":"Wait For Response From Player 2 "},"childOfId":574} 
 Player 2 04:17:56 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:17:56 $ACTION_MASSAGE_REMOVE:  

 {"id":577} 
 Player 2 04:17:56 $ACTION_MASSAGE_REMOVE:  

 {"id":575} 
 Player 2 04:17:56 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":578,"_text":"Stack Was Emptied "}} 
 Player 2 04:17:56 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:17:56 $CLEAR_SE_VIS:  
 Player 2 04:18:10 $NEXT_STACK_ID:  
 Player 2 04:18:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Play 3 Cents(1) "} 
 Player 2 04:18:10 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":69,"creatorCardId":321,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":36,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 2 04:18:10 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":69,"creatorCardId":321,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":36,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 2 04:18:10 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 04:18:10 $SHOW_STACK_EFFECT:  

 {"effectId":69} 
 Player 2 04:18:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":579,"_text":"Add PlayLootCardStackEffect 69 "}} 
 Player 2 04:18:13 $PLAYER_LOSE_LOOT:  

 {"playerId":2,"cardId":36} 
 Player 2 04:18:13 $MOVE_CARD:  

 {"moveIndex":50,"cardId":36,"placeID":329,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 04:18:14 $MOVE_CARD_TO_PILE:  

 {"type":7,"cardId":36} 
 Player 2 04:18:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Play 3 Cents(1): addMoney"} 
 Player 2 04:18:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:18:14 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":69,"creatorCardId":321,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":36,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":36,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 04:18:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":580,"_text":"Response Adding PlayLootCardStackEffect 69"},"childOfId":579} 
 Player 2 04:18:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":581,"_text":"Wait For Response From Player 2 "},"childOfId":579} 
 Player 2 04:18:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:18:14 $ACTION_MASSAGE_REMOVE:  

 {"id":581} 
 Player 2 04:18:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":582,"_text":"Wait For Response From Player 1 "},"childOfId":579} 
 Player 2 04:18:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:18:14 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:18:14 $ACTION_MASSAGE_REMOVE:  

 {"id":582} 
 Player 2 04:18:14 $ACTION_MASSAGE_REMOVE:  

 {"id":580} 
 Player 2 04:18:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":583,"_text":"Resolve PlayLootCardStackEffect 69 "}} 
 Player 2 04:18:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Play 3 Cents(1): addMoney"} 
 Player 2 04:18:14 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":69,"creatorCardId":321,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":36,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":36,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 04:18:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Plays 3 Cents(1): addMoney"} 
 Player 2 04:18:14 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":36,"particleType":6} 
 Player 2 04:18:16 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":36,"particleType":6} 
 Player 2 04:18:16 $SET_MONEY:  

 {"playerId":2,"numOfCoins":7} 
 Player 2 04:18:16 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":32,"originStackId":-1},"isAfterActivation":true,"index":32} 
 Player 2 04:18:16 $REMOVE_FROM_PILE:  

 {"cardId":36} 
 Player 2 04:18:16 $MOVE_CARD:  

 {"moveIndex":51,"cardId":36,"placeID":330,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 04:18:16 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":36} 
 Player 2 04:18:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Plays 3 Cents(1): addMoney"} 
 Player 2 04:18:17 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":69,"creatorCardId":321,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":36,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 04:18:17 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":69} 
 Player 2 04:18:17 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 04:18:17 $SHOW_STACK_EFFECT:  

 {"effectId":69} 
 Player 2 04:18:19 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":69} 
 Player 2 04:18:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":584,"_text":"Remove After Resolve PlayLootCardStackEffect 69  "}} 
 Player 2 04:18:20 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:18:20 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":69,"creatorCardId":321,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":36,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 04:18:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":585,"_text":"Response Remove After Resolve PlayLootCardStackEffect 69"},"childOfId":584} 
 Player 2 04:18:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":586,"_text":"Wait For Response From Player 1 "},"childOfId":584} 
 Player 2 04:18:20 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:18:20 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:18:20 $ACTION_MASSAGE_REMOVE:  

 {"id":586} 
 Player 2 04:18:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":587,"_text":"Wait For Response From Player 2 "},"childOfId":584} 
 Player 2 04:18:20 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:18:20 $ACTION_MASSAGE_REMOVE:  

 {"id":587} 
 Player 2 04:18:20 $ACTION_MASSAGE_REMOVE:  

 {"id":585} 
 Player 2 04:18:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":588,"_text":"Stack Was Emptied "}} 
 Player 2 04:18:20 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:18:20 $CLEAR_SE_VIS:  
 Player 2 04:18:24 $NEXT_STACK_ID:  
 Player 2 04:18:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 declared attack on Monster Deck"} 
 Player 2 04:18:24 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":70,"creatorCardId":321,"attackingPlayerCardId":321,"idOfCardBeingAttacked":222,"stackEffectType":4}} 
 Player 2 04:18:24 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":70,"creatorCardId":321,"attackingPlayerCardId":321,"idOfCardBeingAttacked":222,"stackEffectType":4}} 
 Player 2 04:18:24 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 04:18:24 $SHOW_STACK_EFFECT:  

 {"effectId":70} 
 Player 2 04:18:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":589,"_text":"Add DeclareAttack 70 "}} 
 Player 2 04:18:27 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:18:27 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":70,"creatorCardId":321,"attackingPlayerCardId":321,"idOfCardBeingAttacked":222,"stackEffectType":4}} 
 Player 2 04:18:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":590,"_text":"Response Adding DeclareAttack 70"},"childOfId":589} 
 Player 2 04:18:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":591,"_text":"Wait For Response From Player 2 "},"childOfId":589} 
 Player 2 04:18:27 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:18:28 $ACTION_MASSAGE_REMOVE:  

 {"id":591} 
 Player 2 04:18:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":592,"_text":"Wait For Response From Player 1 "},"childOfId":589} 
 Player 2 04:18:28 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:18:28 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:18:28 $ACTION_MASSAGE_REMOVE:  

 {"id":592} 
 Player 2 04:18:28 $ACTION_MASSAGE_REMOVE:  

 {"id":590} 
 Player 2 04:18:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":593,"_text":"Resolve DeclareAttack 70 "}} 
 Player 2 04:18:28 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":70,"creatorCardId":321,"attackingPlayerCardId":321,"idOfCardBeingAttacked":222,"stackEffectType":4}} 
 Player 2 04:18:28 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 04:18:28 $SHOW_CARD_PREVIEW:  

 {"cardToShowId":287,"playerId":2} 
 Player 2 04:18:44 $FLIP_CARD:  

 {"cardId":287} 
 Player 2 04:18:44 $REGISTER_PASSIVE_ITEM:  

 {"cardId":287} 
 Player 2 04:18:44 $ADD_MONSTER:  

 {"monsterPlaceId":2,"monsterId":287} 
 Player 2 04:18:44 $NEW_MONSTER_ON_PLACE:  

 {"cardId":287,"monsterPlaceId":2} 
 Player 2 04:18:44 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":287,"particleType":5} 
 Player 2 04:18:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Has Entered Battle with Mask of Infamy"} 
 Player 2 04:18:44 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":33,"originStackId":70},"isAfterActivation":true,"index":33} 
 Player 2 04:18:44 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":70,"creatorCardId":321,"attackingPlayerCardId":321,"idOfCardBeingAttacked":287,"stackEffectType":4}} 
 Player 2 04:18:44 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":70} 
 Player 2 04:18:44 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 04:18:44 $SHOW_STACK_EFFECT:  

 {"effectId":70} 
 Player 2 04:18:47 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":70} 
 Player 2 04:18:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":594,"_text":"Remove After Resolve DeclareAttack 70  "}} 
 Player 2 04:18:47 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:18:47 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":70,"creatorCardId":321,"attackingPlayerCardId":321,"idOfCardBeingAttacked":287,"stackEffectType":4}} 
 Player 2 04:18:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":595,"_text":"Response Remove After Resolve DeclareAttack 70"},"childOfId":594} 
 Player 2 04:18:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":596,"_text":"Wait For Response From Player 1 "},"childOfId":594} 
 Player 2 04:18:47 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:18:47 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:18:47 $ACTION_MASSAGE_REMOVE:  

 {"id":596} 
 Player 2 04:18:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":597,"_text":"Wait For Response From Player 2 "},"childOfId":594} 
 Player 2 04:18:48 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:18:48 $ACTION_MASSAGE_REMOVE:  

 {"id":597} 
 Player 2 04:18:48 $ACTION_MASSAGE_REMOVE:  

 {"id":595} 
 Player 2 04:18:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":598,"_text":"Stack Was Emptied "}} 
 Player 2 04:18:48 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:18:48 $CLEAR_SE_VIS:  
 Player 2 04:18:56 $NEXT_STACK_ID:  
 Player 2 04:18:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Mask of Infamy<Monster>"} 
 Player 2 04:18:56 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":71,"creatorCardId":321,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":287}} 
 Player 2 04:18:56 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":71,"creatorCardId":321,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":287}} 
 Player 2 04:18:57 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 04:18:57 $SHOW_STACK_EFFECT:  

 {"effectId":71} 
 Player 2 04:18:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":599,"_text":"Add AttackRoll 71 "}} 
 Player 2 04:18:59 $ROLL_DICE:  

 {"playerId":2} 
 Player 2 04:19:01 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":5} 
 Player 2 04:19:01 $UPDATE_STACK_VIS:  

 {"stackId":71,"text":"player rolled 5 vs Mask of Infamy<Monster>"} 
 Player 2 04:19:01 $SHOW_DICE_ROLL:  

 {"stackId":71} 
 Player 2 04:19:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 5 vs Mask of Infamy<Monster>"} 
 Player 2 04:19:04 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:19:04 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":71,"creatorCardId":321,"numberRolled":5,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":287}} 
 Player 2 04:19:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":600,"_text":"Response Adding AttackRoll 71"},"childOfId":599} 
 Player 2 04:19:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":601,"_text":"Wait For Response From Player 2 "},"childOfId":599} 
 Player 2 04:19:04 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:19:04 $ACTION_MASSAGE_REMOVE:  

 {"id":601} 
 Player 2 04:19:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":602,"_text":"Wait For Response From Player 1 "},"childOfId":599} 
 Player 2 04:19:04 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:19:04 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:19:04 $ACTION_MASSAGE_REMOVE:  

 {"id":602} 
 Player 2 04:19:04 $ACTION_MASSAGE_REMOVE:  

 {"id":600} 
 Player 2 04:19:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":603,"_text":"Resolve AttackRoll 71 "}} 
 Player 2 04:19:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 5 vs Mask of Infamy<Monster>"} 
 Player 2 04:19:04 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":71,"creatorCardId":321,"numberRolled":5,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":287}} 
 Player 2 04:19:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":604,"_text":"Added 0 to original roll"}} 
 Player 2 04:19:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Rolled 5 Against Mask of Infamy<Monster> 4"} 
 Player 2 04:19:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Roll Hit"} 
 Player 2 04:19:04 $NEXT_STACK_ID:  
 Player 2 04:19:04 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:19:04 $CLEAR_SE_VIS:  
 Player 2 04:19:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Mask of Infamy \n2:Player 2 Roll Hit"} 
 Player 2 04:19:04 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":72,"creatorCardId":321,"entityToDoDamageCardId":321,"entityToTakeDamageCardId":287,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5}} 
 Player 2 04:19:04 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":71,"creatorCardId":321,"numberRolled":5,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":287}} 
 Player 2 04:19:04 $REPLACE_STACK:  

 {"currentStack":[{"entityId":72,"creatorCardId":321,"entityToDoDamageCardId":321,"entityToTakeDamageCardId":287,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5},{"entityId":71,"creatorCardId":321,"numberRolled":5,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":287}]} 
 Player 2 04:19:04 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 04:19:05 $SHOW_STACK_EFFECT:  

 {"effectId":72} 
 Player 2 04:19:07 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":34,"originStackId":71},"isAfterActivation":true,"index":34} 
 Player 2 04:19:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Mask of Infamy \n2:Player 2 Roll Hit"} 
 Player 2 04:19:07 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":71,"creatorCardId":321,"numberRolled":5,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":287}} 
 Player 2 04:19:07 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":71} 
 Player 2 04:19:07 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 04:19:07 $SHOW_STACK_EFFECT:  

 {"effectId":71} 
 Player 2 04:19:10 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":71} 
 Player 2 04:19:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":605,"_text":"Remove After Resolve AttackRoll 71  "}} 
 Player 2 04:19:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Mask of Infamy"} 
 Player 2 04:19:10 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":71,"creatorCardId":321,"numberRolled":5,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":287}} 
 Player 2 04:19:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":606,"_text":"Response Remove After Resolve AttackRoll 71"},"childOfId":605} 
 Player 2 04:19:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":607,"_text":"Wait For Response From Player 2 "},"childOfId":605} 
 Player 2 04:19:10 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:19:10 $ACTION_MASSAGE_REMOVE:  

 {"id":607} 
 Player 2 04:19:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":608,"_text":"Wait For Response From Player 1 "},"childOfId":605} 
 Player 2 04:19:10 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:19:10 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:19:11 $ACTION_MASSAGE_REMOVE:  

 {"id":608} 
 Player 2 04:19:11 $ACTION_MASSAGE_REMOVE:  

 {"id":606} 
 Player 2 04:19:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":609,"_text":"Resolve CombatDamage 72 "}} 
 Player 2 04:19:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Mask of Infamy"} 
 Player 2 04:19:11 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":72,"creatorCardId":321,"entityToDoDamageCardId":321,"entityToTakeDamageCardId":287,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5}} 
 Player 2 04:19:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith will deal 2 combat damage to Mask of Infamy "} 
 Player 2 04:19:11 $UPDATE_STACK_VIS:  

 {"stackId":72,"text":"Lilith will deal 2 combat damage to Mask of Infamy"} 
 Player 2 04:19:11 $MONSTER_GET_DAMAGED:  

 {"cardId":287,"hpLeft":2,"damageDealerId":321} 
 Player 2 04:19:11 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":321},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":287,"scopeIsPlayer":false,"index":35,"originStackId":-1},"isAfterActivation":true,"index":35} 
 Player 2 04:19:11 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":2},{"type":2,"number":5},{"type":0,"number":321},{"type":0,"number":287}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":36,"originStackId":72},"isAfterActivation":true,"index":36} 
 Player 2 04:19:11 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":72,"creatorCardId":321,"entityToDoDamageCardId":321,"entityToTakeDamageCardId":287,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5}} 
 Player 2 04:19:11 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":72} 
 Player 2 04:19:11 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 04:19:11 $SHOW_STACK_EFFECT:  

 {"effectId":72} 
 Player 2 04:19:14 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":72} 
 Player 2 04:19:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":610,"_text":"Remove After Resolve CombatDamage 72  "}} 
 Player 2 04:19:14 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:19:14 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":72,"creatorCardId":321,"entityToDoDamageCardId":321,"entityToTakeDamageCardId":287,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5}} 
 Player 2 04:19:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":611,"_text":"Response Remove After Resolve CombatDamage 72"},"childOfId":610} 
 Player 2 04:19:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":612,"_text":"Wait For Response From Player 1 "},"childOfId":610} 
 Player 2 04:19:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:19:14 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:19:14 $ACTION_MASSAGE_REMOVE:  

 {"id":612} 
 Player 2 04:19:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":613,"_text":"Wait For Response From Player 2 "},"childOfId":610} 
 Player 2 04:19:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:19:14 $ACTION_MASSAGE_REMOVE:  

 {"id":613} 
 Player 2 04:19:14 $ACTION_MASSAGE_REMOVE:  

 {"id":611} 
 Player 2 04:19:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":614,"_text":"Stack Was Emptied "}} 
 Player 2 04:19:14 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:19:14 $CLEAR_SE_VIS:  
 Player 2 04:19:47 $NEXT_STACK_ID:  
 Player 2 04:19:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Mask of Infamy<Monster>"} 
 Player 2 04:19:47 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":73,"creatorCardId":321,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":287}} 
 Player 2 04:19:47 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":73,"creatorCardId":321,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":287}} 
 Player 2 04:19:47 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 04:19:47 $SHOW_STACK_EFFECT:  

 {"effectId":73} 
 Player 2 04:19:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":615,"_text":"Add AttackRoll 73 "}} 
 Player 2 04:19:50 $ROLL_DICE:  

 {"playerId":2} 
 Player 2 04:19:52 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":4} 
 Player 2 04:19:52 $UPDATE_STACK_VIS:  

 {"stackId":73,"text":"player rolled 4 vs Mask of Infamy<Monster>"} 
 Player 2 04:19:52 $SHOW_DICE_ROLL:  

 {"stackId":73} 
 Player 2 04:19:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 4 vs Mask of Infamy<Monster>"} 
 Player 2 04:19:55 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:19:55 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":73,"creatorCardId":321,"numberRolled":4,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":287}} 
 Player 2 04:19:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":616,"_text":"Response Adding AttackRoll 73"},"childOfId":615} 
 Player 2 04:19:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":617,"_text":"Wait For Response From Player 2 "},"childOfId":615} 
 Player 2 04:19:55 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:19:55 $ACTION_MASSAGE_REMOVE:  

 {"id":617} 
 Player 2 04:19:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":618,"_text":"Wait For Response From Player 1 "},"childOfId":615} 
 Player 2 04:19:55 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:19:55 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:19:55 $ACTION_MASSAGE_REMOVE:  

 {"id":618} 
 Player 2 04:19:55 $ACTION_MASSAGE_REMOVE:  

 {"id":616} 
 Player 2 04:19:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":619,"_text":"Resolve AttackRoll 73 "}} 
 Player 2 04:19:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 4 vs Mask of Infamy<Monster>"} 
 Player 2 04:19:55 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":73,"creatorCardId":321,"numberRolled":4,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":287}} 
 Player 2 04:19:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":620,"_text":"Added 0 to original roll"}} 
 Player 2 04:19:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Rolled 4 Against Mask of Infamy<Monster> 4"} 
 Player 2 04:19:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Roll Hit"} 
 Player 2 04:19:55 $NEXT_STACK_ID:  
 Player 2 04:19:55 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:19:55 $CLEAR_SE_VIS:  
 Player 2 04:19:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Mask of Infamy \n2:Player 2 Roll Hit"} 
 Player 2 04:19:56 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":74,"creatorCardId":321,"entityToDoDamageCardId":321,"entityToTakeDamageCardId":287,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 
 Player 2 04:19:56 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":73,"creatorCardId":321,"numberRolled":4,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":287}} 
 Player 2 04:19:56 $REPLACE_STACK:  

 {"currentStack":[{"entityId":74,"creatorCardId":321,"entityToDoDamageCardId":321,"entityToTakeDamageCardId":287,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":73,"creatorCardId":321,"numberRolled":4,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":287}]} 
 Player 2 04:19:56 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 04:19:56 $SHOW_STACK_EFFECT:  

 {"effectId":74} 
 Player 2 04:19:58 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":1},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":37,"originStackId":73},"isAfterActivation":true,"index":37} 
 Player 2 04:19:58 $NEXT_STACK_ID:  
 Player 2 04:19:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Mask of Infamy \n2:Player 2 Roll Hit"} 
 Player 2 04:19:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Mask of Infamy \n2:Player 2 Roll Hit \n3:Activate Cursed Tumor Effect DealDamage<DealDamage>"} 
 Player 2 04:19:58 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":75,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":247,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":247,"effctType":0},"isAfterActivation":true,"index":37,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 04:19:58 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":75,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":247,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":247,"effctType":0},"isAfterActivation":true,"index":37,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 04:19:58 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 04:19:58 $SHOW_STACK_EFFECT:  

 {"effectId":75} 
 Player 2 04:20:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":621,"_text":"Add ActivatePassiveEffect 75 "}} 
 Player 2 04:20:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Mask of Infamy \n2:Player 2 Roll Hit \n3:Activate Cursed Tumor effect DealDamage<DealDamage>"} 
 Player 2 04:20:01 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[311,321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":247,"effectCardPlayer":247},"entityId":75,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":247,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":247,"effctType":0},"isAfterActivation":true,"index":37,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 04:20:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":622,"_text":"Response Adding ActivatePassiveEffect 75"},"childOfId":621} 
 Player 2 04:20:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":623,"_text":"Wait For Response From Player 2 "},"childOfId":621} 
 Player 2 04:20:01 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:20:01 $ACTION_MASSAGE_REMOVE:  

 {"id":623} 
 Player 2 04:20:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":624,"_text":"Wait For Response From Player 1 "},"childOfId":621} 
 Player 2 04:20:01 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:20:01 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:20:02 $ACTION_MASSAGE_REMOVE:  

 {"id":624} 
 Player 2 04:20:02 $ACTION_MASSAGE_REMOVE:  

 {"id":622} 
 Player 2 04:20:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":625,"_text":"Resolve ActivatePassiveEffect 75 "}} 
 Player 2 04:20:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Mask of Infamy \n2:Player 2 Roll Hit \n3:Activate Cursed Tumor effect DealDamage<DealDamage>"} 
 Player 2 04:20:02 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[311,321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":247,"effectCardPlayer":247},"entityId":75,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":247,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":247,"effctType":0},"isAfterActivation":true,"index":37,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 04:20:02 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":247,"particleType":6} 
 Player 2 04:20:04 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":247,"particleType":6} 
 Player 2 04:20:04 $PLAYER_GET_HIT:  

 {"playerId":1,"damage":1,"damageDealerId":247} 
 Player 2 04:20:04 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":247}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":38,"originStackId":-1},"isAfterActivation":true,"index":38} 
 Player 2 04:20:04 $LOG_ERROR:  

 {"message":"\"Cannot read property 'name' of null\"","stack":"\"TypeError: Cannot read property 'name' of null\\n    at AtSpecificHp.<anonymous> (src/project.dev.js:5023:67)\\n    at step (src/cocos2d-jsb.js:74004:21)\\n    at Object.next (src/cocos2d-jsb.js:73948:18)\\n    at src/cocos2d-jsb.js:73926:71\\n    at new Promise (<anonymous>)\\n    at 344.window.__awaiter (src/cocos2d-jsb.js:73906:14)\\n    at AtSpecificHp.testCondition (src/project.dev.js:5008:16)\\n    at Function.<anonymous> (src/project.dev.js:26151:37)\\n    at step (src/project.dev.js:25879:21)\\n    at Object.next (src/project.dev.js:25823:18)\""} 
 Player 2 04:20:04 $PLAYER_GET_HIT:  

 {"playerId":2,"damage":1,"damageDealerId":247} 
 Player 2 04:20:04 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":247}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":39,"originStackId":-1},"isAfterActivation":true,"index":39} 
 Player 2 04:20:04 $LOG_ERROR:  

 {"message":"\"Cannot read property 'name' of null\"","stack":"\"TypeError: Cannot read property 'name' of null\\n    at AtSpecificHp.<anonymous> (src/project.dev.js:5023:67)\\n    at step (src/cocos2d-jsb.js:74004:21)\\n    at Object.next (src/cocos2d-jsb.js:73948:18)\\n    at src/cocos2d-jsb.js:73926:71\\n    at new Promise (<anonymous>)\\n    at 344.window.__awaiter (src/cocos2d-jsb.js:73906:14)\\n    at AtSpecificHp.testCondition (src/project.dev.js:5008:16)\\n    at Function.<anonymous> (src/project.dev.js:26151:37)\\n    at step (src/project.dev.js:25879:21)\\n    at Object.next (src/project.dev.js:25823:18)\""} 
 Player 2 04:20:04 $NEXT_STACK_ID:  
 Player 2 04:20:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Mask of Infamy \n2:Player 2 Roll Hit \n3:Activate Cursed Tumor effect DealDamage<DealDamage>"} 
 Player 2 04:20:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Mask of Infamy \n2:Player 2 Roll Hit \n3:Activate Cursed Tumor effect DealDamage<DealDamage> \n4:Activate Swallowed Penny Effect AddMoney<AddMoney>"} 
 Player 2 04:20:05 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":76,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":123,"effctType":0},"isAfterActivation":true,"index":39,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 04:20:05 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":76,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":123,"effctType":0},"isAfterActivation":true,"index":39,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 04:20:05 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 04:20:05 $SHOW_STACK_EFFECT:  

 {"effectId":76} 
 Player 2 04:20:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":626,"_text":"Add ActivatePassiveEffect 76 "}} 
 Player 2 04:20:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Mask of Infamy \n2:Player 2 Roll Hit \n3:Activate Cursed Tumor effect DealDamage<DealDamage> \n4:Activate Swallowed Penny effect AddMoney<AddMoney>"} 
 Player 2 04:20:07 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":321,"effectCardPlayer":321},"entityId":76,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":123,"effctType":0},"isAfterActivation":true,"index":39,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 04:20:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":627,"_text":"Response Adding ActivatePassiveEffect 76"},"childOfId":626} 
 Player 2 04:20:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":628,"_text":"Wait For Response From Player 1 "},"childOfId":626} 
 Player 2 04:20:07 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:20:07 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:20:08 $ACTION_MASSAGE_REMOVE:  

 {"id":628} 
 Player 2 04:20:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":629,"_text":"Wait For Response From Player 2 "},"childOfId":626} 
 Player 2 04:20:08 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:20:08 $ACTION_MASSAGE_REMOVE:  

 {"id":629} 
 Player 2 04:20:08 $ACTION_MASSAGE_REMOVE:  

 {"id":627} 
 Player 2 04:20:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":630,"_text":"Resolve ActivatePassiveEffect 76 "}} 
 Player 2 04:20:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Mask of Infamy \n2:Player 2 Roll Hit \n3:Activate Cursed Tumor effect DealDamage<DealDamage> \n4:Activate Swallowed Penny effect AddMoney<AddMoney>"} 
 Player 2 04:20:08 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":321,"effectCardPlayer":321},"entityId":76,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":123,"effctType":0},"isAfterActivation":true,"index":39,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 04:20:08 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":123,"particleType":6} 
 Player 2 04:20:10 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":123,"particleType":6} 
 Player 2 04:20:10 $SET_MONEY:  

 {"playerId":2,"numOfCoins":8} 
 Player 2 04:20:10 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":1}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":40,"originStackId":-1},"isAfterActivation":true,"index":40} 
 Player 2 04:20:10 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":247}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":39,"originStackId":-1},"isAfterActivation":true,"index":39} 
 Player 2 04:20:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Mask of Infamy \n2:Player 2 Roll Hit \n3:Activate Cursed Tumor effect DealDamage<DealDamage> \n4:Activated Swallowed Penny Effect"} 
 Player 2 04:20:10 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":321,"effectCardPlayer":321},"entityId":76,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"isAfterActivation":true,"index":39,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 04:20:10 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":76} 
 Player 2 04:20:10 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 04:20:10 $SHOW_STACK_EFFECT:  

 {"effectId":76} 
 Player 2 04:20:13 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":76} 
 Player 2 04:20:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":631,"_text":"Remove After Resolve ActivatePassiveEffect 76  "}} 
 Player 2 04:20:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Mask of Infamy \n2:Player 2 Roll Hit \n3:Activate Cursed Tumor effect DealDamage<DealDamage>"} 
 Player 2 04:20:13 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":321,"effectCardPlayer":321},"entityId":76,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"isAfterActivation":true,"index":39,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 04:20:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":632,"_text":"Response Remove After Resolve ActivatePassiveEffect 76"},"childOfId":631} 
 Player 2 04:20:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":633,"_text":"Wait For Response From Player 2 "},"childOfId":631} 
 Player 2 04:20:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:20:13 $ACTION_MASSAGE_REMOVE:  

 {"id":633} 
 Player 2 04:20:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":634,"_text":"Wait For Response From Player 1 "},"childOfId":631} 
 Player 2 04:20:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:20:13 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:20:13 $ACTION_MASSAGE_REMOVE:  

 {"id":634} 
 Player 2 04:20:13 $ACTION_MASSAGE_REMOVE:  

 {"id":632} 
 Player 2 04:20:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":635,"_text":"Resolve ActivatePassiveEffect 75 "}} 
 Player 2 04:20:13 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":1},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":37,"originStackId":73},"isAfterActivation":true,"index":37} 
 Player 2 04:20:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Mask of Infamy \n2:Player 2 Roll Hit \n3:Activated Cursed Tumor Effect"} 
 Player 2 04:20:13 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[311,321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":247,"effectCardPlayer":247},"entityId":75,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":247,"isAfterActivation":true,"index":37,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 04:20:13 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":75} 
 Player 2 04:20:13 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 04:20:13 $SHOW_STACK_EFFECT:  

 {"effectId":75} 
 Player 2 04:20:16 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":75} 
 Player 2 04:20:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":636,"_text":"Remove After Resolve ActivatePassiveEffect 75  "}} 
 Player 2 04:20:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Mask of Infamy \n2:Player 2 Roll Hit"} 
 Player 2 04:20:16 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[311,321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":247,"effectCardPlayer":247},"entityId":75,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":247,"isAfterActivation":true,"index":37,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 04:20:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":637,"_text":"Response Remove After Resolve ActivatePassiveEffect 75"},"childOfId":636} 
 Player 2 04:20:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":638,"_text":"Wait For Response From Player 1 "},"childOfId":636} 
 Player 2 04:20:16 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:20:16 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:20:17 $ACTION_MASSAGE_REMOVE:  

 {"id":638} 
 Player 2 04:20:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":639,"_text":"Wait For Response From Player 2 "},"childOfId":636} 
 Player 2 04:20:17 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:20:17 $ACTION_MASSAGE_REMOVE:  

 {"id":639} 
 Player 2 04:20:17 $ACTION_MASSAGE_REMOVE:  

 {"id":637} 
 Player 2 04:20:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":640,"_text":"Resolve AttackRoll 73 "}} 
 Player 2 04:20:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Mask of Infamy \n2:Player 2 Roll Hit"} 
 Player 2 04:20:17 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":73,"creatorCardId":321,"numberRolled":4,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":287}} 
 Player 2 04:20:17 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":73} 
 Player 2 04:20:17 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 04:20:17 $SHOW_STACK_EFFECT:  

 {"effectId":73} 
 Player 2 04:20:19 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":73} 
 Player 2 04:20:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":641,"_text":"Remove After Resolve AttackRoll 73  "}} 
 Player 2 04:20:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Mask of Infamy"} 
 Player 2 04:20:20 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":73,"creatorCardId":321,"numberRolled":4,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":287}} 
 Player 2 04:20:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":642,"_text":"Response Remove After Resolve AttackRoll 73"},"childOfId":641} 
 Player 2 04:20:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":643,"_text":"Wait For Response From Player 2 "},"childOfId":641} 
 Player 2 04:20:20 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:20:20 $ACTION_MASSAGE_REMOVE:  

 {"id":643} 
 Player 2 04:20:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":644,"_text":"Wait For Response From Player 1 "},"childOfId":641} 
 Player 2 04:20:20 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:20:20 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:20:20 $ACTION_MASSAGE_REMOVE:  

 {"id":644} 
 Player 2 04:20:20 $ACTION_MASSAGE_REMOVE:  

 {"id":642} 
 Player 2 04:20:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":645,"_text":"Resolve CombatDamage 74 "}} 
 Player 2 04:20:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Mask of Infamy"} 
 Player 2 04:20:20 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":74,"creatorCardId":321,"entityToDoDamageCardId":321,"entityToTakeDamageCardId":287,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 
 Player 2 04:20:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith will deal 2 combat damage to Mask of Infamy "} 
 Player 2 04:20:20 $UPDATE_STACK_VIS:  

 {"stackId":74,"text":"Lilith will deal 2 combat damage to Mask of Infamy"} 
 Player 2 04:20:20 $MONSTER_GET_DAMAGED:  

 {"cardId":287,"hpLeft":0,"damageDealerId":321} 
 Player 2 04:20:20 $NEXT_STACK_ID:  
 Player 2 04:20:20 $CLEAR_SE_VIS:  
 Player 2 04:20:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith will deal 2 combat damage to Mask of Infamy  \n2:[object Object] Is Going To Be Killed by Lilith"} 
 Player 2 04:20:20 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":74,"creatorCardId":321,"entityToDoDamageCardId":321,"entityToTakeDamageCardId":287,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 
 Player 2 04:20:20 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":77,"creatorCardId":321,"monsterToDieCardId":287,"stackEffectType":5,"killerId":321}} 
 Player 2 04:20:20 $REPLACE_STACK:  

 {"currentStack":[{"entityId":74,"creatorCardId":321,"entityToDoDamageCardId":321,"entityToTakeDamageCardId":287,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":77,"creatorCardId":321,"monsterToDieCardId":287,"stackEffectType":5,"killerId":321}]} 
 Player 2 04:20:20 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":77,"creatorCardId":321,"monsterToDieCardId":287,"stackEffectType":5,"killerId":321}} 
 Player 2 04:20:20 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 04:20:20 $SHOW_STACK_EFFECT:  

 {"effectId":77} 
 Player 2 04:20:23 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:20:23 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":321},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":287,"scopeIsPlayer":false,"index":41,"originStackId":-1},"isAfterActivation":true,"index":41} 
 Player 2 04:20:23 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":2},{"type":2,"number":4},{"type":0,"number":321},{"type":0,"number":287}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":42,"originStackId":74},"isAfterActivation":true,"index":42} 
 Player 2 04:20:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith will deal 2 combat damage to Mask of Infamy  \n2:[object Object] Is Going To Be Killed by Lilith"} 
 Player 2 04:20:23 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":74,"creatorCardId":321,"entityToDoDamageCardId":321,"entityToTakeDamageCardId":287,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 
 Player 2 04:20:23 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":74} 
 Player 2 04:20:23 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 04:20:23 $SHOW_STACK_EFFECT:  

 {"effectId":74} 
 Player 2 04:20:26 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":74} 
 Player 2 04:20:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":646,"_text":"Remove After Resolve CombatDamage 74  "}} 
 Player 2 04:20:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] Is Going To Be Killed by Lilith"} 
 Player 2 04:20:26 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":74,"creatorCardId":321,"entityToDoDamageCardId":321,"entityToTakeDamageCardId":287,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 
 Player 2 04:20:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":647,"_text":"Response Remove After Resolve CombatDamage 74"},"childOfId":646} 
 Player 2 04:20:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":648,"_text":"Wait For Response From Player 2 "},"childOfId":646} 
 Player 2 04:20:26 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:20:26 $ACTION_MASSAGE_REMOVE:  

 {"id":648} 
 Player 2 04:20:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":649,"_text":"Wait For Response From Player 1 "},"childOfId":646} 
 Player 2 04:20:26 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:20:26 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:20:26 $ACTION_MASSAGE_REMOVE:  

 {"id":649} 
 Player 2 04:20:26 $ACTION_MASSAGE_REMOVE:  

 {"id":647} 
 Player 2 04:20:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":650,"_text":"Resolve MonsterDeath 77 "}} 
 Player 2 04:20:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] Is Going To Be Killed by Lilith"} 
 Player 2 04:20:26 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":77,"creatorCardId":321,"monsterToDieCardId":287,"stackEffectType":5,"killerId":321}} 
 Player 2 04:20:26 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":287,"particleType":5} 
 Player 2 04:20:26 $CANCEL_ATTACK:  
 Player 2 04:20:26 $NEXT_STACK_ID:  
 Player 2 04:20:26 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:20:27 $CLEAR_SE_VIS:  
 Player 2 04:20:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Get Mask of Infamy<Monster>'s Reward \n2:[object Object] Is Going To Be Killed by Lilith"} 
 Player 2 04:20:27 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":78,"creatorCardId":321,"monsterCardWithRewardId":287,"playerCardIdToReward":321,"stackEffectType":7}} 
 Player 2 04:20:27 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":77,"creatorCardId":321,"monsterToDieCardId":287,"stackEffectType":5,"killerId":321}} 
 Player 2 04:20:27 $REPLACE_STACK:  

 {"currentStack":[{"entityId":78,"creatorCardId":321,"monsterCardWithRewardId":287,"playerCardIdToReward":321,"stackEffectType":7},{"entityId":77,"creatorCardId":321,"monsterToDieCardId":287,"stackEffectType":5,"killerId":321}]} 
 Player 2 04:20:27 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 04:20:27 $SHOW_STACK_EFFECT:  

 {"effectId":78} 
 Player 2 04:20:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Get Mask of Infamy<Monster>'s Reward \n2:[object Object] Is Going To Be Killed by Lilith"} 
 Player 2 04:20:29 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":77,"creatorCardId":321,"monsterToDieCardId":287,"stackEffectType":5,"killerId":321}} 
 Player 2 04:20:29 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":77} 
 Player 2 04:20:29 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 04:20:29 $SHOW_STACK_EFFECT:  

 {"effectId":77} 
 Player 2 04:20:32 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":77} 
 Player 2 04:20:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":651,"_text":"Remove After Resolve MonsterDeath 77  "}} 
 Player 2 04:20:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Get Mask of Infamy<Monster>'s Reward"} 
 Player 2 04:20:32 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":77,"creatorCardId":321,"monsterToDieCardId":287,"stackEffectType":5,"killerId":321}} 
 Player 2 04:20:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":652,"_text":"Response Remove After Resolve MonsterDeath 77"},"childOfId":651} 
 Player 2 04:20:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":653,"_text":"Wait For Response From Player 2 "},"childOfId":651} 
 Player 2 04:20:33 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:20:33 $ACTION_MASSAGE_REMOVE:  

 {"id":653} 
 Player 2 04:20:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":654,"_text":"Wait For Response From Player 1 "},"childOfId":651} 
 Player 2 04:20:33 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:20:33 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:20:33 $ACTION_MASSAGE_REMOVE:  

 {"id":654} 
 Player 2 04:20:33 $ACTION_MASSAGE_REMOVE:  

 {"id":652} 
 Player 2 04:20:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":655,"_text":"Resolve MonsterRewardStackEffect 78 "}} 
 Player 2 04:20:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Get Mask of Infamy<Monster>'s Reward"} 
 Player 2 04:20:33 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":78,"creatorCardId":321,"monsterCardWithRewardId":287,"playerCardIdToReward":321,"stackEffectType":7}} 
 Player 2 04:20:33 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 04:20:33 $REGISTER_PASSIVE_ITEM:  

 {"cardId":187} 
 Player 2 04:20:33 $MOVE_CARD:  

 {"moveIndex":52,"cardId":187,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 
 Player 2 04:20:33 $ADD_AN_ITEM:  

 {"playerId":2,"cardId":187,"isReward":true} 
 Player 2 04:20:33 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":187}],"result":true,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":43,"originStackId":-1},"isAfterActivation":true,"index":43} 
 Player 2 04:20:33 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":287,"scopeIsPlayer":false,"index":44,"originStackId":78},"isAfterActivation":true,"index":44} 
 Player 2 04:20:33 $MOVE_CARD:  

 {"moveIndex":53,"cardId":287,"placeID":332,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 04:20:34 $MOVE_CARD_TO_PILE:  

 {"type":2,"cardId":287} 
 Player 2 04:20:34 $REMOVE_FROM_PASSIVE_MANAGER:  

 {"cardId":287} 
 Player 2 04:20:34 $REMOVE_MONSTER:  

 {"holderId":2,"monsterId":287} 
 Player 2 04:20:34 $GET_NEXT_MONSTER:  

 {"monsterPlaceId":2} 
 Player 2 04:20:34 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":78,"creatorCardId":321,"monsterCardWithRewardId":287,"playerCardIdToReward":321,"stackEffectType":7}} 
 Player 2 04:20:34 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":78} 
 Player 2 04:20:34 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 04:20:34 $SHOW_STACK_EFFECT:  

 {"effectId":78} 
 Player 2 04:20:37 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":78} 
 Player 2 04:20:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":656,"_text":"Remove After Resolve MonsterRewardStackEffect 78  "}} 
 Player 2 04:20:37 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:20:37 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":78,"creatorCardId":321,"monsterCardWithRewardId":287,"playerCardIdToReward":321,"stackEffectType":7}} 
 Player 2 04:20:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":657,"_text":"Response Remove After Resolve MonsterRewardStackEffect 78"},"childOfId":656} 
 Player 2 04:20:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":658,"_text":"Wait For Response From Player 1 "},"childOfId":656} 
 Player 2 04:20:37 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 04:20:37 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 04:20:37 $ACTION_MASSAGE_REMOVE:  

 {"id":658} 
 Player 2 04:20:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":659,"_text":"Wait For Response From Player 2 "},"childOfId":656} 
 Player 2 04:20:37 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:20:37 $ACTION_MASSAGE_REMOVE:  

 {"id":659} 
 Player 2 04:20:37 $ACTION_MASSAGE_REMOVE:  

 {"id":657} 
 Player 2 04:20:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":660,"_text":"Stack Was Emptied "}} 
 Player 2 04:20:37 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:20:37 $CLEAR_SE_VIS:  
 Player 2 04:20:47 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 04:20:47 $CLEAR_SE_VIS:  
 Player 2 04:20:47 $REPLACE_STACK:  

 {"currentStack":[]} 
 Player 2 04:20:47 $CLEAR_SE_VIS:  
 Player 2 04:20:47 $END_TURN:  
 Player 2 04:20:47 $SET_TURN:  

 {"playerId":1} 
 Player 2 04:20:47 $START_TURN:  

 {"playerId":1} 
 Player 2 04:20:47 $STACK_EMPTIED:  

 {"playerId":1} 
 Player 2 04:20:47 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:20:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 
 Player 2 04:20:50 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321]} 
 Player 2 04:20:50 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:20:51 $MOVE_CARD_END:  

 {"moveIndex":54,"cardId":11,"flipIfFlipped":false,"playerId":1} 
 Player 2 04:20:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 
 Player 2 04:20:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 
 Player 2 04:20:54 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321]} 
 Player 2 04:20:54 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:21:18 $DECK_ARRAGMENT:  

 {"deckType":2,"arrangement":[282,292,241,238,249,258,250,257,274,239,298,262,243,232,309,244,224,256,237,233,307,281,284,296,246,225,235,278,305,310,227,251,301,277,283,229,272,231,253,276,263,234,248,270,261,280,265,285,275,271,288,303,308,268,266,299,294,245,252,295,279,230,290,260,267,264,297,273,302,286,226,304,242,228,300,289,291,223,254,259]} 
 Player 2 04:21:18 $MOVE_CARD:  

 {"moveIndex":55,"cardId":236,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"soulsLayout"} 
 Player 2 04:21:18 $GET_SOUL:  

 {"playerId":2,"cardId":236} 
 Player 2 04:21:54 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:21:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is going to activate Jaw Bone"} 
 Player 2 04:22:00 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321]} 
 Player 2 04:22:00 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:22:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is going to activate Jaw Bone"} 
 Player 2 04:22:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is going to activate Jaw Bone"} 
 Player 2 04:22:05 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321]} 
 Player 2 04:22:05 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:22:10 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:22:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Play 1 Penny(6) "} 
 Player 2 04:22:13 $MOVE_CARD_END:  

 {"moveIndex":56,"cardId":11,"flipIfFlipped":true,"playerId":1} 
 Player 2 04:22:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Play 1 Penny(6) "} 
 Player 2 04:22:13 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321]} 
 Player 2 04:22:14 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:22:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Play 1 Penny(6) "} 
 Player 2 04:22:16 $MOVE_CARD_END:  

 {"moveIndex":57,"cardId":11,"flipIfFlipped":true,"playerId":1} 
 Player 2 04:22:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Play 1 Penny(6) "} 
 Player 2 04:22:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Play 1 Penny(6) "} 
 Player 2 04:22:19 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321]} 
 Player 2 04:22:19 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:22:24 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:22:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is going to activate Azazel"} 
 Player 2 04:22:33 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321]} 
 Player 2 04:22:33 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:22:35 $MOVE_CARD_END:  

 {"moveIndex":58,"cardId":113,"flipIfFlipped":true,"playerId":1} 
 Player 2 04:22:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is going to activate Azazel"} 
 Player 2 04:22:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Play Pill Purple  \n2:Player 1 is going to activate Azazel"} 
 Player 2 04:22:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Play Pill Purple  \n2:Player 1 is going to activate Azazel"} 
 Player 2 04:22:41 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321]} 
 Player 2 04:22:42 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:22:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Play Pill Purple "} 
 Player 2 04:22:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Play Pill Purple  \n2:Player 1 Is About To Roll A Dice"} 
 Player 2 04:22:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Play Pill Purple  \n2:Player 1 Is About To Roll A Dice"} 
 Player 2 04:22:50 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321]} 
 Player 2 04:22:50 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:22:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Play Pill Purple  \n2:Player 1 Is About To Roll A Dice"} 
 Player 2 04:22:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Play Pill Purple  \n2:Player 1 Is About To Roll A Dice"} 
 Player 2 04:22:53 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321]} 
 Player 2 04:22:53 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:22:56 $MOVE_CARD_END:  

 {"moveIndex":59,"cardId":113,"flipIfFlipped":true,"playerId":1} 
 Player 2 04:22:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Play Pill Purple "} 
 Player 2 04:22:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Play Pill Purple "} 
 Player 2 04:22:59 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321]} 
 Player 2 04:22:59 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:23:01 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:23:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is going to activate Jaw Bone"} 
 Player 2 04:23:07 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321]} 
 Player 2 04:23:07 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:23:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is going to activate Jaw Bone"} 
 Player 2 04:23:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is going to activate Jaw Bone"} 
 Player 2 04:23:13 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321]} 
 Player 2 04:23:13 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:23:18 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:23:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 declared attack on Monster Deck"} 
 Player 2 04:23:21 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321]} 
 Player 2 04:23:21 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:23:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 declared attack on Monster Deck"} 
 Player 2 04:23:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 declared attack on Fistula"} 
 Player 2 04:23:31 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321]} 
 Player 2 04:23:31 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:23:41 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 04:23:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Fistula<Monster>"} 
 Player 2 04:23:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Fistula<Monster>"} 
 Player 2 04:23:48 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321]} 
 Player 2 04:23:48 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:23:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Fistula<Monster>"} 
 Player 2 04:23:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Fistula<Monster>"} 
 Player 2 04:23:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Fistula \n2:Player 1 is rolling against Fistula<Monster>"} 
 Player 2 04:23:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Fistula \n2:Player 1 is rolling against Fistula<Monster> \n3:Activate Cursed Tumor "} 
 Player 2 04:23:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Fistula \n2:Player 1 is rolling against Fistula<Monster> \n3:Activate Cursed Tumor "} 
 Player 2 04:23:55 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321]} 
 Player 2 04:23:55 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:23:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Fistula \n2:Player 1 is rolling against Fistula<Monster> \n3:Activate Cursed Tumor "} 
 Player 2 04:23:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Fistula \n2:Player 1 is rolling against Fistula<Monster> \n3:Activate Cursed Tumor "} 
 Player 2 04:23:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Fistula \n2:Player 1 is rolling against Fistula<Monster> \n3:Activate Cursed Tumor  \n4:Activate Swallowed Penny "} 
 Player 2 04:24:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Fistula \n2:Player 1 is rolling against Fistula<Monster> \n3:Activate Cursed Tumor  \n4:Activate Swallowed Penny "} 
 Player 2 04:24:00 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":321,"effectCardPlayer":321},"entityId":91,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":123,"effctType":0},"isAfterActivation":true,"index":49,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 04:24:00 $END_PUT_ON_STACK:  

 {"playerId":1} 
 Player 2 04:24:00 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321]} 
 Player 2 04:24:00 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:24:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Fistula \n2:Player 1 is rolling against Fistula<Monster> \n3:Activate Cursed Tumor  \n4:Activate Swallowed Penny "} 
 Player 2 04:24:01 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":123,"particleType":6} 
 Player 2 04:24:03 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":123,"particleType":6} 
 Player 2 04:24:03 $SET_MONEY:  

 {"playerId":2,"numOfCoins":3} 
 Player 2 04:24:03 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":1}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":45,"originStackId":-1},"isAfterActivation":true,"index":45} 
 Player 2 04:24:03 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":{"type":2,"number":1}},{"type":0,"number":247}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":49},"isAfterActivation":true,"index":49} 
 Player 2 04:24:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Fistula \n2:Player 1 is rolling against Fistula<Monster> \n3:Activate Cursed Tumor  \n4:Activated Swallowed Penny Effect"} 
 Player 2 04:24:03 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":321,"effectCardPlayer":321},"entityId":91,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"isAfterActivation":true,"index":49,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 04:24:03 $FINISH_DO_STACK_EFFECT:  

 {"playerId":1,"newStack":[{"entityId":89,"creatorCardId":311,"entityToDoDamageCardId":311,"entityToTakeDamageCardId":259,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":88,"creatorCardId":311,"numberRolled":4,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":259},{"effectCollectedData":{"effectTargets":[311,321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":247,"effectCardPlayer":247},"entityId":90,"creatorCardId":311,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":247,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":247,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":{"type":2,"number":4}},{"type":2,"number":{"type":2,"number":2}},{"type":2,"number":{"type":2,"number":2}}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":null},"isAfterActivation":true,"index":47,"hasDataBeenCollectedYet":true,"stackEffectType":14},{"effectCollectedData":{"effectTargets":[321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":321,"effectCardPlayer":321},"entityId":91,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"isAfterActivation":true,"index":49,"hasDataBeenCollectedYet":true,"stackEffectType":14}]} 
 Player 2 04:24:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Fistula \n2:Player 1 is rolling against Fistula<Monster> \n3:Activate Cursed Tumor  \n4:Activated Swallowed Penny Effect"} 
 Player 2 04:24:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Fistula \n2:Player 1 is rolling against Fistula<Monster> \n3:Activate Cursed Tumor  \n4:Activate Swallowed Penny "} 
 Player 2 04:24:06 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321]} 
 Player 2 04:24:06 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:24:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Fistula \n2:Player 1 is rolling against Fistula<Monster> \n3:Activate Cursed Tumor "} 
 Player 2 04:24:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Fistula \n2:Player 1 is rolling against Fistula<Monster> \n3:Activate Cursed Tumor  \n4:Player 1 Is About To Die"} 
 Player 2 04:24:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Fistula \n2:Player 1 is rolling against Fistula<Monster> \n3:Activate Cursed Tumor  \n4:Player 1 Is About To Die"} 
 Player 2 04:24:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Fistula \n2:Player 1 is rolling against Fistula<Monster> \n3:Activate Cursed Tumor  \n4:Player 1 Is About To Die \n5:Player 2 Is About To Die"} 
 Player 2 04:24:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Fistula \n2:Player 1 is rolling against Fistula<Monster> \n3:Activate Cursed Tumor  \n4:Player 1 Is About To Die \n5:Player 2 Is About To Die"} 
 Player 2 04:24:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Fistula \n2:Player 1 is rolling against Fistula<Monster> \n3:Activate Cursed Tumor  \n4:Player 1 Is About To Die \n5:Player 2 Is About To Die \n6:Activate Swallowed Penny "} 
 Player 2 04:24:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Fistula \n2:Player 1 is rolling against Fistula<Monster> \n3:Activate Cursed Tumor  \n4:Player 1 Is About To Die \n5:Player 2 Is About To Die \n6:Activate Swallowed Penny "} 
 Player 2 04:24:17 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":321,"effectCardPlayer":321},"entityId":94,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":123,"effctType":0},"isAfterActivation":true,"index":51,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 04:24:17 $END_PUT_ON_STACK:  

 {"playerId":1} 
 Player 2 04:24:18 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321]} 
 Player 2 04:24:18 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:24:18 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":123,"particleType":6} 
 Player 2 04:24:20 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":123,"particleType":6} 
 Player 2 04:24:20 $SET_MONEY:  

 {"playerId":2,"numOfCoins":4} 
 Player 2 04:24:20 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":1}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":46,"originStackId":-1},"isAfterActivation":true,"index":46} 
 Player 2 04:24:20 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":{"type":2,"number":1}},{"type":0,"number":247}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":51},"isAfterActivation":true,"index":51} 
 Player 2 04:24:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Fistula \n2:Player 1 is rolling against Fistula<Monster> \n3:Activate Cursed Tumor  \n4:Player 1 Is About To Die \n5:Player 2 Is About To Die \n6:Activated Swallowed Penny Effect"} 
 Player 2 04:24:20 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":321,"effectCardPlayer":321},"entityId":94,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"isAfterActivation":true,"index":51,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 04:24:20 $FINISH_DO_STACK_EFFECT:  

 {"playerId":1,"newStack":[{"entityId":89,"creatorCardId":311,"entityToDoDamageCardId":311,"entityToTakeDamageCardId":259,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":88,"creatorCardId":311,"numberRolled":4,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":259},{"effectCollectedData":{"effectTargets":[311,321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":247,"effectCardPlayer":247},"entityId":90,"creatorCardId":311,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":247,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":247,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":{"type":2,"number":4}},{"type":2,"number":{"type":2,"number":2}},{"type":2,"number":{"type":2,"number":2}}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":null},"isAfterActivation":true,"index":47,"hasDataBeenCollectedYet":true,"stackEffectType":14},{"entityId":92,"creatorCardId":311,"playerToDieCardId":311,"stackEffectType":15,"killerId":247},{"entityId":93,"creatorCardId":321,"playerToDieCardId":321,"stackEffectType":15,"killerId":247},{"effectCollectedData":{"effectTargets":[321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":321,"effectCardPlayer":321},"entityId":94,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"isAfterActivation":true,"index":51,"hasDataBeenCollectedYet":true,"stackEffectType":14}]} 
 Player 2 04:24:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Fistula \n2:Player 1 is rolling against Fistula<Monster> \n3:Activate Cursed Tumor  \n4:Player 1 Is About To Die \n5:Player 2 Is About To Die \n6:Activated Swallowed Penny Effect"} 
 Player 2 04:24:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Fistula \n2:Player 1 is rolling against Fistula<Monster> \n3:Activate Cursed Tumor  \n4:Player 1 Is About To Die \n5:Player 2 Is About To Die \n6:Activate Swallowed Penny "} 
 Player 2 04:24:23 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321]} 
 Player 2 04:24:23 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false}