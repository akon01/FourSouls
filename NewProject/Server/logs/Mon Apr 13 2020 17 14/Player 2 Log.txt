Start Log 
 Player 2 17:14:41 $MOVE_TO_TABLE:  
 Player 2 17:14:50 $FINISH_LOAD:  

 {"id":2,"turnPlayerId":2} 
 Player 2 17:14:50 $SET_CHAR:  

 {"originPlayerId":2,"playerId":1,"charCardId":319,"itemCardId":320} 
 Player 2 17:14:50 $ASSIGN_CHAR_TO_PLAYER:  

 {"playerId":2,"charCardId":325,"itemCardId":326} 
 Player 2 17:14:50 $DECK_ARRAGMENT:  

 {"deckType":1,"arrangement":[75,114,97,122,94,128,106,33,12,56,10,73,81,53,40,65,54,111,31,46,68,27,92,29,42,51,115,126,116,28,105,57,8,47,130,103,36,20,62,24,138,25,88,9,5,125,69,95,66,67,32,59,99,44,107,108,109,101,13,61,139,30,23,113,135,96,11,19,26,72,118,104,82,34,124,78,77,79,84,129,63,37,86,7,4,45,133,15,90,123,55,110,35,85,60,17,52,87,22,134,64,16,83,98,100,136,43,137,121,112,48,80,6,38,71,93,89,58,41,127,117,39,50,132,74,119,102,49,91,76,70,14,131,21,18,120]} 
 Player 2 17:14:50 $DECK_ARRAGMENT:  

 {"deckType":2,"arrangement":[268,297,302,307,293,243,270,263,245,272,236,300,240,292,301,251,241,265,299,232,259,244,273,249,295,262,284,283,247,222,239,289,304,285,255,248,266,275,296,282,279,223,258,306,305,264,227,280,242,229,252,231,233,234,308,277,250,267,298,269,254,271,287,260,253,226,237,303,291,261,281,256,246,230,286,257,294,274,238,235,290,278,224,225,228,276,288]} 
 Player 2 17:14:50 $DECK_ARRAGMENT:  

 {"deckType":5,"arrangement":[217,147,193,146,199,175,155,143,201,200,192,218,173,182,196,158,169,202,153,168,187,178,195,170,183,209,204,207,162,171,210,148,191,189,156,185,181,213,198,184,151,179,174,142,211,219,220,216,159,203,144,214,176,180,205,149,188,161,186,163,208,141,194,157,212,177,164,145,150,152,215,197,166,190,167,206,165,154,160,172]} 
 Player 2 17:14:50 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 17:14:50 $FLIP_CARD:  

 {"cardId":172} 
 Player 2 17:14:50 $ADD_STORE_CARD:  

 {"cardId":172} 
 Player 2 17:14:50 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 17:14:50 $FLIP_CARD:  

 {"cardId":160} 
 Player 2 17:14:50 $ADD_STORE_CARD:  

 {"cardId":160} 
 Player 2 17:14:50 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 17:14:50 $FLIP_CARD:  

 {"cardId":288} 
 Player 2 17:14:50 $ADD_MONSTER:  

 {"monsterPlaceId":1,"monsterId":288} 
 Player 2 17:14:50 $NEW_MONSTER_ON_PLACE:  

 {"cardId":288,"monsterPlaceId":1} 
 Player 2 17:14:50 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 17:14:50 $FLIP_CARD:  

 {"cardId":276} 
 Player 2 17:14:51 $REGISTER_PASSIVE_ITEM:  

 {"cardId":276} 
 Player 2 17:14:51 $ADD_MONSTER:  

 {"monsterPlaceId":2,"monsterId":276} 
 Player 2 17:14:51 $NEW_MONSTER_ON_PLACE:  

 {"cardId":276,"monsterPlaceId":2} 
 Player 2 17:14:51 $SET_MONEY:  

 {"playerId":1,"numOfCoins":3} 
 Player 2 17:14:51 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":319,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 17:14:51 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 17:14:51 $MOVE_CARD:  

 {"moveIndex":1,"cardId":120,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 17:14:51 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":120} 
 Player 2 17:14:51 $FLIP_CARD:  

 {"cardId":120} 
 Player 2 17:14:51 $FLIP_CARD:  

 {"cardId":120} 
 Player 2 17:14:51 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":120} 
 Player 2 17:14:51 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 17:14:51 $MOVE_CARD:  

 {"moveIndex":2,"cardId":18,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 17:14:52 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":18} 
 Player 2 17:14:52 $FLIP_CARD:  

 {"cardId":18} 
 Player 2 17:14:52 $FLIP_CARD:  

 {"cardId":18} 
 Player 2 17:14:52 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":18} 
 Player 2 17:14:52 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 17:14:52 $MOVE_CARD:  

 {"moveIndex":3,"cardId":21,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 17:14:52 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":21} 
 Player 2 17:14:52 $FLIP_CARD:  

 {"cardId":21} 
 Player 2 17:14:52 $FLIP_CARD:  

 {"cardId":21} 
 Player 2 17:14:52 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":21} 
 Player 2 17:14:52 $SET_MONEY:  

 {"playerId":2,"numOfCoins":3} 
 Player 2 17:14:52 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 2 17:14:52 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 17:14:52 $MOVE_CARD:  

 {"moveIndex":4,"cardId":131,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 17:14:53 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":131} 
 Player 2 17:14:53 $FLIP_CARD:  

 {"cardId":131} 
 Player 2 17:14:53 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":131} 
 Player 2 17:14:53 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 17:14:53 $MOVE_CARD:  

 {"moveIndex":5,"cardId":14,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 17:14:53 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":14} 
 Player 2 17:14:53 $FLIP_CARD:  

 {"cardId":14} 
 Player 2 17:14:53 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":14} 
 Player 2 17:14:53 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 17:14:53 $MOVE_CARD:  

 {"moveIndex":6,"cardId":70,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 17:14:54 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":70} 
 Player 2 17:14:54 $FLIP_CARD:  

 {"cardId":70} 
 Player 2 17:14:54 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":70} 
 Player 2 17:14:54 $GAME_HAS_STARTED:  
 Player 2 17:14:54 $SET_TURN:  

 {"playerId":1} 
 Player 2 17:14:54 $START_TURN:  

 {"playerId":1} 
 Player 2 17:14:54 $UPDATE_ACTIONS:  
 Player 2 17:14:54 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 17:14:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 
 Player 2 17:14:57 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[325,326]} 
 Player 2 17:14:57 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 17:14:57 $MOVE_CARD_END:  

 {"moveIndex":7,"cardId":76,"flipIfFlipped":false,"playerId":1} 
 Player 2 17:14:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 
 Player 2 17:15:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 
 Player 2 17:15:01 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[325,326]} 
 Player 2 17:15:01 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 17:15:04 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 17:15:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 declared attack on Holy Mulligan"} 
 Player 2 17:15:07 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[325,326]} 
 Player 2 17:15:07 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 17:15:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 declared attack on Holy Mulligan"} 
 Player 2 17:15:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 declared attack on Holy Mulligan"} 
 Player 2 17:15:10 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[325,326]} 
 Player 2 17:15:10 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 17:15:11 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 17:15:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Holy Mulligan<Monster>"} 
 Player 2 17:15:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Holy Mulligan<Monster>"} 
 Player 2 17:15:19 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[325,326]} 
 Player 2 17:15:19 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 17:15:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Holy Mulligan<Monster>"} 
 Player 2 17:15:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Holy Mulligan<Monster>"} 
 Player 2 17:15:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Holy Mulligan \n2:Player 1 is rolling against Holy Mulligan<Monster>"} 
 Player 2 17:15:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Holy Mulligan \n2:Player 1 is rolling against Holy Mulligan<Monster>"} 
 Player 2 17:15:26 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[325,326]} 
 Player 2 17:15:26 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 17:15:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Holy Mulligan"} 
 Player 2 17:15:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Holy Mulligan \n2:[object Object] Is Going To Be Killed by Lilith"} 
 Player 2 17:15:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Holy Mulligan \n2:[object Object] Is Going To Be Killed by Lilith"} 
 Player 2 17:15:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Holy Mulligan \n2:[object Object] Is Going To Be Killed by Lilith"} 
 Player 2 17:15:32 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[325,326]} 
 Player 2 17:15:32 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 17:15:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Holy Mulligan"} 
 Player 2 17:15:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Holy Mulligan"} 
 Player 2 17:15:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Holy Mulligan \n2:Activate Holy Mulligan "} 
 Player 2 17:15:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Holy Mulligan \n2:Activate Holy Mulligan "} 
 Player 2 17:15:35 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[325,326]} 
 Player 2 17:15:35 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 17:15:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Holy Mulligan \n2:Activate Holy Mulligan "} 
 Player 2 17:15:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Holy Mulligan \n2:Activate Holy Mulligan "} 
 Player 2 17:15:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Holy Mulligan \n2:Activate Holy Mulligan  \n3:Refill holder3 Slot"} 
 Player 2 17:15:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Holy Mulligan \n2:Activate Holy Mulligan  \n3:Refill holder3 Slot"} 
 Player 2 17:15:41 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[325,326]} 
 Player 2 17:15:41 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 17:15:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Holy Mulligan \n2:Activate Holy Mulligan  \n3:Refill holder3 Slot"} 
 Player 2 17:15:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Holy Mulligan \n2:Activate Holy Mulligan  \n3:Refill holder3 Slot"} 
 Player 2 17:15:44 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[325,326]} 
 Player 2 17:15:44 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 17:15:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Holy Mulligan \n2:Activate Holy Mulligan "} 
 Player 2 17:15:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Holy Mulligan \n2:Activate Holy Mulligan  \n3:Refill holder4 Slot"} 
 Player 2 17:15:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Holy Mulligan \n2:Activate Holy Mulligan  \n3:Refill holder4 Slot"} 
 Player 2 17:15:48 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[325,326]} 
 Player 2 17:15:48 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 17:15:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Holy Mulligan \n2:Activate Holy Mulligan  \n3:Refill holder4 Slot"} 
 Player 2 17:15:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Holy Mulligan \n2:Activate Holy Mulligan  \n3:Refill holder4 Slot"} 
 Player 2 17:15:51 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[325,326]} 
 Player 2 17:15:51 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 17:15:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Holy Mulligan \n2:Activate Holy Mulligan "} 
 Player 2 17:15:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Holy Mulligan \n2:Activate Holy Mulligan "} 
 Player 2 17:15:54 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[325,326]} 
 Player 2 17:15:54 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 17:15:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Holy Mulligan"} 
 Player 2 17:16:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Get Holy Mulligan<Monster>'s Reward \n2:[object Object] Is Going To Be Killed by Lilith"} 
 Player 2 17:16:01 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[325,326]} 
 Player 2 17:16:01 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 17:16:01 $STACK_EMPTIED:  

 {"playerId":1} 
 Player 2 17:16:02 $MOVE_CARD_END:  

 {"moveIndex":8,"cardId":276,"flipIfFlipped":true,"playerId":1} 
 Player 2 17:16:02 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 17:16:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 Slot"} 
 Player 2 17:16:05 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[325,326]} 
 Player 2 17:16:05 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 17:16:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 Slot"} 
 Player 2 17:16:08 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[325,326]} 
 Player 2 17:16:08 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 17:16:13 $STACK_EMPTIED:  

 {"playerId":1} 
 Player 2 17:16:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 17:16:13 $NEXT_STACK_ID:  
 Player 2 17:16:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 
 Player 2 17:16:13 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":11,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 
 Player 2 17:16:13 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":11,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 
 Player 2 17:16:13 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 17:16:13 $SHOW_STACK_EFFECT:  

 {"effectId":11} 
 Player 2 17:16:13 $CLEAR_SE_VIS:  
 Player 2 17:16:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":83,"_text":"Add StartTurnLoot 11 "}} 
 Player 2 17:16:16 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 17:16:16 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":11,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 
 Player 2 17:16:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":84,"_text":"Response Adding StartTurnLoot 11"},"childOfId":83} 
 Player 2 17:16:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":85,"_text":"Wait For Response From Player 2 "},"childOfId":83} 
 Player 2 17:16:16 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 17:16:16 $ACTION_MASSAGE_REMOVE:  

 {"id":85} 
 Player 2 17:16:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":86,"_text":"Wait For Response From Player 1 "},"childOfId":83} 
 Player 2 17:16:16 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 17:16:16 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 17:16:17 $ACTION_MASSAGE_REMOVE:  

 {"id":86} 
 Player 2 17:16:17 $ACTION_MASSAGE_REMOVE:  

 {"id":84} 
 Player 2 17:16:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":87,"_text":"Resolve StartTurnLoot 11 "}} 
 Player 2 17:16:17 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":11,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 
 Player 2 17:16:17 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 17:16:17 $MOVE_CARD:  

 {"moveIndex":9,"cardId":91,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 17:16:17 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":91} 
 Player 2 17:16:17 $FLIP_CARD:  

 {"cardId":91} 
 Player 2 17:16:17 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":91} 
 Player 2 17:16:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Has Drawen Loot For Start Turn"} 
 Player 2 17:16:17 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":11,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 
 Player 2 17:16:17 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":11} 
 Player 2 17:16:17 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 17:16:17 $SHOW_STACK_EFFECT:  

 {"effectId":11} 
 Player 2 17:16:20 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":11} 
 Player 2 17:16:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":88,"_text":"Remove After Resolve StartTurnLoot 11  "}} 
 Player 2 17:16:20 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 17:16:20 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":11,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 
 Player 2 17:16:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":89,"_text":"Response Remove After Resolve StartTurnLoot 11"},"childOfId":88} 
 Player 2 17:16:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":90,"_text":"Wait For Response From Player 1 "},"childOfId":88} 
 Player 2 17:16:20 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 17:16:20 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 17:16:20 $ACTION_MASSAGE_REMOVE:  

 {"id":90} 
 Player 2 17:16:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":91,"_text":"Wait For Response From Player 2 "},"childOfId":88} 
 Player 2 17:16:20 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 17:16:21 $ACTION_MASSAGE_REMOVE:  

 {"id":91} 
 Player 2 17:16:21 $ACTION_MASSAGE_REMOVE:  

 {"id":89} 
 Player 2 17:16:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":92,"_text":"Stack Was Emptied "}} 
 Player 2 17:16:21 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 17:16:21 $CLEAR_SE_VIS:  
 Player 2 17:16:22 $NEXT_STACK_ID:  
 Player 2 17:16:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 declared attack on Black Bony"} 
 Player 2 17:16:22 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":12,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":225,"stackEffectType":4}} 
 Player 2 17:16:22 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":12,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":225,"stackEffectType":4}} 
 Player 2 17:16:22 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 17:16:22 $SHOW_STACK_EFFECT:  

 {"effectId":12} 
 Player 2 17:16:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":93,"_text":"Add DeclareAttack 12 "}} 
 Player 2 17:16:25 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 17:16:25 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":12,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":225,"stackEffectType":4}} 
 Player 2 17:16:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":94,"_text":"Response Adding DeclareAttack 12"},"childOfId":93} 
 Player 2 17:16:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":95,"_text":"Wait For Response From Player 2 "},"childOfId":93} 
 Player 2 17:16:25 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 17:16:25 $ACTION_MASSAGE_REMOVE:  

 {"id":95} 
 Player 2 17:16:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":96,"_text":"Wait For Response From Player 1 "},"childOfId":93} 
 Player 2 17:16:25 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 17:16:25 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 17:16:25 $ACTION_MASSAGE_REMOVE:  

 {"id":96} 
 Player 2 17:16:25 $ACTION_MASSAGE_REMOVE:  

 {"id":94} 
 Player 2 17:16:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":97,"_text":"Resolve DeclareAttack 12 "}} 
 Player 2 17:16:25 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":12,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":225,"stackEffectType":4}} 
 Player 2 17:16:26 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":225,"particleType":5} 
 Player 2 17:16:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Has Entered Battle with Black Bony"} 
 Player 2 17:16:26 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":3,"originStackId":12},"isAfterActivation":true,"index":3} 
 Player 2 17:16:26 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":12,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":225,"stackEffectType":4}} 
 Player 2 17:16:26 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":12} 
 Player 2 17:16:26 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 17:16:26 $SHOW_STACK_EFFECT:  

 {"effectId":12} 
 Player 2 17:16:28 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":12} 
 Player 2 17:16:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":98,"_text":"Remove After Resolve DeclareAttack 12  "}} 
 Player 2 17:16:28 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 17:16:29 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":12,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":225,"stackEffectType":4}} 
 Player 2 17:16:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":99,"_text":"Response Remove After Resolve DeclareAttack 12"},"childOfId":98} 
 Player 2 17:16:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":100,"_text":"Wait For Response From Player 1 "},"childOfId":98} 
 Player 2 17:16:29 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 17:16:29 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 17:16:29 $ACTION_MASSAGE_REMOVE:  

 {"id":100} 
 Player 2 17:16:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":101,"_text":"Wait For Response From Player 2 "},"childOfId":98} 
 Player 2 17:16:29 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 17:16:29 $ACTION_MASSAGE_REMOVE:  

 {"id":101} 
 Player 2 17:16:29 $ACTION_MASSAGE_REMOVE:  

 {"id":99} 
 Player 2 17:16:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":102,"_text":"Stack Was Emptied "}} 
 Player 2 17:16:29 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 17:16:29 $CLEAR_SE_VIS:  
 Player 2 17:16:29 $NEXT_STACK_ID:  
 Player 2 17:16:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Black Bony<Monster>"} 
 Player 2 17:16:29 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":13,"creatorCardId":325,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":225}} 
 Player 2 17:16:29 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":13,"creatorCardId":325,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":225}} 
 Player 2 17:16:29 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 17:16:29 $SHOW_STACK_EFFECT:  

 {"effectId":13} 
 Player 2 17:16:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":103,"_text":"Add AttackRoll 13 "}} 
 Player 2 17:16:32 $ROLL_DICE:  

 {"playerId":2}