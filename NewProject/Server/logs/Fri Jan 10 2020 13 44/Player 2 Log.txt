Start Log 
 Player 2 13:44:34 $MOVE_TO_TABLE:  
 Player 2 13:44:42 $FINISH_LOAD:  

 {"id":2,"turnPlayerId":2} 
 Player 2 13:44:42 $ASSIGN_CHAR_TO_PLAYER:  

 {"playerId":1,"charCardId":259,"itemCardId":260} 
 Player 2 13:44:42 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":276}],"result":true,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 13:44:42 $ASSIGN_CHAR_TO_PLAYER:  

 {"playerId":2,"charCardId":275,"itemCardId":276} 
 Player 2 13:44:42 $DECK_ARRAGMENT:  

 {"deckType":1,"arrangement":[57,124,31,15,33,94,40,67,43,83,70,89,18,17,63,99,35,141,44,25,126,46,36,122,110,84,34,114,54,62,11,131,123,32,116,65,24,113,49,92,132,93,81,71,136,9,72,112,138,143,30,117,95,100,119,13,120,75,78,104,56,133,48,98,53,69,73,96,55,41,130,140,29,121,68,91,135,14,85,109,12,76,97,79,19,22,23,80,64,60,134,103,59,26,105,61,74,47,102,90,8,129,16,45,139,118,21,82,111,88,58,66,52,108,27,125,77,127,142,87,106,128,7,101,51,20,39,50,86,137,42,37,115,28,10,38,107]} 
 Player 2 13:44:42 $DECK_ARRAGMENT:  

 {"deckType":2,"arrangement":[232,253,251,252,244,219,257,209,215,229,239,210,216,217,238,234,228,207,230,236,233,256,221,241,240,211,258,248,249,250,223,227,243,242,205,231,237,212,220,225,245,254,208,235,226,247,222,206,246,224,214,213,255,218]} 
 Player 2 13:44:42 $DECK_ARRAGMENT:  

 {"deckType":5,"arrangement":[146,156,183,161,184,200,191,175,176,148,195,154,165,153,179,159,168,180,190,198,192,199,160,173,185,169,193,151,152,201,197,163,164,167,150,187,172,182,155,147,158,171,170,188,196,157,202,194,174,149,166,162,178,186,189,177,181]} 
 Player 2 13:44:42 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 13:44:42 $FLIP_CARD:  

 {"cardId":181} 
 Player 2 13:44:42 $ADD_STORE_CARD:  

 {"cardId":181} 
 Player 2 13:44:42 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 13:44:43 $FLIP_CARD:  

 {"cardId":177} 
 Player 2 13:44:43 $ADD_STORE_CARD:  

 {"cardId":177} 
 Player 2 13:44:43 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 13:44:43 $DECK_ADD_TO_BOTTOM:  

 {"deckType":2,"cardId":218} 
 Player 2 13:44:43 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 13:44:43 $DECK_ADD_TO_BOTTOM:  

 {"deckType":2,"cardId":255} 
 Player 2 13:44:43 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 13:44:43 $FLIP_CARD:  

 {"cardId":213} 
 Player 2 13:44:43 $ADD_MONSTER:  

 {"monsterPlaceId":1,"monsterId":213} 
 Player 2 13:44:43 $NEW_MONSTER_ON_PLACE:  

 {"cardId":213,"monsterPlaceId":1} 
 Player 2 13:44:43 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 13:44:43 $FLIP_CARD:  

 {"cardId":214} 
 Player 2 13:44:43 $ADD_MONSTER:  

 {"monsterPlaceId":2,"monsterId":214} 
 Player 2 13:44:43 $NEW_MONSTER_ON_PLACE:  

 {"cardId":214,"monsterPlaceId":2} 
 Player 2 13:44:43 $SET_MONEY:  

 {"playerId":1,"numOfCoins":3} 
 Player 2 13:44:43 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":259,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 2 13:44:43 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 13:44:43 $MOVE_CARD:  

 {"moveIndex":1,"cardId":107,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 13:44:43 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":107} 
 Player 2 13:44:44 $FLIP_CARD:  

 {"cardId":107} 
 Player 2 13:44:44 $FLIP_CARD:  

 {"cardId":107} 
 Player 2 13:44:44 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":107} 
 Player 2 13:44:44 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 13:44:44 $MOVE_CARD:  

 {"moveIndex":2,"cardId":38,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 13:44:44 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":38} 
 Player 2 13:44:44 $FLIP_CARD:  

 {"cardId":38} 
 Player 2 13:44:44 $FLIP_CARD:  

 {"cardId":38} 
 Player 2 13:44:44 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":38} 
 Player 2 13:44:44 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 13:44:44 $MOVE_CARD:  

 {"moveIndex":3,"cardId":10,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 13:44:44 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":10} 
 Player 2 13:44:45 $FLIP_CARD:  

 {"cardId":10} 
 Player 2 13:44:45 $FLIP_CARD:  

 {"cardId":10} 
 Player 2 13:44:45 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":10} 
 Player 2 13:44:45 $SET_MONEY:  

 {"playerId":2,"numOfCoins":3} 
 Player 2 13:44:45 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Player 2 13:44:45 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 13:44:45 $MOVE_CARD:  

 {"moveIndex":4,"cardId":28,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 13:44:45 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":28} 
 Player 2 13:44:45 $FLIP_CARD:  

 {"cardId":28} 
 Player 2 13:44:45 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":28} 
 Player 2 13:44:45 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 13:44:45 $MOVE_CARD:  

 {"moveIndex":5,"cardId":115,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 13:44:45 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":115} 
 Player 2 13:44:46 $FLIP_CARD:  

 {"cardId":115} 
 Player 2 13:44:46 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":115} 
 Player 2 13:44:46 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 13:44:46 $MOVE_CARD:  

 {"moveIndex":6,"cardId":37,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 13:44:46 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":37} 
 Player 2 13:44:46 $FLIP_CARD:  

 {"cardId":37} 
 Player 2 13:44:46 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":37} 
 Player 2 13:44:46 $GAME_HAS_STARTED:  
 Player 2 13:44:46 $SET_TURN:  

 {"playerId":2} 
 Player 2 13:44:46 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 13:44:46 $NEXT_STACK_ID:  
 Player 2 13:44:46 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 13:44:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 13:44:46 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":275,"turnPlayerCardId":275,"stackEffectType":13}} 
 Player 2 13:44:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 13:44:46 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":1,"creatorCardId":275,"turnPlayerCardId":275,"stackEffectType":13}} 
 Player 2 13:44:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 
 Player 2 13:44:46 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 13:44:46 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 2 13:44:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 13:44:46 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":275,"turnPlayerCardId":275,"stackEffectType":13}} 
 Player 2 13:44:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 
 Player 2 13:44:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 2 13:44:46 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 13:44:46 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 2 13:44:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 2 13:44:46 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 13:44:47 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 13:44:47 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 2 13:44:47 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 2 13:44:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 
 Player 2 13:44:47 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 13:44:47 $MOVE_CARD:  

 {"moveIndex":7,"cardId":42,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 13:44:47 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":42} 
 Player 2 13:44:47 $FLIP_CARD:  

 {"cardId":42} 
 Player 2 13:44:47 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":42} 
 Player 2 13:44:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 13:44:47 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":275,"turnPlayerCardId":275,"stackEffectType":13}} 
 Player 2 13:44:47 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 2 13:44:47 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 13:44:47 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":1,"creatorCardId":275,"turnPlayerCardId":275,"stackEffectType":13}} 
 Player 2 13:44:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 
 Player 2 13:44:47 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 13:44:47 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":275,"turnPlayerCardId":275,"stackEffectType":13}} 
 Player 2 13:44:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 
 Player 2 13:44:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Player 2 13:44:48 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 13:44:48 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 13:44:48 $ACTION_MASSAGE_REMOVE:  

 {"id":7} 
 Player 2 13:44:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Player 2 13:44:48 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 13:44:48 $ACTION_MASSAGE_REMOVE:  

 {"id":8} 
 Player 2 13:44:48 $ACTION_MASSAGE_REMOVE:  

 {"id":6} 
 Player 2 13:44:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":9,"_text":"Stack Was Emptied "}} 
 Player 2 13:44:48 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 13:44:48 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 2 13:44:48 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 2 13:44:48 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 2 13:44:48 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 2 13:44:48 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 2 13:44:48 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 2 13:44:48 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 2 13:44:48 $UPDATE_ACTIONS:  
 Player 2 13:44:49 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 2 13:44:50 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 2 13:44:53 $MOVE_CARD_END:  

 {"moveIndex":8,"cardId":184,"flipIfFlipped":true,"playerId":1} 
 Player 2 13:44:54 $MOVE_CARD_END:  

 {"moveIndex":9,"cardId":184,"flipIfFlipped":true,"playerId":1} 
 Player 2 13:44:54 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 13:44:54 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 13:44:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Polydactyly "} 
 Player 2 13:44:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Polydactyly "} 
 Player 2 13:44:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Polydactyly "} 
 Player 2 13:44:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Polydactyly "} 
 Player 2 13:44:54 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 13:44:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Polydactyly "} 
 Player 2 13:44:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Polydactyly "} 
 Player 2 13:44:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Polydactyly "} 
 Player 2 13:44:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Polydactyly "} 
 Player 2 13:44:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Polydactyly "} 
 Player 2 13:44:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Polydactyly "} 
 Player 2 13:44:57 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 13:45:04 $MOVE_CARD:  

 {"moveIndex":10,"cardId":131,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 
 Player 2 13:45:04 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":131} 
 Player 2 13:45:09 $MOVE_CARD:  

 {"moveIndex":11,"cardId":194,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 
 Player 2 13:45:10 $MOVE_CARD:  

 {"moveIndex":12,"cardId":194,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 
 Player 2 13:45:10 $MOVE_CARD:  

 {"moveIndex":13,"cardId":194,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 
 Player 2 13:45:10 $ADD_AN_ITEM:  

 {"playerId":2,"cardId":194,"isReward":true} 
 Player 2 13:45:10 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":194}],"result":true,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 
 Player 2 13:45:37 $NEXT_STACK_ID:  
 Player 2 13:45:37 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 13:45:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil "} 
 Player 2 13:45:37 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":275,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 2 13:45:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil "} 
 Player 2 13:45:37 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":275,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 2 13:45:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":20,"_text":"Add PlayLootCardStackEffect 3 "}} 
 Player 2 13:45:37 $PLAYER_LOSE_LOOT:  

 {"playerId":2,"cardId":131} 
 Player 2 13:45:37 $MOVE_CARD:  

 {"moveIndex":14,"cardId":131,"placeID":277,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 13:45:37 $MOVE_CARD_TO_PILE:  

 {"type":7,"cardId":131} 
 Player 2 13:45:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil: ChainEffects"} 
 Player 2 13:45:40 $SHOW_DECISION:  

 {"startCardId":131,"endCardId":184} 
 Player 2 13:45:43 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 13:45:43 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 2 13:45:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil: ChainEffects"} 
 Player 2 13:45:43 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":275,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":2,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":131,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 13:45:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":21,"_text":"Response Adding PlayLootCardStackEffect 3"},"childOfId":20} 
 Player 2 13:45:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 
 Player 2 13:45:43 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 13:45:43 $ACTION_MASSAGE_REMOVE:  

 {"id":22} 
 Player 2 13:45:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 
 Player 2 13:45:43 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 13:45:43 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 13:45:43 $ACTION_MASSAGE_REMOVE:  

 {"id":23} 
 Player 2 13:45:43 $ACTION_MASSAGE_REMOVE:  

 {"id":21} 
 Player 2 13:45:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":24,"_text":"Resolve PlayLootCardStackEffect 3 "}} 
 Player 2 13:45:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil: ChainEffects"} 
 Player 2 13:45:44 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":131,"particleType":6} 
 Player 2 13:45:45 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":131,"particleType":6} 
 Player 2 13:45:45 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_LOSE_ITEM","args":[{"type":0,"number":194}],"result":null,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 
 Player 2 13:45:45 $MOVE_CARD:  

 {"moveIndex":15,"cardId":194,"placeID":280,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 13:45:46 $MOVE_CARD_TO_PILE:  

 {"type":5,"cardId":194} 
 Player 2 13:45:46 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_LOSE_ITEM","args":[{"type":0,"number":184}],"result":null,"preventMethod":false,"methodScopeId":259,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1} 
 Player 2 13:45:46 $NEXT_STACK_ID:  
 Player 2 13:45:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil: ChainEffects"} 
 Player 2 13:45:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil: ChainEffects \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 
 Player 2 13:45:46 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":259,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"effectToDo":{"effectName":"AddPlayLootOpportunity","cardEffectNum":1,"cardPlayerId":1,"cardId":184,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 13:45:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil: ChainEffects \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 
 Player 2 13:45:46 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":259,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"effectToDo":{"effectName":"AddPlayLootOpportunity","cardEffectNum":1,"cardPlayerId":1,"cardId":184,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 13:45:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":25,"_text":"Add ActivatePassiveEffect 4 "}} 
 Player 2 13:45:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil: ChainEffects \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 
 Player 2 13:45:46 $ACTION_MASSAGE_REMOVE:  

 {"id":25} 
 Player 2 13:45:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil: ChainEffects \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 
 Player 2 13:45:46 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":259,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"effectToDo":{"effectName":"AddPlayLootOpportunity","cardEffectNum":1,"cardPlayerId":1,"cardId":184,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 13:45:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":26,"_text":"Response Adding ActivatePassiveEffect 4"},"childOfId":25} 
 Player 2 13:45:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":27,"_text":"Wait For Response From Player 1 "},"childOfId":25} 
 Player 2 13:45:46 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 13:45:46 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 13:45:46 $ACTION_MASSAGE_REMOVE:  

 {"id":27} 
 Player 2 13:45:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":25} 
 Player 2 13:45:47 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 13:45:47 $ACTION_MASSAGE_REMOVE:  

 {"id":28} 
 Player 2 13:45:47 $ACTION_MASSAGE_REMOVE:  

 {"id":26} 
 Player 2 13:45:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":29,"_text":"Resolve ActivatePassiveEffect 4 "}} 
 Player 2 13:45:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil: ChainEffects \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 
 Player 2 13:45:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil: ChainEffects \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 
 Player 2 13:45:47 $DO_STACK_EFFECT:  

 {"originPlayerId":2,"playerId":1,"currentStack":[{"entityId":3,"creatorCardId":275,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":2,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":131,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"effectCollectedData":null,"entityId":4,"creatorCardId":259,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"effectToDo":{"effectName":"AddPlayLootOpportunity","cardEffectNum":1,"cardPlayerId":1,"cardId":184,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}]} 
 Player 2 13:45:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil: ChainEffects \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 
 Player 2 13:45:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil: ChainEffects \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 
 Player 2 13:45:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil: ChainEffects \n2:Activate Polydactyly "} 
 Player 2 13:45:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil: ChainEffects \n2:Activate Polydactyly "} 
 Player 2 13:45:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil: ChainEffects \n2:Activate Polydactyly "} 
 Player 2 13:45:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil: ChainEffects \n2:Activate Polydactyly "} 
 Player 2 13:45:49 $ACTION_MASSAGE_REMOVE:  

 {"id":29} 
 Player 2 13:45:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 2 13:45:49 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":275,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":2,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":131,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 13:45:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 2 13:45:49 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":275,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":2,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":131,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 13:45:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 2 13:45:49 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":259,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 13:45:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 2 13:45:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 2 13:45:49 $REPLACE_STACK:  

 {"currentStack":[{"entityId":3,"creatorCardId":275,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":2,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":131,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"effectCollectedData":null,"entityId":4,"creatorCardId":259,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}]} 
 Player 2 13:45:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil "} 
 Player 2 13:45:49 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":259,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 13:45:49 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":30,"_text":"Remove After Resolve ActivatePassiveEffect 4  "}} 
 Player 2 13:45:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil "} 
 Player 2 13:45:49 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":259,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 13:45:49 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":31,"_text":"Response Remove After Resolve ActivatePassiveEffect 4"},"childOfId":30} 
 Player 2 13:45:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":32,"_text":"Wait For Response From Player 2 "},"childOfId":30} 
 Player 2 13:45:50 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 13:45:50 $ACTION_MASSAGE_REMOVE:  

 {"id":32} 
 Player 2 13:45:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":30} 
 Player 2 13:45:50 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 13:45:50 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 13:45:50 $ACTION_MASSAGE_REMOVE:  

 {"id":33} 
 Player 2 13:45:50 $ACTION_MASSAGE_REMOVE:  

 {"id":31} 
 Player 2 13:45:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":34,"_text":"Resolve PlayLootCardStackEffect 3 "}} 
 Player 2 13:45:50 $REMOVE_FROM_PASSIVE_MANAGER:  

 {"cardId":184} 
 Player 2 13:45:50 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_LOSE_ITEM","args":[{"type":0,"number":184}],"result":null,"preventMethod":false,"methodScopeId":259,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 13:45:50 $MOVE_CARD:  

 {"moveIndex":16,"cardId":184,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 
 Player 2 13:45:51 $ADD_AN_ITEM:  

 {"playerId":2,"cardId":184,"isReward":true} 
 Player 2 13:45:51 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":184}],"result":true,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 
 Player 2 13:45:51 $REMOVE_FROM_PILE:  

 {"cardId":131} 
 Player 2 13:45:51 $MOVE_CARD:  

 {"moveIndex":17,"cardId":131,"placeID":278,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 13:45:51 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":131} 
 Player 2 13:45:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil "} 
 Player 2 13:45:51 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":275,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 13:45:51 $ACTION_MASSAGE_REMOVE:  

 {"id":24} 
 Player 2 13:45:51 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 13:45:51 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":275,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":2,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":131,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 13:45:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":35,"_text":"Remove After Resolve PlayLootCardStackEffect 3  "}} 
 Player 2 13:45:51 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 13:45:51 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":275,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":2,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":131,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 13:45:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":36,"_text":"Response Remove After Resolve PlayLootCardStackEffect 3"},"childOfId":35} 
 Player 2 13:45:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":37,"_text":"Wait For Response From Player 1 "},"childOfId":35} 
 Player 2 13:45:51 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 13:45:51 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 13:45:52 $ACTION_MASSAGE_REMOVE:  

 {"id":37} 
 Player 2 13:45:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":38,"_text":"Wait For Response From Player 2 "},"childOfId":35} 
 Player 2 13:45:52 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 13:45:52 $ACTION_MASSAGE_REMOVE:  

 {"id":38} 
 Player 2 13:45:52 $ACTION_MASSAGE_REMOVE:  

 {"id":36} 
 Player 2 13:45:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":39,"_text":"Stack Was Emptied "}} 
 Player 2 13:45:52 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 13:45:52 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 2 13:45:52 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 2 13:45:52 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 2 13:45:52 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 2 13:45:52 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 2 13:45:52 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 2 13:45:52 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 2 13:45:52 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 2 13:45:52 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 2 13:45:52 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 2 13:45:52 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 2 13:45:52 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 2 13:45:52 $ACTION_MASSAGE_REMOVE:  

 {"id":24} 
 Player 2 13:45:52 $ACTION_MASSAGE_REMOVE:  

 {"id":25} 
 Player 2 13:45:52 $ACTION_MASSAGE_REMOVE:  

 {"id":29} 
 Player 2 13:45:52 $ACTION_MASSAGE_REMOVE:  

 {"id":30} 
 Player 2 13:45:52 $ACTION_MASSAGE_REMOVE:  

 {"id":34} 
 Player 2 13:45:52 $ACTION_MASSAGE_REMOVE:  

 {"id":35} 
 Player 2 13:45:52 $ACTION_MASSAGE_REMOVE:  

 {"id":39} 
 Player 2 13:45:52 $ACTION_MASSAGE_REMOVE:  

 {"id":30} 
 Player 2 13:45:53 $ACTION_MASSAGE_REMOVE:  

 {"id":39} 
 Player 2 13:45:54 $ACTION_MASSAGE_REMOVE:  

 {"id":35} 
 Player 2 13:50:42 $SHOW_DECISION:  

 {"startCardId":275,"endCardId":214} 
 Player 2 13:50:45 $NEXT_STACK_ID:  
 Player 2 13:50:45 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 13:50:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Conjoined Fatty"} 
 Player 2 13:50:45 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":5,"creatorCardId":275,"attackingPlayerCardId":275,"idOfCardBeingAttacked":214,"stackEffectType":4}} 
 Player 2 13:50:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Conjoined Fatty"} 
 Player 2 13:50:45 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":5,"creatorCardId":275,"attackingPlayerCardId":275,"idOfCardBeingAttacked":214,"stackEffectType":4}} 
 Player 2 13:50:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":40,"_text":"Add DeclareAttack 5 "}} 
 Player 2 13:50:45 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 13:50:45 $ACTION_MASSAGE_REMOVE:  

 {"id":40} 
 Player 2 13:50:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Conjoined Fatty"} 
 Player 2 13:50:45 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":5,"creatorCardId":275,"attackingPlayerCardId":275,"idOfCardBeingAttacked":214,"stackEffectType":4}} 
 Player 2 13:50:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":41,"_text":"Response Adding DeclareAttack 5"},"childOfId":40} 
 Player 2 13:50:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":42,"_text":"Wait For Response From Player 2 "},"childOfId":40} 
 Player 2 13:50:45 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 13:50:45 $ACTION_MASSAGE_REMOVE:  

 {"id":42} 
 Player 2 13:50:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":43,"_text":"Wait For Response From Player 1 "},"childOfId":40} 
 Player 2 13:50:45 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 13:50:45 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 13:50:45 $ACTION_MASSAGE_REMOVE:  

 {"id":43} 
 Player 2 13:50:45 $ACTION_MASSAGE_REMOVE:  

 {"id":41} 
 Player 2 13:50:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":44,"_text":"Resolve DeclareAttack 5 "}} 
 Player 2 13:50:45 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":214,"particleType":5} 
 Player 2 13:50:45 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":7,"originStackId":5},"isAfterActivation":true,"index":7} 
 Player 2 13:50:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Conjoined Fatty"} 
 Player 2 13:50:45 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":5,"creatorCardId":275,"attackingPlayerCardId":275,"idOfCardBeingAttacked":214,"stackEffectType":4}} 
 Player 2 13:50:45 $ACTION_MASSAGE_REMOVE:  

 {"id":44} 
 Player 2 13:50:45 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 13:50:46 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":5,"creatorCardId":275,"attackingPlayerCardId":275,"idOfCardBeingAttacked":214,"stackEffectType":4}} 
 Player 2 13:50:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":45,"_text":"Remove After Resolve DeclareAttack 5  "}} 
 Player 2 13:50:46 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 13:50:46 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":5,"creatorCardId":275,"attackingPlayerCardId":275,"idOfCardBeingAttacked":214,"stackEffectType":4}} 
 Player 2 13:50:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":46,"_text":"Response Remove After Resolve DeclareAttack 5"},"childOfId":45} 
 Player 2 13:50:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":47,"_text":"Wait For Response From Player 1 "},"childOfId":45} 
 Player 2 13:50:46 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 13:50:46 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 13:50:46 $ACTION_MASSAGE_REMOVE:  

 {"id":47} 
 Player 2 13:50:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":48,"_text":"Wait For Response From Player 2 "},"childOfId":45} 
 Player 2 13:50:46 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 13:50:46 $ACTION_MASSAGE_REMOVE:  

 {"id":48} 
 Player 2 13:50:46 $ACTION_MASSAGE_REMOVE:  

 {"id":46} 
 Player 2 13:50:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":49,"_text":"Stack Was Emptied "}} 
 Player 2 13:50:46 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 13:50:46 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 2 13:50:46 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 2 13:50:46 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 2 13:50:46 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 2 13:50:46 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 2 13:50:46 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 2 13:50:46 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 2 13:50:46 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 2 13:50:46 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 2 13:50:46 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 2 13:50:46 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 2 13:50:46 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 2 13:50:46 $ACTION_MASSAGE_REMOVE:  

 {"id":24} 
 Player 2 13:50:46 $ACTION_MASSAGE_REMOVE:  

 {"id":25} 
 Player 2 13:50:46 $ACTION_MASSAGE_REMOVE:  

 {"id":29} 
 Player 2 13:50:46 $ACTION_MASSAGE_REMOVE:  

 {"id":30} 
 Player 2 13:50:46 $ACTION_MASSAGE_REMOVE:  

 {"id":34} 
 Player 2 13:50:47 $ACTION_MASSAGE_REMOVE:  

 {"id":35} 
 Player 2 13:50:47 $ACTION_MASSAGE_REMOVE:  

 {"id":39} 
 Player 2 13:50:47 $ACTION_MASSAGE_REMOVE:  

 {"id":40} 
 Player 2 13:50:47 $ACTION_MASSAGE_REMOVE:  

 {"id":44} 
 Player 2 13:50:47 $ACTION_MASSAGE_REMOVE:  

 {"id":45} 
 Player 2 13:50:47 $ACTION_MASSAGE_REMOVE:  

 {"id":49} 
 Player 2 13:50:47 $ACTION_MASSAGE_REMOVE:  

 {"id":49} 
 Player 2 13:50:48 $ACTION_MASSAGE_REMOVE:  

 {"id":45} 
 Player 2 13:50:49 $NEXT_STACK_ID:  
 Player 2 13:50:49 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 13:50:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 13:50:49 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":6,"creatorCardId":275,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":214}} 
 Player 2 13:50:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 13:50:49 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":6,"creatorCardId":275,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":214}} 
 Player 2 13:50:49 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":50,"_text":"Add AttackRoll 6 "}} 
 Player 2 13:50:49 $ROLL_DICE:  

 {"playerId":2} 
 Player 2 13:50:50 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":6} 
 Player 2 13:50:50 $UPDATE_STACK_VIS:  

 {"stackId":6,"text":"player rolled 6 vs Conjoined Fatty<Monster>"} 
 Player 2 13:50:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Conjoined Fatty<Monster>"} 
 Player 2 13:50:50 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 13:50:50 $ACTION_MASSAGE_REMOVE:  

 {"id":50} 
 Player 2 13:50:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Conjoined Fatty<Monster>"} 
 Player 2 13:50:51 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":6,"creatorCardId":275,"numberRolled":6,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":214}} 
 Player 2 13:50:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":51,"_text":"Response Adding AttackRoll 6"},"childOfId":50} 
 Player 2 13:50:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":52,"_text":"Wait For Response From Player 2 "},"childOfId":50} 
 Player 2 13:50:51 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 13:50:54 $SHOW_DECISION:  

 {"startCardId":275,"endCardId":276} 
 Player 2 13:50:57 $NEXT_STACK_ID:  
 Player 2 13:50:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Conjoined Fatty<Monster>"} 
 Player 2 13:50:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 2 13:50:57 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":7,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 13:50:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 2 13:50:57 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 13:50:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":53,"_text":"Add ActivateItem 7 "}} 
 Player 2 13:50:59 $SHOW_DECISION:  

 {"startCardId":276,"endCardId":275} 
 Player 2 13:51:03 $USE_ITEM:  

 {"cardId":276} 
 Player 2 13:51:03 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 13:51:03 $ACTION_MASSAGE_REMOVE:  

 {"id":53} 
 Player 2 13:51:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 2 13:51:03 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":7,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 13:51:03 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":54,"_text":"Response Adding ActivateItem 7"},"childOfId":53} 
 Player 2 13:51:03 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":55,"_text":"Wait For Response From Player 2 "},"childOfId":53} 
 Player 2 13:51:03 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 13:51:05 $ACTION_MASSAGE_REMOVE:  

 {"id":55} 
 Player 2 13:51:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":56,"_text":"Wait For Response From Player 1 "},"childOfId":53} 
 Player 2 13:51:05 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 13:51:05 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 13:51:09 $ACTION_MASSAGE_REMOVE:  

 {"id":56} 
 Player 2 13:51:09 $ACTION_MASSAGE_REMOVE:  

 {"id":54} 
 Player 2 13:51:09 $ACTION_MASSAGE_REMOVE:  

 {"id":52} 
 Player 2 13:51:09 $ACTION_MASSAGE_REMOVE:  

 {"id":51} 
 Player 2 13:51:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 2 13:51:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 2 13:51:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 activated Azazel"} 
 Player 2 13:51:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 activated Azazel"} 
 Player 2 13:51:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 activated Azazel"} 
 Player 2 13:51:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 activated Azazel"} 
 Player 2 13:51:18 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 13:51:21 $MOVE_CARD_END:  

 {"moveIndex":18,"cardId":38,"flipIfFlipped":true,"playerId":1} 
 Player 2 13:51:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 activated Azazel"} 
 Player 2 13:51:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 activated Azazel"} 
 Player 2 13:51:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 3 Cents(0) "} 
 Player 2 13:51:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 3 Cents(0) "} 
 Player 2 13:51:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 3 Cents(0) "} 
 Player 2 13:51:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 3 Cents(0) "} 
 Player 2 13:51:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 3 Cents(0) "} 
 Player 2 13:51:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 3 Cents(0) "} 
 Player 2 13:51:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 3 Cents(0) "} 
 Player 2 13:51:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 3 Cents(0) "} 
 Player 2 13:51:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 3 Cents(0) "} 
 Player 2 13:51:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 3 Cents(0) "} 
 Player 2 13:51:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 3 Cents(0) "} 
 Player 2 13:51:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 3 Cents(0) "} 
 Player 2 13:51:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 3 Cents(0) "} 
 Player 2 13:51:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 3 Cents(0) "} 
 Player 2 13:51:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 3 Cents(0) "} 
 Player 2 13:51:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 3 Cents(0) "} 
 Player 2 13:51:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 3 Cents(0) "} 
 Player 2 13:51:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 3 Cents(0) "} 
 Player 2 13:51:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 3 Cents(0) "} 
 Player 2 13:51:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 3 Cents(0) "} 
 Player 2 13:51:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 3 Cents(0)  \n4:Player 1 activated Azazel"} 
 Player 2 13:51:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 3 Cents(0)  \n4:Player 1 activated Azazel"} 
 Player 2 13:51:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 3 Cents(0)  \n4:Player 1 activated Azazel"} 
 Player 2 13:51:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 3 Cents(0)  \n4:Player 1 activated Azazel"} 
 Player 2 13:51:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 3 Cents(0)  \n4:Player 1 activated Azazel"} 
 Player 2 13:51:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 3 Cents(0)  \n4:Player 1 activated Azazel"} 
 Player 2 13:51:22 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 13:51:25 $MOVE_CARD_END:  

 {"moveIndex":19,"cardId":38,"flipIfFlipped":true,"playerId":1} 
 Player 2 13:51:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 3 Cents(0) "} 
 Player 2 13:51:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 3 Cents(0) "} 
 Player 2 13:51:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 3 Cents(0) "} 
 Player 2 13:51:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 3 Cents(0) "} 
 Player 2 13:51:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 3 Cents(0) "} 
 Player 2 13:51:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 3 Cents(0) "} 
 Player 2 13:51:25 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 13:51:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 2 13:51:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 2 13:51:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 2 13:51:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 2 13:51:26 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":276,"particleType":6} 
 Player 2 13:51:28 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":276,"particleType":6} 
 Player 2 13:51:28 $REGISTER_ONE_TURN_PASSIVE_EFFECT:  

 {"cardId":276,"effectIndex":{"type":3,"index":0},"conditionData":[{"effectTargets":[275],"chainEffectsData":[],"methodArgs":[],"isPassive":false,"effectCard":276,"effectCardOwner":275,"effectCardPlayer":275}]} 
 Player 2 13:51:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 2 13:51:28 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":7,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 13:51:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 2 13:51:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 2 13:51:28 $FINISH_DO_STACK_EFFECT:  

 {"playerId":1,"newStack":[{"entityId":6,"creatorCardId":275,"numberRolled":6,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":214},{"entityId":7,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 
 Player 2 13:51:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 2 13:51:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 2 13:51:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 2 13:51:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 2 13:51:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 2 13:51:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 2 13:51:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 2 13:51:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 2 13:51:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 2 13:51:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 2 13:51:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 2 13:51:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 2 13:51:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 2 13:51:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 2 13:51:29 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 13:51:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 13:51:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 13:51:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":77,"_text":"Added 0 to original roll"}} 
 Player 2 13:51:29 $NEXT_STACK_ID:  
 Player 2 13:51:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 13:51:29 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 13:51:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 13:51:29 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":10,"creatorCardId":275,"entityToDoDamageCardId":214,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 13:51:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 13:51:29 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":6,"creatorCardId":275,"numberRolled":6,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":214}} 
 Player 2 13:51:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 13:51:29 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":10,"creatorCardId":275,"entityToDoDamageCardId":214,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 13:51:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 13:51:29 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":6,"creatorCardId":275,"numberRolled":6,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":214}} 
 Player 2 13:51:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 13:51:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 13:51:29 $REPLACE_STACK:  

 {"currentStack":[{"entityId":10,"creatorCardId":275,"entityToDoDamageCardId":214,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":6,"creatorCardId":275,"numberRolled":6,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":214}]} 
 Player 2 13:51:30 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":8,"originStackId":6},"isAfterActivation":true,"index":8} 
 Player 2 13:51:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 13:51:30 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":6,"creatorCardId":275,"numberRolled":6,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":214}} 
 Player 2 13:51:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 13:51:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 13:51:30 $FINISH_DO_STACK_EFFECT:  

 {"playerId":1,"newStack":[{"entityId":10,"creatorCardId":275,"entityToDoDamageCardId":214,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":6,"creatorCardId":275,"numberRolled":6,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":214}]} 
 Player 2 13:51:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 13:51:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 13:51:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 13:51:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 13:51:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 13:51:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 13:51:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 13:51:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 13:51:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 13:51:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 13:51:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 13:51:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 13:51:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 13:51:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 13:51:31 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 13:51:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost"} 
 Player 2 13:51:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost"} 
 Player 2 13:51:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty 2 combat damage to The Lost"} 
 Player 2 13:51:31 $UPDATE_STACK_VIS:  

 {"stackId":10,"text":"Conjoined Fatty will deal 2 combat damage to The Lost"} 
 Player 2 13:51:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty 2 combat damage to The Lost"} 
 Player 2 13:51:31 $PLAYER_GET_HIT:  

 {"playerId":2,"damage":2,"damageDealerId":214} 
 Player 2 13:51:31 $NEXT_STACK_ID:  
 Player 2 13:51:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty 2 combat damage to The Lost"} 
 Player 2 13:51:31 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 13:51:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty 2 combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 2 13:51:32 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":11,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":214}} 
 Player 2 13:51:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty 2 combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 2 13:51:32 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":10,"creatorCardId":275,"entityToDoDamageCardId":214,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 13:51:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty 2 combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 2 13:51:32 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":10,"creatorCardId":275,"entityToDoDamageCardId":214,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 13:51:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty 2 combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 2 13:51:32 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":11,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":214}} 
 Player 2 13:51:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty 2 combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 2 13:51:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty 2 combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 2 13:51:32 $REPLACE_STACK:  

 {"currentStack":[{"entityId":10,"creatorCardId":275,"entityToDoDamageCardId":214,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":11,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":214}]} 
 Player 2 13:51:32 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":214}],"result":null,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":9,"originStackId":-1},"isAfterActivation":true,"index":9} 
 Player 2 13:51:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty 2 combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 2 13:51:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty 2 combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 2 13:51:32 $FINISH_DO_STACK_EFFECT:  

 {"playerId":1,"newStack":[{"entityId":10,"creatorCardId":275,"entityToDoDamageCardId":214,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":11,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":214}]} 
 Player 2 13:51:33 $ACTION_MASSAGE_REMOVE:  

 {"id":77} 
 Player 2 13:51:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty 2 combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 2 13:51:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty 2 combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 2 13:51:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty 2 combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 2 13:51:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty 2 combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 2 13:51:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty 2 combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 2 13:51:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty 2 combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 2 13:51:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty 2 combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 2 13:51:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty 2 combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 2 13:51:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty 2 combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 2 13:51:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty 2 combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 2 13:51:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 2 13:51:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 2 13:51:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 2 13:51:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 2 13:51:33 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 13:51:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 13:51:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 13:51:34 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":214,"particleType":5} 
 Player 2 13:51:34 $CANCEL_ATTACK:  
 Player 2 13:51:34 $NEXT_STACK_ID:  
 Player 2 13:51:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 13:51:34 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_PAY_DEATH_PANELTIES","args":[],"result":null,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":2,"originStackId":12},"isAfterActivation":false,"index":2} 
 Player 2 13:51:34 $NEXT_STACK_ID:  
 Player 2 13:51:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 2 13:51:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 2 13:51:34 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":13,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":276,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":276,"effctType":3},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 13:51:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 2 13:51:34 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":13,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":276,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":276,"effctType":3},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 13:51:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":88,"_text":"Add ActivatePassiveEffect 13 "}} 
 Player 2 13:51:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 2 13:51:34 $ACTION_MASSAGE_REMOVE:  

 {"id":88} 
 Player 2 13:51:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 2 13:51:34 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":13,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":276,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":276,"effctType":3},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 13:51:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":89,"_text":"Response Adding ActivatePassiveEffect 13"},"childOfId":88} 
 Player 2 13:51:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":90,"_text":"Wait For Response From Player 1 "},"childOfId":88} 
 Player 2 13:51:34 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 13:51:34 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 13:51:34 $ACTION_MASSAGE_REMOVE:  

 {"id":90} 
 Player 2 13:51:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":91,"_text":"Wait For Response From Player 2 "},"childOfId":88} 
 Player 2 13:51:35 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 13:51:35 $ACTION_MASSAGE_REMOVE:  

 {"id":91} 
 Player 2 13:51:35 $ACTION_MASSAGE_REMOVE:  

 {"id":89} 
 Player 2 13:51:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":92,"_text":"Resolve ActivatePassiveEffect 13 "}} 
 Player 2 13:51:35 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":276,"particleType":6} 
 Player 2 13:51:36 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":276,"particleType":6} 
 Player 2 13:51:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 2 13:51:37 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":12,"creatorCardId":275,"playerToPayCardId":275,"stackEffectType":16}} 
 Player 2 13:51:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":93,"_text":"Fizzle PlayerDeathPenalties 12"}} 
 Player 2 13:51:37 $FIZZLE_STACK_EFFECT:  

 {"entityId":12} 
 Player 2 13:51:37 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_PAY_DEATH_PANELTIES","args":[],"result":null,"preventMethod":true,"methodScopeId":275,"scopeIsPlayer":true,"index":2,"originStackId":12},"isAfterActivation":false,"index":2} 
 Player 2 13:51:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 2 13:51:37 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":13,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":276,"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 13:51:37 $ACTION_MASSAGE_REMOVE:  

 {"id":92} 
 Player 2 13:51:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 13:51:37 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":13,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":276,"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 13:51:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":94,"_text":"Remove After Resolve ActivatePassiveEffect 13  "}} 
 Player 2 13:51:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 13:51:37 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":13,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":276,"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 13:51:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":95,"_text":"Response Remove After Resolve ActivatePassiveEffect 13"},"childOfId":94} 
 Player 2 13:51:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":96,"_text":"Wait For Response From Player 2 "},"childOfId":94} 
 Player 2 13:51:37 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 13:51:37 $ACTION_MASSAGE_REMOVE:  

 {"id":96} 
 Player 2 13:51:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":97,"_text":"Wait For Response From Player 1 "},"childOfId":94} 
 Player 2 13:51:37 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 13:51:37 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 13:51:37 $ACTION_MASSAGE_REMOVE:  

 {"id":97} 
 Player 2 13:51:37 $ACTION_MASSAGE_REMOVE:  

 {"id":95} 
 Player 2 13:51:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":98,"_text":"Resolve PlayerDeath 11 "}} 
 Player 2 13:51:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 13:51:37 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":12,"creatorCardId":275,"playerToPayCardId":275,"stackEffectType":16}} 
 Player 2 13:51:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 13:51:37 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":11,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":214}} 
 Player 2 13:51:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 13:51:38 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":11,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":214}} 
 Player 2 13:51:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 13:51:38 $REPLACE_STACK:  

 {"currentStack":[{"entityId":11,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":214}]} 
 Player 2 13:51:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 13:51:38 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":11,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":214}} 
 Player 2 13:51:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 13:51:38 $FINISH_DO_STACK_EFFECT:  

 {"playerId":1,"newStack":[{"entityId":11,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":214}]} 
 Player 2 13:51:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 13:51:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 13:51:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 13:51:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 13:51:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 13:51:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 13:51:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 13:51:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 13:51:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 13:51:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 13:51:39 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 13:51:40 $ACTION_MASSAGE_REMOVE:  

 {"id":93} 
 Player 2 13:51:40 $ACTION_MASSAGE_REMOVE:  

 {"id":94} 
 Player 2 14:03:16 $MATCH: 