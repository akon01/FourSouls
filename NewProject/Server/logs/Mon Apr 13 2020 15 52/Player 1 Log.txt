Start Log 
 Player 1 15:52:24 $START_GAME:  
 Player 1 15:52:24 $MOVE_TO_TABLE:  
 Player 1 15:52:35 $FINISH_LOAD:  

 {"id":1,"turnPlayerId":2} 
 Player 1 15:52:37 $ASSIGN_CHAR_TO_PLAYER:  

 {"playerId":1,"charCardId":323,"itemCardId":324} 
 Player 1 15:52:37 $SET_CHAR_END:  

 {"playerId":2} 
 Player 1 15:52:39 $MOVE_CARD_END:  

 {"moveIndex":1,"cardId":61,"flipIfFlipped":false,"playerId":2} 
 Player 1 15:52:40 $MOVE_CARD_END:  

 {"moveIndex":2,"cardId":24,"flipIfFlipped":false,"playerId":2} 
 Player 1 15:52:40 $MOVE_CARD_END:  

 {"moveIndex":3,"cardId":47,"flipIfFlipped":false,"playerId":2} 
 Player 1 15:52:41 $MOVE_CARD_END:  

 {"moveIndex":4,"cardId":128,"flipIfFlipped":false,"playerId":2} 
 Player 1 15:52:41 $MOVE_CARD_END:  

 {"moveIndex":5,"cardId":20,"flipIfFlipped":false,"playerId":2} 
 Player 1 15:52:42 $MOVE_CARD_END:  

 {"moveIndex":6,"cardId":104,"flipIfFlipped":false,"playerId":2} 
 Player 1 15:52:42 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 15:52:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 15:52:45 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[323,324]} 
 Player 1 15:52:45 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 15:52:45 $MOVE_CARD_END:  

 {"moveIndex":7,"cardId":36,"flipIfFlipped":false,"playerId":2} 
 Player 1 15:52:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 15:52:49 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[323,324]} 
 Player 1 15:52:49 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 15:53:10 $STACK_EMPTIED:  

 {"playerId":2} 
 Player 1 15:53:10 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 15:53:10 $NEXT_STACK_ID:  
 Player 1 15:53:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 15:53:10 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13}} 
 Player 1 15:53:10 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":2,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13}} 
 Player 1 15:53:10 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 15:53:10 $SHOW_STACK_EFFECT:  

 {"effectId":2} 
 Player 1 15:53:10 $CLEAR_SE_VIS:  
 Player 1 15:53:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":10,"_text":"Add StartTurnLoot 2 "}} 
 Player 1 15:53:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 15:53:13 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13}} 
 Player 1 15:53:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":11,"_text":"Response Adding StartTurnLoot 2"},"childOfId":10} 
 Player 1 15:53:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 
 Player 1 15:53:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 15:53:13 $ACTION_MASSAGE_REMOVE:  

 {"id":12} 
 Player 1 15:53:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 
 Player 1 15:53:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 15:53:13 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 15:53:13 $ACTION_MASSAGE_REMOVE:  

 {"id":13} 
 Player 1 15:53:13 $ACTION_MASSAGE_REMOVE:  

 {"id":11} 
 Player 1 15:53:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":14,"_text":"Resolve StartTurnLoot 2 "}} 
 Player 1 15:53:13 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13}} 
 Player 1 15:53:13 $DRAW_CARD:  

 {"deckType":1} 
 Player 1 15:53:13 $MOVE_CARD:  

 {"moveIndex":8,"cardId":79,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 1 15:53:14 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":79} 
 Player 1 15:53:14 $FLIP_CARD:  

 {"cardId":79} 
 Player 1 15:53:14 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":79} 
 Player 1 15:53:14 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13}} 
 Player 1 15:53:14 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":2} 
 Player 1 15:53:14 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 15:53:14 $SHOW_STACK_EFFECT:  

 {"effectId":2} 
 Player 1 15:53:17 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":2} 
 Player 1 15:53:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":15,"_text":"Remove After Resolve StartTurnLoot 2  "}} 
 Player 1 15:53:17 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 15:53:17 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13}} 
 Player 1 15:53:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":16,"_text":"Response Remove After Resolve StartTurnLoot 2"},"childOfId":15} 
 Player 1 15:53:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 
 Player 1 15:53:17 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 15:53:17 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 15:53:17 $ACTION_MASSAGE_REMOVE:  

 {"id":17} 
 Player 1 15:53:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 
 Player 1 15:53:17 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 15:53:17 $ACTION_MASSAGE_REMOVE:  

 {"id":18} 
 Player 1 15:53:17 $ACTION_MASSAGE_REMOVE:  

 {"id":16} 
 Player 1 15:53:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":19,"_text":"Stack Was Emptied "}} 
 Player 1 15:53:17 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 15:53:17 $CLEAR_SE_VIS:  
 Player 1 15:53:19 $NEXT_STACK_ID:  
 Player 1 15:53:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on War"} 
 Player 1 15:53:19 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":323,"attackingPlayerCardId":323,"idOfCardBeingAttacked":306,"stackEffectType":4}} 
 Player 1 15:53:19 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":323,"attackingPlayerCardId":323,"idOfCardBeingAttacked":306,"stackEffectType":4}} 
 Player 1 15:53:19 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 15:53:19 $SHOW_STACK_EFFECT:  

 {"effectId":3} 
 Player 1 15:53:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":20,"_text":"Add DeclareAttack 3 "}} 
 Player 1 15:53:22 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 15:53:22 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":323,"attackingPlayerCardId":323,"idOfCardBeingAttacked":306,"stackEffectType":4}} 
 Player 1 15:53:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":21,"_text":"Response Adding DeclareAttack 3"},"childOfId":20} 
 Player 1 15:53:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":22,"_text":"Wait For Response From Player 1 "},"childOfId":20} 
 Player 1 15:53:22 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 15:53:22 $ACTION_MASSAGE_REMOVE:  

 {"id":22} 
 Player 1 15:53:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":23,"_text":"Wait For Response From Player 2 "},"childOfId":20} 
 Player 1 15:53:22 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 15:53:22 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 15:53:23 $ACTION_MASSAGE_REMOVE:  

 {"id":23} 
 Player 1 15:53:23 $ACTION_MASSAGE_REMOVE:  

 {"id":21} 
 Player 1 15:53:23 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":24,"_text":"Resolve DeclareAttack 3 "}} 
 Player 1 15:53:23 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":323,"attackingPlayerCardId":323,"idOfCardBeingAttacked":306,"stackEffectType":4}} 
 Player 1 15:53:23 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":306,"particleType":5} 
 Player 1 15:53:23 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":323,"scopeIsPlayer":true,"index":1,"originStackId":3},"isAfterActivation":true,"index":1} 
 Player 1 15:53:23 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":323,"attackingPlayerCardId":323,"idOfCardBeingAttacked":306,"stackEffectType":4}} 
 Player 1 15:53:23 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":3} 
 Player 1 15:53:23 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 15:53:23 $SHOW_STACK_EFFECT:  

 {"effectId":3} 
 Player 1 15:53:26 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":3} 
 Player 1 15:53:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":25,"_text":"Remove After Resolve DeclareAttack 3  "}} 
 Player 1 15:53:26 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 15:53:26 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":323,"attackingPlayerCardId":323,"idOfCardBeingAttacked":306,"stackEffectType":4}} 
 Player 1 15:53:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":26,"_text":"Response Remove After Resolve DeclareAttack 3"},"childOfId":25} 
 Player 1 15:53:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":27,"_text":"Wait For Response From Player 2 "},"childOfId":25} 
 Player 1 15:53:26 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 15:53:26 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 15:53:26 $ACTION_MASSAGE_REMOVE:  

 {"id":27} 
 Player 1 15:53:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":28,"_text":"Wait For Response From Player 1 "},"childOfId":25} 
 Player 1 15:53:26 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 15:53:26 $ACTION_MASSAGE_REMOVE:  

 {"id":28} 
 Player 1 15:53:26 $ACTION_MASSAGE_REMOVE:  

 {"id":26} 
 Player 1 15:53:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":29,"_text":"Stack Was Emptied "}} 
 Player 1 15:53:26 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 15:53:26 $CLEAR_SE_VIS:  
 Player 1 15:53:28 $NEXT_STACK_ID:  
 Player 1 15:53:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against War<Monster>"} 
 Player 1 15:53:28 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":4,"creatorCardId":323,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":306}} 
 Player 1 15:53:28 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":4,"creatorCardId":323,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":306}} 
 Player 1 15:53:28 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 15:53:28 $SHOW_STACK_EFFECT:  

 {"effectId":4} 
 Player 1 15:53:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":30,"_text":"Add AttackRoll 4 "}} 
 Player 1 15:53:31 $ROLL_DICE:  

 {"playerId":1} 
 Player 1 15:53:33 $ROLL_DICE_ENDED:  

 {"playerId":1,"numberRolled":4} 
 Player 1 15:53:33 $UPDATE_STACK_VIS:  

 {"stackId":4,"text":"player rolled 4 vs War<Monster>"} 
 Player 1 15:53:33 $SHOW_DICE_ROLL:  

 {"stackId":4} 
 Player 1 15:53:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 4 vs War<Monster>"} 
 Player 1 15:53:36 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 15:53:36 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":4,"creatorCardId":323,"numberRolled":4,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":306}} 
 Player 1 15:53:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":31,"_text":"Response Adding AttackRoll 4"},"childOfId":30} 
 Player 1 15:53:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":32,"_text":"Wait For Response From Player 1 "},"childOfId":30} 
 Player 1 15:53:36 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 15:53:36 $ACTION_MASSAGE_REMOVE:  

 {"id":32} 
 Player 1 15:53:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":33,"_text":"Wait For Response From Player 2 "},"childOfId":30} 
 Player 1 15:53:36 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 15:53:36 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 15:53:36 $ACTION_MASSAGE_REMOVE:  

 {"id":33} 
 Player 1 15:53:36 $ACTION_MASSAGE_REMOVE:  

 {"id":31} 
 Player 1 15:53:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":34,"_text":"Resolve AttackRoll 4 "}} 
 Player 1 15:53:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 4 vs War<Monster>"} 
 Player 1 15:53:36 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":4,"creatorCardId":323,"numberRolled":4,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":306}} 
 Player 1 15:53:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":35,"_text":"Added 0 to original roll"}} 
 Player 1 15:53:37 $NEXT_STACK_ID:  
 Player 1 15:53:44 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 15:53:46 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 15:54:55 $SHOW_STACK_EFFECT:  

 {"effectId":5} 
 Player 1 15:54:58 $CLEAR_SE_VIS:  
 Player 1 15:54:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to War \n2:Player 1 rolled 4 vs War<Monster>"} 
 Player 1 15:54:58 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":5,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":306,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 
 Player 1 15:54:58 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":4,"creatorCardId":323,"numberRolled":4,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":306}} 
 Player 1 15:54:58 $REPLACE_STACK:  

 {"currentStack":[{"entityId":5,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":306,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":4,"creatorCardId":323,"numberRolled":4,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":306}]} 
 Player 1 15:54:58 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":323,"scopeIsPlayer":true,"index":2,"originStackId":4},"isAfterActivation":true,"index":2} 
 Player 1 15:54:58 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":4,"creatorCardId":323,"numberRolled":4,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":306}} 
 Player 1 15:54:58 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":4} 
 Player 1 15:54:58 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 15:55:37 $SHOW_STACK_EFFECT:  

 {"effectId":4} 
 Player 1 15:55:40 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":4} 
 Player 1 15:55:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":36,"_text":"Remove After Resolve AttackRoll 4  "}} 
 Player 1 15:55:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to War"} 
 Player 1 15:55:41 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":4,"creatorCardId":323,"numberRolled":4,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":306}} 
 Player 1 15:55:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":37,"_text":"Response Remove After Resolve AttackRoll 4"},"childOfId":36} 
 Player 1 15:55:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":38,"_text":"Wait For Response From Player 1 "},"childOfId":36} 
 Player 1 15:55:41 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 15:55:41 $ACTION_MASSAGE_REMOVE:  

 {"id":38} 
 Player 1 15:55:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":39,"_text":"Wait For Response From Player 2 "},"childOfId":36} 
 Player 1 15:55:41 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 15:55:41 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 15:55:41 $ACTION_MASSAGE_REMOVE:  

 {"id":39} 
 Player 1 15:55:41 $ACTION_MASSAGE_REMOVE:  

 {"id":37} 
 Player 1 15:55:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":40,"_text":"Resolve CombatDamage 5 "}} 
 Player 1 15:55:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to War"} 
 Player 1 15:55:41 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":5,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":306,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 
 Player 1 15:55:41 $UPDATE_STACK_VIS:  

 {"stackId":5,"text":"Samson will deal 1 combat damage to War"} 
 Player 1 15:55:41 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":323},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":306,"scopeIsPlayer":false,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1} 
 Player 1 15:55:41 $NEXT_STACK_ID:  
 Player 1 15:55:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to War \n2:Activate War effect GainStats<GainStats>"} 
 Player 1 15:55:41 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":6,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":306,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":1,"cardId":306,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 15:55:41 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":6,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":306,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":1,"cardId":306,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 15:55:41 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 15:55:47 $SHOW_STACK_EFFECT:  

 {"effectId":6} 
 Player 1 15:55:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":41,"_text":"Add ActivatePassiveEffect 6 "}} 
 Player 1 15:55:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to War \n2:Activate War effect GainStats<GainStats>"} 
 Player 1 15:55:50 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[306],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":306,"effectCardPlayer":306},"entityId":6,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":306,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":1,"cardId":306,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 15:55:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":42,"_text":"Response Adding ActivatePassiveEffect 6"},"childOfId":41} 
 Player 1 15:55:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":43,"_text":"Wait For Response From Player 2 "},"childOfId":41} 
 Player 1 15:55:50 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 15:55:50 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 15:55:50 $ACTION_MASSAGE_REMOVE:  

 {"id":43} 
 Player 1 15:55:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":44,"_text":"Wait For Response From Player 1 "},"childOfId":41} 
 Player 1 15:55:50 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 15:55:50 $ACTION_MASSAGE_REMOVE:  

 {"id":44} 
 Player 1 15:55:50 $ACTION_MASSAGE_REMOVE:  

 {"id":42} 
 Player 1 15:55:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":45,"_text":"Resolve ActivatePassiveEffect 6 "}} 
 Player 1 15:55:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to War \n2:Activate War effect GainStats<GainStats>"} 
 Player 1 15:55:50 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[306],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":306,"effectCardPlayer":306},"entityId":6,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":306,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":1,"cardId":306,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 15:55:50 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":306,"particleType":6} 
 Player 1 15:55:52 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":306,"particleType":6} 
 Player 1 15:55:52 $MONSTER_GAIN_DMG:  

 {"cardId":306,"DMGToGain":1} 
 Player 1 15:55:52 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":323},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":306,"scopeIsPlayer":false,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1} 
 Player 1 15:55:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to War \n2:Activate War effect GainStats<GainStats>"} 
 Player 1 15:55:52 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[306],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":306,"effectCardPlayer":306},"entityId":6,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":306,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 15:55:52 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":6} 
 Player 1 15:55:52 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 15:55:54 $SHOW_STACK_EFFECT:  

 {"effectId":6} 
 Player 1 15:55:57 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":6} 
 Player 1 15:55:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":46,"_text":"Remove After Resolve ActivatePassiveEffect 6  "}} 
 Player 1 15:55:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to War"} 
 Player 1 15:55:57 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[306],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":306,"effectCardPlayer":306},"entityId":6,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":306,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 15:55:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":47,"_text":"Response Remove After Resolve ActivatePassiveEffect 6"},"childOfId":46} 
 Player 1 15:55:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":48,"_text":"Wait For Response From Player 1 "},"childOfId":46} 
 Player 1 15:55:57 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 15:55:57 $ACTION_MASSAGE_REMOVE:  

 {"id":48} 
 Player 1 15:55:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":49,"_text":"Wait For Response From Player 2 "},"childOfId":46} 
 Player 1 15:55:57 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 15:55:57 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 15:55:57 $ACTION_MASSAGE_REMOVE:  

 {"id":49} 
 Player 1 15:55:57 $ACTION_MASSAGE_REMOVE:  

 {"id":47} 
 Player 1 15:55:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":50,"_text":"Resolve CombatDamage 5 "}} 
 Player 1 15:55:57 $MONSTER_GET_DAMAGED:  

 {"cardId":306,"hpLeft":2,"damageDealerId":323} 
 Player 1 15:55:57 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":323},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":306,"scopeIsPlayer":false,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 1 15:55:57 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":4},{"type":0,"number":323},{"type":0,"number":306}],"result":null,"preventMethod":false,"methodScopeId":323,"scopeIsPlayer":true,"index":3,"originStackId":5},"isAfterActivation":true,"index":3} 
 Player 1 15:55:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to War"} 
 Player 1 15:55:57 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":5,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":306,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 
 Player 1 15:55:57 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":5} 
 Player 1 15:55:57 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 15:56:02 $SHOW_STACK_EFFECT:  

 {"effectId":5} 
 Player 1 15:56:05 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":5} 
 Player 1 15:56:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":51,"_text":"Remove After Resolve CombatDamage 5  "}} 
 Player 1 15:56:05 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 15:56:05 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":5,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":306,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 
 Player 1 15:56:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":52,"_text":"Response Remove After Resolve CombatDamage 5"},"childOfId":51} 
 Player 1 15:56:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":53,"_text":"Wait For Response From Player 2 "},"childOfId":51} 
 Player 1 15:56:05 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 15:56:05 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 15:56:05 $ACTION_MASSAGE_REMOVE:  

 {"id":53} 
 Player 1 15:56:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":54,"_text":"Wait For Response From Player 1 "},"childOfId":51} 
 Player 1 15:56:05 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 15:56:05 $ACTION_MASSAGE_REMOVE:  

 {"id":54} 
 Player 1 15:56:05 $ACTION_MASSAGE_REMOVE:  

 {"id":52} 
 Player 1 15:56:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":55,"_text":"Stack Was Emptied "}} 
 Player 1 15:56:05 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 15:56:05 $CLEAR_SE_VIS:  
 Player 1 15:56:10 $NEXT_STACK_ID:  
 Player 1 15:56:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against War<Monster>"} 
 Player 1 15:56:10 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":7,"creatorCardId":323,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":306}} 
 Player 1 15:56:10 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":323,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":306}} 
 Player 1 15:56:10 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 15:56:12 $SHOW_STACK_EFFECT:  

 {"effectId":7} 
 Player 1 15:56:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":56,"_text":"Add AttackRoll 7 "}} 
 Player 1 15:56:15 $ROLL_DICE:  

 {"playerId":1} 
 Player 1 15:56:16 $ROLL_DICE_ENDED:  

 {"playerId":1,"numberRolled":5} 
 Player 1 15:56:16 $UPDATE_STACK_VIS:  

 {"stackId":7,"text":"player rolled 5 vs War<Monster>"} 
 Player 1 15:56:16 $SHOW_DICE_ROLL:  

 {"stackId":7} 
 Player 1 15:56:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 5 vs War<Monster>"} 
 Player 1 15:56:19 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 15:56:19 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":7,"creatorCardId":323,"numberRolled":5,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":306}} 
 Player 1 15:56:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":57,"_text":"Response Adding AttackRoll 7"},"childOfId":56} 
 Player 1 15:56:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":58,"_text":"Wait For Response From Player 1 "},"childOfId":56} 
 Player 1 15:56:19 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 15:56:19 $ACTION_MASSAGE_REMOVE:  

 {"id":58} 
 Player 1 15:56:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":59,"_text":"Wait For Response From Player 2 "},"childOfId":56} 
 Player 1 15:56:19 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 15:56:19 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 15:56:19 $ACTION_MASSAGE_REMOVE:  

 {"id":59} 
 Player 1 15:56:19 $ACTION_MASSAGE_REMOVE:  

 {"id":57} 
 Player 1 15:56:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":60,"_text":"Resolve AttackRoll 7 "}} 
 Player 1 15:56:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 5 vs War<Monster>"} 
 Player 1 15:56:19 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":7,"creatorCardId":323,"numberRolled":5,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":306}} 
 Player 1 15:56:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":61,"_text":"Added 0 to original roll"}} 
 Player 1 15:56:19 $NEXT_STACK_ID:  
 Player 1 15:56:30 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 15:56:31 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 15:57:36 $SHOW_STACK_EFFECT:  

 {"effectId":8} 
 Player 1 15:57:54 $CLEAR_SE_VIS:  
 Player 1 15:57:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to War \n2:Player 1 rolled 5 vs War<Monster>"} 
 Player 1 15:57:54 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":8,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":306,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5}} 
 Player 1 15:57:54 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":323,"numberRolled":5,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":306}} 
 Player 1 15:57:55 $REPLACE_STACK:  

 {"currentStack":[{"entityId":8,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":306,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5},{"entityId":7,"creatorCardId":323,"numberRolled":5,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":306}]} 
 Player 1 15:57:55 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":1},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":323,"scopeIsPlayer":true,"index":4,"originStackId":7},"isAfterActivation":true,"index":4} 
 Player 1 15:57:55 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":7,"creatorCardId":323,"numberRolled":5,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":306}} 
 Player 1 15:57:55 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":7} 
 Player 1 15:57:55 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 15:57:55 $SHOW_STACK_EFFECT:  

 {"effectId":7} 
 Player 1 15:57:58 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":7} 
 Player 1 15:57:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":62,"_text":"Remove After Resolve AttackRoll 7  "}} 
 Player 1 15:57:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to War"} 
 Player 1 15:57:58 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":7,"creatorCardId":323,"numberRolled":5,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":306}} 
 Player 1 15:57:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":63,"_text":"Response Remove After Resolve AttackRoll 7"},"childOfId":62} 
 Player 1 15:57:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":64,"_text":"Wait For Response From Player 1 "},"childOfId":62} 
 Player 1 15:57:58 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 15:57:58 $ACTION_MASSAGE_REMOVE:  

 {"id":64} 
 Player 1 15:57:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":65,"_text":"Wait For Response From Player 2 "},"childOfId":62} 
 Player 1 15:57:59 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 15:57:59 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 15:57:59 $ACTION_MASSAGE_REMOVE:  

 {"id":65} 
 Player 1 15:57:59 $ACTION_MASSAGE_REMOVE:  

 {"id":63} 
 Player 1 15:57:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":66,"_text":"Resolve CombatDamage 8 "}} 
 Player 1 15:57:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to War"} 
 Player 1 15:57:59 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":8,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":306,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5}} 
 Player 1 15:57:59 $UPDATE_STACK_VIS:  

 {"stackId":8,"text":"Samson will deal 1 combat damage to War"} 
 Player 1 15:57:59 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":323},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":306,"scopeIsPlayer":false,"index":2,"originStackId":-1},"isAfterActivation":false,"index":2} 
 Player 1 15:57:59 $NEXT_STACK_ID:  
 Player 1 15:57:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to War \n2:Activate War effect GainStats<GainStats>"} 
 Player 1 15:57:59 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":9,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":306,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":1,"cardId":306,"effctType":0},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 15:57:59 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":9,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":306,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":1,"cardId":306,"effctType":0},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 15:57:59 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 15:58:04 $SHOW_STACK_EFFECT:  

 {"effectId":9} 
 Player 1 15:58:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":67,"_text":"Add ActivatePassiveEffect 9 "}} 
 Player 1 15:58:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to War \n2:Activate War effect GainStats<GainStats>"} 
 Player 1 15:58:07 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[306],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":306,"effectCardPlayer":306},"entityId":9,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":306,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":1,"cardId":306,"effctType":0},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 15:58:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":68,"_text":"Response Adding ActivatePassiveEffect 9"},"childOfId":67} 
 Player 1 15:58:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":69,"_text":"Wait For Response From Player 2 "},"childOfId":67} 
 Player 1 15:58:07 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 15:58:07 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 15:58:07 $ACTION_MASSAGE_REMOVE:  

 {"id":69} 
 Player 1 15:58:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":70,"_text":"Wait For Response From Player 1 "},"childOfId":67} 
 Player 1 15:58:07 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 15:58:08 $ACTION_MASSAGE_REMOVE:  

 {"id":70} 
 Player 1 15:58:08 $ACTION_MASSAGE_REMOVE:  

 {"id":68} 
 Player 1 15:58:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":71,"_text":"Resolve ActivatePassiveEffect 9 "}} 
 Player 1 15:58:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to War \n2:Activate War effect GainStats<GainStats>"} 
 Player 1 15:58:08 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[306],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":306,"effectCardPlayer":306},"entityId":9,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":306,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":1,"cardId":306,"effctType":0},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 15:58:08 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":306,"particleType":6} 
 Player 1 15:58:09 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":306,"particleType":6} 
 Player 1 15:58:09 $MONSTER_GAIN_DMG:  

 {"cardId":306,"DMGToGain":1} 
 Player 1 15:58:09 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":323},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":306,"scopeIsPlayer":false,"index":2,"originStackId":-1},"isAfterActivation":false,"index":2} 
 Player 1 15:58:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to War \n2:Activate War effect GainStats<GainStats>"} 
 Player 1 15:58:10 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[306],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":306,"effectCardPlayer":306},"entityId":9,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":306,"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 15:58:10 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":9} 
 Player 1 15:58:10 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 15:58:10 $SHOW_STACK_EFFECT:  

 {"effectId":9} 
 Player 1 15:58:12 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":9} 
 Player 1 15:58:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":72,"_text":"Remove After Resolve ActivatePassiveEffect 9  "}} 
 Player 1 15:58:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to War"} 
 Player 1 15:58:13 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[306],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":306,"effectCardPlayer":306},"entityId":9,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":306,"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 15:58:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":73,"_text":"Response Remove After Resolve ActivatePassiveEffect 9"},"childOfId":72} 
 Player 1 15:58:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":74,"_text":"Wait For Response From Player 1 "},"childOfId":72} 
 Player 1 15:58:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 15:58:13 $ACTION_MASSAGE_REMOVE:  

 {"id":74} 
 Player 1 15:58:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":75,"_text":"Wait For Response From Player 2 "},"childOfId":72} 
 Player 1 15:58:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 15:58:13 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 15:58:13 $ACTION_MASSAGE_REMOVE:  

 {"id":75} 
 Player 1 15:58:13 $ACTION_MASSAGE_REMOVE:  

 {"id":73} 
 Player 1 15:58:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":76,"_text":"Resolve CombatDamage 8 "}} 
 Player 1 15:58:13 $MONSTER_GET_DAMAGED:  

 {"cardId":306,"hpLeft":1,"damageDealerId":323} 
 Player 1 15:58:13 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":323},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":306,"scopeIsPlayer":false,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 1 15:58:13 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":5},{"type":0,"number":323},{"type":0,"number":306}],"result":null,"preventMethod":false,"methodScopeId":323,"scopeIsPlayer":true,"index":5,"originStackId":8},"isAfterActivation":true,"index":5} 
 Player 1 15:58:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to War"} 
 Player 1 15:58:13 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":8,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":306,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5}} 
 Player 1 15:58:13 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":8} 
 Player 1 15:58:13 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 15:58:13 $SHOW_STACK_EFFECT:  

 {"effectId":8} 
 Player 1 15:58:16 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":8} 
 Player 1 15:58:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":77,"_text":"Remove After Resolve CombatDamage 8  "}} 
 Player 1 15:58:16 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 15:58:16 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":8,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":306,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5}} 
 Player 1 15:58:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":78,"_text":"Response Remove After Resolve CombatDamage 8"},"childOfId":77} 
 Player 1 15:58:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":79,"_text":"Wait For Response From Player 2 "},"childOfId":77} 
 Player 1 15:58:16 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 15:58:16 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 15:58:16 $ACTION_MASSAGE_REMOVE:  

 {"id":79} 
 Player 1 15:58:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":80,"_text":"Wait For Response From Player 1 "},"childOfId":77} 
 Player 1 15:58:16 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 15:58:16 $ACTION_MASSAGE_REMOVE:  

 {"id":80} 
 Player 1 15:58:16 $ACTION_MASSAGE_REMOVE:  

 {"id":78} 
 Player 1 15:58:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":81,"_text":"Stack Was Emptied "}} 
 Player 1 15:58:16 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 15:58:16 $CLEAR_SE_VIS:  
 Player 1 15:58:16 $NEXT_STACK_ID:  
 Player 1 15:58:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against War<Monster>"} 
 Player 1 15:58:16 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":10,"creatorCardId":323,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":306}} 
 Player 1 15:58:17 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":10,"creatorCardId":323,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":306}} 
 Player 1 15:58:17 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 15:58:17 $SHOW_STACK_EFFECT:  

 {"effectId":10} 
 Player 1 15:58:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":82,"_text":"Add AttackRoll 10 "}} 
 Player 1 15:58:19 $ROLL_DICE:  

 {"playerId":1} 
 Player 1 15:58:21 $ROLL_DICE_ENDED:  

 {"playerId":1,"numberRolled":3} 
 Player 1 15:58:21 $UPDATE_STACK_VIS:  

 {"stackId":10,"text":"player rolled 3 vs War<Monster>"} 
 Player 1 15:58:21 $SHOW_DICE_ROLL:  

 {"stackId":10} 
 Player 1 15:58:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 3 vs War<Monster>"} 
 Player 1 15:58:24 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 15:58:24 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":10,"creatorCardId":323,"numberRolled":3,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":306}} 
 Player 1 15:58:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":83,"_text":"Response Adding AttackRoll 10"},"childOfId":82} 
 Player 1 15:58:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":84,"_text":"Wait For Response From Player 1 "},"childOfId":82} 
 Player 1 15:58:24 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 15:58:24 $ACTION_MASSAGE_REMOVE:  

 {"id":84} 
 Player 1 15:58:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":85,"_text":"Wait For Response From Player 2 "},"childOfId":82} 
 Player 1 15:58:24 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 15:58:24 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 15:58:24 $ACTION_MASSAGE_REMOVE:  

 {"id":85} 
 Player 1 15:58:24 $ACTION_MASSAGE_REMOVE:  

 {"id":83} 
 Player 1 15:58:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":86,"_text":"Resolve AttackRoll 10 "}} 
 Player 1 15:58:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 3 vs War<Monster>"} 
 Player 1 15:58:25 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":10,"creatorCardId":323,"numberRolled":3,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":306}} 
 Player 1 15:58:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":87,"_text":"Added 0 to original roll"}} 
 Player 1 15:58:25 $NEXT_STACK_ID:  
 Player 1 15:58:25 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 15:58:25 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 15:58:25 $SHOW_STACK_EFFECT:  

 {"effectId":11} 
 Player 1 15:58:27 $CLEAR_SE_VIS:  
 Player 1 15:58:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to War \n2:Player 1 rolled 3 vs War<Monster>"} 
 Player 1 15:58:28 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":11,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":306,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 
 Player 1 15:58:28 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":10,"creatorCardId":323,"numberRolled":3,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":306}} 
 Player 1 15:58:28 $REPLACE_STACK:  

 {"currentStack":[{"entityId":11,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":306,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3},{"entityId":10,"creatorCardId":323,"numberRolled":3,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":306}]} 
 Player 1 15:58:28 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":3},{"type":2,"number":1},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":323,"scopeIsPlayer":true,"index":6,"originStackId":10},"isAfterActivation":true,"index":6} 
 Player 1 15:58:28 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":10,"creatorCardId":323,"numberRolled":3,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":306}} 
 Player 1 15:58:28 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":10} 
 Player 1 15:58:28 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 15:58:28 $SHOW_STACK_EFFECT:  

 {"effectId":10} 
 Player 1 15:58:30 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":10} 
 Player 1 15:58:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":88,"_text":"Remove After Resolve AttackRoll 10  "}} 
 Player 1 15:58:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to War"} 
 Player 1 15:58:31 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":10,"creatorCardId":323,"numberRolled":3,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":306}} 
 Player 1 15:58:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":89,"_text":"Response Remove After Resolve AttackRoll 10"},"childOfId":88} 
 Player 1 15:58:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":90,"_text":"Wait For Response From Player 1 "},"childOfId":88} 
 Player 1 15:58:31 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 15:58:31 $ACTION_MASSAGE_REMOVE:  

 {"id":90} 
 Player 1 15:58:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":91,"_text":"Wait For Response From Player 2 "},"childOfId":88} 
 Player 1 15:58:31 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 15:58:31 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 15:58:31 $ACTION_MASSAGE_REMOVE:  

 {"id":91} 
 Player 1 15:58:31 $ACTION_MASSAGE_REMOVE:  

 {"id":89} 
 Player 1 15:58:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":92,"_text":"Resolve CombatDamage 11 "}} 
 Player 1 15:58:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to War"} 
 Player 1 15:58:31 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":11,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":306,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 
 Player 1 15:58:31 $UPDATE_STACK_VIS:  

 {"stackId":11,"text":"Samson will deal 1 combat damage to War"} 
 Player 1 15:58:31 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":323},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":306,"scopeIsPlayer":false,"index":3,"originStackId":-1},"isAfterActivation":false,"index":3} 
 Player 1 15:58:31 $NEXT_STACK_ID:  
 Player 1 15:58:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to War \n2:Activate War effect GainStats<GainStats>"} 
 Player 1 15:58:31 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":12,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":306,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":1,"cardId":306,"effctType":0},"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 15:58:31 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":12,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":306,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":1,"cardId":306,"effctType":0},"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 15:58:31 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 15:58:32 $SHOW_STACK_EFFECT:  

 {"effectId":12} 
 Player 1 15:58:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":93,"_text":"Add ActivatePassiveEffect 12 "}} 
 Player 1 15:58:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to War \n2:Activate War effect GainStats<GainStats>"} 
 Player 1 15:58:34 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[306],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":306,"effectCardPlayer":306},"entityId":12,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":306,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":1,"cardId":306,"effctType":0},"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 15:58:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":94,"_text":"Response Adding ActivatePassiveEffect 12"},"childOfId":93} 
 Player 1 15:58:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":95,"_text":"Wait For Response From Player 2 "},"childOfId":93} 
 Player 1 15:58:34 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 15:58:34 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 15:58:34 $ACTION_MASSAGE_REMOVE:  

 {"id":95} 
 Player 1 15:58:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":96,"_text":"Wait For Response From Player 1 "},"childOfId":93} 
 Player 1 15:58:35 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 15:58:35 $ACTION_MASSAGE_REMOVE:  

 {"id":96} 
 Player 1 15:58:35 $ACTION_MASSAGE_REMOVE:  

 {"id":94} 
 Player 1 15:58:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":97,"_text":"Resolve ActivatePassiveEffect 12 "}} 
 Player 1 15:58:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to War \n2:Activate War effect GainStats<GainStats>"} 
 Player 1 15:58:35 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[306],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":306,"effectCardPlayer":306},"entityId":12,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":306,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":1,"cardId":306,"effctType":0},"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 15:58:35 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":306,"particleType":6} 
 Player 1 15:58:36 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":306,"particleType":6} 
 Player 1 15:58:37 $MONSTER_GAIN_DMG:  

 {"cardId":306,"DMGToGain":1} 
 Player 1 15:58:37 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":323},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":306,"scopeIsPlayer":false,"index":3,"originStackId":-1},"isAfterActivation":false,"index":3} 
 Player 1 15:58:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to War \n2:Activate War effect GainStats<GainStats>"} 
 Player 1 15:58:37 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[306],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":306,"effectCardPlayer":306},"entityId":12,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":306,"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 15:58:37 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":12} 
 Player 1 15:58:37 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 15:58:37 $SHOW_STACK_EFFECT:  

 {"effectId":12} 
 Player 1 15:58:39 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":12} 
 Player 1 15:58:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":98,"_text":"Remove After Resolve ActivatePassiveEffect 12  "}} 
 Player 1 15:58:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to War"} 
 Player 1 15:58:40 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[306],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":306,"effectCardPlayer":306},"entityId":12,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":306,"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 15:58:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":99,"_text":"Response Remove After Resolve ActivatePassiveEffect 12"},"childOfId":98} 
 Player 1 15:58:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":100,"_text":"Wait For Response From Player 1 "},"childOfId":98} 
 Player 1 15:58:40 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 15:58:40 $ACTION_MASSAGE_REMOVE:  

 {"id":100} 
 Player 1 15:58:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":101,"_text":"Wait For Response From Player 2 "},"childOfId":98} 
 Player 1 15:58:40 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 15:58:40 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 15:58:40 $ACTION_MASSAGE_REMOVE:  

 {"id":101} 
 Player 1 15:58:40 $ACTION_MASSAGE_REMOVE:  

 {"id":99} 
 Player 1 15:58:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":102,"_text":"Resolve CombatDamage 11 "}} 
 Player 1 15:58:40 $MONSTER_GET_DAMAGED:  

 {"cardId":306,"hpLeft":0,"damageDealerId":323} 
 Player 1 15:58:40 $NEXT_STACK_ID:  
 Player 1 15:58:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to War"} 
 Player 1 15:58:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to War \n2:[object Object] killed by Samson"} 
 Player 1 15:58:40 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":13,"creatorCardId":323,"monsterToDieCardId":306,"stackEffectType":5,"killerId":323}} 
 Player 1 15:58:40 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 15:58:40 $SHOW_STACK_EFFECT:  

 {"effectId":13} 
 Player 1 15:58:43 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 15:58:43 $CLEAR_SE_VIS:  
 Player 1 15:58:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to War \n2:[object Object] killed by Samson"} 
 Player 1 15:58:43 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":11,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":306,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 
 Player 1 15:58:43 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":13,"creatorCardId":323,"monsterToDieCardId":306,"stackEffectType":5,"killerId":323}} 
 Player 1 15:58:43 $REPLACE_STACK:  

 {"currentStack":[{"entityId":11,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":306,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3},{"entityId":13,"creatorCardId":323,"monsterToDieCardId":306,"stackEffectType":5,"killerId":323}]} 
 Player 1 15:58:43 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":323},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":306,"scopeIsPlayer":false,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Player 1 15:58:43 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":3},{"type":0,"number":323},{"type":0,"number":306}],"result":null,"preventMethod":false,"methodScopeId":323,"scopeIsPlayer":true,"index":7,"originStackId":11},"isAfterActivation":true,"index":7} 
 Player 1 15:58:43 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":11,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":306,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 
 Player 1 15:58:43 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":11} 
 Player 1 15:58:43 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 15:58:44 $SHOW_STACK_EFFECT:  

 {"effectId":11} 
 Player 1 15:58:46 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":11} 
 Player 1 15:58:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":103,"_text":"Remove After Resolve CombatDamage 11  "}} 
 Player 1 15:58:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 1 15:58:46 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":11,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":306,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 
 Player 1 15:58:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":104,"_text":"Response Remove After Resolve CombatDamage 11"},"childOfId":103} 
 Player 1 15:58:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":105,"_text":"Wait For Response From Player 1 "},"childOfId":103} 
 Player 1 15:58:46 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 15:58:46 $ACTION_MASSAGE_REMOVE:  

 {"id":105} 
 Player 1 15:58:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":106,"_text":"Wait For Response From Player 2 "},"childOfId":103} 
 Player 1 15:58:46 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 15:58:46 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 15:58:47 $ACTION_MASSAGE_REMOVE:  

 {"id":106} 
 Player 1 15:58:47 $ACTION_MASSAGE_REMOVE:  

 {"id":104} 
 Player 1 15:58:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":107,"_text":"Resolve MonsterDeath 13 "}} 
 Player 1 15:58:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 1 15:58:47 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":13,"creatorCardId":323,"monsterToDieCardId":306,"stackEffectType":5,"killerId":323}} 
 Player 1 15:58:47 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":306,"particleType":5} 
 Player 1 15:58:47 $CANCEL_ATTACK:  
 Player 1 15:58:47 $NEXT_STACK_ID:  
 Player 1 15:58:47 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 15:58:47 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 15:58:47 $SHOW_STACK_EFFECT:  

 {"effectId":14} 
 Player 1 15:58:50 $CLEAR_SE_VIS:  
 Player 1 15:58:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get War<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 1 15:58:50 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":14,"creatorCardId":323,"monsterCardWithRewardId":306,"playerCardIdToReward":323,"stackEffectType":7}} 
 Player 1 15:58:50 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":13,"creatorCardId":323,"monsterToDieCardId":306,"stackEffectType":5,"killerId":323}} 
 Player 1 15:58:50 $REPLACE_STACK:  

 {"currentStack":[{"entityId":14,"creatorCardId":323,"monsterCardWithRewardId":306,"playerCardIdToReward":323,"stackEffectType":7},{"entityId":13,"creatorCardId":323,"monsterToDieCardId":306,"stackEffectType":5,"killerId":323}]} 
 Player 1 15:58:50 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":13,"creatorCardId":323,"monsterToDieCardId":306,"stackEffectType":5,"killerId":323}} 
 Player 1 15:58:50 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":13} 
 Player 1 15:58:50 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 15:58:50 $SHOW_STACK_EFFECT:  

 {"effectId":13} 
 Player 1 15:58:53 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":13} 
 Player 1 15:58:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":108,"_text":"Remove After Resolve MonsterDeath 13  "}} 
 Player 1 15:58:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get War<Monster> reward"} 
 Player 1 15:58:53 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":13,"creatorCardId":323,"monsterToDieCardId":306,"stackEffectType":5,"killerId":323}} 
 Player 1 15:58:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":109,"_text":"Response Remove After Resolve MonsterDeath 13"},"childOfId":108} 
 Player 1 15:58:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":110,"_text":"Wait For Response From Player 1 "},"childOfId":108} 
 Player 1 15:58:53 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 15:58:53 $ACTION_MASSAGE_REMOVE:  

 {"id":110} 
 Player 1 15:58:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":111,"_text":"Wait For Response From Player 2 "},"childOfId":108} 
 Player 1 15:58:53 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 15:58:53 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 15:58:53 $ACTION_MASSAGE_REMOVE:  

 {"id":111} 
 Player 1 15:58:53 $ACTION_MASSAGE_REMOVE:  

 {"id":109} 
 Player 1 15:58:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":112,"_text":"Resolve MonsterRewardStackEffect 14 "}} 
 Player 1 15:58:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get War<Monster> reward"} 
 Player 1 15:58:54 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":14,"creatorCardId":323,"monsterCardWithRewardId":306,"playerCardIdToReward":323,"stackEffectType":7}} 
 Player 1 15:58:54 $SET_MONEY:  

 {"playerId":1,"numOfCoins":11} 
 Player 1 15:58:54 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":8}],"result":null,"preventMethod":false,"methodScopeId":323,"scopeIsPlayer":true,"index":8,"originStackId":-1},"isAfterActivation":true,"index":8} 
 Player 1 15:58:54 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":306,"scopeIsPlayer":false,"index":9,"originStackId":14},"isAfterActivation":true,"index":9} 
 Player 1 15:58:54 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 15:58:54 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":14} 
 Player 1 15:58:54 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":14} 
 Player 1 15:58:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":113,"_text":"Fizzle MonsterRewardStackEffect 14"}} 
 Player 1 15:58:54 $FIZZLE_STACK_EFFECT:  

 {"entityId":14} 
 Player 1 15:58:57 $CLEAR_SE_VIS:  
 Player 1 15:58:57 $LOG_ERROR:  

 "error while resolving stack effect 14" 
//////Error From Player 1////
 [object Object]
////// 
 Player 1 15:58:57 $SHOW_ANNOUNCEMENT:  

 {"text":"error while resolving stack effect 14"} 
 Player 1 15:58:57 $LOG_ERROR:  

 {"message":"\"Cannot read property '_playerId' of null\"","stack":"\"TypeError: Cannot read property '_playerId' of null\\n    at Function.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:230:32), <anonymous>:731:92)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\\n    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113284:71\\n    at new Promise (<anonymous>)\\n    at 486.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113264:14)\\n    at Function.CardManager.moveCardTo (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:230:32), <anonymous>:693:16)\\n    at Player.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:230:32), <anonymous>:1299:68)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\""} 
 Player 1 15:58:57 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":14} 
 Player 1 15:58:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":114,"_text":"Stack Was Emptied "}} 
 Player 1 15:58:57 $CLEAR_SE_VIS:  
 Player 1 15:58:57 $CLEAR_SE_VIS:  
 Player 1 15:59:03 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 15:59:03 $CLEAR_SE_VIS:  
 Player 1 15:59:03 $REPLACE_STACK:  

 {"currentStack":[]} 
 Player 1 15:59:03 $CLEAR_SE_VIS:  
 Player 1 15:59:03 $END_TURN:  
 Player 1 15:59:03 $SET_TURN:  

 {"playerId":2} 
 Player 1 15:59:03 $START_TURN:  

 {"playerId":2} 
 Player 1 15:59:04 $STACK_EMPTIED:  

 {"playerId":2} 
 Player 1 15:59:04 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 15:59:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 15:59:07 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[323,324]} 
 Player 1 15:59:07 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 15:59:08 $MOVE_CARD_END:  

 {"moveIndex":9,"cardId":103,"flipIfFlipped":false,"playerId":2} 
 Player 1 15:59:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 15:59:11 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[323,324]} 
 Player 1 15:59:11 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 15:59:17 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 15:59:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on War"} 
 Player 1 15:59:21 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[323,324]} 
 Player 1 15:59:21 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 15:59:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on War"} 
 Player 1 15:59:24 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[323,324]} 
 Player 1 15:59:24 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 15:59:26 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 15:59:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against War<Monster>"} 
 Player 1 15:59:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against War<Monster>"} 
 Player 1 15:59:35 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[323,324]} 
 Player 1 15:59:35 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 15:59:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against War<Monster>"} 
 Player 1 15:59:35 $LOG_ERROR:  

 "no stack effect to show" 
//////Error From Player 1////
 [object Object]
////// 
 Player 1 15:59:35 $SHOW_ANNOUNCEMENT:  

 {"text":"no stack effect to show"} 
 Player 1 15:59:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against War<Monster>"} 
 Player 1 15:59:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith combat damage to War \n2:Player 2 is rolling against War<Monster>"} 
 Player 1 15:59:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith combat damage to War \n2:Player 2 is rolling against War<Monster>"} 
 Player 1 15:59:42 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[323,324]} 
 Player 1 15:59:42 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 15:59:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith combat damage to War"} 
 Player 1 15:59:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith combat damage to War \n2:Activate War "} 
 Player 1 15:59:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith combat damage to War \n2:Activate War "} 
 Player 1 15:59:45 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[323,324]} 
 Player 1 15:59:45 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 15:59:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith combat damage to War \n2:Activate War "} 
 Player 1 15:59:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith combat damage to War \n2:Activate War "} 
 Player 1 15:59:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith combat damage to War \n2:Activate War "} 
 Player 1 15:59:52 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[323,324]} 
 Player 1 15:59:52 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 15:59:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith combat damage to War"} 
 Player 1 15:59:55 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[323,324]} 
 Player 1 15:59:55 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 16:00:00 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 16:00:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against War<Monster>"} 
 Player 1 16:00:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against War<Monster>"} 
 Player 1 16:00:08 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[323,324]} 
 Player 1 16:00:08 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 16:00:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against War<Monster>"}