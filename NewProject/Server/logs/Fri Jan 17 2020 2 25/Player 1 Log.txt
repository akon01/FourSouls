Start Log 
 Player 1 02:25:22 $START_GAME:  
 Player 1 02:25:22 $MOVE_TO_TABLE:  
 Player 1 02:25:30 $FINISH_LOAD:  

 {"id":1,"turnPlayerId":2} 
 Player 1 02:25:31 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":288}],"result":true,"preventMethod":false,"methodScopeId":287,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 1 02:25:31 $MOVE_CARD_END:  

 {"moveIndex":1,"cardId":122,"flipIfFlipped":false,"playerId":2} 
 Player 1 02:25:32 $MOVE_CARD_END:  

 {"moveIndex":2,"cardId":121,"flipIfFlipped":false,"playerId":2} 
 Player 1 02:25:32 $MOVE_CARD_END:  

 {"moveIndex":3,"cardId":14,"flipIfFlipped":false,"playerId":2} 
 Player 1 02:25:33 $MOVE_CARD_END:  

 {"moveIndex":4,"cardId":74,"flipIfFlipped":false,"playerId":2} 
 Player 1 02:25:33 $MOVE_CARD_END:  

 {"moveIndex":5,"cardId":135,"flipIfFlipped":false,"playerId":2} 
 Player 1 02:25:34 $MOVE_CARD_END:  

 {"moveIndex":6,"cardId":136,"flipIfFlipped":false,"playerId":2} 
 Player 1 02:25:34 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:25:34 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:25:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 02:25:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 02:25:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 02:25:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 02:25:35 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:25:35 $MOVE_CARD_END:  

 {"moveIndex":7,"cardId":71,"flipIfFlipped":false,"playerId":2} 
 Player 1 02:25:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 02:25:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 02:25:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 02:25:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 02:25:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 02:25:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 02:25:36 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:25:36 $MOVE_CARD:  

 {"moveIndex":8,"cardId":161,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Hand"} 
 Player 1 02:25:36 $REGISTER_PASSIVE_ITEM:  

 {"cardId":161} 
 Player 1 02:25:36 $MOVE_CARD:  

 {"moveIndex":9,"cardId":161,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 
 Player 1 02:25:36 $ADD_AN_ITEM:  

 {"playerId":1,"cardId":161,"isReward":true} 
 Player 1 02:25:36 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":161}],"result":true,"preventMethod":false,"methodScopeId":287,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 1 02:25:46 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:25:46 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:25:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Widow"} 
 Player 1 02:25:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Widow"} 
 Player 1 02:25:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Widow"} 
 Player 1 02:25:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Widow"} 
 Player 1 02:25:46 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:25:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Widow"} 
 Player 1 02:25:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Widow"} 
 Player 1 02:25:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Widow"} 
 Player 1 02:25:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Widow"} 
 Player 1 02:25:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Widow"} 
 Player 1 02:25:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Widow"} 
 Player 1 02:25:47 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:25:50 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:25:50 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:25:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster>"} 
 Player 1 02:25:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster>"} 
 Player 1 02:25:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster>"} 
 Player 1 02:25:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster>"} 
 Player 1 02:25:52 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:25:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster>"} 
 Player 1 02:25:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster>"} 
 Player 1 02:25:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:25:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:25:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:25:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:25:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:25:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:25:53 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[279],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":287,"effectCardPlayer":287},"entityId":4,"creatorCardId":287,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":161,"effectToDo":{"effectName":"LookAtPlayerHand","cardEffectNum":0,"cardPlayerId":1,"cardId":161,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 02:25:53 $END_PUT_ON_STACK:  

 {"playerId":2} 
 Player 1 02:25:53 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:25:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:25:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:25:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:25:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:25:53 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":161,"particleType":6} 
 Player 1 02:25:55 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":161,"particleType":6} 
 Player 1 02:26:11 $LOG_ERROR:  

 {"message":"\"Cannot read property 'loseLoot' of null\"","stack":"\"TypeError: Cannot read property 'loseLoot' of null\\n    at TakeLootFromPlayer.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardEffects/TakeLootFromPlayer.js:46:63)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\\n    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\\n    at new Promise (<anonymous>)\\n    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\\n    at TakeLootFromPlayer.doEffect (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardEffects/TakeLootFromPlayer.js:25:16)\\n    at LookAtPlayerHand.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardEffects/LookAtPlayerHand.js:116:52)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\""} 
 Player 1 02:26:12 $LOG_ERROR:  

 "error while resolving stack effect 4" 
//////Error From Player 1////
 [object Object]
////// 
 Player 1 02:26:12 $LOG_ERROR:  

 {"message":"\"Cannot read property 'methodArgs' of null\"","stack":"\"TypeError: Cannot read property 'methodArgs' of null\\n    at ActivatePassiveEffect.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/StackEffects/Activate%20Passive%20Effect.js:285:76)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\\n    at fulfilled (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89787:28)\""} 
 Player 1 02:26:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:26:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:26:12 $FINISH_DO_STACK_EFFECT:  

 {"playerId":2,"newStack":[{"entityId":3,"creatorCardId":279,"numberRolled":2,"rollingPlayerCardId":279,"stackEffectType":2,"attackedMonsterCardId":275},{"effectCollectedData":{"effectTargets":[279],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":287,"effectCardPlayer":287},"entityId":4,"creatorCardId":287,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":161,"effectToDo":{"effectName":"LookAtPlayerHand","cardEffectNum":0,"cardPlayerId":1,"cardId":161,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":{"type":2,"number":3}},{"type":2,"number":{"type":2,"number":2}},{"type":2,"number":{"type":2,"number":4}}],"result":null,"preventMethod":false,"methodScopeId":279,"scopeIsPlayer":false,"index":1},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}]} 
 Player 1 02:26:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:26:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:26:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:26:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:26:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:26:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:26:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:26:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:26:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:26:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:26:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:26:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:26:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:26:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:26:13 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:26:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster>"} 
 Player 1 02:26:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster>"} 
 Player 1 02:26:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Blue Baby"} 
 Player 1 02:26:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Blue Baby"} 
 Player 1 02:26:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Blue Baby"} 
 Player 1 02:26:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Blue Baby"} 
 Player 1 02:26:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Blue Baby"} 
 Player 1 02:26:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Blue Baby"} 
 Player 1 02:26:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Blue Baby"} 
 Player 1 02:26:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Blue Baby"} 
 Player 1 02:26:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Blue Baby"} 
 Player 1 02:26:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Blue Baby"} 
 Player 1 02:26:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Blue Baby \n2:Player 2 is rolling against Widow<Monster>"} 
 Player 1 02:26:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Blue Baby \n2:Player 2 is rolling against Widow<Monster>"} 
 Player 1 02:26:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Blue Baby \n2:Player 2 is rolling against Widow<Monster>"} 
 Player 1 02:26:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Blue Baby \n2:Player 2 is rolling against Widow<Monster>"} 
 Player 1 02:26:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Blue Baby \n2:Player 2 is rolling against Widow<Monster>"} 
 Player 1 02:26:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Blue Baby \n2:Player 2 is rolling against Widow<Monster>"} 
 Player 1 02:26:15 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:26:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Blue Baby"} 
 Player 1 02:26:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Blue Baby"} 
 Player 1 02:26:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Blue Baby"} 
 Player 1 02:26:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Blue Baby"} 
 Player 1 02:26:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Blue Baby"} 
 Player 1 02:26:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Blue Baby"} 
 Player 1 02:26:15 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false}