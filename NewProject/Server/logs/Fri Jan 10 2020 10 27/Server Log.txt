Start Log 

 Player 1 10:27:14 $MATCH:  

 Player 1 10:27:14 $START_GAME:  

 Player 1 10:27:14 $MOVE_TO_TABLE:  

 Player 2 10:27:14 $MOVE_TO_TABLE:  

 Player 1 10:27:22 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 10:27:22 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 2 10:27:22 $CHOOSE_FOR_EDEN:  
{"playerId":1,"originPlayerId":2} 

 Player 1 10:27:22 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[189,196,168,147,190,148,171,162,188,193,178,165,152,201,185,160,181,194,175,155,187,157,198,170,163,199,158,192,197,146,174,186,184,176,172,195,167,154,164,150,149,153,161,166,177,151,202,191,159,180,179,173,156,169,200,182,183]} 

 Player 1 10:27:32 $EDEN_CHOSEN:  
{"cardId":168,"playerId":2} 

 Player 2 10:27:32 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[189,196,147,190,148,171,162,188,193,178,165,152,201,185,160,181,194,175,155,187,157,198,170,163,199,158,192,197,146,174,186,184,176,172,195,167,154,164,150,149,153,161,166,177,151,202,191,159,180,179,173,156,169,200,182,183]} 

 Player 2 10:27:32 $FLIP_CARD:  
{"cardId":168} 

 Player 2 10:27:32 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":265,"itemCardId":168} 

 Player 2 10:27:32 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":260}],"result":true,"preventMethod":false,"methodScopeId":259,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 10:27:32 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":259,"itemCardId":260} 

 Player 2 10:27:32 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[137,131,81,58,141,60,129,17,121,118,87,80,136,57,14,18,122,20,25,95,114,90,98,106,77,85,128,101,39,49,105,53,99,102,9,111,34,120,55,115,22,75,96,30,69,134,63,79,24,27,138,26,88,112,86,108,94,133,51,73,139,97,127,7,10,93,46,109,117,100,29,83,38,40,132,125,41,124,142,59,21,103,91,130,36,11,23,43,89,71,107,119,64,65,19,56,45,66,70,35,84,31,28,44,143,82,15,42,48,113,61,32,76,12,104,52,8,72,110,62,16,78,54,67,74,50,33,135,68,47,116,126,92,140,123,13,37]} 

 Player 2 10:27:33 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[215,211,246,206,241,225,255,219,243,212,250,223,247,208,252,226,236,233,230,209,222,220,258,227,214,245,221,207,253,234,240,216,249,217,238,248,224,239,244,235,231,256,232,229,242,205,257,254,237,228,213,218,251,210]} 

 Player 2 10:27:33 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[183,187,164,146,149,184,150,152,173,188,163,180,147,185,175,156,160,162,201,195,194,153,158,179,197,190,186,178,200,151,157,155,198,174,154,199,193,171,159,196,161,172,176,170,177,167,148,182,189,191,181,202,169,165,192,166]} 

 Player 2 10:27:33 $DRAW_CARD:  
{"deckType":5} 

 Player 2 10:27:33 $FLIP_CARD:  
{"cardId":166} 

 Player 2 10:27:33 $ADD_STORE_CARD:  
{"cardId":166} 

 Player 2 10:27:33 $DRAW_CARD:  
{"deckType":5} 

 Player 2 10:27:33 $FLIP_CARD:  
{"cardId":192} 

 Player 2 10:27:33 $ADD_STORE_CARD:  
{"cardId":192} 

 Player 2 10:27:33 $DRAW_CARD:  
{"deckType":2} 

 Player 2 10:27:33 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":210} 

 Player 2 10:27:33 $DRAW_CARD:  
{"deckType":2} 

 Player 2 10:27:33 $FLIP_CARD:  
{"cardId":251} 

 Player 2 10:27:33 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":251} 

 Player 2 10:27:33 $NEW_MONSTER_ON_PLACE:  
{"cardId":251,"monsterPlaceId":1} 

 Player 2 10:27:33 $DRAW_CARD:  
{"deckType":2} 

 Player 2 10:27:33 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":218} 

 Player 2 10:27:33 $DRAW_CARD:  
{"deckType":2} 

 Player 2 10:27:33 $FLIP_CARD:  
{"cardId":213} 

 Player 2 10:27:33 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":213} 

 Player 2 10:27:33 $NEW_MONSTER_ON_PLACE:  
{"cardId":213,"monsterPlaceId":2} 

 Player 2 10:27:33 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 10:27:33 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":265,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 10:27:33 $DRAW_CARD:  
{"deckType":1} 

 Player 2 10:27:33 $MOVE_CARD:  
{"moveIndex":1,"cardId":37,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 10:27:33 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":168}],"result":true,"preventMethod":false,"methodScopeId":265,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 10:27:34 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":37,"flipIfFlipped":false,"playerId":2} 

 Player 2 10:27:34 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":37} 

 Player 2 10:27:34 $FLIP_CARD:  
{"cardId":37} 

 Player 2 10:27:34 $FLIP_CARD:  
{"cardId":37} 

 Player 2 10:27:34 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":37} 

 Player 2 10:27:34 $DRAW_CARD:  
{"deckType":1} 

 Player 2 10:27:34 $MOVE_CARD:  
{"moveIndex":2,"cardId":13,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 10:27:34 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":13,"flipIfFlipped":false,"playerId":2} 

 Player 2 10:27:34 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":13} 

 Player 2 10:27:34 $FLIP_CARD:  
{"cardId":13} 

 Player 2 10:27:34 $FLIP_CARD:  
{"cardId":13} 

 Player 2 10:27:34 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":13} 

 Player 2 10:27:34 $DRAW_CARD:  
{"deckType":1} 

 Player 2 10:27:34 $MOVE_CARD:  
{"moveIndex":3,"cardId":123,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 10:27:35 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":123,"flipIfFlipped":false,"playerId":2} 

 Player 2 10:27:35 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":123} 

 Player 2 10:27:35 $FLIP_CARD:  
{"cardId":123} 

 Player 2 10:27:35 $FLIP_CARD:  
{"cardId":123} 

 Player 2 10:27:35 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":123} 

 Player 2 10:27:35 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 10:27:35 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":259,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 10:27:35 $DRAW_CARD:  
{"deckType":1} 

 Player 2 10:27:35 $MOVE_CARD:  
{"moveIndex":4,"cardId":140,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 10:27:35 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":140,"flipIfFlipped":false,"playerId":2} 

 Player 2 10:27:35 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":140} 

 Player 2 10:27:35 $FLIP_CARD:  
{"cardId":140} 

 Player 2 10:27:35 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":140} 

 Player 2 10:27:35 $DRAW_CARD:  
{"deckType":1} 

 Player 2 10:27:35 $MOVE_CARD:  
{"moveIndex":5,"cardId":92,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 10:27:36 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":92,"flipIfFlipped":false,"playerId":2} 

 Player 2 10:27:36 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":92} 

 Player 2 10:27:36 $FLIP_CARD:  
{"cardId":92} 

 Player 2 10:27:36 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":92} 

 Player 2 10:27:36 $DRAW_CARD:  
{"deckType":1} 

 Player 2 10:27:36 $MOVE_CARD:  
{"moveIndex":6,"cardId":126,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 10:27:36 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":126,"flipIfFlipped":false,"playerId":2} 

 Player 2 10:27:36 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":126} 

 Player 2 10:27:36 $FLIP_CARD:  
{"cardId":126} 

 Player 2 10:27:36 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":126} 

 Player 2 10:27:36 $GAME_HAS_STARTED:  

 Player 2 10:27:36 $SET_TURN:  
{"playerId":2} 

 Player 2 10:27:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 10:27:36 $NEXT_STACK_ID:  

 Player 2 10:27:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 10:27:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 10:27:36 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":259,"turnPlayerCardId":259,"stackEffectType":13}} 

 Player 2 10:27:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 10:27:36 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":259,"turnPlayerCardId":259,"stackEffectType":13}} 

 Player 2 10:27:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 2 10:27:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 10:27:36 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 10:27:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 10:27:36 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":259,"turnPlayerCardId":259,"stackEffectType":13}} 

 Player 2 10:27:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 2 10:27:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 2 10:27:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 10:27:37 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 10:27:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 2 10:27:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 10:27:37 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 10:27:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 10:27:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 10:27:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 10:27:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 10:27:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 10:27:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 10:27:37 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 10:27:37 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 10:27:37 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 10:27:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 2 10:27:37 $DRAW_CARD:  
{"deckType":1} 

 Player 2 10:27:37 $MOVE_CARD:  
{"moveIndex":7,"cardId":116,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 10:27:37 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":116,"flipIfFlipped":false,"playerId":2} 

 Player 2 10:27:37 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":116} 

 Player 2 10:27:37 $FLIP_CARD:  
{"cardId":116} 

 Player 2 10:27:37 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":116} 

 Player 2 10:27:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 10:27:37 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":259,"turnPlayerCardId":259,"stackEffectType":13}} 

 Player 2 10:27:37 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 10:27:38 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 10:27:38 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":259,"turnPlayerCardId":259,"stackEffectType":13}} 

 Player 2 10:27:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 2 10:27:38 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 10:27:38 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":259,"turnPlayerCardId":259,"stackEffectType":13}} 

 Player 2 10:27:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 2 10:27:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 2 10:27:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 10:27:38 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 10:27:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 10:27:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 10:27:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 10:27:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 10:27:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 10:27:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 10:27:38 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 10:27:38 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 2 10:27:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 2 10:27:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 10:27:38 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 2 10:27:38 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 2 10:27:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 2 10:27:38 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 10:27:38 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 10:27:38 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 10:27:38 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 10:27:38 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 10:27:38 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 10:27:38 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 10:27:38 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 10:27:38 $UPDATE_ACTIONS:  

 Player 2 10:27:39 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 10:27:40 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 10:27:46 $MOVE_CARD:  
{"moveIndex":8,"cardId":184,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Hand"} 

 Player 2 10:27:46 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":184,"flipIfFlipped":true,"playerId":1} 

 Player 1 10:27:46 $REGISTER_PASSIVE_ITEM:  
{"cardId":184} 

 Player 1 10:27:46 $MOVE_CARD:  
{"moveIndex":9,"cardId":184,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 

 Player 2 10:27:46 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":184,"flipIfFlipped":true,"playerId":1} 

 Player 1 10:27:47 $ADD_AN_ITEM:  
{"playerId":1,"cardId":184,"isReward":true} 

 Player 1 10:27:47 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":184}],"result":true,"preventMethod":false,"methodScopeId":265,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 1 10:27:47 $NEXT_STACK_ID:  

 Player 1 10:27:47 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 10:27:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 

 Player 1 10:27:47 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":2,"creatorCardId":265,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"effectToDo":{"effectName":"AddPlayLootOpportunity","cardEffectNum":0,"cardPlayerId":1,"cardId":184,"effctType":0},"isAfterActivation":true,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 10:27:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 

 Player 1 10:27:47 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":2,"creatorCardId":265,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"effectToDo":{"effectName":"AddPlayLootOpportunity","cardEffectNum":0,"cardPlayerId":1,"cardId":184,"effctType":0},"isAfterActivation":true,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 10:27:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add ActivatePassiveEffect 2 "}} 

 Player 1 10:27:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 

 Player 1 10:27:47 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 10:27:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 

 Player 1 10:27:47 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":2,"creatorCardId":265,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"effectToDo":{"effectName":"AddPlayLootOpportunity","cardEffectNum":0,"cardPlayerId":1,"cardId":184,"effctType":0},"isAfterActivation":true,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 10:27:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding ActivatePassiveEffect 2"},"childOfId":10} 

 Player 1 10:27:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 1 10:27:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 10:27:47 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 10:27:47 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 10:27:47 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 10:27:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Polydactyly "} 

 Player 2 10:27:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Polydactyly "} 

 Player 2 10:27:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Polydactyly "} 

 Player 2 10:27:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Polydactyly "} 

 Player 2 10:27:47 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 10:27:47 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 1 10:27:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 1 10:27:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 10:27:47 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 1 10:27:47 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 1 10:27:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve ActivatePassiveEffect 2 "}} 

 Player 1 10:27:47 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":184,"particleType":6} 

 Player 1 10:27:49 $DISABLE_PARTICLE_EFFECT:  
{"cardId":184,"particleType":6} 

 Player 1 10:27:49 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":184}],"result":true,"preventMethod":false,"methodScopeId":265,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 1 10:27:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 

 Player 1 10:27:49 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":2,"creatorCardId":265,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"isAfterActivation":true,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 10:27:49 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 10:27:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 10:27:49 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":2,"creatorCardId":265,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"isAfterActivation":true,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 10:27:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve ActivatePassiveEffect 2  "}} 

 Player 1 10:27:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 10:27:49 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":2,"creatorCardId":265,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"isAfterActivation":true,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 10:27:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve ActivatePassiveEffect 2"},"childOfId":15} 

 Player 1 10:27:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 1 10:27:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 10:27:50 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 1 10:27:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 1 10:27:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 10:27:50 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 10:27:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Polydactyly "} 

 Player 2 10:27:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Polydactyly "} 

 Player 2 10:27:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Polydactyly "} 

 Player 2 10:27:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Polydactyly "} 

 Player 2 10:27:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Polydactyly "} 

 Player 2 10:27:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Polydactyly "} 

 Player 2 10:27:50 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 10:27:50 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 1 10:27:50 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 1 10:27:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 1 10:27:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 10:27:50 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 10:27:50 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 10:27:50 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 10:27:50 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 10:27:50 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 10:27:50 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 10:27:50 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 10:27:50 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 10:27:50 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 10:27:50 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 10:27:50 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 10:27:50 $TURN_PLAYER_DO_STACK_EFFECT:  
{"playerId":2} 

 Player 1 10:27:51 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 10:27:52 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 10:30:47 $MOVE_CARD:  
{"moveIndex":10,"cardId":131,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 

 Player 1 10:30:47 $MOVE_CARD_END:  
{"moveIndex":10,"cardId":131,"flipIfFlipped":true,"playerId":2} 

 Player 2 10:30:47 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":131} 

 Player 2 10:30:51 $MOVE_CARD:  
{"moveIndex":11,"cardId":194,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 

 Player 1 10:30:51 $MOVE_CARD_END:  
{"moveIndex":11,"cardId":194,"flipIfFlipped":true,"playerId":2} 

 Player 2 10:30:51 $MOVE_CARD:  
{"moveIndex":12,"cardId":194,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 

 Player 1 10:30:52 $MOVE_CARD_END:  
{"moveIndex":12,"cardId":194,"flipIfFlipped":true,"playerId":2} 

 Player 2 10:30:52 $ADD_AN_ITEM:  
{"playerId":2,"cardId":194,"isReward":true} 

 Player 2 10:30:52 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":194}],"result":true,"preventMethod":false,"methodScopeId":259,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 2 10:30:54 $NEXT_STACK_ID:  

 Player 2 10:30:54 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 10:30:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Devil "} 

 Player 2 10:30:55 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":259,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 10:30:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Devil "} 

 Player 2 10:30:55 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":259,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 10:30:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add PlayLootCardStackEffect 3 "}} 

 Player 2 10:30:55 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":131} 

 Player 2 10:30:55 $MOVE_CARD:  
{"moveIndex":13,"cardId":131,"placeID":277,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 10:30:55 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 10:30:55 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 10:30:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Devil "} 

 Player 1 10:30:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Devil "} 

 Player 1 10:30:55 $MOVE_CARD_END:  
{"moveIndex":13,"cardId":131,"flipIfFlipped":true,"playerId":2} 

 Player 2 10:30:55 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":131} 

 Player 2 10:30:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Devil: ChainEffects"} 

 Player 2 10:30:57 $SHOW_DECISION:  
{"startCardId":131,"endCardId":184} 

 Player 2 10:31:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 10:31:00 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 10:31:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Devil: ChainEffects"} 

 Player 2 10:31:00 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":259,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":2,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":131,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 10:31:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding PlayLootCardStackEffect 3"},"childOfId":20} 

 Player 2 10:31:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 2 10:31:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 10:31:01 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 2 10:31:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 2 10:31:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 10:31:01 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 10:31:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Devil "} 

 Player 1 10:31:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Devil "} 

 Player 1 10:31:01 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 10:31:01 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 2 10:31:01 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 2 10:31:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve PlayLootCardStackEffect 3 "}} 

 Player 2 10:31:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Devil: ChainEffects"} 

 Player 2 10:31:01 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":131,"particleType":6} 

 Player 2 10:31:03 $DISABLE_PARTICLE_EFFECT:  
{"cardId":131,"particleType":6} 

 Player 2 10:31:03 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_LOSE_ITEM","args":[{"type":0,"number":194}],"result":null,"preventMethod":false,"methodScopeId":259,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 2 10:31:03 $MOVE_CARD:  
{"moveIndex":14,"cardId":194,"placeID":280,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 10:31:03 $MOVE_CARD_END:  
{"moveIndex":14,"cardId":194,"flipIfFlipped":true,"playerId":2} 

 Player 2 10:31:03 $MOVE_CARD_TO_PILE:  
{"type":5,"cardId":194} 

 Player 2 10:31:03 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_LOSE_ITEM","args":[{"type":0,"number":184}],"result":null,"preventMethod":false,"methodScopeId":265,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1} 

 Player 2 10:31:03 $NEXT_STACK_ID:  

 Player 2 10:31:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Devil: ChainEffects"} 

 Player 2 10:31:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Devil: ChainEffects \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 

 Player 2 10:31:03 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":265,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"effectToDo":{"effectName":"AddPlayLootOpportunity","cardEffectNum":1,"cardPlayerId":1,"cardId":184,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 10:31:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Devil: ChainEffects \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 

 Player 2 10:31:03 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":265,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"effectToDo":{"effectName":"AddPlayLootOpportunity","cardEffectNum":1,"cardPlayerId":1,"cardId":184,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 10:31:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Add ActivatePassiveEffect 4 "}} 

 Player 2 10:31:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Devil: ChainEffects \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 

 Player 2 10:31:04 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 10:31:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Devil: ChainEffects \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 

 Player 2 10:31:04 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":265,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"effectToDo":{"effectName":"AddPlayLootOpportunity","cardEffectNum":1,"cardPlayerId":1,"cardId":184,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 10:31:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Response Adding ActivatePassiveEffect 4"},"childOfId":25} 

 Player 2 10:31:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Wait For Response From Player 1 "},"childOfId":25} 

 Player 2 10:31:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 10:31:04 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 10:31:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Devil "} 

 Player 1 10:31:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Devil "} 

 Player 1 10:31:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 

 Player 1 10:31:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 

 Player 1 10:31:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 

 Player 1 10:31:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 

 Player 1 10:31:04 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 10:31:04 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 2 10:31:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":25} 

 Player 2 10:31:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 10:31:04 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 2 10:31:04 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 2 10:31:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Resolve ActivatePassiveEffect 4 "}} 

 Player 2 10:31:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Devil: ChainEffects \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 

 Player 2 10:31:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Devil: ChainEffects \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 

 Player 2 10:31:04 $DO_STACK_EFFECT:  
{"originPlayerId":2,"playerId":1,"currentStack":[{"entityId":3,"creatorCardId":259,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":2,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":131,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"effectCollectedData":null,"entityId":4,"creatorCardId":265,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"effectToDo":{"effectName":"AddPlayLootOpportunity","cardEffectNum":1,"cardPlayerId":1,"cardId":184,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}]} 

 Player 1 10:31:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 

 Player 1 10:31:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 

 Player 1 10:31:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 

 Player 1 10:31:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 

 Player 1 10:31:04 $LOG_ERROR:  
"error while resolving stack effect 4" 
//////Error From Player 1////
  

 Player 1 10:31:04 $LOG_ERROR:  
//////Error From Player 1////
 [object Object]
////// 

 Player 1 10:31:04 $LOG_ERROR:  
{"message":"\"Cannot read property 'node' of null\"","stack":"\"TypeError: Cannot read property 'node' of null\\n    at ActivatePassiveEffect.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/StackEffects/Activate%20Passive%20Effect.js:220:77)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\\n    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\\n    at new Promise (<anonymous>)\\n    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\\n    at ActivatePassiveEffect.resolve (http://localhost:7456/preview-scripts/assets/Script/StackEffects/Activate%20Passive%20Effect.js:175:16)\\n    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/Stack.js:117:58)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\""} 
//////Error From Player 1////
  

 Player 1 10:31:04 $LOG_ERROR:  
//////Error From Player 1////

 "\"Cannot read property 'node' of null\""

 + "\"TypeError: Cannot read property 'node' of null\
    at ActivatePassiveEffect.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/StackEffects/Activate%20Passive%20Effect.js:220:77)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\
    at new Promise (<anonymous>)\
    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\
    at ActivatePassiveEffect.resolve (http://localhost:7456/preview-scripts/assets/Script/StackEffects/Activate%20Passive%20Effect.js:175:16)\
    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/Stack.js:117:58)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\""

////// 
//////Error From Player 1////

 "\"Cannot read property 'node' of null\""

 + "\"TypeError: Cannot read property 'node' of null\
    at ActivatePassiveEffect.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/StackEffects/Activate%20Passive%20Effect.js:220:77)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\
    at new Promise (<anonymous>)\
    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\
    at ActivatePassiveEffect.resolve (http://localhost:7456/preview-scripts/assets/Script/StackEffects/Activate%20Passive%20Effect.js:175:16)\
    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/Stack.js:117:58)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\""

////// 

 Player 1 10:31:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 

 Player 1 10:31:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 

 Player 1 10:31:04 $FINISH_DO_STACK_EFFECT:  
{"playerId":2,"newStack":[{"entityId":3,"creatorCardId":259,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":2,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":131,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"effectCollectedData":null,"entityId":4,"creatorCardId":265,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"effectPassiveMeta":{"passiveEvent":"PLAYER_LOSE_ITEM","args":[{"type":0,"number":184}],"result":null,"preventMethod":false,"methodScopeId":265,"scopeIsPlayer":true,"index":1},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}]} 

 Player 2 10:31:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Devil: ChainEffects \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 

 Player 2 10:31:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Devil: ChainEffects \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 

 Player 2 10:31:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Devil: ChainEffects \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 

 Player 2 10:31:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Devil: ChainEffects \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 

 Player 2 10:31:05 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 10:31:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 10:31:05 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":259,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":2,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":131,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 10:31:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 10:31:05 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":259,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":2,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":131,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 10:31:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 10:31:05 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":265,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"effectPassiveMeta":{"passiveEvent":"PLAYER_LOSE_ITEM","args":[{"type":0,"number":184}],"result":null,"preventMethod":false,"methodScopeId":265,"scopeIsPlayer":true,"index":null},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 10:31:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 10:31:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 10:31:05 $REPLACE_STACK:  
{"currentStack":[{"entityId":3,"creatorCardId":259,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":2,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":131,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"effectCollectedData":null,"entityId":4,"creatorCardId":265,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"effectPassiveMeta":{"passiveEvent":"PLAYER_LOSE_ITEM","args":[{"type":0,"number":184}],"result":null,"preventMethod":false,"methodScopeId":265,"scopeIsPlayer":true,"index":null},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}]} 

 Player 2 10:31:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Devil "} 

 Player 2 10:31:05 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":265,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"effectPassiveMeta":{"passiveEvent":"PLAYER_LOSE_ITEM","args":[{"type":0,"number":184}],"result":null,"preventMethod":false,"methodScopeId":265,"scopeIsPlayer":true,"index":null},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 10:31:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Remove After Resolve ActivatePassiveEffect 4  "}} 

 Player 2 10:31:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Devil "} 

 Player 2 10:31:05 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":265,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"effectPassiveMeta":{"passiveEvent":"PLAYER_LOSE_ITEM","args":[{"type":0,"number":184}],"result":null,"preventMethod":false,"methodScopeId":265,"scopeIsPlayer":true,"index":null},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 10:31:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Response Remove After Resolve ActivatePassiveEffect 4"},"childOfId":30} 

 Player 2 10:31:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Wait For Response From Player 2 "},"childOfId":30} 

 Player 2 10:31:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 10:31:05 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 2 10:31:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":30} 

 Player 2 10:31:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 10:31:05 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 10:31:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 

 Player 1 10:31:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 

 Player 1 10:31:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 

 Player 1 10:31:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 

 Player 1 10:31:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 

 Player 1 10:31:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 

 Player 1 10:31:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 

 Player 1 10:31:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 

 Player 1 10:31:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 

 Player 1 10:31:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 

 Player 1 10:31:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 

 Player 1 10:31:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 

 Player 1 10:31:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 

 Player 1 10:31:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 

 Player 1 10:31:06 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 10:31:06 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 2 10:31:06 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 2 10:31:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Resolve PlayLootCardStackEffect 3 "}} 

 Player 2 10:31:06 $REMOVE_FROM_PASSIVE_MANAGER:  
{"cardId":184} 

 Player 2 10:31:06 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_LOSE_ITEM","args":[{"type":0,"number":184}],"result":null,"preventMethod":false,"methodScopeId":265,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 10:31:06 $MOVE_CARD:  
{"moveIndex":15,"cardId":184,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 

 Player 1 10:31:06 $MOVE_CARD_END:  
{"moveIndex":15,"cardId":184,"flipIfFlipped":true,"playerId":2} 

 Player 2 10:31:06 $ADD_AN_ITEM:  
{"playerId":2,"cardId":184,"isReward":true} 

 Player 2 10:31:06 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":184}],"result":true,"preventMethod":false,"methodScopeId":259,"scopeIsPlayer":true,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 

 Player 2 10:31:06 $REMOVE_FROM_PILE:  
{"cardId":131} 

 Player 2 10:31:06 $MOVE_CARD:  
{"moveIndex":16,"cardId":131,"placeID":278,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 10:31:07 $MOVE_CARD_END:  
{"moveIndex":16,"cardId":131,"flipIfFlipped":true,"playerId":2} 

 Player 2 10:31:07 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":131} 

 Player 2 10:31:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Devil "} 

 Player 2 10:31:07 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":259,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 10:31:07 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 10:31:07 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 10:31:07 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":259,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":2,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":131,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 10:31:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Remove After Resolve PlayLootCardStackEffect 3  "}} 

 Player 2 10:31:07 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 10:31:07 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":259,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":2,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":131,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 10:31:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Response Remove After Resolve PlayLootCardStackEffect 3"},"childOfId":35} 

 Player 2 10:31:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Wait For Response From Player 1 "},"childOfId":35} 

 Player 2 10:31:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 10:31:07 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 10:31:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Devil "} 

 Player 1 10:31:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Devil "} 

 Player 1 10:31:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Devil "} 

 Player 1 10:31:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Devil "} 

 Player 1 10:31:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Devil "} 

 Player 1 10:31:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Devil "} 

 Player 1 10:31:07 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 10:31:07 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 2 10:31:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 2 "},"childOfId":35} 

 Player 2 10:31:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 10:31:07 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 2 10:31:07 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 2 10:31:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Stack Was Emptied "}} 

 Player 2 10:31:08 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 10:31:08 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 10:31:08 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 10:31:08 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 10:31:08 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 10:31:08 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 10:31:08 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 10:31:08 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 10:31:08 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 10:31:08 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 10:31:08 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 10:31:08 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 10:31:08 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 10:31:08 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 10:31:08 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 10:31:08 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 10:31:08 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 10:31:08 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 10:31:08 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 10:31:08 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 10:31:08 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 10:31:09 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 10:31:10 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 13:08:35 $MATCH: 