Start Log 

 Player 1 17:34:51 $MATCH:  

 Player 1 17:34:52 $START_GAME:  

 Player 2 17:34:52 $MOVE_TO_TABLE:  

 Player 1 17:34:52 $MOVE_TO_TABLE:  

 Player 1 17:34:59 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 17:34:59 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 2 17:34:59 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":264,"itemCardId":267} 

 Player 2 17:34:59 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":263}],"result":true,"preventMethod":false,"methodScopeId":262,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 17:34:59 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":262,"itemCardId":263} 

 Player 2 17:34:59 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[73,124,135,119,32,58,139,114,28,35,62,24,47,78,48,118,22,19,127,89,125,97,142,137,8,56,53,91,143,66,30,75,54,83,23,101,104,79,70,46,99,63,93,17,117,109,110,103,11,64,113,123,85,112,126,94,141,100,59,21,81,50,14,13,27,132,72,51,18,87,69,44,7,15,33,128,57,105,67,39,68,55,43,102,10,133,122,108,90,65,36,107,80,130,9,26,129,38,138,96,111,120,98,12,45,106,20,74,131,49,41,37,40,61,31,88,95,42,60,86,16,92,82,52,29,140,34,76,71,134,84,116,121,115,77,136,25]} 

 Player 2 17:35:00 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[239,240,206,236,245,232,208,227,216,209,233,235,223,207,226,218,213,220,225,231,246,247,215,253,256,249,255,238,212,217,234,228,259,210,237,211,252,222,258,243,214,257,241,244,242,224,254,221,251,219,230,229,248,250]} 

 Player 2 17:35:00 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[188,175,177,185,193,182,197,186,159,155,163,160,179,153,171,174,191,181,154,164,190,187,161,165,183,173,168,189,172,198,150,170,167,184,147,169,201,199,192,200,166,202,157,158,195,151,156,180,152,149,203,162,148,176,178,196,194,146]} 

 Player 2 17:35:00 $DRAW_CARD:  
{"deckType":5} 

 Player 2 17:35:00 $FLIP_CARD:  
{"cardId":146} 

 Player 2 17:35:00 $ADD_STORE_CARD:  
{"cardId":146} 

 Player 2 17:35:00 $DRAW_CARD:  
{"deckType":5} 

 Player 2 17:35:00 $FLIP_CARD:  
{"cardId":194} 

 Player 2 17:35:00 $ADD_STORE_CARD:  
{"cardId":194} 

 Player 2 17:35:00 $DRAW_CARD:  
{"deckType":2} 

 Player 2 17:35:00 $FLIP_CARD:  
{"cardId":250} 

 Player 2 17:35:00 $REGISTER_PASSIVE_ITEM:  
{"cardId":250} 

 Player 2 17:35:00 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":250} 

 Player 2 17:35:00 $NEW_MONSTER_ON_PLACE:  
{"cardId":250,"monsterPlaceId":1} 

 Player 2 17:35:00 $DRAW_CARD:  
{"deckType":2} 

 Player 2 17:35:00 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":248} 

 Player 2 17:35:00 $DRAW_CARD:  
{"deckType":2} 

 Player 2 17:35:00 $FLIP_CARD:  
{"cardId":229} 

 Player 2 17:35:00 $REGISTER_PASSIVE_ITEM:  
{"cardId":229} 

 Player 2 17:35:00 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":229} 

 Player 2 17:35:00 $NEW_MONSTER_ON_PLACE:  
{"cardId":229,"monsterPlaceId":2} 

 Player 2 17:35:00 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 17:35:00 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":264,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 17:35:00 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:35:00 $MOVE_CARD:  
{"moveIndex":1,"cardId":25,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:35:00 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":267}],"result":true,"preventMethod":false,"methodScopeId":264,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 17:35:01 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":25,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:35:01 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":25} 

 Player 2 17:35:01 $FLIP_CARD:  
{"cardId":25} 

 Player 2 17:35:01 $FLIP_CARD:  
{"cardId":25} 

 Player 2 17:35:01 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":25} 

 Player 2 17:35:01 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:35:01 $MOVE_CARD:  
{"moveIndex":2,"cardId":136,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:35:01 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":136,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:35:01 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":136} 

 Player 2 17:35:01 $FLIP_CARD:  
{"cardId":136} 

 Player 2 17:35:01 $FLIP_CARD:  
{"cardId":136} 

 Player 2 17:35:01 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":136} 

 Player 2 17:35:01 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:35:01 $MOVE_CARD:  
{"moveIndex":3,"cardId":77,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:35:02 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":77,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:35:02 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":77} 

 Player 2 17:35:02 $FLIP_CARD:  
{"cardId":77} 

 Player 2 17:35:02 $FLIP_CARD:  
{"cardId":77} 

 Player 2 17:35:02 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":77} 

 Player 2 17:35:02 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 17:35:02 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":262,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 17:35:02 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:35:02 $MOVE_CARD:  
{"moveIndex":4,"cardId":115,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:35:02 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":115,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:35:02 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":115} 

 Player 2 17:35:02 $FLIP_CARD:  
{"cardId":115} 

 Player 2 17:35:02 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":115} 

 Player 2 17:35:02 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:35:02 $MOVE_CARD:  
{"moveIndex":5,"cardId":121,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:35:03 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":121,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:35:03 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":121} 

 Player 2 17:35:03 $FLIP_CARD:  
{"cardId":121} 

 Player 2 17:35:03 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":121} 

 Player 2 17:35:03 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:35:03 $MOVE_CARD:  
{"moveIndex":6,"cardId":116,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:35:03 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":116,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:35:03 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":116} 

 Player 2 17:35:03 $FLIP_CARD:  
{"cardId":116} 

 Player 2 17:35:03 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":116} 

 Player 2 17:35:03 $GAME_HAS_STARTED:  

 Player 2 17:35:03 $SET_TURN:  
{"playerId":1} 

 Player 2 17:35:03 $START_TURN:  
{"playerId":1} 

 Player 2 17:35:03 $UPDATE_ACTIONS:  

 Player 1 17:35:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:35:03 $NEXT_STACK_ID:  

 Player 1 17:35:03 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:35:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 17:35:03 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":264,"turnPlayerCardId":264,"stackEffectType":13}} 

 Player 1 17:35:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 1 17:35:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:35:03 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 17:35:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 17:35:03 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":264,"turnPlayerCardId":264,"stackEffectType":13}} 

 Player 1 17:35:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 1 17:35:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 1 17:35:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:35:04 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 17:35:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 1 17:35:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 17:35:04 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 17:35:04 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:35:04 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:35:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 17:35:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 17:35:04 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 17:35:04 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 17:35:04 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 17:35:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 1 17:35:04 $DRAW_CARD:  
{"deckType":1} 

 Player 1 17:35:04 $MOVE_CARD:  
{"moveIndex":7,"cardId":84,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 17:35:04 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":84,"flipIfFlipped":false,"playerId":1} 

 Player 1 17:35:04 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":84} 

 Player 1 17:35:04 $FLIP_CARD:  
{"cardId":84} 

 Player 1 17:35:04 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":84} 

 Player 1 17:35:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 17:35:04 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":264,"turnPlayerCardId":264,"stackEffectType":13}} 

 Player 1 17:35:04 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 17:35:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 1 17:35:04 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:35:04 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":264,"turnPlayerCardId":264,"stackEffectType":13}} 

 Player 1 17:35:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 1 17:35:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 1 17:35:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 17:35:05 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 17:35:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 17:35:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 17:35:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 17:35:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 17:35:05 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 17:35:05 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 1 17:35:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 1 17:35:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:35:05 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 1 17:35:05 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 1 17:35:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 1 17:35:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:35:05 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 17:35:05 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 17:35:05 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 17:35:05 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 17:35:05 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 17:35:05 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 17:35:05 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 17:35:06 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 17:35:07 $NEXT_STACK_ID:  

 Player 1 17:35:07 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:35:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 1 17:35:07 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":264,"hasLockingStackEffect":false,"itemToPlayCardId":267,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 17:35:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add ActivateItem 2 "}} 

 Player 1 17:35:07 $LOG_ERROR:  
{"message":"\"Cannot read property 'stopSystem' of null\"","stack":"\"TypeError: Cannot read property 'stopSystem' of null\\n    at Function.ParticleManager.activateParticleEffect (http://localhost:7456/preview-scripts/assets/Script/Managers/ParticleManager.js:47:21)\\n    at Function.CardManager.makeRequiredForDataCollector (http://localhost:7456/preview-scripts/assets/Script/Managers/CardManager.js:491:35)\\n    at http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/DataCollector/ChooseCard.js:267:51\\n    at Set.forEach (<anonymous>)\\n    at ChooseCard.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/DataCollector/ChooseCard.js:265:31)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\\n    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\\n    at new Promise (<anonymous>)\\n    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\""} 
//////Error From Player 1////
  

 Player 1 17:35:07 $LOG_ERROR:  
//////Error From Player 1////

 "\"Cannot read property 'stopSystem' of null\""

 + "\"TypeError: Cannot read property 'stopSystem' of null\
    at Function.ParticleManager.activateParticleEffect (http://localhost:7456/preview-scripts/assets/Script/Managers/ParticleManager.js:47:21)\
    at Function.CardManager.makeRequiredForDataCollector (http://localhost:7456/preview-scripts/assets/Script/Managers/CardManager.js:491:35)\
    at http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/DataCollector/ChooseCard.js:267:51\
    at Set.forEach (<anonymous>)\
    at ChooseCard.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/DataCollector/ChooseCard.js:265:31)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\
    at new Promise (<anonymous>)\
    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\""

////// 
//////Error From Player 1////

 "\"Cannot read property 'stopSystem' of null\""

 + "\"TypeError: Cannot read property 'stopSystem' of null\
    at Function.ParticleManager.activateParticleEffect (http://localhost:7456/preview-scripts/assets/Script/Managers/ParticleManager.js:47:21)\
    at Function.CardManager.makeRequiredForDataCollector (http://localhost:7456/preview-scripts/assets/Script/Managers/CardManager.js:491:35)\
    at http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/DataCollector/ChooseCard.js:267:51\
    at Set.forEach (<anonymous>)\
    at ChooseCard.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/DataCollector/ChooseCard.js:265:31)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\
    at new Promise (<anonymous>)\
    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\""

////// 

 Player 1 17:35:07 $USE_ITEM:  
{"cardId":267} 

 Player 1 17:35:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:35:07 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 17:35:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 1 17:35:07 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":264,"hasLockingStackEffect":false,"itemToPlayCardId":267,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 17:35:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding ActivateItem 2"},"childOfId":10} 

 Player 1 17:35:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 1 17:35:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:35:07 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 1 17:35:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 1 17:35:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 17:35:07 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 1 17:35:07 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 17:35:07 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:35:07 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:35:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 17:35:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 17:35:07 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 17:35:07 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 1 17:35:08 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 1 17:35:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve ActivateItem 2 "}} 

 Player 1 17:35:08 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":267,"particleType":6} 

 Player 1 17:35:09 $DISABLE_PARTICLE_EFFECT:  
{"cardId":267,"particleType":6} 

 Player 1 17:35:10 $LOG_ERROR:  
"effect LookAtTopDeckAndPutOnTop failed to execute\nTypeError: Cannot read property 'getComponent' of null\neffect data was:" 
//////Error From Player 1////
  

 Player 1 17:35:10 $LOG_ERROR:  
//////Error From Player 1////
 [object Object]
////// 

 Player 1 17:35:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 1 17:35:10 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":264,"hasLockingStackEffect":false,"itemToPlayCardId":267,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 17:35:10 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 17:35:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve ActivateItem 2  "}} 

 Player 1 17:35:10 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:35:10 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":264,"hasLockingStackEffect":false,"itemToPlayCardId":267,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 17:35:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve ActivateItem 2"},"childOfId":15} 

 Player 1 17:35:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 1 17:35:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 17:35:10 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 17:35:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 17:35:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 17:35:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 17:35:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 17:35:10 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 17:35:10 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 1 17:35:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 1 17:35:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:35:10 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 1 17:35:10 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 1 17:35:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 1 17:35:10 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:35:10 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 17:35:10 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 17:35:10 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 17:35:11 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 17:35:11 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 17:35:11 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 17:35:11 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 17:35:11 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 17:35:11 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 17:35:11 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 17:35:11 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 17:35:12 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 17:35:12 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 17:46:29 $MATCH: 