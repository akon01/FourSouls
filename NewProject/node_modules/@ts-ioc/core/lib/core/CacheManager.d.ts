import { Type } from '../types';
import { IContainer } from '../IContainer';
import { ICacheManager } from '../ICacheManager';
/**
 * cache target.
 *
 * @export
 * @interface CacheTarget
 */
export interface CacheTarget {
    target: any;
    expires: number;
}
/**
 * cache manager.
 *
 * @export
 * @class CacheManager
 * @implements {ICacheManager}
 */
export declare class CacheManager implements ICacheManager {
    private container;
    cacheTokens: Map<Type<any>, CacheTarget>;
    constructor(container: IContainer);
    isChecking(): boolean;
    hasCache(targetType: Type<any>): boolean;
    cache(targetType: Type<any>, target: any, expires: number): void;
    get(targetType: Type<any>, expires?: number): any;
    private timeout;
    checkExpires(): void;
    destroy(targetType: Type<any>, target?: any): void;
    static getClassAnnations(): any;
}
