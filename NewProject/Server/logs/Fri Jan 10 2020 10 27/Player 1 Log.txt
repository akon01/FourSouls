Start Log 
 Player 1 10:27:14 $START_GAME:  
 Player 1 10:27:14 $MOVE_TO_TABLE:  
 Player 1 10:27:22 $FINISH_LOAD:  

 {"id":1,"turnPlayerId":2} 
 Player 1 10:27:22 $DECK_ARRAGMENT:  

 {"deckType":5,"arrangement":[189,196,168,147,190,148,171,162,188,193,178,165,152,201,185,160,181,194,175,155,187,157,198,170,163,199,158,192,197,146,174,186,184,176,172,195,167,154,164,150,149,153,161,166,177,151,202,191,159,180,179,173,156,169,200,182,183]} 
 Player 1 10:27:32 $EDEN_CHOSEN:  

 {"cardId":168,"playerId":2} 
 Player 1 10:27:33 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":168}],"result":true,"preventMethod":false,"methodScopeId":265,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 1 10:27:34 $MOVE_CARD_END:  

 {"moveIndex":1,"cardId":37,"flipIfFlipped":false,"playerId":2} 
 Player 1 10:27:34 $MOVE_CARD_END:  

 {"moveIndex":2,"cardId":13,"flipIfFlipped":false,"playerId":2} 
 Player 1 10:27:35 $MOVE_CARD_END:  

 {"moveIndex":3,"cardId":123,"flipIfFlipped":false,"playerId":2} 
 Player 1 10:27:35 $MOVE_CARD_END:  

 {"moveIndex":4,"cardId":140,"flipIfFlipped":false,"playerId":2} 
 Player 1 10:27:36 $MOVE_CARD_END:  

 {"moveIndex":5,"cardId":92,"flipIfFlipped":false,"playerId":2} 
 Player 1 10:27:36 $MOVE_CARD_END:  

 {"moveIndex":6,"cardId":126,"flipIfFlipped":false,"playerId":2} 
 Player 1 10:27:37 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 10:27:37 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 10:27:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 10:27:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 10:27:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 10:27:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 10:27:37 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 10:27:37 $MOVE_CARD_END:  

 {"moveIndex":7,"cardId":116,"flipIfFlipped":false,"playerId":2} 
 Player 1 10:27:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 10:27:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 10:27:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 10:27:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 10:27:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 10:27:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 10:27:38 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 10:27:46 $MOVE_CARD:  

 {"moveIndex":8,"cardId":184,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Hand"} 
 Player 1 10:27:46 $REGISTER_PASSIVE_ITEM:  

 {"cardId":184} 
 Player 1 10:27:46 $MOVE_CARD:  

 {"moveIndex":9,"cardId":184,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 
 Player 1 10:27:47 $ADD_AN_ITEM:  

 {"playerId":1,"cardId":184,"isReward":true} 
 Player 1 10:27:47 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":184}],"result":true,"preventMethod":false,"methodScopeId":265,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 1 10:27:47 $NEXT_STACK_ID:  
 Player 1 10:27:47 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 10:27:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 
 Player 1 10:27:47 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":2,"creatorCardId":265,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"effectToDo":{"effectName":"AddPlayLootOpportunity","cardEffectNum":0,"cardPlayerId":1,"cardId":184,"effctType":0},"isAfterActivation":true,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 10:27:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 
 Player 1 10:27:47 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":2,"creatorCardId":265,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"effectToDo":{"effectName":"AddPlayLootOpportunity","cardEffectNum":0,"cardPlayerId":1,"cardId":184,"effctType":0},"isAfterActivation":true,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 10:27:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":10,"_text":"Add ActivatePassiveEffect 2 "}} 
 Player 1 10:27:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 
 Player 1 10:27:47 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 1 10:27:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 
 Player 1 10:27:47 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":2,"creatorCardId":265,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"effectToDo":{"effectName":"AddPlayLootOpportunity","cardEffectNum":0,"cardPlayerId":1,"cardId":184,"effctType":0},"isAfterActivation":true,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 10:27:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":11,"_text":"Response Adding ActivatePassiveEffect 2"},"childOfId":10} 
 Player 1 10:27:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 
 Player 1 10:27:47 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 10:27:47 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 10:27:47 $ACTION_MASSAGE_REMOVE:  

 {"id":12} 
 Player 1 10:27:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 
 Player 1 10:27:47 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 10:27:47 $ACTION_MASSAGE_REMOVE:  

 {"id":13} 
 Player 1 10:27:47 $ACTION_MASSAGE_REMOVE:  

 {"id":11} 
 Player 1 10:27:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":14,"_text":"Resolve ActivatePassiveEffect 2 "}} 
 Player 1 10:27:47 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":184,"particleType":6} 
 Player 1 10:27:49 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":184,"particleType":6} 
 Player 1 10:27:49 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":184}],"result":true,"preventMethod":false,"methodScopeId":265,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 1 10:27:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 
 Player 1 10:27:49 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":2,"creatorCardId":265,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"isAfterActivation":true,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 10:27:49 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 1 10:27:49 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 10:27:49 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":2,"creatorCardId":265,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"isAfterActivation":true,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 10:27:49 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":15,"_text":"Remove After Resolve ActivatePassiveEffect 2  "}} 
 Player 1 10:27:49 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 10:27:49 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":2,"creatorCardId":265,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"isAfterActivation":true,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 10:27:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":16,"_text":"Response Remove After Resolve ActivatePassiveEffect 2"},"childOfId":15} 
 Player 1 10:27:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 
 Player 1 10:27:50 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 10:27:50 $ACTION_MASSAGE_REMOVE:  

 {"id":17} 
 Player 1 10:27:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 
 Player 1 10:27:50 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 10:27:50 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 10:27:50 $ACTION_MASSAGE_REMOVE:  

 {"id":18} 
 Player 1 10:27:50 $ACTION_MASSAGE_REMOVE:  

 {"id":16} 
 Player 1 10:27:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":19,"_text":"Stack Was Emptied "}} 
 Player 1 10:27:50 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 10:27:50 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 1 10:27:50 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 1 10:27:50 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 1 10:27:50 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 1 10:27:50 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 1 10:27:50 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 1 10:27:50 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 1 10:27:50 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 1 10:27:50 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 1 10:27:50 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 1 10:27:50 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 1 10:27:50 $TURN_PLAYER_DO_STACK_EFFECT:  

 {"playerId":2} 
 Player 1 10:27:51 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 1 10:27:52 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 1 10:30:47 $MOVE_CARD_END:  

 {"moveIndex":10,"cardId":131,"flipIfFlipped":true,"playerId":2} 
 Player 1 10:30:51 $MOVE_CARD_END:  

 {"moveIndex":11,"cardId":194,"flipIfFlipped":true,"playerId":2} 
 Player 1 10:30:52 $MOVE_CARD_END:  

 {"moveIndex":12,"cardId":194,"flipIfFlipped":true,"playerId":2} 
 Player 1 10:30:55 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 10:30:55 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 10:30:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil "} 
 Player 1 10:30:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil "} 
 Player 1 10:30:55 $MOVE_CARD_END:  

 {"moveIndex":13,"cardId":131,"flipIfFlipped":true,"playerId":2} 
 Player 1 10:31:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil "} 
 Player 1 10:31:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil "} 
 Player 1 10:31:01 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 10:31:03 $MOVE_CARD_END:  

 {"moveIndex":14,"cardId":194,"flipIfFlipped":true,"playerId":2} 
 Player 1 10:31:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil "} 
 Player 1 10:31:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil "} 
 Player 1 10:31:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 10:31:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 10:31:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 10:31:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 10:31:04 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 10:31:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 10:31:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 10:31:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 10:31:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 10:31:04 $LOG_ERROR:  

 "error while resolving stack effect 4" 
//////Error From Player 1////
 [object Object]
////// 
 Player 1 10:31:04 $LOG_ERROR:  

 {"message":"\"Cannot read property 'node' of null\"","stack":"\"TypeError: Cannot read property 'node' of null\\n    at ActivatePassiveEffect.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/StackEffects/Activate%20Passive%20Effect.js:220:77)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\\n    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\\n    at new Promise (<anonymous>)\\n    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\\n    at ActivatePassiveEffect.resolve (http://localhost:7456/preview-scripts/assets/Script/StackEffects/Activate%20Passive%20Effect.js:175:16)\\n    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/Stack.js:117:58)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\""} 
 Player 1 10:31:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 10:31:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 10:31:04 $FINISH_DO_STACK_EFFECT:  

 {"playerId":2,"newStack":[{"entityId":3,"creatorCardId":259,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":2,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":131,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"effectCollectedData":null,"entityId":4,"creatorCardId":265,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"effectPassiveMeta":{"passiveEvent":"PLAYER_LOSE_ITEM","args":[{"type":0,"number":184}],"result":null,"preventMethod":false,"methodScopeId":265,"scopeIsPlayer":true,"index":1},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}]} 
 Player 1 10:31:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 10:31:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 10:31:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 10:31:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 10:31:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 10:31:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 10:31:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 10:31:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 10:31:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 10:31:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 10:31:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 10:31:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 10:31:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 10:31:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 10:31:06 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 10:31:06 $MOVE_CARD_END:  

 {"moveIndex":15,"cardId":184,"flipIfFlipped":true,"playerId":2} 
 Player 1 10:31:07 $MOVE_CARD_END:  

 {"moveIndex":16,"cardId":131,"flipIfFlipped":true,"playerId":2} 
 Player 1 10:31:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil "} 
 Player 1 10:31:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil "} 
 Player 1 10:31:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil "} 
 Player 1 10:31:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil "} 
 Player 1 10:31:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil "} 
 Player 1 10:31:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil "} 
 Player 1 10:31:07 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false}