Start Log 

 Player 1 02:17:37 $MATCH:  

 Player 1 02:17:38 $START_GAME:  

 Player 2 02:17:38 $MOVE_TO_TABLE:  

 Player 1 02:17:38 $MOVE_TO_TABLE:  

 Player 1 02:17:47 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 02:17:47 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 2 02:17:47 $SET_CHAR:  
{"originPlayerId":2,"playerId":1,"charCardId":342,"itemCardId":343} 

 Player 1 02:17:47 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":342,"itemCardId":343} 

 Player 1 02:17:47 $SET_CHAR_END:  
{"playerId":2} 

 Player 2 02:17:47 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":338,"itemCardId":339} 

 Player 2 02:17:47 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[33,84,27,24,44,5,127,45,4,70,99,30,58,68,16,106,76,101,51,91,111,54,29,94,124,56,43,31,23,134,11,66,79,17,129,128,89,55,100,47,116,39,90,137,40,32,75,9,133,78,132,123,81,67,36,25,103,110,88,71,112,37,53,6,107,63,41,121,52,117,19,113,114,60,42,14,102,7,82,62,59,115,28,72,87,109,12,61,64,15,80,18,138,73,136,57,104,98,93,139,119,95,135,125,92,120,118,122,34,46,20,131,26,21,48,85,97,74,50,10,77,49,96,38,22,69,65,13,83,130,126,108,105,8,35,86]} 

 Player 2 02:17:47 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[234,258,319,314,296,245,301,306,308,279,267,264,315,283,317,295,303,316,227,232,251,293,260,247,275,313,302,300,273,229,230,271,286,252,276,297,257,304,281,266,270,307,321,254,299,320,253,248,305,284,311,312,280,294,259,292,309,261,242,255,269,282,228,244,243,246,268,323,265,322,250,233,235,277,231,298,291,285,287,263,249,272,274,290,289,241,238,240,288,262,278,237,318,256,236,239,310]} 

 Player 2 02:17:47 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[179,182,221,184,187,197,159,222,224,144,217,192,149,167,203,147,189,141,205,163,225,145,174,195,207,150,173,198,180,213,193,219,162,142,164,215,204,218,194,161,199,160,188,214,152,176,177,156,153,181,206,143,154,208,172,190,183,186,178,175,200,191,171,196,209,201,148,210,211,155,220,146,165,223,202,158,157,166,151,216,169,170,212,168,185]} 

 Player 2 02:17:47 $DRAW_CARD:  
{"deckType":5} 

 Player 2 02:17:47 $FLIP_CARD:  
{"cardId":185} 

 Player 2 02:17:48 $ADD_STORE_CARD:  
{"cardId":185} 

 Player 2 02:17:48 $DRAW_CARD:  
{"deckType":5} 

 Player 2 02:17:48 $FLIP_CARD:  
{"cardId":168} 

 Player 2 02:17:48 $ADD_STORE_CARD:  
{"cardId":168} 

 Player 2 02:17:48 $DRAW_CARD:  
{"deckType":2} 

 Player 2 02:17:48 $FLIP_CARD:  
{"cardId":310} 

 Player 2 02:17:48 $REGISTER_PASSIVE_ITEM:  
{"cardId":310} 

 Player 2 02:17:48 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":310} 

 Player 2 02:17:48 $NEW_MONSTER_ON_PLACE:  
{"cardId":310,"monsterPlaceId":1} 

 Player 2 02:17:48 $DRAW_CARD:  
{"deckType":2} 

 Player 2 02:17:48 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":239} 

 Player 2 02:17:48 $DRAW_CARD:  
{"deckType":2} 

 Player 2 02:17:48 $FLIP_CARD:  
{"cardId":236} 

 Player 2 02:17:48 $REGISTER_PASSIVE_ITEM:  
{"cardId":236} 

 Player 2 02:17:48 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":236} 

 Player 2 02:17:48 $NEW_MONSTER_ON_PLACE:  
{"cardId":236,"monsterPlaceId":2} 

 Player 2 02:17:48 $REGISTER_PASSIVE_ITEM:  
{"cardId":325} 

 Player 2 02:17:48 $REGISTER_PASSIVE_ITEM:  
{"cardId":326} 

 Player 2 02:17:48 $REGISTER_PASSIVE_ITEM:  
{"cardId":327} 

 Player 2 02:17:48 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 02:17:48 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":342,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 02:17:48 $DRAW_CARD:  
{"deckType":1} 

 Player 2 02:17:48 $MOVE_CARD:  
{"moveIndex":1,"cardId":86,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 02:17:48 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":86,"flipIfFlipped":false,"playerId":2} 

 Player 2 02:17:48 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":86} 

 Player 2 02:17:48 $FLIP_CARD:  
{"cardId":86} 

 Player 2 02:17:49 $FLIP_CARD:  
{"cardId":86} 

 Player 2 02:17:49 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":86} 

 Player 2 02:17:49 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":86}],"result":null,"preventMethod":false,"methodScopeId":342,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 02:17:49 $DRAW_CARD:  
{"deckType":1} 

 Player 2 02:17:49 $MOVE_CARD:  
{"moveIndex":2,"cardId":35,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 02:17:49 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":35,"flipIfFlipped":false,"playerId":2} 

 Player 2 02:17:49 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":35} 

 Player 2 02:17:49 $FLIP_CARD:  
{"cardId":35} 

 Player 2 02:17:49 $FLIP_CARD:  
{"cardId":35} 

 Player 2 02:17:49 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":35} 

 Player 2 02:17:49 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":35}],"result":null,"preventMethod":false,"methodScopeId":342,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 02:17:49 $DRAW_CARD:  
{"deckType":1} 

 Player 2 02:17:49 $MOVE_CARD:  
{"moveIndex":3,"cardId":8,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 02:17:50 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":8,"flipIfFlipped":false,"playerId":2} 

 Player 2 02:17:50 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":8} 

 Player 2 02:17:50 $FLIP_CARD:  
{"cardId":8} 

 Player 2 02:17:50 $FLIP_CARD:  
{"cardId":8} 

 Player 2 02:17:50 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":8} 

 Player 2 02:17:50 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":8}],"result":null,"preventMethod":false,"methodScopeId":342,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 2 02:17:50 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 02:17:50 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":338,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 2 02:17:50 $DRAW_CARD:  
{"deckType":1} 

 Player 2 02:17:50 $MOVE_CARD:  
{"moveIndex":4,"cardId":105,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 02:17:50 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":105,"flipIfFlipped":false,"playerId":2} 

 Player 2 02:17:50 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":105} 

 Player 2 02:17:50 $FLIP_CARD:  
{"cardId":105} 

 Player 2 02:17:50 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":105} 

 Player 2 02:17:50 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":105}],"result":null,"preventMethod":false,"methodScopeId":338,"scopeIsPlayer":true,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 

 Player 2 02:17:50 $DRAW_CARD:  
{"deckType":1} 

 Player 2 02:17:50 $MOVE_CARD:  
{"moveIndex":5,"cardId":108,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 02:17:51 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":108,"flipIfFlipped":false,"playerId":2} 

 Player 2 02:17:51 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":108} 

 Player 2 02:17:51 $FLIP_CARD:  
{"cardId":108} 

 Player 2 02:17:51 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":108} 

 Player 2 02:17:51 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":108}],"result":null,"preventMethod":false,"methodScopeId":338,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 

 Player 2 02:17:51 $DRAW_CARD:  
{"deckType":1} 

 Player 2 02:17:51 $MOVE_CARD:  
{"moveIndex":6,"cardId":126,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 02:17:51 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":126,"flipIfFlipped":false,"playerId":2} 

 Player 2 02:17:51 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":126} 

 Player 2 02:17:51 $FLIP_CARD:  
{"cardId":126} 

 Player 2 02:17:51 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":126} 

 Player 2 02:17:51 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":126}],"result":null,"preventMethod":false,"methodScopeId":338,"scopeIsPlayer":true,"index":8,"originStackId":-1},"isAfterActivation":true,"index":8} 

 Player 2 02:17:51 $GAME_HAS_STARTED:  

 Player 2 02:17:51 $SET_TURN:  
{"playerId":1} 

 Player 2 02:17:51 $START_TURN:  
{"playerId":1} 

 Player 2 02:17:51 $UPDATE_ACTIONS:  

 Player 1 02:17:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:17:52 $NEXT_STACK_ID:  

 Player 1 02:17:52 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":342,"turnPlayerCardId":342,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"}} 

 Player 1 02:17:52 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":342,"turnPlayerCardId":342,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"}} 

 Player 1 02:17:52 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 02:17:52 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 1 02:17:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add Start Turn Loot Draw 1 "}} 

 Player 1 02:17:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:17:55 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":342,"turnPlayerCardId":342,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"}} 

 Player 1 02:17:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding Start Turn Loot Draw 1"},"childOfId":0} 

 Player 1 02:17:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 1 02:17:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:17:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 1 02:17:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:17:55 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:17:55 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[338,339]} 

 Player 2 02:17:55 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:17:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve Start Turn Loot Draw 1 "}} 

 Player 1 02:17:55 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":1,"creatorCardId":342,"turnPlayerCardId":342,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"}]} 

 Player 1 02:17:55 $DRAW_CARD:  
{"deckType":1} 

 Player 1 02:17:55 $MOVE_CARD:  
{"moveIndex":7,"cardId":130,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 02:17:55 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":130,"flipIfFlipped":false,"playerId":1} 

 Player 1 02:17:55 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":130} 

 Player 1 02:17:55 $FLIP_CARD:  
{"cardId":130} 

 Player 1 02:17:55 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":130} 

 Player 1 02:17:55 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":130}],"result":null,"preventMethod":false,"methodScopeId":342,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 02:17:55 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":1,"text":"Player 1 Has Drawn Loot For Start Turn"} 

 Player 1 02:17:55 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":342,"turnPlayerCardId":342,"stackEffectType":13,"lable":"Player 1 Has Drawn Loot For Start Turn"}} 

 Player 1 02:17:56 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 1 02:17:56 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 02:17:56 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 1 02:17:58 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":1} 

 Player 1 02:17:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve Start Turn Loot Draw 1  "}} 

 Player 1 02:17:58 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":342,"turnPlayerCardId":342,"stackEffectType":13,"lable":"Player 1 Has Drawn Loot For Start Turn"}} 

 Player 1 02:17:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve Start Turn Loot Draw 1"},"childOfId":5} 

 Player 1 02:17:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 1 02:17:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:17:58 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:17:58 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[338,339]} 

 Player 2 02:17:59 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:17:59 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 1 02:17:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 1 02:17:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:17:59 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 1 02:17:59 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 1 02:17:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 1 02:17:59 $CLEAR_SE_VIS:  

 Player 1 02:18:18 $MOVE_CARD:  
{"moveIndex":8,"cardId":246,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Hand"} 

 Player 2 02:18:18 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":246,"flipIfFlipped":true,"playerId":1} 

 Player 1 02:18:18 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[239,234,258,319,314,296,245,301,306,308,279,267,264,315,283,317,295,303,316,227,232,251,293,260,247,275,313,302,300,273,229,230,271,286,252,276,297,257,304,281,266,270,307,321,254,299,320,253,248,305,284,311,312,280,294,259,292,309,261,242,255,269,282,228,244,243,268,323,265,322,250,233,235,277,231,298,291,285,287,263,249,272,274,290,289,241,238,240,288,262,278,237,318,256]} 

 Player 1 02:18:18 $FLIP_CARD:  
{"cardId":246} 

 Player 1 02:18:18 $REMOVE_FROM_PASSIVE_MANAGER:  
{"cardId":310} 

 Player 1 02:18:18 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":246} 

 Player 1 02:18:18 $NEW_MONSTER_ON_PLACE:  
{"cardId":246,"monsterPlaceId":1} 

 Player 1 02:18:18 $NEXT_STACK_ID:  

 Player 1 02:18:18 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":342,"hasLockingStackEffect":false,"itemToPlayCardId":246,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":false,"stackEffectType":1,"lable":"Player 1 is going to activate Curse of Amnesia"}} 

 Player 1 02:18:18 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":342,"hasLockingStackEffect":false,"itemToPlayCardId":246,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":false,"stackEffectType":1,"lable":"Player 1 is going to activate Curse of Amnesia"}} 

 Player 1 02:18:18 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 02:18:18 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 1 02:18:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add Activate Item 2 "}} 

 Player 1 02:18:21 $SHOW_ANNOUNCEMENT:  
{"text":"Player 1 is Choosing Target"} 

 Player 1 02:18:25 $HIDE_ANNOUNCEMENT:  

 Player 1 02:18:25 $SHOW_DECISION:  
{"startCardId":246,"endCardId":342} 

 Player 1 02:18:28 $USE_ITEM:  
{"cardId":246} 

 Player 1 02:18:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:18:28 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":342,"hasLockingStackEffect":false,"itemToPlayCardId":246,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1,"lable":"Player 1 is going to activate Curse of Amnesia"}} 

 Player 1 02:18:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding Activate Item 2"},"childOfId":10} 

 Player 1 02:18:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 1 02:18:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:18:28 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 1 02:18:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 1 02:18:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:18:28 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:18:28 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[338,339]} 

 Player 2 02:18:28 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:18:28 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 1 02:18:28 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 1 02:18:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve Activate Item 2 "}} 

 Player 1 02:18:28 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":2,"creatorCardId":342,"hasLockingStackEffect":false,"itemToPlayCardId":246,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1,"lable":"Player 1 is going to activate Curse of Amnesia"}]} 

 Player 1 02:18:28 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":246,"particleType":6} 

 Player 1 02:18:30 $DISABLE_PARTICLE_EFFECT:  
{"cardId":246,"particleType":6} 

 Player 1 02:18:30 $CARD_ADD_TRINKET:  
{"cardId":246,"playerId":1,"addMuiliEffect":false} 

 Player 1 02:18:30 $REGISTER_PASSIVE_ITEM:  
{"cardId":246} 

 Player 1 02:18:30 $MOVE_CARD:  
{"moveIndex":9,"cardId":246,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 

 Player 2 02:18:31 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":246,"flipIfFlipped":true,"playerId":1} 

 Player 1 02:18:31 $ADD_AN_ITEM:  
{"playerId":1,"cardId":246,"isReward":true} 

 Player 1 02:18:31 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":246}],"result":true,"preventMethod":false,"methodScopeId":342,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 1 02:18:31 $PLAYER_ADD_CURSE:  
{"playerId":1,"cardId":246} 

 Player 1 02:18:31 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":2,"text":"Player 1 has activated Curse of Amnesia"} 

 Player 1 02:18:31 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ACTIVATE_ITEM","args":[{"type":0,"number":246}],"result":null,"preventMethod":false,"methodScopeId":342,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 1 02:18:31 $REMOVE_MONSTER:  
{"holderId":1,"monsterId":246} 

 Player 1 02:18:31 $REGISTER_PASSIVE_ITEM:  
{"cardId":310} 

 Player 1 02:18:31 $GET_NEXT_MONSTER:  
{"monsterPlaceId":1} 

 Player 1 02:18:31 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":342,"hasLockingStackEffect":false,"itemToPlayCardId":246,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1,"lable":"Player 1 has activated Curse of Amnesia"}} 

 Player 1 02:18:31 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 1 02:18:31 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 02:18:31 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 1 02:18:34 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":2} 

 Player 1 02:18:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve Activate Item 2  "}} 

 Player 1 02:18:34 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":342,"hasLockingStackEffect":false,"itemToPlayCardId":246,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1,"lable":"Player 1 has activated Curse of Amnesia"}} 

 Player 1 02:18:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve Activate Item 2"},"childOfId":15} 

 Player 1 02:18:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 1 02:18:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:18:34 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:18:34 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[338,339]} 

 Player 2 02:18:34 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:18:34 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 1 02:18:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 1 02:18:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:18:34 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 1 02:18:34 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 1 02:18:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 1 02:18:34 $CLEAR_SE_VIS:  

 Player 1 02:18:37 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_END_TURN","args":[],"result":null,"preventMethod":false,"methodScopeId":342,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1} 

 Player 1 02:18:37 $NEXT_STACK_ID:  

 Player 1 02:18:37 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":3,"creatorCardId":342,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":246,"effectToDo":{"effectName":"DiscardLoot","cardEffectNum":0,"cardPlayerId":1,"cardId":246,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14,"lable":"Activate Curse of Amnesia Effect DiscardLoot<DiscardLoot>"}} 

 Player 1 02:18:37 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":3,"creatorCardId":342,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":246,"effectToDo":{"effectName":"DiscardLoot","cardEffectNum":0,"cardPlayerId":1,"cardId":246,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14,"lable":"Activate Curse of Amnesia Effect DiscardLoot<DiscardLoot>"}} 

 Player 1 02:18:37 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 02:18:37 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 1 02:18:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add Activate Passive Effect 3 "}} 

 Player 1 02:18:40 $SHOW_ANNOUNCEMENT:  
{"text":"Player 1 is Choosing Target"} 

 Player 1 02:18:47 $HIDE_ANNOUNCEMENT:  

 Player 1 02:18:47 $SHOW_DECISION:  
{"startCardId":246,"endCardId":8} 

 Player 1 02:18:50 $SHOW_ANNOUNCEMENT:  
{"text":"Player 1 is Choosing Target"} 

 Player 1 02:19:00 $HIDE_ANNOUNCEMENT:  

 Player 1 02:19:00 $SHOW_DECISION:  
{"startCardId":246,"endCardId":35} 

 Player 1 02:19:03 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":3,"text":"Activate Curse of Amnesia effect DiscardLoot<DiscardLoot>"} 

 Player 1 02:19:03 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[8,35],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":342,"effectCardPlayer":342},"entityId":3,"creatorCardId":342,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":246,"effectToDo":{"effectName":"DiscardLoot","cardEffectNum":0,"cardPlayerId":1,"cardId":246,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14,"lable":"Activate Curse of Amnesia effect DiscardLoot<DiscardLoot>"}} 

 Player 1 02:19:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding Activate Passive Effect 3"},"childOfId":20} 

 Player 1 02:19:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 1 02:19:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:19:03 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 1 02:19:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 1 02:19:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:19:03 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:19:03 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[338,339]} 

 Player 2 02:19:04 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:19:04 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 1 02:19:04 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 1 02:19:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve Activate Passive Effect 3 "}} 

 Player 1 02:19:04 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"effectCollectedData":{"effectTargets":[8,35],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":342,"effectCardPlayer":342},"entityId":3,"creatorCardId":342,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":246,"effectToDo":{"effectName":"DiscardLoot","cardEffectNum":0,"cardPlayerId":1,"cardId":246,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14,"lable":"Activate Curse of Amnesia effect DiscardLoot<DiscardLoot>"}]} 

 Player 1 02:19:04 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":246,"particleType":6} 

 Player 1 02:19:06 $DISABLE_PARTICLE_EFFECT:  
{"cardId":246,"particleType":6} 

 Player 1 02:19:06 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":8} 

 Player 1 02:19:06 $MOVE_CARD:  
{"moveIndex":10,"cardId":8,"placeID":347,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 02:19:06 $MOVE_CARD_END:  
{"moveIndex":10,"cardId":8,"flipIfFlipped":true,"playerId":1} 

 Player 1 02:19:06 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":8} 

 Player 1 02:19:06 $DISCARD_LOOT:  
{"playerId":1,"cardId":8} 

 Player 1 02:19:06 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_LOSE_LOOT","args":[{"type":0,"number":8}],"result":null,"preventMethod":false,"methodScopeId":342,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 1 02:19:06 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":35} 

 Player 1 02:19:06 $MOVE_CARD:  
{"moveIndex":11,"cardId":35,"placeID":347,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 02:19:07 $MOVE_CARD_END:  
{"moveIndex":11,"cardId":35,"flipIfFlipped":true,"playerId":1} 

 Player 1 02:19:07 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":35} 

 Player 1 02:19:07 $DISCARD_LOOT:  
{"playerId":1,"cardId":35} 

 Player 1 02:19:07 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_LOSE_LOOT","args":[{"type":0,"number":35}],"result":null,"preventMethod":false,"methodScopeId":342,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 1 02:19:07 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_END_TURN","args":[],"result":null,"preventMethod":false,"methodScopeId":342,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1} 

 Player 1 02:19:07 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":3,"text":"Activated Curse of Amnesia Effect"} 

 Player 1 02:19:07 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[8,35],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":342,"effectCardPlayer":342},"entityId":3,"creatorCardId":342,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":246,"effectToDo":{"effectName":"DiscardLoot","cardEffectNum":0,"cardPlayerId":1,"cardId":246,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14,"lable":"Activated Curse of Amnesia Effect"}} 

 Player 1 02:19:07 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 1 02:19:07 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 02:19:07 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 1 02:19:10 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":3} 

 Player 1 02:19:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Remove After Resolve Activate Passive Effect 3  "}} 

 Player 1 02:19:10 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[8,35],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":342,"effectCardPlayer":342},"entityId":3,"creatorCardId":342,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":246,"effectToDo":{"effectName":"DiscardLoot","cardEffectNum":0,"cardPlayerId":1,"cardId":246,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14,"lable":"Activated Curse of Amnesia Effect"}} 

 Player 1 02:19:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Response Remove After Resolve Activate Passive Effect 3"},"childOfId":25} 

 Player 1 02:19:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Wait For Response From Player 2 "},"childOfId":25} 

 Player 1 02:19:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:19:10 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:19:10 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[338,339]} 

 Player 2 02:19:10 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:19:10 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 1 02:19:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 1 "},"childOfId":25} 

 Player 1 02:19:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:19:10 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 1 02:19:10 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 1 02:19:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Stack Was Emptied "}} 

 Player 1 02:19:10 $CLEAR_SE_VIS:  

 Player 1 02:19:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:19:10 $CLEAR_SE_VIS:  

 Player 1 02:19:10 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 1 02:19:10 $CLEAR_SE_VIS:  

 Player 1 02:19:10 $END_TURN:  

 Player 1 02:19:10 $SET_TURN:  
{"playerId":2} 

 Player 1 02:19:10 $START_TURN:  
{"playerId":2} 

 Player 2 02:19:10 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 02:19:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:19:10 $NEXT_STACK_ID:  

 Player 2 02:19:10 $ADD_TO_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":338,"turnPlayerCardId":338,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}} 

 Player 2 02:19:10 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":338,"turnPlayerCardId":338,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}} 

 Player 2 02:19:10 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 02:19:10 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 1 02:19:10 $STACK_EMPTIED:  
{"playerId":2} 

 Player 2 02:19:10 $CLEAR_SE_VIS:  

 Player 2 02:19:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Add Start Turn Loot Draw 4 "}} 

 Player 2 02:19:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:19:13 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":338,"turnPlayerCardId":338,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}} 

 Player 2 02:19:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Response Adding Start Turn Loot Draw 4"},"childOfId":30} 

 Player 2 02:19:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Wait For Response From Player 2 "},"childOfId":30} 

 Player 2 02:19:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:19:13 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 2 02:19:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":30} 

 Player 2 02:19:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:19:13 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:19:13 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[342,343]} 

 Player 1 02:19:14 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:19:14 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 2 02:19:14 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 2 02:19:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Resolve Start Turn Loot Draw 4 "}} 

 Player 2 02:19:14 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":4,"creatorCardId":338,"turnPlayerCardId":338,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}]} 

 Player 2 02:19:14 $DRAW_CARD:  
{"deckType":1} 

 Player 2 02:19:14 $MOVE_CARD:  
{"moveIndex":12,"cardId":83,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 02:19:14 $MOVE_CARD_END:  
{"moveIndex":12,"cardId":83,"flipIfFlipped":false,"playerId":2} 

 Player 2 02:19:14 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":83} 

 Player 2 02:19:14 $FLIP_CARD:  
{"cardId":83} 

 Player 2 02:19:14 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":83} 

 Player 2 02:19:14 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":83}],"result":null,"preventMethod":false,"methodScopeId":338,"scopeIsPlayer":true,"index":9,"originStackId":-1},"isAfterActivation":true,"index":9} 

 Player 2 02:19:14 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":4,"text":"Player 2 Has Drawn Loot For Start Turn"} 

 Player 2 02:19:14 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":338,"turnPlayerCardId":338,"stackEffectType":13,"lable":"Player 2 Has Drawn Loot For Start Turn"}} 

 Player 2 02:19:14 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 02:19:14 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 02:19:14 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 2 02:19:17 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":4} 

 Player 2 02:19:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Remove After Resolve Start Turn Loot Draw 4  "}} 

 Player 2 02:19:17 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":338,"turnPlayerCardId":338,"stackEffectType":13,"lable":"Player 2 Has Drawn Loot For Start Turn"}} 

 Player 2 02:19:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Response Remove After Resolve Start Turn Loot Draw 4"},"childOfId":35} 

 Player 2 02:19:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Wait For Response From Player 1 "},"childOfId":35} 

 Player 2 02:19:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:19:17 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:19:17 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[342,343]} 

 Player 1 02:19:17 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:19:17 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 2 02:19:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 2 "},"childOfId":35} 

 Player 2 02:19:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:19:18 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 2 02:19:18 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 2 02:19:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Stack Was Emptied "}} 

 Player 2 02:19:18 $CLEAR_SE_VIS:  

 Player 2 02:19:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:19:21 $CLEAR_SE_VIS:  

 Player 2 02:19:21 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 2 02:19:21 $CLEAR_SE_VIS:  

 Player 2 02:19:21 $END_TURN:  

 Player 2 02:19:21 $SET_TURN:  
{"playerId":1} 

 Player 2 02:19:21 $START_TURN:  
{"playerId":1} 

 Player 1 02:19:21 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 02:19:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:19:21 $NEXT_STACK_ID:  

 Player 1 02:19:21 $ADD_TO_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":342,"turnPlayerCardId":342,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"}} 

 Player 1 02:19:21 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":342,"turnPlayerCardId":342,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"}} 

 Player 1 02:19:21 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 02:19:21 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 2 02:19:21 $STACK_EMPTIED:  
{"playerId":1} 

 Player 1 02:19:22 $CLEAR_SE_VIS:  

 Player 1 02:19:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Add Start Turn Loot Draw 5 "}} 

 Player 1 02:19:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:19:24 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":342,"turnPlayerCardId":342,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"}} 

 Player 1 02:19:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Response Adding Start Turn Loot Draw 5"},"childOfId":40} 

 Player 1 02:19:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Wait For Response From Player 1 "},"childOfId":40} 

 Player 1 02:19:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:19:24 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 1 02:19:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 2 "},"childOfId":40} 

 Player 1 02:19:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:19:25 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:19:25 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[338,339]} 

 Player 2 02:19:25 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:19:25 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 1 02:19:25 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 1 02:19:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Resolve Start Turn Loot Draw 5 "}} 

 Player 1 02:19:25 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":5,"creatorCardId":342,"turnPlayerCardId":342,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"}]} 

 Player 1 02:19:25 $DRAW_CARD:  
{"deckType":1} 

 Player 1 02:19:25 $MOVE_CARD:  
{"moveIndex":13,"cardId":13,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 02:19:25 $MOVE_CARD_END:  
{"moveIndex":13,"cardId":13,"flipIfFlipped":false,"playerId":1} 

 Player 1 02:19:25 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":13} 

 Player 1 02:19:25 $FLIP_CARD:  
{"cardId":13} 

 Player 1 02:19:25 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":13} 

 Player 1 02:19:25 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":13}],"result":null,"preventMethod":false,"methodScopeId":342,"scopeIsPlayer":true,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 

 Player 1 02:19:25 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":5,"text":"Player 1 Has Drawn Loot For Start Turn"} 

 Player 1 02:19:25 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":342,"turnPlayerCardId":342,"stackEffectType":13,"lable":"Player 1 Has Drawn Loot For Start Turn"}} 

 Player 1 02:19:25 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 1 02:19:25 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 02:19:25 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 1 02:19:28 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":5} 

 Player 1 02:19:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Remove After Resolve Start Turn Loot Draw 5  "}} 

 Player 1 02:19:28 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":342,"turnPlayerCardId":342,"stackEffectType":13,"lable":"Player 1 Has Drawn Loot For Start Turn"}} 

 Player 1 02:19:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Response Remove After Resolve Start Turn Loot Draw 5"},"childOfId":45} 

 Player 1 02:19:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Wait For Response From Player 2 "},"childOfId":45} 

 Player 1 02:19:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:19:28 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:19:28 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[338,339]} 

 Player 2 02:19:28 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:19:28 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 1 02:19:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Wait For Response From Player 1 "},"childOfId":45} 

 Player 1 02:19:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:19:29 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 1 02:19:29 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 1 02:19:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Stack Was Emptied "}} 

 Player 1 02:19:29 $CLEAR_SE_VIS:  

 Player 1 02:19:39 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_END_TURN","args":[],"result":null,"preventMethod":false,"methodScopeId":342,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":false,"index":2} 

 Player 1 02:19:39 $NEXT_STACK_ID:  

 Player 1 02:19:39 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":6,"creatorCardId":342,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":246,"effectToDo":{"effectName":"DiscardLoot","cardEffectNum":0,"cardPlayerId":1,"cardId":246,"effctType":0},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14,"lable":"Activate Curse of Amnesia Effect DiscardLoot<DiscardLoot>"}} 

 Player 1 02:19:39 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":6,"creatorCardId":342,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":246,"effectToDo":{"effectName":"DiscardLoot","cardEffectNum":0,"cardPlayerId":1,"cardId":246,"effctType":0},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14,"lable":"Activate Curse of Amnesia Effect DiscardLoot<DiscardLoot>"}} 

 Player 1 02:19:39 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 02:19:39 $SHOW_STACK_EFFECT:  
{"effectId":6} 

 Player 1 02:19:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Add Activate Passive Effect 6 "}} 

 Player 1 02:19:42 $SHOW_ANNOUNCEMENT:  
{"text":"Player 1 is Choosing Target"} 

 Player 1 02:19:45 $HIDE_ANNOUNCEMENT:  

 Player 1 02:19:45 $SHOW_DECISION:  
{"startCardId":246,"endCardId":13} 

 Player 1 02:19:48 $SHOW_ANNOUNCEMENT:  
{"text":"Player 1 is Choosing Target"} 

 Player 1 02:19:54 $HIDE_ANNOUNCEMENT:  

 Player 1 02:19:54 $SHOW_DECISION:  
{"startCardId":246,"endCardId":86} 

 Player 1 02:19:57 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":6,"text":"Activate Curse of Amnesia effect DiscardLoot<DiscardLoot>"} 

 Player 1 02:19:57 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[13,86],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":342,"effectCardPlayer":342},"entityId":6,"creatorCardId":342,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":246,"effectToDo":{"effectName":"DiscardLoot","cardEffectNum":0,"cardPlayerId":1,"cardId":246,"effctType":0},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14,"lable":"Activate Curse of Amnesia effect DiscardLoot<DiscardLoot>"}} 

 Player 1 02:19:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Response Adding Activate Passive Effect 6"},"childOfId":50} 

 Player 1 02:19:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Wait For Response From Player 1 "},"childOfId":50} 

 Player 1 02:19:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:19:57 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 1 02:19:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Wait For Response From Player 2 "},"childOfId":50} 

 Player 1 02:19:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:19:57 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:19:57 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[338,339]} 

 Player 2 02:19:57 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:19:57 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 1 02:19:57 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 1 02:19:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Resolve Activate Passive Effect 6 "}} 

 Player 1 02:19:57 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"effectCollectedData":{"effectTargets":[13,86],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":342,"effectCardPlayer":342},"entityId":6,"creatorCardId":342,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":246,"effectToDo":{"effectName":"DiscardLoot","cardEffectNum":0,"cardPlayerId":1,"cardId":246,"effctType":0},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14,"lable":"Activate Curse of Amnesia effect DiscardLoot<DiscardLoot>"}]} 

 Player 1 02:19:57 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":246,"particleType":6} 

 Player 1 02:19:59 $DISABLE_PARTICLE_EFFECT:  
{"cardId":246,"particleType":6} 

 Player 1 02:19:59 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":13} 

 Player 1 02:19:59 $MOVE_CARD:  
{"moveIndex":14,"cardId":13,"placeID":347,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 02:20:00 $MOVE_CARD_END:  
{"moveIndex":14,"cardId":13,"flipIfFlipped":true,"playerId":1} 

 Player 1 02:20:00 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":13} 

 Player 1 02:20:00 $DISCARD_LOOT:  
{"playerId":1,"cardId":13} 

 Player 1 02:20:00 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_LOSE_LOOT","args":[{"type":0,"number":13}],"result":null,"preventMethod":false,"methodScopeId":342,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 

 Player 1 02:20:00 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":86} 

 Player 1 02:20:00 $MOVE_CARD:  
{"moveIndex":15,"cardId":86,"placeID":347,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 02:20:00 $MOVE_CARD_END:  
{"moveIndex":15,"cardId":86,"flipIfFlipped":true,"playerId":1} 

 Player 1 02:20:00 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":86} 

 Player 1 02:20:00 $DISCARD_LOOT:  
{"playerId":1,"cardId":86} 

 Player 1 02:20:00 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_LOSE_LOOT","args":[{"type":0,"number":86}],"result":null,"preventMethod":false,"methodScopeId":342,"scopeIsPlayer":true,"index":8,"originStackId":-1},"isAfterActivation":true,"index":8} 

 Player 1 02:20:00 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_END_TURN","args":[],"result":null,"preventMethod":false,"methodScopeId":342,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":false,"index":2} 

 Player 1 02:20:00 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":6,"text":"Activated Curse of Amnesia Effect"} 

 Player 1 02:20:00 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[13,86],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":342,"effectCardPlayer":342},"entityId":6,"creatorCardId":342,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":246,"effectToDo":{"effectName":"DiscardLoot","cardEffectNum":0,"cardPlayerId":1,"cardId":246,"effctType":0},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14,"lable":"Activated Curse of Amnesia Effect"}} 

 Player 1 02:20:00 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 1 02:20:00 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 02:20:01 $SHOW_STACK_EFFECT:  
{"effectId":6} 

 Player 1 02:20:03 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":6} 

 Player 1 02:20:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Remove After Resolve Activate Passive Effect 6  "}} 

 Player 1 02:20:03 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[13,86],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":342,"effectCardPlayer":342},"entityId":6,"creatorCardId":342,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":246,"effectToDo":{"effectName":"DiscardLoot","cardEffectNum":0,"cardPlayerId":1,"cardId":246,"effctType":0},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14,"lable":"Activated Curse of Amnesia Effect"}} 

 Player 1 02:20:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":56,"_text":"Response Remove After Resolve Activate Passive Effect 6"},"childOfId":55} 

 Player 1 02:20:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":57,"_text":"Wait For Response From Player 2 "},"childOfId":55} 

 Player 1 02:20:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:20:03 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:20:03 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[338,339]} 

 Player 2 02:20:03 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:20:04 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 1 02:20:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":58,"_text":"Wait For Response From Player 1 "},"childOfId":55} 

 Player 1 02:20:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:20:04 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 1 02:20:04 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 1 02:20:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":59,"_text":"Stack Was Emptied "}} 

 Player 1 02:20:04 $CLEAR_SE_VIS:  

 Player 1 02:20:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:20:04 $CLEAR_SE_VIS:  

 Player 1 02:20:04 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 1 02:20:04 $CLEAR_SE_VIS:  

 Player 1 02:20:04 $END_TURN:  

 Player 1 02:20:04 $SET_TURN:  
{"playerId":2} 

 Player 1 02:20:04 $START_TURN:  
{"playerId":2} 

 Player 2 02:20:04 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 02:20:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:20:04 $NEXT_STACK_ID:  

 Player 2 02:20:04 $ADD_TO_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":338,"turnPlayerCardId":338,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}} 

 Player 2 02:20:04 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":338,"turnPlayerCardId":338,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}} 

 Player 2 02:20:04 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 02:20:04 $SHOW_STACK_EFFECT:  
{"effectId":7} 

 Player 1 02:20:04 $STACK_EMPTIED:  
{"playerId":2} 

 Player 2 02:20:04 $CLEAR_SE_VIS:  

 Player 2 02:20:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":60,"_text":"Add Start Turn Loot Draw 7 "}} 

 Player 2 02:20:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:20:07 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":338,"turnPlayerCardId":338,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}} 

 Player 2 02:20:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":61,"_text":"Response Adding Start Turn Loot Draw 7"},"childOfId":60} 

 Player 2 02:20:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":62,"_text":"Wait For Response From Player 2 "},"childOfId":60} 

 Player 2 02:20:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:20:07 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 2 02:20:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":63,"_text":"Wait For Response From Player 1 "},"childOfId":60} 

 Player 2 02:20:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:20:07 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:20:07 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[342,343]} 

 Player 1 02:20:07 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:20:07 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 2 02:20:07 $ACTION_MASSAGE_REMOVE:  
{"id":61} 

 Player 2 02:20:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":64,"_text":"Resolve Start Turn Loot Draw 7 "}} 

 Player 2 02:20:07 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":7,"creatorCardId":338,"turnPlayerCardId":338,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}]} 

 Player 2 02:20:07 $DRAW_CARD:  
{"deckType":1} 

 Player 2 02:20:07 $MOVE_CARD:  
{"moveIndex":16,"cardId":65,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 02:20:08 $MOVE_CARD_END:  
{"moveIndex":16,"cardId":65,"flipIfFlipped":false,"playerId":2} 

 Player 2 02:20:08 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":65} 

 Player 2 02:20:08 $FLIP_CARD:  
{"cardId":65} 

 Player 2 02:20:08 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":65} 

 Player 2 02:20:08 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":65}],"result":null,"preventMethod":false,"methodScopeId":338,"scopeIsPlayer":true,"index":10,"originStackId":-1},"isAfterActivation":true,"index":10} 

 Player 2 02:20:08 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":7,"text":"Player 2 Has Drawn Loot For Start Turn"} 

 Player 2 02:20:08 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":338,"turnPlayerCardId":338,"stackEffectType":13,"lable":"Player 2 Has Drawn Loot For Start Turn"}} 

 Player 2 02:20:08 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 02:20:08 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 02:20:08 $SHOW_STACK_EFFECT:  
{"effectId":7} 

 Player 2 02:20:11 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":7} 

 Player 2 02:20:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":65,"_text":"Remove After Resolve Start Turn Loot Draw 7  "}} 

 Player 2 02:20:11 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":338,"turnPlayerCardId":338,"stackEffectType":13,"lable":"Player 2 Has Drawn Loot For Start Turn"}} 

 Player 2 02:20:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":66,"_text":"Response Remove After Resolve Start Turn Loot Draw 7"},"childOfId":65} 

 Player 2 02:20:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":67,"_text":"Wait For Response From Player 1 "},"childOfId":65} 

 Player 2 02:20:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:20:11 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:20:11 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[342,343]} 

 Player 1 02:20:11 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:20:11 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 2 02:20:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":68,"_text":"Wait For Response From Player 2 "},"childOfId":65} 

 Player 2 02:20:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:20:11 $ACTION_MASSAGE_REMOVE:  
{"id":68} 

 Player 2 02:20:11 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 2 02:20:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":69,"_text":"Stack Was Emptied "}} 

 Player 2 02:20:11 $CLEAR_SE_VIS:  

 Player 2 02:20:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:20:15 $CLEAR_SE_VIS:  

 Player 2 02:20:15 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 2 02:20:15 $CLEAR_SE_VIS:  

 Player 2 02:20:15 $END_TURN:  

 Player 2 02:20:15 $SET_TURN:  
{"playerId":1} 

 Player 2 02:20:15 $START_TURN:  
{"playerId":1} 

 Player 1 02:20:15 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 02:20:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:20:16 $NEXT_STACK_ID:  

 Player 1 02:20:16 $ADD_TO_STACK:  
{"stackEffect":{"entityId":8,"creatorCardId":342,"turnPlayerCardId":342,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"}} 

 Player 1 02:20:16 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":342,"turnPlayerCardId":342,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"}} 

 Player 1 02:20:16 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 02:20:16 $SHOW_STACK_EFFECT:  
{"effectId":8} 

 Player 2 02:20:16 $STACK_EMPTIED:  
{"playerId":1} 

 Player 1 02:20:16 $CLEAR_SE_VIS:  

 Player 1 02:20:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":70,"_text":"Add Start Turn Loot Draw 8 "}} 

 Player 1 02:20:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:20:19 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":342,"turnPlayerCardId":342,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"}} 

 Player 1 02:20:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":71,"_text":"Response Adding Start Turn Loot Draw 8"},"childOfId":70} 

 Player 1 02:20:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":72,"_text":"Wait For Response From Player 1 "},"childOfId":70} 

 Player 1 02:20:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:20:19 $ACTION_MASSAGE_REMOVE:  
{"id":72} 

 Player 1 02:20:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":73,"_text":"Wait For Response From Player 2 "},"childOfId":70} 

 Player 1 02:20:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:20:19 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:20:19 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[338,339]} 

 Player 2 02:20:19 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:20:19 $ACTION_MASSAGE_REMOVE:  
{"id":73} 

 Player 1 02:20:19 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 1 02:20:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":74,"_text":"Resolve Start Turn Loot Draw 8 "}} 

 Player 1 02:20:19 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":8,"creatorCardId":342,"turnPlayerCardId":342,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"}]} 

 Player 1 02:20:19 $DRAW_CARD:  
{"deckType":1} 

 Player 1 02:20:19 $MOVE_CARD:  
{"moveIndex":17,"cardId":69,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 02:20:19 $MOVE_CARD_END:  
{"moveIndex":17,"cardId":69,"flipIfFlipped":false,"playerId":1} 

 Player 1 02:20:19 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":69} 

 Player 1 02:20:20 $FLIP_CARD:  
{"cardId":69} 

 Player 1 02:20:20 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":69} 

 Player 1 02:20:20 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":69}],"result":null,"preventMethod":false,"methodScopeId":342,"scopeIsPlayer":true,"index":9,"originStackId":-1},"isAfterActivation":true,"index":9} 

 Player 1 02:20:20 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":8,"text":"Player 1 Has Drawn Loot For Start Turn"} 

 Player 1 02:20:20 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":342,"turnPlayerCardId":342,"stackEffectType":13,"lable":"Player 1 Has Drawn Loot For Start Turn"}} 

 Player 1 02:20:20 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 1 02:20:20 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 02:20:20 $SHOW_STACK_EFFECT:  
{"effectId":8} 

 Player 1 02:20:22 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":8} 

 Player 1 02:20:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":75,"_text":"Remove After Resolve Start Turn Loot Draw 8  "}} 

 Player 1 02:20:23 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":8,"creatorCardId":342,"turnPlayerCardId":342,"stackEffectType":13,"lable":"Player 1 Has Drawn Loot For Start Turn"}} 

 Player 1 02:20:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":76,"_text":"Response Remove After Resolve Start Turn Loot Draw 8"},"childOfId":75} 

 Player 1 02:20:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":77,"_text":"Wait For Response From Player 2 "},"childOfId":75} 

 Player 1 02:20:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:20:23 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:20:23 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[338,339]} 

 Player 2 02:20:23 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:20:23 $ACTION_MASSAGE_REMOVE:  
{"id":77} 

 Player 1 02:20:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":78,"_text":"Wait For Response From Player 1 "},"childOfId":75} 

 Player 1 02:20:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:20:23 $ACTION_MASSAGE_REMOVE:  
{"id":78} 

 Player 1 02:20:23 $ACTION_MASSAGE_REMOVE:  
{"id":76} 

 Player 1 02:20:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":79,"_text":"Stack Was Emptied "}} 

 Player 1 02:20:23 $CLEAR_SE_VIS:  

 Player 1 02:20:53 $NEXT_STACK_ID:  

 Player 1 02:20:53 $ADD_TO_STACK:  
{"stackEffect":{"entityId":9,"creatorCardId":342,"attackingPlayerCardId":342,"idOfCardBeingAttacked":310,"stackEffectType":4,"lable":"Player 1 declared attack on The Bloat"}} 

 Player 1 02:20:53 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":342,"attackingPlayerCardId":342,"idOfCardBeingAttacked":310,"stackEffectType":4,"lable":"Player 1 declared attack on The Bloat"}} 

 Player 1 02:20:53 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 02:20:53 $SHOW_STACK_EFFECT:  
{"effectId":9} 

 Player 1 02:20:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":80,"_text":"Add Player Declare Attack On Monster 9 "}} 

 Player 1 02:20:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:20:56 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":342,"attackingPlayerCardId":342,"idOfCardBeingAttacked":310,"stackEffectType":4,"lable":"Player 1 declared attack on The Bloat"}} 

 Player 1 02:20:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":81,"_text":"Response Adding Player Declare Attack On Monster 9"},"childOfId":80} 

 Player 1 02:20:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":82,"_text":"Wait For Response From Player 1 "},"childOfId":80} 

 Player 1 02:20:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:20:56 $ACTION_MASSAGE_REMOVE:  
{"id":82} 

 Player 1 02:20:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":83,"_text":"Wait For Response From Player 2 "},"childOfId":80} 

 Player 1 02:20:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:20:56 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:20:56 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[338,339]} 

 Player 2 02:20:57 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:20:57 $ACTION_MASSAGE_REMOVE:  
{"id":83} 

 Player 1 02:20:57 $ACTION_MASSAGE_REMOVE:  
{"id":81} 

 Player 1 02:20:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":84,"_text":"Resolve Player Declare Attack On Monster 9 "}} 

 Player 1 02:20:57 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":9,"creatorCardId":342,"attackingPlayerCardId":342,"idOfCardBeingAttacked":310,"stackEffectType":4,"lable":"Player 1 declared attack on The Bloat"}]} 

 Player 1 02:20:57 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":310,"particleType":5} 

 Player 1 02:20:57 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":9,"text":"Player 1 Has Entered Battle with The Bloat"} 

 Player 1 02:20:57 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":342,"scopeIsPlayer":true,"index":10,"originStackId":9},"isAfterActivation":true,"index":10} 

 Player 1 02:20:57 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":342,"attackingPlayerCardId":342,"idOfCardBeingAttacked":310,"stackEffectType":4,"lable":"Player 1 Has Entered Battle with The Bloat"}} 

 Player 1 02:20:57 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 1 02:20:57 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 02:20:57 $SHOW_STACK_EFFECT:  
{"effectId":9} 

 Player 1 02:21:00 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":9} 

 Player 1 02:21:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":85,"_text":"Remove After Resolve Player Declare Attack On Monster 9  "}} 

 Player 1 02:21:00 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":9,"creatorCardId":342,"attackingPlayerCardId":342,"idOfCardBeingAttacked":310,"stackEffectType":4,"lable":"Player 1 Has Entered Battle with The Bloat"}} 

 Player 1 02:21:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":86,"_text":"Response Remove After Resolve Player Declare Attack On Monster 9"},"childOfId":85} 

 Player 1 02:21:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":87,"_text":"Wait For Response From Player 2 "},"childOfId":85} 

 Player 1 02:21:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:21:00 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:21:00 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[338,339]} 

 Player 2 02:21:00 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:21:00 $ACTION_MASSAGE_REMOVE:  
{"id":87} 

 Player 1 02:21:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":88,"_text":"Wait For Response From Player 1 "},"childOfId":85} 

 Player 1 02:21:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:21:00 $ACTION_MASSAGE_REMOVE:  
{"id":88} 

 Player 1 02:21:00 $ACTION_MASSAGE_REMOVE:  
{"id":86} 

 Player 1 02:21:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":89,"_text":"Stack Was Emptied "}} 

 Player 1 02:21:00 $CLEAR_SE_VIS:  

 Player 1 02:21:01 $NEXT_STACK_ID:  

 Player 1 02:21:01 $ADD_TO_STACK:  
{"stackEffect":{"entityId":10,"creatorCardId":342,"rollingPlayerCardId":342,"stackEffectType":2,"attackedMonsterCardId":310,"lable":"Player 1 is rolling against The Bloat<Monster>"}} 

 Player 1 02:21:01 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":342,"rollingPlayerCardId":342,"stackEffectType":2,"attackedMonsterCardId":310,"lable":"Player 1 is rolling against The Bloat<Monster>"}} 

 Player 1 02:21:01 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 02:21:01 $SHOW_STACK_EFFECT:  
{"effectId":10} 

 Player 1 02:21:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":90,"_text":"Add Player Attack Roll On Monster 10 "}} 

 Player 1 02:21:04 $ROLL_DICE:  
{"playerId":1} 

 Player 1 02:21:05 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":4} 

 Player 1 02:21:05 $UPDATE_STACK_VIS:  
{"stackId":10,"text":"player rolled 4 vs The Bloat<Monster>"} 

 Player 1 02:21:06 $SHOW_DICE_ROLL:  
{"stackId":10} 

 Player 1 02:21:08 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":10,"text":"Player 1 rolled 4 vs The Bloat<Monster>"} 

 Player 1 02:21:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:21:09 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":342,"numberRolled":4,"rollingPlayerCardId":342,"stackEffectType":2,"attackedMonsterCardId":310,"lable":"Player 1 rolled 4 vs The Bloat<Monster>"}} 

 Player 1 02:21:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":91,"_text":"Response Adding Player Attack Roll On Monster 10"},"childOfId":90} 

 Player 1 02:21:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":92,"_text":"Wait For Response From Player 1 "},"childOfId":90} 

 Player 1 02:21:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:21:09 $ACTION_MASSAGE_REMOVE:  
{"id":92} 

 Player 1 02:21:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":93,"_text":"Wait For Response From Player 2 "},"childOfId":90} 

 Player 1 02:21:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:21:09 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:21:09 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[338,339]} 

 Player 2 02:21:09 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:21:09 $ACTION_MASSAGE_REMOVE:  
{"id":93} 

 Player 1 02:21:09 $ACTION_MASSAGE_REMOVE:  
{"id":91} 

 Player 1 02:21:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":94,"_text":"Resolve Player Attack Roll On Monster 10 "}} 

 Player 1 02:21:09 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":10,"creatorCardId":342,"numberRolled":4,"rollingPlayerCardId":342,"stackEffectType":2,"attackedMonsterCardId":310,"lable":"Player 1 rolled 4 vs The Bloat<Monster>"}]} 

 Player 1 02:21:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":95,"_text":"Added 0 to original roll"}} 

 Player 1 02:21:09 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":10,"text":"Player 1 Rolled 1 Against The Bloat<Monster> 4"} 

 Player 1 02:21:09 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":10,"text":"Player 1 Roll Miss"} 

 Player 1 02:21:09 $NEXT_STACK_ID:  

 Player 1 02:21:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:21:09 $CLEAR_SE_VIS:  

 Player 1 02:21:09 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":342,"entityToDoDamageCardId":310,"entityToTakeDamageCardId":342,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1,"lable":"The Bloat is going to hurt Samson"}} 

 Player 1 02:21:09 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":342,"numberRolled":4,"rollingPlayerCardId":342,"stackEffectType":2,"attackedMonsterCardId":310,"lable":"Player 1 Roll Miss"}} 

 Player 1 02:21:09 $REPLACE_STACK:  
{"currentStack":[{"entityId":11,"creatorCardId":342,"entityToDoDamageCardId":310,"entityToTakeDamageCardId":342,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1,"lable":"The Bloat is going to hurt Samson"},{"entityId":10,"creatorCardId":342,"numberRolled":4,"rollingPlayerCardId":342,"stackEffectType":2,"attackedMonsterCardId":310,"lable":"Player 1 Roll Miss"}]} 

 Player 1 02:21:09 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 02:21:09 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":342,"scopeIsPlayer":true,"index":11,"originStackId":10},"isAfterActivation":true,"index":11} 

 Player 1 02:21:09 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":342,"numberRolled":4,"rollingPlayerCardId":342,"stackEffectType":2,"attackedMonsterCardId":310,"lable":"Player 1 Roll Miss"}} 

 Player 1 02:21:09 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 1 02:21:09 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 02:21:09 $SHOW_STACK_EFFECT:  
{"effectId":10} 

 Player 1 02:21:12 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":10} 

 Player 1 02:21:12 $SHOW_STACK_EFFECT:  
{"effectId":11} 

 Player 1 02:21:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":96,"_text":"Remove After Resolve Player Attack Roll On Monster 10  "}} 

 Player 1 02:21:15 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":10,"creatorCardId":342,"numberRolled":4,"rollingPlayerCardId":342,"stackEffectType":2,"attackedMonsterCardId":310,"lable":"Player 1 Roll Miss"}} 

 Player 1 02:21:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":97,"_text":"Response Remove After Resolve Player Attack Roll On Monster 10"},"childOfId":96} 

 Player 1 02:21:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":98,"_text":"Wait For Response From Player 1 "},"childOfId":96} 

 Player 1 02:21:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:21:15 $ACTION_MASSAGE_REMOVE:  
{"id":98} 

 Player 1 02:21:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":99,"_text":"Wait For Response From Player 2 "},"childOfId":96} 

 Player 1 02:21:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:21:15 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:21:15 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[338,339]} 

 Player 2 02:21:15 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:21:15 $ACTION_MASSAGE_REMOVE:  
{"id":99} 

 Player 1 02:21:15 $ACTION_MASSAGE_REMOVE:  
{"id":97} 

 Player 1 02:21:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":100,"_text":"Resolve Monster Combat Damage To A Player 11 "}} 

 Player 1 02:21:15 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":11,"creatorCardId":342,"entityToDoDamageCardId":310,"entityToTakeDamageCardId":342,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1,"lable":"The Bloat is going to hurt Samson"}]} 

 Player 1 02:21:15 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":11,"text":"The Bloat Is Going To Hurt Samson For 2 DMG "} 

 Player 1 02:21:15 $UPDATE_STACK_VIS:  
{"stackId":11,"text":"The Bloat will deal 2 combat damage to Samson"} 

 Player 1 02:21:15 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":11,"text":"The Bloat will deal 2 combat damage to Samson"} 

 Player 1 02:21:15 $PLAYER_GET_HIT:  
{"playerId":1,"damage":2,"damageDealerId":310} 

 Player 1 02:21:15 $NEXT_STACK_ID:  

 Player 1 02:21:15 $CLEAR_SE_VIS:  

 Player 1 02:21:16 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":342,"entityToDoDamageCardId":310,"entityToTakeDamageCardId":342,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1,"lable":"The Bloat will deal 2 combat damage to Samson"}} 

 Player 1 02:21:16 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":12,"creatorCardId":342,"playerToDieCardId":342,"stackEffectType":15,"killerId":310,"lable":"Player 1 Is About To Die"}} 

 Player 1 02:21:16 $REPLACE_STACK:  
{"currentStack":[{"entityId":11,"creatorCardId":342,"entityToDoDamageCardId":310,"entityToTakeDamageCardId":342,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1,"lable":"The Bloat will deal 2 combat damage to Samson"},{"entityId":12,"creatorCardId":342,"playerToDieCardId":342,"stackEffectType":15,"killerId":310,"lable":"Player 1 Is About To Die"}]} 

 Player 1 02:21:16 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":12,"creatorCardId":342,"playerToDieCardId":342,"stackEffectType":15,"killerId":310,"lable":"Player 1 Is About To Die"}} 

 Player 1 02:21:16 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 02:21:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:21:16 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":310},{"type":2,"number":true}],"result":null,"preventMethod":false,"methodScopeId":342,"scopeIsPlayer":true,"index":12,"originStackId":-1},"isAfterActivation":true,"index":12} 

 Player 1 02:21:16 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_TAKEN","args":[{"type":2,"number":2},{"type":2,"number":1},{"type":0,"number":310}],"result":null,"preventMethod":false,"methodScopeId":342,"scopeIsPlayer":true,"index":13,"originStackId":11},"isAfterActivation":true,"index":13} 

 Player 1 02:21:16 $NEXT_STACK_ID:  

 Player 1 02:21:16 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":13,"creatorCardId":342,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":310,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":310,"effctType":0},"isAfterActivation":true,"index":13,"hasDataBeenCollectedYet":false,"stackEffectType":14,"lable":"Activate The Bloat Effect DealDamage<DealDamage>"}} 

 Player 1 02:21:16 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":13,"creatorCardId":342,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":310,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":310,"effctType":0},"isAfterActivation":true,"index":13,"hasDataBeenCollectedYet":false,"stackEffectType":14,"lable":"Activate The Bloat Effect DealDamage<DealDamage>"}} 

 Player 1 02:21:16 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 02:21:16 $SHOW_STACK_EFFECT:  
{"effectId":13} 

 Player 1 02:21:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":101,"_text":"Add Activate Passive Effect 13 "}} 

 Player 1 02:21:18 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":13,"text":"Activate The Bloat effect DealDamage<DealDamage>"} 

 Player 1 02:21:18 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[338],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":310,"effectCardPlayer":310},"entityId":13,"creatorCardId":342,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":310,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":310,"effctType":0},"isAfterActivation":true,"index":13,"hasDataBeenCollectedYet":true,"stackEffectType":14,"lable":"Activate The Bloat effect DealDamage<DealDamage>"}} 

 Player 1 02:21:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":102,"_text":"Response Adding Activate Passive Effect 13"},"childOfId":101} 

 Player 1 02:21:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":103,"_text":"Wait For Response From Player 1 "},"childOfId":101} 

 Player 1 02:21:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:21:18 $ACTION_MASSAGE_REMOVE:  
{"id":103} 

 Player 1 02:21:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":104,"_text":"Wait For Response From Player 2 "},"childOfId":101} 

 Player 1 02:21:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:21:18 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:21:18 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[338,339]} 

 Player 2 02:21:18 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:21:19 $ACTION_MASSAGE_REMOVE:  
{"id":104} 

 Player 1 02:21:19 $ACTION_MASSAGE_REMOVE:  
{"id":102} 

 Player 1 02:21:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":105,"_text":"Resolve Activate Passive Effect 13 "}} 

 Player 1 02:21:19 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":11,"creatorCardId":342,"entityToDoDamageCardId":310,"entityToTakeDamageCardId":342,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1,"lable":"The Bloat will deal 2 combat damage to Samson"},{"effectCollectedData":{"effectTargets":[338],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":310,"effectCardPlayer":310},"entityId":13,"creatorCardId":342,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":310,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":310,"effctType":0},"isAfterActivation":true,"index":13,"hasDataBeenCollectedYet":true,"stackEffectType":14,"lable":"Activate The Bloat effect DealDamage<DealDamage>"}]} 

 Player 1 02:21:19 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":310,"particleType":6} 

 Player 1 02:21:21 $DISABLE_PARTICLE_EFFECT:  
{"cardId":310,"particleType":6} 

 Player 1 02:21:21 $PLAYER_GET_HIT:  
{"playerId":2,"damage":1,"damageDealerId":310} 

 Player 1 02:21:21 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":310},{"type":2,"number":true}],"result":null,"preventMethod":false,"methodScopeId":338,"scopeIsPlayer":true,"index":14,"originStackId":-1},"isAfterActivation":true,"index":14} 

 Player 1 02:21:21 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_TAKEN","args":[{"type":2,"number":2},{"type":2,"number":1},{"type":0,"number":310}],"result":null,"preventMethod":false,"methodScopeId":342,"scopeIsPlayer":true,"index":13,"originStackId":11},"isAfterActivation":true,"index":13} 

 Player 1 02:21:21 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":13,"text":"Activated The Bloat Effect"} 

 Player 1 02:21:21 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[338],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":310,"effectCardPlayer":310},"entityId":13,"creatorCardId":342,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":310,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":310,"effctType":0},"isAfterActivation":true,"index":13,"hasDataBeenCollectedYet":true,"stackEffectType":14,"lable":"Activated The Bloat Effect"}} 

 Player 1 02:21:21 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":11,"creatorCardId":342,"entityToDoDamageCardId":310,"entityToTakeDamageCardId":342,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1,"lable":"The Bloat will deal 2 combat damage to Samson"}]} 

 Player 1 02:21:21 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 02:21:21 $SHOW_STACK_EFFECT:  
{"effectId":13} 

 Player 1 02:21:24 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":13} 

 Player 1 02:21:24 $SHOW_STACK_EFFECT:  
{"effectId":12} 

 Player 1 02:21:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":106,"_text":"Remove After Resolve Activate Passive Effect 13  "}} 

 Player 1 02:21:27 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[338],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":310,"effectCardPlayer":310},"entityId":13,"creatorCardId":342,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":310,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":310,"effctType":0},"isAfterActivation":true,"index":13,"hasDataBeenCollectedYet":true,"stackEffectType":14,"lable":"Activated The Bloat Effect"}} 

 Player 1 02:21:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":107,"_text":"Response Remove After Resolve Activate Passive Effect 13"},"childOfId":106} 

 Player 1 02:21:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":108,"_text":"Wait For Response From Player 2 "},"childOfId":106} 

 Player 1 02:21:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:21:27 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:21:27 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[338,339]} 

 Player 2 02:21:27 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:21:27 $ACTION_MASSAGE_REMOVE:  
{"id":108} 

 Player 1 02:21:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":109,"_text":"Wait For Response From Player 1 "},"childOfId":106} 

 Player 1 02:21:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:21:27 $ACTION_MASSAGE_REMOVE:  
{"id":109} 

 Player 1 02:21:27 $ACTION_MASSAGE_REMOVE:  
{"id":107} 

 Player 1 02:21:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":110,"_text":"Resolve Player Death 12 "}} 

 Player 1 02:21:27 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":11,"creatorCardId":342,"entityToDoDamageCardId":310,"entityToTakeDamageCardId":342,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1,"lable":"The Bloat will deal 2 combat damage to Samson"},{"entityId":12,"creatorCardId":342,"playerToDieCardId":342,"stackEffectType":15,"killerId":310,"lable":"Player 1 Is About To Die"}]} 

 Player 1 02:21:27 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":12,"text":"Player 1 Has Died"} 

 Player 1 02:21:27 $REMOVE_FROM_PASSIVE_MANAGER:  
{"cardId":246} 

 Player 1 02:21:27 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_LOSE_ITEM","args":[{"type":0,"number":246}],"result":null,"preventMethod":false,"methodScopeId":342,"scopeIsPlayer":true,"index":15,"originStackId":-1},"isAfterActivation":true,"index":15} 

 Player 1 02:21:27 $MOVE_CARD:  
{"moveIndex":18,"cardId":246,"placeID":349,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 02:21:27 $MOVE_CARD_END:  
{"moveIndex":18,"cardId":246,"flipIfFlipped":true,"playerId":1} 

 Player 1 02:21:28 $MOVE_CARD_TO_PILE:  
{"type":5,"cardId":246} 

 Player 1 02:21:28 $DISABLE_PARTICLE_EFFECT:  
{"cardId":310,"particleType":5} 

 Player 1 02:21:28 $CANCEL_ATTACK:  

 Player 1 02:21:28 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 1 02:21:28 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":11} 

 Player 1 02:21:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":111,"_text":"Fizzle Monster Combat Damage To A Player 11"}} 

 Player 1 02:21:28 $SHOW_ANNOUNCEMENT:  
{"text":"Monster Combat Damage To A Player 11 Was Fizzled"} 

 Player 1 02:21:28 $FIZZLE_STACK_EFFECT:  
{"entityId":11} 

 Player 1 02:21:28 $NEXT_STACK_ID:  

 Player 1 02:21:28 $CLEAR_SE_VIS:  

 Player 1 02:21:28 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":12,"creatorCardId":342,"playerToDieCardId":342,"stackEffectType":15,"killerId":310,"lable":"Player 1 Has Died"}} 

 Player 1 02:21:28 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":14,"creatorCardId":342,"playerToPayCardId":342,"stackEffectType":16,"lable":"Player 1 Is About To Pay Death Penalties"}} 

 Player 1 02:21:28 $REPLACE_STACK:  
{"currentStack":[{"entityId":12,"creatorCardId":342,"playerToDieCardId":342,"stackEffectType":15,"killerId":310,"lable":"Player 1 Has Died"},{"entityId":14,"creatorCardId":342,"playerToPayCardId":342,"stackEffectType":16,"lable":"Player 1 Is About To Pay Death Penalties"}]} 

 Player 1 02:21:28 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":14,"creatorCardId":342,"playerToPayCardId":342,"stackEffectType":16,"lable":"Player 1 Is About To Pay Death Penalties"}} 

 Player 1 02:21:28 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 02:21:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:21:28 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":12,"creatorCardId":342,"playerToDieCardId":342,"stackEffectType":15,"killerId":310,"lable":"Player 1 Has Died"}} 

 Player 1 02:21:28 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 02:21:28 $SHOW_STACK_EFFECT:  
{"effectId":12} 

 Player 1 02:21:30 $HIDE_ANNOUNCEMENT:  

 Player 1 02:21:31 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":12} 

 Player 1 02:21:31 $SHOW_STACK_EFFECT:  
{"effectId":14} 

 Player 1 02:21:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":112,"_text":"Remove After Resolve Player Death 12  "}} 

 Player 1 02:21:34 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":12,"creatorCardId":342,"playerToDieCardId":342,"stackEffectType":15,"killerId":310,"lable":"Player 1 Has Died"}} 

 Player 1 02:21:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":113,"_text":"Response Remove After Resolve Player Death 12"},"childOfId":112} 

 Player 1 02:21:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":114,"_text":"Wait For Response From Player 1 "},"childOfId":112} 

 Player 1 02:21:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:21:34 $ACTION_MASSAGE_REMOVE:  
{"id":114} 

 Player 1 02:21:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":115,"_text":"Wait For Response From Player 2 "},"childOfId":112} 

 Player 1 02:21:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:21:34 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:21:34 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[338,339]} 

 Player 2 02:21:34 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:21:34 $ACTION_MASSAGE_REMOVE:  
{"id":115} 

 Player 1 02:21:34 $ACTION_MASSAGE_REMOVE:  
{"id":113} 

 Player 1 02:21:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":116,"_text":"Resolve Player Death Penalties 14 "}} 

 Player 1 02:21:34 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":14,"creatorCardId":342,"playerToPayCardId":342,"stackEffectType":16,"lable":"Player 1 Is About To Pay Death Penalties"}]} 

 Player 1 02:21:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":117,"_text":"Player 1 pays Penalties"}} 

 Player 1 02:21:34 $SET_MONEY:  
{"playerId":1,"numOfCoins":2} 

 Player 1 02:21:34 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-1}],"result":null,"preventMethod":false,"methodScopeId":342,"scopeIsPlayer":true,"index":16,"originStackId":-1},"isAfterActivation":true,"index":16} 

 Player 1 02:21:34 $SHOW_ANNOUNCEMENT:  
{"text":"Player 1 is Choosing Target"} 

 Player 2 02:24:29 $MATCH: 