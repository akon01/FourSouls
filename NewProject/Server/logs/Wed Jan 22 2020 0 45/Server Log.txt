Start Log 

 Player 1 00:45:42 $MATCH:  

 Player 1 00:45:42 $START_GAME:  

 Player 1 00:45:42 $MOVE_TO_TABLE:  

 Player 2 00:45:42 $MOVE_TO_TABLE:  

 Player 2 00:45:50 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 1 00:45:50 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 00:45:50 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":282,"itemCardId":283} 

 Player 2 00:45:50 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":285}],"result":true,"preventMethod":false,"methodScopeId":284,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 00:45:50 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":284,"itemCardId":285} 

 Player 2 00:45:51 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[86,92,75,109,19,94,46,113,12,111,47,98,13,34,25,88,104,132,39,122,117,68,49,9,129,59,137,56,136,140,102,97,48,120,50,76,73,70,27,134,66,74,82,16,106,26,83,37,65,118,100,38,54,62,32,33,10,45,85,99,42,115,20,90,21,125,128,36,126,81,107,72,61,141,71,101,11,64,22,23,15,123,91,105,138,119,121,67,124,51,31,139,116,127,58,24,30,77,63,130,18,80,52,96,103,131,142,35,108,135,95,133,93,8,41,29,114,44,43,14,79,55,78,69,89,87,84,110,112,57,28,7,40,60,17,53]} 

 Player 2 00:45:51 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[244,271,261,236,259,260,241,230,231,273,267,250,254,239,240,266,247,235,258,251,277,237,246,255,268,229,264,253,274,279,276,233,270,245,281,248,238,234,232,228,263,252,262,278,280,265,269,272,256,257,243,242,249,275]} 

 Player 2 00:45:51 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[207,215,204,191,196,189,170,212,208,171,206,217,211,219,205,179,182,145,184,153,223,194,192,209,218,216,199,224,202,185,214,188,176,172,161,173,198,183,186,187,221,163,148,178,160,193,190,210,195,147,174,151,201,177,175,225,150,168,152,165,203,158,159,222,180,157,164,169,155,213,197,156,200,162,181,146,220,154,149,167,166]} 

 Player 2 00:45:51 $DRAW_CARD:  
{"deckType":5} 

 Player 2 00:45:51 $FLIP_CARD:  
{"cardId":166} 

 Player 2 00:45:51 $ADD_STORE_CARD:  
{"cardId":166} 

 Player 2 00:45:51 $DRAW_CARD:  
{"deckType":5} 

 Player 2 00:45:51 $FLIP_CARD:  
{"cardId":167} 

 Player 2 00:45:51 $ADD_STORE_CARD:  
{"cardId":167} 

 Player 2 00:45:51 $DRAW_CARD:  
{"deckType":2} 

 Player 2 00:45:51 $FLIP_CARD:  
{"cardId":275} 

 Player 2 00:45:51 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":275} 

 Player 2 00:45:51 $NEW_MONSTER_ON_PLACE:  
{"cardId":275,"monsterPlaceId":1} 

 Player 2 00:45:51 $DRAW_CARD:  
{"deckType":2} 

 Player 2 00:45:51 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":249} 

 Player 2 00:45:51 $DRAW_CARD:  
{"deckType":2} 

 Player 2 00:45:51 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":242} 

 Player 2 00:45:51 $DRAW_CARD:  
{"deckType":2} 

 Player 2 00:45:51 $FLIP_CARD:  
{"cardId":243} 

 Player 2 00:45:51 $REGISTER_PASSIVE_ITEM:  
{"cardId":243} 

 Player 2 00:45:51 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":243} 

 Player 2 00:45:51 $NEW_MONSTER_ON_PLACE:  
{"cardId":243,"monsterPlaceId":2} 

 Player 2 00:45:51 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 00:45:51 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":282,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 00:45:51 $DRAW_CARD:  
{"deckType":1} 

 Player 2 00:45:51 $MOVE_CARD:  
{"moveIndex":1,"cardId":53,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 00:45:51 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":283}],"result":true,"preventMethod":false,"methodScopeId":282,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 00:45:52 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":53,"flipIfFlipped":false,"playerId":2} 

 Player 2 00:45:52 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":53} 

 Player 2 00:45:52 $FLIP_CARD:  
{"cardId":53} 

 Player 2 00:45:52 $FLIP_CARD:  
{"cardId":53} 

 Player 2 00:45:52 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":53} 

 Player 2 00:45:52 $DRAW_CARD:  
{"deckType":1} 

 Player 2 00:45:52 $MOVE_CARD:  
{"moveIndex":2,"cardId":17,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 00:45:52 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":17,"flipIfFlipped":false,"playerId":2} 

 Player 2 00:45:52 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":17} 

 Player 2 00:45:52 $FLIP_CARD:  
{"cardId":17} 

 Player 2 00:45:52 $FLIP_CARD:  
{"cardId":17} 

 Player 2 00:45:52 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":17} 

 Player 2 00:45:52 $DRAW_CARD:  
{"deckType":1} 

 Player 2 00:45:52 $MOVE_CARD:  
{"moveIndex":3,"cardId":60,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 00:45:53 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":60,"flipIfFlipped":false,"playerId":2} 

 Player 2 00:45:53 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":60} 

 Player 2 00:45:53 $FLIP_CARD:  
{"cardId":60} 

 Player 2 00:45:53 $FLIP_CARD:  
{"cardId":60} 

 Player 2 00:45:53 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":60} 

 Player 2 00:45:53 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 00:45:53 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":284,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 00:45:53 $DRAW_CARD:  
{"deckType":1} 

 Player 2 00:45:53 $MOVE_CARD:  
{"moveIndex":4,"cardId":40,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 00:45:53 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":40,"flipIfFlipped":false,"playerId":2} 

 Player 2 00:45:53 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":40} 

 Player 2 00:45:53 $FLIP_CARD:  
{"cardId":40} 

 Player 2 00:45:53 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":40} 

 Player 2 00:45:53 $DRAW_CARD:  
{"deckType":1} 

 Player 2 00:45:53 $MOVE_CARD:  
{"moveIndex":5,"cardId":7,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 00:45:54 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":7,"flipIfFlipped":false,"playerId":2} 

 Player 2 00:45:54 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":7} 

 Player 2 00:45:54 $FLIP_CARD:  
{"cardId":7} 

 Player 2 00:45:54 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":7} 

 Player 2 00:45:54 $DRAW_CARD:  
{"deckType":1} 

 Player 2 00:45:54 $MOVE_CARD:  
{"moveIndex":6,"cardId":28,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 00:45:54 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":28,"flipIfFlipped":false,"playerId":2} 

 Player 2 00:45:54 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":28} 

 Player 2 00:45:54 $FLIP_CARD:  
{"cardId":28} 

 Player 2 00:45:54 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":28} 

 Player 2 00:45:54 $GAME_HAS_STARTED:  

 Player 2 00:45:54 $SET_TURN:  
{"playerId":1} 

 Player 2 00:45:54 $START_TURN:  
{"playerId":1} 

 Player 2 00:45:54 $UPDATE_ACTIONS:  

 Player 1 00:45:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 00:45:54 $NEXT_STACK_ID:  

 Player 1 00:45:54 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 00:45:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 00:45:54 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":282,"turnPlayerCardId":282,"stackEffectType":13}} 

 Player 1 00:45:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 00:45:55 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":282,"turnPlayerCardId":282,"stackEffectType":13}} 

 Player 1 00:45:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 1 00:45:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 00:45:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 00:45:55 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":282,"turnPlayerCardId":282,"stackEffectType":13}} 

 Player 1 00:45:55 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 00:45:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 1 00:45:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 1 00:45:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 00:45:55 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 00:45:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 1 00:45:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 00:45:55 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 00:45:55 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:45:55 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:45:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 00:45:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 00:45:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 00:45:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 00:45:55 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 00:45:55 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 00:45:55 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 00:45:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 1 00:45:55 $DRAW_CARD:  
{"deckType":1} 

 Player 1 00:45:55 $MOVE_CARD:  
{"moveIndex":7,"cardId":57,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 00:45:55 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":57,"flipIfFlipped":false,"playerId":1} 

 Player 1 00:45:55 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":57} 

 Player 1 00:45:55 $FLIP_CARD:  
{"cardId":57} 

 Player 1 00:45:56 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":57} 

 Player 1 00:45:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 00:45:56 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":282,"turnPlayerCardId":282,"stackEffectType":13}} 

 Player 1 00:45:56 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 00:45:56 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 00:45:56 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":282,"turnPlayerCardId":282,"stackEffectType":13}} 

 Player 1 00:45:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 1 00:45:56 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 00:45:56 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":282,"turnPlayerCardId":282,"stackEffectType":13}} 

 Player 1 00:45:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 1 00:45:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 1 00:45:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 00:45:56 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 00:45:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 00:45:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 00:45:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 00:45:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 00:45:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 00:45:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 00:45:56 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 00:45:56 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 1 00:45:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 1 00:45:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 00:45:56 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 1 00:45:56 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 1 00:45:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 1 00:45:56 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 00:45:56 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 00:45:56 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 00:45:56 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 00:45:56 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 00:45:56 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 00:45:56 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 00:45:56 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 00:45:57 $SHOW_DECISION:  
{"startCardId":282,"endCardId":243} 

 Player 1 00:45:58 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 00:45:58 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 00:46:00 $NEXT_STACK_ID:  

 Player 1 00:46:00 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 00:46:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Dark One"} 

 Player 1 00:46:01 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":282,"attackingPlayerCardId":282,"idOfCardBeingAttacked":243,"stackEffectType":4}} 

 Player 1 00:46:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Dark One"} 

 Player 1 00:46:01 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":282,"attackingPlayerCardId":282,"idOfCardBeingAttacked":243,"stackEffectType":4}} 

 Player 1 00:46:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add DeclareAttack 2 "}} 

 Player 1 00:46:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 00:46:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Dark One"} 

 Player 1 00:46:01 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":282,"attackingPlayerCardId":282,"idOfCardBeingAttacked":243,"stackEffectType":4}} 

 Player 1 00:46:01 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 00:46:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding DeclareAttack 2"},"childOfId":10} 

 Player 1 00:46:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 1 00:46:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 00:46:01 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 1 00:46:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 1 00:46:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 00:46:01 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 00:46:01 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:46:01 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:46:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Dark One"} 

 Player 2 00:46:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Dark One"} 

 Player 2 00:46:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Dark One"} 

 Player 2 00:46:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Dark One"} 

 Player 2 00:46:01 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 00:46:01 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 1 00:46:01 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 1 00:46:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve DeclareAttack 2 "}} 

 Player 1 00:46:01 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":243,"particleType":5} 

 Player 1 00:46:01 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":282,"scopeIsPlayer":true,"index":2,"originStackId":2},"isAfterActivation":true,"index":2} 

 Player 1 00:46:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Dark One"} 

 Player 1 00:46:01 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":282,"attackingPlayerCardId":282,"idOfCardBeingAttacked":243,"stackEffectType":4}} 

 Player 1 00:46:01 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 00:46:01 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 00:46:01 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":282,"attackingPlayerCardId":282,"idOfCardBeingAttacked":243,"stackEffectType":4}} 

 Player 1 00:46:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve DeclareAttack 2  "}} 

 Player 1 00:46:01 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 00:46:01 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":282,"attackingPlayerCardId":282,"idOfCardBeingAttacked":243,"stackEffectType":4}} 

 Player 1 00:46:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve DeclareAttack 2"},"childOfId":15} 

 Player 1 00:46:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 1 00:46:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 00:46:02 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 00:46:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Dark One"} 

 Player 2 00:46:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Dark One"} 

 Player 2 00:46:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Dark One"} 

 Player 2 00:46:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Dark One"} 

 Player 2 00:46:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Dark One"} 

 Player 2 00:46:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Dark One"} 

 Player 2 00:46:02 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 00:46:02 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 1 00:46:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 1 00:46:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 00:46:02 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 1 00:46:02 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 1 00:46:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 1 00:46:02 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 00:46:02 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 00:46:02 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 00:46:02 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 00:46:02 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 00:46:02 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 00:46:02 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 00:46:02 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 00:46:02 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 00:46:02 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 00:46:02 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 00:46:02 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 00:46:03 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 00:46:04 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 00:46:04 $NEXT_STACK_ID:  

 Player 1 00:46:04 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 00:46:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster>"} 

 Player 1 00:46:04 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":282,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":243}} 

 Player 1 00:46:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster>"} 

 Player 1 00:46:04 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":282,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":243}} 

 Player 1 00:46:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add AttackRoll 3 "}} 

 Player 1 00:46:04 $ROLL_DICE:  
{"playerId":1} 

 Player 2 00:46:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:46:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:46:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster>"} 

 Player 2 00:46:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster>"} 

 Player 1 00:46:07 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":4} 

 Player 1 00:46:07 $UPDATE_STACK_VIS:  
{"stackId":3,"text":"player rolled 4 vs Dark One<Monster>"} 

 Player 1 00:46:07 $SHOW_DICE_ROLL:  
{"stackId":3} 

 Player 1 00:46:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs Dark One<Monster>"} 

 Player 1 00:46:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 00:46:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs Dark One<Monster>"} 

 Player 1 00:46:10 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":282,"numberRolled":4,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":243}} 

 Player 1 00:46:10 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 00:46:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding AttackRoll 3"},"childOfId":20} 

 Player 1 00:46:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 1 00:46:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 00:46:10 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 1 00:46:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 1 00:46:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 00:46:10 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 00:46:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster>"} 

 Player 2 00:46:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster>"} 

 Player 2 00:46:10 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 00:46:10 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 1 00:46:10 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 1 00:46:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve AttackRoll 3 "}} 

 Player 1 00:46:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Added 0 to original roll"}} 

 Player 1 00:46:10 $NEXT_STACK_ID:  

 Player 1 00:46:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs Dark One<Monster>"} 

 Player 1 00:46:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 00:46:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Dark One \n2:Player 1 rolled 4 vs Dark One<Monster>"} 

 Player 1 00:46:11 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":282,"entityToDoDamageCardId":282,"entityToTakeDamageCardId":243,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 00:46:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Dark One \n2:Player 1 rolled 4 vs Dark One<Monster>"} 

 Player 1 00:46:11 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":282,"numberRolled":4,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":243}} 

 Player 1 00:46:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Dark One \n2:Player 1 rolled 4 vs Dark One<Monster>"} 

 Player 1 00:46:11 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":282,"entityToDoDamageCardId":282,"entityToTakeDamageCardId":243,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 00:46:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Dark One \n2:Player 1 rolled 4 vs Dark One<Monster>"} 

 Player 1 00:46:11 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":282,"numberRolled":4,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":243}} 

 Player 1 00:46:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Dark One \n2:Player 1 rolled 4 vs Dark One<Monster>"} 

 Player 1 00:46:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Dark One \n2:Player 1 rolled 4 vs Dark One<Monster>"} 

 Player 1 00:46:11 $REPLACE_STACK:  
{"currentStack":[{"entityId":4,"creatorCardId":282,"entityToDoDamageCardId":282,"entityToTakeDamageCardId":243,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":3,"creatorCardId":282,"numberRolled":4,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":243}]} 

 Player 1 00:46:11 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":282,"scopeIsPlayer":true,"index":3,"originStackId":3},"isAfterActivation":true,"index":3} 

 Player 1 00:46:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Dark One \n2:Player 1 rolled 4 vs Dark One<Monster>"} 

 Player 1 00:46:11 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":282,"numberRolled":4,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":243}} 

 Player 1 00:46:11 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 00:46:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Dark One"} 

 Player 1 00:46:11 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":282,"numberRolled":4,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":243}} 

 Player 1 00:46:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Remove After Resolve AttackRoll 3  "}} 

 Player 1 00:46:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Dark One"} 

 Player 1 00:46:11 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":282,"numberRolled":4,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":243}} 

 Player 1 00:46:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Response Remove After Resolve AttackRoll 3"},"childOfId":26} 

 Player 1 00:46:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 1 "},"childOfId":26} 

 Player 1 00:46:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 00:46:11 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 1 00:46:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Wait For Response From Player 2 "},"childOfId":26} 

 Player 1 00:46:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 00:46:11 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 00:46:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster>"} 

 Player 2 00:46:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster>"} 

 Player 2 00:46:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Dark One"} 

 Player 2 00:46:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Dark One"} 

 Player 2 00:46:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Dark One"} 

 Player 2 00:46:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Dark One"} 

 Player 2 00:46:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Dark One"} 

 Player 2 00:46:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Dark One"} 

 Player 2 00:46:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Dark One"} 

 Player 2 00:46:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Dark One"} 

 Player 2 00:46:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Dark One"} 

 Player 2 00:46:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Dark One"} 

 Player 2 00:46:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Dark One \n2:Player 1 is rolling against Dark One<Monster>"} 

 Player 2 00:46:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Dark One \n2:Player 1 is rolling against Dark One<Monster>"} 

 Player 2 00:46:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Dark One \n2:Player 1 is rolling against Dark One<Monster>"} 

 Player 2 00:46:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Dark One \n2:Player 1 is rolling against Dark One<Monster>"} 

 Player 2 00:46:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Dark One \n2:Player 1 is rolling against Dark One<Monster>"} 

 Player 2 00:46:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Dark One \n2:Player 1 is rolling against Dark One<Monster>"} 

 Player 2 00:46:12 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 00:46:12 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 1 00:46:12 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 1 00:46:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Resolve CombatDamage 4 "}} 

 Player 1 00:46:12 $UPDATE_STACK_VIS:  
{"stackId":4,"text":"Azazel will deal 1 combat damage to Dark One"} 

 Player 1 00:46:12 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":282}],"result":null,"preventMethod":false,"methodScopeId":243,"scopeIsPlayer":false,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1} 

 Player 1 00:46:12 $NEXT_STACK_ID:  

 Player 1 00:46:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Dark One"} 

 Player 1 00:46:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Dark One \n2:Activate Dark One effect GainStats<GainStats>"} 

 Player 1 00:46:12 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":5,"creatorCardId":282,"hasLockingStackEffect":false,"cardActivatorId":243,"cardWithEffectId":243,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":243,"cardId":243,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 00:46:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Dark One \n2:Activate Dark One effect GainStats<GainStats>"} 

 Player 1 00:46:12 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":5,"creatorCardId":282,"hasLockingStackEffect":false,"cardActivatorId":243,"cardWithEffectId":243,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":243,"cardId":243,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 00:46:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Add ActivatePassiveEffect 5 "}} 

 Player 1 00:46:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Dark One \n2:Activate Dark One effect GainStats<GainStats>"} 

 Player 1 00:46:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Dark One \n2:Activate Dark One effect GainStats<GainStats>"} 

 Player 1 00:46:13 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[243],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":243,"effectCardPlayer":243},"entityId":5,"creatorCardId":282,"hasLockingStackEffect":false,"cardActivatorId":243,"cardWithEffectId":243,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":243,"cardId":243,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 00:46:13 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 1 00:46:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Response Adding ActivatePassiveEffect 5"},"childOfId":31} 

 Player 1 00:46:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 2 "},"childOfId":31} 

 Player 1 00:46:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 00:46:13 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 00:46:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Dark One"} 

 Player 2 00:46:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Dark One"} 

 Player 2 00:46:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Dark One \n2:Activate Dark One "} 

 Player 2 00:46:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Dark One \n2:Activate Dark One "} 

 Player 2 00:46:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Dark One \n2:Activate Dark One "} 

 Player 2 00:46:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Dark One \n2:Activate Dark One "} 

 Player 2 00:46:13 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 00:46:13 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 1 00:46:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Wait For Response From Player 1 "},"childOfId":31} 

 Player 1 00:46:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 00:46:13 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 1 00:46:13 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 1 00:46:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Resolve ActivatePassiveEffect 5 "}} 

 Player 1 00:46:13 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":243,"particleType":6} 

 Player 1 00:46:13 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 00:46:13 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 1 00:46:15 $DISABLE_PARTICLE_EFFECT:  
{"cardId":243,"particleType":6} 

 Player 1 00:46:15 $MONSTER_GAIN_DMG:  
{"cardId":243,"DMGToGain":1} 

 Player 1 00:46:15 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":282}],"result":null,"preventMethod":false,"methodScopeId":243,"scopeIsPlayer":false,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1} 

 Player 1 00:46:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Dark One \n2:Activate Dark One effect GainStats<GainStats>"} 

 Player 1 00:46:15 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[243],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":243,"effectCardPlayer":243},"entityId":5,"creatorCardId":282,"hasLockingStackEffect":false,"cardActivatorId":243,"cardWithEffectId":243,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 00:46:15 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 1 00:46:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Dark One"} 

 Player 1 00:46:15 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[243],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":243,"effectCardPlayer":243},"entityId":5,"creatorCardId":282,"hasLockingStackEffect":false,"cardActivatorId":243,"cardWithEffectId":243,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 00:46:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Remove After Resolve ActivatePassiveEffect 5  "}} 

 Player 1 00:46:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Dark One"} 

 Player 1 00:46:15 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[243],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":243,"effectCardPlayer":243},"entityId":5,"creatorCardId":282,"hasLockingStackEffect":false,"cardActivatorId":243,"cardWithEffectId":243,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 00:46:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Response Remove After Resolve ActivatePassiveEffect 5"},"childOfId":36} 

 Player 1 00:46:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 1 "},"childOfId":36} 

 Player 1 00:46:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 00:46:15 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 1 00:46:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Wait For Response From Player 2 "},"childOfId":36} 

 Player 1 00:46:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 00:46:16 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 00:46:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Dark One \n2:Activate Dark One "} 

 Player 2 00:46:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Dark One \n2:Activate Dark One "} 

 Player 2 00:46:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Dark One \n2:Activate Dark One "} 

 Player 2 00:46:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Dark One \n2:Activate Dark One "} 

 Player 2 00:46:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Dark One \n2:Activate Dark One "} 

 Player 2 00:46:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Dark One \n2:Activate Dark One "} 

 Player 2 00:46:16 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 00:46:16 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 1 00:46:16 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 1 00:46:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Resolve CombatDamage 4 "}} 

 Player 1 00:46:16 $MONSTER_GET_DAMAGED:  
{"cardId":243,"hpLeft":2,"damageDealerId":282} 

 Player 1 00:46:16 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":282}],"result":null,"preventMethod":false,"methodScopeId":243,"scopeIsPlayer":false,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 00:46:16 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":4},{"type":0,"number":282},{"type":0,"number":243}],"result":null,"preventMethod":false,"methodScopeId":282,"scopeIsPlayer":true,"index":4,"originStackId":4},"isAfterActivation":true,"index":4} 

 Player 1 00:46:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Dark One"} 

 Player 1 00:46:16 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":282,"entityToDoDamageCardId":282,"entityToTakeDamageCardId":243,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 00:46:16 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 00:46:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 00:46:16 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":282,"entityToDoDamageCardId":282,"entityToTakeDamageCardId":243,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 00:46:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Remove After Resolve CombatDamage 4  "}} 

 Player 1 00:46:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 00:46:16 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":282,"entityToDoDamageCardId":282,"entityToTakeDamageCardId":243,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 00:46:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Response Remove After Resolve CombatDamage 4"},"childOfId":41} 

 Player 1 00:46:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 2 "},"childOfId":41} 

 Player 1 00:46:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 00:46:16 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 00:46:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Dark One"} 

 Player 2 00:46:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Dark One"} 

 Player 2 00:46:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Dark One"} 

 Player 2 00:46:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Dark One"} 

 Player 2 00:46:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Dark One"} 

 Player 2 00:46:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Dark One"} 

 Player 2 00:46:17 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 00:46:17 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 1 00:46:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Wait For Response From Player 1 "},"childOfId":41} 

 Player 1 00:46:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 00:46:17 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 1 00:46:17 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 1 00:46:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Stack Was Emptied "}} 

 Player 1 00:46:17 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 00:46:17 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 00:46:17 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 00:46:17 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 00:46:17 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 00:46:17 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 00:46:17 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 00:46:17 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 00:46:17 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 00:46:17 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 00:46:17 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 00:46:17 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 00:46:17 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 00:46:17 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 00:46:17 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 00:46:17 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 1 00:46:17 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 00:46:17 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 1 00:46:17 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 1 00:46:17 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 1 00:46:17 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 1 00:46:17 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 1 00:46:17 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 1 00:46:18 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 1 00:46:18 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 1 00:46:19 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 2 00:51:13 $MATCH: 