Start Log 

 Player 1 00:49:20 $MATCH:  

 Player 1 00:49:20 $START_GAME:  

 Player 2 00:49:20 $MOVE_TO_TABLE:  

 Player 1 00:49:21 $MOVE_TO_TABLE:  

 Player 1 00:49:30 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 00:49:31 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 2 00:49:31 $SET_CHAR:  
{"originPlayerId":2,"playerId":1,"charCardId":323,"itemCardId":324} 

 Player 1 00:49:31 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":323,"itemCardId":324} 

 Player 1 00:49:31 $SET_CHAR_END:  
{"playerId":2} 

 Player 2 00:49:31 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":329,"itemCardId":330} 

 Player 2 00:49:31 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[98,89,128,87,82,63,121,68,80,55,72,27,95,130,104,28,102,120,47,103,31,78,53,51,100,123,26,4,48,40,6,111,133,50,41,107,23,84,46,113,137,76,15,122,106,108,73,127,131,70,13,99,57,43,116,65,49,37,110,9,58,19,69,101,114,64,138,119,29,54,77,67,45,5,135,105,18,134,86,11,34,16,42,39,91,36,33,52,32,81,61,85,97,22,20,60,83,139,17,10,71,117,90,59,136,94,66,7,109,8,79,88,129,92,124,24,132,125,25,12,75,21,112,30,74,56,96,44,118,38,14,115,62,93,126,35]} 

 Player 2 00:49:31 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[251,289,242,273,267,283,238,236,314,264,240,258,237,252,249,299,306,250,288,225,280,307,310,246,232,308,293,311,276,234,312,285,231,257,313,230,301,229,278,260,304,239,303,268,284,292,294,279,255,274,259,261,228,243,245,226,297,295,254,290,298,305,263,277,269,244,253,296,286,291,302,316,223,275,227,224,270,247,266,272,309,248,281,262,300,287,265,233,241,315,235,256,271,282]} 

 Player 2 00:49:31 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[174,185,209,156,144,189,195,198,147,175,143,187,176,180,200,199,166,146,148,159,162,219,141,186,204,179,207,213,193,191,206,165,192,178,202,152,181,218,172,177,149,170,205,154,158,208,164,188,211,184,203,173,194,197,221,216,190,161,142,171,212,169,153,163,168,155,150,151,210,157,182,220,183,167,215,160,217,201,196,145,214]} 

 Player 2 00:49:31 $DRAW_CARD:  
{"deckType":5} 

 Player 2 00:49:31 $FLIP_CARD:  
{"cardId":214} 

 Player 2 00:49:31 $ADD_STORE_CARD:  
{"cardId":214} 

 Player 2 00:49:31 $DRAW_CARD:  
{"deckType":5} 

 Player 2 00:49:31 $FLIP_CARD:  
{"cardId":145} 

 Player 2 00:49:31 $ADD_STORE_CARD:  
{"cardId":145} 

 Player 2 00:49:31 $DRAW_CARD:  
{"deckType":2} 

 Player 2 00:49:31 $FLIP_CARD:  
{"cardId":282} 

 Player 2 00:49:31 $REGISTER_PASSIVE_ITEM:  
{"cardId":282} 

 Player 2 00:49:31 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":282} 

 Player 2 00:49:31 $NEW_MONSTER_ON_PLACE:  
{"cardId":282,"monsterPlaceId":1} 

 Player 2 00:49:31 $DRAW_CARD:  
{"deckType":2} 

 Player 2 00:49:31 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":271} 

 Player 2 00:49:31 $DRAW_CARD:  
{"deckType":2} 

 Player 2 00:49:31 $FLIP_CARD:  
{"cardId":256} 

 Player 2 00:49:31 $REGISTER_PASSIVE_ITEM:  
{"cardId":256} 

 Player 2 00:49:32 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":256} 

 Player 2 00:49:32 $NEW_MONSTER_ON_PLACE:  
{"cardId":256,"monsterPlaceId":2} 

 Player 2 00:49:32 $REGISTER_PASSIVE_ITEM:  
{"cardId":318} 

 Player 2 00:49:32 $REGISTER_PASSIVE_ITEM:  
{"cardId":319} 

 Player 2 00:49:32 $REGISTER_PASSIVE_ITEM:  
{"cardId":320} 

 Player 2 00:49:32 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 00:49:32 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":323,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 00:49:32 $DRAW_CARD:  
{"deckType":1} 

 Player 2 00:49:32 $MOVE_CARD:  
{"moveIndex":1,"cardId":35,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 00:49:32 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":35,"flipIfFlipped":false,"playerId":2} 

 Player 2 00:49:32 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":35} 

 Player 2 00:49:32 $FLIP_CARD:  
{"cardId":35} 

 Player 2 00:49:32 $FLIP_CARD:  
{"cardId":35} 

 Player 2 00:49:32 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":35} 

 Player 2 00:49:32 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":35}],"result":null,"preventMethod":false,"methodScopeId":323,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 00:49:32 $DRAW_CARD:  
{"deckType":1} 

 Player 2 00:49:32 $MOVE_CARD:  
{"moveIndex":2,"cardId":126,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 00:49:33 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":126,"flipIfFlipped":false,"playerId":2} 

 Player 2 00:49:33 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":126} 

 Player 2 00:49:33 $FLIP_CARD:  
{"cardId":126} 

 Player 2 00:49:33 $FLIP_CARD:  
{"cardId":126} 

 Player 2 00:49:33 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":126} 

 Player 2 00:49:33 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":126}],"result":null,"preventMethod":false,"methodScopeId":323,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 00:49:33 $DRAW_CARD:  
{"deckType":1} 

 Player 2 00:49:33 $MOVE_CARD:  
{"moveIndex":3,"cardId":93,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 00:49:33 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":93,"flipIfFlipped":false,"playerId":2} 

 Player 2 00:49:33 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":93} 

 Player 2 00:49:33 $FLIP_CARD:  
{"cardId":93} 

 Player 2 00:49:33 $FLIP_CARD:  
{"cardId":93} 

 Player 2 00:49:33 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":93} 

 Player 2 00:49:33 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":93}],"result":null,"preventMethod":false,"methodScopeId":323,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 2 00:49:33 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 00:49:33 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":329,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 2 00:49:34 $DRAW_CARD:  
{"deckType":1} 

 Player 2 00:49:34 $MOVE_CARD:  
{"moveIndex":4,"cardId":62,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 00:49:34 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":62,"flipIfFlipped":false,"playerId":2} 

 Player 2 00:49:34 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":62} 

 Player 2 00:49:34 $FLIP_CARD:  
{"cardId":62} 

 Player 2 00:49:34 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":62} 

 Player 2 00:49:34 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":62}],"result":null,"preventMethod":false,"methodScopeId":329,"scopeIsPlayer":true,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 

 Player 2 00:49:34 $DRAW_CARD:  
{"deckType":1} 

 Player 2 00:49:34 $MOVE_CARD:  
{"moveIndex":5,"cardId":115,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 00:49:34 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":115,"flipIfFlipped":false,"playerId":2} 

 Player 2 00:49:34 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":115} 

 Player 2 00:49:35 $FLIP_CARD:  
{"cardId":115} 

 Player 2 00:49:35 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":115} 

 Player 2 00:49:35 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":115}],"result":null,"preventMethod":false,"methodScopeId":329,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 

 Player 2 00:49:35 $DRAW_CARD:  
{"deckType":1} 

 Player 2 00:49:35 $MOVE_CARD:  
{"moveIndex":6,"cardId":14,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 00:49:35 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":14,"flipIfFlipped":false,"playerId":2} 

 Player 2 00:49:35 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":14} 

 Player 2 00:49:35 $FLIP_CARD:  
{"cardId":14} 

 Player 2 00:49:35 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":14} 

 Player 2 00:49:35 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":14}],"result":null,"preventMethod":false,"methodScopeId":329,"scopeIsPlayer":true,"index":8,"originStackId":-1},"isAfterActivation":true,"index":8} 

 Player 2 00:49:35 $GAME_HAS_STARTED:  

 Player 2 00:49:35 $SET_TURN:  
{"playerId":2} 

 Player 2 00:49:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:49:35 $NEXT_STACK_ID:  

 Player 2 00:49:35 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":329,"turnPlayerCardId":329,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}} 

 Player 2 00:49:35 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":329,"turnPlayerCardId":329,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}} 

 Player 2 00:49:35 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 00:49:35 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 2 00:49:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add Start Turn Loot Draw 1 "}} 

 Player 2 00:49:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:49:38 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":329,"turnPlayerCardId":329,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}} 

 Player 2 00:49:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding Start Turn Loot Draw 1"},"childOfId":0} 

 Player 2 00:49:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 2 00:49:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:49:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 2 00:49:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:49:38 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:49:38 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[323,324]} 

 Player 1 00:49:38 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:49:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve Start Turn Loot Draw 1 "}} 

 Player 2 00:49:38 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":1,"creatorCardId":329,"turnPlayerCardId":329,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}]} 

 Player 2 00:49:38 $DRAW_CARD:  
{"deckType":1} 

 Player 2 00:49:38 $MOVE_CARD:  
{"moveIndex":7,"cardId":38,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 00:49:39 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":38,"flipIfFlipped":false,"playerId":2} 

 Player 2 00:49:39 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":38} 

 Player 2 00:49:39 $FLIP_CARD:  
{"cardId":38} 

 Player 2 00:49:39 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":38} 

 Player 2 00:49:39 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":38}],"result":null,"preventMethod":false,"methodScopeId":329,"scopeIsPlayer":true,"index":9,"originStackId":-1},"isAfterActivation":true,"index":9} 

 Player 2 00:49:39 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":1,"text":"Player 2 Has Drawn Loot For Start Turn"} 

 Player 2 00:49:39 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":329,"turnPlayerCardId":329,"stackEffectType":13,"lable":"Player 2 Has Drawn Loot For Start Turn"}} 

 Player 2 00:49:39 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 00:49:39 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 00:49:39 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 2 00:49:42 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":1} 

 Player 2 00:49:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve Start Turn Loot Draw 1  "}} 

 Player 2 00:49:42 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":329,"turnPlayerCardId":329,"stackEffectType":13,"lable":"Player 2 Has Drawn Loot For Start Turn"}} 

 Player 2 00:49:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve Start Turn Loot Draw 1"},"childOfId":5} 

 Player 2 00:49:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 2 00:49:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:49:42 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:49:42 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[323,324]} 

 Player 1 00:49:42 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:49:42 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 2 00:49:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 2 00:49:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:49:42 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 2 00:49:42 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 2 00:49:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 2 00:49:42 $CLEAR_SE_VIS:  

 Player 2 00:49:42 $UPDATE_ACTIONS:  

 Player 2 00:49:58 $MOVE_CARD:  
{"moveIndex":8,"cardId":117,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 

 Player 1 00:49:58 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":117,"flipIfFlipped":true,"playerId":2} 

 Player 2 00:49:58 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[98,89,128,87,82,63,121,68,80,55,72,27,95,130,104,28,102,120,47,103,31,78,53,51,100,123,26,4,48,40,6,111,133,50,41,107,23,84,46,113,137,76,15,122,106,108,73,127,131,70,13,99,57,43,116,65,49,37,110,9,58,19,69,101,114,64,138,119,29,54,77,67,45,5,135,105,18,134,86,11,34,16,42,39,91,36,33,52,32,81,61,85,97,22,20,60,83,139,17,10,71,90,59,136,94,66,7,109,8,79,88,129,92,124,24,132,125,25,12,75,21,112,30,74,56,96,44,118]} 

 Player 2 00:49:58 $FLIP_CARD:  
{"cardId":117} 

 Player 2 00:49:58 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":117} 

 Player 2 00:49:58 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":117}],"result":null,"preventMethod":false,"methodScopeId":329,"scopeIsPlayer":true,"index":10,"originStackId":-1},"isAfterActivation":true,"index":10} 

 Player 2 00:50:01 $NEXT_STACK_ID:  

 Player 2 00:50:01 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":329,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":117,"lootPlayerId":2,"lable":"Player 2 Is Going To Play Pink Eye ","hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 00:50:01 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":329,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":117,"lootPlayerId":2,"lable":"Player 2 Is Going To Play Pink Eye ","hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 00:50:01 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 00:50:01 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 2 00:50:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add Play Loot Card 2 "}} 

 Player 2 00:50:04 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":117} 

 Player 2 00:50:04 $MOVE_CARD:  
{"moveIndex":9,"cardId":117,"placeID":339,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 00:50:04 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":117,"flipIfFlipped":true,"playerId":2} 

 Player 2 00:50:04 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":117} 

 Player 2 00:50:04 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":2,"text":"Player 2 Is Going To Play Pink Eye: AddTrinket"} 

 Player 2 00:50:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:50:04 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":329,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":117,"lootPlayerId":2,"effectToDo":{"effectName":"AddTrinket","cardEffectNum":0,"cardPlayerId":2,"cardId":117,"effctType":1},"lable":"Player 2 Is Going To Play Pink Eye: AddTrinket","hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 00:50:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding Play Loot Card 2"},"childOfId":10} 

 Player 2 00:50:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 2 00:50:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:50:05 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 2 00:50:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 2 00:50:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:50:05 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:50:05 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[323,324]} 

 Player 1 00:50:05 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:50:05 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 2 00:50:05 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 2 00:50:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve Play Loot Card 2 "}} 

 Player 2 00:50:05 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":2,"creatorCardId":329,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":117,"lootPlayerId":2,"effectToDo":{"effectName":"AddTrinket","cardEffectNum":0,"cardPlayerId":2,"cardId":117,"effctType":1},"lable":"Player 2 Is Going To Play Pink Eye: AddTrinket","hasDataBeenCollectedYet":true,"stackEffectType":8}]} 

 Player 2 00:50:05 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":2,"text":"Player 2 Plays Pink Eye: AddTrinket"} 

 Player 2 00:50:05 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":117,"particleType":6} 

 Player 2 00:50:07 $DISABLE_PARTICLE_EFFECT:  
{"cardId":117,"particleType":6} 

 Player 2 00:50:07 $CARD_ADD_TRINKET:  
{"cardId":117,"playerId":2,"addMuiliEffect":false} 

 Player 2 00:50:07 $REMOVE_FROM_PILE:  
{"cardId":117} 

 Player 2 00:50:07 $REGISTER_PASSIVE_ITEM:  
{"cardId":117} 

 Player 2 00:50:07 $MOVE_CARD:  
{"moveIndex":10,"cardId":117,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 

 Player 1 00:50:07 $MOVE_CARD_END:  
{"moveIndex":10,"cardId":117,"flipIfFlipped":true,"playerId":2} 

 Player 2 00:50:07 $ADD_AN_ITEM:  
{"playerId":2,"cardId":117,"isReward":true} 

 Player 2 00:50:07 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":117}],"result":true,"preventMethod":false,"methodScopeId":329,"scopeIsPlayer":true,"index":11,"originStackId":-1},"isAfterActivation":true,"index":11} 

 Player 2 00:50:07 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":329,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":117,"lootPlayerId":2,"lable":"Player 2 Plays Pink Eye: AddTrinket","hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 00:50:07 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 00:50:07 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 00:50:07 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 2 00:50:10 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":2} 

 Player 2 00:50:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve Play Loot Card 2  "}} 

 Player 2 00:50:10 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":329,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":117,"lootPlayerId":2,"lable":"Player 2 Plays Pink Eye: AddTrinket","hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 00:50:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve Play Loot Card 2"},"childOfId":15} 

 Player 2 00:50:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 2 00:50:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:50:10 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:50:10 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[323,324]} 

 Player 1 00:50:10 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:50:11 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 00:50:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 2 00:50:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:50:11 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 2 00:50:11 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 2 00:50:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 2 00:50:11 $CLEAR_SE_VIS:  

 Player 2 00:50:16 $NEXT_STACK_ID:  

 Player 2 00:50:16 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":329,"attackingPlayerCardId":329,"idOfCardBeingAttacked":256,"stackEffectType":4,"lable":"Player 2 declared attack on Famine"}} 

 Player 2 00:50:17 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":329,"attackingPlayerCardId":329,"idOfCardBeingAttacked":256,"stackEffectType":4,"lable":"Player 2 declared attack on Famine"}} 

 Player 2 00:50:17 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 00:50:17 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 2 00:50:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add Player Declare Attack On Monster 3 "}} 

 Player 2 00:50:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:50:20 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":329,"attackingPlayerCardId":329,"idOfCardBeingAttacked":256,"stackEffectType":4,"lable":"Player 2 declared attack on Famine"}} 

 Player 2 00:50:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding Player Declare Attack On Monster 3"},"childOfId":20} 

 Player 2 00:50:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 2 00:50:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:50:20 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 2 00:50:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 2 00:50:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:50:20 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:50:20 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[323,324]} 

 Player 1 00:50:20 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:50:20 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 2 00:50:20 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 2 00:50:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve Player Declare Attack On Monster 3 "}} 

 Player 2 00:50:20 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":3,"creatorCardId":329,"attackingPlayerCardId":329,"idOfCardBeingAttacked":256,"stackEffectType":4,"lable":"Player 2 declared attack on Famine"}]} 

 Player 2 00:50:20 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":256,"particleType":5} 

 Player 2 00:50:20 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":3,"text":"Player 2 Has Entered Battle with Famine"} 

 Player 2 00:50:20 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":329,"scopeIsPlayer":true,"index":12,"originStackId":3},"isAfterActivation":true,"index":12} 

 Player 2 00:50:20 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":329,"attackingPlayerCardId":329,"idOfCardBeingAttacked":256,"stackEffectType":4,"lable":"Player 2 Has Entered Battle with Famine"}} 

 Player 2 00:50:20 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 00:50:20 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 00:50:20 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 2 00:50:23 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":3} 

 Player 2 00:50:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Remove After Resolve Player Declare Attack On Monster 3  "}} 

 Player 2 00:50:23 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":329,"attackingPlayerCardId":329,"idOfCardBeingAttacked":256,"stackEffectType":4,"lable":"Player 2 Has Entered Battle with Famine"}} 

 Player 2 00:50:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Response Remove After Resolve Player Declare Attack On Monster 3"},"childOfId":25} 

 Player 2 00:50:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Wait For Response From Player 1 "},"childOfId":25} 

 Player 2 00:50:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:50:23 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:50:23 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[323,324]} 

 Player 1 00:50:23 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:50:23 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 2 00:50:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":25} 

 Player 2 00:50:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:50:23 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 2 00:50:23 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 2 00:50:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Stack Was Emptied "}} 

 Player 2 00:50:23 $CLEAR_SE_VIS:  

 Player 2 00:50:25 $NEXT_STACK_ID:  

 Player 2 00:50:25 $ADD_TO_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":329,"rollingPlayerCardId":329,"stackEffectType":2,"attackedMonsterCardId":256,"lable":"Player 2 is rolling against Famine<Monster>"}} 

 Player 2 00:50:25 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":329,"rollingPlayerCardId":329,"stackEffectType":2,"attackedMonsterCardId":256,"lable":"Player 2 is rolling against Famine<Monster>"}} 

 Player 2 00:50:25 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 00:50:25 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 2 00:50:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Add Player Attack Roll On Monster 4 "}} 

 Player 2 00:50:28 $ROLL_DICE:  
{"playerId":2} 

 Player 2 00:50:29 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":6} 

 Player 2 00:50:29 $UPDATE_STACK_VIS:  
{"stackId":4,"text":"player rolled 6 vs Famine<Monster>"} 

 Player 2 00:50:29 $SHOW_DICE_ROLL:  
{"stackId":4} 

 Player 2 00:50:32 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":4,"text":"Player 2 rolled 6 vs Famine<Monster>"} 

 Player 2 00:50:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:50:32 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":329,"numberRolled":6,"rollingPlayerCardId":329,"stackEffectType":2,"attackedMonsterCardId":256,"lable":"Player 2 rolled 6 vs Famine<Monster>"}} 

 Player 2 00:50:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Response Adding Player Attack Roll On Monster 4"},"childOfId":30} 

 Player 2 00:50:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Wait For Response From Player 2 "},"childOfId":30} 

 Player 2 00:50:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:50:32 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 2 00:50:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":30} 

 Player 2 00:50:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:50:32 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:50:32 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[323,324]} 

 Player 1 00:50:32 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:50:32 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 2 00:50:33 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 2 00:50:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Resolve Player Attack Roll On Monster 4 "}} 

 Player 2 00:50:33 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":4,"creatorCardId":329,"numberRolled":6,"rollingPlayerCardId":329,"stackEffectType":2,"attackedMonsterCardId":256,"lable":"Player 2 rolled 6 vs Famine<Monster>"}]} 

 Player 2 00:50:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Added 0 to original roll"}} 

 Player 2 00:50:33 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":4,"text":"Player 2 Rolled 1 Against Famine<Monster> 3"} 

 Player 2 00:50:33 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":4,"text":"Player 2 Roll Miss"} 

 Player 2 00:50:33 $NEXT_STACK_ID:  

 Player 2 00:50:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:50:33 $CLEAR_SE_VIS:  

 Player 2 00:50:33 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":329,"entityToDoDamageCardId":256,"entityToTakeDamageCardId":329,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1,"lable":"Famine is going to hurt Isaac"}} 

 Player 2 00:50:33 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":329,"numberRolled":6,"rollingPlayerCardId":329,"stackEffectType":2,"attackedMonsterCardId":256,"lable":"Player 2 Roll Miss"}} 

 Player 2 00:50:33 $REPLACE_STACK:  
{"currentStack":[{"entityId":5,"creatorCardId":329,"entityToDoDamageCardId":256,"entityToTakeDamageCardId":329,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1,"lable":"Famine is going to hurt Isaac"},{"entityId":4,"creatorCardId":329,"numberRolled":6,"rollingPlayerCardId":329,"stackEffectType":2,"attackedMonsterCardId":256,"lable":"Player 2 Roll Miss"}]} 

 Player 2 00:50:33 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 00:50:33 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":329,"scopeIsPlayer":true,"index":13,"originStackId":4},"isAfterActivation":true,"index":13} 

 Player 2 00:50:33 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":329,"numberRolled":6,"rollingPlayerCardId":329,"stackEffectType":2,"attackedMonsterCardId":256,"lable":"Player 2 Roll Miss"}} 

 Player 2 00:50:33 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 00:50:33 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 00:50:33 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 2 00:50:36 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":4} 

 Player 2 00:50:36 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 2 00:50:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Remove After Resolve Player Attack Roll On Monster 4  "}} 

 Player 2 00:50:39 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":329,"numberRolled":6,"rollingPlayerCardId":329,"stackEffectType":2,"attackedMonsterCardId":256,"lable":"Player 2 Roll Miss"}} 

 Player 2 00:50:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Response Remove After Resolve Player Attack Roll On Monster 4"},"childOfId":36} 

 Player 2 00:50:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 2 "},"childOfId":36} 

 Player 2 00:50:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:50:39 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 2 00:50:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Wait For Response From Player 1 "},"childOfId":36} 

 Player 2 00:50:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:50:39 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:50:39 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[323,324]} 

 Player 1 00:50:39 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:50:39 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 00:50:39 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 2 00:50:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Resolve Monster Combat Damage To A Player 5 "}} 

 Player 2 00:50:39 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":5,"creatorCardId":329,"entityToDoDamageCardId":256,"entityToTakeDamageCardId":329,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1,"lable":"Famine is going to hurt Isaac"}]} 

 Player 2 00:50:39 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":5,"text":"Famine Is Going To Hurt Isaac For 1 DMG "} 

 Player 2 00:50:39 $UPDATE_STACK_VIS:  
{"stackId":5,"text":"Famine will deal 1 combat damage to Isaac"} 

 Player 2 00:50:39 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":5,"text":"Famine will deal 1 combat damage to Isaac"} 

 Player 2 00:50:39 $PLAYER_GET_HIT:  
{"playerId":2,"damage":1,"damageDealerId":256} 

 Player 2 00:50:39 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":256}],"result":null,"preventMethod":false,"methodScopeId":329,"scopeIsPlayer":true,"index":14,"originStackId":-1},"isAfterActivation":true,"index":14} 

 Player 2 00:50:39 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_TAKEN","args":[{"type":2,"number":1},{"type":2,"number":1},{"type":0,"number":256}],"result":null,"preventMethod":false,"methodScopeId":329,"scopeIsPlayer":true,"index":15,"originStackId":5},"isAfterActivation":true,"index":15} 

 Player 2 00:50:39 $NEXT_STACK_ID:  

 Player 2 00:50:39 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":6,"creatorCardId":329,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":117,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":117,"effctType":0},"isAfterActivation":true,"index":15,"hasDataBeenCollectedYet":false,"stackEffectType":14,"lable":"Activate Pink Eye Effect DealDamage<DealDamage>"}} 

 Player 2 00:50:39 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":6,"creatorCardId":329,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":117,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":117,"effctType":0},"isAfterActivation":true,"index":15,"hasDataBeenCollectedYet":false,"stackEffectType":14,"lable":"Activate Pink Eye Effect DealDamage<DealDamage>"}} 

 Player 2 00:50:39 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 00:50:39 $SHOW_STACK_EFFECT:  
{"effectId":6} 

 Player 2 00:50:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Add Activate Passive Effect 6 "}} 

 Player 2 00:50:42 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":6,"text":"Activate Pink Eye effect DealDamage<DealDamage>"} 

 Player 2 00:50:42 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[256],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":329,"effectCardPlayer":329},"entityId":6,"creatorCardId":329,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":117,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":117,"effctType":0},"isAfterActivation":true,"index":15,"hasDataBeenCollectedYet":true,"stackEffectType":14,"lable":"Activate Pink Eye effect DealDamage<DealDamage>"}} 

 Player 2 00:50:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Response Adding Activate Passive Effect 6"},"childOfId":41} 

 Player 2 00:50:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 1 "},"childOfId":41} 

 Player 2 00:50:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:50:42 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:50:42 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[323,324]} 

 Player 1 00:50:42 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:50:42 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 2 00:50:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Wait For Response From Player 2 "},"childOfId":41} 

 Player 2 00:50:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:50:42 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 00:50:42 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 2 00:50:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Resolve Activate Passive Effect 6 "}} 

 Player 2 00:50:42 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":5,"creatorCardId":329,"entityToDoDamageCardId":256,"entityToTakeDamageCardId":329,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1,"lable":"Famine will deal 1 combat damage to Isaac"},{"effectCollectedData":{"effectTargets":[256],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":329,"effectCardPlayer":329},"entityId":6,"creatorCardId":329,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":117,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":117,"effctType":0},"isAfterActivation":true,"index":15,"hasDataBeenCollectedYet":true,"stackEffectType":14,"lable":"Activate Pink Eye effect DealDamage<DealDamage>"}]} 

 Player 2 00:50:42 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":117,"particleType":6} 

 Player 2 00:50:44 $DISABLE_PARTICLE_EFFECT:  
{"cardId":117,"particleType":6} 

 Player 2 00:50:44 $MONSTER_GET_DAMAGED:  
{"cardId":256,"hpLeft":1,"damageDealerId":329} 

 Player 2 00:50:44 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":329},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":256,"scopeIsPlayer":false,"index":16,"originStackId":-1},"isAfterActivation":true,"index":16} 

 Player 2 00:50:44 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_TAKEN","args":[{"type":2,"number":1},{"type":2,"number":1},{"type":0,"number":256}],"result":null,"preventMethod":false,"methodScopeId":329,"scopeIsPlayer":true,"index":15,"originStackId":5},"isAfterActivation":true,"index":15} 

 Player 2 00:50:44 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":6,"text":"Activated Pink Eye Effect"} 

 Player 2 00:50:44 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[256],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":329,"effectCardPlayer":329},"entityId":6,"creatorCardId":329,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":117,"isAfterActivation":true,"index":15,"hasDataBeenCollectedYet":true,"stackEffectType":14,"lable":"Activated Pink Eye Effect"}} 

 Player 2 00:50:44 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":5,"creatorCardId":329,"entityToDoDamageCardId":256,"entityToTakeDamageCardId":329,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1,"lable":"Famine will deal 1 combat damage to Isaac"}]} 

 Player 2 00:50:44 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 00:50:45 $SHOW_STACK_EFFECT:  
{"effectId":6} 

 Player 2 00:50:47 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":6} 

 Player 2 00:50:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Remove After Resolve Activate Passive Effect 6  "}} 

 Player 2 00:50:47 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[256],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":329,"effectCardPlayer":329},"entityId":6,"creatorCardId":329,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":117,"isAfterActivation":true,"index":15,"hasDataBeenCollectedYet":true,"stackEffectType":14,"lable":"Activated Pink Eye Effect"}} 

 Player 2 00:50:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Response Remove After Resolve Activate Passive Effect 6"},"childOfId":46} 

 Player 2 00:50:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Wait For Response From Player 2 "},"childOfId":46} 

 Player 2 00:50:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:50:47 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 2 00:50:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Wait For Response From Player 1 "},"childOfId":46} 

 Player 2 00:50:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:50:48 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:50:48 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[323,324]} 

 Player 1 00:50:48 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:50:48 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 2 00:50:48 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 2 00:50:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Resolve Monster Combat Damage To A Player 5 "}} 

 Player 2 00:50:48 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":329,"entityToDoDamageCardId":256,"entityToTakeDamageCardId":329,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1,"lable":"Famine will deal 1 combat damage to Isaac"}} 

 Player 2 00:50:48 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 00:50:48 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 00:50:48 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 2 00:50:51 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":5} 

 Player 2 00:50:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Remove After Resolve Monster Combat Damage To A Player 5  "}} 

 Player 2 00:50:51 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":329,"entityToDoDamageCardId":256,"entityToTakeDamageCardId":329,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1,"lable":"Famine will deal 1 combat damage to Isaac"}} 

 Player 2 00:50:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Response Remove After Resolve Monster Combat Damage To A Player 5"},"childOfId":51} 

 Player 2 00:50:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Wait For Response From Player 1 "},"childOfId":51} 

 Player 2 00:50:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:50:51 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:50:51 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[323,324]} 

 Player 1 00:50:51 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:50:51 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 2 00:50:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Wait For Response From Player 2 "},"childOfId":51} 

 Player 2 00:50:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:50:51 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 2 00:50:51 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 2 00:50:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Stack Was Emptied "}} 

 Player 2 00:50:51 $CLEAR_SE_VIS:  

 Player 2 00:50:54 $NEXT_STACK_ID:  

 Player 2 00:50:54 $ADD_TO_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":329,"rollingPlayerCardId":329,"stackEffectType":2,"attackedMonsterCardId":256,"lable":"Player 2 is rolling against Famine<Monster>"}} 

 Player 2 00:50:54 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":329,"rollingPlayerCardId":329,"stackEffectType":2,"attackedMonsterCardId":256,"lable":"Player 2 is rolling against Famine<Monster>"}} 

 Player 2 00:50:54 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 00:50:54 $SHOW_STACK_EFFECT:  
{"effectId":7} 

 Player 2 00:50:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":56,"_text":"Add Player Attack Roll On Monster 7 "}} 

 Player 2 00:50:57 $ROLL_DICE:  
{"playerId":2} 

 Player 2 00:50:59 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":5} 

 Player 2 00:50:59 $UPDATE_STACK_VIS:  
{"stackId":7,"text":"player rolled 5 vs Famine<Monster>"} 

 Player 2 00:50:59 $SHOW_DICE_ROLL:  
{"stackId":7} 

 Player 2 00:51:02 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":7,"text":"Player 2 rolled 5 vs Famine<Monster>"} 

 Player 2 00:51:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:51:02 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":329,"numberRolled":5,"rollingPlayerCardId":329,"stackEffectType":2,"attackedMonsterCardId":256,"lable":"Player 2 rolled 5 vs Famine<Monster>"}} 

 Player 2 00:51:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":57,"_text":"Response Adding Player Attack Roll On Monster 7"},"childOfId":56} 

 Player 2 00:51:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":58,"_text":"Wait For Response From Player 2 "},"childOfId":56} 

 Player 2 00:51:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:51:03 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 2 00:51:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":59,"_text":"Wait For Response From Player 1 "},"childOfId":56} 

 Player 2 00:51:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:51:03 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:51:03 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[323,324]} 

 Player 1 00:51:03 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:51:03 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 2 00:51:03 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 2 00:51:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":60,"_text":"Resolve Player Attack Roll On Monster 7 "}} 

 Player 2 00:51:03 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":7,"creatorCardId":329,"numberRolled":5,"rollingPlayerCardId":329,"stackEffectType":2,"attackedMonsterCardId":256,"lable":"Player 2 rolled 5 vs Famine<Monster>"}]} 

 Player 2 00:51:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":61,"_text":"Added 0 to original roll"}} 

 Player 2 00:51:03 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":7,"text":"Player 2 Rolled 5 Against Famine<Monster> 3"} 

 Player 2 00:51:03 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":7,"text":"Player 2 Roll Hit"} 

 Player 2 00:51:03 $NEXT_STACK_ID:  

 Player 2 00:51:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:51:03 $CLEAR_SE_VIS:  

 Player 2 00:51:03 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":329,"entityToDoDamageCardId":329,"entityToTakeDamageCardId":256,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5,"lable":"Isaac is going to hurt Famine"}} 

 Player 2 00:51:03 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":329,"numberRolled":5,"rollingPlayerCardId":329,"stackEffectType":2,"attackedMonsterCardId":256,"lable":"Player 2 Roll Hit"}} 

 Player 2 00:51:03 $REPLACE_STACK:  
{"currentStack":[{"entityId":8,"creatorCardId":329,"entityToDoDamageCardId":329,"entityToTakeDamageCardId":256,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5,"lable":"Isaac is going to hurt Famine"},{"entityId":7,"creatorCardId":329,"numberRolled":5,"rollingPlayerCardId":329,"stackEffectType":2,"attackedMonsterCardId":256,"lable":"Player 2 Roll Hit"}]} 

 Player 2 00:51:03 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 00:51:03 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":1},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":329,"scopeIsPlayer":true,"index":17,"originStackId":7},"isAfterActivation":true,"index":17} 

 Player 2 00:51:03 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":329,"numberRolled":5,"rollingPlayerCardId":329,"stackEffectType":2,"attackedMonsterCardId":256,"lable":"Player 2 Roll Hit"}} 

 Player 2 00:51:03 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 00:51:03 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 00:51:03 $SHOW_STACK_EFFECT:  
{"effectId":7} 

 Player 2 00:51:06 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":7} 

 Player 2 00:51:06 $SHOW_STACK_EFFECT:  
{"effectId":8} 

 Player 2 00:51:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":62,"_text":"Remove After Resolve Player Attack Roll On Monster 7  "}} 

 Player 2 00:51:09 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":329,"numberRolled":5,"rollingPlayerCardId":329,"stackEffectType":2,"attackedMonsterCardId":256,"lable":"Player 2 Roll Hit"}} 

 Player 2 00:51:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":63,"_text":"Response Remove After Resolve Player Attack Roll On Monster 7"},"childOfId":62} 

 Player 2 00:51:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":64,"_text":"Wait For Response From Player 2 "},"childOfId":62} 

 Player 2 00:51:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:51:09 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 2 00:51:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":65,"_text":"Wait For Response From Player 1 "},"childOfId":62} 

 Player 2 00:51:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:51:09 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:51:09 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[323,324]} 

 Player 1 00:51:09 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:51:09 $ACTION_MASSAGE_REMOVE:  
{"id":65} 

 Player 2 00:51:09 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 2 00:51:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":66,"_text":"Resolve Monster Combat Damage To A Player 8 "}} 

 Player 2 00:51:09 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":8,"creatorCardId":329,"entityToDoDamageCardId":329,"entityToTakeDamageCardId":256,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5,"lable":"Isaac is going to hurt Famine"}]} 

 Player 2 00:51:09 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":8,"text":"Isaac will deal 1 combat damage to Famine "} 

 Player 2 00:51:09 $UPDATE_STACK_VIS:  
{"stackId":8,"text":"Isaac will deal 1 combat damage to Famine"} 

 Player 2 00:51:09 $MONSTER_GET_DAMAGED:  
{"cardId":256,"hpLeft":0,"damageDealerId":329} 

 Player 2 00:51:09 $NEXT_STACK_ID:  

 Player 2 00:51:09 $CLEAR_SE_VIS:  

 Player 2 00:51:09 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":329,"entityToDoDamageCardId":329,"entityToTakeDamageCardId":256,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5,"lable":"Isaac will deal 1 combat damage to Famine "}} 

 Player 2 00:51:09 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":329,"monsterToDieCardId":256,"stackEffectType":5,"killerId":329,"lable":"[object Object] Is Going To Be Killed by Isaac"}} 

 Player 2 00:51:09 $REPLACE_STACK:  
{"currentStack":[{"entityId":8,"creatorCardId":329,"entityToDoDamageCardId":329,"entityToTakeDamageCardId":256,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5,"lable":"Isaac will deal 1 combat damage to Famine "},{"entityId":9,"creatorCardId":329,"monsterToDieCardId":256,"stackEffectType":5,"killerId":329,"lable":"[object Object] Is Going To Be Killed by Isaac"}]} 

 Player 2 00:51:09 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":329,"monsterToDieCardId":256,"stackEffectType":5,"killerId":329,"lable":"[object Object] Is Going To Be Killed by Isaac"}} 

 Player 2 00:51:10 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 00:51:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:51:10 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":329},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":256,"scopeIsPlayer":false,"index":18,"originStackId":-1},"isAfterActivation":true,"index":18} 

 Player 2 00:51:10 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":5},{"type":0,"number":329},{"type":0,"number":256}],"result":null,"preventMethod":false,"methodScopeId":329,"scopeIsPlayer":true,"index":19,"originStackId":8},"isAfterActivation":true,"index":19} 

 Player 2 00:51:10 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":329,"entityToDoDamageCardId":329,"entityToTakeDamageCardId":256,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5,"lable":"Isaac will deal 1 combat damage to Famine "}} 

 Player 2 00:51:10 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 00:51:10 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 00:51:10 $SHOW_STACK_EFFECT:  
{"effectId":8} 

 Player 2 00:51:12 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":8} 

 Player 2 00:51:12 $SHOW_STACK_EFFECT:  
{"effectId":9} 

 Player 2 00:51:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":67,"_text":"Remove After Resolve Monster Combat Damage To A Player 8  "}} 

 Player 2 00:51:15 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":8,"creatorCardId":329,"entityToDoDamageCardId":329,"entityToTakeDamageCardId":256,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5,"lable":"Isaac will deal 1 combat damage to Famine "}} 

 Player 2 00:51:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":68,"_text":"Response Remove After Resolve Monster Combat Damage To A Player 8"},"childOfId":67} 

 Player 2 00:51:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":69,"_text":"Wait For Response From Player 2 "},"childOfId":67} 

 Player 2 00:51:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:51:15 $ACTION_MASSAGE_REMOVE:  
{"id":69} 

 Player 2 00:51:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":70,"_text":"Wait For Response From Player 1 "},"childOfId":67} 

 Player 2 00:51:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:51:15 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:51:15 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[323,324]} 

 Player 1 00:51:15 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:51:15 $ACTION_MASSAGE_REMOVE:  
{"id":70} 

 Player 2 00:51:16 $ACTION_MASSAGE_REMOVE:  
{"id":68} 

 Player 2 00:51:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":71,"_text":"Resolve Monster Is Going To Die 9 "}} 

 Player 2 00:51:16 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":9,"creatorCardId":329,"monsterToDieCardId":256,"stackEffectType":5,"killerId":329,"lable":"[object Object] Is Going To Be Killed by Isaac"}]} 

 Player 2 00:51:16 $DISABLE_PARTICLE_EFFECT:  
{"cardId":256,"particleType":5} 

 Player 2 00:51:16 $CANCEL_ATTACK:  

 Player 2 00:51:16 $NEXT_STACK_ID:  

 Player 2 00:51:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:51:16 $CLEAR_SE_VIS:  

 Player 2 00:51:16 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":329,"monsterCardWithRewardId":256,"playerCardIdToReward":329,"stackEffectType":7,"lable":"Player 2 Is Going To Get Famine<Monster>'s Reward"}} 

 Player 2 00:51:16 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":329,"monsterToDieCardId":256,"stackEffectType":5,"killerId":329,"lable":"[object Object] Is Going To Be Killed by Isaac"}} 

 Player 2 00:51:16 $REPLACE_STACK:  
{"currentStack":[{"entityId":10,"creatorCardId":329,"monsterCardWithRewardId":256,"playerCardIdToReward":329,"stackEffectType":7,"lable":"Player 2 Is Going To Get Famine<Monster>'s Reward"},{"entityId":9,"creatorCardId":329,"monsterToDieCardId":256,"stackEffectType":5,"killerId":329,"lable":"[object Object] Is Going To Be Killed by Isaac"}]} 

 Player 2 00:51:16 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 00:51:16 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":329,"monsterToDieCardId":256,"stackEffectType":5,"killerId":329,"lable":"[object Object] Is Going To Be Killed by Isaac"}} 

 Player 2 00:51:16 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 00:51:16 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 00:51:16 $SHOW_STACK_EFFECT:  
{"effectId":9} 

 Player 2 00:51:18 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":9} 

 Player 2 00:51:19 $SHOW_STACK_EFFECT:  
{"effectId":10} 

 Player 2 00:51:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":72,"_text":"Remove After Resolve Monster Is Going To Die 9  "}} 

 Player 2 00:51:22 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":9,"creatorCardId":329,"monsterToDieCardId":256,"stackEffectType":5,"killerId":329,"lable":"[object Object] Is Going To Be Killed by Isaac"}} 

 Player 2 00:51:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":73,"_text":"Response Remove After Resolve Monster Is Going To Die 9"},"childOfId":72} 

 Player 2 00:51:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":74,"_text":"Wait For Response From Player 2 "},"childOfId":72} 

 Player 2 00:51:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:51:22 $ACTION_MASSAGE_REMOVE:  
{"id":74} 

 Player 2 00:51:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":75,"_text":"Wait For Response From Player 1 "},"childOfId":72} 

 Player 2 00:51:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:51:22 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:51:22 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[323,324]} 

 Player 1 00:51:22 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:51:22 $ACTION_MASSAGE_REMOVE:  
{"id":75} 

 Player 2 00:51:22 $ACTION_MASSAGE_REMOVE:  
{"id":73} 

 Player 2 00:51:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":76,"_text":"Resolve Monster Death Reward 10 "}} 

 Player 2 00:51:22 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":10,"creatorCardId":329,"monsterCardWithRewardId":256,"playerCardIdToReward":329,"stackEffectType":7,"lable":"Player 2 Is Going To Get Famine<Monster>'s Reward"}]} 

 Player 2 00:51:22 $DRAW_CARD:  
{"deckType":1} 

 Player 2 00:51:22 $MOVE_CARD:  
{"moveIndex":11,"cardId":118,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 00:51:22 $MOVE_CARD_END:  
{"moveIndex":11,"cardId":118,"flipIfFlipped":false,"playerId":2} 

 Player 2 00:51:22 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":118} 

 Player 2 00:51:22 $FLIP_CARD:  
{"cardId":118} 

 Player 2 00:51:22 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":118} 

 Player 2 00:51:22 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":118}],"result":null,"preventMethod":false,"methodScopeId":329,"scopeIsPlayer":true,"index":20,"originStackId":-1},"isAfterActivation":true,"index":20} 

 Player 2 00:51:23 $DRAW_CARD:  
{"deckType":1} 

 Player 2 00:51:23 $MOVE_CARD:  
{"moveIndex":12,"cardId":44,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 00:51:23 $MOVE_CARD_END:  
{"moveIndex":12,"cardId":44,"flipIfFlipped":false,"playerId":2} 

 Player 2 00:51:23 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":44} 

 Player 2 00:51:23 $FLIP_CARD:  
{"cardId":44} 

 Player 2 00:51:23 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":44} 

 Player 2 00:51:23 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":44}],"result":null,"preventMethod":false,"methodScopeId":329,"scopeIsPlayer":true,"index":21,"originStackId":-1},"isAfterActivation":true,"index":21} 

 Player 2 00:51:23 $DRAW_CARD:  
{"deckType":1} 

 Player 2 00:51:23 $MOVE_CARD:  
{"moveIndex":13,"cardId":96,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 00:51:23 $MOVE_CARD_END:  
{"moveIndex":13,"cardId":96,"flipIfFlipped":false,"playerId":2} 

 Player 2 00:51:23 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":96} 

 Player 2 00:51:24 $FLIP_CARD:  
{"cardId":96} 

 Player 2 00:51:24 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":96} 

 Player 2 00:51:24 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":96}],"result":null,"preventMethod":false,"methodScopeId":329,"scopeIsPlayer":true,"index":22,"originStackId":-1},"isAfterActivation":true,"index":22} 

 Player 2 00:51:24 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":256,"scopeIsPlayer":false,"index":23,"originStackId":10},"isAfterActivation":true,"index":23} 

 Player 2 00:51:24 $NEXT_STACK_ID:  

 Player 2 00:51:24 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":11,"creatorCardId":329,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":256,"effectToDo":{"effectName":"SkipPlayerTurn","cardEffectNum":0,"cardPlayerId":2,"cardId":256,"effctType":0},"isAfterActivation":true,"index":23,"hasDataBeenCollectedYet":false,"stackEffectType":14,"lable":"Activate Famine Effect Skip Player Turn<Skip Player Turn>"}} 

 Player 2 00:51:24 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":11,"creatorCardId":329,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":256,"effectToDo":{"effectName":"SkipPlayerTurn","cardEffectNum":0,"cardPlayerId":2,"cardId":256,"effctType":0},"isAfterActivation":true,"index":23,"hasDataBeenCollectedYet":false,"stackEffectType":14,"lable":"Activate Famine Effect Skip Player Turn<Skip Player Turn>"}} 

 Player 2 00:51:24 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 00:51:24 $SHOW_STACK_EFFECT:  
{"effectId":11} 

 Player 2 00:51:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":77,"_text":"Add Activate Passive Effect 11 "}} 

 Player 2 00:51:27 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":11,"text":"Activate Famine effect Skip Player Turn<Skip Player Turn>"} 

 Player 2 00:51:27 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[329],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":256,"effectCardPlayer":256},"entityId":11,"creatorCardId":329,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":256,"effectToDo":{"effectName":"SkipPlayerTurn","cardEffectNum":0,"cardPlayerId":2,"cardId":256,"effctType":0},"isAfterActivation":true,"index":23,"hasDataBeenCollectedYet":true,"stackEffectType":14,"lable":"Activate Famine effect Skip Player Turn<Skip Player Turn>"}} 

 Player 2 00:51:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":78,"_text":"Response Adding Activate Passive Effect 11"},"childOfId":77} 

 Player 2 00:51:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":79,"_text":"Wait For Response From Player 1 "},"childOfId":77} 

 Player 2 00:51:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:51:27 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:51:27 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[323,324]} 

 Player 1 00:51:27 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:51:27 $ACTION_MASSAGE_REMOVE:  
{"id":79} 

 Player 2 00:51:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":80,"_text":"Wait For Response From Player 2 "},"childOfId":77} 

 Player 2 00:51:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:51:27 $ACTION_MASSAGE_REMOVE:  
{"id":80} 

 Player 2 00:51:27 $ACTION_MASSAGE_REMOVE:  
{"id":78} 

 Player 2 00:51:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":81,"_text":"Resolve Activate Passive Effect 11 "}} 

 Player 2 00:51:27 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":10,"creatorCardId":329,"monsterCardWithRewardId":256,"playerCardIdToReward":329,"stackEffectType":7,"lable":"Player 2 Is Going To Get Famine<Monster>'s Reward"},{"effectCollectedData":{"effectTargets":[329],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":256,"effectCardPlayer":256},"entityId":11,"creatorCardId":329,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":256,"effectToDo":{"effectName":"SkipPlayerTurn","cardEffectNum":0,"cardPlayerId":2,"cardId":256,"effctType":0},"isAfterActivation":true,"index":23,"hasDataBeenCollectedYet":true,"stackEffectType":14,"lable":"Activate Famine effect Skip Player Turn<Skip Player Turn>"}]} 

 Player 2 00:51:27 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":256,"particleType":6} 

 Player 2 00:51:29 $DISABLE_PARTICLE_EFFECT:  
{"cardId":256,"particleType":6} 

 Player 2 00:51:29 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":256,"scopeIsPlayer":false,"index":23,"originStackId":10},"isAfterActivation":true,"index":23} 

 Player 2 00:51:29 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":11,"text":"Activated Famine Effect"} 

 Player 2 00:51:29 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[329],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":256,"effectCardPlayer":256},"entityId":11,"creatorCardId":329,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":256,"isAfterActivation":true,"index":23,"hasDataBeenCollectedYet":true,"stackEffectType":14,"lable":"Activated Famine Effect"}} 

 Player 2 00:51:29 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":10,"creatorCardId":329,"monsterCardWithRewardId":256,"playerCardIdToReward":329,"stackEffectType":7,"lable":"Player 2 Is Going To Get Famine<Monster>'s Reward"}]} 

 Player 2 00:51:29 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 00:51:29 $SHOW_STACK_EFFECT:  
{"effectId":11} 

 Player 2 00:51:32 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":11} 

 Player 2 00:51:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":82,"_text":"Remove After Resolve Activate Passive Effect 11  "}} 

 Player 2 00:51:32 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[329],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":256,"effectCardPlayer":256},"entityId":11,"creatorCardId":329,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":256,"isAfterActivation":true,"index":23,"hasDataBeenCollectedYet":true,"stackEffectType":14,"lable":"Activated Famine Effect"}} 

 Player 2 00:51:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":83,"_text":"Response Remove After Resolve Activate Passive Effect 11"},"childOfId":82} 

 Player 2 00:51:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":84,"_text":"Wait For Response From Player 2 "},"childOfId":82} 

 Player 2 00:51:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:51:32 $ACTION_MASSAGE_REMOVE:  
{"id":84} 

 Player 2 00:51:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":85,"_text":"Wait For Response From Player 1 "},"childOfId":82} 

 Player 2 00:51:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:51:32 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:51:32 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[323,324]} 

 Player 1 00:51:32 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:51:32 $ACTION_MASSAGE_REMOVE:  
{"id":85} 

 Player 2 00:51:32 $ACTION_MASSAGE_REMOVE:  
{"id":83} 

 Player 2 00:51:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":86,"_text":"Resolve Monster Death Reward 10 "}} 

 Player 2 00:51:32 $MOVE_CARD:  
{"moveIndex":14,"cardId":256,"placeID":342,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 00:51:33 $MOVE_CARD_END:  
{"moveIndex":14,"cardId":256,"flipIfFlipped":true,"playerId":2} 

 Player 2 00:51:33 $MOVE_CARD_TO_PILE:  
{"type":2,"cardId":256} 

 Player 2 00:51:33 $REMOVE_FROM_PASSIVE_MANAGER:  
{"cardId":256} 

 Player 2 00:51:33 $REMOVE_MONSTER:  
{"holderId":2,"monsterId":256} 

 Player 2 00:51:33 $NEXT_STACK_ID:  

 Player 2 00:51:33 $ADD_TO_STACK:  
{"stackEffect":{"entityId":12,"creatorCardId":329,"slotType":2,"slotToFillId":2,"stackEffectType":10,"lable":"Refill holder2 Slot"}} 

 Player 2 00:51:33 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":12,"creatorCardId":329,"slotType":2,"slotToFillId":2,"stackEffectType":10,"lable":"Refill holder2 Slot"}} 

 Player 2 00:51:33 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 00:51:33 $SHOW_STACK_EFFECT:  
{"effectId":12} 

 Player 2 00:51:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":87,"_text":"Add Reffil Empty Monster Slot 12 "}} 

 Player 2 00:51:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:51:36 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":12,"creatorCardId":329,"slotType":2,"slotToFillId":2,"stackEffectType":10,"lable":"Refill holder2 Slot"}} 

 Player 2 00:51:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":88,"_text":"Response Adding Reffil Empty Monster Slot 12"},"childOfId":87} 

 Player 2 00:51:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":89,"_text":"Wait For Response From Player 2 "},"childOfId":87} 

 Player 2 00:51:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:51:36 $ACTION_MASSAGE_REMOVE:  
{"id":89} 

 Player 2 00:51:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":90,"_text":"Wait For Response From Player 1 "},"childOfId":87} 

 Player 2 00:51:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:51:36 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:51:36 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[323,324]} 

 Player 1 00:51:36 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:51:36 $ACTION_MASSAGE_REMOVE:  
{"id":90} 

 Player 2 00:51:36 $ACTION_MASSAGE_REMOVE:  
{"id":88} 

 Player 2 00:51:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":91,"_text":"Resolve Reffil Empty Monster Slot 12 "}} 

 Player 2 00:51:36 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":10,"creatorCardId":329,"monsterCardWithRewardId":256,"playerCardIdToReward":329,"stackEffectType":7,"lable":"Player 2 Is Going To Get Famine<Monster>'s Reward"},{"entityId":12,"creatorCardId":329,"slotType":2,"slotToFillId":2,"stackEffectType":10,"lable":"Refill holder2 Slot"}]} 

 Player 2 00:51:36 $DRAW_CARD:  
{"deckType":2} 

 Player 2 00:51:36 $FLIP_CARD:  
{"cardId":235} 

 Player 2 00:51:36 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":235} 

 Player 2 00:51:36 $NEW_MONSTER_ON_PLACE:  
{"cardId":235,"monsterPlaceId":2} 

 Player 2 00:51:36 $NEXT_STACK_ID:  

 Player 2 00:51:36 $ADD_TO_STACK:  
{"stackEffect":{"entityId":13,"creatorCardId":329,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":235,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1,"lable":"Player 2 is going to activate Chest (2)"}} 

 Player 2 00:51:36 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":13,"creatorCardId":329,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":235,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1,"lable":"Player 2 is going to activate Chest (2)"}} 

 Player 2 00:51:36 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 00:51:36 $SHOW_STACK_EFFECT:  
{"effectId":13} 

 Player 2 00:51:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":92,"_text":"Add Activate Item 13 "}} 

 Player 2 00:51:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:51:39 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":13,"creatorCardId":329,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":235,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1,"lable":"Player 2 is going to activate Chest (2)"}} 

 Player 2 00:51:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":93,"_text":"Response Adding Activate Item 13"},"childOfId":92} 

 Player 2 00:51:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":94,"_text":"Wait For Response From Player 2 "},"childOfId":92} 

 Player 2 00:51:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:51:39 $ACTION_MASSAGE_REMOVE:  
{"id":94} 

 Player 2 00:51:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":95,"_text":"Wait For Response From Player 1 "},"childOfId":92} 

 Player 2 00:51:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:51:39 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:51:39 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[323,324]} 

 Player 1 00:51:39 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:51:39 $ACTION_MASSAGE_REMOVE:  
{"id":95} 

 Player 2 00:51:39 $ACTION_MASSAGE_REMOVE:  
{"id":93} 

 Player 2 00:51:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":96,"_text":"Resolve Activate Item 13 "}} 

 Player 2 00:51:40 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":10,"creatorCardId":329,"monsterCardWithRewardId":256,"playerCardIdToReward":329,"stackEffectType":7,"lable":"Player 2 Is Going To Get Famine<Monster>'s Reward"},{"entityId":12,"creatorCardId":329,"slotType":2,"slotToFillId":2,"stackEffectType":10,"lable":"Refill holder2 Slot"},{"entityId":13,"creatorCardId":329,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":235,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1,"lable":"Player 2 is going to activate Chest (2)"}]} 

 Player 2 00:51:40 $NEXT_STACK_ID:  

 Player 2 00:51:40 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":14,"text":"Player 2 Is About To Roll A Dice"} 

 Player 2 00:51:40 $NEXT_STACK_ID:  

 Player 2 00:51:40 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":15,"text":"Player 2 Is About To Roll A Dice"} 

 Player 2 00:51:40 $ADD_TO_STACK:  
{"stackEffect":{"entityId":15,"creatorCardId":329,"stackEffectToLock":{"entityId":13,"creatorCardId":329,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":235,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1,"lable":"Player 2 is going to activate Chest (2)"},"hasLockingStackEffect":false,"stackEffectType":11,"lable":"Player 2 Is About To Roll A Dice"}} 

 Player 2 00:51:40 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":15,"creatorCardId":329,"stackEffectToLock":{"entityId":13,"creatorCardId":329,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":235,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1,"lable":"Player 2 is going to activate Chest (2)"},"hasLockingStackEffect":false,"stackEffectType":11,"lable":"Player 2 Is About To Roll A Dice"}} 

 Player 2 00:51:40 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 00:51:40 $SHOW_STACK_EFFECT:  
{"effectId":15} 

 Player 2 00:51:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":97,"_text":"Add Roll Dice 15 "}} 

 Player 2 00:51:42 $ROLL_DICE:  
{"playerId":2} 

 Player 2 00:51:45 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":2} 

 Player 2 00:51:45 $UPDATE_STACK_VIS:  
{"stackId":15,"text":"player 2 rolled 2"} 

 Player 2 00:51:45 $SHOW_DICE_ROLL:  
{"stackId":15} 

 Player 2 00:51:48 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":15,"text":"Player 2 Rolled 2"} 

 Player 2 00:51:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:51:48 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":15,"creatorCardId":329,"stackEffectToLock":{"entityId":13,"creatorCardId":329,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":235,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1,"lable":"Player 2 is going to activate Chest (2)"},"hasLockingStackEffect":false,"numberRolled":2,"stackEffectType":11,"lable":"Player 2 Rolled 2"}} 

 Player 2 00:51:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":98,"_text":"Response Adding Roll Dice 15"},"childOfId":97} 

 Player 2 00:51:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":99,"_text":"Wait For Response From Player 2 "},"childOfId":97} 

 Player 2 00:51:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:51:48 $ACTION_MASSAGE_REMOVE:  
{"id":99} 

 Player 2 00:51:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":100,"_text":"Wait For Response From Player 1 "},"childOfId":97} 

 Player 2 00:51:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:51:48 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:51:48 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[323,324]} 

 Player 1 00:51:48 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:51:48 $ACTION_MASSAGE_REMOVE:  
{"id":100} 

 Player 2 00:51:48 $ACTION_MASSAGE_REMOVE:  
{"id":98} 

 Player 2 00:51:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":101,"_text":"Resolve Roll Dice 15 "}} 

 Player 2 00:51:48 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":10,"creatorCardId":329,"monsterCardWithRewardId":256,"playerCardIdToReward":329,"stackEffectType":7,"lable":"Player 2 Is Going To Get Famine<Monster>'s Reward"},{"entityId":12,"creatorCardId":329,"slotType":2,"slotToFillId":2,"stackEffectType":10,"lable":"Refill holder2 Slot"},{"entityId":13,"creatorCardId":329,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":235,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1,"lable":"Player 2 is going to activate Chest (2)"},{"entityId":15,"creatorCardId":329,"stackEffectToLock":{"entityId":13,"creatorCardId":329,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":235,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1,"lable":"Player 2 is going to activate Chest (2)"},"hasLockingStackEffect":false,"numberRolled":2,"stackEffectType":11,"lable":"Player 2 Rolled 2"}]} 

 Player 2 00:51:48 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":329,"scopeIsPlayer":true,"index":24,"originStackId":15},"isAfterActivation":true,"index":24} 

 Player 2 00:51:48 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":15,"creatorCardId":329,"stackEffectToLock":{"entityId":13,"creatorCardId":329,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":235,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1,"lable":"Player 2 is going to activate Chest (2)"},"hasLockingStackEffect":false,"numberRolled":2,"stackEffectType":11,"lable":"Player 2 Rolled 2"}} 

 Player 2 00:51:48 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":10,"creatorCardId":329,"monsterCardWithRewardId":256,"playerCardIdToReward":329,"stackEffectType":7,"lable":"Player 2 Is Going To Get Famine<Monster>'s Reward"},{"entityId":12,"creatorCardId":329,"slotType":2,"slotToFillId":2,"stackEffectType":10,"lable":"Refill holder2 Slot"},{"entityId":13,"creatorCardId":329,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":235,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1,"lable":"Player 2 is going to activate Chest (2)"}]} 

 Player 2 00:51:48 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 00:51:48 $SHOW_STACK_EFFECT:  
{"effectId":15} 

 Player 2 00:51:51 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":15} 

 Player 2 00:51:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":102,"_text":"Remove After Resolve Roll Dice 15  "}} 

 Player 2 00:51:51 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":15,"creatorCardId":329,"stackEffectToLock":{"entityId":13,"creatorCardId":329,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":235,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1,"lable":"Player 2 is going to activate Chest (2)"},"hasLockingStackEffect":false,"numberRolled":2,"stackEffectType":11,"lable":"Player 2 Rolled 2"}} 

 Player 2 00:51:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":103,"_text":"Response Remove After Resolve Roll Dice 15"},"childOfId":102} 

 Player 2 00:51:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":104,"_text":"Wait For Response From Player 1 "},"childOfId":102} 

 Player 2 00:51:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:51:51 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:51:51 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[323,324]} 

 Player 1 00:51:51 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:51:51 $ACTION_MASSAGE_REMOVE:  
{"id":104} 

 Player 2 00:51:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":105,"_text":"Wait For Response From Player 2 "},"childOfId":102} 

 Player 2 00:51:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:51:51 $ACTION_MASSAGE_REMOVE:  
{"id":105} 

 Player 2 00:51:51 $ACTION_MASSAGE_REMOVE:  
{"id":103} 

 Player 2 00:51:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":106,"_text":"Resolve Activate Item 13 "}} 

 Player 2 00:51:51 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":235,"particleType":6} 

 Player 2 00:51:53 $DISABLE_PARTICLE_EFFECT:  
{"cardId":235,"particleType":6} 

 Player 2 00:51:53 $DRAW_CARD:  
{"deckType":1} 

 Player 2 00:51:53 $MOVE_CARD:  
{"moveIndex":15,"cardId":56,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 00:51:54 $MOVE_CARD_END:  
{"moveIndex":15,"cardId":56,"flipIfFlipped":false,"playerId":2} 

 Player 2 00:51:54 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":56} 

 Player 2 00:51:54 $FLIP_CARD:  
{"cardId":56} 

 Player 2 00:51:54 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":56} 

 Player 2 00:51:54 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":56}],"result":null,"preventMethod":false,"methodScopeId":329,"scopeIsPlayer":true,"index":25,"originStackId":-1},"isAfterActivation":true,"index":25} 

 Player 2 00:51:54 $DRAW_CARD:  
{"deckType":1} 

 Player 2 00:51:54 $MOVE_CARD:  
{"moveIndex":16,"cardId":74,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 00:51:54 $MOVE_CARD_END:  
{"moveIndex":16,"cardId":74,"flipIfFlipped":false,"playerId":2} 

 Player 2 00:51:54 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":74} 

 Player 2 00:51:54 $FLIP_CARD:  
{"cardId":74} 

 Player 2 00:51:54 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":74} 

 Player 2 00:51:54 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":74}],"result":null,"preventMethod":false,"methodScopeId":329,"scopeIsPlayer":true,"index":26,"originStackId":-1},"isAfterActivation":true,"index":26} 

 Player 2 00:51:54 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":13,"text":"Player 2 has activated Chest (2)"} 

 Player 2 00:51:54 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ACTIVATE_ITEM","args":[{"type":0,"number":235}],"result":null,"preventMethod":false,"methodScopeId":329,"scopeIsPlayer":true,"index":27,"originStackId":-1},"isAfterActivation":true,"index":27} 

 Player 2 00:51:55 $MOVE_CARD:  
{"moveIndex":17,"cardId":235,"placeID":342,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 00:51:55 $MOVE_CARD_END:  
{"moveIndex":17,"cardId":235,"flipIfFlipped":true,"playerId":2} 

 Player 2 00:51:55 $MOVE_CARD_TO_PILE:  
{"type":2,"cardId":235} 

 Player 2 00:51:55 $REMOVE_MONSTER:  
{"holderId":2,"monsterId":235} 

 Player 2 00:51:55 $NEXT_STACK_ID:  

 Player 2 00:51:55 $ADD_TO_STACK:  
{"stackEffect":{"entityId":16,"creatorCardId":329,"slotType":2,"slotToFillId":2,"stackEffectType":10,"lable":"Refill holder2 Slot"}} 

 Player 2 00:51:55 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":16,"creatorCardId":329,"slotType":2,"slotToFillId":2,"stackEffectType":10,"lable":"Refill holder2 Slot"}} 

 Player 2 00:51:55 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 00:51:55 $SHOW_STACK_EFFECT:  
{"effectId":16} 

 Player 2 00:51:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":107,"_text":"Add Reffil Empty Monster Slot 16 "}} 

 Player 2 00:51:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:51:58 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":16,"creatorCardId":329,"slotType":2,"slotToFillId":2,"stackEffectType":10,"lable":"Refill holder2 Slot"}} 

 Player 2 00:51:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":108,"_text":"Response Adding Reffil Empty Monster Slot 16"},"childOfId":107} 

 Player 2 00:51:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":109,"_text":"Wait For Response From Player 2 "},"childOfId":107} 

 Player 2 00:51:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:51:58 $ACTION_MASSAGE_REMOVE:  
{"id":109} 

 Player 2 00:51:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":110,"_text":"Wait For Response From Player 1 "},"childOfId":107} 

 Player 2 00:51:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:51:58 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:51:58 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[323,324]} 

 Player 1 00:51:58 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:51:58 $ACTION_MASSAGE_REMOVE:  
{"id":110} 

 Player 2 00:51:58 $ACTION_MASSAGE_REMOVE:  
{"id":108} 

 Player 2 00:51:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":111,"_text":"Resolve Reffil Empty Monster Slot 16 "}} 

 Player 2 00:51:58 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":10,"creatorCardId":329,"monsterCardWithRewardId":256,"playerCardIdToReward":329,"stackEffectType":7,"lable":"Player 2 Is Going To Get Famine<Monster>'s Reward"},{"entityId":12,"creatorCardId":329,"slotType":2,"slotToFillId":2,"stackEffectType":10,"lable":"Refill holder2 Slot"},{"entityId":13,"creatorCardId":329,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":235,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1,"lable":"Player 2 has activated Chest (2)"},{"entityId":16,"creatorCardId":329,"slotType":2,"slotToFillId":2,"stackEffectType":10,"lable":"Refill holder2 Slot"}]} 

 Player 2 00:51:58 $DRAW_CARD:  
{"deckType":2} 

 Player 2 00:51:58 $FLIP_CARD:  
{"cardId":315} 

 Player 2 00:51:58 $REGISTER_PASSIVE_ITEM:  
{"cardId":315} 

 Player 2 00:51:59 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":315} 

 Player 2 00:51:59 $NEW_MONSTER_ON_PLACE:  
{"cardId":315,"monsterPlaceId":2} 

 Player 2 00:51:59 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":16,"creatorCardId":329,"slotType":2,"slotToFillId":2,"stackEffectType":10,"lable":"Refill holder2 Slot"}} 

 Player 2 00:51:59 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":10,"creatorCardId":329,"monsterCardWithRewardId":256,"playerCardIdToReward":329,"stackEffectType":7,"lable":"Player 2 Is Going To Get Famine<Monster>'s Reward"},{"entityId":12,"creatorCardId":329,"slotType":2,"slotToFillId":2,"stackEffectType":10,"lable":"Refill holder2 Slot"},{"entityId":13,"creatorCardId":329,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":235,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1,"lable":"Player 2 has activated Chest (2)"}]} 

 Player 2 00:51:59 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 00:51:59 $SHOW_STACK_EFFECT:  
{"effectId":16} 

 Player 2 00:52:01 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":16} 

 Player 2 00:52:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":112,"_text":"Remove After Resolve Reffil Empty Monster Slot 16  "}} 

 Player 2 00:52:01 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":16,"creatorCardId":329,"slotType":2,"slotToFillId":2,"stackEffectType":10,"lable":"Refill holder2 Slot"}} 

 Player 2 00:52:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":113,"_text":"Response Remove After Resolve Reffil Empty Monster Slot 16"},"childOfId":112} 

 Player 2 00:52:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":114,"_text":"Wait For Response From Player 1 "},"childOfId":112} 

 Player 2 00:52:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:52:01 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:52:01 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[323,324]} 

 Player 1 00:52:02 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:52:02 $ACTION_MASSAGE_REMOVE:  
{"id":114} 

 Player 2 00:52:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":115,"_text":"Wait For Response From Player 2 "},"childOfId":112} 

 Player 2 00:52:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:52:02 $ACTION_MASSAGE_REMOVE:  
{"id":115} 

 Player 2 00:52:02 $ACTION_MASSAGE_REMOVE:  
{"id":113} 

 Player 2 00:52:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":116,"_text":"Resolve Activate Item 13 "}} 

 Player 2 00:52:02 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":13,"creatorCardId":329,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":235,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1,"lable":"Player 2 has activated Chest (2)"}} 

 Player 2 00:52:02 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":10,"creatorCardId":329,"monsterCardWithRewardId":256,"playerCardIdToReward":329,"stackEffectType":7,"lable":"Player 2 Is Going To Get Famine<Monster>'s Reward"},{"entityId":12,"creatorCardId":329,"slotType":2,"slotToFillId":2,"stackEffectType":10,"lable":"Refill holder2 Slot"}]} 

 Player 2 00:52:02 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 00:52:02 $SHOW_STACK_EFFECT:  
{"effectId":13} 

 Player 2 00:52:05 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":13} 

 Player 2 00:52:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":117,"_text":"Remove After Resolve Activate Item 13  "}} 

 Player 2 00:52:05 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":13,"creatorCardId":329,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":235,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1,"lable":"Player 2 has activated Chest (2)"}} 

 Player 2 00:52:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":118,"_text":"Response Remove After Resolve Activate Item 13"},"childOfId":117} 

 Player 2 00:52:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":119,"_text":"Wait For Response From Player 2 "},"childOfId":117} 

 Player 2 00:52:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:52:05 $ACTION_MASSAGE_REMOVE:  
{"id":119} 

 Player 2 00:52:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":120,"_text":"Wait For Response From Player 1 "},"childOfId":117} 

 Player 2 00:52:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:52:05 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:52:05 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[323,324]} 

 Player 1 00:52:05 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:52:05 $ACTION_MASSAGE_REMOVE:  
{"id":120} 

 Player 2 00:52:05 $ACTION_MASSAGE_REMOVE:  
{"id":118} 

 Player 2 00:52:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":121,"_text":"Resolve Reffil Empty Monster Slot 12 "}} 

 Player 2 00:52:05 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":12,"creatorCardId":329,"slotType":2,"slotToFillId":2,"stackEffectType":10,"lable":"Refill holder2 Slot"}} 

 Player 2 00:52:05 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":10,"creatorCardId":329,"monsterCardWithRewardId":256,"playerCardIdToReward":329,"stackEffectType":7,"lable":"Player 2 Is Going To Get Famine<Monster>'s Reward"}]} 

 Player 2 00:52:05 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 00:52:05 $SHOW_STACK_EFFECT:  
{"effectId":12} 

 Player 2 00:52:08 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":12} 

 Player 2 00:52:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":122,"_text":"Remove After Resolve Reffil Empty Monster Slot 12  "}} 

 Player 2 00:52:08 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":12,"creatorCardId":329,"slotType":2,"slotToFillId":2,"stackEffectType":10,"lable":"Refill holder2 Slot"}} 

 Player 2 00:52:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":123,"_text":"Response Remove After Resolve Reffil Empty Monster Slot 12"},"childOfId":122} 

 Player 2 00:52:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":124,"_text":"Wait For Response From Player 1 "},"childOfId":122} 

 Player 2 00:52:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:52:08 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:52:08 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[323,324]} 

 Player 1 00:52:08 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:52:08 $ACTION_MASSAGE_REMOVE:  
{"id":124} 

 Player 2 00:52:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":125,"_text":"Wait For Response From Player 2 "},"childOfId":122} 

 Player 2 00:52:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:52:08 $ACTION_MASSAGE_REMOVE:  
{"id":125} 

 Player 2 00:52:08 $ACTION_MASSAGE_REMOVE:  
{"id":123} 

 Player 2 00:52:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":126,"_text":"Resolve Monster Death Reward 10 "}} 

 Player 2 00:52:08 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":329,"monsterCardWithRewardId":256,"playerCardIdToReward":329,"stackEffectType":7,"lable":"Player 2 Is Going To Get Famine<Monster>'s Reward"}} 

 Player 2 00:52:08 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 00:52:08 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 00:52:08 $SHOW_STACK_EFFECT:  
{"effectId":10} 

 Player 2 00:52:11 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":10} 

 Player 2 00:52:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":127,"_text":"Remove After Resolve Monster Death Reward 10  "}} 

 Player 2 00:52:11 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":10,"creatorCardId":329,"monsterCardWithRewardId":256,"playerCardIdToReward":329,"stackEffectType":7,"lable":"Player 2 Is Going To Get Famine<Monster>'s Reward"}} 

 Player 2 00:52:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":128,"_text":"Response Remove After Resolve Monster Death Reward 10"},"childOfId":127} 

 Player 2 00:52:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":129,"_text":"Wait For Response From Player 2 "},"childOfId":127} 

 Player 2 00:52:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:52:11 $ACTION_MASSAGE_REMOVE:  
{"id":129} 

 Player 2 00:52:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":130,"_text":"Wait For Response From Player 1 "},"childOfId":127} 

 Player 2 00:52:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:52:11 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:52:12 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[323,324]} 

 Player 1 00:52:12 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:52:12 $ACTION_MASSAGE_REMOVE:  
{"id":130} 

 Player 2 00:52:12 $ACTION_MASSAGE_REMOVE:  
{"id":128} 

 Player 2 00:52:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":131,"_text":"Stack Was Emptied "}} 

 Player 2 00:52:12 $CLEAR_SE_VIS:  

 Player 2 00:52:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:52:17 $CLEAR_SE_VIS:  

 Player 2 00:52:17 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 2 00:52:17 $CLEAR_SE_VIS:  

 Player 2 00:52:17 $END_TURN:  

 Player 2 00:52:17 $SET_TURN:  
{"playerId":1} 

 Player 2 00:52:17 $START_TURN:  
{"playerId":1} 

 Player 1 00:52:17 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 00:52:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 00:52:17 $NEXT_STACK_ID:  

 Player 1 00:52:17 $ADD_TO_STACK:  
{"stackEffect":{"entityId":17,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"}} 

 Player 1 00:52:17 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":17,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"}} 

 Player 1 00:52:17 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 00:52:17 $SHOW_STACK_EFFECT:  
{"effectId":17} 

 Player 2 00:52:17 $STACK_EMPTIED:  
{"playerId":1} 

 Player 1 00:52:17 $CLEAR_SE_VIS:  

 Player 1 00:52:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":132,"_text":"Add Start Turn Loot Draw 17 "}} 

 Player 1 00:52:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 00:52:20 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":17,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"}} 

 Player 1 00:52:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":133,"_text":"Response Adding Start Turn Loot Draw 17"},"childOfId":132} 

 Player 1 00:52:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":134,"_text":"Wait For Response From Player 1 "},"childOfId":132} 

 Player 1 00:52:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 00:52:20 $ACTION_MASSAGE_REMOVE:  
{"id":134} 

 Player 1 00:52:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":135,"_text":"Wait For Response From Player 2 "},"childOfId":132} 

 Player 1 00:52:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 00:52:20 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 00:52:20 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[329]} 

 Player 2 00:52:21 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 00:52:21 $ACTION_MASSAGE_REMOVE:  
{"id":135} 

 Player 1 00:52:21 $ACTION_MASSAGE_REMOVE:  
{"id":133} 

 Player 1 00:52:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":136,"_text":"Resolve Start Turn Loot Draw 17 "}} 

 Player 1 00:52:21 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":17,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"}]} 

 Player 1 00:52:21 $DRAW_CARD:  
{"deckType":1} 

 Player 1 00:52:21 $MOVE_CARD:  
{"moveIndex":18,"cardId":30,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 00:52:21 $MOVE_CARD_END:  
{"moveIndex":18,"cardId":30,"flipIfFlipped":false,"playerId":1} 

 Player 1 00:52:21 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":30} 

 Player 1 00:52:21 $FLIP_CARD:  
{"cardId":30} 

 Player 1 00:52:21 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":30} 

 Player 1 00:52:21 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":30}],"result":null,"preventMethod":false,"methodScopeId":323,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 00:52:21 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":17,"text":"Player 1 Has Drawn Loot For Start Turn"} 

 Player 1 00:52:21 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":17,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13,"lable":"Player 1 Has Drawn Loot For Start Turn"}} 

 Player 1 00:52:21 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 1 00:52:21 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 00:52:21 $SHOW_STACK_EFFECT:  
{"effectId":17} 

 Player 1 00:52:24 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":17} 

 Player 1 00:52:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":137,"_text":"Remove After Resolve Start Turn Loot Draw 17  "}} 

 Player 1 00:52:24 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":17,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13,"lable":"Player 1 Has Drawn Loot For Start Turn"}} 

 Player 1 00:52:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":138,"_text":"Response Remove After Resolve Start Turn Loot Draw 17"},"childOfId":137} 

 Player 1 00:52:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":139,"_text":"Wait For Response From Player 2 "},"childOfId":137} 

 Player 1 00:52:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 00:52:24 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 00:52:24 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[329]} 

 Player 2 00:52:24 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 00:52:24 $ACTION_MASSAGE_REMOVE:  
{"id":139} 

 Player 1 00:52:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":140,"_text":"Wait For Response From Player 1 "},"childOfId":137} 

 Player 1 00:52:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 00:52:25 $ACTION_MASSAGE_REMOVE:  
{"id":140} 

 Player 1 00:52:25 $ACTION_MASSAGE_REMOVE:  
{"id":138} 

 Player 1 00:52:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":141,"_text":"Stack Was Emptied "}} 

 Player 1 00:52:25 $CLEAR_SE_VIS:  

 Player 1 00:52:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 00:52:25 $CLEAR_SE_VIS:  

 Player 1 00:52:26 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 1 00:52:26 $CLEAR_SE_VIS:  

 Player 1 00:52:26 $END_TURN:  

 Player 1 00:52:26 $SET_TURN:  
{"playerId":2} 

 Player 1 00:52:26 $START_TURN:  
{"playerId":2} 

 Player 2 00:52:26 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 00:52:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:52:26 $CLEAR_SE_VIS:  

 Player 2 00:52:26 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 2 00:52:26 $CLEAR_SE_VIS:  

 Player 2 00:52:26 $END_TURN:  

 Player 2 00:52:26 $SET_TURN:  
{"playerId":1} 

 Player 2 00:52:26 $START_TURN:  
{"playerId":1} 

 Player 2 00:52:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:52:26 $NEXT_STACK_ID:  

 Player 2 00:52:26 $ADD_TO_STACK:  
{"stackEffect":{"entityId":18,"creatorCardId":329,"turnPlayerCardId":329,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}} 

 Player 2 00:52:26 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":18,"creatorCardId":329,"turnPlayerCardId":329,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}} 

 Player 2 00:52:26 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 00:52:26 $SHOW_STACK_EFFECT:  
{"effectId":18} 

 Player 1 00:52:26 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 00:52:26 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 00:52:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 00:52:26 $NEXT_STACK_ID:  

 Player 1 00:52:26 $ADD_TO_STACK:  
{"stackEffect":{"entityId":18,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"}} 

 Player 1 00:52:26 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":18,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"}} 

 Player 1 00:52:26 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 00:52:26 $SHOW_STACK_EFFECT:  
{"effectId":18} 

 Player 1 00:52:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":142,"_text":"Add Start Turn Loot Draw 18 "}} 

 Player 1 00:52:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 00:52:26 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":18,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"}} 

 Player 1 00:52:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":143,"_text":"Response Adding Start Turn Loot Draw 18"},"childOfId":142} 

 Player 1 00:52:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":144,"_text":"Wait For Response From Player 1 "},"childOfId":142} 

 Player 1 00:52:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 00:52:27 $ACTION_MASSAGE_REMOVE:  
{"id":144} 

 Player 1 00:52:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":145,"_text":"Wait For Response From Player 2 "},"childOfId":142} 

 Player 1 00:52:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 00:52:27 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 00:52:27 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 00:52:27 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 00:52:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":142,"_text":"Add Start Turn Loot Draw 18 "}} 

 Player 2 00:52:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:52:27 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":18,"creatorCardId":329,"turnPlayerCardId":329,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}} 

 Player 2 00:52:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":143,"_text":"Response Adding Start Turn Loot Draw 18"},"childOfId":142} 

 Player 2 00:52:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":144,"_text":"Wait For Response From Player 1 "},"childOfId":142} 

 Player 2 00:52:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:52:27 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 2 00:52:27 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[329]} 

 Player 2 00:52:27 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 00:52:27 $CLEAR_SE_VIS:  

 Player 1 00:52:27 $CLEAR_SE_VIS:  

 Player 1 00:52:27 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[323,324,35,126,93,30]} 

 Player 1 00:52:27 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 1 00:52:27 $ACTION_MASSAGE_REMOVE:  
{"id":145} 

 Player 1 00:52:27 $ACTION_MASSAGE_REMOVE:  
{"id":143} 

 Player 1 00:52:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":149,"_text":"Resolve Start Turn Loot Draw 18 "}} 

 Player 1 00:52:27 $DO_STACK_EFFECT:  
{"originPlayerId":1,"playerId":2,"currentStack":[{"entityId":18,"creatorCardId":329,"turnPlayerCardId":329,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"},{"entityId":18,"creatorCardId":329,"turnPlayerCardId":329,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}]} 

 Player 2 00:52:27 $ACTION_MASSAGE_REMOVE:  
{"id":144} 

 Player 2 00:52:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":149,"_text":"Wait For Response From Player 2 "},"childOfId":142} 

 Player 2 00:52:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:52:27 $ACTION_MASSAGE_REMOVE:  
{"id":149} 

 Player 2 00:52:27 $ACTION_MASSAGE_REMOVE:  
{"id":143} 

 Player 2 00:52:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":150,"_text":"Resolve Start Turn Loot Draw 18 "}} 

 Player 2 00:52:27 $DO_STACK_EFFECT:  
{"originPlayerId":2,"playerId":1,"currentStack":[{"entityId":18,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"},{"entityId":18,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"}]} 

 Player 2 00:52:27 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":18,"creatorCardId":329,"turnPlayerCardId":329,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"},{"entityId":18,"creatorCardId":329,"turnPlayerCardId":329,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}]} 

 Player 2 00:52:27 $DRAW_CARD:  
{"deckType":1} 

 Player 2 00:52:27 $MOVE_CARD:  
{"moveIndex":19,"cardId":112,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 00:52:28 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":18,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"},{"entityId":18,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"}]} 

 Player 1 00:52:28 $DRAW_CARD:  
{"deckType":1} 

 Player 1 00:52:28 $MOVE_CARD:  
{"moveIndex":19,"cardId":112,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 1 00:52:28 $MOVE_CARD_END:  
{"moveIndex":19,"cardId":112,"flipIfFlipped":false,"playerId":2} 

 Player 1 00:52:28 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":112} 

 Player 1 00:52:28 $FLIP_CARD:  
{"cardId":112} 

 Player 1 00:52:28 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":112} 

 Player 1 00:52:28 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":112}],"result":null,"preventMethod":false,"methodScopeId":323,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 1 00:52:28 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":18,"text":"Player 1 Has Drawn Loot For Start Turn"} 

 Player 1 00:52:28 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":18,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13,"lable":"Player 1 Has Drawn Loot For Start Turn"}} 

 Player 1 00:52:28 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 1 00:52:28 $FINISH_DO_STACK_EFFECT:  
{"playerId":2,"newStack":[{"entityId":18,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"},{"entityId":18,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13,"lable":"Player 1 Has Drawn Loot For Start Turn"}]} 

 Player 2 00:52:28 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":112} 

 Player 2 00:52:28 $FLIP_CARD:  
{"cardId":112} 

 Player 2 00:52:28 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":112} 

 Player 2 00:52:28 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":112}],"result":null,"preventMethod":false,"methodScopeId":329,"scopeIsPlayer":true,"index":28,"originStackId":-1},"isAfterActivation":true,"index":28} 

 Player 2 00:52:28 $NEXT_STACK_ID:  

 Player 2 00:52:28 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":20,"creatorCardId":329,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":318,"effectToDo":{"effectName":"GainBonusSoul","cardEffectNum":0,"cardPlayerId":2,"cardId":318,"effctType":0},"isAfterActivation":true,"index":28,"hasDataBeenCollectedYet":false,"stackEffectType":14,"lable":"Activate Soul Of Gluttony Effect GainBonusSoul<GainBonusSoul>"}} 

 Player 2 00:52:28 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":20,"creatorCardId":329,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":318,"effectToDo":{"effectName":"GainBonusSoul","cardEffectNum":0,"cardPlayerId":2,"cardId":318,"effctType":0},"isAfterActivation":true,"index":28,"hasDataBeenCollectedYet":false,"stackEffectType":14,"lable":"Activate Soul Of Gluttony Effect GainBonusSoul<GainBonusSoul>"}} 

 Player 2 00:52:28 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 00:52:28 $SHOW_STACK_EFFECT:  
{"effectId":20} 

 Player 2 00:52:28 $MOVE_CARD_END:  
{"moveIndex":19,"cardId":112,"flipIfFlipped":false,"playerId":1} 

 Player 2 00:52:28 $CLEAR_SE_VIS:  

 Player 2 00:52:28 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":18,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"}} 

 Player 2 00:52:28 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":18,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13,"lable":"Player 1 Has Drawn Loot For Start Turn"}} 

 Player 2 00:52:29 $REPLACE_STACK:  
{"currentStack":[{"entityId":18,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"},{"entityId":18,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13,"lable":"Player 1 Has Drawn Loot For Start Turn"}]} 

 Player 2 00:52:29 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 00:52:29 $SHOW_STACK_EFFECT:  
{"effectId":18} 

 Player 2 00:52:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":152,"_text":"Add Activate Passive Effect 20 "}} 

 Player 2 00:52:29 $SHOW_ANNOUNCEMENT:  
{} 

 Player 2 00:52:29 $LOG_ERROR:  
{"message":"\"Cant Get Passive Meta, last stack effect is not of type ActivatePassiveEffect\"","stack":"\"Error: Cant Get Passive Meta, last stack effect is not of type ActivatePassiveEffect\\n    at GetTargetFromPassiveMeta.collectData (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:66:19)\\n    at CardEffect.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:230:32), <anonymous>:394:60)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\\n    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113284:71\\n    at new Promise (<anonymous>)\\n    at 486.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113264:14)\\n    at CardEffect.collectEffectData (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:230:32), <anonymous>:370:16)\\n    at ActivatePassiveEffect.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:212:57)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\""} 
//////Error From Player 2////
  

 Player 2 00:52:29 $LOG_ERROR:  
//////Error From Player 2////

 "\"Cant Get Passive Meta, last stack effect is not of type ActivatePassiveEffect\""

 + "\"Error: Cant Get Passive Meta, last stack effect is not of type ActivatePassiveEffect\
    at GetTargetFromPassiveMeta.collectData (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:66:19)\
    at CardEffect.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:230:32), <anonymous>:394:60)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113284:71\
    at new Promise (<anonymous>)\
    at 486.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113264:14)\
    at CardEffect.collectEffectData (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:230:32), <anonymous>:370:16)\
    at ActivatePassiveEffect.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:212:57)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\""

////// 
//////Error From Player 2////

 "\"Cant Get Passive Meta, last stack effect is not of type ActivatePassiveEffect\""

 + "\"Error: Cant Get Passive Meta, last stack effect is not of type ActivatePassiveEffect\
    at GetTargetFromPassiveMeta.collectData (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:66:19)\
    at CardEffect.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:230:32), <anonymous>:394:60)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113284:71\
    at new Promise (<anonymous>)\
    at 486.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113264:14)\
    at CardEffect.collectEffectData (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:230:32), <anonymous>:370:16)\
    at ActivatePassiveEffect.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:212:57)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\""

////// 

 Player 2 00:52:29 $SHOW_ANNOUNCEMENT:  
{"text":"\"Cant Get Passive Meta, last stack effect is not of type ActivatePassiveEffect\""} 

 Player 2 00:52:29 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":20,"text":"Activate Soul Of Gluttony effect GainBonusSoul<GainBonusSoul>"} 

 Player 2 00:52:29 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":318,"effectCardPlayer":318},"entityId":20,"creatorCardId":329,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":318,"effectToDo":{"effectName":"GainBonusSoul","cardEffectNum":0,"cardPlayerId":2,"cardId":318,"effctType":0},"isAfterActivation":true,"index":28,"hasDataBeenCollectedYet":true,"stackEffectType":14,"lable":"Activate Soul Of Gluttony effect GainBonusSoul<GainBonusSoul>"}} 

 Player 2 00:52:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":153,"_text":"Response Adding Activate Passive Effect 20"},"childOfId":152} 

 Player 2 00:52:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":154,"_text":"Wait For Response From Player 2 "},"childOfId":152} 

 Player 2 00:52:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:52:29 $ACTION_MASSAGE_REMOVE:  
{"id":154} 

 Player 2 00:52:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":155,"_text":"Wait For Response From Player 1 "},"childOfId":152} 

 Player 2 00:52:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:52:29 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:52:29 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[323,324,35,126,93,30,112]} 

 Player 1 00:52:29 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:52:29 $ACTION_MASSAGE_REMOVE:  
{"id":155} 

 Player 2 00:52:30 $ACTION_MASSAGE_REMOVE:  
{"id":153} 

 Player 2 00:52:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":156,"_text":"Resolve Start Turn Loot Draw 18 "}} 

 Player 2 00:52:30 $DO_STACK_EFFECT:  
{"originPlayerId":2,"playerId":1,"currentStack":[{"entityId":18,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"},{"entityId":18,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13,"lable":"Player 1 Has Drawn Loot For Start Turn"}]} 

 Player 1 00:52:30 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":18,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"},{"entityId":18,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13,"lable":"Player 1 Has Drawn Loot For Start Turn"}]} 

 Player 1 00:52:30 $DRAW_CARD:  
{"deckType":1} 

 Player 1 00:52:30 $MOVE_CARD:  
{"moveIndex":20,"cardId":75,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 00:52:30 $MOVE_CARD_END:  
{"moveIndex":20,"cardId":75,"flipIfFlipped":false,"playerId":1} 

 Player 1 00:52:30 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":75} 

 Player 1 00:52:30 $FLIP_CARD:  
{"cardId":75} 

 Player 1 00:52:30 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":75} 

 Player 1 00:52:30 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":75}],"result":null,"preventMethod":false,"methodScopeId":323,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 1 00:52:31 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":18,"text":"Player 1 Has Drawn Loot For Start Turn"} 

 Player 1 00:52:31 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":18,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13,"lable":"Player 1 Has Drawn Loot For Start Turn"}} 

 Player 1 00:52:31 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 1 00:52:31 $FINISH_DO_STACK_EFFECT:  
{"playerId":2,"newStack":[{"entityId":18,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"},{"entityId":18,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13,"lable":"Player 1 Has Drawn Loot For Start Turn"}]} 

 Player 2 00:52:31 $CLEAR_SE_VIS:  

 Player 2 00:52:31 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":18,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"}} 

 Player 2 00:52:31 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":18,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13,"lable":"Player 1 Has Drawn Loot For Start Turn"}} 

 Player 2 00:52:31 $REPLACE_STACK:  
{"currentStack":[{"entityId":18,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"},{"entityId":18,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13,"lable":"Player 1 Has Drawn Loot For Start Turn"}]} 

 Player 2 00:52:31 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 00:52:31 $SHOW_STACK_EFFECT:  
{"effectId":18} 

 Player 2 00:52:31 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":18} 

 Player 2 00:52:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":157,"_text":"Remove After Resolve Start Turn Loot Draw 18  "}} 

 Player 2 00:52:31 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":18,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13,"lable":"Player 1 Has Drawn Loot For Start Turn"}} 

 Player 2 00:52:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":158,"_text":"Response Remove After Resolve Start Turn Loot Draw 18"},"childOfId":157} 

 Player 2 00:52:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":159,"_text":"Wait For Response From Player 1 "},"childOfId":157} 

 Player 2 00:52:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:52:31 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 2 00:52:31 $HIDE_ANNOUNCEMENT:  

 Player 2 00:52:31 $HIDE_ANNOUNCEMENT:  

 Player 1 00:52:31 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[323,324,35,126,93,30,112,75]} 

 Player 1 00:52:31 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:52:31 $ACTION_MASSAGE_REMOVE:  
{"id":159} 

 Player 2 00:52:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":160,"_text":"Wait For Response From Player 2 "},"childOfId":157} 

 Player 2 00:52:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:52:31 $ACTION_MASSAGE_REMOVE:  
{"id":160} 

 Player 2 00:52:31 $ACTION_MASSAGE_REMOVE:  
{"id":158} 

 Player 2 00:52:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":161,"_text":"Resolve Start Turn Loot Draw 18 "}} 

 Player 2 00:52:31 $DO_STACK_EFFECT:  
{"originPlayerId":2,"playerId":1,"currentStack":[{"entityId":18,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13,"lable":"Player 1 Has Drawn Loot For Start Turn"}]} 

 Player 1 00:52:32 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":18,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13,"lable":"Player 1 Has Drawn Loot For Start Turn"}]} 

 Player 1 00:52:32 $DRAW_CARD:  
{"deckType":1} 

 Player 1 00:52:32 $MOVE_CARD:  
{"moveIndex":21,"cardId":12,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 00:52:32 $MOVE_CARD_END:  
{"moveIndex":21,"cardId":12,"flipIfFlipped":false,"playerId":1} 

 Player 1 00:52:32 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":12} 

 Player 1 00:52:32 $FLIP_CARD:  
{"cardId":12} 

 Player 1 00:52:32 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":12} 

 Player 1 00:52:32 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":12}],"result":null,"preventMethod":false,"methodScopeId":323,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 1 00:52:32 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":18,"text":"Player 1 Has Drawn Loot For Start Turn"} 

 Player 1 00:52:32 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":18,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13,"lable":"Player 1 Has Drawn Loot For Start Turn"}} 

 Player 1 00:52:32 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 1 00:52:32 $FINISH_DO_STACK_EFFECT:  
{"playerId":2,"newStack":[{"entityId":18,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13,"lable":"Player 1 Has Drawn Loot For Start Turn"}]} 

 Player 2 00:52:32 $CLEAR_SE_VIS:  

 Player 2 00:52:32 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":18,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13,"lable":"Player 1 Has Drawn Loot For Start Turn"}} 

 Player 2 00:52:32 $REPLACE_STACK:  
{"currentStack":[{"entityId":18,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13,"lable":"Player 1 Has Drawn Loot For Start Turn"}]} 

 Player 2 00:52:32 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 00:52:32 $SHOW_STACK_EFFECT:  
{"effectId":18} 

 Player 2 00:52:32 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":18} 

 Player 2 00:52:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":162,"_text":"Remove After Resolve Start Turn Loot Draw 18  "}} 

 Player 2 00:52:33 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":18,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"}} 

 Player 2 00:52:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":163,"_text":"Response Remove After Resolve Start Turn Loot Draw 18"},"childOfId":162} 

 Player 2 00:52:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":164,"_text":"Wait For Response From Player 2 "},"childOfId":162} 

 Player 2 00:52:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:52:33 $ACTION_MASSAGE_REMOVE:  
{"id":164} 

 Player 2 00:52:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":165,"_text":"Wait For Response From Player 1 "},"childOfId":162} 

 Player 2 00:52:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:52:33 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:52:33 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[323,324,35,126,93,30,112,75,12]} 

 Player 1 00:52:33 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:52:33 $ACTION_MASSAGE_REMOVE:  
{"id":165} 

 Player 2 00:52:33 $ACTION_MASSAGE_REMOVE:  
{"id":163} 

 Player 2 00:52:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":166,"_text":"Stack Was Emptied "}} 

 Player 2 00:52:33 $ACTION_MASSAGE_REMOVE:  
{"id":149} 

 Player 2 00:52:33 $TURN_PLAYER_DO_STACK_EFFECT:  
{"playerId":1} 

 Player 2 00:52:33 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 00:52:33 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":18,"text":"Player 2 Has Drawn Loot For Start Turn"} 

 Player 2 00:52:33 $FINISH_DO_STACK_EFFECT:  
{"playerId":1,"newStack":[]} 

 Player 1 00:52:33 $CLEAR_SE_VIS:  

 Player 1 00:52:33 $ACTION_MASSAGE_REMOVE:  
{"id":149} 

 Player 1 00:52:33 $ACTION_MASSAGE_REMOVE:  
{"id":149} 

 Player 1 00:52:33 $CLEAR_SE_VIS:  

 Player 1 00:52:33 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 1 00:52:33 $CLEAR_SE_VIS:  

 Player 2 00:52:33 $ACTION_MASSAGE_REMOVE:  
{"id":149} 

 Player 2 00:52:33 $STACK_EMPTIED:  
{"playerId":1} 

 Player 1 00:52:33 $CLEAR_SE_VIS:  

 Player 2 00:52:35 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":18} 

 Player 2 00:52:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":167,"_text":"Remove After Resolve Start Turn Loot Draw 18  "}} 

 Player 2 00:52:35 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":18,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13,"lable":"Player 1 Has Drawn Loot For Start Turn"}} 

 Player 2 00:52:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":168,"_text":"Response Remove After Resolve Start Turn Loot Draw 18"},"childOfId":167} 

 Player 2 00:52:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":169,"_text":"Wait For Response From Player 1 "},"childOfId":167} 

 Player 2 00:52:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:52:35 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:52:36 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[323,324,35,126,93,30,112,75,12]} 

 Player 1 00:52:36 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:52:36 $ACTION_MASSAGE_REMOVE:  
{"id":169} 

 Player 2 00:52:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":170,"_text":"Wait For Response From Player 2 "},"childOfId":167} 

 Player 2 00:52:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:52:36 $ACTION_MASSAGE_REMOVE:  
{"id":170} 

 Player 2 00:52:36 $ACTION_MASSAGE_REMOVE:  
{"id":168} 

 Player 2 00:52:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":171,"_text":"Stack Was Emptied "}} 

 Player 2 00:52:36 $ACTION_MASSAGE_REMOVE:  
{"id":149} 

 Player 2 00:52:36 $TURN_PLAYER_DO_STACK_EFFECT:  
{"playerId":1} 

 Player 2 00:52:36 $STACK_EMPTIED:  
{"playerId":1} 

 Player 1 00:52:36 $CLEAR_SE_VIS:  

 Player 2 00:55:13 $MATCH: 