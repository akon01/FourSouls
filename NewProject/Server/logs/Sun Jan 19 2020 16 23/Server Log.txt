Start Log 

 Player 1 16:23:39 $MATCH:  

 Player 1 16:23:40 $START_GAME:  

 Player 1 16:23:40 $MOVE_TO_TABLE:  

 Player 2 16:23:40 $MOVE_TO_TABLE:  

 Player 2 16:23:49 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 1 16:23:49 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 16:23:49 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":296,"itemCardId":297} 

 Player 2 16:23:49 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":285}],"result":true,"preventMethod":false,"methodScopeId":284,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 16:23:49 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":284,"itemCardId":285} 

 Player 2 16:23:49 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[40,9,28,105,98,52,128,62,34,89,27,25,12,76,61,17,124,142,59,50,116,77,16,30,131,11,7,58,10,134,86,120,125,130,57,104,51,109,72,26,15,46,85,101,75,65,136,49,114,97,91,70,138,126,47,69,140,141,8,103,29,73,117,139,83,39,129,64,45,107,115,48,66,54,20,111,90,113,94,14,24,135,110,81,36,41,92,42,123,71,84,33,106,133,19,53,99,137,121,118,127,112,95,63,31,74,132,23,88,93,55,122,22,108,35,44,87,68,43,38,37,80,32,67,100,79,82,78,119,96,102,60,56,18,13,21]} 

 Player 2 16:23:49 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[234,252,279,255,260,242,277,236,231,262,253,264,249,281,235,250,254,245,278,229,240,243,241,259,270,276,268,274,263,247,237,233,271,230,272,256,248,232,265,257,266,269,238,261,228,275,273,280,239,246,251,258,244,267]} 

 Player 2 16:23:49 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[224,206,189,225,198,207,175,212,221,165,192,220,193,154,170,169,166,184,167,156,163,162,216,197,168,160,150,148,222,145,157,185,180,176,164,171,199,217,214,194,149,153,211,152,218,219,210,209,155,201,190,173,146,213,181,191,151,196,179,182,174,172,223,177,187,186,215,195,204,178,203,202,208,159,188,161,147,200,158,205,183]} 

 Player 2 16:23:49 $DRAW_CARD:  
{"deckType":5} 

 Player 2 16:23:49 $FLIP_CARD:  
{"cardId":183} 

 Player 2 16:23:49 $ADD_STORE_CARD:  
{"cardId":183} 

 Player 2 16:23:49 $DRAW_CARD:  
{"deckType":5} 

 Player 2 16:23:49 $FLIP_CARD:  
{"cardId":205} 

 Player 2 16:23:49 $ADD_STORE_CARD:  
{"cardId":205} 

 Player 2 16:23:49 $DRAW_CARD:  
{"deckType":2} 

 Player 2 16:23:49 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":267} 

 Player 2 16:23:49 $DRAW_CARD:  
{"deckType":2} 

 Player 2 16:23:49 $FLIP_CARD:  
{"cardId":244} 

 Player 2 16:23:49 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":244} 

 Player 2 16:23:50 $NEW_MONSTER_ON_PLACE:  
{"cardId":244,"monsterPlaceId":1} 

 Player 2 16:23:50 $DRAW_CARD:  
{"deckType":2} 

 Player 2 16:23:50 $FLIP_CARD:  
{"cardId":258} 

 Player 2 16:23:50 $REGISTER_PASSIVE_ITEM:  
{"cardId":258} 

 Player 2 16:23:50 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":258} 

 Player 2 16:23:50 $NEW_MONSTER_ON_PLACE:  
{"cardId":258,"monsterPlaceId":2} 

 Player 2 16:23:50 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 16:23:50 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 16:23:50 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:23:50 $MOVE_CARD:  
{"moveIndex":1,"cardId":21,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:23:50 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":297}],"result":true,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 16:23:50 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":21,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:23:50 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":21} 

 Player 2 16:23:50 $FLIP_CARD:  
{"cardId":21} 

 Player 2 16:23:50 $FLIP_CARD:  
{"cardId":21} 

 Player 2 16:23:50 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":21} 

 Player 2 16:23:50 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:23:50 $MOVE_CARD:  
{"moveIndex":2,"cardId":13,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:23:51 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":13,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:23:51 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":13} 

 Player 2 16:23:51 $FLIP_CARD:  
{"cardId":13} 

 Player 2 16:23:51 $FLIP_CARD:  
{"cardId":13} 

 Player 2 16:23:51 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":13} 

 Player 2 16:23:51 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:23:51 $MOVE_CARD:  
{"moveIndex":3,"cardId":18,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:23:51 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":18,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:23:51 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":18} 

 Player 2 16:23:51 $FLIP_CARD:  
{"cardId":18} 

 Player 2 16:23:51 $FLIP_CARD:  
{"cardId":18} 

 Player 2 16:23:51 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":18} 

 Player 2 16:23:51 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 16:23:51 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":284,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 16:23:51 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:23:51 $MOVE_CARD:  
{"moveIndex":4,"cardId":56,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:23:52 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":56,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:23:52 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":56} 

 Player 2 16:23:52 $FLIP_CARD:  
{"cardId":56} 

 Player 2 16:23:52 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":56} 

 Player 2 16:23:52 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:23:52 $MOVE_CARD:  
{"moveIndex":5,"cardId":60,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:23:52 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":60,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:23:52 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":60} 

 Player 2 16:23:52 $FLIP_CARD:  
{"cardId":60} 

 Player 2 16:23:52 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":60} 

 Player 2 16:23:52 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:23:52 $MOVE_CARD:  
{"moveIndex":6,"cardId":102,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:23:53 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":102,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:23:53 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":102} 

 Player 2 16:23:53 $FLIP_CARD:  
{"cardId":102} 

 Player 2 16:23:53 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":102} 

 Player 2 16:23:53 $GAME_HAS_STARTED:  

 Player 2 16:23:53 $SET_TURN:  
{"playerId":2} 

 Player 2 16:23:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:23:53 $NEXT_STACK_ID:  

 Player 2 16:23:53 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:23:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 16:23:53 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":284,"turnPlayerCardId":284,"stackEffectType":13}} 

 Player 2 16:23:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 16:23:53 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":284,"turnPlayerCardId":284,"stackEffectType":13}} 

 Player 2 16:23:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 2 16:23:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:23:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 16:23:53 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":284,"turnPlayerCardId":284,"stackEffectType":13}} 

 Player 2 16:23:53 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 16:23:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 2 16:23:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 2 16:23:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:23:53 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 16:23:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 2 16:23:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:23:53 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:23:53 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:23:53 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:23:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 16:23:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 16:23:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 16:23:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 16:23:54 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:23:54 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 16:23:54 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 16:23:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 2 16:23:54 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:23:54 $MOVE_CARD:  
{"moveIndex":7,"cardId":96,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:23:54 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":96,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:23:54 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":96} 

 Player 2 16:23:54 $FLIP_CARD:  
{"cardId":96} 

 Player 2 16:23:54 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":96} 

 Player 2 16:23:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 16:23:54 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":284,"turnPlayerCardId":284,"stackEffectType":13}} 

 Player 2 16:23:54 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 16:23:54 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:23:54 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":284,"turnPlayerCardId":284,"stackEffectType":13}} 

 Player 2 16:23:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 2 16:23:54 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:23:54 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":284,"turnPlayerCardId":284,"stackEffectType":13}} 

 Player 2 16:23:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 2 16:23:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 2 16:23:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:23:55 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:23:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 16:23:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 16:23:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 16:23:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 16:23:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 16:23:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 16:23:55 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:23:55 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 2 16:23:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 2 16:23:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:23:55 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 2 16:23:55 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 2 16:23:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 2 16:23:55 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:23:55 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 16:23:55 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 16:23:55 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 16:23:55 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 16:23:55 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 16:23:55 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 16:23:55 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 16:23:55 $UPDATE_ACTIONS:  

 Player 2 16:23:56 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 16:23:57 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 16:26:15 $SHOW_DECISION:  
{"startCardId":284,"endCardId":258} 

 Player 2 16:26:18 $NEXT_STACK_ID:  

 Player 2 16:26:18 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:26:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Lust"} 

 Player 2 16:26:18 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":284,"attackingPlayerCardId":284,"idOfCardBeingAttacked":258,"stackEffectType":4}} 

 Player 2 16:26:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Lust"} 

 Player 2 16:26:19 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":284,"attackingPlayerCardId":284,"idOfCardBeingAttacked":258,"stackEffectType":4}} 

 Player 2 16:26:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add DeclareAttack 2 "}} 

 Player 2 16:26:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:26:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Lust"} 

 Player 2 16:26:19 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":284,"attackingPlayerCardId":284,"idOfCardBeingAttacked":258,"stackEffectType":4}} 

 Player 2 16:26:19 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 16:26:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding DeclareAttack 2"},"childOfId":10} 

 Player 2 16:26:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 2 16:26:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:26:19 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 2 16:26:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 2 16:26:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:26:19 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:26:19 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:26:19 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:26:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Lust"} 

 Player 1 16:26:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Lust"} 

 Player 1 16:26:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Lust"} 

 Player 1 16:26:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Lust"} 

 Player 1 16:26:19 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:26:19 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 2 16:26:19 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 2 16:26:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve DeclareAttack 2 "}} 

 Player 2 16:26:19 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":258,"particleType":5} 

 Player 2 16:26:19 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":284,"scopeIsPlayer":true,"index":4,"originStackId":2},"isAfterActivation":true,"index":4} 

 Player 2 16:26:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Lust"} 

 Player 2 16:26:19 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":284,"attackingPlayerCardId":284,"idOfCardBeingAttacked":258,"stackEffectType":4}} 

 Player 2 16:26:19 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 16:26:19 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:26:19 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":284,"attackingPlayerCardId":284,"idOfCardBeingAttacked":258,"stackEffectType":4}} 

 Player 2 16:26:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve DeclareAttack 2  "}} 

 Player 2 16:26:19 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:26:19 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":284,"attackingPlayerCardId":284,"idOfCardBeingAttacked":258,"stackEffectType":4}} 

 Player 2 16:26:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve DeclareAttack 2"},"childOfId":15} 

 Player 2 16:26:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 2 16:26:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:26:20 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:26:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Lust"} 

 Player 1 16:26:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Lust"} 

 Player 1 16:26:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Lust"} 

 Player 1 16:26:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Lust"} 

 Player 1 16:26:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Lust"} 

 Player 1 16:26:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Lust"} 

 Player 1 16:26:20 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:26:20 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 16:26:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 2 16:26:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:26:20 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 2 16:26:20 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 2 16:26:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 2 16:26:20 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:26:20 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 16:26:20 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 16:26:20 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 16:26:20 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 16:26:20 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 16:26:20 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 16:26:20 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 16:26:20 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 16:26:20 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 16:26:20 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 16:26:20 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 16:26:21 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 16:26:22 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 16:26:23 $NEXT_STACK_ID:  

 Player 2 16:26:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:26:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Lust<Monster>"} 

 Player 2 16:26:23 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":284,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 2 16:26:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Lust<Monster>"} 

 Player 2 16:26:23 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":284,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 2 16:26:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add AttackRoll 3 "}} 

 Player 2 16:26:23 $ROLL_DICE:  
{"playerId":2} 

 Player 1 16:26:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:26:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:26:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Lust<Monster>"} 

 Player 1 16:26:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Lust<Monster>"} 

 Player 2 16:26:24 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":5} 

 Player 2 16:26:24 $UPDATE_STACK_VIS:  
{"stackId":3,"text":"player rolled 5 vs Lust<Monster>"} 

 Player 2 16:26:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 5 vs Lust<Monster>"} 

 Player 2 16:26:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:26:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 5 vs Lust<Monster>"} 

 Player 2 16:26:27 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":284,"numberRolled":5,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 2 16:26:27 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 16:26:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding AttackRoll 3"},"childOfId":20} 

 Player 2 16:26:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 2 16:26:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:26:27 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 2 16:26:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 2 16:26:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:26:27 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:26:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Lust<Monster>"} 

 Player 1 16:26:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Lust<Monster>"} 

 Player 1 16:26:27 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:26:27 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 2 16:26:28 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 2 16:26:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve AttackRoll 3 "}} 

 Player 2 16:26:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Added 0 to original roll"}} 

 Player 2 16:26:28 $NEXT_STACK_ID:  

 Player 2 16:26:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 5 vs Lust<Monster>"} 

 Player 2 16:26:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:26:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Lust \n2:Player 2 rolled 5 vs Lust<Monster>"} 

 Player 2 16:26:28 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":284,"entityToDoDamageCardId":284,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 16:26:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Lust \n2:Player 2 rolled 5 vs Lust<Monster>"} 

 Player 2 16:26:28 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":284,"numberRolled":5,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 2 16:26:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Lust \n2:Player 2 rolled 5 vs Lust<Monster>"} 

 Player 2 16:26:28 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":284,"entityToDoDamageCardId":284,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 16:26:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Lust \n2:Player 2 rolled 5 vs Lust<Monster>"} 

 Player 2 16:26:28 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":284,"numberRolled":5,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 2 16:26:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Lust \n2:Player 2 rolled 5 vs Lust<Monster>"} 

 Player 2 16:26:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Lust \n2:Player 2 rolled 5 vs Lust<Monster>"} 

 Player 2 16:26:28 $REPLACE_STACK:  
{"currentStack":[{"entityId":4,"creatorCardId":284,"entityToDoDamageCardId":284,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":3,"creatorCardId":284,"numberRolled":5,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":258}]} 

 Player 2 16:26:28 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":284,"scopeIsPlayer":true,"index":5,"originStackId":3},"isAfterActivation":true,"index":5} 

 Player 2 16:26:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Lust \n2:Player 2 rolled 5 vs Lust<Monster>"} 

 Player 2 16:26:28 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":284,"numberRolled":5,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 2 16:26:28 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 16:26:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Lust"} 

 Player 2 16:26:28 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":284,"numberRolled":5,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 2 16:26:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Remove After Resolve AttackRoll 3  "}} 

 Player 2 16:26:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Lust"} 

 Player 2 16:26:28 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":284,"numberRolled":5,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 2 16:26:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Response Remove After Resolve AttackRoll 3"},"childOfId":26} 

 Player 2 16:26:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":26} 

 Player 2 16:26:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:26:28 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 2 16:26:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Wait For Response From Player 1 "},"childOfId":26} 

 Player 2 16:26:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:26:28 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:26:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Lust<Monster>"} 

 Player 1 16:26:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Lust<Monster>"} 

 Player 1 16:26:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Lust"} 

 Player 1 16:26:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Lust"} 

 Player 1 16:26:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Lust"} 

 Player 1 16:26:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Lust"} 

 Player 1 16:26:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Lust"} 

 Player 1 16:26:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Lust"} 

 Player 1 16:26:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Lust"} 

 Player 1 16:26:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Lust"} 

 Player 1 16:26:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Lust"} 

 Player 1 16:26:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Lust"} 

 Player 1 16:26:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Lust \n2:Player 2 is rolling against Lust<Monster>"} 

 Player 1 16:26:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Lust \n2:Player 2 is rolling against Lust<Monster>"} 

 Player 1 16:26:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Lust \n2:Player 2 is rolling against Lust<Monster>"} 

 Player 1 16:26:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Lust \n2:Player 2 is rolling against Lust<Monster>"} 

 Player 1 16:26:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Lust \n2:Player 2 is rolling against Lust<Monster>"} 

 Player 1 16:26:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Lust \n2:Player 2 is rolling against Lust<Monster>"} 

 Player 1 16:26:29 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:26:29 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 16:26:29 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 2 16:26:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Resolve CombatDamage 4 "}} 

 Player 2 16:26:29 $UPDATE_STACK_VIS:  
{"stackId":4,"text":"Blue Baby will deal 1 combat damage to Lust"} 

 Player 2 16:26:29 $MONSTER_GET_DAMAGED:  
{"cardId":258,"hpLeft":1,"damageDealerId":284} 

 Player 2 16:26:29 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":284}],"result":null,"preventMethod":false,"methodScopeId":258,"scopeIsPlayer":false,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 

 Player 2 16:26:29 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":5},{"type":0,"number":284},{"type":0,"number":258}],"result":null,"preventMethod":false,"methodScopeId":284,"scopeIsPlayer":true,"index":7,"originStackId":4},"isAfterActivation":true,"index":7} 

 Player 2 16:26:29 $NEXT_STACK_ID:  

 Player 2 16:26:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Lust"} 

 Player 2 16:26:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Lust \n2:Activate Lust effect DealDamage<DealDamage>"} 

 Player 2 16:26:29 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":5,"creatorCardId":258,"hasLockingStackEffect":false,"cardActivatorId":258,"cardWithEffectId":258,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":258,"cardId":258,"effctType":0},"isAfterActivation":true,"index":7,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 16:26:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Lust \n2:Activate Lust effect DealDamage<DealDamage>"} 

 Player 2 16:26:29 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":5,"creatorCardId":258,"hasLockingStackEffect":false,"cardActivatorId":258,"cardWithEffectId":258,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":258,"cardId":258,"effctType":0},"isAfterActivation":true,"index":7,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 16:26:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Add ActivatePassiveEffect 5 "}} 

 Player 2 16:26:29 $LOG_ERROR:  
"error while resolving stack effect 4" 
//////Error From Player 2////
  

 Player 2 16:26:29 $LOG_ERROR:  
//////Error From Player 2////
 [object Object]
////// 

 Player 2 16:26:30 $LOG_ERROR:  
{"message":"\"Cannot read property 'playerId' of undefined\"","stack":"\"TypeError: Cannot read property 'playerId' of undefined\\n    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/Stack.js:317:165)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\\n    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\\n    at new Promise (<anonymous>)\\n    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\\n    at Function.Stack.addToStack (http://localhost:7456/preview-scripts/assets/Script/Entites/Stack.js:301:16)\\n    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:542:62)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\""} 
//////Error From Player 2////
  

 Player 2 16:26:30 $LOG_ERROR:  
//////Error From Player 2////

 "\"Cannot read property 'playerId' of undefined\""

 + "\"TypeError: Cannot read property 'playerId' of undefined\
    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/Stack.js:317:165)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\
    at new Promise (<anonymous>)\
    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\
    at Function.Stack.addToStack (http://localhost:7456/preview-scripts/assets/Script/Entites/Stack.js:301:16)\
    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:542:62)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\""

////// 
//////Error From Player 2////

 "\"Cannot read property 'playerId' of undefined\""

 + "\"TypeError: Cannot read property 'playerId' of undefined\
    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/Stack.js:317:165)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\
    at new Promise (<anonymous>)\
    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\
    at Function.Stack.addToStack (http://localhost:7456/preview-scripts/assets/Script/Entites/Stack.js:301:16)\
    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:542:62)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\""

////// 

 Player 2 16:26:30 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 16:26:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Lust effect DealDamage<DealDamage>"} 

 Player 2 16:26:30 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":284,"entityToDoDamageCardId":284,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 16:26:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Remove After Resolve CombatDamage 4  "}} 

 Player 2 16:26:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Lust effect DealDamage<DealDamage>"} 

 Player 2 16:26:30 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":284,"entityToDoDamageCardId":284,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 16:26:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Response Remove After Resolve CombatDamage 4"},"childOfId":32} 

 Player 2 16:26:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Wait For Response From Player 1 "},"childOfId":32} 

 Player 2 16:26:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:26:30 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:26:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Lust"} 

 Player 1 16:26:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Lust"} 

 Player 1 16:26:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Lust \n2:Activate Lust "} 

 Player 1 16:26:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Lust \n2:Activate Lust "} 

 Player 1 16:26:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Lust \n2:Activate Lust "} 

 Player 1 16:26:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Lust \n2:Activate Lust "} 

 Player 1 16:26:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Lust \n2:Activate Lust "} 

 Player 1 16:26:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Lust \n2:Activate Lust "} 

 Player 1 16:26:30 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:26:30 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 16:26:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Wait For Response From Player 2 "},"childOfId":32} 

 Player 2 16:26:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:26:31 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 16:26:31 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 2 16:26:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Resolve ActivatePassiveEffect 5 "}} 

 Player 2 16:26:31 $LOG_ERROR:  
{"message":"\"no MetaIndex\"","stack":"\"Error: no MetaIndex\\n    at GetTargetFromPassiveMeta.collectData (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/DataCollector/GetTargetFromPassiveMeta.js:34:19)\\n    at CardEffect.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/CardEffect.js:326:60)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\\n    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\\n    at new Promise (<anonymous>)\\n    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\\n    at CardEffect.collectEffectData (http://localhost:7456/preview-scripts/assets/Script/Entites/CardEffect.js:302:16)\\n    at CardEffect.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/CardEffect.js:466:51)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\""} 
//////Error From Player 2////
  

 Player 2 16:26:31 $LOG_ERROR:  
//////Error From Player 2////

 "\"no MetaIndex\""

 + "\"Error: no MetaIndex\
    at GetTargetFromPassiveMeta.collectData (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/DataCollector/GetTargetFromPassiveMeta.js:34:19)\
    at CardEffect.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/CardEffect.js:326:60)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\
    at new Promise (<anonymous>)\
    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\
    at CardEffect.collectEffectData (http://localhost:7456/preview-scripts/assets/Script/Entites/CardEffect.js:302:16)\
    at CardEffect.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/CardEffect.js:466:51)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\""

////// 
//////Error From Player 2////

 "\"no MetaIndex\""

 + "\"Error: no MetaIndex\
    at GetTargetFromPassiveMeta.collectData (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/DataCollector/GetTargetFromPassiveMeta.js:34:19)\
    at CardEffect.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/CardEffect.js:326:60)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\
    at new Promise (<anonymous>)\
    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\
    at CardEffect.collectEffectData (http://localhost:7456/preview-scripts/assets/Script/Entites/CardEffect.js:302:16)\
    at CardEffect.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/CardEffect.js:466:51)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\""

////// 

 Player 2 16:26:31 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":258,"particleType":6} 

 Player 2 16:26:31 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 16:26:31 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 2 16:26:32 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 2 16:26:32 $DISABLE_PARTICLE_EFFECT:  
{"cardId":258,"particleType":6} 

 Player 2 16:26:33 $LOG_ERROR:  
"error while resolving stack effect 5" 
//////Error From Player 2////
  

 Player 2 16:26:33 $LOG_ERROR:  
//////Error From Player 2////
 [object Object]
////// 

 Player 2 16:26:33 $LOG_ERROR:  
{"message":"\"Cannot read property 'methodArgs' of undefined\"","stack":"\"TypeError: Cannot read property 'methodArgs' of undefined\\n    at ActivatePassiveEffect.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/StackEffects/Activate%20Passive%20Effect.js:295:76)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\\n    at fulfilled (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89787:28)\""} 
//////Error From Player 2////
  

 Player 2 16:26:33 $LOG_ERROR:  
//////Error From Player 2////

 "\"Cannot read property 'methodArgs' of undefined\""

 + "\"TypeError: Cannot read property 'methodArgs' of undefined\
    at ActivatePassiveEffect.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/StackEffects/Activate%20Passive%20Effect.js:295:76)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at fulfilled (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89787:28)\""

////// 
//////Error From Player 2////

 "\"Cannot read property 'methodArgs' of undefined\""

 + "\"TypeError: Cannot read property 'methodArgs' of undefined\
    at ActivatePassiveEffect.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/StackEffects/Activate%20Passive%20Effect.js:295:76)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at fulfilled (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89787:28)\""

////// 

 Player 2 16:26:33 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 2 16:26:33 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:26:33 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":5,"creatorCardId":258,"hasLockingStackEffect":false,"cardActivatorId":258,"cardWithEffectId":258,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":258,"cardId":258,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":5},{"type":0,"number":284},{"type":0,"number":258}],"result":null,"preventMethod":false,"methodScopeId":284,"scopeIsPlayer":true,"index":7,"originStackId":4},"isAfterActivation":true,"index":7,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 16:26:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Remove After Resolve ActivatePassiveEffect 5  "}} 

 Player 2 16:26:33 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:26:33 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":5,"creatorCardId":258,"hasLockingStackEffect":false,"cardActivatorId":258,"cardWithEffectId":258,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":258,"cardId":258,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":5},{"type":0,"number":284},{"type":0,"number":258}],"result":null,"preventMethod":false,"methodScopeId":284,"scopeIsPlayer":true,"index":7,"originStackId":4},"isAfterActivation":true,"index":7,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 16:26:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Response Remove After Resolve ActivatePassiveEffect 5"},"childOfId":37} 

 Player 2 16:26:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Wait For Response From Player 2 "},"childOfId":37} 

 Player 2 16:26:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:26:33 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 16:26:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Wait For Response From Player 1 "},"childOfId":37} 

 Player 2 16:26:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:26:33 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:26:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Lust "} 

 Player 1 16:26:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Lust "} 

 Player 1 16:26:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Lust "} 

 Player 1 16:26:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Lust "} 

 Player 1 16:26:34 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:26:34 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 16:26:34 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 2 16:26:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Stack Was Emptied "}} 

 Player 2 16:26:34 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:26:34 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 16:26:34 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 16:26:34 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 16:26:34 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 16:26:34 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 16:26:34 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 16:26:34 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 16:26:34 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 16:26:34 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 16:26:34 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 16:26:34 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 16:26:34 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 16:26:34 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 16:26:34 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 16:26:34 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 2 16:26:34 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 16:26:34 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 2 16:26:34 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 2 16:26:35 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 2 16:26:35 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 2 16:26:35 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 2 16:26:35 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 2 16:26:36 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 2 16:29:23 $MATCH: 