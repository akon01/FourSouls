Start Log 
 Recived From Player 2 22:55:13 $MOVE_TO_TABLE:  
 Recived From Player 2 22:55:23 $FINISH_LOAD:  

 {"id":2,"turnPlayerId":2} 
 Recived From Player 2 22:55:23 $CHOOSE_FOR_EDEN:  

 {"playerId":1,"originPlayerId":2} 
 Recived From Player 2 22:55:30 $DECK_ARRAGMENT:  

 {"deckType":5,"arrangement":[168,155,163,221,194,215,157,188,161,180,184,179,186,204,185,203,213,181,206,216,196,156,208,158,187,190,148,214,171,165,218,152,143,150,220,198,217,142,172,173,154,149,183,159,147,191,141,177,211,205,153,192,145,200,212,199,202,193,160,178,174,197,182,189,175,201,166,209,162,169,151,195,176,164,144,219,170,210,167,146]} 
 Recived From Player 2 22:55:30 $FLIP_CARD:  

 {"cardId":207} 
 Recived From Player 2 22:55:30 $SET_CHAR:  

 {"originPlayerId":2,"playerId":1,"charCardId":317,"itemCardId":207} 
 Recived From Player 2 22:55:31 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Recived From Player 2 22:55:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Steamy Sale "} 
 Recived From Player 2 22:55:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Steamy Sale "} 
 Recived From Player 2 22:55:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Steamy Sale "} 
 Recived From Player 2 22:55:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Steamy Sale "} 
 Recived From Player 2 22:55:39 $CLEAR_SE_VIS:  
 Recived From Player 2 22:55:39 $ASSIGN_CHAR_TO_PLAYER:  

 {"playerId":2,"charCardId":325,"itemCardId":326} 
 Recived From Player 2 22:55:39 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":318}],"result":null,"preventMethod":false,"methodScopeId":317,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Recived From Player 2 22:55:39 $DECK_ARRAGMENT:  

 {"deckType":1,"arrangement":[49,32,23,121,92,122,55,100,50,27,103,59,97,95,102,82,21,52,43,56,77,17,94,127,128,10,105,33,123,70,120,24,99,39,30,81,68,28,115,41,89,14,46,54,51,106,71,9,108,132,104,113,86,37,98,35,137,45,47,78,5,119,116,19,42,6,111,101,126,63,79,67,107,36,65,88,44,76,96,73,48,133,13,129,80,139,114,8,72,91,124,4,109,87,130,83,110,74,61,25,20,7,29,117,57,90,31,84,22,18,34,12,64,38,62,112,136,69,118,11,85,60,26,125,15,66,135,53,16,93,75,134,138,131,58,40]} 
 Recived From Player 2 22:55:39 $DECK_ARRAGMENT:  

 {"deckType":2,"arrangement":[224,293,296,272,261,227,254,225,287,275,298,263,278,295,251,266,309,268,279,228,270,242,237,269,262,284,310,235,258,302,249,285,307,305,240,273,241,232,239,303,260,289,304,267,265,257,238,294,288,297,281,247,253,259,244,252,230,248,250,282,255,286,231,246,223,299,229,300,283,256,234,277,276,271,308,306,290,226,301,236,264,274,233,280,292,243,291,245]} 
 Recived From Player 2 22:55:39 $DECK_ARRAGMENT:  

 {"deckType":5,"arrangement":[196,181,204,194,206,177,161,220,189,146,209,153,215,150,200,203,152,144,180,141,154,168,164,202,186,167,193,143,159,151,198,208,210,175,211,169,171,155,185,188,219,145,214,216,176,212,205,190,178,160,195,179,192,172,149,173,163,148,197,158,187,218,166,142,199,213,162,165,217,156,147,191,182,201,183,174,170,184,221,157]} 
 Recived From Player 2 22:55:39 $DRAW_CARD:  

 {"deckType":5} 
 Recived From Player 2 22:55:39 $FLIP_CARD:  

 {"cardId":157} 
 Recived From Player 2 22:55:39 $ADD_STORE_CARD:  

 {"cardId":157} 
 Recived From Player 2 22:55:39 $DRAW_CARD:  

 {"deckType":5} 
 Recived From Player 2 22:55:39 $FLIP_CARD:  

 {"cardId":221} 
 Recived From Player 2 22:55:39 $ADD_STORE_CARD:  

 {"cardId":221} 
 Recived From Player 2 22:55:39 $DRAW_CARD:  

 {"deckType":2} 
 Recived From Player 2 22:55:39 $FLIP_CARD:  

 {"cardId":245} 
 Recived From Player 2 22:55:39 $REGISTER_PASSIVE_ITEM:  

 {"cardId":245} 
 Recived From Player 2 22:55:39 $ADD_MONSTER:  

 {"monsterPlaceId":1,"monsterId":245} 
 Recived From Player 2 22:55:39 $NEW_MONSTER_ON_PLACE:  

 {"cardId":245,"monsterPlaceId":1} 
 Recived From Player 2 22:55:39 $DRAW_CARD:  

 {"deckType":2} 
 Recived From Player 2 22:55:39 $FLIP_CARD:  

 {"cardId":291} 
 Recived From Player 2 22:55:39 $ADD_MONSTER:  

 {"monsterPlaceId":2,"monsterId":291} 
 Recived From Player 2 22:55:39 $NEW_MONSTER_ON_PLACE:  

 {"cardId":291,"monsterPlaceId":2} 
 Recived From Player 2 22:55:39 $SET_MONEY:  

 {"playerId":1,"numOfCoins":3} 
 Recived From Player 2 22:55:39 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":317,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Recived From Player 2 22:55:39 $DRAW_CARD:  

 {"deckType":1} 
 Recived From Player 2 22:55:39 $MOVE_CARD:  

 {"moveIndex":1,"cardId":40,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Recived From Player 2 22:55:40 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":40} 
 Recived From Player 2 22:55:40 $FLIP_CARD:  

 {"cardId":40} 
 Recived From Player 2 22:55:40 $FLIP_CARD:  

 {"cardId":40} 
 Recived From Player 2 22:55:40 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":40} 
 Recived From Player 2 22:55:40 $DRAW_CARD:  

 {"deckType":1} 
 Recived From Player 2 22:55:40 $MOVE_CARD:  

 {"moveIndex":2,"cardId":58,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Recived From Player 2 22:55:40 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":58} 
 Recived From Player 2 22:55:40 $FLIP_CARD:  

 {"cardId":58} 
 Recived From Player 2 22:55:40 $FLIP_CARD:  

 {"cardId":58} 
 Recived From Player 2 22:55:40 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":58} 
 Recived From Player 2 22:55:41 $DRAW_CARD:  

 {"deckType":1} 
 Recived From Player 2 22:55:41 $MOVE_CARD:  

 {"moveIndex":3,"cardId":131,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Recived From Player 2 22:55:41 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":131} 
 Recived From Player 2 22:55:41 $FLIP_CARD:  

 {"cardId":131} 
 Recived From Player 2 22:55:41 $FLIP_CARD:  

 {"cardId":131} 
 Recived From Player 2 22:55:41 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":131} 
 Recived From Player 2 22:55:41 $SET_MONEY:  

 {"playerId":2,"numOfCoins":3} 
 Recived From Player 2 22:55:41 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Recived From Player 2 22:55:41 $DRAW_CARD:  

 {"deckType":1} 
 Recived From Player 2 22:55:41 $MOVE_CARD:  

 {"moveIndex":4,"cardId":138,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Recived From Player 2 22:55:42 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":138} 
 Recived From Player 2 22:55:42 $FLIP_CARD:  

 {"cardId":138} 
 Recived From Player 2 22:55:42 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":138} 
 Recived From Player 2 22:55:42 $DRAW_CARD:  

 {"deckType":1} 
 Recived From Player 2 22:55:42 $MOVE_CARD:  

 {"moveIndex":5,"cardId":134,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Recived From Player 2 22:55:42 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":134} 
 Recived From Player 2 22:55:42 $FLIP_CARD:  

 {"cardId":134} 
 Recived From Player 2 22:55:42 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":134} 
 Recived From Player 2 22:55:42 $DRAW_CARD:  

 {"deckType":1} 
 Recived From Player 2 22:55:42 $MOVE_CARD:  

 {"moveIndex":6,"cardId":75,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Recived From Player 2 22:55:43 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":75} 
 Recived From Player 2 22:55:43 $FLIP_CARD:  

 {"cardId":75} 
 Recived From Player 2 22:55:43 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":75} 
 Recived From Player 2 22:55:43 $GAME_HAS_STARTED:  
 Recived From Player 2 22:55:43 $SET_TURN:  

 {"playerId":2} 
 Recived From Player 2 22:55:43 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 22:55:43 $NEXT_STACK_ID:  
 Recived From Player 2 22:55:43 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Recived From Player 2 22:55:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 
 Recived From Player 2 22:55:43 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 
 Recived From Player 2 22:55:43 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":2,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 
 Recived From Player 2 22:55:43 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Recived From Player 2 22:55:43 $SHOW_STACK_EFFECT:  

 {"effectId":2} 
 Recived From Player 2 22:55:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":6,"_text":"Add StartTurnLoot 2 "}} 
 Recived From Player 2 22:55:46 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 22:55:46 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 
 Recived From Player 2 22:55:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":7,"_text":"Response Adding StartTurnLoot 2"},"childOfId":6} 
 Recived From Player 2 22:55:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":6} 
 Recived From Player 2 22:55:46 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 22:55:46 $ACTION_MASSAGE_REMOVE:  

 {"id":8} 
 Recived From Player 2 22:55:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":9,"_text":"Wait For Response From Player 1 "},"childOfId":6} 
 Recived From Player 2 22:55:46 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Recived From Player 2 22:55:46 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Recived From Player 2 22:55:46 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Recived From Player 2 22:55:46 $ACTION_MASSAGE_REMOVE:  

 {"id":7} 
 Recived From Player 2 22:55:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":10,"_text":"Resolve StartTurnLoot 2 "}} 
 Recived From Player 2 22:55:46 $UPDATE_RESOLVING_STACK_EFFECTS:  

 {"stackEffects":[{"entityId":2,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}]} 
 Recived From Player 2 22:55:46 $DRAW_CARD:  

 {"deckType":1} 
 Recived From Player 2 22:55:46 $MOVE_CARD:  

 {"moveIndex":7,"cardId":93,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Recived From Player 2 22:55:47 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":93} 
 Recived From Player 2 22:55:47 $FLIP_CARD:  

 {"cardId":93} 
 Recived From Player 2 22:55:47 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":93} 
 Recived From Player 2 22:55:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Has Drawen Loot For Start Turn"} 
 Recived From Player 2 22:55:47 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 
 Recived From Player 2 22:55:47 $UPDATE_RESOLVING_STACK_EFFECTS:  

 {"stackEffects":[]} 
 Recived From Player 2 22:55:47 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Recived From Player 2 22:55:47 $SHOW_STACK_EFFECT:  

 {"effectId":2} 
 Recived From Player 2 22:55:50 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":2} 
 Recived From Player 2 22:55:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":11,"_text":"Remove After Resolve StartTurnLoot 2  "}} 
 Recived From Player 2 22:55:50 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Recived From Player 2 22:55:50 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 
 Recived From Player 2 22:55:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":12,"_text":"Response Remove After Resolve StartTurnLoot 2"},"childOfId":11} 
 Recived From Player 2 22:55:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":11} 
 Recived From Player 2 22:55:50 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Recived From Player 2 22:55:50 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Recived From Player 2 22:55:50 $ACTION_MASSAGE_REMOVE:  

 {"id":13} 
 Recived From Player 2 22:55:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":14,"_text":"Wait For Response From Player 2 "},"childOfId":11} 
 Recived From Player 2 22:55:50 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 22:55:50 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Recived From Player 2 22:55:50 $ACTION_MASSAGE_REMOVE:  

 {"id":12} 
 Recived From Player 2 22:55:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":15,"_text":"Stack Was Emptied "}} 
 Recived From Player 2 22:55:50 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Recived From Player 2 22:55:50 $CLEAR_SE_VIS:  
 Recived From Player 2 22:55:50 $UPDATE_ACTIONS:  
 Recived From Player 2 22:56:14 $NEXT_STACK_ID:  
 Recived From Player 2 22:56:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 declared attack on Monster Deck"} 
 Recived From Player 2 22:56:14 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":222,"stackEffectType":4}} 
 Recived From Player 2 22:56:14 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":222,"stackEffectType":4}} 
 Recived From Player 2 22:56:14 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Recived From Player 2 22:56:14 $SHOW_STACK_EFFECT:  

 {"effectId":3} 
 Recived From Player 2 22:56:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":16,"_text":"Add DeclareAttack 3 "}} 
 Recived From Player 2 22:56:17 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 22:56:17 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":222,"stackEffectType":4}} 
 Recived From Player 2 22:56:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":17,"_text":"Response Adding DeclareAttack 3"},"childOfId":16} 
 Recived From Player 2 22:56:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":16} 
 Recived From Player 2 22:56:17 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 22:56:17 $ACTION_MASSAGE_REMOVE:  

 {"id":18} 
 Recived From Player 2 22:56:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":19,"_text":"Wait For Response From Player 1 "},"childOfId":16} 
 Recived From Player 2 22:56:17 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Recived From Player 2 22:56:17 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Recived From Player 2 22:56:17 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Recived From Player 2 22:56:17 $ACTION_MASSAGE_REMOVE:  

 {"id":17} 
 Recived From Player 2 22:56:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":20,"_text":"Resolve DeclareAttack 3 "}} 
 Recived From Player 2 22:56:17 $UPDATE_RESOLVING_STACK_EFFECTS:  

 {"stackEffects":[{"entityId":3,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":222,"stackEffectType":4}]} 
 Recived From Player 2 22:56:18 $DRAW_CARD:  

 {"deckType":2} 
 Recived From Player 2 22:56:18 $SHOW_CARD_PREVIEW:  

 {"cardToShowId":243,"playerId":2} 
 Recived From Player 2 22:56:22 $FLIP_CARD:  

 {"cardId":243} 
 Recived From Player 2 22:56:22 $REMOVE_FROM_PASSIVE_MANAGER:  

 {"cardId":245} 
 Recived From Player 2 22:56:22 $REGISTER_PASSIVE_ITEM:  

 {"cardId":243} 
 Recived From Player 2 22:56:22 $ADD_MONSTER:  

 {"monsterPlaceId":1,"monsterId":243} 
 Recived From Player 2 22:56:22 $NEW_MONSTER_ON_PLACE:  

 {"cardId":243,"monsterPlaceId":1} 
 Recived From Player 2 22:56:22 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":243,"particleType":5} 
 Recived From Player 2 22:56:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Has Entered Battle with Cursed Horf"} 
 Recived From Player 2 22:56:22 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":4,"originStackId":3},"isAfterActivation":true,"index":4} 
 Recived From Player 2 22:56:22 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":243,"stackEffectType":4}} 
 Recived From Player 2 22:56:22 $UPDATE_RESOLVING_STACK_EFFECTS:  

 {"stackEffects":[]} 
 Recived From Player 2 22:56:22 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Recived From Player 2 22:56:22 $SHOW_STACK_EFFECT:  

 {"effectId":3} 
 Recived From Player 2 22:56:25 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":3} 
 Recived From Player 2 22:56:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":21,"_text":"Remove After Resolve DeclareAttack 3  "}} 
 Recived From Player 2 22:56:25 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Recived From Player 2 22:56:25 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":243,"stackEffectType":4}} 
 Recived From Player 2 22:56:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":22,"_text":"Response Remove After Resolve DeclareAttack 3"},"childOfId":21} 
 Recived From Player 2 22:56:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":21} 
 Recived From Player 2 22:56:25 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Recived From Player 2 22:56:25 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Recived From Player 2 22:56:25 $ACTION_MASSAGE_REMOVE:  

 {"id":23} 
 Recived From Player 2 22:56:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":24,"_text":"Wait For Response From Player 2 "},"childOfId":21} 
 Recived From Player 2 22:56:25 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 22:56:25 $ACTION_MASSAGE_REMOVE:  

 {"id":24} 
 Recived From Player 2 22:56:26 $ACTION_MASSAGE_REMOVE:  

 {"id":22} 
 Recived From Player 2 22:56:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":25,"_text":"Stack Was Emptied "}} 
 Recived From Player 2 22:56:26 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Recived From Player 2 22:56:26 $CLEAR_SE_VIS:  
 Recived From Player 2 22:56:31 $MOVE_CARD:  

 {"moveIndex":8,"cardId":82,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 
 Recived From Player 2 22:56:32 $DECK_ARRAGMENT:  

 {"deckType":1,"arrangement":[49,32,23,121,92,122,55,100,50,27,103,59,97,95,102,21,52,43,56,77,17,94,127,128,10,105,33,123,70,120,24,99,39,30,81,68,28,115,41,89,14,46,54,51,106,71,9,108,132,104,113,86,37,98,35,137,45,47,78,5,119,116,19,42,6,111,101,126,63,79,67,107,36,65,88,44,76,96,73,48,133,13,129,80,139,114,8,72,91,124,4,109,87,130,83,110,74,61,25,20,7,29,117,57,90,31,84,22,18,34,12,64,38,62,112,136,69,118,11,85,60,26,125,15,66,135,53,16]} 
 Recived From Player 2 22:56:32 $FLIP_CARD:  

 {"cardId":82} 
 Recived From Player 2 22:56:32 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":82} 
 Recived From Player 2 22:56:35 $NEXT_STACK_ID:  
 Recived From Player 2 22:56:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Play Bloody Penny "} 
 Recived From Player 2 22:56:35 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":4,"creatorCardId":325,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":82,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Recived From Player 2 22:56:35 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":4,"creatorCardId":325,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":82,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Recived From Player 2 22:56:35 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Recived From Player 2 22:56:35 $SHOW_STACK_EFFECT:  

 {"effectId":4} 
 Recived From Player 2 22:56:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":26,"_text":"Add PlayLootCardStackEffect 4 "}} 
 Recived From Player 2 22:56:38 $PLAYER_LOSE_LOOT:  

 {"playerId":2,"cardId":82} 
 Recived From Player 2 22:56:38 $MOVE_CARD:  

 {"moveIndex":9,"cardId":82,"placeID":329,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Recived From Player 2 22:56:39 $MOVE_CARD_TO_PILE:  

 {"type":7,"cardId":82} 
 Recived From Player 2 22:56:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Play Bloody Penny: AddTrinket"} 
 Recived From Player 2 22:56:39 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 22:56:39 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":4,"creatorCardId":325,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":82,"lootPlayerId":2,"effectToDo":{"effectName":"AddTrinket","cardEffectNum":0,"cardPlayerId":2,"cardId":82,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Recived From Player 2 22:56:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":27,"_text":"Response Adding PlayLootCardStackEffect 4"},"childOfId":26} 
 Recived From Player 2 22:56:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":26} 
 Recived From Player 2 22:56:39 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 22:56:39 $ACTION_MASSAGE_REMOVE:  

 {"id":28} 
 Recived From Player 2 22:56:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":29,"_text":"Wait For Response From Player 1 "},"childOfId":26} 
 Recived From Player 2 22:56:39 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Recived From Player 2 22:56:39 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Recived From Player 2 22:56:39 $ACTION_MASSAGE_REMOVE:  

 {"id":29} 
 Recived From Player 2 22:56:39 $ACTION_MASSAGE_REMOVE:  

 {"id":27} 
 Recived From Player 2 22:56:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":30,"_text":"Resolve PlayLootCardStackEffect 4 "}} 
 Recived From Player 2 22:56:39 $UPDATE_RESOLVING_STACK_EFFECTS:  

 {"stackEffects":[{"entityId":4,"creatorCardId":325,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":82,"lootPlayerId":2,"effectToDo":{"effectName":"AddTrinket","cardEffectNum":0,"cardPlayerId":2,"cardId":82,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}]} 
 Recived From Player 2 22:56:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Plays Bloody Penny: AddTrinket"} 
 Recived From Player 2 22:56:39 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":82,"particleType":6} 
 Recived From Player 2 22:56:41 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":82,"particleType":6} 
 Recived From Player 2 22:56:41 $CARD_ADD_TRINKET:  

 {"cardId":82,"playerId":2,"addMuiliEffect":false} 
 Recived From Player 2 22:56:41 $REMOVE_FROM_PILE:  

 {"cardId":82} 
 Recived From Player 2 22:56:41 $REGISTER_PASSIVE_ITEM:  

 {"cardId":82} 
 Recived From Player 2 22:56:41 $MOVE_CARD:  

 {"moveIndex":10,"cardId":82,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 
 Recived From Player 2 22:56:42 $ADD_AN_ITEM:  

 {"playerId":2,"cardId":82,"isReward":true} 
 Recived From Player 2 22:56:42 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":82}],"result":true,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 
 Recived From Player 2 22:56:42 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":4,"creatorCardId":325,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":82,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Recived From Player 2 22:56:42 $UPDATE_RESOLVING_STACK_EFFECTS:  

 {"stackEffects":[]} 
 Recived From Player 2 22:56:42 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Recived From Player 2 22:56:42 $SHOW_STACK_EFFECT:  

 {"effectId":4} 
 Recived From Player 2 22:56:45 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":4} 
 Recived From Player 2 22:56:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":31,"_text":"Remove After Resolve PlayLootCardStackEffect 4  "}} 
 Recived From Player 2 22:56:45 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Recived From Player 2 22:56:45 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":4,"creatorCardId":325,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":82,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Recived From Player 2 22:56:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":32,"_text":"Response Remove After Resolve PlayLootCardStackEffect 4"},"childOfId":31} 
 Recived From Player 2 22:56:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":31} 
 Recived From Player 2 22:56:45 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Recived From Player 2 22:56:45 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Recived From Player 2 22:56:45 $ACTION_MASSAGE_REMOVE:  

 {"id":33} 
 Recived From Player 2 22:56:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":34,"_text":"Wait For Response From Player 2 "},"childOfId":31} 
 Recived From Player 2 22:56:45 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 22:56:45 $ACTION_MASSAGE_REMOVE:  

 {"id":34} 
 Recived From Player 2 22:56:45 $ACTION_MASSAGE_REMOVE:  

 {"id":32} 
 Recived From Player 2 22:56:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":35,"_text":"Stack Was Emptied "}} 
 Recived From Player 2 22:56:45 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Recived From Player 2 22:56:45 $CLEAR_SE_VIS:  
 Recived From Player 2 22:56:57 $NEXT_STACK_ID:  
 Recived From Player 2 22:56:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Cursed Horf<Monster>"} 
 Recived From Player 2 22:56:57 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":5,"creatorCardId":325,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":243}} 
 Recived From Player 2 22:56:57 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":5,"creatorCardId":325,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":243}} 
 Recived From Player 2 22:56:57 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Recived From Player 2 22:56:57 $SHOW_STACK_EFFECT:  

 {"effectId":5} 
 Recived From Player 2 22:57:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":36,"_text":"Add AttackRoll 5 "}} 
 Recived From Player 2 22:57:00 $ROLL_DICE:  

 {"playerId":2} 
 Recived From Player 2 22:57:01 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":4} 
 Recived From Player 2 22:57:01 $UPDATE_STACK_VIS:  

 {"stackId":5,"text":"player rolled 4 vs Cursed Horf<Monster>"} 
 Recived From Player 2 22:57:01 $SHOW_DICE_ROLL:  

 {"stackId":5} 
 Recived From Player 2 22:57:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 4 vs Cursed Horf<Monster>"} 
 Recived From Player 2 22:57:04 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 22:57:04 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":5,"creatorCardId":325,"numberRolled":4,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":243}} 
 Recived From Player 2 22:57:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":37,"_text":"Response Adding AttackRoll 5"},"childOfId":36} 
 Recived From Player 2 22:57:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":38,"_text":"Wait For Response From Player 2 "},"childOfId":36} 
 Recived From Player 2 22:57:04 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 22:57:04 $ACTION_MASSAGE_REMOVE:  

 {"id":38} 
 Recived From Player 2 22:57:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":39,"_text":"Wait For Response From Player 1 "},"childOfId":36} 
 Recived From Player 2 22:57:04 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Recived From Player 2 22:57:04 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Recived From Player 2 22:57:04 $ACTION_MASSAGE_REMOVE:  

 {"id":39} 
 Recived From Player 2 22:57:05 $ACTION_MASSAGE_REMOVE:  

 {"id":37} 
 Recived From Player 2 22:57:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":40,"_text":"Resolve AttackRoll 5 "}} 
 Recived From Player 2 22:57:05 $UPDATE_RESOLVING_STACK_EFFECTS:  

 {"stackEffects":[{"entityId":5,"creatorCardId":325,"numberRolled":4,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":243}]} 
 Recived From Player 2 22:57:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":41,"_text":"Added 0 to original roll"}} 
 Recived From Player 2 22:57:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Rolled 2 Against Cursed Horf<Monster> 4"} 
 Recived From Player 2 22:57:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Roll Miss"} 
 Recived From Player 2 22:57:05 $NEXT_STACK_ID:  
 Recived From Player 2 22:57:05 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 22:57:05 $CLEAR_SE_VIS:  
 Recived From Player 2 22:57:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cursed Horf is going to hurt Samson \n2:Player 2 Roll Miss"} 
 Recived From Player 2 22:57:05 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":6,"creatorCardId":325,"entityToDoDamageCardId":243,"entityToTakeDamageCardId":325,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":2}} 
 Recived From Player 2 22:57:05 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":5,"creatorCardId":325,"numberRolled":4,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":243}} 
 Recived From Player 2 22:57:05 $REPLACE_STACK:  

 {"currentStack":[{"entityId":6,"creatorCardId":325,"entityToDoDamageCardId":243,"entityToTakeDamageCardId":325,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":2},{"entityId":5,"creatorCardId":325,"numberRolled":4,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":243}]} 
 Recived From Player 2 22:57:05 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Recived From Player 2 22:57:05 $SHOW_STACK_EFFECT:  

 {"effectId":6} 
 Recived From Player 2 22:57:08 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":2},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":6,"originStackId":5},"isAfterActivation":true,"index":6} 
 Recived From Player 2 22:57:08 $NEXT_STACK_ID:  
 Recived From Player 2 22:57:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cursed Horf is going to hurt Samson \n2:Player 2 Roll Miss"} 
 Recived From Player 2 22:57:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cursed Horf is going to hurt Samson \n2:Player 2 Roll Miss \n3:Activate Cursed Horf Effect DealDamage<DealDamage>"} 
 Recived From Player 2 22:57:08 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":7,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":243,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":243,"effctType":0},"isAfterActivation":true,"index":6,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Recived From Player 2 22:57:08 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":7,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":243,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":243,"effctType":0},"isAfterActivation":true,"index":6,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Recived From Player 2 22:57:08 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Recived From Player 2 22:57:08 $SHOW_STACK_EFFECT:  

 {"effectId":7} 
 Recived From Player 2 22:57:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":42,"_text":"Add ActivatePassiveEffect 7 "}} 
 Recived From Player 2 22:57:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cursed Horf is going to hurt Samson \n2:Player 2 Roll Miss \n3:Activate Cursed Horf effect DealDamage<DealDamage>"} 
 Recived From Player 2 22:57:11 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[325],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":243,"effectCardPlayer":243},"entityId":7,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":243,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":243,"effctType":0},"isAfterActivation":true,"index":6,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Recived From Player 2 22:57:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":43,"_text":"Response Adding ActivatePassiveEffect 7"},"childOfId":42} 
 Recived From Player 2 22:57:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":44,"_text":"Wait For Response From Player 2 "},"childOfId":42} 
 Recived From Player 2 22:57:11 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 22:57:11 $ACTION_MASSAGE_REMOVE:  

 {"id":44} 
 Recived From Player 2 22:57:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":45,"_text":"Wait For Response From Player 1 "},"childOfId":42} 
 Recived From Player 2 22:57:11 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Recived From Player 2 22:57:11 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Recived From Player 2 22:57:11 $ACTION_MASSAGE_REMOVE:  

 {"id":45} 
 Recived From Player 2 22:57:11 $ACTION_MASSAGE_REMOVE:  

 {"id":43} 
 Recived From Player 2 22:57:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":46,"_text":"Resolve ActivatePassiveEffect 7 "}} 
 Recived From Player 2 22:57:11 $UPDATE_RESOLVING_STACK_EFFECTS:  

 {"stackEffects":[{"entityId":5,"creatorCardId":325,"numberRolled":4,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":243},{"effectCollectedData":{"effectTargets":[325],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":243,"effectCardPlayer":243},"entityId":7,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":243,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":243,"effctType":0},"isAfterActivation":true,"index":6,"hasDataBeenCollectedYet":true,"stackEffectType":14}]} 
 Recived From Player 2 22:57:11 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":243,"particleType":6} 
 Recived From Player 2 22:57:13 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":243,"particleType":6} 
 Recived From Player 2 22:57:13 $PLAYER_GET_HIT:  

 {"playerId":2,"damage":2,"damageDealerId":243} 
 Recived From Player 2 22:57:13 $NEXT_STACK_ID:  
 Recived From Player 2 22:57:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cursed Horf is going to hurt Samson \n2:Player 2 Roll Miss \n3:Activate Cursed Horf effect DealDamage<DealDamage>"} 
 Recived From Player 2 22:57:13 $CLEAR_SE_VIS:  
 Recived From Player 2 22:57:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cursed Horf is going to hurt Samson \n2:Player 2 Roll Miss \n3:Activate Cursed Horf effect DealDamage<DealDamage> \n4:Player 2 Is About To Die"} 
 Recived From Player 2 22:57:13 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":6,"creatorCardId":325,"entityToDoDamageCardId":243,"entityToTakeDamageCardId":325,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":2}} 
 Recived From Player 2 22:57:13 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":5,"creatorCardId":325,"numberRolled":4,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":243}} 
 Recived From Player 2 22:57:13 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[325],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":243,"effectCardPlayer":243},"entityId":7,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":243,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":243,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":2},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":false,"index":6,"originStackId":5},"isAfterActivation":true,"index":6,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Recived From Player 2 22:57:13 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":8,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":243}} 
 Recived From Player 2 22:57:13 $REPLACE_STACK:  

 {"currentStack":[{"entityId":6,"creatorCardId":325,"entityToDoDamageCardId":243,"entityToTakeDamageCardId":325,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":2},{"entityId":5,"creatorCardId":325,"numberRolled":4,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":243},{"effectCollectedData":{"effectTargets":[325],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":243,"effectCardPlayer":243},"entityId":7,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":243,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":243,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":2},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":false,"index":6,"originStackId":5},"isAfterActivation":true,"index":6,"hasDataBeenCollectedYet":true,"stackEffectType":14},{"entityId":8,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":243}]} 
 Recived From Player 2 22:57:13 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":8,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":243}} 
 Recived From Player 2 22:57:13 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Recived From Player 2 22:57:13 $SHOW_STACK_EFFECT:  

 {"effectId":8} 
 Recived From Player 2 22:57:16 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 22:57:16 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":243}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 
 Recived From Player 2 22:57:16 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":2},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":false,"index":6,"originStackId":5},"isAfterActivation":true,"index":6} 
 Recived From Player 2 22:57:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cursed Horf is going to hurt Samson \n2:Player 2 Roll Miss \n3:Activated Cursed Horf Effect \n4:Player 2 Is About To Die"} 
 Recived From Player 2 22:57:16 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[325],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":243,"effectCardPlayer":243},"entityId":7,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":243,"isAfterActivation":true,"index":6,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Recived From Player 2 22:57:16 $UPDATE_RESOLVING_STACK_EFFECTS:  

 {"stackEffects":[{"entityId":5,"creatorCardId":325,"numberRolled":4,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":243}]} 
 Recived From Player 2 22:57:16 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Recived From Player 2 22:57:16 $SHOW_STACK_EFFECT:  

 {"effectId":7} 
 Recived From Player 2 22:57:19 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":7} 
 Recived From Player 2 22:57:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":47,"_text":"Remove After Resolve ActivatePassiveEffect 7  "}} 
 Recived From Player 2 22:57:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cursed Horf is going to hurt Samson \n2:Player 2 Roll Miss \n3:Player 2 Is About To Die"} 
 Recived From Player 2 22:57:19 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[325],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":243,"effectCardPlayer":243},"entityId":7,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":243,"isAfterActivation":true,"index":6,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Recived From Player 2 22:57:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":48,"_text":"Response Remove After Resolve ActivatePassiveEffect 7"},"childOfId":47} 
 Recived From Player 2 22:57:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":49,"_text":"Wait For Response From Player 2 "},"childOfId":47} 
 Recived From Player 2 22:57:19 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 22:57:19 $ACTION_MASSAGE_REMOVE:  

 {"id":49} 
 Recived From Player 2 22:57:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":50,"_text":"Wait For Response From Player 1 "},"childOfId":47} 
 Recived From Player 2 22:57:19 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Recived From Player 2 22:57:19 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Recived From Player 2 22:57:19 $ACTION_MASSAGE_REMOVE:  

 {"id":50} 
 Recived From Player 2 22:57:19 $ACTION_MASSAGE_REMOVE:  

 {"id":48} 
 Recived From Player 2 22:57:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":51,"_text":"Resolve PlayerDeath 8 "}} 
 Recived From Player 2 22:57:20 $UPDATE_RESOLVING_STACK_EFFECTS:  

 {"stackEffects":[{"entityId":5,"creatorCardId":325,"numberRolled":4,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":243},{"entityId":8,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":243}]} 
 Recived From Player 2 22:57:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cursed Horf is going to hurt Samson \n2:Player 2 Roll Miss \n3:Player 2 Has Died"} 
 Recived From Player 2 22:57:20 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":243,"particleType":5} 
 Recived From Player 2 22:57:20 $CANCEL_ATTACK:  
 Recived From Player 2 22:57:20 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":6} 
 Recived From Player 2 22:57:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":52,"_text":"Fizzle CombatDamage 6"}} 
 Recived From Player 2 22:57:20 $FIZZLE_STACK_EFFECT:  

 {"entityId":6} 
 Recived From Player 2 22:57:20 $UPDATE_RESOLVING_STACK_EFFECTS:  

 {"stackEffects":[]} 
 Recived From Player 2 22:57:20 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":5} 
 Recived From Player 2 22:57:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":53,"_text":"Fizzle AttackRoll 5"}} 
 Recived From Player 2 22:57:20 $FIZZLE_STACK_EFFECT:  

 {"entityId":5} 
 Recived From Player 2 22:57:20 $NEXT_STACK_ID:  
 Recived From Player 2 22:57:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Has Died"} 
 Recived From Player 2 22:57:20 $CLEAR_SE_VIS:  
 Recived From Player 2 22:57:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Has Died \n2:Player 2 Is About To Pay Death Penalties"} 
 Recived From Player 2 22:57:20 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":8,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":243}} 
 Recived From Player 2 22:57:20 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":9,"creatorCardId":325,"playerToPayCardId":325,"stackEffectType":16}} 
 Recived From Player 2 22:57:20 $REPLACE_STACK:  

 {"currentStack":[{"entityId":8,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":243},{"entityId":9,"creatorCardId":325,"playerToPayCardId":325,"stackEffectType":16}]} 
 Recived From Player 2 22:57:20 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":9,"creatorCardId":325,"playerToPayCardId":325,"stackEffectType":16}} 
 Recived From Player 2 22:57:20 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Recived From Player 2 22:57:20 $SHOW_STACK_EFFECT:  

 {"effectId":9} 
 Recived From Player 2 22:57:22 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 22:57:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Has Died \n2:Player 2 Is About To Pay Death Penalties"} 
 Recived From Player 2 22:57:23 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":8,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":243}} 
 Recived From Player 2 22:57:23 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Recived From Player 2 22:57:23 $SHOW_STACK_EFFECT:  

 {"effectId":8} 
 Recived From Player 2 22:57:25 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":8} 
 Recived From Player 2 22:57:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":54,"_text":"Remove After Resolve PlayerDeath 8  "}} 
 Recived From Player 2 22:57:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is About To Pay Death Penalties"} 
 Recived From Player 2 22:57:26 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":8,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":243}} 
 Recived From Player 2 22:57:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":55,"_text":"Response Remove After Resolve PlayerDeath 8"},"childOfId":54} 
 Recived From Player 2 22:57:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":56,"_text":"Wait For Response From Player 2 "},"childOfId":54} 
 Recived From Player 2 22:57:26 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 22:57:26 $ACTION_MASSAGE_REMOVE:  

 {"id":56} 
 Recived From Player 2 22:57:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":57,"_text":"Wait For Response From Player 1 "},"childOfId":54} 
 Recived From Player 2 22:57:26 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Recived From Player 2 22:57:26 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Recived From Player 2 22:57:26 $ACTION_MASSAGE_REMOVE:  

 {"id":57} 
 Recived From Player 2 22:57:26 $ACTION_MASSAGE_REMOVE:  

 {"id":55} 
 Recived From Player 2 22:57:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":58,"_text":"Resolve PlayerDeathPenalties 9 "}} 
 Recived From Player 2 22:57:26 $UPDATE_RESOLVING_STACK_EFFECTS:  

 {"stackEffects":[{"entityId":9,"creatorCardId":325,"playerToPayCardId":325,"stackEffectType":16}]} 
 Recived From Player 2 22:57:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":59,"_text":"Player 2 pays Penalties"}} 
 Recived From Player 2 22:57:26 $SET_MONEY:  

 {"playerId":2,"numOfCoins":2} 
 Recived From Player 2 22:57:26 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-1}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":8,"originStackId":-1},"isAfterActivation":true,"index":8} 
 Recived From Player 2 22:57:29 $PLAYER_LOSE_LOOT:  

 {"playerId":2,"cardId":93} 
 Recived From Player 2 22:57:29 $MOVE_CARD:  

 {"moveIndex":11,"cardId":93,"placeID":330,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Recived From Player 2 22:57:29 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":93} 
 Recived From Player 2 22:57:32 $REMOVE_FROM_PASSIVE_MANAGER:  

 {"cardId":82} 
 Recived From Player 2 22:57:32 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_LOSE_ITEM","args":[{"type":0,"number":82}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":9,"originStackId":-1},"isAfterActivation":true,"index":9} 
 Recived From Player 2 22:57:32 $MOVE_CARD:  

 {"moveIndex":12,"cardId":82,"placeID":330,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Recived From Player 2 22:57:32 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":82} 
 Recived From Player 2 22:57:32 $USE_ITEM:  

 {"cardId":325} 
 Recived From Player 2 22:57:32 $USE_ITEM:  

 {"cardId":326} 
 Recived From Player 2 22:57:32 $PLAYER_DIED:  

 {"playerId":2} 
 Recived From Player 2 22:57:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Paid Death Penalties"} 
 Recived From Player 2 22:57:32 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":9,"creatorCardId":325,"playerToPayCardId":325,"stackEffectType":16}} 
 Recived From Player 2 22:57:32 $UPDATE_RESOLVING_STACK_EFFECTS:  

 {"stackEffects":[]} 
 Recived From Player 2 22:57:32 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Recived From Player 2 22:57:33 $SHOW_STACK_EFFECT:  

 {"effectId":9} 
 Recived From Player 2 22:57:35 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":9} 
 Recived From Player 2 22:57:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":60,"_text":"Remove After Resolve PlayerDeathPenalties 9  "}} 
 Recived From Player 2 22:57:35 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Recived From Player 2 22:57:35 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":9,"creatorCardId":325,"playerToPayCardId":325,"stackEffectType":16}} 
 Recived From Player 2 22:57:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":61,"_text":"Response Remove After Resolve PlayerDeathPenalties 9"},"childOfId":60} 
 Recived From Player 2 22:57:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":62,"_text":"Wait For Response From Player 1 "},"childOfId":60} 
 Recived From Player 2 22:57:35 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Recived From Player 2 22:57:35 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Recived From Player 2 22:57:36 $ACTION_MASSAGE_REMOVE:  

 {"id":62} 
 Recived From Player 2 22:57:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":63,"_text":"Wait For Response From Player 2 "},"childOfId":60} 
 Recived From Player 2 22:57:36 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 22:57:36 $ACTION_MASSAGE_REMOVE:  

 {"id":63} 
 Recived From Player 2 22:57:36 $ACTION_MASSAGE_REMOVE:  

 {"id":61} 
 Recived From Player 2 22:57:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":64,"_text":"Stack Was Emptied "}} 
 Recived From Player 2 22:57:36 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Recived From Player 2 22:57:36 $CLEAR_SE_VIS:  
 Recived From Player 2 22:57:36 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 22:57:36 $CLEAR_SE_VIS:  
 Recived From Player 2 22:57:36 $REPLACE_STACK:  

 {"currentStack":[]} 
 Recived From Player 2 22:57:36 $CLEAR_SE_VIS:  
 Recived From Player 2 22:57:36 $END_TURN:  
 Recived From Player 2 22:57:36 $SET_TURN:  

 {"playerId":1} 
 Recived From Player 2 22:57:36 $START_TURN:  

 {"playerId":1} 
 Recived From Player 2 22:57:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":65,"_text":"Stack Was Emptied "}} 
 Recived From Player 2 22:57:36 $TURN_PLAYER_DO_STACK_EFFECT:  

 {"playerId":1} 
 Recived From Player 2 22:57:36 $STACK_EMPTIED:  

 {"playerId":1} 
 Recived From Player 2 22:57:36 $STACK_EMPTIED:  

 {"playerId":1} 
 Recived From Player 2 22:57:36 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Recived From Player 2 22:57:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 
 Recived From Player 2 22:57:39 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Recived From Player 2 22:57:39 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Recived From Player 2 22:57:40 $MOVE_CARD_END:  

 {"moveIndex":13,"cardId":16,"flipIfFlipped":false,"playerId":1} 
 Recived From Player 2 22:57:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 
 Recived From Player 2 22:57:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 
 Recived From Player 2 22:57:43 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Recived From Player 2 22:57:43 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Recived From Player 2 22:57:51 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Recived From Player 2 22:57:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 declared attack on Monster Deck"} 
 Recived From Player 2 22:57:55 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Recived From Player 2 22:57:55 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Recived From Player 2 22:58:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 declared attack on Monster Deck"} 
 Recived From Player 2 22:58:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 declared attack on Pale Fatty"} 
 Recived From Player 2 22:58:06 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Recived From Player 2 22:58:06 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Recived From Player 2 22:58:16 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Recived From Player 2 22:58:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Pale Fatty<Monster>"} 
 Recived From Player 2 22:58:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Pale Fatty<Monster>"} 
 Recived From Player 2 22:58:24 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Recived From Player 2 22:58:24 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Recived From Player 2 22:58:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Pale Fatty<Monster>"} 
 Recived From Player 2 22:58:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Eden is going to hurt Pale Fatty \n2:Player 1 is rolling against Pale Fatty<Monster>"} 
 Recived From Player 2 22:58:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Eden is going to hurt Pale Fatty \n2:Player 1 is rolling against Pale Fatty<Monster>"} 
 Recived From Player 2 22:58:30 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Recived From Player 2 22:58:30 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Recived From Player 2 22:58:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Eden is going to hurt Pale Fatty"} 
 Recived From Player 2 22:58:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Eden is going to hurt Pale Fatty"} 
 Recived From Player 2 22:58:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Eden is going to hurt Pale Fatty"} 
 Recived From Player 2 22:58:33 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Recived From Player 2 22:58:33 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Recived From Player 2 22:58:46 $MOVE_CARD_END:  

 {"moveIndex":14,"cardId":126,"flipIfFlipped":true,"playerId":1} 
 Recived From Player 2 22:58:49 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Recived From Player 2 22:58:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Play The Chariot "} 
 Recived From Player 2 22:58:53 $MOVE_CARD_END:  

 {"moveIndex":15,"cardId":126,"flipIfFlipped":true,"playerId":1} 
 Recived From Player 2 22:58:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Play The Chariot "} 
 Recived From Player 2 22:58:59 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Recived From Player 2 22:58:59 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Recived From Player 2 22:59:01 $MOVE_CARD_END:  

 {"moveIndex":16,"cardId":126,"flipIfFlipped":true,"playerId":1} 
 Recived From Player 2 22:59:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Play The Chariot "} 
 Recived From Player 2 22:59:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Play The Chariot "} 
 Recived From Player 2 22:59:04 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Recived From Player 2 22:59:05 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Recived From Player 2 22:59:12 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Recived From Player 2 22:59:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Pale Fatty<Monster>"} 
 Recived From Player 2 22:59:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Pale Fatty<Monster>"} 
 Recived From Player 2 22:59:20 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Recived From Player 2 22:59:20 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Recived From Player 2 22:59:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Pale Fatty<Monster>"} 
 Recived From Player 2 22:59:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Eden is going to hurt Pale Fatty \n2:Player 1 is rolling against Pale Fatty<Monster>"} 
 Recived From Player 2 22:59:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Eden is going to hurt Pale Fatty \n2:Player 1 is rolling against Pale Fatty<Monster>"} 
 Recived From Player 2 22:59:27 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Recived From Player 2 22:59:27 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Recived From Player 2 22:59:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Eden is going to hurt Pale Fatty"} 
 Recived From Player 2 22:59:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Eden is going to hurt Pale Fatty"} 
 Recived From Player 2 22:59:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Eden is going to hurt Pale Fatty"} 
 Recived From Player 2 22:59:30 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Recived From Player 2 22:59:30 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Recived From Player 2 23:00:07 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Recived From Player 2 23:00:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Pale Fatty<Monster>"} 
 Recived From Player 2 23:00:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Pale Fatty<Monster>"} 
 Recived From Player 2 23:00:16 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Recived From Player 2 23:00:16 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Recived From Player 2 23:00:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Pale Fatty<Monster>"} 
 Recived From Player 2 23:00:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Eden is going to hurt Pale Fatty \n2:Player 1 is rolling against Pale Fatty<Monster>"} 
 Recived From Player 2 23:00:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Eden is going to hurt Pale Fatty \n2:Player 1 is rolling against Pale Fatty<Monster>"} 
 Recived From Player 2 23:00:22 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Recived From Player 2 23:00:22 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Recived From Player 2 23:00:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Eden is going to hurt Pale Fatty"} 
 Recived From Player 2 23:00:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Eden is going to hurt Pale Fatty"} 
 Recived From Player 2 23:00:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Eden is going to hurt Pale Fatty \n2:[object Object] Is Going To Be Killed by Eden"} 
 Recived From Player 2 23:00:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Eden is going to hurt Pale Fatty \n2:[object Object] Is Going To Be Killed by Eden"} 
 Recived From Player 2 23:00:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Eden is going to hurt Pale Fatty \n2:[object Object] Is Going To Be Killed by Eden"} 
 Recived From Player 2 23:00:29 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Recived From Player 2 23:00:29 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Recived From Player 2 23:00:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Eden is going to hurt Pale Fatty"} 
 Recived From Player 2 23:00:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Eden is going to hurt Pale Fatty"} 
 Recived From Player 2 23:00:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Get Pale Fatty<Monster>'s Reward \n2:[object Object] Is Going To Be Killed by Eden"} 
 Recived From Player 2 23:00:35 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Recived From Player 2 23:00:35 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Recived From Player 2 23:00:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Get Pale Fatty<Monster>'s Reward"} 
 Recived From Player 2 23:00:36 $MOVE_CARD_END:  

 {"moveIndex":17,"cardId":292,"flipIfFlipped":true,"playerId":1} 
 Recived From Player 2 23:00:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Get Pale Fatty<Monster>'s Reward"} 
 Recived From Player 2 23:00:39 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Recived From Player 2 23:00:39 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Recived From Player 2 23:00:43 $STACK_EMPTIED:  

 {"playerId":1} 
 Recived From Player 2 23:00:43 $RECHARGE_ITEM:  

 {"cardId":325} 
 Recived From Player 2 23:00:43 $PLAYER_RECHARGE_ITEM:  

 {"playerId":2,"cardId":325} 
 Recived From Player 2 23:00:43 $RECHARGE_ITEM:  

 {"cardId":326} 
 Recived From Player 2 23:00:43 $PLAYER_RECHARGE_ITEM:  

 {"playerId":2,"cardId":326} 
 Recived From Player 2 23:00:43 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 23:00:43 $NEXT_STACK_ID:  
 Recived From Player 2 23:00:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 
 Recived From Player 2 23:00:43 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":21,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 
 Recived From Player 2 23:00:43 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":21,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 
 Recived From Player 2 23:00:43 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Recived From Player 2 23:00:43 $SHOW_STACK_EFFECT:  

 {"effectId":21} 
 Recived From Player 2 23:00:43 $CLEAR_SE_VIS:  
 Recived From Player 2 23:00:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":154,"_text":"Add StartTurnLoot 21 "}} 
 Recived From Player 2 23:00:46 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 23:00:46 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":21,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 
 Recived From Player 2 23:00:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":155,"_text":"Response Adding StartTurnLoot 21"},"childOfId":154} 
 Recived From Player 2 23:00:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":156,"_text":"Wait For Response From Player 2 "},"childOfId":154} 
 Recived From Player 2 23:00:46 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 23:00:46 $ACTION_MASSAGE_REMOVE:  

 {"id":156} 
 Recived From Player 2 23:00:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":157,"_text":"Wait For Response From Player 1 "},"childOfId":154} 
 Recived From Player 2 23:00:46 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Recived From Player 2 23:00:46 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Recived From Player 2 23:00:46 $ACTION_MASSAGE_REMOVE:  

 {"id":157} 
 Recived From Player 2 23:00:46 $ACTION_MASSAGE_REMOVE:  

 {"id":155} 
 Recived From Player 2 23:00:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":158,"_text":"Resolve StartTurnLoot 21 "}} 
 Recived From Player 2 23:00:46 $UPDATE_RESOLVING_STACK_EFFECTS:  

 {"stackEffects":[{"entityId":21,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}]} 
 Recived From Player 2 23:00:46 $DRAW_CARD:  

 {"deckType":1} 
 Recived From Player 2 23:00:46 $MOVE_CARD:  

 {"moveIndex":18,"cardId":53,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Recived From Player 2 23:00:47 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":53} 
 Recived From Player 2 23:00:47 $FLIP_CARD:  

 {"cardId":53} 
 Recived From Player 2 23:00:47 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":53} 
 Recived From Player 2 23:00:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Has Drawen Loot For Start Turn"} 
 Recived From Player 2 23:00:47 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":21,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 
 Recived From Player 2 23:00:47 $UPDATE_RESOLVING_STACK_EFFECTS:  

 {"stackEffects":[]} 
 Recived From Player 2 23:00:47 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Recived From Player 2 23:00:47 $SHOW_STACK_EFFECT:  

 {"effectId":21} 
 Recived From Player 2 23:00:50 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":21} 
 Recived From Player 2 23:00:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":159,"_text":"Remove After Resolve StartTurnLoot 21  "}} 
 Recived From Player 2 23:00:50 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Recived From Player 2 23:00:50 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":21,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 
 Recived From Player 2 23:00:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":160,"_text":"Response Remove After Resolve StartTurnLoot 21"},"childOfId":159} 
 Recived From Player 2 23:00:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":161,"_text":"Wait For Response From Player 1 "},"childOfId":159} 
 Recived From Player 2 23:00:50 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Recived From Player 2 23:00:50 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Recived From Player 2 23:00:50 $ACTION_MASSAGE_REMOVE:  

 {"id":161} 
 Recived From Player 2 23:00:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":162,"_text":"Wait For Response From Player 2 "},"childOfId":159} 
 Recived From Player 2 23:00:50 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 23:00:50 $ACTION_MASSAGE_REMOVE:  

 {"id":162} 
 Recived From Player 2 23:00:50 $ACTION_MASSAGE_REMOVE:  

 {"id":160} 
 Recived From Player 2 23:00:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":163,"_text":"Stack Was Emptied "}} 
 Recived From Player 2 23:00:50 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Recived From Player 2 23:00:50 $CLEAR_SE_VIS:  
 Recived From Player 2 23:00:57 $NEXT_STACK_ID:  
 Recived From Player 2 23:00:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 declared attack on Monster Deck"} 
 Recived From Player 2 23:00:57 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":22,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":222,"stackEffectType":4}} 
 Recived From Player 2 23:00:57 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":22,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":222,"stackEffectType":4}} 
 Recived From Player 2 23:00:57 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Recived From Player 2 23:00:57 $SHOW_STACK_EFFECT:  

 {"effectId":22} 
 Recived From Player 2 23:01:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":164,"_text":"Add DeclareAttack 22 "}} 
 Recived From Player 2 23:01:00 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 23:01:00 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":22,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":222,"stackEffectType":4}} 
 Recived From Player 2 23:01:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":165,"_text":"Response Adding DeclareAttack 22"},"childOfId":164} 
 Recived From Player 2 23:01:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":166,"_text":"Wait For Response From Player 2 "},"childOfId":164} 
 Recived From Player 2 23:01:00 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 23:01:00 $ACTION_MASSAGE_REMOVE:  

 {"id":166} 
 Recived From Player 2 23:01:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":167,"_text":"Wait For Response From Player 1 "},"childOfId":164} 
 Recived From Player 2 23:01:00 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Recived From Player 2 23:01:00 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Recived From Player 2 23:01:01 $ACTION_MASSAGE_REMOVE:  

 {"id":167} 
 Recived From Player 2 23:01:01 $ACTION_MASSAGE_REMOVE:  

 {"id":165} 
 Recived From Player 2 23:01:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":168,"_text":"Resolve DeclareAttack 22 "}} 
 Recived From Player 2 23:01:01 $UPDATE_RESOLVING_STACK_EFFECTS:  

 {"stackEffects":[{"entityId":22,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":222,"stackEffectType":4}]} 
 Recived From Player 2 23:01:01 $DRAW_CARD:  

 {"deckType":2} 
 Recived From Player 2 23:01:01 $SHOW_CARD_PREVIEW:  

 {"cardToShowId":280,"playerId":2} 
 Recived From Player 2 23:01:10 $FLIP_CARD:  

 {"cardId":280} 
 Recived From Player 2 23:01:10 $REMOVE_FROM_PASSIVE_MANAGER:  

 {"cardId":243} 
 Recived From Player 2 23:01:10 $ADD_MONSTER:  

 {"monsterPlaceId":1,"monsterId":280} 
 Recived From Player 2 23:01:10 $NEW_MONSTER_ON_PLACE:  

 {"cardId":280,"monsterPlaceId":1} 
 Recived From Player 2 23:01:10 $NEXT_STACK_ID:  
 Recived From Player 2 23:01:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 declared attack on Monster Deck \n2:Player 2 is going to activate I Can See Forever!"} 
 Recived From Player 2 23:01:10 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":23,"creatorCardId":325,"hasLockingStackEffect":false,"itemToPlayCardId":280,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Recived From Player 2 23:01:10 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":23,"creatorCardId":325,"hasLockingStackEffect":false,"itemToPlayCardId":280,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Recived From Player 2 23:01:10 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Recived From Player 2 23:01:10 $SHOW_STACK_EFFECT:  

 {"effectId":23} 
 Recived From Player 2 23:01:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":169,"_text":"Add ActivateItem 23 "}} 
 Recived From Player 2 23:01:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 23:01:13 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":23,"creatorCardId":325,"hasLockingStackEffect":false,"itemToPlayCardId":280,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Recived From Player 2 23:01:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":170,"_text":"Response Adding ActivateItem 23"},"childOfId":169} 
 Recived From Player 2 23:01:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":171,"_text":"Wait For Response From Player 2 "},"childOfId":169} 
 Recived From Player 2 23:01:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 23:01:13 $ACTION_MASSAGE_REMOVE:  

 {"id":171} 
 Recived From Player 2 23:01:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":172,"_text":"Wait For Response From Player 1 "},"childOfId":169} 
 Recived From Player 2 23:01:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Recived From Player 2 23:01:13 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Recived From Player 2 23:01:13 $ACTION_MASSAGE_REMOVE:  

 {"id":172} 
 Recived From Player 2 23:01:13 $ACTION_MASSAGE_REMOVE:  

 {"id":170} 
 Recived From Player 2 23:01:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":173,"_text":"Resolve ActivateItem 23 "}} 
 Recived From Player 2 23:01:13 $UPDATE_RESOLVING_STACK_EFFECTS:  

 {"stackEffects":[{"entityId":22,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":222,"stackEffectType":4},{"entityId":23,"creatorCardId":325,"hasLockingStackEffect":false,"itemToPlayCardId":280,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 
 Recived From Player 2 23:01:13 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":280,"particleType":6} 
 Recived From Player 2 23:01:15 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":280,"particleType":6} 
 Recived From Player 2 23:01:18 $DECK_ADD_TO_TOP:  

 {"deckType":1,"cardId":60} 
 Recived From Player 2 23:01:18 $DECK_ADD_TO_TOP:  

 {"deckType":1,"cardId":26} 
 Recived From Player 2 23:01:18 $DECK_ADD_TO_TOP:  

 {"deckType":1,"cardId":125} 
 Recived From Player 2 23:01:18 $DECK_ADD_TO_TOP:  

 {"deckType":1,"cardId":15} 
 Recived From Player 2 23:01:18 $DECK_ADD_TO_TOP:  

 {"deckType":1,"cardId":66} 
 Recived From Player 2 23:01:18 $DECK_ADD_TO_TOP:  

 {"deckType":1,"cardId":135} 
 Recived From Player 2 23:01:18 $DRAW_CARD:  

 {"deckType":1} 
 Recived From Player 2 23:01:18 $MOVE_CARD:  

 {"moveIndex":19,"cardId":135,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Recived From Player 2 23:01:19 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":135} 
 Recived From Player 2 23:01:19 $FLIP_CARD:  

 {"cardId":135} 
 Recived From Player 2 23:01:19 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":135} 
 Recived From Player 2 23:01:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 declared attack on Monster Deck \n2:Player 2 has activated I Can See Forever!"} 
 Recived From Player 2 23:01:19 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ACTIVATE_ITEM","args":[{"type":0,"number":280}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":10,"originStackId":-1},"isAfterActivation":true,"index":10} 
 Recived From Player 2 23:01:19 $MOVE_CARD:  

 {"moveIndex":20,"cardId":280,"placeID":332,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Recived From Player 2 23:01:19 $MOVE_CARD_TO_PILE:  

 {"type":2,"cardId":280} 
 Recived From Player 2 23:01:19 $REMOVE_MONSTER:  

 {"holderId":1,"monsterId":280} 
 Recived From Player 2 23:01:19 $REGISTER_PASSIVE_ITEM:  

 {"cardId":243} 
 Recived From Player 2 23:01:19 $GET_NEXT_MONSTER:  

 {"monsterPlaceId":1} 
 Recived From Player 2 23:01:19 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":23,"creatorCardId":325,"hasLockingStackEffect":false,"itemToPlayCardId":280,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Recived From Player 2 23:01:20 $UPDATE_RESOLVING_STACK_EFFECTS:  

 {"stackEffects":[{"entityId":22,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":222,"stackEffectType":4}]} 
 Recived From Player 2 23:01:20 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Recived From Player 2 23:01:20 $SHOW_STACK_EFFECT:  

 {"effectId":23} 
 Recived From Player 2 23:01:22 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":23} 
 Recived From Player 2 23:01:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":174,"_text":"Remove After Resolve ActivateItem 23  "}} 
 Recived From Player 2 23:01:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 declared attack on Monster Deck"} 
 Recived From Player 2 23:01:22 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":23,"creatorCardId":325,"hasLockingStackEffect":false,"itemToPlayCardId":280,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Recived From Player 2 23:01:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":175,"_text":"Response Remove After Resolve ActivateItem 23"},"childOfId":174} 
 Recived From Player 2 23:01:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":176,"_text":"Wait For Response From Player 1 "},"childOfId":174} 
 Recived From Player 2 23:01:23 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Recived From Player 2 23:01:23 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Recived From Player 2 23:01:23 $ACTION_MASSAGE_REMOVE:  

 {"id":176} 
 Recived From Player 2 23:01:23 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":177,"_text":"Wait For Response From Player 2 "},"childOfId":174} 
 Recived From Player 2 23:01:23 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 23:01:23 $ACTION_MASSAGE_REMOVE:  

 {"id":177} 
 Recived From Player 2 23:01:23 $ACTION_MASSAGE_REMOVE:  

 {"id":175} 
 Recived From Player 2 23:01:23 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":178,"_text":"Resolve DeclareAttack 22 "}} 
 Recived From Player 2 23:01:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Has Entered Battle with I Can See Forever!"} 
 Recived From Player 2 23:01:23 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":11,"originStackId":22},"isAfterActivation":true,"index":11} 
 Recived From Player 2 23:01:23 $UPDATE_RESOLVING_STACK_EFFECTS:  

 {"stackEffects":[]} 
 Recived From Player 2 23:01:23 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Recived From Player 2 23:01:23 $SHOW_STACK_EFFECT:  

 {"effectId":22} 
 Recived From Player 2 23:01:26 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":22} 
 Recived From Player 2 23:01:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":179,"_text":"Remove After Resolve DeclareAttack 22  "}} 
 Recived From Player 2 23:01:26 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Recived From Player 2 23:01:26 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":22,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":280,"stackEffectType":4}} 
 Recived From Player 2 23:01:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":180,"_text":"Response Remove After Resolve DeclareAttack 22"},"childOfId":179} 
 Recived From Player 2 23:01:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":181,"_text":"Wait For Response From Player 2 "},"childOfId":179} 
 Recived From Player 2 23:01:26 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 23:01:26 $ACTION_MASSAGE_REMOVE:  

 {"id":181} 
 Recived From Player 2 23:01:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":182,"_text":"Wait For Response From Player 1 "},"childOfId":179} 
 Recived From Player 2 23:01:26 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Recived From Player 2 23:01:26 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Recived From Player 2 23:01:26 $ACTION_MASSAGE_REMOVE:  

 {"id":182} 
 Recived From Player 2 23:01:26 $ACTION_MASSAGE_REMOVE:  

 {"id":180} 
 Recived From Player 2 23:01:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":183,"_text":"Stack Was Emptied "}} 
 Recived From Player 2 23:01:26 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Recived From Player 2 23:01:26 $CLEAR_SE_VIS:  
 Recived From Player 2 23:02:42 $MATCH: 