Start Log 

 Player 1 02:02:49 $MATCH:  

 Player 1 02:02:50 $START_GAME:  

 Player 2 02:02:50 $MOVE_TO_TABLE:  

 Player 1 02:02:50 $MOVE_TO_TABLE:  

 Player 1 02:02:58 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 02:02:58 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 2 02:02:58 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":281,"itemCardId":284} 

 Player 2 02:02:58 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":292}],"result":true,"preventMethod":false,"methodScopeId":291,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 02:02:58 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":291,"itemCardId":292} 

 Player 2 02:02:58 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[15,138,66,63,41,99,13,45,40,10,137,17,73,111,57,93,14,134,55,104,98,124,38,107,119,136,90,33,53,24,25,75,121,128,36,89,44,106,117,92,112,23,118,115,74,91,28,46,48,120,50,114,141,51,30,139,39,103,79,86,77,32,26,29,126,68,22,101,76,105,109,83,127,49,64,132,113,94,102,54,9,69,85,56,27,19,62,8,130,16,21,110,65,125,140,47,122,81,135,12,7,97,116,123,78,70,129,80,11,20,18,52,72,88,133,71,87,43,96,37,58,131,42,100,60,67,82,108,142,34,95,61,35,31,84,59]} 

 Player 2 02:02:58 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[250,269,240,257,251,244,271,224,242,229,258,262,255,247,237,241,272,228,253,238,274,265,266,252,234,226,264,275,239,249,267,268,263,225,270,259,243,261,254,276,230,245,233,231,256,273,232,223,260,235,248,227,236,246]} 

 Player 2 02:02:58 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[155,206,180,196,178,168,197,150,157,191,205,218,198,164,159,174,161,187,200,208,176,214,160,202,194,183,220,165,179,182,152,209,215,169,172,166,154,186,184,173,151,149,189,204,199,177,163,203,181,170,171,148,219,217,216,158,156,153,185,211,167,162,201,188,175,190,207,195,213,193,145,192,210,147,146,212]} 

 Player 2 02:02:58 $DRAW_CARD:  
{"deckType":5} 

 Player 2 02:02:58 $FLIP_CARD:  
{"cardId":212} 

 Player 2 02:02:58 $ADD_STORE_CARD:  
{"cardId":212} 

 Player 2 02:02:58 $DRAW_CARD:  
{"deckType":5} 

 Player 2 02:02:58 $FLIP_CARD:  
{"cardId":146} 

 Player 2 02:02:59 $ADD_STORE_CARD:  
{"cardId":146} 

 Player 2 02:02:59 $DRAW_CARD:  
{"deckType":2} 

 Player 2 02:02:59 $FLIP_CARD:  
{"cardId":246} 

 Player 2 02:02:59 $REGISTER_PASSIVE_ITEM:  
{"cardId":246} 

 Player 2 02:02:59 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":246} 

 Player 2 02:02:59 $NEW_MONSTER_ON_PLACE:  
{"cardId":246,"monsterPlaceId":1} 

 Player 2 02:02:59 $DRAW_CARD:  
{"deckType":2} 

 Player 2 02:02:59 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":236} 

 Player 2 02:02:59 $DRAW_CARD:  
{"deckType":2} 

 Player 2 02:02:59 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":227} 

 Player 2 02:02:59 $DRAW_CARD:  
{"deckType":2} 

 Player 2 02:02:59 $FLIP_CARD:  
{"cardId":248} 

 Player 2 02:02:59 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":248} 

 Player 2 02:02:59 $NEW_MONSTER_ON_PLACE:  
{"cardId":248,"monsterPlaceId":2} 

 Player 2 02:02:59 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 02:02:59 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 02:02:59 $DRAW_CARD:  
{"deckType":1} 

 Player 2 02:02:59 $MOVE_CARD:  
{"moveIndex":1,"cardId":59,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 02:02:59 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":284}],"result":true,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 02:02:59 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":59,"flipIfFlipped":false,"playerId":2} 

 Player 2 02:02:59 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":59} 

 Player 2 02:02:59 $FLIP_CARD:  
{"cardId":59} 

 Player 2 02:03:00 $FLIP_CARD:  
{"cardId":59} 

 Player 2 02:03:00 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":59} 

 Player 2 02:03:00 $DRAW_CARD:  
{"deckType":1} 

 Player 2 02:03:00 $MOVE_CARD:  
{"moveIndex":2,"cardId":84,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 02:03:00 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":84,"flipIfFlipped":false,"playerId":2} 

 Player 2 02:03:00 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":84} 

 Player 2 02:03:00 $FLIP_CARD:  
{"cardId":84} 

 Player 2 02:03:00 $FLIP_CARD:  
{"cardId":84} 

 Player 2 02:03:00 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":84} 

 Player 2 02:03:00 $DRAW_CARD:  
{"deckType":1} 

 Player 2 02:03:00 $MOVE_CARD:  
{"moveIndex":3,"cardId":31,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 02:03:00 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":31,"flipIfFlipped":false,"playerId":2} 

 Player 2 02:03:00 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":31} 

 Player 2 02:03:01 $FLIP_CARD:  
{"cardId":31} 

 Player 2 02:03:01 $FLIP_CARD:  
{"cardId":31} 

 Player 2 02:03:01 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":31} 

 Player 2 02:03:01 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 02:03:01 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":291,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 02:03:01 $DRAW_CARD:  
{"deckType":1} 

 Player 2 02:03:01 $MOVE_CARD:  
{"moveIndex":4,"cardId":35,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 02:03:01 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":35,"flipIfFlipped":false,"playerId":2} 

 Player 2 02:03:01 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":35} 

 Player 2 02:03:01 $FLIP_CARD:  
{"cardId":35} 

 Player 2 02:03:01 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":35} 

 Player 2 02:03:01 $DRAW_CARD:  
{"deckType":1} 

 Player 2 02:03:01 $MOVE_CARD:  
{"moveIndex":5,"cardId":61,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 02:03:02 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":61,"flipIfFlipped":false,"playerId":2} 

 Player 2 02:03:02 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":61} 

 Player 2 02:03:02 $FLIP_CARD:  
{"cardId":61} 

 Player 2 02:03:02 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":61} 

 Player 2 02:03:02 $DRAW_CARD:  
{"deckType":1} 

 Player 2 02:03:02 $MOVE_CARD:  
{"moveIndex":6,"cardId":95,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 02:03:02 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":95,"flipIfFlipped":false,"playerId":2} 

 Player 2 02:03:02 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":95} 

 Player 2 02:03:02 $FLIP_CARD:  
{"cardId":95} 

 Player 2 02:03:02 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":95} 

 Player 2 02:03:02 $GAME_HAS_STARTED:  

 Player 2 02:03:02 $SET_TURN:  
{"playerId":1} 

 Player 2 02:03:02 $START_TURN:  
{"playerId":1} 

 Player 2 02:03:02 $UPDATE_ACTIONS:  

 Player 1 02:03:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:03:02 $NEXT_STACK_ID:  

 Player 1 02:03:02 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:03:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 02:03:02 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":281,"turnPlayerCardId":281,"stackEffectType":13}} 

 Player 1 02:03:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 02:03:02 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":281,"turnPlayerCardId":281,"stackEffectType":13}} 

 Player 1 02:03:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 1 02:03:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:03:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 02:03:02 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":281,"turnPlayerCardId":281,"stackEffectType":13}} 

 Player 1 02:03:02 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 02:03:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 1 02:03:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 1 02:03:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:03:03 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 02:03:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 1 02:03:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:03:03 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:03:03 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:03:03 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:03:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:03:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:03:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:03:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:03:03 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:03:03 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 02:03:03 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 02:03:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 1 02:03:03 $DRAW_CARD:  
{"deckType":1} 

 Player 1 02:03:03 $MOVE_CARD:  
{"moveIndex":7,"cardId":34,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 02:03:03 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":34,"flipIfFlipped":false,"playerId":1} 

 Player 1 02:03:03 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":34} 

 Player 1 02:03:03 $FLIP_CARD:  
{"cardId":34} 

 Player 1 02:03:03 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":34} 

 Player 1 02:03:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 02:03:03 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":281,"turnPlayerCardId":281,"stackEffectType":13}} 

 Player 1 02:03:03 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 02:03:03 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:03:03 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":281,"turnPlayerCardId":281,"stackEffectType":13}} 

 Player 1 02:03:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 1 02:03:03 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:03:04 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":281,"turnPlayerCardId":281,"stackEffectType":13}} 

 Player 1 02:03:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 1 02:03:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 1 02:03:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:03:04 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:03:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:03:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:03:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:03:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:03:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:03:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:03:04 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:03:04 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 1 02:03:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 1 02:03:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:03:04 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 1 02:03:04 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 1 02:03:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 1 02:03:04 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:03:04 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 02:03:04 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 02:03:04 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 02:03:04 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 02:03:04 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 02:03:04 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 02:03:04 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 02:03:05 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 02:03:06 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 02:03:43 $MOVE_CARD:  
{"moveIndex":8,"cardId":161,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 

 Player 1 02:03:44 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":161,"flipIfFlipped":true,"playerId":2} 

 Player 2 02:03:44 $REGISTER_PASSIVE_ITEM:  
{"cardId":161} 

 Player 2 02:03:44 $MOVE_CARD:  
{"moveIndex":9,"cardId":161,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 

 Player 1 02:03:44 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":161,"flipIfFlipped":true,"playerId":2} 

 Player 2 02:03:44 $ADD_AN_ITEM:  
{"playerId":2,"cardId":161,"isReward":true} 

 Player 2 02:03:44 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":161}],"result":true,"preventMethod":false,"methodScopeId":291,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 1 02:03:48 $SHOW_DECISION:  
{"startCardId":281,"endCardId":248} 

 Player 1 02:03:51 $NEXT_STACK_ID:  

 Player 1 02:03:51 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:03:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Dinga"} 

 Player 1 02:03:51 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":281,"attackingPlayerCardId":281,"idOfCardBeingAttacked":248,"stackEffectType":4}} 

 Player 1 02:03:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Dinga"} 

 Player 1 02:03:51 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":281,"attackingPlayerCardId":281,"idOfCardBeingAttacked":248,"stackEffectType":4}} 

 Player 1 02:03:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add DeclareAttack 2 "}} 

 Player 1 02:03:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:03:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Dinga"} 

 Player 1 02:03:51 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":281,"attackingPlayerCardId":281,"idOfCardBeingAttacked":248,"stackEffectType":4}} 

 Player 1 02:03:51 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 02:03:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding DeclareAttack 2"},"childOfId":10} 

 Player 1 02:03:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 1 02:03:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:03:51 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 1 02:03:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 1 02:03:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:03:51 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:03:51 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:03:51 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:03:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Dinga"} 

 Player 2 02:03:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Dinga"} 

 Player 2 02:03:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Dinga"} 

 Player 2 02:03:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Dinga"} 

 Player 2 02:03:51 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:03:51 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 1 02:03:51 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 1 02:03:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve DeclareAttack 2 "}} 

 Player 1 02:03:51 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":248,"particleType":5} 

 Player 1 02:03:51 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":true,"index":2,"originStackId":2},"isAfterActivation":true,"index":2} 

 Player 1 02:03:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Dinga"} 

 Player 1 02:03:51 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":281,"attackingPlayerCardId":281,"idOfCardBeingAttacked":248,"stackEffectType":4}} 

 Player 1 02:03:51 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 02:03:52 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:03:52 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":281,"attackingPlayerCardId":281,"idOfCardBeingAttacked":248,"stackEffectType":4}} 

 Player 1 02:03:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve DeclareAttack 2  "}} 

 Player 1 02:03:52 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:03:52 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":281,"attackingPlayerCardId":281,"idOfCardBeingAttacked":248,"stackEffectType":4}} 

 Player 1 02:03:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve DeclareAttack 2"},"childOfId":15} 

 Player 1 02:03:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 1 02:03:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:03:52 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:03:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Dinga"} 

 Player 2 02:03:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Dinga"} 

 Player 2 02:03:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Dinga"} 

 Player 2 02:03:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Dinga"} 

 Player 2 02:03:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Dinga"} 

 Player 2 02:03:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Dinga"} 

 Player 2 02:03:52 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:03:52 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 1 02:03:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 1 02:03:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:03:52 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 1 02:03:52 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 1 02:03:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 1 02:03:52 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:03:52 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 02:03:52 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 02:03:52 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 02:03:52 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 02:03:52 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 02:03:52 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 02:03:52 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 02:03:52 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 02:03:52 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 02:03:52 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 02:03:52 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 02:03:53 $NEXT_STACK_ID:  

 Player 1 02:03:53 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:03:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster>"} 

 Player 1 02:03:53 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":281,"rollingPlayerCardId":281,"stackEffectType":2,"attackedMonsterCardId":248}} 

 Player 1 02:03:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster>"} 

 Player 1 02:03:53 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":281,"rollingPlayerCardId":281,"stackEffectType":2,"attackedMonsterCardId":248}} 

 Player 1 02:03:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add AttackRoll 3 "}} 

 Player 1 02:03:53 $ROLL_DICE:  
{"playerId":1} 

 Player 2 02:03:53 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:03:53 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:03:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster>"} 

 Player 2 02:03:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster>"} 

 Player 1 02:03:54 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 02:03:54 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 02:03:55 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":2} 

 Player 1 02:03:55 $UPDATE_STACK_VIS:  
{"stackId":3,"text":"player rolled 2 vs Holy Dinga<Monster>"} 

 Player 1 02:03:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Holy Dinga<Monster>"} 

 Player 1 02:03:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:03:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Holy Dinga<Monster>"} 

 Player 1 02:03:55 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":281,"numberRolled":2,"rollingPlayerCardId":281,"stackEffectType":2,"attackedMonsterCardId":248}} 

 Player 1 02:03:55 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 02:03:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding AttackRoll 3"},"childOfId":20} 

 Player 1 02:03:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 1 02:03:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:03:55 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 1 02:03:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 1 02:03:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:03:55 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:03:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster>"} 

 Player 2 02:03:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster>"} 

 Player 2 02:03:56 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:03:56 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 1 02:03:56 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 1 02:03:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve AttackRoll 3 "}} 

 Player 1 02:03:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Added 0 to original roll"}} 

 Player 1 02:03:56 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":3},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":true,"index":1,"originStackId":3},"isAfterActivation":false,"index":1} 

 Player 1 02:03:56 $NEXT_STACK_ID:  

 Player 1 02:03:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Holy Dinga<Monster>"} 

 Player 1 02:03:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Holy Dinga<Monster> \n2:Activate Dead Bird effect ChainEffects<ChainEffects>"} 

 Player 1 02:03:56 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":291,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":161,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":161,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 02:03:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Holy Dinga<Monster> \n2:Activate Dead Bird effect ChainEffects<ChainEffects>"} 

 Player 1 02:03:56 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":291,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":161,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":161,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 02:03:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Add ActivatePassiveEffect 4 "}} 

 Player 1 02:03:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Holy Dinga<Monster> \n2:Activate Dead Bird effect ChainEffects<ChainEffects>"} 

 Player 1 02:03:56 $PUT_ON_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":291,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":161,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":161,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14},"playerId":2,"originPlayerId":1} 

 Player 2 02:03:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster>"} 

 Player 2 02:03:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster>"} 

 Player 2 02:03:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster> \n2:Activate Dead Bird "} 

 Player 2 02:03:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster> \n2:Activate Dead Bird "} 

 Player 2 02:03:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster> \n2:Activate Dead Bird "} 

 Player 2 02:03:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster> \n2:Activate Dead Bird "} 

 Player 1 02:03:59 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 02:17:32 $MATCH: 