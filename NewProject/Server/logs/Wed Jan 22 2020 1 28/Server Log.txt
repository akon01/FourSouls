Start Log 

 Player 1 01:28:48 $MATCH:  

 Player 1 01:28:48 $START_GAME:  

 Player 1 01:28:48 $MOVE_TO_TABLE:  

 Player 2 01:28:48 $MOVE_TO_TABLE:  

 Player 2 01:28:52 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 1 01:28:55 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 01:28:55 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":284,"itemCardId":285} 

 Player 2 01:28:55 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":299}],"result":true,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 01:28:55 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":298,"itemCardId":299} 

 Player 2 01:28:55 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[128,86,138,100,112,96,36,76,52,12,39,31,20,33,124,64,75,126,60,84,63,97,106,49,71,29,69,95,102,28,18,137,105,88,135,136,110,115,74,70,43,34,14,92,140,141,26,27,130,47,37,80,133,117,122,48,109,72,142,15,131,17,24,61,78,125,40,66,57,73,99,101,56,59,77,114,32,79,50,132,89,129,16,38,81,139,93,91,41,87,35,120,21,46,113,23,118,9,44,83,68,58,55,22,53,45,11,85,67,19,121,90,134,116,111,127,8,107,25,7,123,98,42,103,119,108,30,13,51,94,65,54,62,82,10,104]} 

 Player 2 01:28:55 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[271,228,229,234,254,260,259,250,252,280,273,266,269,240,239,278,255,263,279,267,270,230,276,262,233,257,261,237,244,275,258,274,246,256,251,277,247,281,272,232,245,264,265,241,242,268,238,235,248,231,243,236,249,253]} 

 Player 2 01:28:55 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[207,208,186,163,209,173,158,214,183,161,180,156,210,177,181,203,145,187,153,165,222,146,175,162,188,196,150,171,166,219,193,151,176,164,149,190,172,215,174,185,147,154,199,205,195,198,223,218,220,194,157,204,184,216,167,221,200,168,189,160,201,206,169,192,224,170,191,182,202,155,178,213,217,148,197,225,159,179,152,211,212]} 

 Player 2 01:28:55 $DRAW_CARD:  
{"deckType":5} 

 Player 2 01:28:55 $FLIP_CARD:  
{"cardId":212} 

 Player 2 01:28:55 $ADD_STORE_CARD:  
{"cardId":212} 

 Player 2 01:28:55 $DRAW_CARD:  
{"deckType":5} 

 Player 2 01:28:55 $FLIP_CARD:  
{"cardId":211} 

 Player 2 01:28:55 $ADD_STORE_CARD:  
{"cardId":211} 

 Player 2 01:28:55 $DRAW_CARD:  
{"deckType":2} 

 Player 2 01:28:55 $FLIP_CARD:  
{"cardId":253} 

 Player 2 01:28:55 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":253} 

 Player 2 01:28:55 $NEW_MONSTER_ON_PLACE:  
{"cardId":253,"monsterPlaceId":1} 

 Player 2 01:28:55 $DRAW_CARD:  
{"deckType":2} 

 Player 2 01:28:55 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":249} 

 Player 2 01:28:55 $DRAW_CARD:  
{"deckType":2} 

 Player 2 01:28:55 $FLIP_CARD:  
{"cardId":236} 

 Player 2 01:28:55 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":236} 

 Player 2 01:28:55 $NEW_MONSTER_ON_PLACE:  
{"cardId":236,"monsterPlaceId":2} 

 Player 2 01:28:55 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 01:28:56 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":284,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 01:28:56 $DRAW_CARD:  
{"deckType":1} 

 Player 1 01:28:56 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":285}],"result":true,"preventMethod":false,"methodScopeId":284,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 01:28:56 $MOVE_CARD:  
{"moveIndex":1,"cardId":104,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 01:28:56 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":104,"flipIfFlipped":false,"playerId":2} 

 Player 2 01:28:56 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":104} 

 Player 2 01:28:56 $FLIP_CARD:  
{"cardId":104} 

 Player 2 01:28:56 $FLIP_CARD:  
{"cardId":104} 

 Player 2 01:28:56 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":104} 

 Player 2 01:28:56 $DRAW_CARD:  
{"deckType":1} 

 Player 2 01:28:56 $MOVE_CARD:  
{"moveIndex":2,"cardId":10,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 01:28:56 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":10,"flipIfFlipped":false,"playerId":2} 

 Player 2 01:28:56 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":10} 

 Player 2 01:28:56 $FLIP_CARD:  
{"cardId":10} 

 Player 2 01:28:56 $FLIP_CARD:  
{"cardId":10} 

 Player 2 01:28:56 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":10} 

 Player 2 01:28:56 $DRAW_CARD:  
{"deckType":1} 

 Player 2 01:28:57 $MOVE_CARD:  
{"moveIndex":3,"cardId":82,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 01:28:57 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":82,"flipIfFlipped":false,"playerId":2} 

 Player 2 01:28:57 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":82} 

 Player 2 01:28:57 $FLIP_CARD:  
{"cardId":82} 

 Player 2 01:28:57 $FLIP_CARD:  
{"cardId":82} 

 Player 2 01:28:57 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":82} 

 Player 2 01:28:57 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 01:28:57 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 01:28:57 $DRAW_CARD:  
{"deckType":1} 

 Player 2 01:28:57 $MOVE_CARD:  
{"moveIndex":4,"cardId":62,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 01:28:57 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":62,"flipIfFlipped":false,"playerId":2} 

 Player 2 01:28:57 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":62} 

 Player 2 01:28:57 $FLIP_CARD:  
{"cardId":62} 

 Player 2 01:28:57 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":62} 

 Player 2 01:28:57 $DRAW_CARD:  
{"deckType":1} 

 Player 2 01:28:57 $MOVE_CARD:  
{"moveIndex":5,"cardId":54,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 01:28:58 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":54,"flipIfFlipped":false,"playerId":2} 

 Player 2 01:28:58 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":54} 

 Player 2 01:28:58 $FLIP_CARD:  
{"cardId":54} 

 Player 2 01:28:58 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":54} 

 Player 2 01:28:58 $DRAW_CARD:  
{"deckType":1} 

 Player 2 01:28:58 $MOVE_CARD:  
{"moveIndex":6,"cardId":65,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 01:28:58 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":65,"flipIfFlipped":false,"playerId":2} 

 Player 2 01:28:58 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":65} 

 Player 2 01:28:58 $FLIP_CARD:  
{"cardId":65} 

 Player 2 01:28:58 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":65} 

 Player 2 01:28:58 $GAME_HAS_STARTED:  

 Player 2 01:28:58 $SET_TURN:  
{"playerId":1} 

 Player 2 01:28:58 $START_TURN:  
{"playerId":1} 

 Player 2 01:28:58 $UPDATE_ACTIONS:  

 Player 1 01:28:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:28:58 $NEXT_STACK_ID:  

 Player 1 01:28:58 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:28:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 01:28:59 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":284,"turnPlayerCardId":284,"stackEffectType":13}} 

 Player 1 01:28:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 01:28:59 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":284,"turnPlayerCardId":284,"stackEffectType":13}} 

 Player 1 01:28:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 1 01:28:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:28:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 01:28:59 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":284,"turnPlayerCardId":284,"stackEffectType":13}} 

 Player 1 01:28:59 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 01:28:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 1 01:28:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 1 01:28:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:28:59 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 01:28:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 1 01:28:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:28:59 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:28:59 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:28:59 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:28:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 01:28:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 01:28:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 01:28:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 01:28:59 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 01:28:59 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 01:28:59 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 01:28:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 1 01:28:59 $DRAW_CARD:  
{"deckType":1} 

 Player 1 01:28:59 $MOVE_CARD:  
{"moveIndex":7,"cardId":94,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 01:28:59 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":94,"flipIfFlipped":false,"playerId":1} 

 Player 1 01:28:59 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":94} 

 Player 1 01:28:59 $FLIP_CARD:  
{"cardId":94} 

 Player 1 01:28:59 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":94} 

 Player 1 01:28:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 01:29:00 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":284,"turnPlayerCardId":284,"stackEffectType":13}} 

 Player 1 01:29:00 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 01:29:00 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:29:00 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":284,"turnPlayerCardId":284,"stackEffectType":13}} 

 Player 1 01:29:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 1 01:29:00 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:29:00 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":284,"turnPlayerCardId":284,"stackEffectType":13}} 

 Player 1 01:29:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 1 01:29:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 1 01:29:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:29:00 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:29:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 01:29:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 01:29:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 01:29:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 01:29:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 01:29:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 01:29:00 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 01:29:00 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 1 01:29:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 1 01:29:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:29:00 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 1 01:29:00 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 1 01:29:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 1 01:29:00 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:29:00 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 01:29:00 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 01:29:00 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 01:29:00 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 01:29:00 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 01:29:00 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 01:29:00 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 01:29:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:29:01 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:29:01 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 01:29:01 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 01:29:01 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 01:29:01 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 01:29:01 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 01:29:01 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 01:29:01 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 01:29:01 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 1 01:29:01 $END_TURN:  

 Player 1 01:29:01 $SET_TURN:  
{"playerId":2} 

 Player 1 01:29:01 $START_TURN:  
{"playerId":2} 

 Player 2 01:29:01 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 01:29:01 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:29:01 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 01:29:01 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 01:29:01 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 01:29:01 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 01:29:01 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 01:29:01 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 01:29:01 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 01:29:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:29:01 $NEXT_STACK_ID:  

 Player 2 01:29:01 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:29:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 01:29:01 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":298,"turnPlayerCardId":298,"stackEffectType":13}} 

 Player 2 01:29:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 01:29:01 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":298,"turnPlayerCardId":298,"stackEffectType":13}} 

 Player 2 01:29:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add StartTurnLoot 2 "}} 

 Player 2 01:29:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:29:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 01:29:01 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":298,"turnPlayerCardId":298,"stackEffectType":13}} 

 Player 2 01:29:01 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 01:29:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding StartTurnLoot 2"},"childOfId":10} 

 Player 2 01:29:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 2 01:29:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:29:02 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 2 01:29:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 2 01:29:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 01:29:02 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 01:29:02 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 01:29:02 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:29:02 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:29:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 01:29:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 01:29:02 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 01:29:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 01:29:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 01:29:02 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 01:29:02 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 2 01:29:02 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 2 01:29:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve StartTurnLoot 2 "}} 

 Player 2 01:29:02 $DRAW_CARD:  
{"deckType":1} 

 Player 2 01:29:02 $MOVE_CARD:  
{"moveIndex":8,"cardId":51,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 01:29:02 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":51,"flipIfFlipped":false,"playerId":2} 

 Player 2 01:29:02 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":51} 

 Player 2 01:29:02 $FLIP_CARD:  
{"cardId":51} 

 Player 2 01:29:02 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":51} 

 Player 2 01:29:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 01:29:03 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":298,"turnPlayerCardId":298,"stackEffectType":13}} 

 Player 2 01:29:03 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 01:29:03 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 01:29:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 01:29:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 01:29:03 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:29:03 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":298,"turnPlayerCardId":298,"stackEffectType":13}} 

 Player 2 01:29:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve StartTurnLoot 2  "}} 

 Player 2 01:29:03 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:29:03 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":298,"turnPlayerCardId":298,"stackEffectType":13}} 

 Player 2 01:29:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve StartTurnLoot 2"},"childOfId":15} 

 Player 2 01:29:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 2 01:29:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 01:29:03 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 01:29:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 01:29:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 01:29:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 01:29:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 01:29:03 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 01:29:03 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 01:29:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 2 01:29:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:29:03 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 2 01:29:03 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 2 01:29:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 2 01:29:03 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:29:03 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 01:29:03 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 01:29:03 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 01:29:03 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 01:29:03 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 01:29:03 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 01:29:03 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 01:29:03 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 01:29:03 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 01:29:03 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 01:29:03 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 01:29:04 $SHOW_DECISION:  
{"startCardId":65,"endCardId":65,"flipEndCard":true} 

 Player 2 01:29:05 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 01:29:05 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 01:29:07 $NEXT_STACK_ID:  

 Player 2 01:29:07 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:29:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(5) "} 

 Player 2 01:29:07 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":298,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":65,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 01:29:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(5) "} 

 Player 2 01:29:07 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":298,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":65,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 01:29:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add PlayLootCardStackEffect 3 "}} 

 Player 2 01:29:07 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":65} 

 Player 2 01:29:07 $MOVE_CARD:  
{"moveIndex":9,"cardId":65,"placeID":300,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 01:29:07 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:29:07 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:29:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(5) "} 

 Player 1 01:29:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(5) "} 

 Player 1 01:29:07 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":65,"flipIfFlipped":true,"playerId":2} 

 Player 2 01:29:08 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":65} 

 Player 2 01:29:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(5): addMoney"} 

 Player 2 01:29:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:29:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(5): addMoney"} 

 Player 2 01:29:08 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":298,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":65,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":65,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 01:29:08 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 01:29:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding PlayLootCardStackEffect 3"},"childOfId":20} 

 Player 2 01:29:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 2 01:29:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:29:08 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 2 01:29:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 2 01:29:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 01:29:08 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 01:29:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(5) "} 

 Player 1 01:29:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(5) "} 

 Player 1 01:29:08 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 01:29:08 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 2 01:29:08 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 2 01:29:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve PlayLootCardStackEffect 3 "}} 

 Player 2 01:29:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(5): addMoney"} 

 Player 2 01:29:08 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":65,"particleType":6} 

 Player 2 01:29:10 $DISABLE_PARTICLE_EFFECT:  
{"cardId":65,"particleType":6} 

 Player 2 01:29:10 $SET_MONEY:  
{"playerId":2,"numOfCoins":7} 

 Player 2 01:29:10 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 2 01:29:10 $REMOVE_FROM_PILE:  
{"cardId":65} 

 Player 2 01:29:10 $MOVE_CARD:  
{"moveIndex":10,"cardId":65,"placeID":301,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 01:29:10 $MOVE_CARD_END:  
{"moveIndex":10,"cardId":65,"flipIfFlipped":true,"playerId":2} 

 Player 2 01:29:10 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":65} 

 Player 2 01:29:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(5): addMoney"} 

 Player 2 01:29:10 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":298,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":65,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 01:29:10 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 01:29:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:29:11 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":298,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":65,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 01:29:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Remove After Resolve PlayLootCardStackEffect 3  "}} 

 Player 2 01:29:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:29:11 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":298,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":65,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 01:29:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Response Remove After Resolve PlayLootCardStackEffect 3"},"childOfId":25} 

 Player 2 01:29:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Wait For Response From Player 1 "},"childOfId":25} 

 Player 2 01:29:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 01:29:11 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 01:29:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(5) "} 

 Player 1 01:29:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(5) "} 

 Player 1 01:29:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(5) "} 

 Player 1 01:29:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(5) "} 

 Player 1 01:29:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(5) "} 

 Player 1 01:29:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(5) "} 

 Player 1 01:29:11 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 01:29:11 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 2 01:29:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":25} 

 Player 2 01:29:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:29:11 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 2 01:29:11 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 2 01:29:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Stack Was Emptied "}} 

 Player 2 01:29:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:29:11 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 01:29:11 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 01:29:11 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 01:29:11 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 01:29:11 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 01:29:11 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 01:29:11 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 01:29:11 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 01:29:11 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 01:29:11 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 01:29:11 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 01:29:11 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 01:29:11 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 01:29:11 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 01:29:11 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 01:29:12 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 01:29:13 $SHOW_DECISION:  
{"startCardId":298,"endCardId":299} 

 Player 2 01:29:13 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 01:29:16 $NEXT_STACK_ID:  

 Player 2 01:29:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:29:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated HolyMantle"} 

 Player 2 01:29:16 $ADD_TO_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":298,"hasLockingStackEffect":false,"itemToPlayCardId":299,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 01:29:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated HolyMantle"} 

 Player 2 01:29:16 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":298,"hasLockingStackEffect":false,"itemToPlayCardId":299,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 01:29:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Add ActivateItem 4 "}} 

 Player 1 01:29:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:29:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:29:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated HolyMantle"} 

 Player 1 01:29:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated HolyMantle"} 

 Player 2 01:29:18 $SHOW_DECISION:  
{"startCardId":299,"endCardId":298} 

 Player 2 01:29:21 $USE_ITEM:  
{"cardId":299} 

 Player 2 01:29:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:29:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated HolyMantle"} 

 Player 2 01:29:21 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":298,"hasLockingStackEffect":false,"itemToPlayCardId":299,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 01:29:21 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 01:29:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Response Adding ActivateItem 4"},"childOfId":30} 

 Player 2 01:29:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Wait For Response From Player 2 "},"childOfId":30} 

 Player 2 01:29:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:29:21 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 2 01:29:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":30} 

 Player 2 01:29:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 01:29:21 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 01:29:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated HolyMantle"} 

 Player 1 01:29:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated HolyMantle"} 

 Player 1 01:29:21 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 01:29:21 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 2 01:29:21 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 2 01:29:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Resolve ActivateItem 4 "}} 

 Player 2 01:29:21 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":299,"particleType":6} 

 Player 2 01:29:23 $DISABLE_PARTICLE_EFFECT:  
{"cardId":299,"particleType":6} 

 Player 2 01:29:23 $REGISTER_ONE_TURN_PASSIVE_EFFECT:  
{"cardId":299,"effectIndex":{"type":3,"index":0},"conditionData":[{"effectTargets":[298],"chainEffectsData":[],"methodArgs":[],"isPassive":false,"effectCard":299,"effectCardOwner":298,"effectCardPlayer":298}]} 

 Player 2 01:29:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated HolyMantle"} 

 Player 2 01:29:23 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":298,"hasLockingStackEffect":false,"itemToPlayCardId":299,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 01:29:23 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 01:29:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:29:23 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":298,"hasLockingStackEffect":false,"itemToPlayCardId":299,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 01:29:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Remove After Resolve ActivateItem 4  "}} 

 Player 2 01:29:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:29:23 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":298,"hasLockingStackEffect":false,"itemToPlayCardId":299,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 01:29:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Response Remove After Resolve ActivateItem 4"},"childOfId":35} 

 Player 2 01:29:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Wait For Response From Player 1 "},"childOfId":35} 

 Player 2 01:29:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 01:29:23 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 01:29:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated HolyMantle"} 

 Player 1 01:29:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated HolyMantle"} 

 Player 1 01:29:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated HolyMantle"} 

 Player 1 01:29:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated HolyMantle"} 

 Player 1 01:29:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated HolyMantle"} 

 Player 1 01:29:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated HolyMantle"} 

 Player 1 01:29:23 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 01:29:23 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 2 01:29:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 2 "},"childOfId":35} 

 Player 2 01:29:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:29:23 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 2 01:29:23 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 2 01:29:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Stack Was Emptied "}} 

 Player 2 01:29:24 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:29:24 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 01:29:24 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 01:29:24 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 01:29:24 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 01:29:24 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 01:29:24 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 01:29:24 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 01:29:24 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 01:29:24 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 01:29:24 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 01:29:24 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 01:29:24 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 01:29:24 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 01:29:24 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 01:29:24 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 01:29:24 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 01:29:24 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 01:29:24 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 01:29:24 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 01:29:25 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 01:29:26 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 01:29:29 $SHOW_DECISION:  
{"startCardId":298,"endCardId":236} 

 Player 2 01:29:32 $NEXT_STACK_ID:  

 Player 2 01:29:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:29:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Cod Worm"} 

 Player 2 01:29:32 $ADD_TO_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":298,"attackingPlayerCardId":298,"idOfCardBeingAttacked":236,"stackEffectType":4}} 

 Player 2 01:29:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Cod Worm"} 

 Player 2 01:29:32 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":298,"attackingPlayerCardId":298,"idOfCardBeingAttacked":236,"stackEffectType":4}} 

 Player 2 01:29:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Add DeclareAttack 5 "}} 

 Player 2 01:29:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:29:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Cod Worm"} 

 Player 2 01:29:32 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":298,"attackingPlayerCardId":298,"idOfCardBeingAttacked":236,"stackEffectType":4}} 

 Player 2 01:29:32 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 01:29:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Response Adding DeclareAttack 5"},"childOfId":40} 

 Player 2 01:29:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Wait For Response From Player 2 "},"childOfId":40} 

 Player 2 01:29:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:29:32 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 2 01:29:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 1 "},"childOfId":40} 

 Player 2 01:29:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 01:29:32 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 01:29:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:29:33 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:29:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Cod Worm"} 

 Player 1 01:29:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Cod Worm"} 

 Player 1 01:29:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Cod Worm"} 

 Player 1 01:29:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Cod Worm"} 

 Player 1 01:29:33 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 01:29:33 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 2 01:29:33 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 2 01:29:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Resolve DeclareAttack 5 "}} 

 Player 2 01:29:33 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":236,"particleType":5} 

 Player 2 01:29:33 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":5,"originStackId":5},"isAfterActivation":true,"index":5} 

 Player 2 01:29:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Cod Worm"} 

 Player 2 01:29:33 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":298,"attackingPlayerCardId":298,"idOfCardBeingAttacked":236,"stackEffectType":4}} 

 Player 2 01:29:33 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 01:29:33 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:29:33 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":298,"attackingPlayerCardId":298,"idOfCardBeingAttacked":236,"stackEffectType":4}} 

 Player 2 01:29:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Remove After Resolve DeclareAttack 5  "}} 

 Player 2 01:29:33 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:29:33 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":298,"attackingPlayerCardId":298,"idOfCardBeingAttacked":236,"stackEffectType":4}} 

 Player 2 01:29:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Response Remove After Resolve DeclareAttack 5"},"childOfId":45} 

 Player 2 01:29:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Wait For Response From Player 1 "},"childOfId":45} 

 Player 2 01:29:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 01:29:33 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 01:29:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Cod Worm"} 

 Player 1 01:29:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Cod Worm"} 

 Player 1 01:29:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Cod Worm"} 

 Player 1 01:29:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Cod Worm"} 

 Player 1 01:29:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Cod Worm"} 

 Player 1 01:29:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Cod Worm"} 

 Player 1 01:29:33 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 01:29:33 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 2 01:29:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Wait For Response From Player 2 "},"childOfId":45} 

 Player 2 01:29:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:29:33 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 2 01:29:33 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 2 01:29:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Stack Was Emptied "}} 

 Player 2 01:29:33 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:29:33 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 01:29:33 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 01:29:33 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 01:29:33 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 01:29:33 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 01:29:33 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 01:29:34 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 01:29:34 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 01:29:34 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 01:29:34 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 01:29:34 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 01:29:34 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 01:29:34 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 01:29:34 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 01:29:34 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 01:29:34 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 01:29:34 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 01:29:34 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 01:29:34 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 01:29:34 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 01:29:34 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 01:29:34 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 2 01:29:34 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 2 01:29:34 $NEXT_STACK_ID:  

 Player 2 01:29:34 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:29:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Cod Worm<Monster>"} 

 Player 2 01:29:34 $ADD_TO_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":298,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":236}} 

 Player 2 01:29:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Cod Worm<Monster>"} 

 Player 2 01:29:34 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":298,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":236}} 

 Player 2 01:29:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Add AttackRoll 6 "}} 

 Player 2 01:29:34 $ROLL_DICE:  
{"playerId":2} 

 Player 1 01:29:34 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:29:34 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:29:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Cod Worm<Monster>"} 

 Player 1 01:29:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Cod Worm<Monster>"} 

 Player 2 01:29:35 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 2 01:29:36 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 2 01:29:36 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":1} 

 Player 2 01:29:36 $UPDATE_STACK_VIS:  
{"stackId":6,"text":"player rolled 1 vs Cod Worm<Monster>"} 

 Player 2 01:29:36 $SHOW_DICE_ROLL:  
{"stackId":6} 

 Player 2 01:29:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Cod Worm<Monster>"} 

 Player 2 01:29:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:29:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Cod Worm<Monster>"} 

 Player 2 01:29:39 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":298,"numberRolled":1,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":236}} 

 Player 2 01:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 2 01:29:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Response Adding AttackRoll 6"},"childOfId":50} 

 Player 2 01:29:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Wait For Response From Player 2 "},"childOfId":50} 

 Player 2 01:29:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 2 01:29:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Wait For Response From Player 1 "},"childOfId":50} 

 Player 2 01:29:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 01:29:39 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 01:29:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Cod Worm<Monster>"} 

 Player 1 01:29:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Cod Worm<Monster>"} 

 Player 1 01:29:39 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 01:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 2 01:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 2 01:29:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Resolve AttackRoll 6 "}} 

 Player 2 01:29:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Added 0 to original roll"}} 

 Player 2 01:29:39 $NEXT_STACK_ID:  

 Player 2 01:29:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Cod Worm<Monster>"} 

 Player 2 01:29:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:29:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to The Lost \n2:Player 2 rolled 1 vs Cod Worm<Monster>"} 

 Player 2 01:29:39 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":298,"entityToDoDamageCardId":236,"entityToTakeDamageCardId":298,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 01:29:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to The Lost \n2:Player 2 rolled 1 vs Cod Worm<Monster>"} 

 Player 2 01:29:39 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":298,"numberRolled":1,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":236}} 

 Player 2 01:29:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to The Lost \n2:Player 2 rolled 1 vs Cod Worm<Monster>"} 

 Player 2 01:29:39 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":298,"entityToDoDamageCardId":236,"entityToTakeDamageCardId":298,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 01:29:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to The Lost \n2:Player 2 rolled 1 vs Cod Worm<Monster>"} 

 Player 2 01:29:39 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":298,"numberRolled":1,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":236}} 

 Player 2 01:29:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to The Lost \n2:Player 2 rolled 1 vs Cod Worm<Monster>"} 

 Player 2 01:29:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to The Lost \n2:Player 2 rolled 1 vs Cod Worm<Monster>"} 

 Player 2 01:29:40 $REPLACE_STACK:  
{"currentStack":[{"entityId":7,"creatorCardId":298,"entityToDoDamageCardId":236,"entityToTakeDamageCardId":298,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":6,"creatorCardId":298,"numberRolled":1,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":236}]} 

 Player 2 01:29:40 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":2,"number":5}],"result":null,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":6,"originStackId":6},"isAfterActivation":true,"index":6} 

 Player 2 01:29:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to The Lost \n2:Player 2 rolled 1 vs Cod Worm<Monster>"} 

 Player 2 01:29:40 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":298,"numberRolled":1,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":236}} 

 Player 2 01:29:40 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 2 01:29:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to The Lost"} 

 Player 2 01:29:40 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":298,"numberRolled":1,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":236}} 

 Player 2 01:29:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":56,"_text":"Remove After Resolve AttackRoll 6  "}} 

 Player 2 01:29:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to The Lost"} 

 Player 2 01:29:40 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":298,"numberRolled":1,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":236}} 

 Player 2 01:29:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":57,"_text":"Response Remove After Resolve AttackRoll 6"},"childOfId":56} 

 Player 2 01:29:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":58,"_text":"Wait For Response From Player 2 "},"childOfId":56} 

 Player 2 01:29:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:29:40 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 2 01:29:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":59,"_text":"Wait For Response From Player 1 "},"childOfId":56} 

 Player 2 01:29:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 01:29:40 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 01:29:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Cod Worm<Monster>"} 

 Player 1 01:29:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Cod Worm<Monster>"} 

 Player 1 01:29:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to The Lost"} 

 Player 1 01:29:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to The Lost"} 

 Player 1 01:29:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to The Lost"} 

 Player 1 01:29:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to The Lost"} 

 Player 1 01:29:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to The Lost"} 

 Player 1 01:29:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to The Lost"} 

 Player 1 01:29:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to The Lost"} 

 Player 1 01:29:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to The Lost"} 

 Player 1 01:29:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to The Lost"} 

 Player 1 01:29:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to The Lost"} 

 Player 1 01:29:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to The Lost \n2:Player 2 is rolling against Cod Worm<Monster>"} 

 Player 1 01:29:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to The Lost \n2:Player 2 is rolling against Cod Worm<Monster>"} 

 Player 1 01:29:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to The Lost \n2:Player 2 is rolling against Cod Worm<Monster>"} 

 Player 1 01:29:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to The Lost \n2:Player 2 is rolling against Cod Worm<Monster>"} 

 Player 1 01:29:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to The Lost \n2:Player 2 is rolling against Cod Worm<Monster>"} 

 Player 1 01:29:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to The Lost \n2:Player 2 is rolling against Cod Worm<Monster>"} 

 Player 1 01:29:40 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 01:29:40 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 2 01:29:40 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 2 01:29:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":60,"_text":"Resolve CombatDamage 7 "}} 

 Player 2 01:29:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm 0 combat damage to The Lost"} 

 Player 2 01:29:41 $UPDATE_STACK_VIS:  
{"stackId":7,"text":"Cod Worm will deal 0 combat damage to The Lost"} 

 Player 2 01:29:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm 0 combat damage to The Lost"} 

 Player 2 01:29:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm 0 combat damage to The Lost"} 

 Player 2 01:29:41 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":298,"entityToDoDamageCardId":236,"entityToTakeDamageCardId":298,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 01:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":60} 

 Player 2 01:29:41 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:29:41 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":298,"entityToDoDamageCardId":236,"entityToTakeDamageCardId":298,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 01:29:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":61,"_text":"Remove After Resolve CombatDamage 7  "}} 

 Player 2 01:29:41 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:29:41 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":298,"entityToDoDamageCardId":236,"entityToTakeDamageCardId":298,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 01:29:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":62,"_text":"Response Remove After Resolve CombatDamage 7"},"childOfId":61} 

 Player 2 01:29:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":63,"_text":"Wait For Response From Player 1 "},"childOfId":61} 

 Player 2 01:29:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 01:29:41 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 01:29:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to The Lost"} 

 Player 1 01:29:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to The Lost"} 

 Player 1 01:29:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to The Lost"} 

 Player 1 01:29:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to The Lost"} 

 Player 1 01:29:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to The Lost"} 

 Player 1 01:29:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to The Lost"} 

 Player 1 01:29:41 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 01:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 2 01:29:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":64,"_text":"Wait For Response From Player 2 "},"childOfId":61} 

 Player 2 01:29:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 2 01:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 2 01:29:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":65,"_text":"Stack Was Emptied "}} 

 Player 2 01:29:41 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 01:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 01:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 01:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 01:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 01:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 01:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 01:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 01:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 01:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 01:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 01:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 01:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 01:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 01:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 01:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 01:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 01:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 01:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 01:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 01:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 01:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 2 01:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 2 01:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 2 01:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 2 01:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 2 01:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 2 01:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":60} 

 Player 2 01:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":61} 

 Player 2 01:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":65} 

 Player 2 01:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 2 01:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 2 01:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":65} 

 Player 2 01:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":61} 

 Player 2 01:32:28 $MATCH: 