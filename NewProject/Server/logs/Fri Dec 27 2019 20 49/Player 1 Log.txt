Start Log 
 Player 1 20:49:19 $START_GAME:  
 Player 1 20:49:19 $MOVE_TO_TABLE:  
 Player 1 20:49:23 $FINISH_LOAD:  
 {"id":1,"turnPlayerId":2} 
 Player 1 20:49:25 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":271}],"result":true,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 1 20:49:26 $MOVE_CARD_END:  
 {"moveIndex":1,"cardId":12,"flipIfFlipped":false,"playerId":2} 
 Player 1 20:49:26 $MOVE_CARD_END:  
 {"moveIndex":2,"cardId":27,"flipIfFlipped":false,"playerId":2} 
 Player 1 20:49:27 $MOVE_CARD_END:  
 {"moveIndex":3,"cardId":13,"flipIfFlipped":false,"playerId":2} 
 Player 1 20:49:27 $MOVE_CARD_END:  
 {"moveIndex":4,"cardId":57,"flipIfFlipped":false,"playerId":2} 
 Player 1 20:49:28 $MOVE_CARD_END:  
 {"moveIndex":5,"cardId":52,"flipIfFlipped":false,"playerId":2} 
 Player 1 20:49:28 $MOVE_CARD_END:  
 {"moveIndex":6,"cardId":9,"flipIfFlipped":false,"playerId":2} 
 Player 1 20:49:29 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 20:49:29 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 20:49:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 20:49:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 20:49:29 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 20:49:30 $MOVE_CARD_END:  
 {"moveIndex":7,"cardId":24,"flipIfFlipped":false,"playerId":2} 
 Player 1 20:49:30 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 20:49:30 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 20:49:30 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 20:49:30 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 20:49:30 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 20:49:51 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 20:49:51 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 20:49:52 $MOVE_CARD_END:  
 {"moveIndex":8,"cardId":57,"flipIfFlipped":true,"playerId":2} 
 Player 1 20:49:52 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 3 Cents(19) "} 
 Player 1 20:49:52 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 3 Cents(19) "} 
 Player 1 20:49:52 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 20:49:55 $MOVE_CARD_END:  
 {"moveIndex":9,"cardId":57,"flipIfFlipped":true,"playerId":2} 
 Player 1 20:49:55 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 3 Cents(19) "} 
 Player 1 20:49:55 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 3 Cents(19) "} 
 Player 1 20:49:55 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 3 Cents(19) "} 
 Player 1 20:49:55 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 3 Cents(19) "} 
 Player 1 20:49:55 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 20:49:58 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 20:49:58 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 20:49:58 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on Widow"} 
 Player 1 20:49:58 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on Widow"} 
 Player 1 20:49:58 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 20:49:58 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on Widow"} 
 Player 1 20:49:58 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on Widow"} 
 Player 1 20:49:58 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on Widow"} 
 Player 1 20:49:58 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on Widow"} 
 Player 1 20:49:59 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 20:50:03 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 20:50:03 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 20:50:05 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Blood Lust"} 
 Player 1 20:50:05 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Blood Lust"} 
 Player 1 20:50:05 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 20:50:07 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Blood Lust"} 
 Player 1 20:50:08 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Blood Lust"} 
 Player 1 20:50:08 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Blood Lust"} 
 Player 1 20:50:08 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Blood Lust"} 
 Player 1 20:50:08 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 20:50:10 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 20:50:10 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 20:50:12 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Widow<Monster>"} 
 Player 1 20:50:12 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Widow<Monster>"} 
 Player 1 20:50:12 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 20:50:12 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Widow<Monster>"} 
 Player 1 20:50:12 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Widow<Monster>"} 
 Player 1 20:50:12 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Widow combat damage to Samson"} 
 Player 1 20:50:12 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Widow combat damage to Samson"} 
 Player 1 20:50:12 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Widow combat damage to Samson"} 
 Player 1 20:50:12 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Widow combat damage to Samson"} 
 Player 1 20:50:13 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Widow combat damage to Samson \n2:Player 2 is rolling against Widow<Monster>"} 
 Player 1 20:50:13 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Widow combat damage to Samson \n2:Player 2 is rolling against Widow<Monster>"} 
 Player 1 20:50:13 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Widow combat damage to Samson \n2:Player 2 is rolling against Widow<Monster>"} 
 Player 1 20:50:13 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Widow combat damage to Samson \n2:Player 2 is rolling against Widow<Monster>"} 
 Player 1 20:50:13 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 20:50:13 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Widow combat damage to Samson"} 
 Player 1 20:50:13 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Widow combat damage to Samson"} 
 Player 1 20:50:13 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Widow combat damage to Samson"} 
 Player 1 20:50:13 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Widow combat damage to Samson"} 
 Player 1 20:50:13 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 20:50:16 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 20:50:16 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 20:50:18 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Widow<Monster>"} 
 Player 1 20:50:18 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Widow<Monster>"} 
 Player 1 20:50:19 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 20:50:20 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Widow<Monster>"} 
 Player 1 20:50:20 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Widow<Monster>"} 
 Player 1 20:50:20 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to Widow"} 
 Player 1 20:50:20 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to Widow"} 
 Player 1 20:50:20 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to Widow"} 
 Player 1 20:50:20 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to Widow"} 
 Player 1 20:50:20 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to Widow \n2:Player 2 is rolling against Widow<Monster>"} 
 Player 1 20:50:20 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to Widow \n2:Player 2 is rolling against Widow<Monster>"} 
 Player 1 20:50:20 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to Widow \n2:Player 2 is rolling against Widow<Monster>"} 
 Player 1 20:50:20 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to Widow \n2:Player 2 is rolling against Widow<Monster>"} 
 Player 1 20:50:21 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 20:50:21 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to Widow"} 
 Player 1 20:50:21 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to Widow"} 
 Player 1 20:50:21 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to Widow"} 
 Player 1 20:50:21 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to Widow"} 
 Player 1 20:50:22 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 20:50:23 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 20:50:23 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 20:50:25 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Widow<Monster>"} 
 Player 1 20:50:25 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Widow<Monster>"} 
 Player 1 20:50:27 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 20:50:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Widow<Monster>"} 
 Player 1 20:50:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Widow<Monster>"} 
 Player 1 20:50:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to Widow"} 
 Player 1 20:50:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to Widow"} 
 Player 1 20:50:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to Widow"} 
 Player 1 20:50:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to Widow"} 
 Player 1 20:50:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to Widow \n2:Player 2 is rolling against Widow<Monster>"} 
 Player 1 20:50:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to Widow \n2:Player 2 is rolling against Widow<Monster>"} 
 Player 1 20:50:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to Widow \n2:Player 2 is rolling against Widow<Monster>"} 
 Player 1 20:50:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to Widow \n2:Player 2 is rolling against Widow<Monster>"} 
 Player 1 20:50:28 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 20:50:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to Widow"} 
 Player 1 20:50:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to Widow"} 
 Player 1 20:50:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by undefined"} 
 Player 1 20:50:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by undefined"} 
 Player 1 20:50:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by undefined"} 
 Player 1 20:50:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by undefined"} 
 Player 1 20:50:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to Widow \n2:[object Object] killed by undefined"} 
 Player 1 20:50:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to Widow \n2:[object Object] killed by undefined"} 
 Player 1 20:50:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to Widow \n2:[object Object] killed by undefined"} 
 Player 1 20:50:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to Widow \n2:[object Object] killed by undefined"} 
 Player 1 20:50:29 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 20:50:30 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by undefined"} 
 Player 1 20:50:30 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by undefined"} 
 Player 1 20:50:30 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Widow<Monster> reward"} 
 Player 1 20:50:30 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Widow<Monster> reward"} 
 Player 1 20:50:30 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Widow<Monster> reward"} 
 Player 1 20:50:30 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Widow<Monster> reward"} 
 Player 1 20:50:30 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Widow<Monster> reward \n2:[object Object] killed by undefined"} 
 Player 1 20:50:30 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Widow<Monster> reward \n2:[object Object] killed by undefined"} 
 Player 1 20:50:30 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Widow<Monster> reward \n2:[object Object] killed by undefined"} 
 Player 1 20:50:30 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Widow<Monster> reward \n2:[object Object] killed by undefined"} 
 Player 1 20:50:31 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 20:50:31 $MOVE_CARD_END:  
 {"moveIndex":10,"cardId":61,"flipIfFlipped":false,"playerId":2} 
 Player 1 20:50:32 $MOVE_CARD_END:  
 {"moveIndex":11,"cardId":10,"flipIfFlipped":false,"playerId":2} 
 Player 1 20:50:33 $MOVE_CARD_END:  
 {"moveIndex":12,"cardId":258,"flipIfFlipped":true,"playerId":2} 
 Player 1 20:50:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Widow<Monster> reward"} 
 Player 1 20:50:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Widow<Monster> reward"} 
 Player 1 20:50:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Widow<Monster> reward \n2:Refill holder2 slot"} 
 Player 1 20:50:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Widow<Monster> reward \n2:Refill holder2 slot"} 
 Player 1 20:50:34 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 20:50:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Widow<Monster> reward \n2:Refill holder2 slot"} 
 Player 1 20:50:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Widow<Monster> reward \n2:Refill holder2 slot"} 
 Player 1 20:50:35 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 20:51:43 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Widow<Monster> reward"} 
 Player 1 20:51:43 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Widow<Monster> reward"} 
 Player 1 20:51:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Widow<Monster> reward \n2:Player 2 activated Samson"} 
 Player 1 20:51:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Widow<Monster> reward \n2:Player 2 activated Samson"} 
 Player 1 20:51:45 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 20:51:48 $MOVE_CARD_END:  
 {"moveIndex":13,"cardId":61,"flipIfFlipped":true,"playerId":2} 
 Player 1 20:51:49 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Widow<Monster> reward \n2:Player 2 activated Samson"} 
 Player 1 20:51:49 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Widow<Monster> reward \n2:Player 2 activated Samson"} 
 Player 1 20:51:49 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Widow<Monster> reward \n2:Player 2 play 4 Cents(1) "} 
 Player 1 20:51:49 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Widow<Monster> reward \n2:Player 2 play 4 Cents(1) "} 
 Player 1 20:51:49 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Widow<Monster> reward \n2:Player 2 play 4 Cents(1) "} 
 Player 1 20:51:49 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Widow<Monster> reward \n2:Player 2 play 4 Cents(1) "} 
 Player 1 20:51:49 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 4 Cents(1)  \n2:Player 2 activated Samson"} 
 Player 1 20:51:49 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 4 Cents(1)  \n2:Player 2 activated Samson"} 
 Player 1 20:51:49 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 4 Cents(1)  \n2:Player 2 activated Samson"} 
 Player 1 20:51:49 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 4 Cents(1)  \n2:Player 2 activated Samson"} 
 Player 1 20:51:49 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 20:51:52 $MOVE_CARD_END:  
 {"moveIndex":14,"cardId":61,"flipIfFlipped":true,"playerId":2} 
 Player 1 20:51:53 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 4 Cents(1) "} 
 Player 1 20:51:53 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 4 Cents(1) "} 
 Player 1 20:51:53 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 4 Cents(1) "} 
 Player 1 20:51:53 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 4 Cents(1) "} 
 Player 1 20:51:53 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 20:51:59 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 20:51:59 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 20:51:59 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to buy Book Of Sin for 10"} 
 Player 1 20:51:59 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to buy Book Of Sin for 10"} 
 Player 1 20:51:59 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 20:52:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to buy Book Of Sin for 10"} 
 Player 1 20:52:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to buy Book Of Sin for 10"} 
 Player 1 20:52:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Refill Store slot"} 
 Player 1 20:52:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Refill Store slot"} 
 Player 1 20:52:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Refill Store slot"} 
 Player 1 20:52:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Refill Store slot"} 
 Player 1 20:52:00 $MOVE_CARD_END:  
 {"moveIndex":15,"cardId":147,"flipIfFlipped":true,"playerId":2} 
 Player 1 20:52:01 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to buy Book Of Sin for 10 \n2:Refill Store slot"} 
 Player 1 20:52:01 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to buy Book Of Sin for 10 \n2:Refill Store slot"} 
 Player 1 20:52:01 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 20:52:02 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Refill Store slot"} 
 Player 1 20:52:02 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Refill Store slot"} 
 Player 1 20:52:02 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 20:52:06 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 20:52:06 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 20:52:06 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin"} 
 Player 1 20:52:07 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin"} 
 Player 1 20:52:07 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 20:52:07 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin"} 
 Player 1 20:52:07 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin"} 
 Player 1 20:52:07 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin"} 
 Player 1 20:52:07 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin"} 
 Player 1 20:52:09 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin \n2:Player 2 roll a dice"} 
 Player 1 20:52:09 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin \n2:Player 2 roll a dice"} 
 Player 1 20:52:09 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin \n2:Player 2 roll a dice"} 
 Player 1 20:52:09 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin \n2:Player 2 roll a dice"} 
 Player 1 20:52:09 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 20:52:10 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin \n2:Player 2 roll a dice"} 
 Player 1 20:52:10 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin \n2:Player 2 roll a dice"} 
 Player 1 20:52:10 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin \n2:Player 2 roll a dice"} 
 Player 1 20:52:10 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin \n2:Player 2 roll a dice"} 
 Player 1 20:52:10 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin \n2:Player 2 roll a dice"} 
 Player 1 20:52:10 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin \n2:Player 2 roll a dice"} 
 Player 1 20:52:10 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin \n2:Player 2 roll a dice"} 
 Player 1 20:52:10 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin \n2:Player 2 roll a dice"} 
 Player 1 20:52:10 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 20:52:12 $MOVE_CARD_END:  
 {"moveIndex":16,"cardId":32,"flipIfFlipped":false,"playerId":2} 
 Player 1 20:52:13 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin"} 
 Player 1 20:52:13 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin"} 
 Player 1 20:52:13 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin"} 
 Player 1 20:52:13 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin"} 
 Player 1 20:52:14 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 20:52:33 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 20:52:33 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 20:52:33 $NEXT_STACK_ID:  
 Player 1 20:52:33 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 20:52:33 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 20:52:33 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":21,"creatorCardId":270,"turnPlayerCardId":270,"stackEffectType":13}} 
 Player 1 20:52:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":0,"_text":"Add StartTurnLoot 21 "}} 
 Player 1 20:52:34 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 20:52:34 $ACTION_MASSAGE_REMOVE:  
 {"id":0} 
 Player 1 20:52:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 20:52:34 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":21,"creatorCardId":270,"turnPlayerCardId":270,"stackEffectType":13}} 
 Player 1 20:52:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 21"},"childOfId":0} 
 Player 1 20:52:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 1 20:52:34 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 20:52:34 $ACTION_MASSAGE_REMOVE:  
 {"id":2} 
 Player 1 20:52:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 1 20:52:34 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 20:52:34 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 20:52:34 $ACTION_MASSAGE_REMOVE:  
 {"id":3} 
 Player 1 20:52:34 $ACTION_MASSAGE_REMOVE:  
 {"id":1} 
 Player 1 20:52:35 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":4,"_text":"Resolve StartTurnLoot 21 "}} 
 Player 1 20:52:35 $DRAW_CARD:  
 {"deckType":1} 
 Player 1 20:52:35 $MOVE_CARD:  
 {"moveIndex":17,"cardId":124,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 1 20:52:35 $CARD_DRAWN:  
 {"playerId":1,"deckType":1,"drawnCardId":124} 
 Player 1 20:52:35 $FLIP_CARD:  
 {"cardId":124} 
 Player 1 20:52:35 $PLAYER_GET_LOOT:  
 {"playerId":1,"cardId":124} 
 Player 1 20:52:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 20:52:35 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":21,"creatorCardId":270,"turnPlayerCardId":270,"stackEffectType":13}} 
 Player 1 20:52:35 $ACTION_MASSAGE_REMOVE:  
 {"id":4} 
 Player 1 20:52:35 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 21  "}} 
 Player 1 20:52:35 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 20:52:35 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":21,"creatorCardId":270,"turnPlayerCardId":270,"stackEffectType":13}} 
 Player 1 20:52:35 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 21"},"childOfId":5} 
 Player 1 20:52:35 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Player 1 20:52:36 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 20:52:36 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 20:52:36 $ACTION_MASSAGE_REMOVE:  
 {"id":7} 
 Player 1 20:52:36 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Player 1 20:52:36 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 20:52:36 $ACTION_MASSAGE_REMOVE:  
 {"id":8} 
 Player 1 20:52:36 $ACTION_MASSAGE_REMOVE:  
 {"id":6} 
 Player 1 20:52:36 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":9,"_text":"Stack Was Emptied "}} 
 Player 1 20:52:36 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 20:52:36 $ACTION_MASSAGE_REMOVE:  
 {"id":5} 
 Player 1 20:52:37 $ACTION_MASSAGE_REMOVE:  
 {"id":9} 
 Player 1 20:52:38 $ACTION_MASSAGE_REMOVE:  
 {"id":5} 
 Player 1 20:54:19 $NEXT_STACK_ID:  
 Player 1 20:54:20 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 20:54:20 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play A Sack "} 
 Player 1 20:54:20 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":22,"creatorCardId":270,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":124,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 1 20:54:20 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":10,"_text":"Add PlayLootCardStackEffect 22 "}} 
 Player 1 20:54:20 $PLAYER_LOSE_LOOT:  
 {"playerId":1,"cardId":124} 
 Player 1 20:54:20 $MOVE_CARD:  
 {"moveIndex":18,"cardId":124,"placeID":278,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 20:54:20 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play A Sack: GainLoot"} 
 Player 1 20:54:20 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play A Sack: GainLoot"} 
 Player 1 20:54:20 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 20:54:21 $ACTION_MASSAGE_REMOVE:  
 {"id":10} 
 Player 1 20:54:21 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play A Sack: GainLoot"} 
 Player 1 20:54:21 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":22,"creatorCardId":270,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":124,"lootPlayerId":1,"effectToDo":{"effectName":"GainLoot","cardEffectNum":0,"cardPlayerId":1,"cardId":124,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 20:54:21 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":11,"_text":"Response Adding PlayLootCardStackEffect 22"},"childOfId":10} 
 Player 1 20:54:21 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 
 Player 1 20:54:21 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 20:54:21 $ACTION_MASSAGE_REMOVE:  
 {"id":12} 
 Player 1 20:54:21 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 
 Player 1 20:54:21 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 20:54:21 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 20:54:21 $ACTION_MASSAGE_REMOVE:  
 {"id":13} 
 Player 1 20:54:21 $ACTION_MASSAGE_REMOVE:  
 {"id":11} 
 Player 1 20:54:21 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":14,"_text":"Resolve PlayLootCardStackEffect 22 "}} 
 Player 1 20:54:21 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play A Sack: GainLoot"} 
 Player 1 20:54:21 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":124,"particleType":6} 
 Player 1 20:54:23 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":124,"particleType":6} 
 Player 1 20:54:23 $DRAW_CARD:  
 {"deckType":1} 
 Player 1 20:54:23 $MOVE_CARD:  
 {"moveIndex":19,"cardId":101,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 1 20:54:24 $CARD_DRAWN:  
 {"playerId":1,"deckType":1,"drawnCardId":101} 
 Player 1 20:54:24 $FLIP_CARD:  
 {"cardId":101} 
 Player 1 20:54:24 $PLAYER_GET_LOOT:  
 {"playerId":1,"cardId":101} 
 Player 1 20:54:24 $DRAW_CARD:  
 {"deckType":1} 
 Player 1 20:54:24 $MOVE_CARD:  
 {"moveIndex":20,"cardId":58,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 1 20:54:25 $CARD_DRAWN:  
 {"playerId":1,"deckType":1,"drawnCardId":58} 
 Player 1 20:54:25 $FLIP_CARD:  
 {"cardId":58} 
 Player 1 20:54:25 $PLAYER_GET_LOOT:  
 {"playerId":1,"cardId":58} 
 Player 1 20:54:25 $DRAW_CARD:  
 {"deckType":1} 
 Player 1 20:54:25 $MOVE_CARD:  
 {"moveIndex":21,"cardId":91,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 1 20:54:25 $CARD_DRAWN:  
 {"playerId":1,"deckType":1,"drawnCardId":91} 
 Player 1 20:54:25 $FLIP_CARD:  
 {"cardId":91} 
 Player 1 20:54:25 $PLAYER_GET_LOOT:  
 {"playerId":1,"cardId":91} 
 Player 1 20:54:25 $MOVE_CARD:  
 {"moveIndex":22,"cardId":124,"placeID":279,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 20:54:26 $MOVE_CARD_TO_PILE:  
 {"type":1,"cardId":124} 
 Player 1 20:54:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play A Sack: GainLoot"} 
 Player 1 20:54:26 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":22,"creatorCardId":270,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":124,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 20:54:26 $ACTION_MASSAGE_REMOVE:  
 {"id":14} 
 Player 1 20:54:26 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":15,"_text":"Remove After Resolve PlayLootCardStackEffect 22  "}} 
 Player 1 20:54:26 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 20:54:26 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":22,"creatorCardId":270,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":124,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 20:54:26 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":16,"_text":"Response Remove After Resolve PlayLootCardStackEffect 22"},"childOfId":15} 
 Player 1 20:54:26 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 
 Player 1 20:54:26 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 20:54:26 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 20:54:26 $ACTION_MASSAGE_REMOVE:  
 {"id":17} 
 Player 1 20:54:26 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 
 Player 1 20:54:27 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 20:54:27 $ACTION_MASSAGE_REMOVE:  
 {"id":18} 
 Player 1 20:54:27 $ACTION_MASSAGE_REMOVE:  
 {"id":16} 
 Player 1 20:54:27 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":19,"_text":"Stack Was Emptied "}} 
 Player 1 20:54:27 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 20:54:27 $ACTION_MASSAGE_REMOVE:  
 {"id":15} 
 Player 1 20:54:28 $ACTION_MASSAGE_REMOVE:  
 {"id":19} 
 Player 1 20:54:29 $ACTION_MASSAGE_REMOVE:  
 {"id":15} 
 Player 1 20:54:48 $NEXT_STACK_ID:  
 Player 1 20:54:48 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 20:54:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 activated Incubus"} 
 Player 1 20:54:48 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":23,"creatorCardId":270,"hasLockingStackEffect":false,"itemToPlayCardId":271,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 1 20:54:48 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":20,"_text":"Add ActivateItem 23 "}} 
 Player 1 20:55:19 $USE_ITEM:  
 {"cardId":271} 
 Player 1 20:55:19 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 20:55:19 $ACTION_MASSAGE_REMOVE:  
 {"id":20} 
 Player 1 20:55:19 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 activated Incubus"} 
 Player 1 20:55:19 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":23,"creatorCardId":270,"hasLockingStackEffect":false,"itemToPlayCardId":271,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 20:55:19 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":21,"_text":"Response Adding ActivateItem 23"},"childOfId":20} 
 Player 1 20:55:19 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":22,"_text":"Wait For Response From Player 1 "},"childOfId":20} 
 Player 1 20:55:19 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 20:55:19 $ACTION_MASSAGE_REMOVE:  
 {"id":22} 
 Player 1 20:55:19 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":23,"_text":"Wait For Response From Player 2 "},"childOfId":20} 
 Player 1 20:55:19 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 20:55:20 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 20:55:20 $ACTION_MASSAGE_REMOVE:  
 {"id":23} 
 Player 1 20:55:20 $ACTION_MASSAGE_REMOVE:  
 {"id":21} 
 Player 1 20:55:20 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":24,"_text":"Resolve ActivateItem 23 "}} 
 Player 1 20:55:20 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":271,"particleType":6} 
 Player 1 20:55:22 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":271,"particleType":6} 
 Player 1 20:56:37 $PLAYER_LOSE_LOOT:  
 {"playerId":1,"cardId":13} 
 Player 1 20:56:37 $MOVE_CARD:  
 {"moveIndex":23,"cardId":13,"placeID":2,"flipIfFlipped":false,"playerId":1,"placeType":"Hand"} 
 Player 1 20:56:37 $FLIP_CARD:  
 {"cardId":13} 
 Player 1 20:56:37 $PLAYER_GET_LOOT:  
 {"playerId":2,"cardId":13} 
 Player 1 20:56:37 $PLAYER_LOSE_LOOT:  
 {"playerId":2,"cardId":52} 
 Player 1 20:56:37 $MOVE_CARD:  
 {"moveIndex":24,"cardId":52,"placeID":1,"flipIfFlipped":false,"playerId":1,"placeType":"Hand"} 
 Player 1 20:56:38 $FLIP_CARD:  
 {"cardId":52} 
 Player 1 20:56:38 $PLAYER_GET_LOOT:  
 {"playerId":1,"cardId":52} 
 Player 1 20:56:38 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 activated Incubus"} 
 Player 1 20:56:38 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":23,"creatorCardId":270,"hasLockingStackEffect":false,"itemToPlayCardId":271,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 20:56:38 $ACTION_MASSAGE_REMOVE:  
 {"id":24} 
 Player 1 20:56:38 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":25,"_text":"Remove After Resolve ActivateItem 23  "}} 
 Player 1 20:56:38 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 20:56:38 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":23,"creatorCardId":270,"hasLockingStackEffect":false,"itemToPlayCardId":271,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 20:56:38 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":26,"_text":"Response Remove After Resolve ActivateItem 23"},"childOfId":25} 
 Player 1 20:56:38 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":27,"_text":"Wait For Response From Player 2 "},"childOfId":25} 
 Player 1 20:56:38 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 20:56:38 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 20:56:39 $ACTION_MASSAGE_REMOVE:  
 {"id":27} 
 Player 1 20:56:39 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":28,"_text":"Wait For Response From Player 1 "},"childOfId":25} 
 Player 1 20:56:39 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 20:56:39 $ACTION_MASSAGE_REMOVE:  
 {"id":28} 
 Player 1 20:56:39 $ACTION_MASSAGE_REMOVE:  
 {"id":26} 
 Player 1 20:56:39 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":29,"_text":"Stack Was Emptied "}} 
 Player 1 20:56:39 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 20:56:39 $ACTION_MASSAGE_REMOVE:  
 {"id":25} 
 Player 1 20:56:40 $ACTION_MASSAGE_REMOVE:  
 {"id":29} 
 Player 1 20:56:41 $ACTION_MASSAGE_REMOVE:  
 {"id":25} 
 Player 1 20:56:50 $NEXT_STACK_ID:  
 Player 1 20:56:50 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 20:56:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1  declared attack on Little Horn"} 
 Player 1 20:56:50 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":24,"creatorCardId":270,"attackingPlayerCardId":270,"idOfCardBeingAttacked":235,"stackEffectType":4}} 
 Player 1 20:56:50 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":30,"_text":"Add DeclareAttack 24 "}} 
 Player 1 20:56:50 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 20:56:50 $ACTION_MASSAGE_REMOVE:  
 {"id":30} 
 Player 1 20:56:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1  declared attack on Little Horn"} 
 Player 1 20:56:50 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":24,"creatorCardId":270,"attackingPlayerCardId":270,"idOfCardBeingAttacked":235,"stackEffectType":4}} 
 Player 1 20:56:51 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":31,"_text":"Response Adding DeclareAttack 24"},"childOfId":30} 
 Player 1 20:56:51 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":32,"_text":"Wait For Response From Player 1 "},"childOfId":30} 
 Player 1 20:56:51 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 20:56:51 $ACTION_MASSAGE_REMOVE:  
 {"id":32} 
 Player 1 20:56:51 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":33,"_text":"Wait For Response From Player 2 "},"childOfId":30} 
 Player 1 20:56:51 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 20:56:51 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 20:56:51 $ACTION_MASSAGE_REMOVE:  
 {"id":33} 
 Player 1 20:56:51 $ACTION_MASSAGE_REMOVE:  
 {"id":31} 
 Player 1 20:56:51 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":34,"_text":"Resolve DeclareAttack 24 "}} 
 Player 1 20:56:51 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":235,"particleType":5} 
 Player 1 20:56:52 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":2,"originStackId":24},"isAfterActivation":true,"index":2} 
 Player 1 20:56:52 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1  declared attack on Little Horn"} 
 Player 1 20:56:52 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":24,"creatorCardId":270,"attackingPlayerCardId":270,"idOfCardBeingAttacked":235,"stackEffectType":4}} 
 Player 1 20:56:52 $ACTION_MASSAGE_REMOVE:  
 {"id":34} 
 Player 1 20:56:52 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":35,"_text":"Remove After Resolve DeclareAttack 24  "}} 
 Player 1 20:56:52 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 20:56:52 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":24,"creatorCardId":270,"attackingPlayerCardId":270,"idOfCardBeingAttacked":235,"stackEffectType":4}} 
 Player 1 20:56:52 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":36,"_text":"Response Remove After Resolve DeclareAttack 24"},"childOfId":35} 
 Player 1 20:56:52 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":37,"_text":"Wait For Response From Player 2 "},"childOfId":35} 
 Player 1 20:56:52 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 20:56:52 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 20:56:52 $ACTION_MASSAGE_REMOVE:  
 {"id":37} 
 Player 1 20:56:53 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":38,"_text":"Wait For Response From Player 1 "},"childOfId":35} 
 Player 1 20:56:53 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 20:56:53 $ACTION_MASSAGE_REMOVE:  
 {"id":38} 
 Player 1 20:56:53 $ACTION_MASSAGE_REMOVE:  
 {"id":36} 
 Player 1 20:56:53 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":39,"_text":"Stack Was Emptied "}} 
 Player 1 20:56:53 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 20:56:53 $ACTION_MASSAGE_REMOVE:  
 {"id":35} 
 Player 1 20:56:54 $ACTION_MASSAGE_REMOVE:  
 {"id":39} 
 Player 1 20:56:54 $ACTION_MASSAGE_REMOVE:  
 {"id":35} 
 Player 1 20:57:02 $NEXT_STACK_ID:  
 Player 1 20:57:02 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 20:57:02 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Little Horn<Monster>"} 
 Player 1 20:57:02 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":25,"creatorCardId":270,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":235}} 
 Player 1 20:57:02 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":40,"_text":"Add AttackRoll 25 "}} 
 Player 1 20:57:02 $ROLL_DICE:  
 {"playerId":1} 
 Player 1 20:57:03 $ROLL_DICE_ENDED:  
 {"playerId":1,"numberRolled":1} 
 Player 1 20:57:03 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 1 vs Little Horn<Monster>"} 
 Player 1 20:57:03 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 20:57:03 $ACTION_MASSAGE_REMOVE:  
 {"id":40} 
 Player 1 20:57:03 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 1 vs Little Horn<Monster>"} 
 Player 1 20:57:04 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":25,"creatorCardId":270,"numberRolled":1,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":235}} 
 Player 1 20:57:04 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":41,"_text":"Response Adding AttackRoll 25"},"childOfId":40} 
 Player 1 20:57:04 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":42,"_text":"Wait For Response From Player 1 "},"childOfId":40} 
 Player 1 20:57:04 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 20:57:04 $ACTION_MASSAGE_REMOVE:  
 {"id":42} 
 Player 1 20:57:04 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":43,"_text":"Wait For Response From Player 2 "},"childOfId":40} 
 Player 1 20:57:04 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 20:57:04 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 20:57:04 $ACTION_MASSAGE_REMOVE:  
 {"id":43} 
 Player 1 20:57:04 $ACTION_MASSAGE_REMOVE:  
 {"id":41} 
 Player 1 20:57:04 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":44,"_text":"Resolve AttackRoll 25 "}} 
 Player 1 20:57:04 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":45,"_text":"Added 0 to original roll"}} 
 Player 1 20:57:04 $NEXT_STACK_ID:  
 Player 1 20:57:04 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 1 vs Little Horn<Monster>"} 
 Player 1 20:57:04 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 20:57:04 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Little Horn combat damage to Lilith \n2:Player 1 rolled 1 vs Little Horn<Monster>"} 
 Player 1 20:57:04 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":26,"creatorCardId":270,"entityToDoDamageCardId":235,"entityToTakeDamageCardId":270,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 20:57:04 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Little Horn combat damage to Lilith \n2:Player 1 rolled 1 vs Little Horn<Monster>"} 
 Player 1 20:57:05 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Little Horn combat damage to Lilith \n2:Player 1 rolled 1 vs Little Horn<Monster>"} 
 Player 1 20:57:05 $REPLACE_STACK:  
 {"currentStack":[{"entityId":26,"creatorCardId":270,"entityToDoDamageCardId":235,"entityToTakeDamageCardId":270,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":25,"creatorCardId":270,"numberRolled":1,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":235}]} 
 Player 1 20:57:05 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":2,"number":6}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":3,"originStackId":25},"isAfterActivation":true,"index":3} 
 Player 1 20:57:05 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Little Horn combat damage to Lilith \n2:Player 1 rolled 1 vs Little Horn<Monster>"} 
 Player 1 20:57:05 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":25,"creatorCardId":270,"numberRolled":1,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":235}} 
 Player 1 20:57:05 $ACTION_MASSAGE_REMOVE:  
 {"id":44} 
 Player 1 20:57:05 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":46,"_text":"Remove After Resolve AttackRoll 25  "}} 
 Player 1 20:57:05 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Little Horn combat damage to Lilith"} 
 Player 1 20:57:05 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":25,"creatorCardId":270,"numberRolled":1,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":235}} 
 Player 1 20:57:05 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":47,"_text":"Response Remove After Resolve AttackRoll 25"},"childOfId":46} 
 Player 1 20:57:05 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":48,"_text":"Wait For Response From Player 1 "},"childOfId":46} 
 Player 1 20:57:05 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 20:57:05 $ACTION_MASSAGE_REMOVE:  
 {"id":48} 
 Player 1 20:57:05 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":49,"_text":"Wait For Response From Player 2 "},"childOfId":46} 
 Player 1 20:57:05 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 20:57:05 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 20:57:06 $ACTION_MASSAGE_REMOVE:  
 {"id":49} 
 Player 1 20:57:06 $ACTION_MASSAGE_REMOVE:  
 {"id":47} 
 Player 1 20:57:06 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":50,"_text":"Resolve CombatDamage 26 "}} 
 Player 1 20:57:06 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Little Horn 1 combat damage to Lilith"} 
 Player 1 20:57:06 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Little Horn 1 combat damage to Lilith"} 
 Player 1 20:57:06 $PLAYER_GET_HIT:  
 {"playerId":1,"damage":1,"damageDealerId":235} 
 Player 1 20:57:06 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":235}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 
 Player 1 20:57:06 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Little Horn 1 combat damage to Lilith"} 
 Player 1 20:57:06 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":26,"creatorCardId":270,"entityToDoDamageCardId":235,"entityToTakeDamageCardId":270,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 20:57:07 $ACTION_MASSAGE_REMOVE:  
 {"id":50} 
 Player 1 20:57:07 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":51,"_text":"Remove After Resolve CombatDamage 26  "}} 
 Player 1 20:57:07 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 20:57:07 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":26,"creatorCardId":270,"entityToDoDamageCardId":235,"entityToTakeDamageCardId":270,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 20:57:07 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":52,"_text":"Response Remove After Resolve CombatDamage 26"},"childOfId":51} 
 Player 1 20:57:07 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":53,"_text":"Wait For Response From Player 2 "},"childOfId":51} 
 Player 1 20:57:07 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 20:57:07 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 20:57:07 $ACTION_MASSAGE_REMOVE:  
 {"id":45} 
 Player 1 20:57:07 $ACTION_MASSAGE_REMOVE:  
 {"id":46} 
 Player 1 20:57:08 $ACTION_MASSAGE_REMOVE:  
 {"id":53} 
 Player 1 20:57:08 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":54,"_text":"Wait For Response From Player 1 "},"childOfId":51} 
 Player 1 20:57:08 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 20:57:08 $ACTION_MASSAGE_REMOVE:  
 {"id":54} 
 Player 1 20:57:08 $ACTION_MASSAGE_REMOVE:  
 {"id":52} 
 Player 1 20:57:08 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":55,"_text":"Stack Was Emptied "}} 
 Player 1 20:57:08 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 20:57:08 $ACTION_MASSAGE_REMOVE:  
 {"id":44} 
 Player 1 20:57:09 $ACTION_MASSAGE_REMOVE:  
 {"id":55} 
 Player 1 20:57:09 $ACTION_MASSAGE_REMOVE:  
 {"id":51} 
 Player 1 20:57:13 $NEXT_STACK_ID:  
 Player 1 20:57:13 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 20:57:13 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Little Horn<Monster>"} 
 Player 1 20:57:13 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":27,"creatorCardId":270,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":235}} 
 Player 1 20:57:13 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":56,"_text":"Add AttackRoll 27 "}} 
 Player 1 20:57:13 $ROLL_DICE:  
 {"playerId":1} 
 Player 1 20:57:15 $ROLL_DICE_ENDED:  
 {"playerId":1,"numberRolled":5} 
 Player 1 20:57:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 5 vs Little Horn<Monster>"} 
 Player 1 20:57:15 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 20:57:16 $ACTION_MASSAGE_REMOVE:  
 {"id":56} 
 Player 1 20:57:16 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 5 vs Little Horn<Monster>"} 
 Player 1 20:57:16 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":27,"creatorCardId":270,"numberRolled":5,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":235}} 
 Player 1 20:57:16 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":57,"_text":"Response Adding AttackRoll 27"},"childOfId":56} 
 Player 1 20:57:16 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":58,"_text":"Wait For Response From Player 1 "},"childOfId":56} 
 Player 1 20:57:16 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 20:57:25 $NEXT_STACK_ID:  
 Player 1 20:57:25 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 5 vs Little Horn<Monster>"} 
 Player 1 20:57:25 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 5 vs Little Horn<Monster> \n2:Player 1 activated Lilith"} 
 Player 1 20:57:25 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":28,"creatorCardId":270,"hasLockingStackEffect":false,"itemToPlayCardId":270,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 1 20:57:26 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":59,"_text":"Add ActivateItem 28 "}} 
 Player 1 20:57:30 $USE_ITEM:  
 {"cardId":270} 
 Player 1 20:57:31 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 20:57:31 $ACTION_MASSAGE_REMOVE:  
 {"id":59} 
 Player 1 20:57:31 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 5 vs Little Horn<Monster> \n2:Player 1 activated Lilith"} 
 Player 1 20:57:31 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":28,"creatorCardId":270,"hasLockingStackEffect":false,"itemToPlayCardId":270,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 20:57:31 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":60,"_text":"Response Adding ActivateItem 28"},"childOfId":59} 
 Player 1 20:57:31 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":61,"_text":"Wait For Response From Player 1 "},"childOfId":59} 
 Player 1 20:57:31 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 20:57:31 $ACTION_MASSAGE_REMOVE:  
 {"id":61} 
 Player 1 20:57:31 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":62,"_text":"Wait For Response From Player 2 "},"childOfId":59} 
 Player 1 20:57:31 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 20:57:31 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 20:57:31 $ACTION_MASSAGE_REMOVE:  
 {"id":62} 
 Player 1 20:57:31 $ACTION_MASSAGE_REMOVE:  
 {"id":60} 
 Player 1 20:57:31 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":63,"_text":"Resolve ActivateItem 28 "}} 
 Player 1 20:57:31 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":270,"particleType":6} 
 Player 1 20:57:33 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":270,"particleType":6} 
 Player 1 20:57:33 $NEXT_STACK_ID:  
 Player 1 20:57:33 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 5 vs Little Horn<Monster> \n2:Player 1 activated Lilith"} 
 Player 1 20:57:33 $PLAYER_LOSE_LOOT:  
 {"playerId":1,"cardId":101} 
 Player 1 20:57:33 $MOVE_CARD:  
 {"moveIndex":25,"cardId":101,"placeID":278,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 20:57:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 5 vs Little Horn<Monster> \n2:Player 1 play Dice Shard: RerollDice \n3:Player 1 activated Lilith"} 
 Player 1 20:57:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 5 vs Little Horn<Monster> \n2:Player 1 play Dice Shard: RerollDice \n3:Player 1 activated Lilith"} 
 Player 1 20:57:34 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 20:57:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 5 vs Little Horn<Monster> \n2:Player 1 play Dice Shard: RerollDice \n3:Player 1 activated Lilith"} 
 Player 1 20:57:34 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":29,"creatorCardId":270,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":101,"lootPlayerId":1,"effectToDo":{"effectName":"RerollDice","cardEffectNum":0,"cardPlayerId":1,"cardId":101,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 20:57:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 5 vs Little Horn<Monster> \n2:Player 1 play Dice Shard: RerollDice \n3:Player 1 activated Lilith"} 
 Player 1 20:57:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 5 vs Little Horn<Monster> \n2:Player 1 play Dice Shard: RerollDice \n3:Player 1 activated Lilith"} 
 Player 1 20:57:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 5 vs Little Horn<Monster> \n2:Player 1 play Dice Shard: RerollDice \n3:Player 1 activated Lilith"} 
 Player 1 20:57:34 $REPLACE_STACK:  
 {"currentStack":[{"entityId":27,"creatorCardId":270,"numberRolled":5,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":235},{"entityId":29,"creatorCardId":270,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":101,"lootPlayerId":1,"effectToDo":{"effectName":"RerollDice","cardEffectNum":0,"cardPlayerId":1,"cardId":101,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":28,"creatorCardId":270,"hasLockingStackEffect":false,"itemToPlayCardId":270,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 
 Player 1 20:57:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 5 vs Little Horn<Monster> \n2:Player 1 play Dice Shard: RerollDice \n3:Player 1 activated Lilith"} 
 Player 1 20:57:34 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":28,"creatorCardId":270,"hasLockingStackEffect":false,"itemToPlayCardId":270,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 20:57:35 $ACTION_MASSAGE_REMOVE:  
 {"id":63} 
 Player 1 20:57:35 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":64,"_text":"Remove After Resolve ActivateItem 28  "}} 
 Player 1 20:57:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 5 vs Little Horn<Monster> \n2:Player 1 play Dice Shard: RerollDice"} 
 Player 1 20:57:35 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":28,"creatorCardId":270,"hasLockingStackEffect":false,"itemToPlayCardId":270,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 20:57:35 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":65,"_text":"Response Remove After Resolve ActivateItem 28"},"childOfId":64} 
 Player 1 20:57:35 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":66,"_text":"Wait For Response From Player 1 "},"childOfId":64} 
 Player 1 20:57:35 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 20:57:35 $ACTION_MASSAGE_REMOVE:  
 {"id":66} 
 Player 1 20:57:35 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":67,"_text":"Wait For Response From Player 2 "},"childOfId":64} 
 Player 1 20:57:35 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 20:57:35 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 20:57:36 $ACTION_MASSAGE_REMOVE:  
 {"id":67} 
 Player 1 20:57:36 $ACTION_MASSAGE_REMOVE:  
 {"id":65} 
 Player 1 20:57:36 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":68,"_text":"Resolve PlayLootCardStackEffect 29 "}} 
 Player 1 20:57:36 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 5 vs Little Horn<Monster> \n2:Player 1 play Dice Shard: RerollDice"} 
 Player 1 20:57:36 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":101,"particleType":6} 
 Player 1 20:57:37 $ACTION_MASSAGE_REMOVE:  
 {"id":64} 
 Player 1 20:57:38 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":101,"particleType":6} 
 Player 1 20:57:38 $ROLL_DICE:  
 {"playerId":1} 
 Player 1 20:57:39 $ROLL_DICE_ENDED:  
 {"playerId":1,"numberRolled":3} 
 Player 1 20:57:39 $MOVE_CARD:  
 {"moveIndex":26,"cardId":101,"placeID":279,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 20:57:40 $MOVE_CARD_TO_PILE:  
 {"type":1,"cardId":101} 
 Player 1 20:57:40 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 5 vs Little Horn<Monster> \n2:Player 1 play Dice Shard: RerollDice"} 
 Player 1 20:57:40 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":29,"creatorCardId":270,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":101,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 20:57:40 $ACTION_MASSAGE_REMOVE:  
 {"id":68} 
 Player 1 20:57:40 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":69,"_text":"Remove After Resolve PlayLootCardStackEffect 29  "}} 
 Player 1 20:57:40 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 5 vs Little Horn<Monster>"} 
 Player 1 20:57:40 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":29,"creatorCardId":270,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":101,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 20:57:40 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":70,"_text":"Response Remove After Resolve PlayLootCardStackEffect 29"},"childOfId":69} 
 Player 1 20:57:40 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":71,"_text":"Wait For Response From Player 2 "},"childOfId":69} 
 Player 1 20:57:40 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 20:57:40 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 20:57:41 $ACTION_MASSAGE_REMOVE:  
 {"id":71} 
 Player 1 20:57:41 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":72,"_text":"Wait For Response From Player 1 "},"childOfId":69} 
 Player 1 20:57:41 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 20:57:41 $ACTION_MASSAGE_REMOVE:  
 {"id":72} 
 Player 1 20:57:41 $ACTION_MASSAGE_REMOVE:  
 {"id":70} 
 Player 1 20:57:41 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":73,"_text":"Resolve AttackRoll 27 "}} 
 Player 1 20:57:41 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":74,"_text":"Added 0 to original roll"}} 
 Player 1 20:57:41 $NEXT_STACK_ID:  
 Player 1 20:57:41 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 5 vs Little Horn<Monster>"} 
 Player 1 20:57:41 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 20:57:41 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Little Horn combat damage to Lilith \n2:Player 1 rolled 5 vs Little Horn<Monster>"} 
 Player 1 20:57:41 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":30,"creatorCardId":270,"entityToDoDamageCardId":235,"entityToTakeDamageCardId":270,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 20:57:41 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Little Horn combat damage to Lilith \n2:Player 1 rolled 5 vs Little Horn<Monster>"} 
 Player 1 20:57:41 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Little Horn combat damage to Lilith \n2:Player 1 rolled 5 vs Little Horn<Monster>"} 
 Player 1 20:57:41 $REPLACE_STACK:  
 {"currentStack":[{"entityId":30,"creatorCardId":270,"entityToDoDamageCardId":235,"entityToTakeDamageCardId":270,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":27,"creatorCardId":270,"numberRolled":3,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":235}]} 
 Player 1 20:57:41 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":3},{"type":2,"number":1},{"type":2,"number":6}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":5,"originStackId":27},"isAfterActivation":true,"index":5} 
 Player 1 20:57:41 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Little Horn combat damage to Lilith \n2:Player 1 rolled 5 vs Little Horn<Monster>"} 
 Player 1 20:57:41 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":27,"creatorCardId":270,"numberRolled":3,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":235}} 
 Player 1 20:57:41 $ACTION_MASSAGE_REMOVE:  
 {"id":73} 
 Player 1 20:57:41 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":75,"_text":"Remove After Resolve AttackRoll 27  "}} 
 Player 1 20:57:41 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Little Horn combat damage to Lilith"} 
 Player 1 20:57:42 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":27,"creatorCardId":270,"numberRolled":3,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":235}} 
 Player 1 20:57:42 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":76,"_text":"Response Remove After Resolve AttackRoll 27"},"childOfId":75} 
 Player 1 20:57:42 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":77,"_text":"Wait For Response From Player 1 "},"childOfId":75} 
 Player 1 20:57:42 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 20:57:42 $ACTION_MASSAGE_REMOVE:  
 {"id":77} 
 Player 1 20:57:42 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":78,"_text":"Wait For Response From Player 2 "},"childOfId":75} 
 Player 1 20:57:42 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 20:57:42 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 20:57:43 $ACTION_MASSAGE_REMOVE:  
 {"id":78} 
 Player 1 20:57:43 $ACTION_MASSAGE_REMOVE:  
 {"id":76} 
 Player 1 20:57:43 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":79,"_text":"Resolve CombatDamage 30 "}} 
 Player 1 20:57:43 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Little Horn 1 combat damage to Lilith"} 
 Player 1 20:57:43 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Little Horn 1 combat damage to Lilith"} 
 Player 1 20:57:43 $PLAYER_GET_HIT:  
 {"playerId":1,"damage":1,"damageDealerId":235} 
 Player 1 20:57:43 $NEXT_STACK_ID:  
 Player 1 20:57:43 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Little Horn 1 combat damage to Lilith"} 
 Player 1 20:57:43 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 20:57:43 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Little Horn 1 combat damage to Lilith \n2:Player 1 is about to die"} 
 Player 1 20:57:43 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":31,"creatorCardId":270,"playerToDieCardId":270,"stackEffectType":15,"killerId":235}} 
 Player 1 20:57:43 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Little Horn 1 combat damage to Lilith \n2:Player 1 is about to die"} 
 Player 1 20:57:43 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Little Horn 1 combat damage to Lilith \n2:Player 1 is about to die"} 
 Player 1 20:57:43 $REPLACE_STACK:  
 {"currentStack":[{"entityId":30,"creatorCardId":270,"entityToDoDamageCardId":235,"entityToTakeDamageCardId":270,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":31,"creatorCardId":270,"playerToDieCardId":270,"stackEffectType":15,"killerId":235}]} 
 Player 1 20:57:43 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":235}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 
 Player 1 20:57:43 $ACTION_MASSAGE_REMOVE:  
 {"id":79} 
 Player 1 20:57:43 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":80,"_text":"Remove After Resolve CombatDamage 30  "}} 
 Player 1 20:57:43 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to die"} 
 Player 1 20:57:43 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":30,"creatorCardId":270,"entityToDoDamageCardId":235,"entityToTakeDamageCardId":270,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 20:57:43 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":81,"_text":"Response Remove After Resolve CombatDamage 30"},"childOfId":80} 
 Player 1 20:57:43 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":82,"_text":"Wait For Response From Player 1 "},"childOfId":80} 
 Player 1 20:57:43 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 20:57:44 $ACTION_MASSAGE_REMOVE:  
 {"id":82} 
 Player 1 20:57:44 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":83,"_text":"Wait For Response From Player 2 "},"childOfId":80} 
 Player 1 20:57:44 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 20:57:44 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 20:57:44 $ACTION_MASSAGE_REMOVE:  
 {"id":69} 
 Player 1 20:57:44 $ACTION_MASSAGE_REMOVE:  
 {"id":74} 
 Player 1 20:57:44 $ACTION_MASSAGE_REMOVE:  
 {"id":75} 
 Player 1 20:57:44 $ACTION_MASSAGE_REMOVE:  
 {"id":83} 
 Player 1 20:57:44 $ACTION_MASSAGE_REMOVE:  
 {"id":81} 
 Player 1 20:57:44 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":84,"_text":"Resolve PlayerDeath 31 "}} 
 Player 1 20:57:45 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":235,"particleType":5} 
 Player 1 20:57:45 $CANCEL_ATTACK:  
 Player 1 20:57:45 $NEXT_STACK_ID:  
 Player 1 20:57:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to die"} 
 Player 1 20:57:45 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 20:57:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 
 Player 1 20:57:45 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":32,"creatorCardId":270,"playerToPayCardId":270,"stackEffectType":16}} 
 Player 1 20:57:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 
 Player 1 20:57:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 
 Player 1 20:57:45 $REPLACE_STACK:  
 {"currentStack":[{"entityId":31,"creatorCardId":270,"playerToDieCardId":270,"stackEffectType":15,"killerId":235},{"entityId":32,"creatorCardId":270,"playerToPayCardId":270,"stackEffectType":16}]} 
 Player 1 20:57:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 
 Player 1 20:57:45 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":31,"creatorCardId":270,"playerToDieCardId":270,"stackEffectType":15,"killerId":235}} 
 Player 1 20:57:45 $ACTION_MASSAGE_REMOVE:  
 {"id":84} 
 Player 1 20:57:45 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":85,"_text":"Remove After Resolve PlayerDeath 31  "}} 
 Player 1 20:57:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 1 20:57:45 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":31,"creatorCardId":270,"playerToDieCardId":270,"stackEffectType":15,"killerId":235}} 
 Player 1 20:57:45 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":86,"_text":"Response Remove After Resolve PlayerDeath 31"},"childOfId":85} 
 Player 1 20:57:45 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":87,"_text":"Wait For Response From Player 1 "},"childOfId":85} 
 Player 1 20:57:45 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 20:57:45 $ACTION_MASSAGE_REMOVE:  
 {"id":87} 
 Player 1 20:57:45 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":88,"_text":"Wait For Response From Player 2 "},"childOfId":85} 
 Player 1 20:57:45 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 20:57:45 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 20:57:46 $ACTION_MASSAGE_REMOVE:  
 {"id":80} 
 Player 1 20:57:46 $ACTION_MASSAGE_REMOVE:  
 {"id":88} 
 Player 1 20:57:46 $ACTION_MASSAGE_REMOVE:  
 {"id":86} 
 Player 1 20:57:46 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":89,"_text":"Resolve PlayerDeathPenalties 32 "}} 
 Player 1 20:57:46 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":90,"_text":"Player 1 pays Penalties"}} 
 Player 1 20:57:47 $ACTION_MASSAGE_REMOVE:  
 {"id":85} 
 Player 1 20:57:50 $PLAYER_LOSE_LOOT:  
 {"playerId":1,"cardId":12} 
 Player 1 20:57:50 $MOVE_CARD:  
 {"moveIndex":27,"cardId":12,"placeID":279,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 20:57:50 $MOVE_CARD_TO_PILE:  
 {"type":1,"cardId":12} 
 Player 1 20:57:50 $USE_ITEM:  
 {"cardId":270} 
 Player 1 20:57:50 $USE_ITEM:  
 {"cardId":271} 
 Player 1 20:57:50 $ACTION_MASSAGE_REMOVE:  
 {"id":90} 
 Player 1 20:57:50 $PLAYER_DIED:  
 {"playerId":1} 
 Player 1 20:57:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 1 20:57:50 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":32,"creatorCardId":270,"playerToPayCardId":270,"stackEffectType":16}} 
 Player 1 20:57:50 $ACTION_MASSAGE_REMOVE:  
 {"id":89} 
 Player 1 20:57:50 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":91,"_text":"Remove After Resolve PlayerDeathPenalties 32  "}} 
 Player 1 20:57:50 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 20:57:50 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":32,"creatorCardId":270,"playerToPayCardId":270,"stackEffectType":16}} 
 Player 1 20:57:50 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":92,"_text":"Response Remove After Resolve PlayerDeathPenalties 32"},"childOfId":91} 
 Player 1 20:57:50 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":93,"_text":"Wait For Response From Player 2 "},"childOfId":91} 
 Player 1 20:57:51 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 20:57:51 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 20:57:51 $ACTION_MASSAGE_REMOVE:  
 {"id":93} 
 Player 1 20:57:51 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":94,"_text":"Wait For Response From Player 1 "},"childOfId":91} 
 Player 1 20:57:51 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 20:57:51 $ACTION_MASSAGE_REMOVE:  
 {"id":94} 
 Player 1 20:57:51 $ACTION_MASSAGE_REMOVE:  
 {"id":92} 
 Player 1 20:57:51 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":95,"_text":"Stack Was Emptied "}} 
 Player 1 20:57:51 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 20:57:51 $ACTION_MASSAGE_REMOVE:  
 {"id":57} 
 Player 1 20:57:51 $ACTION_MASSAGE_REMOVE:  
 {"id":58} 
 Player 1 20:57:51 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 20:57:51 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 20:57:51 $ACTION_MASSAGE_REMOVE:  
 {"id":57} 
 Player 1 20:57:51 $REPLACE_STACK:  
 {"currentStack":[]} 
 Player 1 20:57:51 $END_TURN:  
 Player 1 20:57:51 $SET_TURN:  
 {"playerId":2} 
 Player 1 20:57:51 $START_TURN:  
 {"playerId":2} 
 Player 1 20:57:51 $ACTION_MASSAGE_REMOVE:  
 {"id":58} 
 Player 1 20:57:52 $ACTION_MASSAGE_REMOVE:  
 {"id":57} 
 Player 1 20:57:53 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 20:57:53 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 20:57:53 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 20:57:53 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 20:57:53 $ACTION_MASSAGE_REMOVE:  
 {"id":95} 
 Player 1 20:57:53 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 20:57:53 $ACTION_MASSAGE_REMOVE:  
 {"id":91} 
 Player 1 20:57:54 $MOVE_CARD_END:  
 {"moveIndex":28,"cardId":75,"flipIfFlipped":false,"playerId":2} 
 Player 1 20:57:54 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 20:57:54 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 20:57:54 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 20:57:54 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 20:57:54 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 20:57:59 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 20:57:59 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 20:57:59 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin"} 
 Player 1 20:57:59 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin"} 
 Player 1 20:57:59 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 20:57:59 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin"} 
 Player 1 20:58:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin"} 
 Player 1 20:58:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin"} 
 Player 1 20:58:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin"} 
 Player 1 20:58:01 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin \n2:Player 2 roll a dice"} 
 Player 1 20:58:01 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin \n2:Player 2 roll a dice"} 
 Player 1 20:58:01 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin \n2:Player 2 roll a dice"} 
 Player 1 20:58:01 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin \n2:Player 2 roll a dice"} 
 Player 1 20:58:01 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 20:58:02 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin \n2:Player 2 roll a dice"} 
 Player 1 20:58:02 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin \n2:Player 2 roll a dice"} 
 Player 1 20:58:02 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin \n2:Player 2 roll a dice"} 
 Player 1 20:58:02 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin \n2:Player 2 roll a dice"} 
 Player 1 20:58:02 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin \n2:Player 2 roll a dice"} 
 Player 1 20:58:02 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin \n2:Player 2 roll a dice"} 
 Player 1 20:58:02 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin \n2:Player 2 roll a dice"} 
 Player 1 20:58:02 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin \n2:Player 2 roll a dice"} 
 Player 1 20:58:02 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 20:58:05 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin"} 
 Player 1 20:58:05 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin"} 
 Player 1 20:58:05 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin"} 
 Player 1 20:58:05 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin"} 
 Player 1 20:58:05 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 20:58:09 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 20:58:09 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 20:58:09 $MOVE_CARD_END:  
 {"moveIndex":29,"cardId":75,"flipIfFlipped":true,"playerId":2} 
 Player 1 20:58:10 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play A Dime(1) "} 
 Player 1 20:58:10 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play A Dime(1) "} 
 Player 1 20:58:10 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 20:58:13 $MOVE_CARD_END:  
 {"moveIndex":30,"cardId":75,"flipIfFlipped":true,"playerId":2} 
 Player 1 20:58:13 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play A Dime(1) "} 
 Player 1 20:58:13 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play A Dime(1) "} 
 Player 1 20:58:13 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play A Dime(1) "} 
 Player 1 20:58:13 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play A Dime(1) "} 
 Player 1 20:58:13 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 20:58:16 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 20:58:16 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 20:58:16 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to buy TopBlankCard for 10"} 
 Player 1 20:58:16 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to buy TopBlankCard for 10"} 
 Player 1 20:58:16 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 20:58:17 $MOVE_CARD_END:  
 {"moveIndex":31,"cardId":163,"flipIfFlipped":true,"playerId":2} 
 Player 1 20:58:17 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to buy TopBlankCard for 10"} 
 Player 1 20:58:17 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to buy TopBlankCard for 10"} 
 Player 1 20:58:18 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 20:58:24 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 20:58:24 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 20:58:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Flush"} 
 Player 1 20:58:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Flush"} 
 Player 1 20:58:26 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 20:58:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Flush"} 
 Player 1 20:58:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Flush"} 
 Player 1 20:58:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Flush \n2:Refill holder1 slot"} 
 Player 1 20:58:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Flush \n2:Refill holder1 slot"} 
 Player 1 20:58:29 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 20:58:30 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Flush \n2:Refill holder1 slot"} 
 Player 1 20:58:30 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Flush \n2:Refill holder1 slot"} 
 Player 1 20:58:30 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 20:58:31 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Flush"} 
 Player 1 20:58:32 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Flush"} 
 Player 1 20:58:32 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Flush \n2:Refill holder2 slot"} 
 Player 1 20:58:32 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Flush \n2:Refill holder2 slot"} 
 Player 1 20:58:32 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 20:58:33 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Flush \n2:Refill holder2 slot"} 
 Player 1 20:58:33 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Flush \n2:Refill holder2 slot"} 
 Player 1 20:58:33 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 20:58:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Flush"} 
 Player 1 20:58:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Flush"} 
 Player 1 20:58:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Flush"} 
 Player 1 20:58:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Flush"} 
 Player 1 20:58:35 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:02:39 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:02:39 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:02:42 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Blood Lust"} 
 Player 1 21:02:42 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Blood Lust"} 
 Player 1 21:02:42 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:02:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Blood Lust"} 
 Player 1 21:02:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Blood Lust"} 
 Player 1 21:02:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Blood Lust"} 
 Player 1 21:02:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Blood Lust"} 
 Player 1 21:02:45 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:02:51 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:02:51 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:02:51 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on The Hush"} 
 Player 1 21:02:51 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on The Hush"} 
 Player 1 21:02:51 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:02:52 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on The Hush"} 
 Player 1 21:02:52 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on The Hush"} 
 Player 1 21:02:52 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on The Hush"} 
 Player 1 21:02:52 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on The Hush"} 
 Player 1 21:02:52 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:02:57 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:02:57 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:02:59 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Hush<Monster>"} 
 Player 1 21:02:59 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Hush<Monster>"} 
 Player 1 21:02:59 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:03:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Hush<Monster>"} 
 Player 1 21:03:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Hush<Monster>"} 
 Player 1 21:03:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Hush"} 
 Player 1 21:03:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Hush"} 
 Player 1 21:03:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Hush"} 
 Player 1 21:03:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Hush"} 
 Player 1 21:03:01 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Hush \n2:Player 2 is rolling against The Hush<Monster>"} 
 Player 1 21:03:01 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Hush \n2:Player 2 is rolling against The Hush<Monster>"} 
 Player 1 21:03:01 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Hush \n2:Player 2 is rolling against The Hush<Monster>"} 
 Player 1 21:03:01 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Hush \n2:Player 2 is rolling against The Hush<Monster>"} 
 Player 1 21:03:01 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:03:02 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Hush"} 
 Player 1 21:03:02 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Hush"} 
 Player 1 21:03:02 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Hush"} 
 Player 1 21:03:02 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Hush"} 
 Player 1 21:03:02 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:04:20 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:04:20 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:04:22 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Hush<Monster>"} 
 Player 1 21:04:22 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Hush<Monster>"} 
 Player 1 21:04:22 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:04:23 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Hush<Monster>"} 
 Player 1 21:04:23 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Hush<Monster>"} 
 Player 1 21:04:23 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Hush"} 
 Player 1 21:04:23 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Hush"} 
 Player 1 21:04:23 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Hush"} 
 Player 1 21:04:23 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Hush"} 
 Player 1 21:04:24 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Hush \n2:Player 2 is rolling against The Hush<Monster>"} 
 Player 1 21:04:24 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Hush \n2:Player 2 is rolling against The Hush<Monster>"} 
 Player 1 21:04:24 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Hush \n2:Player 2 is rolling against The Hush<Monster>"} 
 Player 1 21:04:24 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Hush \n2:Player 2 is rolling against The Hush<Monster>"} 
 Player 1 21:04:24 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:04:24 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Hush"} 
 Player 1 21:04:24 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Hush"} 
 Player 1 21:04:25 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Hush"} 
 Player 1 21:04:25 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Hush"} 
 Player 1 21:04:25 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:04:27 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:04:27 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:04:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Hush<Monster>"} 
 Player 1 21:04:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Hush<Monster>"} 
 Player 1 21:04:28 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:04:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Hush<Monster>"} 
 Player 1 21:04:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Hush<Monster>"} 
 Player 1 21:04:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Hush"} 
 Player 1 21:04:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Hush"} 
 Player 1 21:04:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Hush"} 
 Player 1 21:04:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Hush"} 
 Player 1 21:04:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Hush \n2:Player 2 is rolling against The Hush<Monster>"} 
 Player 1 21:04:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Hush \n2:Player 2 is rolling against The Hush<Monster>"} 
 Player 1 21:04:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Hush \n2:Player 2 is rolling against The Hush<Monster>"} 
 Player 1 21:04:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Hush \n2:Player 2 is rolling against The Hush<Monster>"} 
 Player 1 21:04:30 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:04:30 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Hush"} 
 Player 1 21:04:30 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Hush"} 
 Player 1 21:04:31 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Hush"} 
 Player 1 21:04:31 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Hush"} 
 Player 1 21:04:31 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:04:31 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:04:32 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:04:33 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Hush<Monster>"} 
 Player 1 21:04:33 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Hush<Monster>"} 
 Player 1 21:04:33 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:04:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Hush<Monster>"} 
 Player 1 21:04:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Hush<Monster>"} 
 Player 1 21:04:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Hush combat damage to Samson"} 
 Player 1 21:04:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Hush combat damage to Samson"} 
 Player 1 21:04:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Hush combat damage to Samson"} 
 Player 1 21:04:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Hush combat damage to Samson"} 
 Player 1 21:04:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Hush combat damage to Samson \n2:Player 2 is rolling against The Hush<Monster>"} 
 Player 1 21:04:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Hush combat damage to Samson \n2:Player 2 is rolling against The Hush<Monster>"} 
 Player 1 21:04:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Hush combat damage to Samson \n2:Player 2 is rolling against The Hush<Monster>"} 
 Player 1 21:04:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Hush combat damage to Samson \n2:Player 2 is rolling against The Hush<Monster>"} 
 Player 1 21:04:34 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:04:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Hush combat damage to Samson"} 
 Player 1 21:04:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Hush combat damage to Samson"} 
 Player 1 21:04:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Hush combat damage to Samson"} 
 Player 1 21:04:36 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Hush combat damage to Samson"} 
 Player 1 21:04:36 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:05:08 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:05:08 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:05:09 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Hush<Monster>"} 
 Player 1 21:05:09 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Hush<Monster>"} 
 Player 1 21:05:16 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Hush<Monster>"} 
 Player 1 21:05:16 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Hush<Monster>"} 
 Player 1 21:05:18 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Hush<Monster> \n2:Player 2 activated Samson"} 
 Player 1 21:05:18 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Hush<Monster> \n2:Player 2 activated Samson"} 
 Player 1 21:05:19 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:05:21 $MOVE_CARD_END:  
 {"moveIndex":32,"cardId":32,"flipIfFlipped":true,"playerId":2} 
 Player 1 21:05:23 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Hush<Monster> \n2:Player 2 activated Samson"} 
 Player 1 21:05:23 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Hush<Monster> \n2:Player 2 activated Samson"} 
 Player 1 21:05:23 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Hush<Monster> \n2:Player 2 play 2 Cents(12) "} 
 Player 1 21:05:23 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Hush<Monster> \n2:Player 2 play 2 Cents(12) "} 
 Player 1 21:05:23 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Hush<Monster> \n2:Player 2 play 2 Cents(12) "} 
 Player 1 21:05:23 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Hush<Monster> \n2:Player 2 play 2 Cents(12) "} 
 Player 1 21:05:23 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Hush<Monster> \n2:Player 2 play 2 Cents(12) "} 
 Player 1 21:05:23 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Hush<Monster> \n2:Player 2 play 2 Cents(12) "} 
 Player 1 21:05:23 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Hush<Monster> \n2:Player 2 play 2 Cents(12)  \n3:Player 2 activated Samson"} 
 Player 1 21:05:23 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Hush<Monster> \n2:Player 2 play 2 Cents(12)  \n3:Player 2 activated Samson"} 
 Player 1 21:05:23 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Hush<Monster> \n2:Player 2 play 2 Cents(12)  \n3:Player 2 activated Samson"} 
 Player 1 21:05:23 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Hush<Monster> \n2:Player 2 play 2 Cents(12)  \n3:Player 2 activated Samson"} 
 Player 1 21:05:23 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:05:26 $MOVE_CARD_END:  
 {"moveIndex":33,"cardId":32,"flipIfFlipped":true,"playerId":2} 
 Player 1 21:05:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Hush<Monster> \n2:Player 2 play 2 Cents(12) "} 
 Player 1 21:05:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Hush<Monster> \n2:Player 2 play 2 Cents(12) "} 
 Player 1 21:05:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Hush<Monster> \n2:Player 2 play 2 Cents(12) "} 
 Player 1 21:05:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Hush<Monster> \n2:Player 2 play 2 Cents(12) "} 
 Player 1 21:05:26 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:05:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Hush<Monster>"} 
 Player 1 21:05:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Hush<Monster>"} 
 Player 1 21:05:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Hush combat damage to Samson"} 
 Player 1 21:05:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Hush combat damage to Samson"} 
 Player 1 21:05:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Hush combat damage to Samson"} 
 Player 1 21:05:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Hush combat damage to Samson"} 
 Player 1 21:05:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Hush combat damage to Samson \n2:Player 2 is rolling against The Hush<Monster>"} 
 Player 1 21:05:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Hush combat damage to Samson \n2:Player 2 is rolling against The Hush<Monster>"} 
 Player 1 21:05:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Hush combat damage to Samson \n2:Player 2 is rolling against The Hush<Monster>"} 
 Player 1 21:05:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Hush combat damage to Samson \n2:Player 2 is rolling against The Hush<Monster>"} 
 Player 1 21:05:28 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:05:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Hush combat damage to Samson"} 
 Player 1 21:05:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Hush combat damage to Samson"} 
 Player 1 21:05:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 21:05:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 21:05:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 21:05:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 21:05:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Hush combat damage to Samson \n2:Player 2 is about to die"} 
 Player 1 21:05:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Hush combat damage to Samson \n2:Player 2 is about to die"} 
 Player 1 21:05:30 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:05:31 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 21:05:31 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 21:05:31 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 21:05:31 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 21:05:31 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 21:05:31 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 21:05:31 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 1 21:05:31 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 1 21:05:31 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 1 21:05:31 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 1 21:05:32 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:05:35 $MOVE_CARD_END:  
 {"moveIndex":34,"cardId":13,"flipIfFlipped":true,"playerId":2} 
 Player 1 21:05:38 $MOVE_CARD_END:  
 {"moveIndex":35,"cardId":163,"flipIfFlipped":true,"playerId":2} 
 Player 1 21:05:39 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 21:05:39 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 21:05:39 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 21:05:39 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 21:05:39 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:05:40 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:05:40 $ACTION_MASSAGE_REMOVE:  
 {"id":320} 
 Player 1 21:05:40 $RECHARGE_ITEM:  
 {"cardId":270} 
 Player 1 21:05:40 $PLAYER_RECHARGE_ITEM:  
 {"playerId":1,"cardId":270} 
 Player 1 21:05:40 $RECHARGE_ITEM:  
 {"cardId":271} 
 Player 1 21:05:40 $PLAYER_RECHARGE_ITEM:  
 {"playerId":1,"cardId":271} 
 Player 1 21:05:40 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:05:40 $NEXT_STACK_ID:  
 Player 1 21:05:40 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:05:40 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 21:05:40 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":58,"creatorCardId":270,"turnPlayerCardId":270,"stackEffectType":13}} 
 Player 1 21:05:40 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":96,"_text":"Add StartTurnLoot 58 "}} 
 Player 1 21:05:40 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:05:40 $ACTION_MASSAGE_REMOVE:  
 {"id":96} 
 Player 1 21:05:40 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 21:05:40 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":58,"creatorCardId":270,"turnPlayerCardId":270,"stackEffectType":13}} 
 Player 1 21:05:40 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":97,"_text":"Response Adding StartTurnLoot 58"},"childOfId":96} 
 Player 1 21:05:40 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":98,"_text":"Wait For Response From Player 1 "},"childOfId":96} 
 Player 1 21:05:40 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:05:55 $NEXT_STACK_ID:  
 Player 1 21:05:55 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 21:05:56 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot \n2:Player 1 activated Incubus"} 
 Player 1 21:05:56 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":59,"creatorCardId":270,"hasLockingStackEffect":false,"itemToPlayCardId":271,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 1 21:05:56 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":99,"_text":"Add ActivateItem 59 "}} 
 Player 1 21:05:57 $USE_ITEM:  
 {"cardId":271} 
 Player 1 21:05:57 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:05:57 $ACTION_MASSAGE_REMOVE:  
 {"id":99} 
 Player 1 21:05:57 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot \n2:Player 1 activated Incubus"} 
 Player 1 21:05:57 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":59,"creatorCardId":270,"hasLockingStackEffect":false,"itemToPlayCardId":271,"itemPlayerId":1,"effectToDoData":{"type":1,"index":1},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 21:05:57 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":100,"_text":"Response Adding ActivateItem 59"},"childOfId":99} 
 Player 1 21:05:57 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":101,"_text":"Wait For Response From Player 1 "},"childOfId":99} 
 Player 1 21:05:57 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:06:03 $NEXT_STACK_ID:  
 Player 1 21:06:03 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot \n2:Player 1 activated Incubus"} 
 Player 1 21:06:03 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot \n2:Player 1 activated Incubus \n3:Player 1 play 2 Cents(7) "} 
 Player 1 21:06:03 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":60,"creatorCardId":270,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":27,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 1 21:06:03 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":102,"_text":"Add PlayLootCardStackEffect 60 "}} 
 Player 1 21:06:03 $PLAYER_LOSE_LOOT:  
 {"playerId":1,"cardId":27} 
 Player 1 21:06:03 $MOVE_CARD:  
 {"moveIndex":36,"cardId":27,"placeID":278,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 21:06:04 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot \n2:Player 1 activated Incubus \n3:Player 1 play 2 Cents(7): addMoney"} 
 Player 1 21:06:04 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot \n2:Player 1 activated Incubus \n3:Player 1 play 2 Cents(7): addMoney"} 
 Player 1 21:06:04 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:06:04 $ACTION_MASSAGE_REMOVE:  
 {"id":102} 
 Player 1 21:06:04 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot \n2:Player 1 activated Incubus \n3:Player 1 play 2 Cents(7): addMoney"} 
 Player 1 21:06:04 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":60,"creatorCardId":270,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":27,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":27,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 21:06:04 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":103,"_text":"Response Adding PlayLootCardStackEffect 60"},"childOfId":102} 
 Player 1 21:06:04 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":104,"_text":"Wait For Response From Player 1 "},"childOfId":102} 
 Player 1 21:06:04 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:07:34 $ACTION_MASSAGE_REMOVE:  
 {"id":104} 
 Player 1 21:07:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":105,"_text":"Wait For Response From Player 2 "},"childOfId":102} 
 Player 1 21:07:34 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:07:34 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:07:34 $ACTION_MASSAGE_REMOVE:  
 {"id":105} 
 Player 1 21:07:34 $ACTION_MASSAGE_REMOVE:  
 {"id":103} 
 Player 1 21:07:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":106,"_text":"Resolve PlayLootCardStackEffect 60 "}} 
 Player 1 21:07:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot \n2:Player 1 activated Incubus \n3:Player 1 play 2 Cents(7): addMoney"} 
 Player 1 21:07:34 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":27,"particleType":6} 
 Player 1 21:07:36 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":27,"particleType":6} 
 Player 1 21:07:36 $CHANGE_MONEY:  
 {"playerId":1,"numOfCoins":2} 
 Player 1 21:07:36 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":2}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 
 Player 1 21:07:36 $MOVE_CARD:  
 {"moveIndex":37,"cardId":27,"placeID":279,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 21:07:37 $MOVE_CARD_TO_PILE:  
 {"type":1,"cardId":27} 
 Player 1 21:07:37 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot \n2:Player 1 activated Incubus \n3:Player 1 play 2 Cents(7): addMoney"} 
 Player 1 21:07:37 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":60,"creatorCardId":270,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":27,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 21:07:37 $ACTION_MASSAGE_REMOVE:  
 {"id":106} 
 Player 1 21:07:37 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":107,"_text":"Remove After Resolve PlayLootCardStackEffect 60  "}} 
 Player 1 21:07:37 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot \n2:Player 1 activated Incubus"} 
 Player 1 21:07:37 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":60,"creatorCardId":270,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":27,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 21:07:37 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":108,"_text":"Response Remove After Resolve PlayLootCardStackEffect 60"},"childOfId":107} 
 Player 1 21:07:37 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":109,"_text":"Wait For Response From Player 2 "},"childOfId":107} 
 Player 1 21:07:37 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:07:38 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:07:38 $ACTION_MASSAGE_REMOVE:  
 {"id":109} 
 Player 1 21:07:38 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":110,"_text":"Wait For Response From Player 1 "},"childOfId":107} 
 Player 1 21:07:38 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:07:40 $ACTION_MASSAGE_REMOVE:  
 {"id":107} 
 Player 1 21:08:45 $ACTION_MASSAGE_REMOVE:  
 {"id":110} 
 Player 1 21:08:46 $ACTION_MASSAGE_REMOVE:  
 {"id":108} 
 Player 1 21:08:46 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":111,"_text":"Resolve ActivateItem 59 "}} 
 Player 1 21:08:46 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":271,"particleType":6} 
 Player 1 21:08:47 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":271,"particleType":6} 
 Player 1 21:08:48 $DRAW_CARD:  
 {"deckType":1} 
 Player 1 21:08:48 $MOVE_CARD:  
 {"moveIndex":38,"cardId":78,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 1 21:08:48 $CARD_DRAWN:  
 {"playerId":1,"deckType":1,"drawnCardId":78} 
 Player 1 21:08:48 $FLIP_CARD:  
 {"cardId":78} 
 Player 1 21:08:48 $PLAYER_GET_LOOT:  
 {"playerId":1,"cardId":78} 
 Player 1 21:09:24 $MOVE_CARD:  
 {"moveIndex":39,"cardId":58,"placeID":6,"flipIfFlipped":false,"playerId":1,"placeType":"Card"} 
 Player 1 21:09:25 $PLAYER_LOSE_LOOT:  
 {"playerId":1,"cardId":58} 
 Player 1 21:09:25 $DECK_ADD_TO_TOP:  
 {"deckType":1,"cardId":58} 
 Player 1 21:09:25 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot \n2:Player 1 activated Incubus"} 
 Player 1 21:09:25 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":59,"creatorCardId":270,"hasLockingStackEffect":false,"itemToPlayCardId":271,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 21:09:25 $ACTION_MASSAGE_REMOVE:  
 {"id":111} 
 Player 1 21:09:25 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":112,"_text":"Remove After Resolve ActivateItem 59  "}} 
 Player 1 21:09:25 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 21:09:25 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":59,"creatorCardId":270,"hasLockingStackEffect":false,"itemToPlayCardId":271,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 21:09:25 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":113,"_text":"Response Remove After Resolve ActivateItem 59"},"childOfId":112} 
 Player 1 21:09:25 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":114,"_text":"Wait For Response From Player 1 "},"childOfId":112} 
 Player 1 21:09:25 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:09:28 $ACTION_MASSAGE_REMOVE:  
 {"id":112} 
 Player 1 21:09:34 $NEXT_STACK_ID:  
 Player 1 21:09:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 21:09:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot \n2:Player 1  declared attack on TopBlankCard"} 
 Player 1 21:09:34 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":61,"creatorCardId":270,"attackingPlayerCardId":270,"idOfCardBeingAttacked":0,"stackEffectType":4}} 
 Player 1 21:09:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":115,"_text":"Add DeclareAttack 61 "}} 
 Player 1 21:09:34 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:09:34 $ACTION_MASSAGE_REMOVE:  
 {"id":115} 
 Player 1 21:09:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot \n2:Player 1  declared attack on TopBlankCard"} 
 Player 1 21:09:34 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":61,"creatorCardId":270,"attackingPlayerCardId":270,"idOfCardBeingAttacked":0,"stackEffectType":4}} 
 Player 1 21:09:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":116,"_text":"Response Adding DeclareAttack 61"},"childOfId":115} 
 Player 1 21:09:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":117,"_text":"Wait For Response From Player 1 "},"childOfId":115} 
 Player 1 21:09:35 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:09:39 $ACTION_MASSAGE_REMOVE:  
 {"id":114} 
 Player 1 21:09:39 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":118,"_text":"Wait For Response From Player 2 "},"childOfId":112} 
 Player 1 21:09:39 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:09:39 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:09:39 $ACTION_MASSAGE_REMOVE:  
 {"id":117} 
 Player 1 21:09:39 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":119,"_text":"Wait For Response From Player 2 "},"childOfId":115} 
 Player 1 21:09:40 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:09:40 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:09:40 $ACTION_MASSAGE_REMOVE:  
 {"id":118} 
 Player 1 21:09:40 $ACTION_MASSAGE_REMOVE:  
 {"id":119} 
 Player 1 21:09:40 $ACTION_MASSAGE_REMOVE:  
 {"id":113} 
 Player 1 21:09:40 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":120,"_text":"Resolve DeclareAttack 61 "}} 
 Player 1 21:09:40 $ACTION_MASSAGE_REMOVE:  
 {"id":116} 
 Player 1 21:09:40 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":121,"_text":"Resolve DeclareAttack 61 "}} 
 Player 1 21:09:40 $DRAW_CARD:  
 {"deckType":2} 
 Player 1 21:09:40 $SHOW_CARD_PREVIEW:  
 {"cardToShowId":222,"playerId":1} 
 Player 1 21:09:49 $FLIP_CARD:  
 {"cardId":222} 
 Player 1 21:09:49 $ADD_MONSTER:  
 {"monsterPlaceId":1,"monsterId":222} 
 Player 1 21:09:49 $NEW_MONSTER_ON_PLACE:  
 {"cardId":222,"monsterPlaceId":1} 
 Player 1 21:09:49 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":222,"particleType":5} 
 Player 1 21:09:49 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":8,"originStackId":61},"isAfterActivation":true,"index":8} 
 Player 1 21:09:49 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot \n2:Player 1  declared attack on TopBlankCard"} 
 Player 1 21:09:49 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":61,"creatorCardId":270,"attackingPlayerCardId":270,"idOfCardBeingAttacked":222,"stackEffectType":4}} 
 Player 1 21:09:49 $ACTION_MASSAGE_REMOVE:  
 {"id":120} 
 Player 1 21:09:49 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":122,"_text":"Remove After Resolve DeclareAttack 61  "}} 
 Player 1 21:09:49 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 21:09:49 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":61,"creatorCardId":270,"attackingPlayerCardId":270,"idOfCardBeingAttacked":222,"stackEffectType":4}} 
 Player 1 21:09:49 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":123,"_text":"Response Remove After Resolve DeclareAttack 61"},"childOfId":122} 
 Player 1 21:09:49 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":124,"_text":"Wait For Response From Player 2 "},"childOfId":122} 
 Player 1 21:09:49 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:09:49 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:09:50 $ACTION_MASSAGE_REMOVE:  
 {"id":124} 
 Player 1 21:09:50 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":125,"_text":"Wait For Response From Player 1 "},"childOfId":122} 
 Player 1 21:09:50 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:09:52 $ACTION_MASSAGE_REMOVE:  
 {"id":122} 
 Player 1 21:10:03 $ACTION_MASSAGE_REMOVE:  
 {"id":125} 
 Player 1 21:10:03 $ACTION_MASSAGE_REMOVE:  
 {"id":123} 
 Player 1 21:10:03 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":126,"_text":"Resolve StartTurnLoot 58 "}} 
 Player 1 21:10:03 $DRAW_CARD:  
 {"deckType":1} 
 Player 1 21:10:03 $MOVE_CARD:  
 {"moveIndex":40,"cardId":58,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 1 21:10:03 $CARD_DRAWN:  
 {"playerId":1,"deckType":1,"drawnCardId":58} 
 Player 1 21:10:03 $FLIP_CARD:  
 {"cardId":58} 
 Player 1 21:10:03 $PLAYER_GET_LOOT:  
 {"playerId":1,"cardId":58} 
 Player 1 21:10:03 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 21:10:03 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":58,"creatorCardId":270,"turnPlayerCardId":270,"stackEffectType":13}} 
 Player 1 21:10:03 $ACTION_MASSAGE_REMOVE:  
 {"id":126} 
 Player 1 21:10:03 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":127,"_text":"Remove After Resolve StartTurnLoot 58  "}} 
 Player 1 21:10:04 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:10:04 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":58,"creatorCardId":270,"turnPlayerCardId":270,"stackEffectType":13}} 
 Player 1 21:10:04 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":128,"_text":"Response Remove After Resolve StartTurnLoot 58"},"childOfId":127} 
 Player 1 21:10:04 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":129,"_text":"Wait For Response From Player 1 "},"childOfId":127} 
 Player 1 21:10:04 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:10:06 $ACTION_MASSAGE_REMOVE:  
 {"id":127} 
 Player 1 21:10:55 $ACTION_MASSAGE_REMOVE:  
 {"id":129} 
 Player 1 21:10:55 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":130,"_text":"Wait For Response From Player 2 "},"childOfId":127} 
 Player 1 21:10:55 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:10:55 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:10:55 $ACTION_MASSAGE_REMOVE:  
 {"id":130} 
 Player 1 21:10:55 $ACTION_MASSAGE_REMOVE:  
 {"id":128} 
 Player 1 21:10:56 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":131,"_text":"Stack Was Emptied "}} 
 Player 1 21:10:56 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:10:56 $ACTION_MASSAGE_REMOVE:  
 {"id":100} 
 Player 1 21:10:56 $ACTION_MASSAGE_REMOVE:  
 {"id":101} 
 Player 1 21:10:56 $ACTION_MASSAGE_REMOVE:  
 {"id":101} 
 Player 1 21:10:56 $ACTION_MASSAGE_REMOVE:  
 {"id":100} 
 Player 1 21:10:56 $ACTION_MASSAGE_REMOVE:  
 {"id":98} 
 Player 1 21:10:56 $ACTION_MASSAGE_REMOVE:  
 {"id":97} 
 Player 1 21:10:57 $ACTION_MASSAGE_REMOVE:  
 {"id":131} 
 Player 1 21:12:09 $NEXT_STACK_ID:  
 Player 1 21:12:09 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:12:09 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Dip<Monster>"} 
 Player 1 21:12:10 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":62,"creatorCardId":270,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":222}} 
 Player 1 21:12:10 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":132,"_text":"Add AttackRoll 62 "}} 
 Player 1 21:12:10 $ROLL_DICE:  
 {"playerId":1} 
 Player 1 21:12:11 $ROLL_DICE_ENDED:  
 {"playerId":1,"numberRolled":2} 
 Player 1 21:12:11 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 2 vs Dip<Monster>"} 
 Player 1 21:12:11 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:12:11 $ACTION_MASSAGE_REMOVE:  
 {"id":132} 
 Player 1 21:12:11 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 2 vs Dip<Monster>"} 
 Player 1 21:12:11 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":62,"creatorCardId":270,"numberRolled":2,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":222}} 
 Player 1 21:12:11 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":133,"_text":"Response Adding AttackRoll 62"},"childOfId":132} 
 Player 1 21:12:11 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":134,"_text":"Wait For Response From Player 1 "},"childOfId":132} 
 Player 1 21:12:11 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:12:11 $ACTION_MASSAGE_REMOVE:  
 {"id":134} 
 Player 1 21:12:11 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":135,"_text":"Wait For Response From Player 2 "},"childOfId":132} 
 Player 1 21:12:11 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:12:12 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:12:12 $ACTION_MASSAGE_REMOVE:  
 {"id":135} 
 Player 1 21:12:12 $ACTION_MASSAGE_REMOVE:  
 {"id":133} 
 Player 1 21:12:12 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":136,"_text":"Resolve AttackRoll 62 "}} 
 Player 1 21:12:12 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":137,"_text":"Added 0 to original roll"}} 
 Player 1 21:12:12 $NEXT_STACK_ID:  
 Player 1 21:12:12 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 2 vs Dip<Monster>"} 
 Player 1 21:12:12 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:12:12 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Dip combat damage to Lilith \n2:Player 1 rolled 2 vs Dip<Monster>"} 
 Player 1 21:12:12 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":63,"creatorCardId":270,"entityToDoDamageCardId":222,"entityToTakeDamageCardId":270,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 21:12:12 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Dip combat damage to Lilith \n2:Player 1 rolled 2 vs Dip<Monster>"} 
 Player 1 21:12:12 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Dip combat damage to Lilith \n2:Player 1 rolled 2 vs Dip<Monster>"} 
 Player 1 21:12:12 $REPLACE_STACK:  
 {"currentStack":[{"entityId":63,"creatorCardId":270,"entityToDoDamageCardId":222,"entityToTakeDamageCardId":270,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":62,"creatorCardId":270,"numberRolled":2,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":222}]} 
 Player 1 21:12:12 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":2},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":9,"originStackId":62},"isAfterActivation":true,"index":9} 
 Player 1 21:12:12 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Dip combat damage to Lilith \n2:Player 1 rolled 2 vs Dip<Monster>"} 
 Player 1 21:12:12 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":62,"creatorCardId":270,"numberRolled":2,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":222}} 
 Player 1 21:12:12 $ACTION_MASSAGE_REMOVE:  
 {"id":136} 
 Player 1 21:12:12 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":138,"_text":"Remove After Resolve AttackRoll 62  "}} 
 Player 1 21:12:12 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Dip combat damage to Lilith"} 
 Player 1 21:12:12 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":62,"creatorCardId":270,"numberRolled":2,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":222}} 
 Player 1 21:12:13 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":139,"_text":"Response Remove After Resolve AttackRoll 62"},"childOfId":138} 
 Player 1 21:12:13 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":140,"_text":"Wait For Response From Player 1 "},"childOfId":138} 
 Player 1 21:12:13 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:12:15 $ACTION_MASSAGE_REMOVE:  
 {"id":137} 
 Player 1 21:12:15 $ACTION_MASSAGE_REMOVE:  
 {"id":138} 
 Player 1 21:12:34 $ACTION_MASSAGE_REMOVE:  
 {"id":140} 
 Player 1 21:12:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":141,"_text":"Wait For Response From Player 2 "},"childOfId":138} 
 Player 1 21:12:34 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:12:34 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:12:34 $ACTION_MASSAGE_REMOVE:  
 {"id":141} 
 Player 1 21:12:34 $ACTION_MASSAGE_REMOVE:  
 {"id":139} 
 Player 1 21:12:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":142,"_text":"Resolve CombatDamage 63 "}} 
 Player 1 21:12:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Dip 1 combat damage to Lilith"} 
 Player 1 21:12:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Dip 1 combat damage to Lilith"} 
 Player 1 21:12:34 $PLAYER_GET_HIT:  
 {"playerId":1,"damage":1,"damageDealerId":222} 
 Player 1 21:12:34 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":222}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":10,"originStackId":-1},"isAfterActivation":true,"index":10} 
 Player 1 21:12:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Dip 1 combat damage to Lilith"} 
 Player 1 21:12:34 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":63,"creatorCardId":270,"entityToDoDamageCardId":222,"entityToTakeDamageCardId":270,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 21:12:34 $ACTION_MASSAGE_REMOVE:  
 {"id":142} 
 Player 1 21:12:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":143,"_text":"Remove After Resolve CombatDamage 63  "}} 
 Player 1 21:12:34 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:12:34 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":63,"creatorCardId":270,"entityToDoDamageCardId":222,"entityToTakeDamageCardId":270,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 21:12:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":144,"_text":"Response Remove After Resolve CombatDamage 63"},"childOfId":143} 
 Player 1 21:12:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":145,"_text":"Wait For Response From Player 2 "},"childOfId":143} 
 Player 1 21:12:34 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:12:34 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:12:35 $ACTION_MASSAGE_REMOVE:  
 {"id":145} 
 Player 1 21:12:35 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":146,"_text":"Wait For Response From Player 1 "},"childOfId":143} 
 Player 1 21:12:35 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:12:37 $ACTION_MASSAGE_REMOVE:  
 {"id":143} 
 Player 1 21:12:39 $ACTION_MASSAGE_REMOVE:  
 {"id":146} 
 Player 1 21:12:39 $ACTION_MASSAGE_REMOVE:  
 {"id":144} 
 Player 1 21:12:39 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":147,"_text":"Stack Was Emptied "}} 
 Player 1 21:12:39 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:12:39 $ACTION_MASSAGE_REMOVE:  
 {"id":147} 
 Player 1 21:12:40 $ACTION_MASSAGE_REMOVE:  
 {"id":147} 
 Player 1 21:12:46 $NEXT_STACK_ID:  
 Player 1 21:12:46 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:12:46 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Dip<Monster>"} 
 Player 1 21:12:46 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":64,"creatorCardId":270,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":222}} 
 Player 1 21:12:46 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":148,"_text":"Add AttackRoll 64 "}} 
 Player 1 21:12:46 $ROLL_DICE:  
 {"playerId":1} 
 Player 1 21:12:48 $ROLL_DICE_ENDED:  
 {"playerId":1,"numberRolled":6} 
 Player 1 21:12:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 6 vs Dip<Monster>"} 
 Player 1 21:12:48 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:12:48 $ACTION_MASSAGE_REMOVE:  
 {"id":148} 
 Player 1 21:12:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 6 vs Dip<Monster>"} 
 Player 1 21:12:48 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":64,"creatorCardId":270,"numberRolled":6,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":222}} 
 Player 1 21:12:48 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":149,"_text":"Response Adding AttackRoll 64"},"childOfId":148} 
 Player 1 21:12:48 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":150,"_text":"Wait For Response From Player 1 "},"childOfId":148} 
 Player 1 21:12:48 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:13:02 $NEXT_STACK_ID:  
 Player 1 21:13:02 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 6 vs Dip<Monster>"} 
 Player 1 21:13:02 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 6 vs Dip<Monster> \n2:Player 1 activated Lilith"} 
 Player 1 21:13:02 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":65,"creatorCardId":270,"hasLockingStackEffect":false,"itemToPlayCardId":270,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 1 21:13:02 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":151,"_text":"Add ActivateItem 65 "}} 
 Player 1 21:13:05 $USE_ITEM:  
 {"cardId":270} 
 Player 1 21:13:05 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:13:05 $ACTION_MASSAGE_REMOVE:  
 {"id":151} 
 Player 1 21:13:05 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 6 vs Dip<Monster> \n2:Player 1 activated Lilith"} 
 Player 1 21:13:05 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":65,"creatorCardId":270,"hasLockingStackEffect":false,"itemToPlayCardId":270,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 21:13:05 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":152,"_text":"Response Adding ActivateItem 65"},"childOfId":151} 
 Player 1 21:13:05 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":153,"_text":"Wait For Response From Player 1 "},"childOfId":151} 
 Player 1 21:13:05 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:13:06 $ACTION_MASSAGE_REMOVE:  
 {"id":153} 
 Player 1 21:13:06 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":154,"_text":"Wait For Response From Player 2 "},"childOfId":151} 
 Player 1 21:13:06 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:13:06 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:13:06 $ACTION_MASSAGE_REMOVE:  
 {"id":154} 
 Player 1 21:13:06 $ACTION_MASSAGE_REMOVE:  
 {"id":152} 
 Player 1 21:13:06 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":155,"_text":"Resolve ActivateItem 65 "}} 
 Player 1 21:13:06 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":270,"particleType":6} 
 Player 1 21:13:08 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":270,"particleType":6} 
 Player 1 21:13:08 $NEXT_STACK_ID:  
 Player 1 21:13:08 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 6 vs Dip<Monster> \n2:Player 1 activated Lilith"} 
 Player 1 21:13:08 $PLAYER_LOSE_LOOT:  
 {"playerId":1,"cardId":78} 
 Player 1 21:13:08 $MOVE_CARD:  
 {"moveIndex":41,"cardId":78,"placeID":278,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 21:13:09 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 6 vs Dip<Monster> \n2:Player 1 play A Dime(4): addMoney \n3:Player 1 activated Lilith"} 
 Player 1 21:13:09 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 6 vs Dip<Monster> \n2:Player 1 play A Dime(4): addMoney \n3:Player 1 activated Lilith"} 
 Player 1 21:13:09 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:13:09 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 6 vs Dip<Monster> \n2:Player 1 play A Dime(4): addMoney \n3:Player 1 activated Lilith"} 
 Player 1 21:13:09 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":66,"creatorCardId":270,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":78,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":78,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 21:13:09 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 6 vs Dip<Monster> \n2:Player 1 play A Dime(4): addMoney \n3:Player 1 activated Lilith"} 
 Player 1 21:13:09 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 6 vs Dip<Monster> \n2:Player 1 play A Dime(4): addMoney \n3:Player 1 activated Lilith"} 
 Player 1 21:13:09 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 6 vs Dip<Monster> \n2:Player 1 play A Dime(4): addMoney \n3:Player 1 activated Lilith"} 
 Player 1 21:13:09 $REPLACE_STACK:  
 {"currentStack":[{"entityId":64,"creatorCardId":270,"numberRolled":6,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":222},{"entityId":66,"creatorCardId":270,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":78,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":78,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":65,"creatorCardId":270,"hasLockingStackEffect":false,"itemToPlayCardId":270,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 
 Player 1 21:13:09 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 6 vs Dip<Monster> \n2:Player 1 play A Dime(4): addMoney \n3:Player 1 activated Lilith"} 
 Player 1 21:13:09 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":65,"creatorCardId":270,"hasLockingStackEffect":false,"itemToPlayCardId":270,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 21:13:09 $ACTION_MASSAGE_REMOVE:  
 {"id":155} 
 Player 1 21:13:09 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":156,"_text":"Remove After Resolve ActivateItem 65  "}} 
 Player 1 21:13:09 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 6 vs Dip<Monster> \n2:Player 1 play A Dime(4): addMoney"} 
 Player 1 21:13:09 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":65,"creatorCardId":270,"hasLockingStackEffect":false,"itemToPlayCardId":270,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 21:13:09 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":157,"_text":"Response Remove After Resolve ActivateItem 65"},"childOfId":156} 
 Player 1 21:13:09 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":158,"_text":"Wait For Response From Player 1 "},"childOfId":156} 
 Player 1 21:13:09 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:13:09 $ACTION_MASSAGE_REMOVE:  
 {"id":158} 
 Player 1 21:13:09 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":159,"_text":"Wait For Response From Player 2 "},"childOfId":156} 
 Player 1 21:13:09 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:13:09 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:13:10 $ACTION_MASSAGE_REMOVE:  
 {"id":159} 
 Player 1 21:13:10 $ACTION_MASSAGE_REMOVE:  
 {"id":157} 
 Player 1 21:13:10 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":160,"_text":"Resolve PlayLootCardStackEffect 66 "}} 
 Player 1 21:13:11 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 6 vs Dip<Monster> \n2:Player 1 play A Dime(4): addMoney"} 
 Player 1 21:13:11 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":78,"particleType":6} 
 Player 1 21:13:12 $ACTION_MASSAGE_REMOVE:  
 {"id":156} 
 Player 1 21:13:12 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":78,"particleType":6} 
 Player 1 21:13:12 $CHANGE_MONEY:  
 {"playerId":1,"numOfCoins":10} 
 Player 1 21:13:12 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":10}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":11,"originStackId":-1},"isAfterActivation":true,"index":11} 
 Player 1 21:13:12 $MOVE_CARD:  
 {"moveIndex":42,"cardId":78,"placeID":279,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 21:13:13 $MOVE_CARD_TO_PILE:  
 {"type":1,"cardId":78} 
 Player 1 21:13:13 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 6 vs Dip<Monster> \n2:Player 1 play A Dime(4): addMoney"} 
 Player 1 21:13:13 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":66,"creatorCardId":270,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":78,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 21:13:13 $ACTION_MASSAGE_REMOVE:  
 {"id":160} 
 Player 1 21:13:13 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":161,"_text":"Remove After Resolve PlayLootCardStackEffect 66  "}} 
 Player 1 21:13:13 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 6 vs Dip<Monster>"} 
 Player 1 21:13:13 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":66,"creatorCardId":270,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":78,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 21:13:13 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":162,"_text":"Response Remove After Resolve PlayLootCardStackEffect 66"},"childOfId":161} 
 Player 1 21:13:13 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":163,"_text":"Wait For Response From Player 2 "},"childOfId":161} 
 Player 1 21:13:13 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:13:13 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:13:14 $ACTION_MASSAGE_REMOVE:  
 {"id":163} 
 Player 1 21:13:14 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":164,"_text":"Wait For Response From Player 1 "},"childOfId":161} 
 Player 1 21:13:14 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:13:14 $ACTION_MASSAGE_REMOVE:  
 {"id":164} 
 Player 1 21:13:14 $ACTION_MASSAGE_REMOVE:  
 {"id":162} 
 Player 1 21:13:14 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":165,"_text":"Resolve AttackRoll 64 "}} 
 Player 1 21:13:14 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":166,"_text":"Added 0 to original roll"}} 
 Player 1 21:13:14 $NEXT_STACK_ID:  
 Player 1 21:13:14 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 6 vs Dip<Monster>"} 
 Player 1 21:13:14 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:13:14 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to Dip \n2:Player 1 rolled 6 vs Dip<Monster>"} 
 Player 1 21:13:14 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":67,"creatorCardId":270,"entityToDoDamageCardId":270,"entityToTakeDamageCardId":222,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 21:13:14 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to Dip \n2:Player 1 rolled 6 vs Dip<Monster>"} 
 Player 1 21:13:14 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to Dip \n2:Player 1 rolled 6 vs Dip<Monster>"} 
 Player 1 21:13:14 $REPLACE_STACK:  
 {"currentStack":[{"entityId":67,"creatorCardId":270,"entityToDoDamageCardId":270,"entityToTakeDamageCardId":222,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":64,"creatorCardId":270,"numberRolled":6,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":222}]} 
 Player 1 21:13:15 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":6},{"type":2,"number":1},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":12,"originStackId":64},"isAfterActivation":true,"index":12} 
 Player 1 21:13:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to Dip \n2:Player 1 rolled 6 vs Dip<Monster>"} 
 Player 1 21:13:15 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":64,"creatorCardId":270,"numberRolled":6,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":222}} 
 Player 1 21:13:15 $ACTION_MASSAGE_REMOVE:  
 {"id":165} 
 Player 1 21:13:15 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":167,"_text":"Remove After Resolve AttackRoll 64  "}} 
 Player 1 21:13:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to Dip"} 
 Player 1 21:13:15 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":64,"creatorCardId":270,"numberRolled":6,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":222}} 
 Player 1 21:13:15 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":168,"_text":"Response Remove After Resolve AttackRoll 64"},"childOfId":167} 
 Player 1 21:13:15 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":169,"_text":"Wait For Response From Player 1 "},"childOfId":167} 
 Player 1 21:13:15 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:13:15 $ACTION_MASSAGE_REMOVE:  
 {"id":169} 
 Player 1 21:13:15 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":170,"_text":"Wait For Response From Player 2 "},"childOfId":167} 
 Player 1 21:13:15 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:13:15 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:13:16 $ACTION_MASSAGE_REMOVE:  
 {"id":170} 
 Player 1 21:13:16 $ACTION_MASSAGE_REMOVE:  
 {"id":168} 
 Player 1 21:13:16 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":171,"_text":"Resolve CombatDamage 67 "}} 
 Player 1 21:13:16 $MONSTER_GET_DAMAGED:  
 {"cardId":222,"hpLeft":0,"damageDealerId":270} 
 Player 1 21:13:16 $NEXT_STACK_ID:  
 Player 1 21:13:16 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to Dip"} 
 Player 1 21:13:16 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:13:16 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to Dip \n2:[object Object] killed by Lilith"} 
 Player 1 21:13:16 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":68,"creatorCardId":270,"monsterToDieCardId":222,"stackEffectType":5,"killerId":270}} 
 Player 1 21:13:16 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to Dip \n2:[object Object] killed by Lilith"} 
 Player 1 21:13:17 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to Dip \n2:[object Object] killed by Lilith"} 
 Player 1 21:13:17 $REPLACE_STACK:  
 {"currentStack":[{"entityId":67,"creatorCardId":270,"entityToDoDamageCardId":270,"entityToTakeDamageCardId":222,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":68,"creatorCardId":270,"monsterToDieCardId":222,"stackEffectType":5,"killerId":270}]} 
 Player 1 21:13:17 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":270}],"result":null,"preventMethod":false,"methodScopeId":222,"scopeIsPlayer":false,"index":13,"originStackId":-1},"isAfterActivation":true,"index":13} 
 Player 1 21:13:17 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":6},{"type":0,"number":270},{"type":0,"number":222}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":14,"originStackId":67},"isAfterActivation":true,"index":14} 
 Player 1 21:13:17 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to Dip \n2:[object Object] killed by Lilith"} 
 Player 1 21:13:17 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":67,"creatorCardId":270,"entityToDoDamageCardId":270,"entityToTakeDamageCardId":222,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 21:13:17 $ACTION_MASSAGE_REMOVE:  
 {"id":171} 
 Player 1 21:13:17 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":172,"_text":"Remove After Resolve CombatDamage 67  "}} 
 Player 1 21:13:17 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by Lilith"} 
 Player 1 21:13:17 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":67,"creatorCardId":270,"entityToDoDamageCardId":270,"entityToTakeDamageCardId":222,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 21:13:17 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":173,"_text":"Response Remove After Resolve CombatDamage 67"},"childOfId":172} 
 Player 1 21:13:17 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":174,"_text":"Wait For Response From Player 1 "},"childOfId":172} 
 Player 1 21:13:17 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:13:17 $ACTION_MASSAGE_REMOVE:  
 {"id":174} 
 Player 1 21:13:17 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":175,"_text":"Wait For Response From Player 2 "},"childOfId":172} 
 Player 1 21:13:17 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:13:17 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:13:17 $ACTION_MASSAGE_REMOVE:  
 {"id":161} 
 Player 1 21:13:17 $ACTION_MASSAGE_REMOVE:  
 {"id":166} 
 Player 1 21:13:18 $ACTION_MASSAGE_REMOVE:  
 {"id":167} 
 Player 1 21:13:18 $ACTION_MASSAGE_REMOVE:  
 {"id":175} 
 Player 1 21:13:18 $ACTION_MASSAGE_REMOVE:  
 {"id":173} 
 Player 1 21:13:18 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":176,"_text":"Resolve MonsterDeath 68 "}} 
 Player 1 21:13:18 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":222,"particleType":5} 
 Player 1 21:13:18 $CANCEL_ATTACK:  
 Player 1 21:13:18 $NEXT_STACK_ID:  
 Player 1 21:13:18 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by Lilith"} 
 Player 1 21:13:18 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:13:18 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Dip<Monster> reward \n2:[object Object] killed by Lilith"} 
 Player 1 21:13:18 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":69,"creatorCardId":270,"monsterCardWithRewardId":222,"playerCardIdToReward":270,"stackEffectType":7}} 
 Player 1 21:13:19 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Dip<Monster> reward \n2:[object Object] killed by Lilith"} 
 Player 1 21:13:19 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Dip<Monster> reward \n2:[object Object] killed by Lilith"} 
 Player 1 21:13:19 $REPLACE_STACK:  
 {"currentStack":[{"entityId":69,"creatorCardId":270,"monsterCardWithRewardId":222,"playerCardIdToReward":270,"stackEffectType":7},{"entityId":68,"creatorCardId":270,"monsterToDieCardId":222,"stackEffectType":5,"killerId":270}]} 
 Player 1 21:13:19 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Dip<Monster> reward \n2:[object Object] killed by Lilith"} 
 Player 1 21:13:19 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":68,"creatorCardId":270,"monsterToDieCardId":222,"stackEffectType":5,"killerId":270}} 
 Player 1 21:13:19 $ACTION_MASSAGE_REMOVE:  
 {"id":176} 
 Player 1 21:13:19 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":177,"_text":"Remove After Resolve MonsterDeath 68  "}} 
 Player 1 21:13:19 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Dip<Monster> reward"} 
 Player 1 21:13:19 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":68,"creatorCardId":270,"monsterToDieCardId":222,"stackEffectType":5,"killerId":270}} 
 Player 1 21:13:19 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":178,"_text":"Response Remove After Resolve MonsterDeath 68"},"childOfId":177} 
 Player 1 21:13:19 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":179,"_text":"Wait For Response From Player 1 "},"childOfId":177} 
 Player 1 21:13:19 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:13:19 $ACTION_MASSAGE_REMOVE:  
 {"id":179} 
 Player 1 21:13:19 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":180,"_text":"Wait For Response From Player 2 "},"childOfId":177} 
 Player 1 21:13:19 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:13:19 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:13:19 $ACTION_MASSAGE_REMOVE:  
 {"id":172} 
 Player 1 21:13:20 $ACTION_MASSAGE_REMOVE:  
 {"id":180} 
 Player 1 21:13:20 $ACTION_MASSAGE_REMOVE:  
 {"id":178} 
 Player 1 21:13:20 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":181,"_text":"Resolve MonsterRewardStackEffect 69 "}} 
 Player 1 21:13:20 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":222,"scopeIsPlayer":false,"index":15,"originStackId":69},"isAfterActivation":true,"index":15} 
 Player 1 21:13:20 $CHANGE_MONEY:  
 {"playerId":1,"numOfCoins":1} 
 Player 1 21:13:20 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":1}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":16,"originStackId":-1},"isAfterActivation":true,"index":16} 
 Player 1 21:13:20 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:13:20 $ACTION_MASSAGE_REMOVE:  
 {"id":149} 
 Player 1 21:13:20 $ACTION_MASSAGE_REMOVE:  
 {"id":150} 
 Player 1 21:13:20 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":182,"_text":"Fizzle MonsterRewardStackEffect 69"}} 
 Player 1 21:13:20 $MOVE_CARD:  
 {"moveIndex":43,"cardId":222,"placeID":281,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 21:13:21 $MOVE_CARD_TO_PILE:  
 {"type":2,"cardId":222} 
 Player 1 21:13:21 $REMOVE_MONSTER:  
 {"holderId":1,"monsterId":222} 
 Player 1 21:13:21 $GET_NEXT_MONSTER:  
 {"monsterPlaceId":1} 
 Player 1 21:13:21 $ACTION_MASSAGE_REMOVE:  
 {"id":181} 
 Player 1 21:13:21 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":183,"_text":"Stack Was Emptied "}} 
 Player 1 21:13:21 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:13:21 $ACTION_MASSAGE_REMOVE:  
 {"id":149} 
 Player 1 21:13:21 $ACTION_MASSAGE_REMOVE:  
 {"id":150} 
 Player 1 21:13:21 $ACTION_MASSAGE_REMOVE:  
 {"id":150} 
 Player 1 21:13:21 $ACTION_MASSAGE_REMOVE:  
 {"id":149} 
 Player 1 21:13:21 $ACTION_MASSAGE_REMOVE:  
 {"id":177} 
 Player 1 21:13:23 $ACTION_MASSAGE_REMOVE:  
 {"id":183} 
 Player 1 21:13:23 $ACTION_MASSAGE_REMOVE:  
 {"id":182} 
 Player 1 21:13:27 $NEXT_STACK_ID:  
 Player 1 21:13:28 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:13:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to buy Midas Touch for 10"} 
 Player 1 21:13:28 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":70,"creatorCardId":270,"itemToPurchaseCardId":175,"playerWhoBuysCardId":270,"cost":10,"stackEffectType":9}} 
 Player 1 21:13:28 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":184,"_text":"Add PurchaseItem 70 "}} 
 Player 1 21:13:28 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:13:28 $ACTION_MASSAGE_REMOVE:  
 {"id":184} 
 Player 1 21:13:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to buy Midas Touch for 10"} 
 Player 1 21:13:28 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":70,"creatorCardId":270,"itemToPurchaseCardId":175,"playerWhoBuysCardId":270,"cost":10,"stackEffectType":9}} 
 Player 1 21:13:28 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":185,"_text":"Response Adding PurchaseItem 70"},"childOfId":184} 
 Player 1 21:13:28 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":186,"_text":"Wait For Response From Player 1 "},"childOfId":184} 
 Player 1 21:13:28 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:13:28 $ACTION_MASSAGE_REMOVE:  
 {"id":186} 
 Player 1 21:13:28 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":187,"_text":"Wait For Response From Player 2 "},"childOfId":184} 
 Player 1 21:13:28 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:13:28 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:13:29 $ACTION_MASSAGE_REMOVE:  
 {"id":187} 
 Player 1 21:13:29 $ACTION_MASSAGE_REMOVE:  
 {"id":185} 
 Player 1 21:13:29 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":188,"_text":"Resolve PurchaseItem 70 "}} 
 Player 1 21:13:29 $CHANGE_MONEY:  
 {"playerId":1,"numOfCoins":-10} 
 Player 1 21:13:29 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-10}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":17,"originStackId":-1},"isAfterActivation":true,"index":17} 
 Player 1 21:13:29 $REMOVE_ITEM_FROM_SHOP:  
 {"cardId":175} 
 Player 1 21:13:29 $NEXT_STACK_ID:  
 Player 1 21:13:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to buy Midas Touch for 10"} 
 Player 1 21:13:29 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:13:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to buy Midas Touch for 10 \n2:Refill Store slot"} 
 Player 1 21:13:29 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":71,"creatorCardId":270,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 
 Player 1 21:13:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to buy Midas Touch for 10 \n2:Refill Store slot"} 
 Player 1 21:13:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to buy Midas Touch for 10 \n2:Refill Store slot"} 
 Player 1 21:13:29 $REPLACE_STACK:  
 {"currentStack":[{"entityId":70,"creatorCardId":270,"itemToPurchaseCardId":175,"playerWhoBuysCardId":270,"cost":10,"stackEffectType":9},{"entityId":71,"creatorCardId":270,"slotType":5,"slotToFillId":0,"stackEffectType":10}]} 
 Player 1 21:13:29 $REGISTER_PASSIVE_ITEM:  
 {"cardId":175} 
 Player 1 21:13:29 $MOVE_CARD:  
 {"moveIndex":44,"cardId":175,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 
 Player 1 21:13:30 $ADD_AN_ITEM:  
 {"playerId":1,"cardId":175,"isReward":false} 
 Player 1 21:13:30 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":175}],"result":true,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":18,"originStackId":-1},"isAfterActivation":true,"index":18} 
 Player 1 21:13:30 $ACTION_MASSAGE_REMOVE:  
 {"id":188} 
 Player 1 21:13:30 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":189,"_text":"Remove After Resolve PurchaseItem 70  "}} 
 Player 1 21:13:30 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Refill Store slot"} 
 Player 1 21:13:30 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":70,"creatorCardId":270,"itemToPurchaseCardId":175,"playerWhoBuysCardId":270,"cost":10,"stackEffectType":9}} 
 Player 1 21:13:30 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":190,"_text":"Response Remove After Resolve PurchaseItem 70"},"childOfId":189} 
 Player 1 21:13:30 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":191,"_text":"Wait For Response From Player 1 "},"childOfId":189} 
 Player 1 21:13:30 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:13:31 $ACTION_MASSAGE_REMOVE:  
 {"id":191} 
 Player 1 21:13:31 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":192,"_text":"Wait For Response From Player 2 "},"childOfId":189} 
 Player 1 21:13:31 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:13:31 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:13:31 $ACTION_MASSAGE_REMOVE:  
 {"id":192} 
 Player 1 21:13:31 $ACTION_MASSAGE_REMOVE:  
 {"id":190} 
 Player 1 21:13:31 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":193,"_text":"Resolve RefillEmptySlot 71 "}} 
 Player 1 21:13:31 $DRAW_CARD:  
 {"deckType":5} 
 Player 1 21:13:31 $FLIP_CARD:  
 {"cardId":153} 
 Player 1 21:13:31 $ADD_STORE_CARD:  
 {"cardId":153} 
 Player 1 21:13:31 $ACTION_MASSAGE_REMOVE:  
 {"id":193} 
 Player 1 21:13:31 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":194,"_text":"Remove After Resolve RefillEmptySlot 71  "}} 
 Player 1 21:13:31 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:13:31 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":71,"creatorCardId":270,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 
 Player 1 21:13:31 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":195,"_text":"Response Remove After Resolve RefillEmptySlot 71"},"childOfId":194} 
 Player 1 21:13:32 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":196,"_text":"Wait For Response From Player 2 "},"childOfId":194} 
 Player 1 21:13:32 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:13:32 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:13:32 $ACTION_MASSAGE_REMOVE:  
 {"id":196} 
 Player 1 21:13:32 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":197,"_text":"Wait For Response From Player 1 "},"childOfId":194} 
 Player 1 21:13:32 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:13:32 $ACTION_MASSAGE_REMOVE:  
 {"id":197} 
 Player 1 21:13:32 $ACTION_MASSAGE_REMOVE:  
 {"id":195} 
 Player 1 21:13:32 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":198,"_text":"Stack Was Emptied "}} 
 Player 1 21:13:32 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:13:32 $ACTION_MASSAGE_REMOVE:  
 {"id":189} 
 Player 1 21:13:32 $ACTION_MASSAGE_REMOVE:  
 {"id":194} 
 Player 1 21:13:33 $ACTION_MASSAGE_REMOVE:  
 {"id":189} 
 Player 1 21:13:34 $ACTION_MASSAGE_REMOVE:  
 {"id":198} 
 Player 1 21:13:34 $ACTION_MASSAGE_REMOVE:  
 {"id":194} 
 Player 1 21:13:39 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:13:39 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:13:39 $REPLACE_STACK:  
 {"currentStack":[]} 
 Player 1 21:13:39 $END_TURN:  
 Player 1 21:13:39 $SET_TURN:  
 {"playerId":2} 
 Player 1 21:13:39 $START_TURN:  
 {"playerId":2} 
 Player 1 21:13:40 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:13:40 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:13:40 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 21:13:40 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 21:13:40 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:13:41 $MOVE_CARD_END:  
 {"moveIndex":45,"cardId":22,"flipIfFlipped":false,"playerId":2} 
 Player 1 21:13:41 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 21:13:41 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 21:13:41 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 21:13:41 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 21:13:41 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:13:43 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:13:43 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:13:43 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:13:43 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:13:43 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:13:43 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:13:44 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:13:44 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:13:44 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:13:44 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:13:44 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:13:44 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:13:44 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:13:44 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:13:44 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin"} 
 Player 1 21:13:44 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin"} 
 Player 1 21:13:44 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:13:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin"} 
 Player 1 21:13:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin"} 
 Player 1 21:13:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin"} 
 Player 1 21:13:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin"} 
 Player 1 21:13:47 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin \n2:Player 2 roll a dice"} 
 Player 1 21:13:47 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin \n2:Player 2 roll a dice"} 
 Player 1 21:13:47 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin \n2:Player 2 roll a dice"} 
 Player 1 21:13:47 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin \n2:Player 2 roll a dice"} 
 Player 1 21:13:47 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:13:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin \n2:Player 2 roll a dice"} 
 Player 1 21:13:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin \n2:Player 2 roll a dice"} 
 Player 1 21:13:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin \n2:Player 2 roll a dice"} 
 Player 1 21:13:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin \n2:Player 2 roll a dice"} 
 Player 1 21:13:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin \n2:Player 2 roll a dice"} 
 Player 1 21:13:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin \n2:Player 2 roll a dice"} 
 Player 1 21:13:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin \n2:Player 2 roll a dice"} 
 Player 1 21:13:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin \n2:Player 2 roll a dice"} 
 Player 1 21:13:48 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:13:51 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin"} 
 Player 1 21:13:51 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin"} 
 Player 1 21:13:51 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin"} 
 Player 1 21:13:51 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Book Of Sin"} 
 Player 1 21:13:51 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:13:56 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:13:56 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:13:56 $MOVE_CARD_END:  
 {"moveIndex":46,"cardId":22,"flipIfFlipped":true,"playerId":2} 
 Player 1 21:13:57 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 2 Cents(2) "} 
 Player 1 21:13:57 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 2 Cents(2) "} 
 Player 1 21:13:57 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:13:59 $MOVE_CARD_END:  
 {"moveIndex":47,"cardId":22,"flipIfFlipped":true,"playerId":2} 
 Player 1 21:14:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 2 Cents(2) "} 
 Player 1 21:14:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 2 Cents(2) "} 
 Player 1 21:14:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 2 Cents(2) "} 
 Player 1 21:14:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 2 Cents(2) "} 
 Player 1 21:14:00 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:14:11 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:14:11 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:14:11 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard"} 
 Player 1 21:14:11 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard"} 
 Player 1 21:14:11 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:14:17 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard"} 
 Player 1 21:14:17 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard"} 
 Player 1 21:14:17 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on The Cage"} 
 Player 1 21:14:17 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on The Cage"} 
 Player 1 21:14:17 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:14:22 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:14:22 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:14:24 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Blood Lust"} 
 Player 1 21:14:24 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Blood Lust"} 
 Player 1 21:14:28 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:14:31 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Blood Lust"} 
 Player 1 21:14:31 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Blood Lust"} 
 Player 1 21:14:31 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Blood Lust"} 
 Player 1 21:14:31 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Blood Lust"} 
 Player 1 21:14:31 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:14:34 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:14:34 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:14:36 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:14:37 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:14:37 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:14:38 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:14:38 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:14:38 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Cage"} 
 Player 1 21:14:38 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Cage"} 
 Player 1 21:14:38 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Cage"} 
 Player 1 21:14:38 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Cage"} 
 Player 1 21:14:38 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Cage \n2:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:14:38 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Cage \n2:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:14:38 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Cage \n2:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:14:38 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Cage \n2:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:14:38 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:14:39 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Cage"} 
 Player 1 21:14:39 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Cage"} 
 Player 1 21:14:39 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Cage"} 
 Player 1 21:14:39 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Cage"} 
 Player 1 21:14:39 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:14:47 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:14:47 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:14:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:14:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:14:48 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:14:49 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:14:49 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:14:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Samson"} 
 Player 1 21:14:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Samson"} 
 Player 1 21:14:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Samson"} 
 Player 1 21:14:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Samson"} 
 Player 1 21:14:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Samson \n2:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:14:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Samson \n2:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:14:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Samson \n2:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:14:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Samson \n2:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:14:50 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:14:51 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Samson"} 
 Player 1 21:14:51 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Samson"} 
 Player 1 21:14:51 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Samson"} 
 Player 1 21:14:51 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Samson"} 
 Player 1 21:14:51 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:14:52 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:14:52 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:14:54 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:14:54 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:14:54 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:14:55 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:14:55 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:14:55 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Cage"} 
 Player 1 21:14:55 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Cage"} 
 Player 1 21:14:55 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Cage"} 
 Player 1 21:14:55 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Cage"} 
 Player 1 21:14:55 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Cage \n2:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:14:55 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Cage \n2:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:14:55 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Cage \n2:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:14:55 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Cage \n2:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:14:56 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:14:56 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Cage"} 
 Player 1 21:14:56 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Cage"} 
 Player 1 21:14:56 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Cage"} 
 Player 1 21:14:56 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Cage"} 
 Player 1 21:14:57 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:14:58 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:14:58 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:15:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:15:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:15:00 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:15:01 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:15:01 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:15:01 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Samson"} 
 Player 1 21:15:01 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Samson"} 
 Player 1 21:15:01 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Samson"} 
 Player 1 21:15:01 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Samson"} 
 Player 1 21:15:01 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Samson \n2:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:15:01 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Samson \n2:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:15:02 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Samson \n2:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:15:02 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Samson \n2:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:15:02 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:15:03 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Samson"} 
 Player 1 21:15:03 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Samson"} 
 Player 1 21:15:03 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 21:15:03 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 21:15:03 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 21:15:03 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 21:15:03 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Samson \n2:Player 2 is about to die"} 
 Player 1 21:15:03 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Samson \n2:Player 2 is about to die"} 
 Player 1 21:15:03 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:15:04 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 21:15:04 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 21:15:04 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 21:15:04 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 21:15:04 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 21:15:05 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 21:15:05 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 1 21:15:05 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 1 21:15:05 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 1 21:15:05 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 1 21:15:08 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 21:15:08 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 21:15:11 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to pay death penalties \n2:Player 2 activated Samson"} 
 Player 1 21:15:11 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to pay death penalties \n2:Player 2 activated Samson"} 
 Player 1 21:15:11 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:15:13 $MOVE_CARD_END:  
 {"moveIndex":48,"cardId":24,"flipIfFlipped":true,"playerId":2} 
 Player 1 21:15:14 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to pay death penalties \n2:Player 2 activated Samson"} 
 Player 1 21:15:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to pay death penalties \n2:Player 2 activated Samson"} 
 Player 1 21:15:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to pay death penalties \n2:Player 2 play 2 Cents(4) "} 
 Player 1 21:15:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to pay death penalties \n2:Player 2 play 2 Cents(4) "} 
 Player 1 21:15:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to pay death penalties \n2:Player 2 play 2 Cents(4) "} 
 Player 1 21:15:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to pay death penalties \n2:Player 2 play 2 Cents(4) "} 
 Player 1 21:15:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to pay death penalties \n2:Player 2 play 2 Cents(4) "} 
 Player 1 21:15:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to pay death penalties \n2:Player 2 play 2 Cents(4) "} 
 Player 1 21:15:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to pay death penalties \n2:Player 2 play 2 Cents(4)  \n3:Player 2 activated Samson"} 
 Player 1 21:15:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to pay death penalties \n2:Player 2 play 2 Cents(4)  \n3:Player 2 activated Samson"} 
 Player 1 21:15:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to pay death penalties \n2:Player 2 play 2 Cents(4)  \n3:Player 2 activated Samson"} 
 Player 1 21:15:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to pay death penalties \n2:Player 2 play 2 Cents(4)  \n3:Player 2 activated Samson"} 
 Player 1 21:15:15 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:15:17 $MOVE_CARD_END:  
 {"moveIndex":49,"cardId":24,"flipIfFlipped":true,"playerId":2} 
 Player 1 21:15:18 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to pay death penalties \n2:Player 2 play 2 Cents(4) "} 
 Player 1 21:15:18 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to pay death penalties \n2:Player 2 play 2 Cents(4) "} 
 Player 1 21:15:18 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to pay death penalties \n2:Player 2 play 2 Cents(4) "} 
 Player 1 21:15:18 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to pay death penalties \n2:Player 2 play 2 Cents(4) "} 
 Player 1 21:15:18 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:15:21 $MOVE_CARD_END:  
 {"moveIndex":50,"cardId":10,"flipIfFlipped":true,"playerId":2} 
 Player 1 21:15:23 $MOVE_CARD_END:  
 {"moveIndex":51,"cardId":147,"flipIfFlipped":true,"playerId":2} 
 Player 1 21:15:24 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 21:15:24 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 21:15:24 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 21:15:24 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 21:15:25 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:15:25 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:15:25 $ACTION_MASSAGE_REMOVE:  
 {"id":471} 
 Player 1 21:15:25 $RECHARGE_ITEM:  
 {"cardId":270} 
 Player 1 21:15:25 $PLAYER_RECHARGE_ITEM:  
 {"playerId":1,"cardId":270} 
 Player 1 21:15:26 $RECHARGE_ITEM:  
 {"cardId":271} 
 Player 1 21:15:26 $PLAYER_RECHARGE_ITEM:  
 {"playerId":1,"cardId":271} 
 Player 1 21:15:26 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:15:26 $NEXT_STACK_ID:  
 Player 1 21:15:26 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:15:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 21:15:26 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":91,"creatorCardId":270,"turnPlayerCardId":270,"stackEffectType":13}} 
 Player 1 21:15:26 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":199,"_text":"Add StartTurnLoot 91 "}} 
 Player 1 21:15:26 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:15:26 $ACTION_MASSAGE_REMOVE:  
 {"id":199} 
 Player 1 21:15:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 21:15:26 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":91,"creatorCardId":270,"turnPlayerCardId":270,"stackEffectType":13}} 
 Player 1 21:15:26 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":200,"_text":"Response Adding StartTurnLoot 91"},"childOfId":199} 
 Player 1 21:15:26 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":201,"_text":"Wait For Response From Player 1 "},"childOfId":199} 
 Player 1 21:15:26 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:15:26 $ACTION_MASSAGE_REMOVE:  
 {"id":201} 
 Player 1 21:15:26 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":202,"_text":"Wait For Response From Player 2 "},"childOfId":199} 
 Player 1 21:15:26 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:15:26 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:15:27 $ACTION_MASSAGE_REMOVE:  
 {"id":202} 
 Player 1 21:15:27 $ACTION_MASSAGE_REMOVE:  
 {"id":200} 
 Player 1 21:15:27 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":203,"_text":"Resolve StartTurnLoot 91 "}} 
 Player 1 21:15:27 $DRAW_CARD:  
 {"deckType":1} 
 Player 1 21:15:27 $MOVE_CARD:  
 {"moveIndex":52,"cardId":107,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 1 21:15:27 $CARD_DRAWN:  
 {"playerId":1,"deckType":1,"drawnCardId":107} 
 Player 1 21:15:27 $FLIP_CARD:  
 {"cardId":107} 
 Player 1 21:15:27 $PLAYER_GET_LOOT:  
 {"playerId":1,"cardId":107} 
 Player 1 21:15:27 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 21:15:27 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":91,"creatorCardId":270,"turnPlayerCardId":270,"stackEffectType":13}} 
 Player 1 21:15:27 $ACTION_MASSAGE_REMOVE:  
 {"id":203} 
 Player 1 21:15:27 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":204,"_text":"Remove After Resolve StartTurnLoot 91  "}} 
 Player 1 21:15:27 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:15:28 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":91,"creatorCardId":270,"turnPlayerCardId":270,"stackEffectType":13}} 
 Player 1 21:15:28 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":205,"_text":"Response Remove After Resolve StartTurnLoot 91"},"childOfId":204} 
 Player 1 21:15:28 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":206,"_text":"Wait For Response From Player 2 "},"childOfId":204} 
 Player 1 21:15:28 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:15:28 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:15:28 $ACTION_MASSAGE_REMOVE:  
 {"id":206} 
 Player 1 21:15:28 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":207,"_text":"Wait For Response From Player 1 "},"childOfId":204} 
 Player 1 21:15:28 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:15:28 $ACTION_MASSAGE_REMOVE:  
 {"id":207} 
 Player 1 21:15:28 $ACTION_MASSAGE_REMOVE:  
 {"id":205} 
 Player 1 21:15:28 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":208,"_text":"Stack Was Emptied "}} 
 Player 1 21:15:28 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:15:28 $ACTION_MASSAGE_REMOVE:  
 {"id":204} 
 Player 1 21:15:30 $ACTION_MASSAGE_REMOVE:  
 {"id":208} 
 Player 1 21:15:30 $ACTION_MASSAGE_REMOVE:  
 {"id":204} 
 Player 1 21:16:00 $NEXT_STACK_ID:  
 Player 1 21:16:00 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:16:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play 3 Cents(20) "} 
 Player 1 21:16:00 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":92,"creatorCardId":270,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":58,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 1 21:16:00 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":209,"_text":"Add PlayLootCardStackEffect 92 "}} 
 Player 1 21:16:00 $PLAYER_LOSE_LOOT:  
 {"playerId":1,"cardId":58} 
 Player 1 21:16:01 $MOVE_CARD:  
 {"moveIndex":53,"cardId":58,"placeID":278,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 21:16:01 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play 3 Cents(20): addMoney"} 
 Player 1 21:16:01 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play 3 Cents(20): addMoney"} 
 Player 1 21:16:01 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:16:01 $ACTION_MASSAGE_REMOVE:  
 {"id":209} 
 Player 1 21:16:01 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play 3 Cents(20): addMoney"} 
 Player 1 21:16:01 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":92,"creatorCardId":270,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":58,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":58,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 21:16:01 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":210,"_text":"Response Adding PlayLootCardStackEffect 92"},"childOfId":209} 
 Player 1 21:16:01 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":211,"_text":"Wait For Response From Player 1 "},"childOfId":209} 
 Player 1 21:16:01 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:16:02 $ACTION_MASSAGE_REMOVE:  
 {"id":211} 
 Player 1 21:16:02 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":212,"_text":"Wait For Response From Player 2 "},"childOfId":209} 
 Player 1 21:16:02 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:16:02 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:16:02 $ACTION_MASSAGE_REMOVE:  
 {"id":212} 
 Player 1 21:16:02 $ACTION_MASSAGE_REMOVE:  
 {"id":210} 
 Player 1 21:16:02 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":213,"_text":"Resolve PlayLootCardStackEffect 92 "}} 
 Player 1 21:16:02 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play 3 Cents(20): addMoney"} 
 Player 1 21:16:02 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":58,"particleType":6} 
 Player 1 21:16:04 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":58,"particleType":6} 
 Player 1 21:16:04 $CHANGE_MONEY:  
 {"playerId":1,"numOfCoins":3} 
 Player 1 21:16:04 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":19,"originStackId":-1},"isAfterActivation":true,"index":19} 
 Player 1 21:16:04 $MOVE_CARD:  
 {"moveIndex":54,"cardId":58,"placeID":279,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 21:16:05 $MOVE_CARD_TO_PILE:  
 {"type":1,"cardId":58} 
 Player 1 21:16:05 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play 3 Cents(20): addMoney"} 
 Player 1 21:16:05 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":92,"creatorCardId":270,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":58,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 21:16:05 $ACTION_MASSAGE_REMOVE:  
 {"id":213} 
 Player 1 21:16:05 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":214,"_text":"Remove After Resolve PlayLootCardStackEffect 92  "}} 
 Player 1 21:16:05 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:16:05 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":92,"creatorCardId":270,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":58,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 21:16:05 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":215,"_text":"Response Remove After Resolve PlayLootCardStackEffect 92"},"childOfId":214} 
 Player 1 21:16:05 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":216,"_text":"Wait For Response From Player 2 "},"childOfId":214} 
 Player 1 21:16:05 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:16:05 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:16:06 $ACTION_MASSAGE_REMOVE:  
 {"id":216} 
 Player 1 21:16:06 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":217,"_text":"Wait For Response From Player 1 "},"childOfId":214} 
 Player 1 21:16:06 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:16:06 $ACTION_MASSAGE_REMOVE:  
 {"id":217} 
 Player 1 21:16:06 $ACTION_MASSAGE_REMOVE:  
 {"id":215} 
 Player 1 21:16:06 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":218,"_text":"Stack Was Emptied "}} 
 Player 1 21:16:06 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:16:06 $ACTION_MASSAGE_REMOVE:  
 {"id":214} 
 Player 1 21:16:07 $ACTION_MASSAGE_REMOVE:  
 {"id":218} 
 Player 1 21:16:08 $ACTION_MASSAGE_REMOVE:  
 {"id":214} 
 Player 1 21:16:08 $NEXT_STACK_ID:  
 Player 1 21:16:08 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:16:09 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1  declared attack on TopBlankCard"} 
 Player 1 21:16:09 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":93,"creatorCardId":270,"attackingPlayerCardId":270,"idOfCardBeingAttacked":0,"stackEffectType":4}} 
 Player 1 21:16:09 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":219,"_text":"Add DeclareAttack 93 "}} 
 Player 1 21:16:09 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:16:09 $ACTION_MASSAGE_REMOVE:  
 {"id":219} 
 Player 1 21:16:09 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1  declared attack on TopBlankCard"} 
 Player 1 21:16:09 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":93,"creatorCardId":270,"attackingPlayerCardId":270,"idOfCardBeingAttacked":0,"stackEffectType":4}} 
 Player 1 21:16:09 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":220,"_text":"Response Adding DeclareAttack 93"},"childOfId":219} 
 Player 1 21:16:09 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":221,"_text":"Wait For Response From Player 1 "},"childOfId":219} 
 Player 1 21:16:09 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:16:09 $ACTION_MASSAGE_REMOVE:  
 {"id":221} 
 Player 1 21:16:09 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":222,"_text":"Wait For Response From Player 2 "},"childOfId":219} 
 Player 1 21:16:09 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:16:09 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:16:09 $ACTION_MASSAGE_REMOVE:  
 {"id":222} 
 Player 1 21:16:09 $ACTION_MASSAGE_REMOVE:  
 {"id":220} 
 Player 1 21:16:10 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":223,"_text":"Resolve DeclareAttack 93 "}} 
 Player 1 21:16:10 $DRAW_CARD:  
 {"deckType":2} 
 Player 1 21:16:10 $SHOW_CARD_PREVIEW:  
 {"cardToShowId":209,"playerId":1} 
 Player 1 21:16:22 $FLIP_CARD:  
 {"cardId":209} 
 Player 1 21:16:22 $ADD_MONSTER:  
 {"monsterPlaceId":2,"monsterId":209} 
 Player 1 21:16:22 $NEW_MONSTER_ON_PLACE:  
 {"cardId":209,"monsterPlaceId":2} 
 Player 1 21:16:22 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":209,"particleType":5} 
 Player 1 21:16:22 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":20,"originStackId":93},"isAfterActivation":true,"index":20} 
 Player 1 21:16:22 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1  declared attack on TopBlankCard"} 
 Player 1 21:16:22 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":93,"creatorCardId":270,"attackingPlayerCardId":270,"idOfCardBeingAttacked":209,"stackEffectType":4}} 
 Player 1 21:16:22 $ACTION_MASSAGE_REMOVE:  
 {"id":223} 
 Player 1 21:16:22 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":224,"_text":"Remove After Resolve DeclareAttack 93  "}} 
 Player 1 21:16:22 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:16:22 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":93,"creatorCardId":270,"attackingPlayerCardId":270,"idOfCardBeingAttacked":209,"stackEffectType":4}} 
 Player 1 21:16:22 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":225,"_text":"Response Remove After Resolve DeclareAttack 93"},"childOfId":224} 
 Player 1 21:16:22 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":226,"_text":"Wait For Response From Player 2 "},"childOfId":224} 
 Player 1 21:16:23 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:16:23 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:16:23 $ACTION_MASSAGE_REMOVE:  
 {"id":226} 
 Player 1 21:16:23 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":227,"_text":"Wait For Response From Player 1 "},"childOfId":224} 
 Player 1 21:16:23 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:16:23 $ACTION_MASSAGE_REMOVE:  
 {"id":227} 
 Player 1 21:16:23 $ACTION_MASSAGE_REMOVE:  
 {"id":225} 
 Player 1 21:16:23 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":228,"_text":"Stack Was Emptied "}} 
 Player 1 21:16:23 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:16:23 $ACTION_MASSAGE_REMOVE:  
 {"id":224} 
 Player 1 21:16:25 $ACTION_MASSAGE_REMOVE:  
 {"id":228} 
 Player 1 21:16:25 $ACTION_MASSAGE_REMOVE:  
 {"id":224} 
 Player 1 21:16:33 $NEXT_STACK_ID:  
 Player 1 21:16:34 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:16:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Charger<Monster>"} 
 Player 1 21:16:34 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":94,"creatorCardId":270,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":209}} 
 Player 1 21:16:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":229,"_text":"Add AttackRoll 94 "}} 
 Player 1 21:16:34 $ROLL_DICE:  
 {"playerId":1} 
 Player 1 21:16:36 $ROLL_DICE_ENDED:  
 {"playerId":1,"numberRolled":2} 
 Player 1 21:16:36 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 2 vs Charger<Monster>"} 
 Player 1 21:16:36 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:16:36 $ACTION_MASSAGE_REMOVE:  
 {"id":229} 
 Player 1 21:16:36 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 2 vs Charger<Monster>"} 
 Player 1 21:16:36 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":94,"creatorCardId":270,"numberRolled":2,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":209}} 
 Player 1 21:16:36 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":230,"_text":"Response Adding AttackRoll 94"},"childOfId":229} 
 Player 1 21:16:36 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":231,"_text":"Wait For Response From Player 1 "},"childOfId":229} 
 Player 1 21:16:36 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:16:36 $ACTION_MASSAGE_REMOVE:  
 {"id":231} 
 Player 1 21:16:36 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":232,"_text":"Wait For Response From Player 2 "},"childOfId":229} 
 Player 1 21:16:36 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:16:36 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:16:36 $ACTION_MASSAGE_REMOVE:  
 {"id":232} 
 Player 1 21:16:37 $ACTION_MASSAGE_REMOVE:  
 {"id":230} 
 Player 1 21:16:37 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":233,"_text":"Resolve AttackRoll 94 "}} 
 Player 1 21:16:37 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":234,"_text":"Added 0 to original roll"}} 
 Player 1 21:16:37 $NEXT_STACK_ID:  
 Player 1 21:16:37 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 2 vs Charger<Monster>"} 
 Player 1 21:16:37 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:16:37 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Charger combat damage to Lilith \n2:Player 1 rolled 2 vs Charger<Monster>"} 
 Player 1 21:16:37 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":95,"creatorCardId":270,"entityToDoDamageCardId":209,"entityToTakeDamageCardId":270,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 21:16:37 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Charger combat damage to Lilith \n2:Player 1 rolled 2 vs Charger<Monster>"} 
 Player 1 21:16:37 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Charger combat damage to Lilith \n2:Player 1 rolled 2 vs Charger<Monster>"} 
 Player 1 21:16:37 $REPLACE_STACK:  
 {"currentStack":[{"entityId":95,"creatorCardId":270,"entityToDoDamageCardId":209,"entityToTakeDamageCardId":270,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":94,"creatorCardId":270,"numberRolled":2,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":209}]} 
 Player 1 21:16:37 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":2},{"type":2,"number":2},{"type":2,"number":5}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":21,"originStackId":94},"isAfterActivation":true,"index":21} 
 Player 1 21:16:37 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Charger combat damage to Lilith \n2:Player 1 rolled 2 vs Charger<Monster>"} 
 Player 1 21:16:37 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":94,"creatorCardId":270,"numberRolled":2,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":209}} 
 Player 1 21:16:37 $ACTION_MASSAGE_REMOVE:  
 {"id":233} 
 Player 1 21:16:37 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":235,"_text":"Remove After Resolve AttackRoll 94  "}} 
 Player 1 21:16:37 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Charger combat damage to Lilith"} 
 Player 1 21:16:37 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":94,"creatorCardId":270,"numberRolled":2,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":209}} 
 Player 1 21:16:37 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":236,"_text":"Response Remove After Resolve AttackRoll 94"},"childOfId":235} 
 Player 1 21:16:38 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":237,"_text":"Wait For Response From Player 1 "},"childOfId":235} 
 Player 1 21:16:38 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:16:38 $ACTION_MASSAGE_REMOVE:  
 {"id":237} 
 Player 1 21:16:38 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":238,"_text":"Wait For Response From Player 2 "},"childOfId":235} 
 Player 1 21:16:38 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:16:38 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:16:38 $ACTION_MASSAGE_REMOVE:  
 {"id":238} 
 Player 1 21:16:38 $ACTION_MASSAGE_REMOVE:  
 {"id":236} 
 Player 1 21:16:38 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":239,"_text":"Resolve CombatDamage 95 "}} 
 Player 1 21:16:39 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Charger 1 combat damage to Lilith"} 
 Player 1 21:16:39 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Charger 1 combat damage to Lilith"} 
 Player 1 21:16:39 $PLAYER_GET_HIT:  
 {"playerId":1,"damage":1,"damageDealerId":209} 
 Player 1 21:16:39 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":209}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":22,"originStackId":-1},"isAfterActivation":true,"index":22} 
 Player 1 21:16:39 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Charger 1 combat damage to Lilith"} 
 Player 1 21:16:39 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":95,"creatorCardId":270,"entityToDoDamageCardId":209,"entityToTakeDamageCardId":270,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 21:16:39 $ACTION_MASSAGE_REMOVE:  
 {"id":239} 
 Player 1 21:16:39 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":240,"_text":"Remove After Resolve CombatDamage 95  "}} 
 Player 1 21:16:39 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:16:39 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":95,"creatorCardId":270,"entityToDoDamageCardId":209,"entityToTakeDamageCardId":270,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 21:16:39 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":241,"_text":"Response Remove After Resolve CombatDamage 95"},"childOfId":240} 
 Player 1 21:16:39 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":242,"_text":"Wait For Response From Player 2 "},"childOfId":240} 
 Player 1 21:16:39 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:16:39 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:16:40 $ACTION_MASSAGE_REMOVE:  
 {"id":242} 
 Player 1 21:16:40 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":243,"_text":"Wait For Response From Player 1 "},"childOfId":240} 
 Player 1 21:16:40 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:16:40 $ACTION_MASSAGE_REMOVE:  
 {"id":243} 
 Player 1 21:16:40 $ACTION_MASSAGE_REMOVE:  
 {"id":241} 
 Player 1 21:16:40 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":244,"_text":"Stack Was Emptied "}} 
 Player 1 21:16:40 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:16:40 $ACTION_MASSAGE_REMOVE:  
 {"id":233} 
 Player 1 21:16:40 $ACTION_MASSAGE_REMOVE:  
 {"id":235} 
 Player 1 21:16:40 $ACTION_MASSAGE_REMOVE:  
 {"id":234} 
 Player 1 21:16:40 $ACTION_MASSAGE_REMOVE:  
 {"id":235} 
 Player 1 21:16:41 $ACTION_MASSAGE_REMOVE:  
 {"id":244} 
 Player 1 21:16:42 $ACTION_MASSAGE_REMOVE:  
 {"id":240} 
 Player 1 21:16:42 $NEXT_STACK_ID:  
 Player 1 21:16:42 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:16:42 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Charger<Monster>"} 
 Player 1 21:16:42 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":96,"creatorCardId":270,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":209}} 
 Player 1 21:16:42 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":245,"_text":"Add AttackRoll 96 "}} 
 Player 1 21:16:42 $ROLL_DICE:  
 {"playerId":1} 
 Player 1 21:16:44 $ROLL_DICE_ENDED:  
 {"playerId":1,"numberRolled":1} 
 Player 1 21:16:44 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 1 vs Charger<Monster>"} 
 Player 1 21:16:44 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:16:44 $ACTION_MASSAGE_REMOVE:  
 {"id":245} 
 Player 1 21:16:44 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 1 vs Charger<Monster>"} 
 Player 1 21:16:45 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":96,"creatorCardId":270,"numberRolled":1,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":209}} 
 Player 1 21:16:45 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":246,"_text":"Response Adding AttackRoll 96"},"childOfId":245} 
 Player 1 21:16:45 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":247,"_text":"Wait For Response From Player 1 "},"childOfId":245} 
 Player 1 21:16:45 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:16:54 $NEXT_STACK_ID:  
 Player 1 21:16:54 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 1 vs Charger<Monster>"} 
 Player 1 21:16:54 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 1 vs Charger<Monster> \n2:Player 1 activated Lilith"} 
 Player 1 21:16:55 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":97,"creatorCardId":270,"hasLockingStackEffect":false,"itemToPlayCardId":270,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 1 21:16:55 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":248,"_text":"Add ActivateItem 97 "}} 
 Player 1 21:16:57 $USE_ITEM:  
 {"cardId":270} 
 Player 1 21:16:57 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:16:57 $ACTION_MASSAGE_REMOVE:  
 {"id":248} 
 Player 1 21:16:57 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 1 vs Charger<Monster> \n2:Player 1 activated Lilith"} 
 Player 1 21:16:57 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":97,"creatorCardId":270,"hasLockingStackEffect":false,"itemToPlayCardId":270,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 21:16:57 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":249,"_text":"Response Adding ActivateItem 97"},"childOfId":248} 
 Player 1 21:16:57 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":250,"_text":"Wait For Response From Player 1 "},"childOfId":248} 
 Player 1 21:16:57 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:17:36 $ACTION_MASSAGE_REMOVE:  
 {"id":250} 
 Player 1 21:17:36 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":251,"_text":"Wait For Response From Player 2 "},"childOfId":248} 
 Player 1 21:17:36 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:17:36 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:17:36 $ACTION_MASSAGE_REMOVE:  
 {"id":251} 
 Player 1 21:17:36 $ACTION_MASSAGE_REMOVE:  
 {"id":249} 
 Player 1 21:17:36 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":252,"_text":"Resolve ActivateItem 97 "}} 
 Player 1 21:17:36 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":270,"particleType":6} 
 Player 1 21:17:38 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":270,"particleType":6} 
 Player 1 21:17:38 $NEXT_STACK_ID:  
 Player 1 21:17:38 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 1 vs Charger<Monster> \n2:Player 1 activated Lilith"} 
 Player 1 21:17:38 $PLAYER_LOSE_LOOT:  
 {"playerId":1,"cardId":91} 
 Player 1 21:17:38 $MOVE_CARD:  
 {"moveIndex":55,"cardId":91,"placeID":278,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 21:17:38 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 1 vs Charger<Monster> \n2:Player 1 play Bomb(4): DealDamage \n3:Player 1 activated Lilith"} 
 Player 1 21:17:39 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 1 vs Charger<Monster> \n2:Player 1 play Bomb(4): DealDamage \n3:Player 1 activated Lilith"} 
 Player 1 21:17:44 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:17:44 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 1 vs Charger<Monster> \n2:Player 1 play Bomb(4): DealDamage \n3:Player 1 activated Lilith"} 
 Player 1 21:17:44 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":98,"creatorCardId":270,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":91,"lootPlayerId":1,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":91,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 21:17:44 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 1 vs Charger<Monster> \n2:Player 1 play Bomb(4): DealDamage \n3:Player 1 activated Lilith"} 
 Player 1 21:17:44 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 1 vs Charger<Monster> \n2:Player 1 play Bomb(4): DealDamage \n3:Player 1 activated Lilith"} 
 Player 1 21:17:44 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 1 vs Charger<Monster> \n2:Player 1 play Bomb(4): DealDamage \n3:Player 1 activated Lilith"} 
 Player 1 21:17:44 $REPLACE_STACK:  
 {"currentStack":[{"entityId":96,"creatorCardId":270,"numberRolled":1,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":209},{"entityId":98,"creatorCardId":270,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":91,"lootPlayerId":1,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":91,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":97,"creatorCardId":270,"hasLockingStackEffect":false,"itemToPlayCardId":270,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 
 Player 1 21:17:44 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 1 vs Charger<Monster> \n2:Player 1 play Bomb(4): DealDamage \n3:Player 1 activated Lilith"} 
 Player 1 21:17:44 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":97,"creatorCardId":270,"hasLockingStackEffect":false,"itemToPlayCardId":270,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 21:17:44 $ACTION_MASSAGE_REMOVE:  
 {"id":252} 
 Player 1 21:17:45 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":253,"_text":"Remove After Resolve ActivateItem 97  "}} 
 Player 1 21:17:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 1 vs Charger<Monster> \n2:Player 1 play Bomb(4): DealDamage"} 
 Player 1 21:17:45 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":97,"creatorCardId":270,"hasLockingStackEffect":false,"itemToPlayCardId":270,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 21:17:45 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":254,"_text":"Response Remove After Resolve ActivateItem 97"},"childOfId":253} 
 Player 1 21:17:45 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":255,"_text":"Wait For Response From Player 1 "},"childOfId":253} 
 Player 1 21:17:45 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:17:47 $ACTION_MASSAGE_REMOVE:  
 {"id":253} 
 Player 1 21:17:56 $ACTION_MASSAGE_REMOVE:  
 {"id":255} 
 Player 1 21:17:56 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":256,"_text":"Wait For Response From Player 2 "},"childOfId":253} 
 Player 1 21:17:56 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:17:56 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:17:57 $ACTION_MASSAGE_REMOVE:  
 {"id":256} 
 Player 1 21:17:57 $ACTION_MASSAGE_REMOVE:  
 {"id":254} 
 Player 1 21:17:57 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":257,"_text":"Resolve PlayLootCardStackEffect 98 "}} 
 Player 1 21:17:57 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 1 vs Charger<Monster> \n2:Player 1 play Bomb(4): DealDamage"} 
 Player 1 21:17:57 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":91,"particleType":6} 
 Player 1 21:17:59 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":91,"particleType":6} 
 Player 1 21:17:59 $MONSTER_GET_DAMAGED:  
 {"cardId":209,"hpLeft":0,"damageDealerId":270} 
 Player 1 21:17:59 $NEXT_STACK_ID:  
 Player 1 21:17:59 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 1 vs Charger<Monster> \n2:Player 1 play Bomb(4): DealDamage"} 
 Player 1 21:17:59 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:17:59 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 1 vs Charger<Monster> \n2:Player 1 play Bomb(4): DealDamage \n3:[object Object] killed by Lilith"} 
 Player 1 21:17:59 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":99,"creatorCardId":270,"monsterToDieCardId":209,"stackEffectType":5,"killerId":270}} 
 Player 1 21:17:59 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 1 vs Charger<Monster> \n2:Player 1 play Bomb(4): DealDamage \n3:[object Object] killed by Lilith"} 
 Player 1 21:17:59 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 1 vs Charger<Monster> \n2:Player 1 play Bomb(4): DealDamage \n3:[object Object] killed by Lilith"} 
 Player 1 21:17:59 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 1 vs Charger<Monster> \n2:Player 1 play Bomb(4): DealDamage \n3:[object Object] killed by Lilith"} 
 Player 1 21:17:59 $REPLACE_STACK:  
 {"currentStack":[{"entityId":96,"creatorCardId":270,"numberRolled":1,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":209},{"entityId":98,"creatorCardId":270,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":91,"lootPlayerId":1,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":91,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":99,"creatorCardId":270,"monsterToDieCardId":209,"stackEffectType":5,"killerId":270}]} 
 Player 1 21:17:59 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":270}],"result":null,"preventMethod":false,"methodScopeId":209,"scopeIsPlayer":false,"index":23,"originStackId":-1},"isAfterActivation":true,"index":23} 
 Player 1 21:17:59 $MOVE_CARD:  
 {"moveIndex":56,"cardId":91,"placeID":279,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 21:18:00 $MOVE_CARD_TO_PILE:  
 {"type":1,"cardId":91} 
 Player 1 21:18:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 1 vs Charger<Monster> \n2:Player 1 play Bomb(4): DealDamage \n3:[object Object] killed by Lilith"} 
 Player 1 21:18:00 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":98,"creatorCardId":270,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":91,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 21:18:00 $ACTION_MASSAGE_REMOVE:  
 {"id":257} 
 Player 1 21:18:00 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":258,"_text":"Remove After Resolve PlayLootCardStackEffect 98  "}} 
 Player 1 21:18:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 1 vs Charger<Monster> \n2:[object Object] killed by Lilith"} 
 Player 1 21:18:00 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":98,"creatorCardId":270,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":91,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 21:18:00 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":259,"_text":"Response Remove After Resolve PlayLootCardStackEffect 98"},"childOfId":258} 
 Player 1 21:18:00 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":260,"_text":"Wait For Response From Player 1 "},"childOfId":258} 
 Player 1 21:18:00 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:18:03 $ACTION_MASSAGE_REMOVE:  
 {"id":258} 
 Player 1 21:18:25 $ACTION_MASSAGE_REMOVE:  
 {"id":260} 
 Player 1 21:18:25 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":261,"_text":"Wait For Response From Player 2 "},"childOfId":258} 
 Player 1 21:18:25 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:18:25 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:18:25 $ACTION_MASSAGE_REMOVE:  
 {"id":261} 
 Player 1 21:18:25 $ACTION_MASSAGE_REMOVE:  
 {"id":259} 
 Player 1 21:18:25 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":262,"_text":"Resolve MonsterDeath 99 "}} 
 Player 1 21:18:25 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":209,"particleType":5} 
 Player 1 21:18:25 $CANCEL_ATTACK:  
 Player 1 21:18:25 $NEXT_STACK_ID:  
 Player 1 21:18:25 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 1 vs Charger<Monster> \n2:[object Object] killed by Lilith"} 
 Player 1 21:18:25 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:18:25 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 1 vs Charger<Monster> \n2:Player 1 get Charger<Monster> reward \n3:[object Object] killed by Lilith"} 
 Player 1 21:18:25 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":100,"creatorCardId":270,"monsterCardWithRewardId":209,"playerCardIdToReward":270,"stackEffectType":7}} 
 Player 1 21:18:25 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 1 vs Charger<Monster> \n2:Player 1 get Charger<Monster> reward \n3:[object Object] killed by Lilith"} 
 Player 1 21:18:25 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 1 vs Charger<Monster> \n2:Player 1 get Charger<Monster> reward \n3:[object Object] killed by Lilith"} 
 Player 1 21:18:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 1 vs Charger<Monster> \n2:Player 1 get Charger<Monster> reward \n3:[object Object] killed by Lilith"} 
 Player 1 21:18:26 $REPLACE_STACK:  
 {"currentStack":[{"entityId":96,"creatorCardId":270,"numberRolled":1,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":209},{"entityId":100,"creatorCardId":270,"monsterCardWithRewardId":209,"playerCardIdToReward":270,"stackEffectType":7},{"entityId":99,"creatorCardId":270,"monsterToDieCardId":209,"stackEffectType":5,"killerId":270}]} 
 Player 1 21:18:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 1 vs Charger<Monster> \n2:Player 1 get Charger<Monster> reward \n3:[object Object] killed by Lilith"} 
 Player 1 21:18:26 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":99,"creatorCardId":270,"monsterToDieCardId":209,"stackEffectType":5,"killerId":270}} 
 Player 1 21:18:26 $ACTION_MASSAGE_REMOVE:  
 {"id":262} 
 Player 1 21:18:26 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":263,"_text":"Remove After Resolve MonsterDeath 99  "}} 
 Player 1 21:18:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 1 vs Charger<Monster> \n2:Player 1 get Charger<Monster> reward"} 
 Player 1 21:18:26 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":99,"creatorCardId":270,"monsterToDieCardId":209,"stackEffectType":5,"killerId":270}} 
 Player 1 21:18:26 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":264,"_text":"Response Remove After Resolve MonsterDeath 99"},"childOfId":263} 
 Player 1 21:18:26 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":265,"_text":"Wait For Response From Player 1 "},"childOfId":263} 
 Player 1 21:18:26 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:18:28 $ACTION_MASSAGE_REMOVE:  
 {"id":263} 
 Player 1 21:18:35 $ACTION_MASSAGE_REMOVE:  
 {"id":265} 
 Player 1 21:18:35 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":266,"_text":"Wait For Response From Player 2 "},"childOfId":263} 
 Player 1 21:18:35 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:18:35 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:18:35 $ACTION_MASSAGE_REMOVE:  
 {"id":266} 
 Player 1 21:18:35 $ACTION_MASSAGE_REMOVE:  
 {"id":264} 
 Player 1 21:18:35 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":267,"_text":"Resolve MonsterRewardStackEffect 100 "}} 
 Player 1 21:18:35 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":209,"scopeIsPlayer":false,"index":24,"originStackId":100},"isAfterActivation":true,"index":24} 
 Player 1 21:18:35 $CHANGE_MONEY:  
 {"playerId":1,"numOfCoins":3} 
 Player 1 21:18:35 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":25,"originStackId":-1},"isAfterActivation":true,"index":25} 
 Player 1 21:18:35 $NEXT_STACK_ID:  
 Player 1 21:18:36 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 1 vs Charger<Monster> \n2:Player 1 get Charger<Monster> reward"} 
 Player 1 21:18:36 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 1 vs Charger<Monster> \n2:Player 1 get Charger<Monster> reward \n3:Activate Midas Touch effect AddMoney<AddMoney>"} 
 Player 1 21:18:36 $ADD_TO_STACK:  
 {"stackEffect":{"effectCollectedData":null,"entityId":101,"creatorCardId":270,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":175,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":175,"effctType":0},"isAfterActivation":true,"index":24,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 21:18:36 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":268,"_text":"Add ActivatePassiveEffect 101 "}} 
 Player 1 21:18:36 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 1 vs Charger<Monster> \n2:Player 1 get Charger<Monster> reward \n3:Activate Midas Touch effect AddMoney<AddMoney>"} 
 Player 1 21:18:36 $ACTION_MASSAGE_REMOVE:  
 {"id":268} 
 Player 1 21:18:36 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 1 vs Charger<Monster> \n2:Player 1 get Charger<Monster> reward \n3:Activate Midas Touch effect AddMoney<AddMoney>"} 
 Player 1 21:18:36 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"effectCollectedData":{"effectTargets":[270],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":270,"effectCardPlayer":270},"entityId":101,"creatorCardId":270,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":175,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":175,"effctType":0},"isAfterActivation":true,"index":24,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 21:18:36 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":269,"_text":"Response Adding ActivatePassiveEffect 101"},"childOfId":268} 
 Player 1 21:18:36 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":270,"_text":"Wait For Response From Player 2 "},"childOfId":268} 
 Player 1 21:18:36 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:18:36 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:18:36 $ACTION_MASSAGE_REMOVE:  
 {"id":270} 
 Player 1 21:18:36 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":271,"_text":"Wait For Response From Player 1 "},"childOfId":268} 
 Player 1 21:18:36 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:18:41 $ACTION_MASSAGE_REMOVE:  
 {"id":271} 
 Player 1 21:18:41 $ACTION_MASSAGE_REMOVE:  
 {"id":269} 
 Player 1 21:18:42 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":272,"_text":"Resolve ActivatePassiveEffect 101 "}} 
 Player 1 21:18:42 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":175,"particleType":6} 
 Player 1 21:18:43 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":175,"particleType":6} 
 Player 1 21:18:43 $CHANGE_MONEY:  
 {"playerId":1,"numOfCoins":3} 
 Player 1 21:18:43 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":26,"originStackId":-1},"isAfterActivation":true,"index":26} 
 Player 1 21:18:43 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":209,"scopeIsPlayer":false,"index":24,"originStackId":100},"isAfterActivation":true,"index":24} 
 Player 1 21:18:43 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 1 vs Charger<Monster> \n2:Player 1 get Charger<Monster> reward \n3:Activate Midas Touch effect AddMoney<AddMoney>"} 
 Player 1 21:18:44 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"effectCollectedData":{"effectTargets":[270],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":270,"effectCardPlayer":270},"entityId":101,"creatorCardId":270,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":175,"isAfterActivation":true,"index":24,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 21:18:44 $ACTION_MASSAGE_REMOVE:  
 {"id":272} 
 Player 1 21:18:44 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":273,"_text":"Remove After Resolve ActivatePassiveEffect 101  "}} 
 Player 1 21:18:44 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 1 vs Charger<Monster> \n2:Player 1 get Charger<Monster> reward"} 
 Player 1 21:18:44 $REMOVE_FROM_STACK:  
 {"stackEffect":{"effectCollectedData":{"effectTargets":[270],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":270,"effectCardPlayer":270},"entityId":101,"creatorCardId":270,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":175,"isAfterActivation":true,"index":24,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 21:18:44 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":274,"_text":"Response Remove After Resolve ActivatePassiveEffect 101"},"childOfId":273} 
 Player 1 21:18:44 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":275,"_text":"Wait For Response From Player 1 "},"childOfId":273} 
 Player 1 21:18:44 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:18:46 $ACTION_MASSAGE_REMOVE:  
 {"id":273} 
 Player 1 21:18:54 $ACTION_MASSAGE_REMOVE:  
 {"id":275} 
 Player 1 21:18:54 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":276,"_text":"Wait For Response From Player 2 "},"childOfId":273} 
 Player 1 21:18:54 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:18:55 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:18:55 $ACTION_MASSAGE_REMOVE:  
 {"id":276} 
 Player 1 21:18:55 $ACTION_MASSAGE_REMOVE:  
 {"id":274} 
 Player 1 21:18:55 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":277,"_text":"Resolve MonsterRewardStackEffect 100 "}} 
 Player 1 21:18:55 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":278,"_text":"Fizzle MonsterRewardStackEffect 100"}} 
 Player 1 21:18:55 $MOVE_CARD:  
 {"moveIndex":57,"cardId":209,"placeID":281,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 21:18:55 $MOVE_CARD_TO_PILE:  
 {"type":2,"cardId":209} 
 Player 1 21:18:55 $REMOVE_MONSTER:  
 {"holderId":2,"monsterId":209} 
 Player 1 21:18:56 $GET_NEXT_MONSTER:  
 {"monsterPlaceId":2} 
 Player 1 21:18:56 $ACTION_MASSAGE_REMOVE:  
 {"id":267} 
 Player 1 21:18:56 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":279,"_text":"Resolve AttackRoll 96 "}} 
 Player 1 21:18:56 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":280,"_text":"Added 0 to original roll"}} 
 Player 1 21:18:56 $NEXT_STACK_ID:  
 Player 1 21:18:56 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 1 vs Charger<Monster>"} 
 Player 1 21:18:56 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:18:56 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Charger combat damage to Lilith \n2:Player 1 rolled 1 vs Charger<Monster>"} 
 Player 1 21:18:56 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":102,"creatorCardId":270,"entityToDoDamageCardId":209,"entityToTakeDamageCardId":270,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 21:18:56 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Charger combat damage to Lilith \n2:Player 1 rolled 1 vs Charger<Monster>"} 
 Player 1 21:18:56 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Charger combat damage to Lilith \n2:Player 1 rolled 1 vs Charger<Monster>"} 
 Player 1 21:18:56 $REPLACE_STACK:  
 {"currentStack":[{"entityId":102,"creatorCardId":270,"entityToDoDamageCardId":209,"entityToTakeDamageCardId":270,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":96,"creatorCardId":270,"numberRolled":1,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":209}]} 
 Player 1 21:18:56 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":1},{"type":2,"number":5}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":27,"originStackId":96},"isAfterActivation":true,"index":27} 
 Player 1 21:18:56 $ACTION_MASSAGE_REMOVE:  
 {"id":279} 
 Player 1 21:18:56 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":281,"_text":"Remove After Resolve AttackRoll 96  "}} 
 Player 1 21:18:56 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Charger combat damage to Lilith"} 
 Player 1 21:18:56 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":96,"creatorCardId":270,"numberRolled":1,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":209}} 
 Player 1 21:18:56 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":282,"_text":"Response Remove After Resolve AttackRoll 96"},"childOfId":281} 
 Player 1 21:18:56 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":283,"_text":"Wait For Response From Player 1 "},"childOfId":281} 
 Player 1 21:18:56 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:18:58 $ACTION_MASSAGE_REMOVE:  
 {"id":278} 
 Player 1 21:18:59 $ACTION_MASSAGE_REMOVE:  
 {"id":280} 
 Player 1 21:18:59 $ACTION_MASSAGE_REMOVE:  
 {"id":281} 
 Player 1 21:19:03 $ACTION_MASSAGE_REMOVE:  
 {"id":283} 
 Player 1 21:19:03 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":284,"_text":"Wait For Response From Player 2 "},"childOfId":281} 
 Player 1 21:19:03 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:19:04 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:19:04 $ACTION_MASSAGE_REMOVE:  
 {"id":284} 
 Player 1 21:19:04 $ACTION_MASSAGE_REMOVE:  
 {"id":282} 
 Player 1 21:19:04 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":285,"_text":"Resolve CombatDamage 102 "}} 
 Player 1 21:19:04 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Charger 1 combat damage to Lilith"} 
 Player 1 21:19:04 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Charger 1 combat damage to Lilith"} 
 Player 1 21:19:04 $PLAYER_GET_HIT:  
 {"playerId":1,"damage":1,"damageDealerId":209} 
 Player 1 21:19:04 $NEXT_STACK_ID:  
 Player 1 21:19:04 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Charger 1 combat damage to Lilith"} 
 Player 1 21:19:04 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:19:04 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Charger 1 combat damage to Lilith \n2:Player 1 is about to die"} 
 Player 1 21:19:04 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":103,"creatorCardId":270,"playerToDieCardId":270,"stackEffectType":15,"killerId":209}} 
 Player 1 21:19:04 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Charger 1 combat damage to Lilith \n2:Player 1 is about to die"} 
 Player 1 21:19:04 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Charger 1 combat damage to Lilith \n2:Player 1 is about to die"} 
 Player 1 21:19:04 $REPLACE_STACK:  
 {"currentStack":[{"entityId":102,"creatorCardId":270,"entityToDoDamageCardId":209,"entityToTakeDamageCardId":270,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":103,"creatorCardId":270,"playerToDieCardId":270,"stackEffectType":15,"killerId":209}]} 
 Player 1 21:19:04 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":209}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":28,"originStackId":-1},"isAfterActivation":true,"index":28} 
 Player 1 21:19:04 $ACTION_MASSAGE_REMOVE:  
 {"id":285} 
 Player 1 21:19:04 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":286,"_text":"Remove After Resolve CombatDamage 102  "}} 
 Player 1 21:19:04 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to die"} 
 Player 1 21:19:04 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":102,"creatorCardId":270,"entityToDoDamageCardId":209,"entityToTakeDamageCardId":270,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 21:19:04 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":287,"_text":"Response Remove After Resolve CombatDamage 102"},"childOfId":286} 
 Player 1 21:19:04 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":288,"_text":"Wait For Response From Player 1 "},"childOfId":286} 
 Player 1 21:19:05 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:19:06 $ACTION_MASSAGE_REMOVE:  
 {"id":288} 
 Player 1 21:19:06 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":289,"_text":"Wait For Response From Player 2 "},"childOfId":286} 
 Player 1 21:19:06 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:19:07 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:19:07 $ACTION_MASSAGE_REMOVE:  
 {"id":289} 
 Player 1 21:19:07 $ACTION_MASSAGE_REMOVE:  
 {"id":287} 
 Player 1 21:19:07 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":290,"_text":"Resolve PlayerDeath 103 "}} 
 Player 1 21:19:07 $NEXT_STACK_ID:  
 Player 1 21:19:07 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to die"} 
 Player 1 21:19:07 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:19:07 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 
 Player 1 21:19:07 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":104,"creatorCardId":270,"playerToPayCardId":270,"stackEffectType":16}} 
 Player 1 21:19:07 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 
 Player 1 21:19:07 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 
 Player 1 21:19:07 $REPLACE_STACK:  
 {"currentStack":[{"entityId":103,"creatorCardId":270,"playerToDieCardId":270,"stackEffectType":15,"killerId":209},{"entityId":104,"creatorCardId":270,"playerToPayCardId":270,"stackEffectType":16}]} 
 Player 1 21:19:07 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 
 Player 1 21:19:07 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":103,"creatorCardId":270,"playerToDieCardId":270,"stackEffectType":15,"killerId":209}} 
 Player 1 21:19:07 $ACTION_MASSAGE_REMOVE:  
 {"id":290} 
 Player 1 21:19:07 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":291,"_text":"Remove After Resolve PlayerDeath 103  "}} 
 Player 1 21:19:07 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 1 21:19:07 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":103,"creatorCardId":270,"playerToDieCardId":270,"stackEffectType":15,"killerId":209}} 
 Player 1 21:19:07 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":292,"_text":"Response Remove After Resolve PlayerDeath 103"},"childOfId":291} 
 Player 1 21:19:07 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":293,"_text":"Wait For Response From Player 1 "},"childOfId":291} 
 Player 1 21:19:07 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:19:07 $ACTION_MASSAGE_REMOVE:  
 {"id":286} 
 Player 1 21:19:10 $ACTION_MASSAGE_REMOVE:  
 {"id":291} 
 Player 1 21:19:17 $ACTION_MASSAGE_REMOVE:  
 {"id":293} 
 Player 1 21:19:17 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":294,"_text":"Wait For Response From Player 2 "},"childOfId":291} 
 Player 1 21:19:17 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:19:17 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:19:17 $ACTION_MASSAGE_REMOVE:  
 {"id":294} 
 Player 1 21:19:17 $ACTION_MASSAGE_REMOVE:  
 {"id":292} 
 Player 1 21:19:17 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":295,"_text":"Resolve PlayerDeathPenalties 104 "}} 
 Player 1 21:19:17 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":296,"_text":"Player 1 pays Penalties"}} 
 Player 1 21:22:58 $PLAYER_LOSE_LOOT:  
 {"playerId":1,"cardId":52} 
 Player 1 21:22:58 $MOVE_CARD:  
 {"moveIndex":58,"cardId":52,"placeID":279,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 21:22:59 $MOVE_CARD_TO_PILE:  
 {"type":1,"cardId":52} 
 Player 1 21:23:01 $REMOVE_FROM_PASSIVE_MANAGER:  
 {"cardId":175} 
 Player 1 21:23:01 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_LOSE_ITEM","args":[{"type":0,"number":175}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":29,"originStackId":-1},"isAfterActivation":true,"index":29} 
 Player 1 21:23:01 $MOVE_CARD:  
 {"moveIndex":59,"cardId":175,"placeID":281,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 21:23:01 $MOVE_CARD_TO_PILE:  
 {"type":5,"cardId":175} 
 Player 1 21:23:01 $USE_ITEM:  
 {"cardId":270} 
 Player 1 21:23:01 $USE_ITEM:  
 {"cardId":271} 
 Player 1 21:23:01 $ACTION_MASSAGE_REMOVE:  
 {"id":296} 
 Player 1 21:23:01 $PLAYER_DIED:  
 {"playerId":1} 
 Player 1 21:23:01 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 1 21:23:01 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":104,"creatorCardId":270,"playerToPayCardId":270,"stackEffectType":16}} 
 Player 1 21:23:01 $ACTION_MASSAGE_REMOVE:  
 {"id":295} 
 Player 1 21:23:01 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":297,"_text":"Remove After Resolve PlayerDeathPenalties 104  "}} 
 Player 1 21:23:01 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:23:01 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":104,"creatorCardId":270,"playerToPayCardId":270,"stackEffectType":16}} 
 Player 1 21:23:02 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":298,"_text":"Response Remove After Resolve PlayerDeathPenalties 104"},"childOfId":297} 
 Player 1 21:23:02 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":299,"_text":"Wait For Response From Player 2 "},"childOfId":297} 
 Player 1 21:23:02 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:23:02 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:23:02 $ACTION_MASSAGE_REMOVE:  
 {"id":299} 
 Player 1 21:23:02 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":300,"_text":"Wait For Response From Player 1 "},"childOfId":297} 
 Player 1 21:23:02 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:23:02 $ACTION_MASSAGE_REMOVE:  
 {"id":300} 
 Player 1 21:23:02 $ACTION_MASSAGE_REMOVE:  
 {"id":298} 
 Player 1 21:23:02 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":301,"_text":"Stack Was Emptied "}} 
 Player 1 21:23:02 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:23:02 $ACTION_MASSAGE_REMOVE:  
 {"id":246} 
 Player 1 21:23:02 $ACTION_MASSAGE_REMOVE:  
 {"id":247} 
 Player 1 21:23:02 $ACTION_MASSAGE_REMOVE:  
 {"id":267} 
 Player 1 21:23:02 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:23:02 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:23:02 $ACTION_MASSAGE_REMOVE:  
 {"id":246} 
 Player 1 21:23:02 $REPLACE_STACK:  
 {"currentStack":[]} 
 Player 1 21:23:02 $END_TURN:  
 Player 1 21:23:02 $SET_TURN:  
 {"playerId":2} 
 Player 1 21:23:02 $START_TURN:  
 {"playerId":2} 
 Player 1 21:23:02 $ACTION_MASSAGE_REMOVE:  
 {"id":247} 
 Player 1 21:23:02 $ACTION_MASSAGE_REMOVE:  
 {"id":246} 
 Player 1 21:23:03 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:23:03 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:23:03 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 21:23:03 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 21:23:03 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:23:03 $ACTION_MASSAGE_REMOVE:  
 {"id":301} 
 Player 1 21:23:03 $MOVE_CARD_END:  
 {"moveIndex":60,"cardId":136,"flipIfFlipped":false,"playerId":2} 
 Player 1 21:23:04 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 21:23:04 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 21:23:04 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 21:23:04 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 21:23:04 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:23:04 $ACTION_MASSAGE_REMOVE:  
 {"id":297} 
 Player 1 21:23:10 $CHANGE_MONEY:  
 {"playerId":1,"numOfCoins":1} 
 Player 1 21:23:10 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":1}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":30,"originStackId":-1},"isAfterActivation":true,"index":30} 
 Player 1 21:23:27 $MOVE_CARD:  
 {"moveIndex":61,"cardId":175,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Hand"} 
 Player 1 21:23:28 $MOVE_CARD:  
 {"moveIndex":62,"cardId":175,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 
 Player 1 21:23:28 $ADD_AN_ITEM:  
 {"playerId":1,"cardId":175,"isReward":true} 
 Player 1 21:23:28 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":175}],"result":true,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":31,"originStackId":-1},"isAfterActivation":true,"index":31} 
 Player 1 21:23:48 $MOVE_CARD:  
 {"moveIndex":63,"cardId":37,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Hand"} 
 Player 1 21:23:48 $PLAYER_GET_LOOT:  
 {"playerId":1,"cardId":37} 
 Player 1 21:23:54 $RECHARGE_ITEM:  
 {"cardId":270} 
 Player 1 21:23:54 $RECHARGE_ITEM:  
 {"cardId":271} 
 Player 1 21:24:17 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:24:17 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:24:17 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard"} 
 Player 1 21:24:17 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard"} 
 Player 1 21:24:18 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:24:21 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard"} 
 Player 1 21:24:21 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard"} 
 Player 1 21:24:21 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on Fly"} 
 Player 1 21:24:21 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on Fly"} 
 Player 1 21:24:21 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:24:26 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:24:26 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:24:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Fly<Monster>"} 
 Player 1 21:24:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Fly<Monster>"} 
 Player 1 21:24:28 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:24:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Fly<Monster>"} 
 Player 1 21:24:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Fly<Monster>"} 
 Player 1 21:24:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to Fly"} 
 Player 1 21:24:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to Fly"} 
 Player 1 21:24:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to Fly"} 
 Player 1 21:24:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to Fly"} 
 Player 1 21:24:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to Fly \n2:Player 2 is rolling against Fly<Monster>"} 
 Player 1 21:24:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to Fly \n2:Player 2 is rolling against Fly<Monster>"} 
 Player 1 21:24:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to Fly \n2:Player 2 is rolling against Fly<Monster>"} 
 Player 1 21:24:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to Fly \n2:Player 2 is rolling against Fly<Monster>"} 
 Player 1 21:24:28 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:24:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to Fly"} 
 Player 1 21:24:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to Fly"} 
 Player 1 21:24:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by undefined"} 
 Player 1 21:24:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by undefined"} 
 Player 1 21:24:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by undefined"} 
 Player 1 21:24:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by undefined"} 
 Player 1 21:24:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to Fly \n2:[object Object] killed by undefined"} 
 Player 1 21:24:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to Fly \n2:[object Object] killed by undefined"} 
 Player 1 21:24:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to Fly \n2:[object Object] killed by undefined"} 
 Player 1 21:24:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to Fly \n2:[object Object] killed by undefined"} 
 Player 1 21:24:29 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:24:30 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by undefined"} 
 Player 1 21:24:30 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by undefined"} 
 Player 1 21:24:30 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Fly<Monster> reward"} 
 Player 1 21:24:30 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Fly<Monster> reward"} 
 Player 1 21:24:30 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Fly<Monster> reward"} 
 Player 1 21:24:30 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Fly<Monster> reward"} 
 Player 1 21:24:30 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Fly<Monster> reward \n2:[object Object] killed by undefined"} 
 Player 1 21:24:30 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Fly<Monster> reward \n2:[object Object] killed by undefined"} 
 Player 1 21:24:30 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Fly<Monster> reward \n2:[object Object] killed by undefined"} 
 Player 1 21:24:30 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Fly<Monster> reward \n2:[object Object] killed by undefined"} 
 Player 1 21:24:30 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:24:31 $MOVE_CARD_END:  
 {"moveIndex":64,"cardId":226,"flipIfFlipped":true,"playerId":2} 
 Player 1 21:25:12 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:25:12 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:25:12 $NEXT_STACK_ID:  
 Player 1 21:25:12 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:25:12 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 21:25:12 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":111,"creatorCardId":270,"turnPlayerCardId":270,"stackEffectType":13}} 
 Player 1 21:25:12 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":302,"_text":"Add StartTurnLoot 111 "}} 
 Player 1 21:25:12 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:25:12 $ACTION_MASSAGE_REMOVE:  
 {"id":302} 
 Player 1 21:25:12 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 21:25:12 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":111,"creatorCardId":270,"turnPlayerCardId":270,"stackEffectType":13}} 
 Player 1 21:25:12 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":303,"_text":"Response Adding StartTurnLoot 111"},"childOfId":302} 
 Player 1 21:25:12 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":304,"_text":"Wait For Response From Player 1 "},"childOfId":302} 
 Player 1 21:25:12 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:25:12 $ACTION_MASSAGE_REMOVE:  
 {"id":304} 
 Player 1 21:25:13 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":305,"_text":"Wait For Response From Player 2 "},"childOfId":302} 
 Player 1 21:25:13 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:25:13 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:25:13 $ACTION_MASSAGE_REMOVE:  
 {"id":305} 
 Player 1 21:25:13 $ACTION_MASSAGE_REMOVE:  
 {"id":303} 
 Player 1 21:25:13 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":306,"_text":"Resolve StartTurnLoot 111 "}} 
 Player 1 21:25:13 $DRAW_CARD:  
 {"deckType":1} 
 Player 1 21:25:13 $MOVE_CARD:  
 {"moveIndex":65,"cardId":64,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 1 21:25:13 $CARD_DRAWN:  
 {"playerId":1,"deckType":1,"drawnCardId":64} 
 Player 1 21:25:13 $FLIP_CARD:  
 {"cardId":64} 
 Player 1 21:25:13 $PLAYER_GET_LOOT:  
 {"playerId":1,"cardId":64} 
 Player 1 21:25:13 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 21:25:13 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":111,"creatorCardId":270,"turnPlayerCardId":270,"stackEffectType":13}} 
 Player 1 21:25:13 $ACTION_MASSAGE_REMOVE:  
 {"id":306} 
 Player 1 21:25:13 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":307,"_text":"Remove After Resolve StartTurnLoot 111  "}} 
 Player 1 21:25:13 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:25:13 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":111,"creatorCardId":270,"turnPlayerCardId":270,"stackEffectType":13}} 
 Player 1 21:25:13 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":308,"_text":"Response Remove After Resolve StartTurnLoot 111"},"childOfId":307} 
 Player 1 21:25:14 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":309,"_text":"Wait For Response From Player 2 "},"childOfId":307} 
 Player 1 21:25:14 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:25:14 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:25:14 $ACTION_MASSAGE_REMOVE:  
 {"id":309} 
 Player 1 21:25:14 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":310,"_text":"Wait For Response From Player 1 "},"childOfId":307} 
 Player 1 21:25:14 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:25:14 $ACTION_MASSAGE_REMOVE:  
 {"id":310} 
 Player 1 21:25:14 $ACTION_MASSAGE_REMOVE:  
 {"id":308} 
 Player 1 21:25:14 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":311,"_text":"Stack Was Emptied "}} 
 Player 1 21:25:14 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:25:14 $ACTION_MASSAGE_REMOVE:  
 {"id":307} 
 Player 1 21:25:15 $ACTION_MASSAGE_REMOVE:  
 {"id":311} 
 Player 1 21:25:16 $ACTION_MASSAGE_REMOVE:  
 {"id":307} 
 Player 1 21:25:43 $NEXT_STACK_ID:  
 Player 1 21:25:43 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:25:43 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play 4 Cents(4) "} 
 Player 1 21:25:44 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":112,"creatorCardId":270,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":64,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 1 21:25:44 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":312,"_text":"Add PlayLootCardStackEffect 112 "}} 
 Player 1 21:25:44 $PLAYER_LOSE_LOOT:  
 {"playerId":1,"cardId":64} 
 Player 1 21:25:44 $MOVE_CARD:  
 {"moveIndex":66,"cardId":64,"placeID":278,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 21:25:44 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play 4 Cents(4): addMoney"} 
 Player 1 21:25:44 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play 4 Cents(4): addMoney"} 
 Player 1 21:25:44 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:25:44 $ACTION_MASSAGE_REMOVE:  
 {"id":312} 
 Player 1 21:25:44 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play 4 Cents(4): addMoney"} 
 Player 1 21:25:44 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":112,"creatorCardId":270,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":64,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":64,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 21:25:44 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":313,"_text":"Response Adding PlayLootCardStackEffect 112"},"childOfId":312} 
 Player 1 21:25:44 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":314,"_text":"Wait For Response From Player 1 "},"childOfId":312} 
 Player 1 21:25:44 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:25:44 $ACTION_MASSAGE_REMOVE:  
 {"id":314} 
 Player 1 21:25:44 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":315,"_text":"Wait For Response From Player 2 "},"childOfId":312} 
 Player 1 21:25:44 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:25:44 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:25:45 $ACTION_MASSAGE_REMOVE:  
 {"id":315} 
 Player 1 21:25:45 $ACTION_MASSAGE_REMOVE:  
 {"id":313} 
 Player 1 21:25:45 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":316,"_text":"Resolve PlayLootCardStackEffect 112 "}} 
 Player 1 21:25:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play 4 Cents(4): addMoney"} 
 Player 1 21:25:45 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":64,"particleType":6} 
 Player 1 21:25:47 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":64,"particleType":6} 
 Player 1 21:25:47 $CHANGE_MONEY:  
 {"playerId":1,"numOfCoins":4} 
 Player 1 21:25:47 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":32,"originStackId":-1},"isAfterActivation":true,"index":32} 
 Player 1 21:25:47 $MOVE_CARD:  
 {"moveIndex":67,"cardId":64,"placeID":279,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 21:25:47 $MOVE_CARD_TO_PILE:  
 {"type":1,"cardId":64} 
 Player 1 21:25:47 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play 4 Cents(4): addMoney"} 
 Player 1 21:25:47 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":112,"creatorCardId":270,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":64,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 21:25:47 $ACTION_MASSAGE_REMOVE:  
 {"id":316} 
 Player 1 21:25:47 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":317,"_text":"Remove After Resolve PlayLootCardStackEffect 112  "}} 
 Player 1 21:25:47 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:25:47 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":112,"creatorCardId":270,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":64,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 21:25:47 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":318,"_text":"Response Remove After Resolve PlayLootCardStackEffect 112"},"childOfId":317} 
 Player 1 21:25:47 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":319,"_text":"Wait For Response From Player 2 "},"childOfId":317} 
 Player 1 21:25:47 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:25:47 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:25:48 $ACTION_MASSAGE_REMOVE:  
 {"id":319} 
 Player 1 21:25:48 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":320,"_text":"Wait For Response From Player 1 "},"childOfId":317} 
 Player 1 21:25:48 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:25:48 $ACTION_MASSAGE_REMOVE:  
 {"id":320} 
 Player 1 21:25:48 $ACTION_MASSAGE_REMOVE:  
 {"id":318} 
 Player 1 21:25:48 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":321,"_text":"Stack Was Emptied "}} 
 Player 1 21:25:48 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:25:48 $ACTION_MASSAGE_REMOVE:  
 {"id":317} 
 Player 1 21:25:49 $NEXT_STACK_ID:  
 Player 1 21:25:49 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:25:49 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to buy TopBlankCard for 10"} 
 Player 1 21:25:49 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":113,"creatorCardId":270,"itemToPurchaseCardId":0,"playerWhoBuysCardId":270,"cost":10,"stackEffectType":9}} 
 Player 1 21:25:49 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":322,"_text":"Add PurchaseItem 113 "}} 
 Player 1 21:25:49 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:25:49 $ACTION_MASSAGE_REMOVE:  
 {"id":322} 
 Player 1 21:25:49 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to buy TopBlankCard for 10"} 
 Player 1 21:25:49 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":113,"creatorCardId":270,"itemToPurchaseCardId":0,"playerWhoBuysCardId":270,"cost":10,"stackEffectType":9}} 
 Player 1 21:25:49 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":323,"_text":"Response Adding PurchaseItem 113"},"childOfId":322} 
 Player 1 21:25:49 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":324,"_text":"Wait For Response From Player 1 "},"childOfId":322} 
 Player 1 21:25:49 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:25:49 $ACTION_MASSAGE_REMOVE:  
 {"id":324} 
 Player 1 21:25:49 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":325,"_text":"Wait For Response From Player 2 "},"childOfId":322} 
 Player 1 21:25:49 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:25:49 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:25:49 $ACTION_MASSAGE_REMOVE:  
 {"id":321} 
 Player 1 21:25:49 $ACTION_MASSAGE_REMOVE:  
 {"id":325} 
 Player 1 21:25:49 $ACTION_MASSAGE_REMOVE:  
 {"id":323} 
 Player 1 21:25:49 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":326,"_text":"Resolve PurchaseItem 113 "}} 
 Player 1 21:25:49 $CHANGE_MONEY:  
 {"playerId":1,"numOfCoins":-10} 
 Player 1 21:25:49 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-10}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":33,"originStackId":-1},"isAfterActivation":true,"index":33} 
 Player 1 21:25:49 $DRAW_CARD:  
 {"deckType":5} 
 Player 1 21:25:49 $MOVE_CARD:  
 {"moveIndex":68,"cardId":187,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 
 Player 1 21:25:50 $ADD_AN_ITEM:  
 {"playerId":1,"cardId":187,"isReward":false} 
 Player 1 21:25:50 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":187}],"result":true,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":34,"originStackId":-1},"isAfterActivation":true,"index":34} 
 Player 1 21:25:50 $ACTION_MASSAGE_REMOVE:  
 {"id":326} 
 Player 1 21:25:50 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":327,"_text":"Remove After Resolve PurchaseItem 113  "}} 
 Player 1 21:25:50 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:25:50 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":113,"creatorCardId":270,"itemToPurchaseCardId":0,"playerWhoBuysCardId":270,"cost":10,"stackEffectType":9}} 
 Player 1 21:25:50 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":328,"_text":"Response Remove After Resolve PurchaseItem 113"},"childOfId":327} 
 Player 1 21:25:50 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":329,"_text":"Wait For Response From Player 2 "},"childOfId":327} 
 Player 1 21:25:50 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:25:50 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:25:50 $ACTION_MASSAGE_REMOVE:  
 {"id":317} 
 Player 1 21:25:51 $ACTION_MASSAGE_REMOVE:  
 {"id":329} 
 Player 1 21:25:51 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":330,"_text":"Wait For Response From Player 1 "},"childOfId":327} 
 Player 1 21:25:51 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:25:51 $ACTION_MASSAGE_REMOVE:  
 {"id":330} 
 Player 1 21:25:51 $ACTION_MASSAGE_REMOVE:  
 {"id":328} 
 Player 1 21:25:51 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":331,"_text":"Stack Was Emptied "}} 
 Player 1 21:25:51 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:25:51 $ACTION_MASSAGE_REMOVE:  
 {"id":331} 
 Player 1 21:25:52 $ACTION_MASSAGE_REMOVE:  
 {"id":331} 
 Player 1 21:25:53 $ACTION_MASSAGE_REMOVE:  
 {"id":327} 
 Player 1 21:26:03 $NEXT_STACK_ID:  
 Player 1 21:26:03 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:26:03 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 activated Incubus"} 
 Player 1 21:26:03 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":114,"creatorCardId":270,"hasLockingStackEffect":false,"itemToPlayCardId":271,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 1 21:26:03 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":332,"_text":"Add ActivateItem 114 "}} 
 Player 1 21:26:08 $USE_ITEM:  
 {"cardId":271} 
 Player 1 21:26:08 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:26:08 $ACTION_MASSAGE_REMOVE:  
 {"id":332} 
 Player 1 21:26:08 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 activated Incubus"} 
 Player 1 21:26:08 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":114,"creatorCardId":270,"hasLockingStackEffect":false,"itemToPlayCardId":271,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 21:26:08 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":333,"_text":"Response Adding ActivateItem 114"},"childOfId":332} 
 Player 1 21:26:08 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":334,"_text":"Wait For Response From Player 1 "},"childOfId":332} 
 Player 1 21:26:08 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:26:08 $ACTION_MASSAGE_REMOVE:  
 {"id":334} 
 Player 1 21:26:08 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":335,"_text":"Wait For Response From Player 2 "},"childOfId":332} 
 Player 1 21:26:08 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:26:08 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:26:11 $ACTION_MASSAGE_REMOVE:  
 {"id":335} 
 Player 1 21:26:11 $ACTION_MASSAGE_REMOVE:  
 {"id":333} 
 Player 1 21:26:12 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 activated Incubus"} 
 Player 1 21:26:12 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 activated Incubus"} 
 Player 1 21:26:14 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 activated Incubus \n2:Player 2 activated Samson"} 
 Player 1 21:26:14 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 activated Incubus \n2:Player 2 activated Samson"} 
 Player 1 21:26:14 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:26:20 $MOVE_CARD_END:  
 {"moveIndex":69,"cardId":136,"flipIfFlipped":true,"playerId":2} 
 Player 1 21:26:21 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 activated Incubus \n2:Player 2 activated Samson"} 
 Player 1 21:26:21 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 activated Incubus \n2:Player 2 activated Samson"} 
 Player 1 21:26:21 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 activated Incubus \n2:Player 2 play The Hermit "} 
 Player 1 21:26:21 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 activated Incubus \n2:Player 2 play The Hermit "} 
 Player 1 21:26:21 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 activated Incubus \n2:Player 2 play The Hermit "} 
 Player 1 21:26:21 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 activated Incubus \n2:Player 2 play The Hermit "} 
 Player 1 21:26:21 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 activated Incubus \n2:Player 2 play The Hermit "} 
 Player 1 21:26:21 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 activated Incubus \n2:Player 2 play The Hermit "} 
 Player 1 21:26:21 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 activated Incubus \n2:Player 2 play The Hermit  \n3:Player 2 activated Samson"} 
 Player 1 21:26:21 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 activated Incubus \n2:Player 2 play The Hermit  \n3:Player 2 activated Samson"} 
 Player 1 21:26:21 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 activated Incubus \n2:Player 2 play The Hermit  \n3:Player 2 activated Samson"} 
 Player 1 21:26:21 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 activated Incubus \n2:Player 2 play The Hermit  \n3:Player 2 activated Samson"} 
 Player 1 21:26:21 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:27:04 $MOVE_CARD_END:  
 {"moveIndex":70,"cardId":136,"flipIfFlipped":true,"playerId":2} 
 Player 1 21:27:04 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 activated Incubus \n2:Player 2 play The Hermit "} 
 Player 1 21:27:04 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 activated Incubus \n2:Player 2 play The Hermit "} 
 Player 1 21:27:04 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 activated Incubus \n2:Player 2 play The Hermit "} 
 Player 1 21:27:04 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 activated Incubus \n2:Player 2 play The Hermit "} 
 Player 1 21:27:04 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:27:05 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 activated Incubus"} 
 Player 1 21:27:05 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 activated Incubus"} 
 Player 1 21:27:05 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":271,"particleType":6} 
 Player 1 21:27:07 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":271,"particleType":6} 
 Player 1 21:27:18 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 activated Incubus"} 
 Player 1 21:27:18 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":114,"creatorCardId":270,"hasLockingStackEffect":false,"itemToPlayCardId":271,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 21:27:18 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 activated Incubus"} 
 Player 1 21:27:18 $FINISH_DO_STACK_EFFECT:  
 {"playerId":2,"newStack":[{"entityId":114,"creatorCardId":270,"hasLockingStackEffect":false,"itemToPlayCardId":271,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 
 Player 1 21:27:18 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 activated Incubus"} 
 Player 1 21:27:18 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 activated Incubus"} 
 Player 1 21:27:18 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 activated Incubus"} 
 Player 1 21:27:18 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 activated Incubus"} 
 Player 1 21:27:19 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:27:22 $NEXT_STACK_ID:  
 Player 1 21:27:22 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:27:22 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1  declared attack on TopBlankCard"} 
 Player 1 21:27:22 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":117,"creatorCardId":270,"attackingPlayerCardId":270,"idOfCardBeingAttacked":0,"stackEffectType":4}} 
 Player 1 21:27:22 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":336,"_text":"Add DeclareAttack 117 "}} 
 Player 1 21:27:22 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:27:22 $ACTION_MASSAGE_REMOVE:  
 {"id":336} 
 Player 1 21:27:22 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1  declared attack on TopBlankCard"} 
 Player 1 21:27:22 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":117,"creatorCardId":270,"attackingPlayerCardId":270,"idOfCardBeingAttacked":0,"stackEffectType":4}} 
 Player 1 21:27:23 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":337,"_text":"Response Adding DeclareAttack 117"},"childOfId":336} 
 Player 1 21:27:23 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":338,"_text":"Wait For Response From Player 1 "},"childOfId":336} 
 Player 1 21:27:23 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:27:23 $ACTION_MASSAGE_REMOVE:  
 {"id":338} 
 Player 1 21:27:23 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":339,"_text":"Wait For Response From Player 2 "},"childOfId":336} 
 Player 1 21:27:23 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:27:23 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:27:23 $ACTION_MASSAGE_REMOVE:  
 {"id":339} 
 Player 1 21:27:23 $ACTION_MASSAGE_REMOVE:  
 {"id":337} 
 Player 1 21:27:23 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":340,"_text":"Resolve DeclareAttack 117 "}} 
 Player 1 21:27:23 $DRAW_CARD:  
 {"deckType":2} 
 Player 1 21:27:23 $SHOW_CARD_PREVIEW:  
 {"cardToShowId":216,"playerId":1} 
 Player 1 21:27:35 $FLIP_CARD:  
 {"cardId":216} 
 Player 1 21:27:35 $REGISTER_PASSIVE_ITEM:  
 {"cardId":216} 
 Player 1 21:27:35 $ADD_MONSTER:  
 {"monsterPlaceId":1,"monsterId":216} 
 Player 1 21:27:35 $NEW_MONSTER_ON_PLACE:  
 {"cardId":216,"monsterPlaceId":1} 
 Player 1 21:27:35 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":216,"particleType":5} 
 Player 1 21:27:35 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":35,"originStackId":117},"isAfterActivation":true,"index":35} 
 Player 1 21:27:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1  declared attack on TopBlankCard"} 
 Player 1 21:27:35 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":117,"creatorCardId":270,"attackingPlayerCardId":270,"idOfCardBeingAttacked":216,"stackEffectType":4}} 
 Player 1 21:27:35 $ACTION_MASSAGE_REMOVE:  
 {"id":340} 
 Player 1 21:27:35 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":341,"_text":"Remove After Resolve DeclareAttack 117  "}} 
 Player 1 21:27:35 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:27:35 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":117,"creatorCardId":270,"attackingPlayerCardId":270,"idOfCardBeingAttacked":216,"stackEffectType":4}} 
 Player 1 21:27:35 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":342,"_text":"Response Remove After Resolve DeclareAttack 117"},"childOfId":341} 
 Player 1 21:27:35 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":343,"_text":"Wait For Response From Player 2 "},"childOfId":341} 
 Player 1 21:27:35 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:27:35 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:27:35 $ACTION_MASSAGE_REMOVE:  
 {"id":343} 
 Player 1 21:27:35 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":344,"_text":"Wait For Response From Player 1 "},"childOfId":341} 
 Player 1 21:27:35 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:27:35 $ACTION_MASSAGE_REMOVE:  
 {"id":344} 
 Player 1 21:27:36 $ACTION_MASSAGE_REMOVE:  
 {"id":342} 
 Player 1 21:27:36 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":345,"_text":"Stack Was Emptied "}} 
 Player 1 21:27:36 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:27:36 $ACTION_MASSAGE_REMOVE:  
 {"id":341} 
 Player 1 21:27:37 $ACTION_MASSAGE_REMOVE:  
 {"id":345} 
 Player 1 21:27:38 $ACTION_MASSAGE_REMOVE:  
 {"id":341} 
 Player 1 21:28:04 $NEXT_STACK_ID:  
 Player 1 21:28:04 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:28:04 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 1 21:28:04 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":118,"creatorCardId":270,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":216}} 
 Player 1 21:28:04 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":346,"_text":"Add AttackRoll 118 "}} 
 Player 1 21:28:04 $ROLL_DICE:  
 {"playerId":1} 
 Player 1 21:28:05 $ROLL_DICE_ENDED:  
 {"playerId":1,"numberRolled":5} 
 Player 1 21:28:05 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 5 vs Cursed Fatty<Monster>"} 
 Player 1 21:28:05 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:28:05 $ACTION_MASSAGE_REMOVE:  
 {"id":346} 
 Player 1 21:28:05 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 5 vs Cursed Fatty<Monster>"} 
 Player 1 21:28:05 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":118,"creatorCardId":270,"numberRolled":5,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":216}} 
 Player 1 21:28:05 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":347,"_text":"Response Adding AttackRoll 118"},"childOfId":346} 
 Player 1 21:28:05 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":348,"_text":"Wait For Response From Player 1 "},"childOfId":346} 
 Player 1 21:28:05 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:28:05 $ACTION_MASSAGE_REMOVE:  
 {"id":348} 
 Player 1 21:28:05 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":349,"_text":"Wait For Response From Player 2 "},"childOfId":346} 
 Player 1 21:28:05 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:28:05 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:28:07 $ACTION_MASSAGE_REMOVE:  
 {"id":349} 
 Player 1 21:28:07 $ACTION_MASSAGE_REMOVE:  
 {"id":347} 
 Player 1 21:28:08 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 5 vs Cursed Fatty<Monster>"} 
 Player 1 21:28:08 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 5 vs Cursed Fatty<Monster>"} 
 Player 1 21:28:10 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 5 vs Cursed Fatty<Monster> \n2:Player 2 activated Blood Lust"} 
 Player 1 21:28:10 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 5 vs Cursed Fatty<Monster> \n2:Player 2 activated Blood Lust"} 
 Player 1 21:28:10 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:28:12 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 5 vs Cursed Fatty<Monster> \n2:Player 2 activated Blood Lust"} 
 Player 1 21:28:12 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 5 vs Cursed Fatty<Monster> \n2:Player 2 activated Blood Lust"} 
 Player 1 21:28:12 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 5 vs Cursed Fatty<Monster> \n2:Player 2 activated Blood Lust"} 
 Player 1 21:28:12 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 5 vs Cursed Fatty<Monster> \n2:Player 2 activated Blood Lust"} 
 Player 1 21:28:13 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:28:13 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 5 vs Cursed Fatty<Monster>"} 
 Player 1 21:28:13 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 5 vs Cursed Fatty<Monster>"} 
 Player 1 21:28:13 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":350,"_text":"Added 0 to original roll"}} 
 Player 1 21:28:13 $NEXT_STACK_ID:  
 Player 1 21:28:13 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 1 21:28:13 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:28:13 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 1 21:28:13 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":120,"creatorCardId":270,"entityToDoDamageCardId":270,"entityToTakeDamageCardId":216,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 21:28:13 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 1 21:28:13 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 1 21:28:13 $REPLACE_STACK:  
 {"currentStack":[{"entityId":120,"creatorCardId":270,"entityToDoDamageCardId":270,"entityToTakeDamageCardId":216,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":118,"creatorCardId":270,"numberRolled":5,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":216}]} 
 Player 1 21:28:13 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":2},{"type":2,"number":2}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":36,"originStackId":118},"isAfterActivation":true,"index":36} 
 Player 1 21:28:13 $NEXT_STACK_ID:  
 Player 1 21:28:13 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 1 21:28:13 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:Player 1 is rolling against Cursed Fatty<Monster> \n3:Activate Cursed Fatty effect DiscardLoot<DiscardLoot>"} 
 Player 1 21:28:13 $ADD_TO_STACK:  
 {"stackEffect":{"effectCollectedData":null,"entityId":121,"creatorCardId":216,"hasLockingStackEffect":false,"cardActivatorId":216,"cardWithEffectId":216,"effectToDo":{"effectName":"DiscardLoot","cardEffectNum":0,"cardPlayerId":216,"cardId":216,"effctType":0},"isAfterActivation":true,"index":36,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 21:28:13 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":351,"_text":"Add ActivatePassiveEffect 121 "}} 
 Player 1 21:28:16 $ACTION_MASSAGE_REMOVE:  
 {"id":350} 
 Player 1 21:28:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:Player 1 is rolling against Cursed Fatty<Monster> \n3:Activate Cursed Fatty effect DiscardLoot<DiscardLoot>"} 
 Player 1 21:28:28 $ACTION_MASSAGE_REMOVE:  
 {"id":351} 
 Player 1 21:28:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:Player 1 is rolling against Cursed Fatty<Monster> \n3:Activate Cursed Fatty effect DiscardLoot<DiscardLoot>"} 
 Player 1 21:28:28 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"effectCollectedData":{"effectTargets":[270,37],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":216,"effectCardPlayer":216},"entityId":121,"creatorCardId":216,"hasLockingStackEffect":false,"cardActivatorId":216,"cardWithEffectId":216,"effectToDo":{"effectName":"DiscardLoot","cardEffectNum":0,"cardPlayerId":216,"cardId":216,"effctType":0},"isAfterActivation":true,"index":36,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 21:28:28 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":352,"_text":"Response Adding ActivatePassiveEffect 121"},"childOfId":351} 
 Player 1 21:28:28 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":353,"_text":"Wait For Response From Player 1 "},"childOfId":351} 
 Player 1 21:28:28 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:28:33 $ACTION_MASSAGE_REMOVE:  
 {"id":353} 
 Player 1 21:28:33 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":354,"_text":"Wait For Response From Player 2 "},"childOfId":351} 
 Player 1 21:28:33 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:28:33 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:28:33 $ACTION_MASSAGE_REMOVE:  
 {"id":354} 
 Player 1 21:28:33 $ACTION_MASSAGE_REMOVE:  
 {"id":352} 
 Player 1 21:28:33 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":355,"_text":"Resolve ActivatePassiveEffect 121 "}} 
 Player 1 21:28:33 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":216,"particleType":6} 
 Player 1 21:28:35 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":216,"particleType":6} 
 Player 1 21:28:35 $PLAYER_LOSE_LOOT:  
 {"playerId":1,"cardId":37} 
 Player 1 21:28:35 $MOVE_CARD:  
 {"moveIndex":71,"cardId":37,"placeID":279,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 21:28:36 $MOVE_CARD_TO_PILE:  
 {"type":1,"cardId":37} 
 Player 1 21:28:36 $DISCARD_LOOT:  
 {"playerId":1,"cardId":37} 
 Player 1 21:28:36 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":2},{"type":2,"number":2}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":false,"index":36,"originStackId":118},"isAfterActivation":true,"index":36} 
 Player 1 21:28:36 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:Player 1 is rolling against Cursed Fatty<Monster> \n3:Activate Cursed Fatty effect DiscardLoot<DiscardLoot>"} 
 Player 1 21:28:36 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"effectCollectedData":{"effectTargets":[270,37],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":216,"effectCardPlayer":216},"entityId":121,"creatorCardId":216,"hasLockingStackEffect":false,"cardActivatorId":216,"cardWithEffectId":216,"isAfterActivation":true,"index":36,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 21:28:36 $ACTION_MASSAGE_REMOVE:  
 {"id":355} 
 Player 1 21:28:36 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":356,"_text":"Remove After Resolve ActivatePassiveEffect 121  "}} 
 Player 1 21:28:36 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 1 21:28:36 $REMOVE_FROM_STACK:  
 {"stackEffect":{"effectCollectedData":{"effectTargets":[270,37],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":216,"effectCardPlayer":216},"entityId":121,"creatorCardId":216,"hasLockingStackEffect":false,"cardActivatorId":216,"cardWithEffectId":216,"isAfterActivation":true,"index":36,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 21:28:36 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":357,"_text":"Response Remove After Resolve ActivatePassiveEffect 121"},"childOfId":356} 
 Player 1 21:28:36 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":358,"_text":"Wait For Response From Player 2 "},"childOfId":356} 
 Player 1 21:28:36 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:28:36 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:28:36 $ACTION_MASSAGE_REMOVE:  
 {"id":358} 
 Player 1 21:28:36 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":359,"_text":"Wait For Response From Player 1 "},"childOfId":356} 
 Player 1 21:28:36 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:28:37 $ACTION_MASSAGE_REMOVE:  
 {"id":359} 
 Player 1 21:28:37 $ACTION_MASSAGE_REMOVE:  
 {"id":357} 
 Player 1 21:28:37 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":360,"_text":"Resolve AttackRoll 118 "}} 
 Player 1 21:28:37 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 1 21:28:37 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":118,"creatorCardId":270,"numberRolled":5,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":216}} 
 Player 1 21:28:37 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 1 21:28:37 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 1 21:28:37 $FINISH_DO_STACK_EFFECT:  
 {"playerId":2,"newStack":[{"entityId":120,"creatorCardId":270,"entityToDoDamageCardId":270,"entityToTakeDamageCardId":216,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":118,"creatorCardId":270,"numberRolled":5,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":216}]} 
 Player 1 21:28:38 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 1 21:28:38 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 1 21:28:38 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 1 21:28:38 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 1 21:28:38 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 1 21:28:38 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 1 21:28:39 $ACTION_MASSAGE_REMOVE:  
 {"id":356} 
 Player 1 21:28:48 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:28:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to Cursed Fatty"} 
 Player 1 21:28:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to Cursed Fatty"} 
 Player 1 21:28:48 $MONSTER_GET_DAMAGED:  
 {"cardId":216,"hpLeft":3,"damageDealerId":270} 
 Player 1 21:28:48 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":270}],"result":null,"preventMethod":false,"methodScopeId":216,"scopeIsPlayer":false,"index":37,"originStackId":-1},"isAfterActivation":true,"index":37} 
 Player 1 21:28:48 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2},{"type":0,"number":270},{"type":0,"number":216}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":38,"originStackId":120},"isAfterActivation":true,"index":38} 
 Player 1 21:28:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to Cursed Fatty"} 
 Player 1 21:28:48 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":120,"creatorCardId":270,"entityToDoDamageCardId":270,"entityToTakeDamageCardId":216,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 21:28:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to Cursed Fatty"} 
 Player 1 21:28:48 $FINISH_DO_STACK_EFFECT:  
 {"playerId":2,"newStack":[{"entityId":120,"creatorCardId":270,"entityToDoDamageCardId":270,"entityToTakeDamageCardId":216,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}]} 
 Player 1 21:28:49 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to Cursed Fatty"} 
 Player 1 21:28:49 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to Cursed Fatty"} 
 Player 1 21:28:49 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to Cursed Fatty"} 
 Player 1 21:28:49 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to Cursed Fatty"} 
 Player 1 21:28:54 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:28:56 $NEXT_STACK_ID:  
 Player 1 21:28:56 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:28:56 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 1 21:28:56 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":122,"creatorCardId":270,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":216}} 
 Player 1 21:28:56 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":361,"_text":"Add AttackRoll 122 "}} 
 Player 1 21:28:56 $ROLL_DICE:  
 {"playerId":1} 
 Player 1 21:28:57 $ROLL_DICE_ENDED:  
 {"playerId":1,"numberRolled":4} 
 Player 1 21:28:57 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 4 vs Cursed Fatty<Monster>"} 
 Player 1 21:28:57 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:28:57 $ACTION_MASSAGE_REMOVE:  
 {"id":361} 
 Player 1 21:28:57 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 4 vs Cursed Fatty<Monster>"} 
 Player 1 21:28:57 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":122,"creatorCardId":270,"numberRolled":4,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":216}} 
 Player 1 21:28:57 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":362,"_text":"Response Adding AttackRoll 122"},"childOfId":361} 
 Player 1 21:28:57 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":363,"_text":"Wait For Response From Player 1 "},"childOfId":361} 
 Player 1 21:28:57 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:29:00 $ACTION_MASSAGE_REMOVE:  
 {"id":363} 
 Player 1 21:29:00 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":364,"_text":"Wait For Response From Player 2 "},"childOfId":361} 
 Player 1 21:29:00 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:29:00 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:29:00 $ACTION_MASSAGE_REMOVE:  
 {"id":364} 
 Player 1 21:29:00 $ACTION_MASSAGE_REMOVE:  
 {"id":362} 
 Player 1 21:29:00 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":365,"_text":"Resolve AttackRoll 122 "}} 
 Player 1 21:29:00 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":366,"_text":"Added 0 to original roll"}} 
 Player 1 21:29:00 $NEXT_STACK_ID:  
 Player 1 21:29:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 4 vs Cursed Fatty<Monster>"} 
 Player 1 21:29:00 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:29:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:Player 1 rolled 4 vs Cursed Fatty<Monster>"} 
 Player 1 21:29:00 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":123,"creatorCardId":270,"entityToDoDamageCardId":270,"entityToTakeDamageCardId":216,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 21:29:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:Player 1 rolled 4 vs Cursed Fatty<Monster>"} 
 Player 1 21:29:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:Player 1 rolled 4 vs Cursed Fatty<Monster>"} 
 Player 1 21:29:00 $REPLACE_STACK:  
 {"currentStack":[{"entityId":123,"creatorCardId":270,"entityToDoDamageCardId":270,"entityToTakeDamageCardId":216,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":122,"creatorCardId":270,"numberRolled":4,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":216}]} 
 Player 1 21:29:00 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":1},{"type":2,"number":2}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":39,"originStackId":122},"isAfterActivation":true,"index":39} 
 Player 1 21:29:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:Player 1 rolled 4 vs Cursed Fatty<Monster>"} 
 Player 1 21:29:00 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":122,"creatorCardId":270,"numberRolled":4,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":216}} 
 Player 1 21:29:00 $ACTION_MASSAGE_REMOVE:  
 {"id":365} 
 Player 1 21:29:00 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":367,"_text":"Remove After Resolve AttackRoll 122  "}} 
 Player 1 21:29:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to Cursed Fatty"} 
 Player 1 21:29:00 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":122,"creatorCardId":270,"numberRolled":4,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":216}} 
 Player 1 21:29:00 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":368,"_text":"Response Remove After Resolve AttackRoll 122"},"childOfId":367} 
 Player 1 21:29:00 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":369,"_text":"Wait For Response From Player 1 "},"childOfId":367} 
 Player 1 21:29:00 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:29:03 $ACTION_MASSAGE_REMOVE:  
 {"id":366} 
 Player 1 21:29:03 $ACTION_MASSAGE_REMOVE:  
 {"id":367} 
 Player 1 21:29:04 $ACTION_MASSAGE_REMOVE:  
 {"id":369} 
 Player 1 21:29:04 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":370,"_text":"Wait For Response From Player 2 "},"childOfId":367} 
 Player 1 21:29:04 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:29:04 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:29:04 $ACTION_MASSAGE_REMOVE:  
 {"id":370} 
 Player 1 21:29:04 $ACTION_MASSAGE_REMOVE:  
 {"id":368} 
 Player 1 21:29:04 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":371,"_text":"Resolve CombatDamage 123 "}} 
 Player 1 21:29:04 $MONSTER_GET_DAMAGED:  
 {"cardId":216,"hpLeft":2,"damageDealerId":270} 
 Player 1 21:29:04 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":270}],"result":null,"preventMethod":false,"methodScopeId":216,"scopeIsPlayer":false,"index":40,"originStackId":-1},"isAfterActivation":true,"index":40} 
 Player 1 21:29:04 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":4},{"type":0,"number":270},{"type":0,"number":216}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":41,"originStackId":123},"isAfterActivation":true,"index":41} 
 Player 1 21:29:04 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to Cursed Fatty"} 
 Player 1 21:29:04 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":123,"creatorCardId":270,"entityToDoDamageCardId":270,"entityToTakeDamageCardId":216,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 21:29:04 $ACTION_MASSAGE_REMOVE:  
 {"id":371} 
 Player 1 21:29:04 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":372,"_text":"Remove After Resolve CombatDamage 123  "}} 
 Player 1 21:29:04 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:29:04 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":123,"creatorCardId":270,"entityToDoDamageCardId":270,"entityToTakeDamageCardId":216,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 21:29:04 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":373,"_text":"Response Remove After Resolve CombatDamage 123"},"childOfId":372} 
 Player 1 21:29:04 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":374,"_text":"Wait For Response From Player 2 "},"childOfId":372} 
 Player 1 21:29:04 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:29:05 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:29:05 $ACTION_MASSAGE_REMOVE:  
 {"id":374} 
 Player 1 21:29:05 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":375,"_text":"Wait For Response From Player 1 "},"childOfId":372} 
 Player 1 21:29:05 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:29:05 $ACTION_MASSAGE_REMOVE:  
 {"id":375} 
 Player 1 21:29:05 $ACTION_MASSAGE_REMOVE:  
 {"id":373} 
 Player 1 21:29:05 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":376,"_text":"Stack Was Emptied "}} 
 Player 1 21:29:05 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:29:05 $ACTION_MASSAGE_REMOVE:  
 {"id":372} 
 Player 1 21:29:07 $ACTION_MASSAGE_REMOVE:  
 {"id":376} 
 Player 1 21:29:07 $ACTION_MASSAGE_REMOVE:  
 {"id":372} 
 Player 1 21:29:08 $NEXT_STACK_ID:  
 Player 1 21:29:08 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:29:08 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 1 21:29:08 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":124,"creatorCardId":270,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":216}} 
 Player 1 21:29:08 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":377,"_text":"Add AttackRoll 124 "}} 
 Player 1 21:29:08 $ROLL_DICE:  
 {"playerId":1} 
 Player 1 21:29:09 $ROLL_DICE_ENDED:  
 {"playerId":1,"numberRolled":2} 
 Player 1 21:29:09 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 2 vs Cursed Fatty<Monster>"} 
 Player 1 21:29:09 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:29:09 $ACTION_MASSAGE_REMOVE:  
 {"id":377} 
 Player 1 21:29:09 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 2 vs Cursed Fatty<Monster>"} 
 Player 1 21:29:10 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":124,"creatorCardId":270,"numberRolled":2,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":216}} 
 Player 1 21:29:10 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":378,"_text":"Response Adding AttackRoll 124"},"childOfId":377} 
 Player 1 21:29:10 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":379,"_text":"Wait For Response From Player 1 "},"childOfId":377} 
 Player 1 21:29:10 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:29:17 $ACTION_MASSAGE_REMOVE:  
 {"id":379} 
 Player 1 21:29:17 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":380,"_text":"Wait For Response From Player 2 "},"childOfId":377} 
 Player 1 21:29:17 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:29:17 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:29:17 $ACTION_MASSAGE_REMOVE:  
 {"id":380} 
 Player 1 21:29:17 $ACTION_MASSAGE_REMOVE:  
 {"id":378} 
 Player 1 21:29:17 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":381,"_text":"Resolve AttackRoll 124 "}} 
 Player 1 21:29:17 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":382,"_text":"Added 0 to original roll"}} 
 Player 1 21:29:17 $NEXT_STACK_ID:  
 Player 1 21:29:17 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 2 vs Cursed Fatty<Monster>"} 
 Player 1 21:29:17 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:29:17 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:Player 1 rolled 2 vs Cursed Fatty<Monster>"} 
 Player 1 21:29:17 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":125,"creatorCardId":270,"entityToDoDamageCardId":270,"entityToTakeDamageCardId":216,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 21:29:17 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:Player 1 rolled 2 vs Cursed Fatty<Monster>"} 
 Player 1 21:29:17 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:Player 1 rolled 2 vs Cursed Fatty<Monster>"} 
 Player 1 21:29:17 $REPLACE_STACK:  
 {"currentStack":[{"entityId":125,"creatorCardId":270,"entityToDoDamageCardId":270,"entityToTakeDamageCardId":216,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":124,"creatorCardId":270,"numberRolled":2,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":216}]} 
 Player 1 21:29:17 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":2},{"type":2,"number":1},{"type":2,"number":2}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":42,"originStackId":124},"isAfterActivation":true,"index":42} 
 Player 1 21:29:17 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:Player 1 rolled 2 vs Cursed Fatty<Monster>"} 
 Player 1 21:29:17 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":124,"creatorCardId":270,"numberRolled":2,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":216}} 
 Player 1 21:29:17 $ACTION_MASSAGE_REMOVE:  
 {"id":381} 
 Player 1 21:29:17 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":383,"_text":"Remove After Resolve AttackRoll 124  "}} 
 Player 1 21:29:17 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to Cursed Fatty"} 
 Player 1 21:29:17 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":124,"creatorCardId":270,"numberRolled":2,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":216}} 
 Player 1 21:29:17 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":384,"_text":"Response Remove After Resolve AttackRoll 124"},"childOfId":383} 
 Player 1 21:29:17 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":385,"_text":"Wait For Response From Player 1 "},"childOfId":383} 
 Player 1 21:29:17 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:29:18 $ACTION_MASSAGE_REMOVE:  
 {"id":385} 
 Player 1 21:29:18 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":386,"_text":"Wait For Response From Player 2 "},"childOfId":383} 
 Player 1 21:29:18 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:29:18 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:29:18 $ACTION_MASSAGE_REMOVE:  
 {"id":386} 
 Player 1 21:29:18 $ACTION_MASSAGE_REMOVE:  
 {"id":384} 
 Player 1 21:29:18 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":387,"_text":"Resolve CombatDamage 125 "}} 
 Player 1 21:29:18 $MONSTER_GET_DAMAGED:  
 {"cardId":216,"hpLeft":1,"damageDealerId":270} 
 Player 1 21:29:18 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":270}],"result":null,"preventMethod":false,"methodScopeId":216,"scopeIsPlayer":false,"index":43,"originStackId":-1},"isAfterActivation":true,"index":43} 
 Player 1 21:29:18 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":0,"number":270},{"type":0,"number":216}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":44,"originStackId":125},"isAfterActivation":true,"index":44} 
 Player 1 21:29:19 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to Cursed Fatty"} 
 Player 1 21:29:19 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":125,"creatorCardId":270,"entityToDoDamageCardId":270,"entityToTakeDamageCardId":216,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 21:29:19 $ACTION_MASSAGE_REMOVE:  
 {"id":387} 
 Player 1 21:29:19 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":388,"_text":"Remove After Resolve CombatDamage 125  "}} 
 Player 1 21:29:19 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:29:19 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":125,"creatorCardId":270,"entityToDoDamageCardId":270,"entityToTakeDamageCardId":216,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 21:29:19 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":389,"_text":"Response Remove After Resolve CombatDamage 125"},"childOfId":388} 
 Player 1 21:29:19 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":390,"_text":"Wait For Response From Player 2 "},"childOfId":388} 
 Player 1 21:29:19 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:29:19 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:29:19 $ACTION_MASSAGE_REMOVE:  
 {"id":390} 
 Player 1 21:29:19 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":391,"_text":"Wait For Response From Player 1 "},"childOfId":388} 
 Player 1 21:29:19 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:29:20 $ACTION_MASSAGE_REMOVE:  
 {"id":382} 
 Player 1 21:29:20 $ACTION_MASSAGE_REMOVE:  
 {"id":383} 
 Player 1 21:29:21 $ACTION_MASSAGE_REMOVE:  
 {"id":388} 
 Player 1 21:29:22 $ACTION_MASSAGE_REMOVE:  
 {"id":391} 
 Player 1 21:29:22 $ACTION_MASSAGE_REMOVE:  
 {"id":389} 
 Player 1 21:29:22 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":392,"_text":"Stack Was Emptied "}} 
 Player 1 21:29:22 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:29:22 $ACTION_MASSAGE_REMOVE:  
 {"id":392} 
 Player 1 21:29:23 $NEXT_STACK_ID:  
 Player 1 21:29:23 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:29:23 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 1 21:29:23 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":126,"creatorCardId":270,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":216}} 
 Player 1 21:29:23 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":393,"_text":"Add AttackRoll 126 "}} 
 Player 1 21:29:23 $ROLL_DICE:  
 {"playerId":1} 
 Player 1 21:29:23 $ACTION_MASSAGE_REMOVE:  
 {"id":392} 
 Player 1 21:29:25 $ROLL_DICE_ENDED:  
 {"playerId":1,"numberRolled":2} 
 Player 1 21:29:25 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 2 vs Cursed Fatty<Monster>"} 
 Player 1 21:29:25 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:29:25 $ACTION_MASSAGE_REMOVE:  
 {"id":393} 
 Player 1 21:29:25 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 2 vs Cursed Fatty<Monster>"} 
 Player 1 21:29:25 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":126,"creatorCardId":270,"numberRolled":2,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":216}} 
 Player 1 21:29:25 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":394,"_text":"Response Adding AttackRoll 126"},"childOfId":393} 
 Player 1 21:29:25 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":395,"_text":"Wait For Response From Player 1 "},"childOfId":393} 
 Player 1 21:29:25 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:29:27 $ACTION_MASSAGE_REMOVE:  
 {"id":395} 
 Player 1 21:29:27 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":396,"_text":"Wait For Response From Player 2 "},"childOfId":393} 
 Player 1 21:29:27 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:29:27 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:29:27 $ACTION_MASSAGE_REMOVE:  
 {"id":396} 
 Player 1 21:29:27 $ACTION_MASSAGE_REMOVE:  
 {"id":394} 
 Player 1 21:29:27 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":397,"_text":"Resolve AttackRoll 126 "}} 
 Player 1 21:29:27 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":398,"_text":"Added 0 to original roll"}} 
 Player 1 21:29:27 $NEXT_STACK_ID:  
 Player 1 21:29:27 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 2 vs Cursed Fatty<Monster>"} 
 Player 1 21:29:27 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:29:27 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:Player 1 rolled 2 vs Cursed Fatty<Monster>"} 
 Player 1 21:29:27 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":127,"creatorCardId":270,"entityToDoDamageCardId":270,"entityToTakeDamageCardId":216,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 21:29:27 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:Player 1 rolled 2 vs Cursed Fatty<Monster>"} 
 Player 1 21:29:27 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:Player 1 rolled 2 vs Cursed Fatty<Monster>"} 
 Player 1 21:29:27 $REPLACE_STACK:  
 {"currentStack":[{"entityId":127,"creatorCardId":270,"entityToDoDamageCardId":270,"entityToTakeDamageCardId":216,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":126,"creatorCardId":270,"numberRolled":2,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":216}]} 
 Player 1 21:29:27 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":2},{"type":2,"number":1},{"type":2,"number":2}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":45,"originStackId":126},"isAfterActivation":true,"index":45} 
 Player 1 21:29:27 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:Player 1 rolled 2 vs Cursed Fatty<Monster>"} 
 Player 1 21:29:27 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":126,"creatorCardId":270,"numberRolled":2,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":216}} 
 Player 1 21:29:27 $ACTION_MASSAGE_REMOVE:  
 {"id":397} 
 Player 1 21:29:27 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":399,"_text":"Remove After Resolve AttackRoll 126  "}} 
 Player 1 21:29:27 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to Cursed Fatty"} 
 Player 1 21:29:27 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":126,"creatorCardId":270,"numberRolled":2,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":216}} 
 Player 1 21:29:27 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":400,"_text":"Response Remove After Resolve AttackRoll 126"},"childOfId":399} 
 Player 1 21:29:27 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":401,"_text":"Wait For Response From Player 1 "},"childOfId":399} 
 Player 1 21:29:27 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:29:28 $ACTION_MASSAGE_REMOVE:  
 {"id":401} 
 Player 1 21:29:28 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":402,"_text":"Wait For Response From Player 2 "},"childOfId":399} 
 Player 1 21:29:28 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:29:28 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:29:29 $ACTION_MASSAGE_REMOVE:  
 {"id":402} 
 Player 1 21:29:29 $ACTION_MASSAGE_REMOVE:  
 {"id":400} 
 Player 1 21:29:29 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":403,"_text":"Resolve CombatDamage 127 "}} 
 Player 1 21:29:29 $MONSTER_GET_DAMAGED:  
 {"cardId":216,"hpLeft":0,"damageDealerId":270} 
 Player 1 21:29:29 $NEXT_STACK_ID:  
 Player 1 21:29:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to Cursed Fatty"} 
 Player 1 21:29:29 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:29:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:[object Object] killed by Lilith"} 
 Player 1 21:29:29 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":128,"creatorCardId":270,"monsterToDieCardId":216,"stackEffectType":5,"killerId":270}} 
 Player 1 21:29:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:[object Object] killed by Lilith"} 
 Player 1 21:29:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:[object Object] killed by Lilith"} 
 Player 1 21:29:29 $REPLACE_STACK:  
 {"currentStack":[{"entityId":127,"creatorCardId":270,"entityToDoDamageCardId":270,"entityToTakeDamageCardId":216,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":128,"creatorCardId":270,"monsterToDieCardId":216,"stackEffectType":5,"killerId":270}]} 
 Player 1 21:29:29 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":270}],"result":null,"preventMethod":false,"methodScopeId":216,"scopeIsPlayer":false,"index":46,"originStackId":-1},"isAfterActivation":true,"index":46} 
 Player 1 21:29:29 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":0,"number":270},{"type":0,"number":216}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":47,"originStackId":127},"isAfterActivation":true,"index":47} 
 Player 1 21:29:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:[object Object] killed by Lilith"} 
 Player 1 21:29:29 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":127,"creatorCardId":270,"entityToDoDamageCardId":270,"entityToTakeDamageCardId":216,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 21:29:29 $ACTION_MASSAGE_REMOVE:  
 {"id":403} 
 Player 1 21:29:29 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":404,"_text":"Remove After Resolve CombatDamage 127  "}} 
 Player 1 21:29:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by Lilith"} 
 Player 1 21:29:29 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":127,"creatorCardId":270,"entityToDoDamageCardId":270,"entityToTakeDamageCardId":216,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 21:29:29 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":405,"_text":"Response Remove After Resolve CombatDamage 127"},"childOfId":404} 
 Player 1 21:29:29 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":406,"_text":"Wait For Response From Player 1 "},"childOfId":404} 
 Player 1 21:29:29 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:29:30 $ACTION_MASSAGE_REMOVE:  
 {"id":398} 
 Player 1 21:29:30 $ACTION_MASSAGE_REMOVE:  
 {"id":399} 
 Player 1 21:29:32 $ACTION_MASSAGE_REMOVE:  
 {"id":404} 
 Player 1 21:29:32 $ACTION_MASSAGE_REMOVE:  
 {"id":406} 
 Player 1 21:29:32 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":407,"_text":"Wait For Response From Player 2 "},"childOfId":404} 
 Player 1 21:29:32 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:29:33 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:29:33 $ACTION_MASSAGE_REMOVE:  
 {"id":407} 
 Player 1 21:29:33 $ACTION_MASSAGE_REMOVE:  
 {"id":405} 
 Player 1 21:29:33 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":408,"_text":"Resolve MonsterDeath 128 "}} 
 Player 1 21:29:33 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":216,"particleType":5} 
 Player 1 21:29:33 $CANCEL_ATTACK:  
 Player 1 21:29:33 $NEXT_STACK_ID:  
 Player 1 21:29:33 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by Lilith"} 
 Player 1 21:29:33 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:29:33 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Cursed Fatty<Monster> reward \n2:[object Object] killed by Lilith"} 
 Player 1 21:29:33 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":129,"creatorCardId":270,"monsterCardWithRewardId":216,"playerCardIdToReward":270,"stackEffectType":7}} 
 Player 1 21:29:33 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Cursed Fatty<Monster> reward \n2:[object Object] killed by Lilith"} 
 Player 1 21:29:33 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Cursed Fatty<Monster> reward \n2:[object Object] killed by Lilith"} 
 Player 1 21:29:33 $REPLACE_STACK:  
 {"currentStack":[{"entityId":129,"creatorCardId":270,"monsterCardWithRewardId":216,"playerCardIdToReward":270,"stackEffectType":7},{"entityId":128,"creatorCardId":270,"monsterToDieCardId":216,"stackEffectType":5,"killerId":270}]} 
 Player 1 21:29:33 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Cursed Fatty<Monster> reward \n2:[object Object] killed by Lilith"} 
 Player 1 21:29:33 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":128,"creatorCardId":270,"monsterToDieCardId":216,"stackEffectType":5,"killerId":270}} 
 Player 1 21:29:33 $ACTION_MASSAGE_REMOVE:  
 {"id":408} 
 Player 1 21:29:33 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":409,"_text":"Remove After Resolve MonsterDeath 128  "}} 
 Player 1 21:29:33 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Cursed Fatty<Monster> reward"} 
 Player 1 21:29:33 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":128,"creatorCardId":270,"monsterToDieCardId":216,"stackEffectType":5,"killerId":270}} 
 Player 1 21:29:33 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":410,"_text":"Response Remove After Resolve MonsterDeath 128"},"childOfId":409} 
 Player 1 21:29:33 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":411,"_text":"Wait For Response From Player 1 "},"childOfId":409} 
 Player 1 21:29:33 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:29:34 $ACTION_MASSAGE_REMOVE:  
 {"id":411} 
 Player 1 21:29:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":412,"_text":"Wait For Response From Player 2 "},"childOfId":409} 
 Player 1 21:29:34 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:29:34 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:29:34 $ACTION_MASSAGE_REMOVE:  
 {"id":412} 
 Player 1 21:29:34 $ACTION_MASSAGE_REMOVE:  
 {"id":410} 
 Player 1 21:29:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":413,"_text":"Resolve MonsterRewardStackEffect 129 "}} 
 Player 1 21:29:34 $DRAW_CARD:  
 {"deckType":1} 
 Player 1 21:29:34 $MOVE_CARD:  
 {"moveIndex":72,"cardId":34,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 1 21:29:34 $CARD_DRAWN:  
 {"playerId":1,"deckType":1,"drawnCardId":34} 
 Player 1 21:29:35 $FLIP_CARD:  
 {"cardId":34} 
 Player 1 21:29:35 $PLAYER_GET_LOOT:  
 {"playerId":1,"cardId":34} 
 Player 1 21:29:35 $DRAW_CARD:  
 {"deckType":1} 
 Player 1 21:29:35 $MOVE_CARD:  
 {"moveIndex":73,"cardId":70,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 1 21:29:35 $CARD_DRAWN:  
 {"playerId":1,"deckType":1,"drawnCardId":70} 
 Player 1 21:29:35 $FLIP_CARD:  
 {"cardId":70} 
 Player 1 21:29:35 $PLAYER_GET_LOOT:  
 {"playerId":1,"cardId":70} 
 Player 1 21:29:35 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":216,"scopeIsPlayer":false,"index":48,"originStackId":129},"isAfterActivation":true,"index":48} 
 Player 1 21:29:35 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:29:35 $ACTION_MASSAGE_REMOVE:  
 {"id":409} 
 Player 1 21:29:35 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":414,"_text":"Fizzle MonsterRewardStackEffect 129"}} 
 Player 1 21:29:35 $MOVE_CARD:  
 {"moveIndex":74,"cardId":216,"placeID":281,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 21:29:36 $MOVE_CARD_TO_PILE:  
 {"type":2,"cardId":216} 
 Player 1 21:29:36 $REMOVE_FROM_PASSIVE_MANAGER:  
 {"cardId":216} 
 Player 1 21:29:36 $REMOVE_MONSTER:  
 {"holderId":1,"monsterId":216} 
 Player 1 21:29:36 $GET_NEXT_MONSTER:  
 {"monsterPlaceId":1} 
 Player 1 21:29:36 $ACTION_MASSAGE_REMOVE:  
 {"id":413} 
 Player 1 21:29:36 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":415,"_text":"Stack Was Emptied "}} 
 Player 1 21:29:36 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:29:36 $ACTION_MASSAGE_REMOVE:  
 {"id":409} 
 Player 1 21:29:36 $ACTION_MASSAGE_REMOVE:  
 {"id":409} 
 Player 1 21:29:37 $ACTION_MASSAGE_REMOVE:  
 {"id":415} 
 Player 1 21:29:38 $ACTION_MASSAGE_REMOVE:  
 {"id":414} 
 Player 1 21:31:13 $CHANGE_MONEY:  
 {"playerId":1,"numOfCoins":2} 
 Player 1 21:31:13 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":2}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":49,"originStackId":-1},"isAfterActivation":true,"index":49} 
 Player 1 21:31:22 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:31:22 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:31:22 $REPLACE_STACK:  
 {"currentStack":[]} 
 Player 1 21:31:22 $END_TURN:  
 Player 1 21:31:22 $SET_TURN:  
 {"playerId":2} 
 Player 1 21:31:22 $START_TURN:  
 {"playerId":2} 
 Player 1 21:31:23 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:31:23 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:31:23 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 21:31:23 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 21:31:23 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:31:23 $MOVE_CARD_END:  
 {"moveIndex":75,"cardId":90,"flipIfFlipped":false,"playerId":2} 
 Player 1 21:31:24 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 21:31:24 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 21:31:24 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 21:31:24 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 21:31:24 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:31:32 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:31:32 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:31:32 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on The Cage"} 
 Player 1 21:31:32 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on The Cage"} 
 Player 1 21:31:33 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:31:33 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on The Cage"} 
 Player 1 21:31:33 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on The Cage"} 
 Player 1 21:31:33 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on The Cage"} 
 Player 1 21:31:33 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on The Cage"} 
 Player 1 21:31:33 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:31:36 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:31:36 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:31:38 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:31:38 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:31:42 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:31:42 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:31:42 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:31:42 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Samson"} 
 Player 1 21:31:42 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Samson"} 
 Player 1 21:31:42 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Samson"} 
 Player 1 21:31:42 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Samson"} 
 Player 1 21:31:42 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Samson \n2:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:31:42 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Samson \n2:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:31:42 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Samson \n2:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:31:42 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Samson \n2:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:31:44 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:31:44 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Samson"} 
 Player 1 21:31:44 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Samson"} 
 Player 1 21:31:44 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Samson"} 
 Player 1 21:31:44 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Samson"} 
 Player 1 21:31:44 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:31:47 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:31:47 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:31:49 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:31:49 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:31:51 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:31:51 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:31:52 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 activated Blood Lust"} 
 Player 1 21:31:52 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 activated Blood Lust"} 
 Player 1 21:32:00 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":true} 
 Player 1 21:32:00 $NEXT_STACK_ID:  
 Player 1 21:32:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 activated Blood Lust"} 
 Player 1 21:32:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 activated Blood Lust \n3:Player 1 activated Lilith"} 
 Player 1 21:32:00 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":136,"creatorCardId":270,"hasLockingStackEffect":false,"itemToPlayCardId":270,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 1 21:32:00 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":416,"_text":"Add ActivateItem 136 "}} 
 Player 1 21:32:03 $USE_ITEM:  
 {"cardId":270} 
 Player 1 21:32:03 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:32:03 $ACTION_MASSAGE_REMOVE:  
 {"id":416} 
 Player 1 21:32:03 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 activated Blood Lust \n3:Player 1 activated Lilith"} 
 Player 1 21:32:03 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":136,"creatorCardId":270,"hasLockingStackEffect":false,"itemToPlayCardId":270,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 21:32:03 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":417,"_text":"Response Adding ActivateItem 136"},"childOfId":416} 
 Player 1 21:32:03 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":418,"_text":"Wait For Response From Player 2 "},"childOfId":416} 
 Player 1 21:32:03 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:32:03 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:32:11 $ACTION_MASSAGE_REMOVE:  
 {"id":418} 
 Player 1 21:32:11 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":419,"_text":"Wait For Response From Player 1 "},"childOfId":416} 
 Player 1 21:32:11 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:32:12 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:32:12 $ACTION_MASSAGE_REMOVE:  
 {"id":419} 
 Player 1 21:32:12 $ACTION_MASSAGE_REMOVE:  
 {"id":417} 
 Player 1 21:32:12 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":420,"_text":"Resolve ActivateItem 136 "}} 
 Player 1 21:32:12 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":270,"particleType":6} 
 Player 1 21:32:14 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":270,"particleType":6} 
 Player 1 21:32:14 $NEXT_STACK_ID:  
 Player 1 21:32:14 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 activated Blood Lust \n3:Player 1 activated Lilith"} 
 Player 1 21:32:14 $PLAYER_LOSE_LOOT:  
 {"playerId":1,"cardId":70} 
 Player 1 21:32:14 $MOVE_CARD:  
 {"moveIndex":76,"cardId":70,"placeID":278,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 21:32:14 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 activated Blood Lust \n3:Player 1 play 4 Cents(10): addMoney \n4:Player 1 activated Lilith"} 
 Player 1 21:32:14 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 activated Blood Lust \n3:Player 1 play 4 Cents(10): addMoney \n4:Player 1 activated Lilith"} 
 Player 1 21:32:15 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:32:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 activated Blood Lust \n3:Player 1 play 4 Cents(10): addMoney \n4:Player 1 activated Lilith"} 
 Player 1 21:32:15 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":137,"creatorCardId":270,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":70,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":70,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 21:32:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 activated Blood Lust \n3:Player 1 play 4 Cents(10): addMoney \n4:Player 1 activated Lilith"} 
 Player 1 21:32:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 activated Blood Lust \n3:Player 1 play 4 Cents(10): addMoney \n4:Player 1 activated Lilith"} 
 Player 1 21:32:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 activated Blood Lust \n3:Player 1 play 4 Cents(10): addMoney \n4:Player 1 activated Lilith"} 
 Player 1 21:32:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 activated Blood Lust \n3:Player 1 play 4 Cents(10): addMoney \n4:Player 1 activated Lilith"} 
 Player 1 21:32:15 $REPLACE_STACK:  
 {"currentStack":[{"entityId":134,"creatorCardId":274,"numberRolled":6,"rollingPlayerCardId":274,"stackEffectType":2,"attackedMonsterCardId":252},{"entityId":135,"creatorCardId":274,"hasLockingStackEffect":false,"itemToPlayCardId":275,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1},{"entityId":137,"creatorCardId":270,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":70,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":70,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":136,"creatorCardId":270,"hasLockingStackEffect":false,"itemToPlayCardId":270,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 
 Player 1 21:32:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 activated Blood Lust \n3:Player 1 play 4 Cents(10): addMoney \n4:Player 1 activated Lilith"} 
 Player 1 21:32:15 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":136,"creatorCardId":270,"hasLockingStackEffect":false,"itemToPlayCardId":270,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 21:32:15 $ACTION_MASSAGE_REMOVE:  
 {"id":420} 
 Player 1 21:32:15 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":421,"_text":"Remove After Resolve ActivateItem 136  "}} 
 Player 1 21:32:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 activated Blood Lust \n3:Player 1 play 4 Cents(10): addMoney"} 
 Player 1 21:32:15 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":136,"creatorCardId":270,"hasLockingStackEffect":false,"itemToPlayCardId":270,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 21:32:15 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":422,"_text":"Response Remove After Resolve ActivateItem 136"},"childOfId":421} 
 Player 1 21:32:15 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":423,"_text":"Wait For Response From Player 2 "},"childOfId":421} 
 Player 1 21:32:15 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:32:15 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:32:17 $ACTION_MASSAGE_REMOVE:  
 {"id":423} 
 Player 1 21:32:17 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":424,"_text":"Wait For Response From Player 1 "},"childOfId":421} 
 Player 1 21:32:17 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:32:17 $ACTION_MASSAGE_REMOVE:  
 {"id":424} 
 Player 1 21:32:17 $ACTION_MASSAGE_REMOVE:  
 {"id":422} 
 Player 1 21:32:17 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":425,"_text":"Resolve PlayLootCardStackEffect 137 "}} 
 Player 1 21:32:17 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 activated Blood Lust \n3:Player 1 play 4 Cents(10): addMoney"} 
 Player 1 21:32:17 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":70,"particleType":6} 
 Player 1 21:32:17 $ACTION_MASSAGE_REMOVE:  
 {"id":421} 
 Player 1 21:32:19 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":70,"particleType":6} 
 Player 1 21:32:19 $CHANGE_MONEY:  
 {"playerId":1,"numOfCoins":4} 
 Player 1 21:32:19 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":50,"originStackId":-1},"isAfterActivation":true,"index":50} 
 Player 1 21:32:19 $MOVE_CARD:  
 {"moveIndex":77,"cardId":70,"placeID":279,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 21:32:19 $MOVE_CARD_TO_PILE:  
 {"type":1,"cardId":70} 
 Player 1 21:32:19 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 activated Blood Lust \n3:Player 1 play 4 Cents(10): addMoney"} 
 Player 1 21:32:19 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":137,"creatorCardId":270,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":70,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 21:32:19 $ACTION_MASSAGE_REMOVE:  
 {"id":425} 
 Player 1 21:32:19 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":426,"_text":"Remove After Resolve PlayLootCardStackEffect 137  "}} 
 Player 1 21:32:19 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 activated Blood Lust"} 
 Player 1 21:32:19 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":137,"creatorCardId":270,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":70,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 21:32:19 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":427,"_text":"Response Remove After Resolve PlayLootCardStackEffect 137"},"childOfId":426} 
 Player 1 21:32:19 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":428,"_text":"Wait For Response From Player 1 "},"childOfId":426} 
 Player 1 21:32:19 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:32:19 $ACTION_MASSAGE_REMOVE:  
 {"id":428} 
 Player 1 21:32:19 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":429,"_text":"Wait For Response From Player 2 "},"childOfId":426} 
 Player 1 21:32:19 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:32:19 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:32:21 $ACTION_MASSAGE_REMOVE:  
 {"id":429} 
 Player 1 21:32:21 $ACTION_MASSAGE_REMOVE:  
 {"id":427} 
 Player 1 21:32:21 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":430,"_text":"Resolve ActivateItem 135 "}} 
 Player 1 21:32:21 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 activated Blood Lust"} 
 Player 1 21:32:21 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 activated Blood Lust"} 
 Player 1 21:32:21 $DO_STACK_EFFECT:  
 {"originPlayerId":1,"playerId":2,"currentStack":[{"entityId":134,"creatorCardId":274,"numberRolled":6,"rollingPlayerCardId":274,"stackEffectType":2,"attackedMonsterCardId":252},{"entityId":135,"creatorCardId":274,"hasLockingStackEffect":false,"itemToPlayCardId":275,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 
 Player 1 21:32:22 $ACTION_MASSAGE_REMOVE:  
 {"id":426} 
 Player 1 21:32:24 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 activated Blood Lust"} 
 Player 1 21:32:24 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 activated Blood Lust"} 
 Player 1 21:32:24 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 activated Blood Lust"} 
 Player 1 21:32:24 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 activated Blood Lust"} 
 Player 1 21:32:24 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 activated Blood Lust"} 
 Player 1 21:32:24 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 activated Blood Lust"} 
 Player 1 21:32:24 $ACTION_MASSAGE_REMOVE:  
 {"id":430} 
 Player 1 21:32:24 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 activated Blood Lust"} 
 Player 1 21:32:24 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 activated Blood Lust"} 
 Player 1 21:32:24 $REPLACE_STACK:  
 {"currentStack":[{"entityId":134,"creatorCardId":274,"numberRolled":6,"rollingPlayerCardId":274,"stackEffectType":2,"attackedMonsterCardId":252},{"entityId":135,"creatorCardId":274,"hasLockingStackEffect":false,"itemToPlayCardId":275,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 
 Player 1 21:32:24 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":431,"_text":"Remove After Resolve ActivateItem 135  "}} 
 Player 1 21:32:24 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:32:24 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":135,"creatorCardId":274,"hasLockingStackEffect":false,"itemToPlayCardId":275,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 21:32:24 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":432,"_text":"Response Remove After Resolve ActivateItem 135"},"childOfId":431} 
 Player 1 21:32:24 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":433,"_text":"Wait For Response From Player 2 "},"childOfId":431} 
 Player 1 21:32:24 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:32:24 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:32:25 $ACTION_MASSAGE_REMOVE:  
 {"id":433} 
 Player 1 21:32:25 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":434,"_text":"Wait For Response From Player 1 "},"childOfId":431} 
 Player 1 21:32:25 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:32:25 $ACTION_MASSAGE_REMOVE:  
 {"id":434} 
 Player 1 21:32:25 $ACTION_MASSAGE_REMOVE:  
 {"id":432} 
 Player 1 21:32:25 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":435,"_text":"Resolve AttackRoll 134 "}} 
 Player 1 21:32:25 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:32:25 $DO_STACK_EFFECT:  
 {"originPlayerId":1,"playerId":2,"currentStack":[{"entityId":134,"creatorCardId":274,"numberRolled":6,"rollingPlayerCardId":274,"stackEffectType":2,"attackedMonsterCardId":252}]} 
 Player 1 21:32:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:32:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:32:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Cage"} 
 Player 1 21:32:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Cage"} 
 Player 1 21:32:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Cage"} 
 Player 1 21:32:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Cage"} 
 Player 1 21:32:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Cage \n2:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:32:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Cage \n2:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:32:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Cage \n2:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:32:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Cage \n2:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:32:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Cage \n2:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:32:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Cage \n2:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:32:26 $ACTION_MASSAGE_REMOVE:  
 {"id":435} 
 Player 1 21:32:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Cage \n2:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:32:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Cage \n2:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:32:26 $REPLACE_STACK:  
 {"currentStack":[{"entityId":138,"creatorCardId":274,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":252,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":134,"creatorCardId":274,"numberRolled":6,"rollingPlayerCardId":274,"stackEffectType":2,"attackedMonsterCardId":252}]} 
 Player 1 21:32:26 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":436,"_text":"Remove After Resolve AttackRoll 134  "}} 
 Player 1 21:32:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Cage"} 
 Player 1 21:32:26 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":134,"creatorCardId":274,"numberRolled":6,"rollingPlayerCardId":274,"stackEffectType":2,"attackedMonsterCardId":252}} 
 Player 1 21:32:26 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":437,"_text":"Response Remove After Resolve AttackRoll 134"},"childOfId":436} 
 Player 1 21:32:26 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":438,"_text":"Wait For Response From Player 2 "},"childOfId":436} 
 Player 1 21:32:26 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:32:26 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:32:27 $ACTION_MASSAGE_REMOVE:  
 {"id":431} 
 Player 1 21:32:29 $ACTION_MASSAGE_REMOVE:  
 {"id":436} 
 Player 1 21:32:30 $ACTION_MASSAGE_REMOVE:  
 {"id":438} 
 Player 1 21:32:30 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":439,"_text":"Wait For Response From Player 1 "},"childOfId":436} 
 Player 1 21:32:30 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:32:30 $ACTION_MASSAGE_REMOVE:  
 {"id":439} 
 Player 1 21:32:30 $ACTION_MASSAGE_REMOVE:  
 {"id":437} 
 Player 1 21:32:30 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":440,"_text":"Resolve CombatDamage 138 "}} 
 Player 1 21:32:30 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Cage"} 
 Player 1 21:32:30 $DO_STACK_EFFECT:  
 {"originPlayerId":1,"playerId":2,"currentStack":[{"entityId":138,"creatorCardId":274,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":252,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}]} 
 Player 1 21:32:30 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Cage"} 
 Player 1 21:32:30 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Cage"} 
 Player 1 21:32:30 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Cage"} 
 Player 1 21:32:30 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Cage"} 
 Player 1 21:32:30 $ACTION_MASSAGE_REMOVE:  
 {"id":440} 
 Player 1 21:32:30 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to The Cage"} 
 Player 1 21:32:30 $REPLACE_STACK:  
 {"currentStack":[{"entityId":138,"creatorCardId":274,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":252,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}]} 
 Player 1 21:32:30 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":441,"_text":"Remove After Resolve CombatDamage 138  "}} 
 Player 1 21:32:30 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:32:30 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":138,"creatorCardId":274,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":252,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 21:32:30 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":442,"_text":"Response Remove After Resolve CombatDamage 138"},"childOfId":441} 
 Player 1 21:32:30 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":443,"_text":"Wait For Response From Player 1 "},"childOfId":441} 
 Player 1 21:32:30 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:32:30 $ACTION_MASSAGE_REMOVE:  
 {"id":443} 
 Player 1 21:32:30 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":444,"_text":"Wait For Response From Player 2 "},"childOfId":441} 
 Player 1 21:32:30 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:32:30 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:32:33 $ACTION_MASSAGE_REMOVE:  
 {"id":441} 
 Player 1 21:32:38 $ACTION_MASSAGE_REMOVE:  
 {"id":444} 
 Player 1 21:32:38 $ACTION_MASSAGE_REMOVE:  
 {"id":442} 
 Player 1 21:32:38 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":445,"_text":"Stack Was Emptied "}} 
 Player 1 21:32:38 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:32:38 $ACTION_MASSAGE_REMOVE:  
 {"id":445} 
 Player 1 21:32:38 $TURN_PLAYER_DO_STACK_EFFECT:  
 {"playerId":2} 
 Player 1 21:32:39 $ACTION_MASSAGE_REMOVE:  
 {"id":445} 
 Player 1 21:32:40 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:32:40 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:32:42 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:32:42 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:32:49 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:32:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:32:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:32:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Samson"} 
 Player 1 21:32:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Samson"} 
 Player 1 21:32:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Samson"} 
 Player 1 21:32:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Samson"} 
 Player 1 21:32:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Samson \n2:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:32:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Samson \n2:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:32:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Samson \n2:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:32:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Samson \n2:Player 2 is rolling against The Cage<Monster>"} 
 Player 1 21:32:51 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:32:51 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Samson"} 
 Player 1 21:32:51 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Samson"} 
 Player 1 21:32:51 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 21:32:51 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 21:32:51 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 21:32:51 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 21:32:51 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Samson \n2:Player 2 is about to die"} 
 Player 1 21:32:51 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Samson \n2:Player 2 is about to die"} 
 Player 1 21:32:51 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:32:52 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 21:32:52 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 21:32:52 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 21:32:52 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 21:32:52 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 21:32:52 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 21:32:52 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 1 21:32:52 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 1 21:32:52 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 1 21:32:52 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 1 21:32:53 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:32:55 $MOVE_CARD_END:  
 {"moveIndex":78,"cardId":9,"flipIfFlipped":true,"playerId":2} 
 Player 1 21:32:56 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 21:32:56 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 21:32:56 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 21:32:56 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 21:32:56 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:32:56 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:32:56 $RECHARGE_ITEM:  
 {"cardId":270} 
 Player 1 21:32:56 $PLAYER_RECHARGE_ITEM:  
 {"playerId":1,"cardId":270} 
 Player 1 21:32:56 $RECHARGE_ITEM:  
 {"cardId":271} 
 Player 1 21:32:56 $PLAYER_RECHARGE_ITEM:  
 {"playerId":1,"cardId":271} 
 Player 1 21:32:56 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:32:56 $NEXT_STACK_ID:  
 Player 1 21:32:56 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:32:56 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 21:32:56 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":143,"creatorCardId":270,"turnPlayerCardId":270,"stackEffectType":13}} 
 Player 1 21:32:56 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":446,"_text":"Add StartTurnLoot 143 "}} 
 Player 1 21:32:56 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:32:56 $ACTION_MASSAGE_REMOVE:  
 {"id":446} 
 Player 1 21:32:57 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 21:32:57 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":143,"creatorCardId":270,"turnPlayerCardId":270,"stackEffectType":13}} 
 Player 1 21:32:57 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":447,"_text":"Response Adding StartTurnLoot 143"},"childOfId":446} 
 Player 1 21:32:57 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":448,"_text":"Wait For Response From Player 1 "},"childOfId":446} 
 Player 1 21:32:57 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:32:57 $ACTION_MASSAGE_REMOVE:  
 {"id":448} 
 Player 1 21:32:57 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":449,"_text":"Wait For Response From Player 2 "},"childOfId":446} 
 Player 1 21:32:57 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:32:57 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:32:57 $ACTION_MASSAGE_REMOVE:  
 {"id":449} 
 Player 1 21:32:57 $ACTION_MASSAGE_REMOVE:  
 {"id":447} 
 Player 1 21:32:57 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":450,"_text":"Resolve StartTurnLoot 143 "}} 
 Player 1 21:32:57 $DRAW_CARD:  
 {"deckType":1} 
 Player 1 21:32:57 $MOVE_CARD:  
 {"moveIndex":79,"cardId":79,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 1 21:32:58 $CARD_DRAWN:  
 {"playerId":1,"deckType":1,"drawnCardId":79} 
 Player 1 21:32:58 $FLIP_CARD:  
 {"cardId":79} 
 Player 1 21:32:58 $PLAYER_GET_LOOT:  
 {"playerId":1,"cardId":79} 
 Player 1 21:32:58 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 21:32:58 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":143,"creatorCardId":270,"turnPlayerCardId":270,"stackEffectType":13}} 
 Player 1 21:32:58 $ACTION_MASSAGE_REMOVE:  
 {"id":450} 
 Player 1 21:32:58 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":451,"_text":"Remove After Resolve StartTurnLoot 143  "}} 
 Player 1 21:32:58 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:32:58 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":143,"creatorCardId":270,"turnPlayerCardId":270,"stackEffectType":13}} 
 Player 1 21:32:58 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":452,"_text":"Response Remove After Resolve StartTurnLoot 143"},"childOfId":451} 
 Player 1 21:32:58 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":453,"_text":"Wait For Response From Player 2 "},"childOfId":451} 
 Player 1 21:32:58 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:32:58 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:32:58 $ACTION_MASSAGE_REMOVE:  
 {"id":453} 
 Player 1 21:32:58 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":454,"_text":"Wait For Response From Player 1 "},"childOfId":451} 
 Player 1 21:32:58 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:32:58 $ACTION_MASSAGE_REMOVE:  
 {"id":454} 
 Player 1 21:32:58 $ACTION_MASSAGE_REMOVE:  
 {"id":452} 
 Player 1 21:32:58 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":455,"_text":"Stack Was Emptied "}} 
 Player 1 21:32:58 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:32:58 $ACTION_MASSAGE_REMOVE:  
 {"id":451} 
 Player 1 21:33:00 $ACTION_MASSAGE_REMOVE:  
 {"id":455} 
 Player 1 21:33:01 $ACTION_MASSAGE_REMOVE:  
 {"id":451} 
 Player 1 21:33:01 $NEXT_STACK_ID:  
 Player 1 21:33:01 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:33:01 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play A Dime(5) "} 
 Player 1 21:33:01 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":144,"creatorCardId":270,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":79,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 1 21:33:02 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":456,"_text":"Add PlayLootCardStackEffect 144 "}} 
 Player 1 21:33:02 $PLAYER_LOSE_LOOT:  
 {"playerId":1,"cardId":79} 
 Player 1 21:33:02 $MOVE_CARD:  
 {"moveIndex":80,"cardId":79,"placeID":278,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 21:33:02 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play A Dime(5): addMoney"} 
 Player 1 21:33:02 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play A Dime(5): addMoney"} 
 Player 1 21:33:02 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:33:02 $ACTION_MASSAGE_REMOVE:  
 {"id":456} 
 Player 1 21:33:02 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play A Dime(5): addMoney"} 
 Player 1 21:33:02 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":144,"creatorCardId":270,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":79,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":79,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 21:33:02 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":457,"_text":"Response Adding PlayLootCardStackEffect 144"},"childOfId":456} 
 Player 1 21:33:02 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":458,"_text":"Wait For Response From Player 1 "},"childOfId":456} 
 Player 1 21:33:02 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:33:02 $ACTION_MASSAGE_REMOVE:  
 {"id":458} 
 Player 1 21:33:02 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":459,"_text":"Wait For Response From Player 2 "},"childOfId":456} 
 Player 1 21:33:02 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:33:02 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:33:03 $ACTION_MASSAGE_REMOVE:  
 {"id":459} 
 Player 1 21:33:03 $ACTION_MASSAGE_REMOVE:  
 {"id":457} 
 Player 1 21:33:03 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":460,"_text":"Resolve PlayLootCardStackEffect 144 "}} 
 Player 1 21:33:03 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play A Dime(5): addMoney"} 
 Player 1 21:33:03 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":79,"particleType":6} 
 Player 1 21:33:05 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":79,"particleType":6} 
 Player 1 21:33:05 $CHANGE_MONEY:  
 {"playerId":1,"numOfCoins":10} 
 Player 1 21:33:05 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":10}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":51,"originStackId":-1},"isAfterActivation":true,"index":51} 
 Player 1 21:33:05 $MOVE_CARD:  
 {"moveIndex":81,"cardId":79,"placeID":279,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 21:33:05 $MOVE_CARD_TO_PILE:  
 {"type":1,"cardId":79} 
 Player 1 21:33:05 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play A Dime(5): addMoney"} 
 Player 1 21:33:05 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":144,"creatorCardId":270,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":79,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 21:33:05 $ACTION_MASSAGE_REMOVE:  
 {"id":460} 
 Player 1 21:33:05 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":461,"_text":"Remove After Resolve PlayLootCardStackEffect 144  "}} 
 Player 1 21:33:05 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:33:05 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":144,"creatorCardId":270,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":79,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 21:33:05 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":462,"_text":"Response Remove After Resolve PlayLootCardStackEffect 144"},"childOfId":461} 
 Player 1 21:33:05 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":463,"_text":"Wait For Response From Player 2 "},"childOfId":461} 
 Player 1 21:33:05 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:33:05 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:33:06 $ACTION_MASSAGE_REMOVE:  
 {"id":463} 
 Player 1 21:33:06 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":464,"_text":"Wait For Response From Player 1 "},"childOfId":461} 
 Player 1 21:33:06 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:33:06 $ACTION_MASSAGE_REMOVE:  
 {"id":464} 
 Player 1 21:33:06 $ACTION_MASSAGE_REMOVE:  
 {"id":462} 
 Player 1 21:33:06 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":465,"_text":"Stack Was Emptied "}} 
 Player 1 21:33:06 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:33:06 $ACTION_MASSAGE_REMOVE:  
 {"id":461} 
 Player 1 21:33:06 $NEXT_STACK_ID:  
 Player 1 21:33:06 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:33:06 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to buy TopBlankCard for 10"} 
 Player 1 21:33:06 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":145,"creatorCardId":270,"itemToPurchaseCardId":0,"playerWhoBuysCardId":270,"cost":10,"stackEffectType":9}} 
 Player 1 21:33:06 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":466,"_text":"Add PurchaseItem 145 "}} 
 Player 1 21:33:06 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:33:06 $ACTION_MASSAGE_REMOVE:  
 {"id":466} 
 Player 1 21:33:06 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to buy TopBlankCard for 10"} 
 Player 1 21:33:06 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":145,"creatorCardId":270,"itemToPurchaseCardId":0,"playerWhoBuysCardId":270,"cost":10,"stackEffectType":9}} 
 Player 1 21:33:06 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":467,"_text":"Response Adding PurchaseItem 145"},"childOfId":466} 
 Player 1 21:33:06 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":468,"_text":"Wait For Response From Player 1 "},"childOfId":466} 
 Player 1 21:33:06 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:33:06 $ACTION_MASSAGE_REMOVE:  
 {"id":468} 
 Player 1 21:33:06 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":469,"_text":"Wait For Response From Player 2 "},"childOfId":466} 
 Player 1 21:33:06 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:33:06 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:33:06 $ACTION_MASSAGE_REMOVE:  
 {"id":469} 
 Player 1 21:33:06 $ACTION_MASSAGE_REMOVE:  
 {"id":467} 
 Player 1 21:33:07 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":470,"_text":"Resolve PurchaseItem 145 "}} 
 Player 1 21:33:07 $CHANGE_MONEY:  
 {"playerId":1,"numOfCoins":-10} 
 Player 1 21:33:07 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-10}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":52,"originStackId":-1},"isAfterActivation":true,"index":52} 
 Player 1 21:33:07 $DRAW_CARD:  
 {"deckType":5} 
 Player 1 21:33:07 $REGISTER_PASSIVE_ITEM:  
 {"cardId":172} 
 Player 1 21:33:07 $MOVE_CARD:  
 {"moveIndex":82,"cardId":172,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 
 Player 1 21:33:07 $ACTION_MASSAGE_REMOVE:  
 {"id":465} 
 Player 1 21:33:07 $ADD_AN_ITEM:  
 {"playerId":1,"cardId":172,"isReward":false} 
 Player 1 21:33:07 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":172}],"result":true,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":53,"originStackId":-1},"isAfterActivation":true,"index":53} 
 Player 1 21:33:07 $NEXT_STACK_ID:  
 Player 1 21:33:07 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to buy TopBlankCard for 10"} 
 Player 1 21:33:07 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to buy TopBlankCard for 10 \n2:Activate Lard effect GainStats<GainStats>"} 
 Player 1 21:33:07 $ADD_TO_STACK:  
 {"stackEffect":{"effectCollectedData":null,"entityId":146,"creatorCardId":270,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":172,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":1,"cardId":172,"effctType":0},"isAfterActivation":true,"index":53,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 21:33:07 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":471,"_text":"Add ActivatePassiveEffect 146 "}} 
 Player 1 21:33:07 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to buy TopBlankCard for 10 \n2:Activate Lard effect GainStats<GainStats>"} 
 Player 1 21:33:07 $ACTION_MASSAGE_REMOVE:  
 {"id":471} 
 Player 1 21:33:07 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to buy TopBlankCard for 10 \n2:Activate Lard effect GainStats<GainStats>"} 
 Player 1 21:33:07 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"effectCollectedData":{"effectTargets":[270],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":270,"effectCardPlayer":270},"entityId":146,"creatorCardId":270,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":172,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":1,"cardId":172,"effctType":0},"isAfterActivation":true,"index":53,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 21:33:07 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":472,"_text":"Response Adding ActivatePassiveEffect 146"},"childOfId":471} 
 Player 1 21:33:07 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":473,"_text":"Wait For Response From Player 2 "},"childOfId":471} 
 Player 1 21:33:07 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:33:07 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:33:08 $ACTION_MASSAGE_REMOVE:  
 {"id":473} 
 Player 1 21:33:08 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":474,"_text":"Wait For Response From Player 1 "},"childOfId":471} 
 Player 1 21:33:08 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:33:08 $ACTION_MASSAGE_REMOVE:  
 {"id":474} 
 Player 1 21:33:08 $ACTION_MASSAGE_REMOVE:  
 {"id":472} 
 Player 1 21:33:08 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":475,"_text":"Resolve ActivatePassiveEffect 146 "}} 
 Player 1 21:33:08 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":172,"particleType":6} 
 Player 1 21:33:08 $ACTION_MASSAGE_REMOVE:  
 {"id":461} 
 Player 1 21:33:10 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":172,"particleType":6} 
 Player 1 21:33:10 $PLAYER_GAIN_HP:  
 {"playerId":1,"hpToGain":2,"isTemp":false} 
 Player 1 21:33:10 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":172}],"result":true,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":53,"originStackId":-1},"isAfterActivation":true,"index":53} 
 Player 1 21:33:10 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to buy TopBlankCard for 10 \n2:Activate Lard effect GainStats<GainStats>"} 
 Player 1 21:33:10 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"effectCollectedData":{"effectTargets":[270],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":270,"effectCardPlayer":270},"entityId":146,"creatorCardId":270,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":172,"isAfterActivation":true,"index":53,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 21:33:10 $ACTION_MASSAGE_REMOVE:  
 {"id":475} 
 Player 1 21:33:10 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":476,"_text":"Remove After Resolve ActivatePassiveEffect 146  "}} 
 Player 1 21:33:10 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to buy TopBlankCard for 10"} 
 Player 1 21:33:10 $REMOVE_FROM_STACK:  
 {"stackEffect":{"effectCollectedData":{"effectTargets":[270],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":270,"effectCardPlayer":270},"entityId":146,"creatorCardId":270,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":172,"isAfterActivation":true,"index":53,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 21:33:10 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":477,"_text":"Response Remove After Resolve ActivatePassiveEffect 146"},"childOfId":476} 
 Player 1 21:33:10 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":478,"_text":"Wait For Response From Player 1 "},"childOfId":476} 
 Player 1 21:33:10 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:33:10 $ACTION_MASSAGE_REMOVE:  
 {"id":478} 
 Player 1 21:33:10 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":479,"_text":"Wait For Response From Player 2 "},"childOfId":476} 
 Player 1 21:33:10 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:33:10 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:33:10 $ACTION_MASSAGE_REMOVE:  
 {"id":479} 
 Player 1 21:33:10 $ACTION_MASSAGE_REMOVE:  
 {"id":477} 
 Player 1 21:33:10 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":480,"_text":"Resolve PurchaseItem 145 "}} 
 Player 1 21:33:10 $ACTION_MASSAGE_REMOVE:  
 {"id":470} 
 Player 1 21:33:10 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":481,"_text":"Remove After Resolve PurchaseItem 145  "}} 
 Player 1 21:33:10 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:33:10 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":145,"creatorCardId":270,"itemToPurchaseCardId":0,"playerWhoBuysCardId":270,"cost":10,"stackEffectType":9}} 
 Player 1 21:33:10 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":482,"_text":"Response Remove After Resolve PurchaseItem 145"},"childOfId":481} 
 Player 1 21:33:11 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":483,"_text":"Wait For Response From Player 2 "},"childOfId":481} 
 Player 1 21:33:11 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:33:11 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:33:11 $ACTION_MASSAGE_REMOVE:  
 {"id":483} 
 Player 1 21:33:11 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":484,"_text":"Wait For Response From Player 1 "},"childOfId":481} 
 Player 1 21:33:11 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:33:11 $ACTION_MASSAGE_REMOVE:  
 {"id":484} 
 Player 1 21:33:11 $ACTION_MASSAGE_REMOVE:  
 {"id":482} 
 Player 1 21:33:11 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":485,"_text":"Stack Was Emptied "}} 
 Player 1 21:33:11 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:33:11 $ACTION_MASSAGE_REMOVE:  
 {"id":476} 
 Player 1 21:33:11 $ACTION_MASSAGE_REMOVE:  
 {"id":481} 
 Player 1 21:33:12 $ACTION_MASSAGE_REMOVE:  
 {"id":485} 
 Player 1 21:33:13 $ACTION_MASSAGE_REMOVE:  
 {"id":476} 
 Player 1 21:33:13 $ACTION_MASSAGE_REMOVE:  
 {"id":481} 
 Player 1 21:33:36 $NEXT_STACK_ID:  
 Player 1 21:33:36 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:33:36 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1  declared attack on The Cage"} 
 Player 1 21:33:36 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":147,"creatorCardId":270,"attackingPlayerCardId":270,"idOfCardBeingAttacked":252,"stackEffectType":4}} 
 Player 1 21:33:36 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":486,"_text":"Add DeclareAttack 147 "}} 
 Player 1 21:33:36 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:33:36 $ACTION_MASSAGE_REMOVE:  
 {"id":486} 
 Player 1 21:33:36 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1  declared attack on The Cage"} 
 Player 1 21:33:36 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":147,"creatorCardId":270,"attackingPlayerCardId":270,"idOfCardBeingAttacked":252,"stackEffectType":4}} 
 Player 1 21:33:36 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":487,"_text":"Response Adding DeclareAttack 147"},"childOfId":486} 
 Player 1 21:33:36 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":488,"_text":"Wait For Response From Player 1 "},"childOfId":486} 
 Player 1 21:33:36 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:33:36 $ACTION_MASSAGE_REMOVE:  
 {"id":488} 
 Player 1 21:33:36 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":489,"_text":"Wait For Response From Player 2 "},"childOfId":486} 
 Player 1 21:33:36 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:33:36 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:33:37 $ACTION_MASSAGE_REMOVE:  
 {"id":489} 
 Player 1 21:33:37 $ACTION_MASSAGE_REMOVE:  
 {"id":487} 
 Player 1 21:33:37 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":490,"_text":"Resolve DeclareAttack 147 "}} 
 Player 1 21:33:37 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":252,"particleType":5} 
 Player 1 21:33:37 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":54,"originStackId":147},"isAfterActivation":true,"index":54} 
 Player 1 21:33:37 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1  declared attack on The Cage"} 
 Player 1 21:33:37 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":147,"creatorCardId":270,"attackingPlayerCardId":270,"idOfCardBeingAttacked":252,"stackEffectType":4}} 
 Player 1 21:33:37 $ACTION_MASSAGE_REMOVE:  
 {"id":490} 
 Player 1 21:33:37 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":491,"_text":"Remove After Resolve DeclareAttack 147  "}} 
 Player 1 21:33:37 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:33:37 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":147,"creatorCardId":270,"attackingPlayerCardId":270,"idOfCardBeingAttacked":252,"stackEffectType":4}} 
 Player 1 21:33:37 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":492,"_text":"Response Remove After Resolve DeclareAttack 147"},"childOfId":491} 
 Player 1 21:33:37 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":493,"_text":"Wait For Response From Player 2 "},"childOfId":491} 
 Player 1 21:33:37 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:33:37 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:33:37 $ACTION_MASSAGE_REMOVE:  
 {"id":493} 
 Player 1 21:33:37 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":494,"_text":"Wait For Response From Player 1 "},"childOfId":491} 
 Player 1 21:33:37 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:33:37 $ACTION_MASSAGE_REMOVE:  
 {"id":494} 
 Player 1 21:33:37 $ACTION_MASSAGE_REMOVE:  
 {"id":492} 
 Player 1 21:33:37 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":495,"_text":"Stack Was Emptied "}} 
 Player 1 21:33:37 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:33:37 $ACTION_MASSAGE_REMOVE:  
 {"id":491} 
 Player 1 21:33:39 $ACTION_MASSAGE_REMOVE:  
 {"id":495} 
 Player 1 21:33:39 $NEXT_STACK_ID:  
 Player 1 21:33:39 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:33:39 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against The Cage<Monster>"} 
 Player 1 21:33:39 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":148,"creatorCardId":270,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":252}} 
 Player 1 21:33:39 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":496,"_text":"Add AttackRoll 148 "}} 
 Player 1 21:33:39 $ROLL_DICE:  
 {"playerId":1} 
 Player 1 21:33:40 $ACTION_MASSAGE_REMOVE:  
 {"id":491} 
 Player 1 21:33:40 $ROLL_DICE_ENDED:  
 {"playerId":1,"numberRolled":1} 
 Player 1 21:33:40 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 1 vs The Cage<Monster>"} 
 Player 1 21:33:40 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:33:40 $ACTION_MASSAGE_REMOVE:  
 {"id":496} 
 Player 1 21:33:41 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 1 vs The Cage<Monster>"} 
 Player 1 21:33:41 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":148,"creatorCardId":270,"numberRolled":1,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":252}} 
 Player 1 21:33:41 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":497,"_text":"Response Adding AttackRoll 148"},"childOfId":496} 
 Player 1 21:33:41 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":498,"_text":"Wait For Response From Player 1 "},"childOfId":496} 
 Player 1 21:33:41 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:33:50 $ACTION_MASSAGE_REMOVE:  
 {"id":498} 
 Player 1 21:33:50 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":499,"_text":"Wait For Response From Player 2 "},"childOfId":496} 
 Player 1 21:33:50 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:33:50 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:33:50 $ACTION_MASSAGE_REMOVE:  
 {"id":499} 
 Player 1 21:33:50 $ACTION_MASSAGE_REMOVE:  
 {"id":497} 
 Player 1 21:33:50 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":500,"_text":"Resolve AttackRoll 148 "}} 
 Player 1 21:33:50 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":501,"_text":"Added 0 to original roll"}} 
 Player 1 21:33:50 $NEXT_STACK_ID:  
 Player 1 21:33:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 1 vs The Cage<Monster>"} 
 Player 1 21:33:50 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:33:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Lilith \n2:Player 1 rolled 1 vs The Cage<Monster>"} 
 Player 1 21:33:50 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":149,"creatorCardId":270,"entityToDoDamageCardId":252,"entityToTakeDamageCardId":270,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 21:33:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Lilith \n2:Player 1 rolled 1 vs The Cage<Monster>"} 
 Player 1 21:33:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Lilith \n2:Player 1 rolled 1 vs The Cage<Monster>"} 
 Player 1 21:33:50 $REPLACE_STACK:  
 {"currentStack":[{"entityId":149,"creatorCardId":270,"entityToDoDamageCardId":252,"entityToTakeDamageCardId":270,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":148,"creatorCardId":270,"numberRolled":1,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":252}]} 
 Player 1 21:33:50 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":55,"originStackId":148},"isAfterActivation":true,"index":55} 
 Player 1 21:33:51 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Lilith \n2:Player 1 rolled 1 vs The Cage<Monster>"} 
 Player 1 21:33:51 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":148,"creatorCardId":270,"numberRolled":1,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":252}} 
 Player 1 21:33:51 $ACTION_MASSAGE_REMOVE:  
 {"id":500} 
 Player 1 21:33:51 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":502,"_text":"Remove After Resolve AttackRoll 148  "}} 
 Player 1 21:33:51 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Lilith"} 
 Player 1 21:33:51 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":148,"creatorCardId":270,"numberRolled":1,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":252}} 
 Player 1 21:33:51 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":503,"_text":"Response Remove After Resolve AttackRoll 148"},"childOfId":502} 
 Player 1 21:33:51 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":504,"_text":"Wait For Response From Player 1 "},"childOfId":502} 
 Player 1 21:33:51 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:33:52 $ACTION_MASSAGE_REMOVE:  
 {"id":504} 
 Player 1 21:33:52 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":505,"_text":"Wait For Response From Player 2 "},"childOfId":502} 
 Player 1 21:33:52 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:33:52 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:33:52 $ACTION_MASSAGE_REMOVE:  
 {"id":505} 
 Player 1 21:33:52 $ACTION_MASSAGE_REMOVE:  
 {"id":503} 
 Player 1 21:33:52 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":506,"_text":"Resolve CombatDamage 149 "}} 
 Player 1 21:33:52 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage 1 combat damage to Lilith"} 
 Player 1 21:33:52 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage 1 combat damage to Lilith"} 
 Player 1 21:33:53 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":252}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1} 
 Player 1 21:33:53 $NEXT_STACK_ID:  
 Player 1 21:33:53 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage 1 combat damage to Lilith"} 
 Player 1 21:33:53 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage 1 combat damage to Lilith \n2:Activate Lard effect DiscardLoot<DiscardLoot>"} 
 Player 1 21:33:53 $ADD_TO_STACK:  
 {"stackEffect":{"effectCollectedData":null,"entityId":150,"creatorCardId":270,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":172,"effectToDo":{"effectName":"DiscardLoot","cardEffectNum":2,"cardPlayerId":1,"cardId":172,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 21:33:53 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":507,"_text":"Add ActivatePassiveEffect 150 "}} 
 Player 1 21:33:53 $ACTION_MASSAGE_REMOVE:  
 {"id":501} 
 Player 1 21:33:53 $ACTION_MASSAGE_REMOVE:  
 {"id":502} 
 Player 1 21:34:02 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage 1 combat damage to Lilith \n2:Activate Lard effect DiscardLoot<DiscardLoot>"} 
 Player 1 21:34:02 $ACTION_MASSAGE_REMOVE:  
 {"id":507} 
 Player 1 21:34:02 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage 1 combat damage to Lilith \n2:Activate Lard effect DiscardLoot<DiscardLoot>"} 
 Player 1 21:34:02 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"effectCollectedData":{"effectTargets":[34],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":270,"effectCardPlayer":270},"entityId":150,"creatorCardId":270,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":172,"effectToDo":{"effectName":"DiscardLoot","cardEffectNum":2,"cardPlayerId":1,"cardId":172,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 21:34:02 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":508,"_text":"Response Adding ActivatePassiveEffect 150"},"childOfId":507} 
 Player 1 21:34:02 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":509,"_text":"Wait For Response From Player 2 "},"childOfId":507} 
 Player 1 21:34:02 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:34:02 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:34:03 $ACTION_MASSAGE_REMOVE:  
 {"id":509} 
 Player 1 21:34:03 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":510,"_text":"Wait For Response From Player 1 "},"childOfId":507} 
 Player 1 21:34:03 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:34:11 $ACTION_MASSAGE_REMOVE:  
 {"id":510} 
 Player 1 21:34:11 $ACTION_MASSAGE_REMOVE:  
 {"id":508} 
 Player 1 21:34:11 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":511,"_text":"Resolve ActivatePassiveEffect 150 "}} 
 Player 1 21:34:11 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":172,"particleType":6} 
 Player 1 21:34:13 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":172,"particleType":6} 
 Player 1 21:34:13 $PLAYER_LOSE_LOOT:  
 {"playerId":1,"cardId":34} 
 Player 1 21:34:13 $MOVE_CARD:  
 {"moveIndex":83,"cardId":34,"placeID":279,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 21:34:14 $MOVE_CARD_TO_PILE:  
 {"type":1,"cardId":34} 
 Player 1 21:34:14 $DISCARD_LOOT:  
 {"playerId":1,"cardId":34} 
 Player 1 21:34:14 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":252}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1} 
 Player 1 21:34:14 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage 1 combat damage to Lilith \n2:Activate Lard effect DiscardLoot<DiscardLoot>"} 
 Player 1 21:34:14 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"effectCollectedData":{"effectTargets":[34],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":270,"effectCardPlayer":270},"entityId":150,"creatorCardId":270,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":172,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 21:34:14 $ACTION_MASSAGE_REMOVE:  
 {"id":511} 
 Player 1 21:34:14 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":512,"_text":"Remove After Resolve ActivatePassiveEffect 150  "}} 
 Player 1 21:34:14 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage 1 combat damage to Lilith"} 
 Player 1 21:34:14 $REMOVE_FROM_STACK:  
 {"stackEffect":{"effectCollectedData":{"effectTargets":[34],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":270,"effectCardPlayer":270},"entityId":150,"creatorCardId":270,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":172,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 21:34:14 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":513,"_text":"Response Remove After Resolve ActivatePassiveEffect 150"},"childOfId":512} 
 Player 1 21:34:14 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":514,"_text":"Wait For Response From Player 1 "},"childOfId":512} 
 Player 1 21:34:14 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:34:17 $ACTION_MASSAGE_REMOVE:  
 {"id":512} 
 Player 1 21:34:17 $ACTION_MASSAGE_REMOVE:  
 {"id":514} 
 Player 1 21:34:17 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":515,"_text":"Wait For Response From Player 2 "},"childOfId":512} 
 Player 1 21:34:17 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:34:17 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:34:17 $ACTION_MASSAGE_REMOVE:  
 {"id":515} 
 Player 1 21:34:17 $ACTION_MASSAGE_REMOVE:  
 {"id":513} 
 Player 1 21:34:17 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":516,"_text":"Resolve CombatDamage 149 "}} 
 Player 1 21:34:17 $PLAYER_GET_HIT:  
 {"playerId":1,"damage":1,"damageDealerId":252} 
 Player 1 21:34:17 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":252}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 1 21:34:17 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage 1 combat damage to Lilith"} 
 Player 1 21:34:17 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":149,"creatorCardId":270,"entityToDoDamageCardId":252,"entityToTakeDamageCardId":270,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 21:34:17 $ACTION_MASSAGE_REMOVE:  
 {"id":506} 
 Player 1 21:34:17 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":517,"_text":"Remove After Resolve CombatDamage 149  "}} 
 Player 1 21:34:17 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:34:17 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":149,"creatorCardId":270,"entityToDoDamageCardId":252,"entityToTakeDamageCardId":270,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 21:34:18 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":518,"_text":"Response Remove After Resolve CombatDamage 149"},"childOfId":517} 
 Player 1 21:34:18 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":519,"_text":"Wait For Response From Player 2 "},"childOfId":517} 
 Player 1 21:34:18 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:34:18 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:34:18 $ACTION_MASSAGE_REMOVE:  
 {"id":519} 
 Player 1 21:34:18 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":520,"_text":"Wait For Response From Player 1 "},"childOfId":517} 
 Player 1 21:34:18 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:34:19 $ACTION_MASSAGE_REMOVE:  
 {"id":520} 
 Player 1 21:34:19 $ACTION_MASSAGE_REMOVE:  
 {"id":518} 
 Player 1 21:34:19 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":521,"_text":"Stack Was Emptied "}} 
 Player 1 21:34:19 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:34:19 $ACTION_MASSAGE_REMOVE:  
 {"id":500} 
 Player 1 21:34:19 $ACTION_MASSAGE_REMOVE:  
 {"id":517} 
 Player 1 21:34:20 $NEXT_STACK_ID:  
 Player 1 21:34:20 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:34:20 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against The Cage<Monster>"} 
 Player 1 21:34:20 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":151,"creatorCardId":270,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":252}} 
 Player 1 21:34:20 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":522,"_text":"Add AttackRoll 151 "}} 
 Player 1 21:34:20 $ROLL_DICE:  
 {"playerId":1} 
 Player 1 21:34:20 $ACTION_MASSAGE_REMOVE:  
 {"id":517} 
 Player 1 21:34:21 $ACTION_MASSAGE_REMOVE:  
 {"id":521} 
 Player 1 21:34:21 $ROLL_DICE_ENDED:  
 {"playerId":1,"numberRolled":2} 
 Player 1 21:34:21 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 2 vs The Cage<Monster>"} 
 Player 1 21:34:21 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:34:21 $ACTION_MASSAGE_REMOVE:  
 {"id":522} 
 Player 1 21:34:21 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 2 vs The Cage<Monster>"} 
 Player 1 21:34:21 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":151,"creatorCardId":270,"numberRolled":2,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":252}} 
 Player 1 21:34:21 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":523,"_text":"Response Adding AttackRoll 151"},"childOfId":522} 
 Player 1 21:34:21 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":524,"_text":"Wait For Response From Player 1 "},"childOfId":522} 
 Player 1 21:34:21 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:34:46 $ACTION_MASSAGE_REMOVE:  
 {"id":524} 
 Player 1 21:34:46 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":525,"_text":"Wait For Response From Player 2 "},"childOfId":522} 
 Player 1 21:34:46 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:34:46 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:34:46 $ACTION_MASSAGE_REMOVE:  
 {"id":525} 
 Player 1 21:34:46 $ACTION_MASSAGE_REMOVE:  
 {"id":523} 
 Player 1 21:34:46 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":526,"_text":"Resolve AttackRoll 151 "}} 
 Player 1 21:34:46 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":527,"_text":"Added 0 to original roll"}} 
 Player 1 21:34:46 $NEXT_STACK_ID:  
 Player 1 21:34:46 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 2 vs The Cage<Monster>"} 
 Player 1 21:34:46 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:34:46 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Lilith \n2:Player 1 rolled 2 vs The Cage<Monster>"} 
 Player 1 21:34:46 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":152,"creatorCardId":270,"entityToDoDamageCardId":252,"entityToTakeDamageCardId":270,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 21:34:46 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Lilith \n2:Player 1 rolled 2 vs The Cage<Monster>"} 
 Player 1 21:34:47 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Lilith \n2:Player 1 rolled 2 vs The Cage<Monster>"} 
 Player 1 21:34:47 $REPLACE_STACK:  
 {"currentStack":[{"entityId":152,"creatorCardId":270,"entityToDoDamageCardId":252,"entityToTakeDamageCardId":270,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":151,"creatorCardId":270,"numberRolled":2,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":252}]} 
 Player 1 21:34:47 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":2},{"type":2,"number":1},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":56,"originStackId":151},"isAfterActivation":true,"index":56} 
 Player 1 21:34:47 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Lilith \n2:Player 1 rolled 2 vs The Cage<Monster>"} 
 Player 1 21:34:47 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":151,"creatorCardId":270,"numberRolled":2,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":252}} 
 Player 1 21:34:47 $ACTION_MASSAGE_REMOVE:  
 {"id":526} 
 Player 1 21:34:47 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":528,"_text":"Remove After Resolve AttackRoll 151  "}} 
 Player 1 21:34:47 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Lilith"} 
 Player 1 21:34:47 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":151,"creatorCardId":270,"numberRolled":2,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":252}} 
 Player 1 21:34:47 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":529,"_text":"Response Remove After Resolve AttackRoll 151"},"childOfId":528} 
 Player 1 21:34:47 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":530,"_text":"Wait For Response From Player 1 "},"childOfId":528} 
 Player 1 21:34:47 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:34:48 $ACTION_MASSAGE_REMOVE:  
 {"id":530} 
 Player 1 21:34:48 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":531,"_text":"Wait For Response From Player 2 "},"childOfId":528} 
 Player 1 21:34:48 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:34:48 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:34:48 $ACTION_MASSAGE_REMOVE:  
 {"id":531} 
 Player 1 21:34:48 $ACTION_MASSAGE_REMOVE:  
 {"id":529} 
 Player 1 21:34:48 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":532,"_text":"Resolve CombatDamage 152 "}} 
 Player 1 21:34:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage 1 combat damage to Lilith"} 
 Player 1 21:34:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage 1 combat damage to Lilith"} 
 Player 1 21:34:48 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":252}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":false,"index":2} 
 Player 1 21:34:48 $NEXT_STACK_ID:  
 Player 1 21:34:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage 1 combat damage to Lilith"} 
 Player 1 21:34:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage 1 combat damage to Lilith \n2:Activate Lard effect DiscardLoot<DiscardLoot>"} 
 Player 1 21:34:48 $ADD_TO_STACK:  
 {"stackEffect":{"effectCollectedData":null,"entityId":153,"creatorCardId":270,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":172,"effectToDo":{"effectName":"DiscardLoot","cardEffectNum":2,"cardPlayerId":1,"cardId":172,"effctType":0},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 21:34:48 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":533,"_text":"Add ActivatePassiveEffect 153 "}} 
 Player 1 21:34:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage 1 combat damage to Lilith \n2:Activate Lard effect DiscardLoot<DiscardLoot>"} 
 Player 1 21:34:48 $ACTION_MASSAGE_REMOVE:  
 {"id":533} 
 Player 1 21:34:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage 1 combat damage to Lilith \n2:Activate Lard effect DiscardLoot<DiscardLoot>"} 
 Player 1 21:34:48 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"effectCollectedData":{"effectTargets":[107],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":270,"effectCardPlayer":270},"entityId":153,"creatorCardId":270,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":172,"effectToDo":{"effectName":"DiscardLoot","cardEffectNum":2,"cardPlayerId":1,"cardId":172,"effctType":0},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 21:34:48 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":534,"_text":"Response Adding ActivatePassiveEffect 153"},"childOfId":533} 
 Player 1 21:34:48 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":535,"_text":"Wait For Response From Player 2 "},"childOfId":533} 
 Player 1 21:34:48 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:34:48 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:34:49 $ACTION_MASSAGE_REMOVE:  
 {"id":535} 
 Player 1 21:34:49 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":536,"_text":"Wait For Response From Player 1 "},"childOfId":533} 
 Player 1 21:34:49 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:34:49 $ACTION_MASSAGE_REMOVE:  
 {"id":527} 
 Player 1 21:34:50 $ACTION_MASSAGE_REMOVE:  
 {"id":528} 
 Player 1 21:34:52 $ACTION_MASSAGE_REMOVE:  
 {"id":536} 
 Player 1 21:34:52 $ACTION_MASSAGE_REMOVE:  
 {"id":534} 
 Player 1 21:34:52 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":537,"_text":"Resolve ActivatePassiveEffect 153 "}} 
 Player 1 21:34:52 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":172,"particleType":6} 
 Player 1 21:34:54 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":172,"particleType":6} 
 Player 1 21:34:54 $PLAYER_LOSE_LOOT:  
 {"playerId":1,"cardId":107} 
 Player 1 21:34:54 $MOVE_CARD:  
 {"moveIndex":84,"cardId":107,"placeID":279,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 21:34:54 $MOVE_CARD_TO_PILE:  
 {"type":1,"cardId":107} 
 Player 1 21:34:54 $DISCARD_LOOT:  
 {"playerId":1,"cardId":107} 
 Player 1 21:34:54 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":252}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":false,"index":2} 
 Player 1 21:34:54 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage 1 combat damage to Lilith \n2:Activate Lard effect DiscardLoot<DiscardLoot>"} 
 Player 1 21:34:54 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"effectCollectedData":{"effectTargets":[107],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":270,"effectCardPlayer":270},"entityId":153,"creatorCardId":270,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":172,"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 21:34:55 $ACTION_MASSAGE_REMOVE:  
 {"id":537} 
 Player 1 21:34:55 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":538,"_text":"Remove After Resolve ActivatePassiveEffect 153  "}} 
 Player 1 21:34:55 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage 1 combat damage to Lilith"} 
 Player 1 21:34:55 $REMOVE_FROM_STACK:  
 {"stackEffect":{"effectCollectedData":{"effectTargets":[107],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":270,"effectCardPlayer":270},"entityId":153,"creatorCardId":270,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":172,"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 21:34:55 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":539,"_text":"Response Remove After Resolve ActivatePassiveEffect 153"},"childOfId":538} 
 Player 1 21:34:55 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":540,"_text":"Wait For Response From Player 1 "},"childOfId":538} 
 Player 1 21:34:55 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:34:57 $ACTION_MASSAGE_REMOVE:  
 {"id":538} 
 Player 1 21:34:58 $ACTION_MASSAGE_REMOVE:  
 {"id":540} 
 Player 1 21:34:58 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":541,"_text":"Wait For Response From Player 2 "},"childOfId":538} 
 Player 1 21:34:58 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:34:58 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:34:58 $ACTION_MASSAGE_REMOVE:  
 {"id":541} 
 Player 1 21:34:58 $ACTION_MASSAGE_REMOVE:  
 {"id":539} 
 Player 1 21:34:58 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":542,"_text":"Resolve CombatDamage 152 "}} 
 Player 1 21:34:58 $PLAYER_GET_HIT:  
 {"playerId":1,"damage":1,"damageDealerId":252} 
 Player 1 21:34:58 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":252}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 1 21:34:58 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage 1 combat damage to Lilith"} 
 Player 1 21:34:58 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":152,"creatorCardId":270,"entityToDoDamageCardId":252,"entityToTakeDamageCardId":270,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 21:34:58 $ACTION_MASSAGE_REMOVE:  
 {"id":532} 
 Player 1 21:34:59 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":543,"_text":"Remove After Resolve CombatDamage 152  "}} 
 Player 1 21:34:59 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:34:59 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":152,"creatorCardId":270,"entityToDoDamageCardId":252,"entityToTakeDamageCardId":270,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 21:34:59 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":544,"_text":"Response Remove After Resolve CombatDamage 152"},"childOfId":543} 
 Player 1 21:34:59 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":545,"_text":"Wait For Response From Player 2 "},"childOfId":543} 
 Player 1 21:34:59 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:34:59 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:34:59 $ACTION_MASSAGE_REMOVE:  
 {"id":545} 
 Player 1 21:34:59 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":546,"_text":"Wait For Response From Player 1 "},"childOfId":543} 
 Player 1 21:34:59 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:35:01 $ACTION_MASSAGE_REMOVE:  
 {"id":546} 
 Player 1 21:35:01 $ACTION_MASSAGE_REMOVE:  
 {"id":544} 
 Player 1 21:35:01 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":547,"_text":"Stack Was Emptied "}} 
 Player 1 21:35:01 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:35:01 $ACTION_MASSAGE_REMOVE:  
 {"id":526} 
 Player 1 21:35:01 $ACTION_MASSAGE_REMOVE:  
 {"id":543} 
 Player 1 21:35:01 $ACTION_MASSAGE_REMOVE:  
 {"id":543} 
 Player 1 21:35:03 $ACTION_MASSAGE_REMOVE:  
 {"id":547} 
 Player 1 21:35:03 $NEXT_STACK_ID:  
 Player 1 21:35:03 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:35:03 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against The Cage<Monster>"} 
 Player 1 21:35:03 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":154,"creatorCardId":270,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":252}} 
 Player 1 21:35:03 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":548,"_text":"Add AttackRoll 154 "}} 
 Player 1 21:35:03 $ROLL_DICE:  
 {"playerId":1} 
 Player 1 21:35:04 $ROLL_DICE_ENDED:  
 {"playerId":1,"numberRolled":5} 
 Player 1 21:35:04 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 5 vs The Cage<Monster>"} 
 Player 1 21:35:04 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:35:04 $ACTION_MASSAGE_REMOVE:  
 {"id":548} 
 Player 1 21:35:05 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 5 vs The Cage<Monster>"} 
 Player 1 21:35:05 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":154,"creatorCardId":270,"numberRolled":5,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":252}} 
 Player 1 21:35:05 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":549,"_text":"Response Adding AttackRoll 154"},"childOfId":548} 
 Player 1 21:35:05 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":550,"_text":"Wait For Response From Player 1 "},"childOfId":548} 
 Player 1 21:35:05 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:35:06 $ACTION_MASSAGE_REMOVE:  
 {"id":550} 
 Player 1 21:35:06 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":551,"_text":"Wait For Response From Player 2 "},"childOfId":548} 
 Player 1 21:35:06 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:35:06 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:35:06 $ACTION_MASSAGE_REMOVE:  
 {"id":551} 
 Player 1 21:35:06 $ACTION_MASSAGE_REMOVE:  
 {"id":549} 
 Player 1 21:35:06 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":552,"_text":"Resolve AttackRoll 154 "}} 
 Player 1 21:35:07 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":553,"_text":"Added 0 to original roll"}} 
 Player 1 21:35:07 $NEXT_STACK_ID:  
 Player 1 21:35:07 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 5 vs The Cage<Monster>"} 
 Player 1 21:35:07 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:35:07 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to The Cage \n2:Player 1 rolled 5 vs The Cage<Monster>"} 
 Player 1 21:35:07 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":155,"creatorCardId":270,"entityToDoDamageCardId":270,"entityToTakeDamageCardId":252,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 21:35:07 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to The Cage \n2:Player 1 rolled 5 vs The Cage<Monster>"} 
 Player 1 21:35:07 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to The Cage \n2:Player 1 rolled 5 vs The Cage<Monster>"} 
 Player 1 21:35:07 $REPLACE_STACK:  
 {"currentStack":[{"entityId":155,"creatorCardId":270,"entityToDoDamageCardId":270,"entityToTakeDamageCardId":252,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":154,"creatorCardId":270,"numberRolled":5,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":252}]} 
 Player 1 21:35:07 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":1},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":57,"originStackId":154},"isAfterActivation":true,"index":57} 
 Player 1 21:35:07 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to The Cage \n2:Player 1 rolled 5 vs The Cage<Monster>"} 
 Player 1 21:35:07 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":154,"creatorCardId":270,"numberRolled":5,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":252}} 
 Player 1 21:35:07 $ACTION_MASSAGE_REMOVE:  
 {"id":552} 
 Player 1 21:35:07 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":554,"_text":"Remove After Resolve AttackRoll 154  "}} 
 Player 1 21:35:07 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to The Cage"} 
 Player 1 21:35:07 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":154,"creatorCardId":270,"numberRolled":5,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":252}} 
 Player 1 21:35:07 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":555,"_text":"Response Remove After Resolve AttackRoll 154"},"childOfId":554} 
 Player 1 21:35:07 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":556,"_text":"Wait For Response From Player 1 "},"childOfId":554} 
 Player 1 21:35:07 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:35:08 $ACTION_MASSAGE_REMOVE:  
 {"id":556} 
 Player 1 21:35:08 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":557,"_text":"Wait For Response From Player 2 "},"childOfId":554} 
 Player 1 21:35:08 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:35:08 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:35:08 $ACTION_MASSAGE_REMOVE:  
 {"id":557} 
 Player 1 21:35:08 $ACTION_MASSAGE_REMOVE:  
 {"id":555} 
 Player 1 21:35:08 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":558,"_text":"Resolve CombatDamage 155 "}} 
 Player 1 21:35:08 $MONSTER_GET_DAMAGED:  
 {"cardId":252,"hpLeft":5,"damageDealerId":270} 
 Player 1 21:35:08 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":270}],"result":null,"preventMethod":false,"methodScopeId":252,"scopeIsPlayer":false,"index":58,"originStackId":-1},"isAfterActivation":true,"index":58} 
 Player 1 21:35:08 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":5},{"type":0,"number":270},{"type":0,"number":252}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":59,"originStackId":155},"isAfterActivation":true,"index":59} 
 Player 1 21:35:08 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to The Cage"} 
 Player 1 21:35:08 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":155,"creatorCardId":270,"entityToDoDamageCardId":270,"entityToTakeDamageCardId":252,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 21:35:08 $ACTION_MASSAGE_REMOVE:  
 {"id":558} 
 Player 1 21:35:08 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":559,"_text":"Remove After Resolve CombatDamage 155  "}} 
 Player 1 21:35:08 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:35:08 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":155,"creatorCardId":270,"entityToDoDamageCardId":270,"entityToTakeDamageCardId":252,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 21:35:08 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":560,"_text":"Response Remove After Resolve CombatDamage 155"},"childOfId":559} 
 Player 1 21:35:08 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":561,"_text":"Wait For Response From Player 2 "},"childOfId":559} 
 Player 1 21:35:08 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:35:08 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:35:08 $ACTION_MASSAGE_REMOVE:  
 {"id":561} 
 Player 1 21:35:08 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":562,"_text":"Wait For Response From Player 1 "},"childOfId":559} 
 Player 1 21:35:08 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:35:09 $ACTION_MASSAGE_REMOVE:  
 {"id":553} 
 Player 1 21:35:09 $ACTION_MASSAGE_REMOVE:  
 {"id":554} 
 Player 1 21:35:11 $ACTION_MASSAGE_REMOVE:  
 {"id":562} 
 Player 1 21:35:11 $ACTION_MASSAGE_REMOVE:  
 {"id":560} 
 Player 1 21:35:11 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":563,"_text":"Stack Was Emptied "}} 
 Player 1 21:35:11 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:35:11 $ACTION_MASSAGE_REMOVE:  
 {"id":552} 
 Player 1 21:35:11 $ACTION_MASSAGE_REMOVE:  
 {"id":559} 
 Player 1 21:35:12 $NEXT_STACK_ID:  
 Player 1 21:35:12 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:35:12 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against The Cage<Monster>"} 
 Player 1 21:35:12 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":156,"creatorCardId":270,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":252}} 
 Player 1 21:35:12 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":564,"_text":"Add AttackRoll 156 "}} 
 Player 1 21:35:12 $ROLL_DICE:  
 {"playerId":1} 
 Player 1 21:35:12 $ACTION_MASSAGE_REMOVE:  
 {"id":563} 
 Player 1 21:35:14 $ROLL_DICE_ENDED:  
 {"playerId":1,"numberRolled":2} 
 Player 1 21:35:14 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 2 vs The Cage<Monster>"} 
 Player 1 21:35:14 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:35:14 $ACTION_MASSAGE_REMOVE:  
 {"id":564} 
 Player 1 21:35:14 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 2 vs The Cage<Monster>"} 
 Player 1 21:35:14 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":156,"creatorCardId":270,"numberRolled":2,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":252}} 
 Player 1 21:35:14 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":565,"_text":"Response Adding AttackRoll 156"},"childOfId":564} 
 Player 1 21:35:14 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":566,"_text":"Wait For Response From Player 1 "},"childOfId":564} 
 Player 1 21:35:14 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:35:18 $ACTION_MASSAGE_REMOVE:  
 {"id":566} 
 Player 1 21:35:18 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":567,"_text":"Wait For Response From Player 2 "},"childOfId":564} 
 Player 1 21:35:18 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:35:18 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:35:18 $ACTION_MASSAGE_REMOVE:  
 {"id":567} 
 Player 1 21:35:18 $ACTION_MASSAGE_REMOVE:  
 {"id":565} 
 Player 1 21:35:18 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":568,"_text":"Resolve AttackRoll 156 "}} 
 Player 1 21:35:18 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":569,"_text":"Added 0 to original roll"}} 
 Player 1 21:35:18 $NEXT_STACK_ID:  
 Player 1 21:35:18 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 2 vs The Cage<Monster>"} 
 Player 1 21:35:18 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:35:18 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Lilith \n2:Player 1 rolled 2 vs The Cage<Monster>"} 
 Player 1 21:35:18 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":157,"creatorCardId":270,"entityToDoDamageCardId":252,"entityToTakeDamageCardId":270,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 21:35:18 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Lilith \n2:Player 1 rolled 2 vs The Cage<Monster>"} 
 Player 1 21:35:18 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Lilith \n2:Player 1 rolled 2 vs The Cage<Monster>"} 
 Player 1 21:35:18 $REPLACE_STACK:  
 {"currentStack":[{"entityId":157,"creatorCardId":270,"entityToDoDamageCardId":252,"entityToTakeDamageCardId":270,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":156,"creatorCardId":270,"numberRolled":2,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":252}]} 
 Player 1 21:35:18 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":2},{"type":2,"number":1},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":60,"originStackId":156},"isAfterActivation":true,"index":60} 
 Player 1 21:35:18 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Lilith \n2:Player 1 rolled 2 vs The Cage<Monster>"} 
 Player 1 21:35:18 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":156,"creatorCardId":270,"numberRolled":2,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":252}} 
 Player 1 21:35:18 $ACTION_MASSAGE_REMOVE:  
 {"id":568} 
 Player 1 21:35:18 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":570,"_text":"Remove After Resolve AttackRoll 156  "}} 
 Player 1 21:35:18 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Lilith"} 
 Player 1 21:35:18 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":156,"creatorCardId":270,"numberRolled":2,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":252}} 
 Player 1 21:35:18 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":571,"_text":"Response Remove After Resolve AttackRoll 156"},"childOfId":570} 
 Player 1 21:35:18 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":572,"_text":"Wait For Response From Player 1 "},"childOfId":570} 
 Player 1 21:35:18 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:35:21 $ACTION_MASSAGE_REMOVE:  
 {"id":572} 
 Player 1 21:35:21 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":573,"_text":"Wait For Response From Player 2 "},"childOfId":570} 
 Player 1 21:35:21 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:35:21 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:35:21 $ACTION_MASSAGE_REMOVE:  
 {"id":573} 
 Player 1 21:35:21 $ACTION_MASSAGE_REMOVE:  
 {"id":571} 
 Player 1 21:35:21 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":574,"_text":"Resolve CombatDamage 157 "}} 
 Player 1 21:35:21 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage 1 combat damage to Lilith"} 
 Player 1 21:35:21 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage 1 combat damage to Lilith"} 
 Player 1 21:35:21 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":252}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":false,"index":3} 
 Player 1 21:35:21 $NEXT_STACK_ID:  
 Player 1 21:35:21 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage 1 combat damage to Lilith"} 
 Player 1 21:35:21 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage 1 combat damage to Lilith \n2:Activate Lard effect DiscardLoot<DiscardLoot>"} 
 Player 1 21:35:21 $ADD_TO_STACK:  
 {"stackEffect":{"effectCollectedData":null,"entityId":158,"creatorCardId":270,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":172,"effectToDo":{"effectName":"DiscardLoot","cardEffectNum":2,"cardPlayerId":1,"cardId":172,"effctType":0},"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 21:35:21 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":575,"_text":"Add ActivatePassiveEffect 158 "}} 
 Player 1 21:35:21 $LOG_ERROR:  
 {} 
 Player 1 21:35:21 $LOG_ERROR:  
 {} 
 Player 1 21:35:21 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage 1 combat damage to Lilith \n2:Activate Lard effect DiscardLoot<DiscardLoot>"} 
 Player 1 21:35:22 $ACTION_MASSAGE_REMOVE:  
 {"id":575} 
 Player 1 21:35:22 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage 1 combat damage to Lilith \n2:Activate Lard effect DiscardLoot<DiscardLoot>"} 
 Player 1 21:35:22 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":270,"effectCardPlayer":270},"entityId":158,"creatorCardId":270,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":172,"effectToDo":{"effectName":"DiscardLoot","cardEffectNum":2,"cardPlayerId":1,"cardId":172,"effctType":0},"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 21:35:22 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":576,"_text":"Response Adding ActivatePassiveEffect 158"},"childOfId":575} 
 Player 1 21:35:22 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":577,"_text":"Wait For Response From Player 2 "},"childOfId":575} 
 Player 1 21:35:22 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:35:23 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:35:23 $ACTION_MASSAGE_REMOVE:  
 {"id":569} 
 Player 1 21:35:23 $ACTION_MASSAGE_REMOVE:  
 {"id":570} 
 Player 1 21:35:24 $ACTION_MASSAGE_REMOVE:  
 {"id":577} 
 Player 1 21:35:24 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":578,"_text":"Wait For Response From Player 1 "},"childOfId":575} 
 Player 1 21:35:24 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:35:25 $ACTION_MASSAGE_REMOVE:  
 {"id":578} 
 Player 1 21:35:25 $ACTION_MASSAGE_REMOVE:  
 {"id":576} 
 Player 1 21:35:25 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":579,"_text":"Resolve ActivatePassiveEffect 158 "}} 
 Player 1 21:35:26 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":172,"particleType":6} 
 Player 1 21:35:27 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":172,"particleType":6} 
 Player 1 21:35:27 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":252}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":false,"index":3} 
 Player 1 21:35:27 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage 1 combat damage to Lilith \n2:Activate Lard effect DiscardLoot<DiscardLoot>"} 
 Player 1 21:35:28 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":270,"effectCardPlayer":270},"entityId":158,"creatorCardId":270,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":172,"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 21:35:28 $ACTION_MASSAGE_REMOVE:  
 {"id":579} 
 Player 1 21:35:28 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":580,"_text":"Remove After Resolve ActivatePassiveEffect 158  "}} 
 Player 1 21:35:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage 1 combat damage to Lilith"} 
 Player 1 21:35:28 $REMOVE_FROM_STACK:  
 {"stackEffect":{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":270,"effectCardPlayer":270},"entityId":158,"creatorCardId":270,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":172,"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 21:35:28 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":581,"_text":"Response Remove After Resolve ActivatePassiveEffect 158"},"childOfId":580} 
 Player 1 21:35:28 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":582,"_text":"Wait For Response From Player 1 "},"childOfId":580} 
 Player 1 21:35:28 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:35:28 $ACTION_MASSAGE_REMOVE:  
 {"id":582} 
 Player 1 21:35:28 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":583,"_text":"Wait For Response From Player 2 "},"childOfId":580} 
 Player 1 21:35:28 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:35:28 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:35:29 $ACTION_MASSAGE_REMOVE:  
 {"id":583} 
 Player 1 21:35:29 $ACTION_MASSAGE_REMOVE:  
 {"id":581} 
 Player 1 21:35:29 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":584,"_text":"Resolve CombatDamage 157 "}} 
 Player 1 21:35:29 $PLAYER_GET_HIT:  
 {"playerId":1,"damage":1,"damageDealerId":252} 
 Player 1 21:35:29 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":252}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Player 1 21:35:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage 1 combat damage to Lilith"} 
 Player 1 21:35:29 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":157,"creatorCardId":270,"entityToDoDamageCardId":252,"entityToTakeDamageCardId":270,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 21:35:29 $ACTION_MASSAGE_REMOVE:  
 {"id":574} 
 Player 1 21:35:29 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":585,"_text":"Remove After Resolve CombatDamage 157  "}} 
 Player 1 21:35:29 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:35:29 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":157,"creatorCardId":270,"entityToDoDamageCardId":252,"entityToTakeDamageCardId":270,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 21:35:29 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":586,"_text":"Response Remove After Resolve CombatDamage 157"},"childOfId":585} 
 Player 1 21:35:29 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":587,"_text":"Wait For Response From Player 2 "},"childOfId":585} 
 Player 1 21:35:29 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:35:29 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:35:29 $ACTION_MASSAGE_REMOVE:  
 {"id":587} 
 Player 1 21:35:29 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":588,"_text":"Wait For Response From Player 1 "},"childOfId":585} 
 Player 1 21:35:29 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:35:30 $ACTION_MASSAGE_REMOVE:  
 {"id":580} 
 Player 1 21:35:32 $ACTION_MASSAGE_REMOVE:  
 {"id":585} 
 Player 1 21:35:36 $ACTION_MASSAGE_REMOVE:  
 {"id":588} 
 Player 1 21:35:36 $ACTION_MASSAGE_REMOVE:  
 {"id":586} 
 Player 1 21:35:36 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":589,"_text":"Stack Was Emptied "}} 
 Player 1 21:35:36 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:35:36 $ACTION_MASSAGE_REMOVE:  
 {"id":568} 
 Player 1 21:35:38 $ACTION_MASSAGE_REMOVE:  
 {"id":589} 
 Player 1 21:35:43 $NEXT_STACK_ID:  
 Player 1 21:35:43 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:35:43 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against The Cage<Monster>"} 
 Player 1 21:35:43 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":159,"creatorCardId":270,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":252}} 
 Player 1 21:35:43 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":590,"_text":"Add AttackRoll 159 "}} 
 Player 1 21:35:43 $ROLL_DICE:  
 {"playerId":1} 
 Player 1 21:35:45 $ROLL_DICE_ENDED:  
 {"playerId":1,"numberRolled":4} 
 Player 1 21:35:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 4 vs The Cage<Monster>"} 
 Player 1 21:35:45 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:35:45 $ACTION_MASSAGE_REMOVE:  
 {"id":590} 
 Player 1 21:35:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 4 vs The Cage<Monster>"} 
 Player 1 21:35:45 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":159,"creatorCardId":270,"numberRolled":4,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":252}} 
 Player 1 21:35:45 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":591,"_text":"Response Adding AttackRoll 159"},"childOfId":590} 
 Player 1 21:35:45 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":592,"_text":"Wait For Response From Player 1 "},"childOfId":590} 
 Player 1 21:35:45 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:35:48 $ACTION_MASSAGE_REMOVE:  
 {"id":592} 
 Player 1 21:35:48 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":593,"_text":"Wait For Response From Player 2 "},"childOfId":590} 
 Player 1 21:35:48 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:35:48 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:35:48 $ACTION_MASSAGE_REMOVE:  
 {"id":593} 
 Player 1 21:35:48 $ACTION_MASSAGE_REMOVE:  
 {"id":591} 
 Player 1 21:35:48 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":594,"_text":"Resolve AttackRoll 159 "}} 
 Player 1 21:35:48 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":595,"_text":"Added 0 to original roll"}} 
 Player 1 21:35:48 $NEXT_STACK_ID:  
 Player 1 21:35:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 4 vs The Cage<Monster>"} 
 Player 1 21:35:48 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:35:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to The Cage \n2:Player 1 rolled 4 vs The Cage<Monster>"} 
 Player 1 21:35:48 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":160,"creatorCardId":270,"entityToDoDamageCardId":270,"entityToTakeDamageCardId":252,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 21:35:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to The Cage \n2:Player 1 rolled 4 vs The Cage<Monster>"} 
 Player 1 21:35:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to The Cage \n2:Player 1 rolled 4 vs The Cage<Monster>"} 
 Player 1 21:35:48 $REPLACE_STACK:  
 {"currentStack":[{"entityId":160,"creatorCardId":270,"entityToDoDamageCardId":270,"entityToTakeDamageCardId":252,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":159,"creatorCardId":270,"numberRolled":4,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":252}]} 
 Player 1 21:35:48 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":1},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":61,"originStackId":159},"isAfterActivation":true,"index":61} 
 Player 1 21:35:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to The Cage \n2:Player 1 rolled 4 vs The Cage<Monster>"} 
 Player 1 21:35:48 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":159,"creatorCardId":270,"numberRolled":4,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":252}} 
 Player 1 21:35:48 $ACTION_MASSAGE_REMOVE:  
 {"id":594} 
 Player 1 21:35:48 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":596,"_text":"Remove After Resolve AttackRoll 159  "}} 
 Player 1 21:35:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to The Cage"} 
 Player 1 21:35:48 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":159,"creatorCardId":270,"numberRolled":4,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":252}} 
 Player 1 21:35:48 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":597,"_text":"Response Remove After Resolve AttackRoll 159"},"childOfId":596} 
 Player 1 21:35:48 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":598,"_text":"Wait For Response From Player 1 "},"childOfId":596} 
 Player 1 21:35:48 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:35:50 $ACTION_MASSAGE_REMOVE:  
 {"id":598} 
 Player 1 21:35:50 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":599,"_text":"Wait For Response From Player 2 "},"childOfId":596} 
 Player 1 21:35:50 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:35:50 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:35:50 $ACTION_MASSAGE_REMOVE:  
 {"id":599} 
 Player 1 21:35:50 $ACTION_MASSAGE_REMOVE:  
 {"id":597} 
 Player 1 21:35:50 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":600,"_text":"Resolve CombatDamage 160 "}} 
 Player 1 21:35:50 $MONSTER_GET_DAMAGED:  
 {"cardId":252,"hpLeft":4,"damageDealerId":270} 
 Player 1 21:35:50 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":270}],"result":null,"preventMethod":false,"methodScopeId":252,"scopeIsPlayer":false,"index":62,"originStackId":-1},"isAfterActivation":true,"index":62} 
 Player 1 21:35:50 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":4},{"type":0,"number":270},{"type":0,"number":252}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":63,"originStackId":160},"isAfterActivation":true,"index":63} 
 Player 1 21:35:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to The Cage"} 
 Player 1 21:35:50 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":160,"creatorCardId":270,"entityToDoDamageCardId":270,"entityToTakeDamageCardId":252,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 21:35:50 $ACTION_MASSAGE_REMOVE:  
 {"id":600} 
 Player 1 21:35:50 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":601,"_text":"Remove After Resolve CombatDamage 160  "}} 
 Player 1 21:35:50 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:35:50 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":160,"creatorCardId":270,"entityToDoDamageCardId":270,"entityToTakeDamageCardId":252,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 21:35:50 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":602,"_text":"Response Remove After Resolve CombatDamage 160"},"childOfId":601} 
 Player 1 21:35:50 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":603,"_text":"Wait For Response From Player 2 "},"childOfId":601} 
 Player 1 21:35:50 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:35:51 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:35:51 $ACTION_MASSAGE_REMOVE:  
 {"id":603} 
 Player 1 21:35:51 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":604,"_text":"Wait For Response From Player 1 "},"childOfId":601} 
 Player 1 21:35:51 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:35:51 $ACTION_MASSAGE_REMOVE:  
 {"id":595} 
 Player 1 21:35:51 $ACTION_MASSAGE_REMOVE:  
 {"id":596} 
 Player 1 21:35:52 $ACTION_MASSAGE_REMOVE:  
 {"id":604} 
 Player 1 21:35:52 $ACTION_MASSAGE_REMOVE:  
 {"id":602} 
 Player 1 21:35:53 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":605,"_text":"Stack Was Emptied "}} 
 Player 1 21:35:53 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:35:53 $ACTION_MASSAGE_REMOVE:  
 {"id":594} 
 Player 1 21:35:53 $ACTION_MASSAGE_REMOVE:  
 {"id":601} 
 Player 1 21:35:54 $NEXT_STACK_ID:  
 Player 1 21:35:54 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:35:54 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against The Cage<Monster>"} 
 Player 1 21:35:54 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":161,"creatorCardId":270,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":252}} 
 Player 1 21:35:54 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":606,"_text":"Add AttackRoll 161 "}} 
 Player 1 21:35:54 $ROLL_DICE:  
 {"playerId":1} 
 Player 1 21:35:54 $ACTION_MASSAGE_REMOVE:  
 {"id":605} 
 Player 1 21:35:56 $ROLL_DICE_ENDED:  
 {"playerId":1,"numberRolled":5} 
 Player 1 21:35:56 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 5 vs The Cage<Monster>"} 
 Player 1 21:35:56 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:35:56 $ACTION_MASSAGE_REMOVE:  
 {"id":606} 
 Player 1 21:35:56 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 5 vs The Cage<Monster>"} 
 Player 1 21:35:56 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":161,"creatorCardId":270,"numberRolled":5,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":252}} 
 Player 1 21:35:56 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":607,"_text":"Response Adding AttackRoll 161"},"childOfId":606} 
 Player 1 21:35:56 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":608,"_text":"Wait For Response From Player 1 "},"childOfId":606} 
 Player 1 21:35:56 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:35:57 $ACTION_MASSAGE_REMOVE:  
 {"id":608} 
 Player 1 21:35:58 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":609,"_text":"Wait For Response From Player 2 "},"childOfId":606} 
 Player 1 21:35:58 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:35:58 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:35:58 $ACTION_MASSAGE_REMOVE:  
 {"id":609} 
 Player 1 21:35:58 $ACTION_MASSAGE_REMOVE:  
 {"id":607} 
 Player 1 21:35:58 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":610,"_text":"Resolve AttackRoll 161 "}} 
 Player 1 21:35:58 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":611,"_text":"Added 0 to original roll"}} 
 Player 1 21:35:58 $NEXT_STACK_ID:  
 Player 1 21:35:58 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 5 vs The Cage<Monster>"} 
 Player 1 21:35:58 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:35:58 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to The Cage \n2:Player 1 rolled 5 vs The Cage<Monster>"} 
 Player 1 21:35:58 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":162,"creatorCardId":270,"entityToDoDamageCardId":270,"entityToTakeDamageCardId":252,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 21:35:58 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to The Cage \n2:Player 1 rolled 5 vs The Cage<Monster>"} 
 Player 1 21:35:58 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to The Cage \n2:Player 1 rolled 5 vs The Cage<Monster>"} 
 Player 1 21:35:58 $REPLACE_STACK:  
 {"currentStack":[{"entityId":162,"creatorCardId":270,"entityToDoDamageCardId":270,"entityToTakeDamageCardId":252,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":161,"creatorCardId":270,"numberRolled":5,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":252}]} 
 Player 1 21:35:58 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":1},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":64,"originStackId":161},"isAfterActivation":true,"index":64} 
 Player 1 21:35:58 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to The Cage \n2:Player 1 rolled 5 vs The Cage<Monster>"} 
 Player 1 21:35:58 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":161,"creatorCardId":270,"numberRolled":5,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":252}} 
 Player 1 21:35:58 $ACTION_MASSAGE_REMOVE:  
 {"id":610} 
 Player 1 21:35:58 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":612,"_text":"Remove After Resolve AttackRoll 161  "}} 
 Player 1 21:35:58 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to The Cage"} 
 Player 1 21:35:58 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":161,"creatorCardId":270,"numberRolled":5,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":252}} 
 Player 1 21:35:58 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":613,"_text":"Response Remove After Resolve AttackRoll 161"},"childOfId":612} 
 Player 1 21:35:58 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":614,"_text":"Wait For Response From Player 1 "},"childOfId":612} 
 Player 1 21:35:58 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:35:59 $ACTION_MASSAGE_REMOVE:  
 {"id":614} 
 Player 1 21:35:59 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":615,"_text":"Wait For Response From Player 2 "},"childOfId":612} 
 Player 1 21:35:59 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:35:59 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:35:59 $ACTION_MASSAGE_REMOVE:  
 {"id":615} 
 Player 1 21:35:59 $ACTION_MASSAGE_REMOVE:  
 {"id":613} 
 Player 1 21:35:59 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":616,"_text":"Resolve CombatDamage 162 "}} 
 Player 1 21:35:59 $MONSTER_GET_DAMAGED:  
 {"cardId":252,"hpLeft":3,"damageDealerId":270} 
 Player 1 21:35:59 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":270}],"result":null,"preventMethod":false,"methodScopeId":252,"scopeIsPlayer":false,"index":65,"originStackId":-1},"isAfterActivation":true,"index":65} 
 Player 1 21:35:59 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":5},{"type":0,"number":270},{"type":0,"number":252}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":66,"originStackId":162},"isAfterActivation":true,"index":66} 
 Player 1 21:35:59 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to The Cage"} 
 Player 1 21:35:59 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":162,"creatorCardId":270,"entityToDoDamageCardId":270,"entityToTakeDamageCardId":252,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 21:36:00 $ACTION_MASSAGE_REMOVE:  
 {"id":616} 
 Player 1 21:36:00 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":617,"_text":"Remove After Resolve CombatDamage 162  "}} 
 Player 1 21:36:00 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:36:00 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":162,"creatorCardId":270,"entityToDoDamageCardId":270,"entityToTakeDamageCardId":252,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 21:36:00 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":618,"_text":"Response Remove After Resolve CombatDamage 162"},"childOfId":617} 
 Player 1 21:36:00 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":619,"_text":"Wait For Response From Player 2 "},"childOfId":617} 
 Player 1 21:36:00 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:36:00 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:36:00 $ACTION_MASSAGE_REMOVE:  
 {"id":619} 
 Player 1 21:36:00 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":620,"_text":"Wait For Response From Player 1 "},"childOfId":617} 
 Player 1 21:36:00 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:36:01 $ACTION_MASSAGE_REMOVE:  
 {"id":611} 
 Player 1 21:36:01 $ACTION_MASSAGE_REMOVE:  
 {"id":612} 
 Player 1 21:36:01 $ACTION_MASSAGE_REMOVE:  
 {"id":620} 
 Player 1 21:36:01 $ACTION_MASSAGE_REMOVE:  
 {"id":618} 
 Player 1 21:36:01 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":621,"_text":"Stack Was Emptied "}} 
 Player 1 21:36:01 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:36:01 $ACTION_MASSAGE_REMOVE:  
 {"id":610} 
 Player 1 21:36:02 $ACTION_MASSAGE_REMOVE:  
 {"id":617} 
 Player 1 21:36:03 $ACTION_MASSAGE_REMOVE:  
 {"id":621} 
 Player 1 21:36:03 $NEXT_STACK_ID:  
 Player 1 21:36:03 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:36:03 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against The Cage<Monster>"} 
 Player 1 21:36:03 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":163,"creatorCardId":270,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":252}} 
 Player 1 21:36:03 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":622,"_text":"Add AttackRoll 163 "}} 
 Player 1 21:36:03 $ROLL_DICE:  
 {"playerId":1} 
 Player 1 21:36:06 $ROLL_DICE_ENDED:  
 {"playerId":1,"numberRolled":6} 
 Player 1 21:36:06 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 6 vs The Cage<Monster>"} 
 Player 1 21:36:06 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:36:06 $ACTION_MASSAGE_REMOVE:  
 {"id":622} 
 Player 1 21:36:06 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 6 vs The Cage<Monster>"} 
 Player 1 21:36:06 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":163,"creatorCardId":270,"numberRolled":6,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":252}} 
 Player 1 21:36:06 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":623,"_text":"Response Adding AttackRoll 163"},"childOfId":622} 
 Player 1 21:36:06 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":624,"_text":"Wait For Response From Player 1 "},"childOfId":622} 
 Player 1 21:36:06 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:36:07 $ACTION_MASSAGE_REMOVE:  
 {"id":624} 
 Player 1 21:36:07 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":625,"_text":"Wait For Response From Player 2 "},"childOfId":622} 
 Player 1 21:36:07 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:36:07 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:36:07 $ACTION_MASSAGE_REMOVE:  
 {"id":625} 
 Player 1 21:36:07 $ACTION_MASSAGE_REMOVE:  
 {"id":623} 
 Player 1 21:36:07 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":626,"_text":"Resolve AttackRoll 163 "}} 
 Player 1 21:36:07 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":627,"_text":"Added 0 to original roll"}} 
 Player 1 21:36:07 $NEXT_STACK_ID:  
 Player 1 21:36:07 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 6 vs The Cage<Monster>"} 
 Player 1 21:36:07 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:36:07 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to The Cage \n2:Player 1 rolled 6 vs The Cage<Monster>"} 
 Player 1 21:36:07 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":164,"creatorCardId":270,"entityToDoDamageCardId":270,"entityToTakeDamageCardId":252,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 21:36:07 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to The Cage \n2:Player 1 rolled 6 vs The Cage<Monster>"} 
 Player 1 21:36:07 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to The Cage \n2:Player 1 rolled 6 vs The Cage<Monster>"} 
 Player 1 21:36:07 $REPLACE_STACK:  
 {"currentStack":[{"entityId":164,"creatorCardId":270,"entityToDoDamageCardId":270,"entityToTakeDamageCardId":252,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":163,"creatorCardId":270,"numberRolled":6,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":252}]} 
 Player 1 21:36:07 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":6},{"type":2,"number":1},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":67,"originStackId":163},"isAfterActivation":true,"index":67} 
 Player 1 21:36:07 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to The Cage \n2:Player 1 rolled 6 vs The Cage<Monster>"} 
 Player 1 21:36:07 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":163,"creatorCardId":270,"numberRolled":6,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":252}} 
 Player 1 21:36:07 $ACTION_MASSAGE_REMOVE:  
 {"id":626} 
 Player 1 21:36:07 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":628,"_text":"Remove After Resolve AttackRoll 163  "}} 
 Player 1 21:36:07 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to The Cage"} 
 Player 1 21:36:07 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":163,"creatorCardId":270,"numberRolled":6,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":252}} 
 Player 1 21:36:07 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":629,"_text":"Response Remove After Resolve AttackRoll 163"},"childOfId":628} 
 Player 1 21:36:08 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":630,"_text":"Wait For Response From Player 1 "},"childOfId":628} 
 Player 1 21:36:08 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:36:08 $ACTION_MASSAGE_REMOVE:  
 {"id":630} 
 Player 1 21:36:08 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":631,"_text":"Wait For Response From Player 2 "},"childOfId":628} 
 Player 1 21:36:08 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:36:08 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:36:08 $ACTION_MASSAGE_REMOVE:  
 {"id":631} 
 Player 1 21:36:08 $ACTION_MASSAGE_REMOVE:  
 {"id":629} 
 Player 1 21:36:09 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":632,"_text":"Resolve CombatDamage 164 "}} 
 Player 1 21:36:09 $MONSTER_GET_DAMAGED:  
 {"cardId":252,"hpLeft":2,"damageDealerId":270} 
 Player 1 21:36:09 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":270}],"result":null,"preventMethod":false,"methodScopeId":252,"scopeIsPlayer":false,"index":68,"originStackId":-1},"isAfterActivation":true,"index":68} 
 Player 1 21:36:09 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":6},{"type":0,"number":270},{"type":0,"number":252}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":69,"originStackId":164},"isAfterActivation":true,"index":69} 
 Player 1 21:36:09 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to The Cage"} 
 Player 1 21:36:09 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":164,"creatorCardId":270,"entityToDoDamageCardId":270,"entityToTakeDamageCardId":252,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 21:36:09 $ACTION_MASSAGE_REMOVE:  
 {"id":632} 
 Player 1 21:36:09 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":633,"_text":"Remove After Resolve CombatDamage 164  "}} 
 Player 1 21:36:09 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:36:09 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":164,"creatorCardId":270,"entityToDoDamageCardId":270,"entityToTakeDamageCardId":252,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 21:36:09 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":634,"_text":"Response Remove After Resolve CombatDamage 164"},"childOfId":633} 
 Player 1 21:36:09 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":635,"_text":"Wait For Response From Player 2 "},"childOfId":633} 
 Player 1 21:36:09 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:36:09 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:36:09 $ACTION_MASSAGE_REMOVE:  
 {"id":635} 
 Player 1 21:36:09 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":636,"_text":"Wait For Response From Player 1 "},"childOfId":633} 
 Player 1 21:36:09 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:36:10 $ACTION_MASSAGE_REMOVE:  
 {"id":627} 
 Player 1 21:36:10 $ACTION_MASSAGE_REMOVE:  
 {"id":628} 
 Player 1 21:36:11 $ACTION_MASSAGE_REMOVE:  
 {"id":636} 
 Player 1 21:36:11 $ACTION_MASSAGE_REMOVE:  
 {"id":634} 
 Player 1 21:36:11 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":637,"_text":"Stack Was Emptied "}} 
 Player 1 21:36:11 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:36:11 $ACTION_MASSAGE_REMOVE:  
 {"id":626} 
 Player 1 21:36:12 $ACTION_MASSAGE_REMOVE:  
 {"id":633} 
 Player 1 21:36:12 $NEXT_STACK_ID:  
 Player 1 21:36:12 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:36:12 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against The Cage<Monster>"} 
 Player 1 21:36:12 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":165,"creatorCardId":270,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":252}} 
 Player 1 21:36:12 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":638,"_text":"Add AttackRoll 165 "}} 
 Player 1 21:36:12 $ROLL_DICE:  
 {"playerId":1} 
 Player 1 21:36:12 $ACTION_MASSAGE_REMOVE:  
 {"id":637} 
 Player 1 21:36:14 $ROLL_DICE_ENDED:  
 {"playerId":1,"numberRolled":4} 
 Player 1 21:36:14 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 4 vs The Cage<Monster>"} 
 Player 1 21:36:14 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:36:14 $ACTION_MASSAGE_REMOVE:  
 {"id":638} 
 Player 1 21:36:14 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 4 vs The Cage<Monster>"} 
 Player 1 21:36:14 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":165,"creatorCardId":270,"numberRolled":4,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":252}} 
 Player 1 21:36:14 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":639,"_text":"Response Adding AttackRoll 165"},"childOfId":638} 
 Player 1 21:36:14 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":640,"_text":"Wait For Response From Player 1 "},"childOfId":638} 
 Player 1 21:36:14 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:36:15 $ACTION_MASSAGE_REMOVE:  
 {"id":640} 
 Player 1 21:36:15 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":641,"_text":"Wait For Response From Player 2 "},"childOfId":638} 
 Player 1 21:36:15 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:36:15 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:36:15 $ACTION_MASSAGE_REMOVE:  
 {"id":641} 
 Player 1 21:36:15 $ACTION_MASSAGE_REMOVE:  
 {"id":639} 
 Player 1 21:36:15 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":642,"_text":"Resolve AttackRoll 165 "}} 
 Player 1 21:36:15 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":643,"_text":"Added 0 to original roll"}} 
 Player 1 21:36:15 $NEXT_STACK_ID:  
 Player 1 21:36:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 4 vs The Cage<Monster>"} 
 Player 1 21:36:15 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:36:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to The Cage \n2:Player 1 rolled 4 vs The Cage<Monster>"} 
 Player 1 21:36:15 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":166,"creatorCardId":270,"entityToDoDamageCardId":270,"entityToTakeDamageCardId":252,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 21:36:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to The Cage \n2:Player 1 rolled 4 vs The Cage<Monster>"} 
 Player 1 21:36:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to The Cage \n2:Player 1 rolled 4 vs The Cage<Monster>"} 
 Player 1 21:36:15 $REPLACE_STACK:  
 {"currentStack":[{"entityId":166,"creatorCardId":270,"entityToDoDamageCardId":270,"entityToTakeDamageCardId":252,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":165,"creatorCardId":270,"numberRolled":4,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":252}]} 
 Player 1 21:36:15 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":1},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":70,"originStackId":165},"isAfterActivation":true,"index":70} 
 Player 1 21:36:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to The Cage \n2:Player 1 rolled 4 vs The Cage<Monster>"} 
 Player 1 21:36:15 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":165,"creatorCardId":270,"numberRolled":4,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":252}} 
 Player 1 21:36:15 $ACTION_MASSAGE_REMOVE:  
 {"id":642} 
 Player 1 21:36:15 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":644,"_text":"Remove After Resolve AttackRoll 165  "}} 
 Player 1 21:36:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to The Cage"} 
 Player 1 21:36:15 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":165,"creatorCardId":270,"numberRolled":4,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":252}} 
 Player 1 21:36:15 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":645,"_text":"Response Remove After Resolve AttackRoll 165"},"childOfId":644} 
 Player 1 21:36:15 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":646,"_text":"Wait For Response From Player 1 "},"childOfId":644} 
 Player 1 21:36:16 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:36:16 $ACTION_MASSAGE_REMOVE:  
 {"id":646} 
 Player 1 21:36:16 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":647,"_text":"Wait For Response From Player 2 "},"childOfId":644} 
 Player 1 21:36:16 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:36:16 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:36:16 $ACTION_MASSAGE_REMOVE:  
 {"id":647} 
 Player 1 21:36:16 $ACTION_MASSAGE_REMOVE:  
 {"id":645} 
 Player 1 21:36:16 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":648,"_text":"Resolve CombatDamage 166 "}} 
 Player 1 21:36:16 $MONSTER_GET_DAMAGED:  
 {"cardId":252,"hpLeft":1,"damageDealerId":270} 
 Player 1 21:36:16 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":270}],"result":null,"preventMethod":false,"methodScopeId":252,"scopeIsPlayer":false,"index":71,"originStackId":-1},"isAfterActivation":true,"index":71} 
 Player 1 21:36:16 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":4},{"type":0,"number":270},{"type":0,"number":252}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":72,"originStackId":166},"isAfterActivation":true,"index":72} 
 Player 1 21:36:16 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Lilith combat damage to The Cage"} 
 Player 1 21:36:17 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":166,"creatorCardId":270,"entityToDoDamageCardId":270,"entityToTakeDamageCardId":252,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 21:36:17 $ACTION_MASSAGE_REMOVE:  
 {"id":648} 
 Player 1 21:36:17 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":649,"_text":"Remove After Resolve CombatDamage 166  "}} 
 Player 1 21:36:17 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:36:17 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":166,"creatorCardId":270,"entityToDoDamageCardId":270,"entityToTakeDamageCardId":252,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 21:36:17 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":650,"_text":"Response Remove After Resolve CombatDamage 166"},"childOfId":649} 
 Player 1 21:36:17 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":651,"_text":"Wait For Response From Player 2 "},"childOfId":649} 
 Player 1 21:36:17 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:36:17 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:36:17 $ACTION_MASSAGE_REMOVE:  
 {"id":651} 
 Player 1 21:36:17 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":652,"_text":"Wait For Response From Player 1 "},"childOfId":649} 
 Player 1 21:36:17 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:36:18 $ACTION_MASSAGE_REMOVE:  
 {"id":643} 
 Player 1 21:36:18 $ACTION_MASSAGE_REMOVE:  
 {"id":644} 
 Player 1 21:36:18 $ACTION_MASSAGE_REMOVE:  
 {"id":652} 
 Player 1 21:36:18 $ACTION_MASSAGE_REMOVE:  
 {"id":650} 
 Player 1 21:36:18 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":653,"_text":"Stack Was Emptied "}} 
 Player 1 21:36:18 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:36:18 $ACTION_MASSAGE_REMOVE:  
 {"id":642} 
 Player 1 21:36:19 $NEXT_STACK_ID:  
 Player 1 21:36:19 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:36:19 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against The Cage<Monster>"} 
 Player 1 21:36:19 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":167,"creatorCardId":270,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":252}} 
 Player 1 21:36:19 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":654,"_text":"Add AttackRoll 167 "}} 
 Player 1 21:36:19 $ROLL_DICE:  
 {"playerId":1} 
 Player 1 21:36:19 $ACTION_MASSAGE_REMOVE:  
 {"id":649} 
 Player 1 21:36:20 $ACTION_MASSAGE_REMOVE:  
 {"id":653} 
 Player 1 21:36:22 $ROLL_DICE_ENDED:  
 {"playerId":1,"numberRolled":2} 
 Player 1 21:36:22 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 2 vs The Cage<Monster>"} 
 Player 1 21:36:22 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:36:22 $ACTION_MASSAGE_REMOVE:  
 {"id":654} 
 Player 1 21:36:22 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 2 vs The Cage<Monster>"} 
 Player 1 21:36:22 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":167,"creatorCardId":270,"numberRolled":2,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":252}} 
 Player 1 21:36:22 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":655,"_text":"Response Adding AttackRoll 167"},"childOfId":654} 
 Player 1 21:36:22 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":656,"_text":"Wait For Response From Player 1 "},"childOfId":654} 
 Player 1 21:36:22 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:36:46 $ACTION_MASSAGE_REMOVE:  
 {"id":656} 
 Player 1 21:36:46 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":657,"_text":"Wait For Response From Player 2 "},"childOfId":654} 
 Player 1 21:36:46 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:36:46 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:36:46 $ACTION_MASSAGE_REMOVE:  
 {"id":657} 
 Player 1 21:36:46 $ACTION_MASSAGE_REMOVE:  
 {"id":655} 
 Player 1 21:36:46 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":658,"_text":"Resolve AttackRoll 167 "}} 
 Player 1 21:36:46 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":659,"_text":"Added 0 to original roll"}} 
 Player 1 21:36:46 $NEXT_STACK_ID:  
 Player 1 21:36:46 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 2 vs The Cage<Monster>"} 
 Player 1 21:36:46 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:36:46 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Lilith \n2:Player 1 rolled 2 vs The Cage<Monster>"} 
 Player 1 21:36:46 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":168,"creatorCardId":270,"entityToDoDamageCardId":252,"entityToTakeDamageCardId":270,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 21:36:46 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Lilith \n2:Player 1 rolled 2 vs The Cage<Monster>"} 
 Player 1 21:36:46 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Lilith \n2:Player 1 rolled 2 vs The Cage<Monster>"} 
 Player 1 21:36:46 $REPLACE_STACK:  
 {"currentStack":[{"entityId":168,"creatorCardId":270,"entityToDoDamageCardId":252,"entityToTakeDamageCardId":270,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":167,"creatorCardId":270,"numberRolled":2,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":252}]} 
 Player 1 21:36:46 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":2},{"type":2,"number":1},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":73,"originStackId":167},"isAfterActivation":true,"index":73} 
 Player 1 21:36:47 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Lilith \n2:Player 1 rolled 2 vs The Cage<Monster>"} 
 Player 1 21:36:47 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":167,"creatorCardId":270,"numberRolled":2,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":252}} 
 Player 1 21:36:47 $ACTION_MASSAGE_REMOVE:  
 {"id":658} 
 Player 1 21:36:47 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":660,"_text":"Remove After Resolve AttackRoll 167  "}} 
 Player 1 21:36:47 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Lilith"} 
 Player 1 21:36:47 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":167,"creatorCardId":270,"numberRolled":2,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":252}} 
 Player 1 21:36:47 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":661,"_text":"Response Remove After Resolve AttackRoll 167"},"childOfId":660} 
 Player 1 21:36:47 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":662,"_text":"Wait For Response From Player 1 "},"childOfId":660} 
 Player 1 21:36:47 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:36:49 $ACTION_MASSAGE_REMOVE:  
 {"id":659} 
 Player 1 21:36:49 $ACTION_MASSAGE_REMOVE:  
 {"id":660} 
 Player 1 21:36:52 $NEXT_STACK_ID:  
 Player 1 21:36:52 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Lilith"} 
 Player 1 21:36:52 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Lilith \n2:Player 1 activated Razor Blade"} 
 Player 1 21:36:52 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":169,"creatorCardId":270,"hasLockingStackEffect":false,"itemToPlayCardId":187,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 1 21:36:52 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":663,"_text":"Add ActivateItem 169 "}} 
 Player 1 21:36:55 $USE_ITEM:  
 {"cardId":187} 
 Player 1 21:36:55 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:36:55 $ACTION_MASSAGE_REMOVE:  
 {"id":663} 
 Player 1 21:36:55 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Lilith \n2:Player 1 activated Razor Blade"} 
 Player 1 21:36:55 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":169,"creatorCardId":270,"hasLockingStackEffect":false,"itemToPlayCardId":187,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 21:36:55 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":664,"_text":"Response Adding ActivateItem 169"},"childOfId":663} 
 Player 1 21:36:55 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":665,"_text":"Wait For Response From Player 1 "},"childOfId":663} 
 Player 1 21:36:55 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:36:58 $ACTION_MASSAGE_REMOVE:  
 {"id":665} 
 Player 1 21:36:58 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":666,"_text":"Wait For Response From Player 2 "},"childOfId":663} 
 Player 1 21:36:58 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:36:58 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:36:58 $ACTION_MASSAGE_REMOVE:  
 {"id":666} 
 Player 1 21:36:58 $ACTION_MASSAGE_REMOVE:  
 {"id":664} 
 Player 1 21:36:58 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":667,"_text":"Resolve ActivateItem 169 "}} 
 Player 1 21:36:58 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":187,"particleType":6} 
 Player 1 21:37:00 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":187,"particleType":6} 
 Player 1 21:37:00 $PLAYER_GET_HIT:  
 {"playerId":2,"damage":1,"damageDealerId":270} 
 Player 1 21:37:00 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":270}],"result":null,"preventMethod":false,"methodScopeId":274,"scopeIsPlayer":true,"index":74,"originStackId":-1},"isAfterActivation":true,"index":74} 
 Player 1 21:37:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Lilith \n2:Player 1 activated Razor Blade"} 
 Player 1 21:37:00 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":169,"creatorCardId":270,"hasLockingStackEffect":false,"itemToPlayCardId":187,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 21:37:00 $ACTION_MASSAGE_REMOVE:  
 {"id":667} 
 Player 1 21:37:00 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":668,"_text":"Remove After Resolve ActivateItem 169  "}} 
 Player 1 21:37:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage combat damage to Lilith"} 
 Player 1 21:37:00 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":169,"creatorCardId":270,"hasLockingStackEffect":false,"itemToPlayCardId":187,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 21:37:00 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":669,"_text":"Response Remove After Resolve ActivateItem 169"},"childOfId":668} 
 Player 1 21:37:00 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":670,"_text":"Wait For Response From Player 2 "},"childOfId":668} 
 Player 1 21:37:00 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:37:00 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:37:00 $ACTION_MASSAGE_REMOVE:  
 {"id":670} 
 Player 1 21:37:00 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":671,"_text":"Wait For Response From Player 1 "},"childOfId":668} 
 Player 1 21:37:01 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:37:03 $ACTION_MASSAGE_REMOVE:  
 {"id":668} 
 Player 1 21:37:03 $ACTION_MASSAGE_REMOVE:  
 {"id":671} 
 Player 1 21:37:03 $ACTION_MASSAGE_REMOVE:  
 {"id":669} 
 Player 1 21:37:03 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":672,"_text":"Resolve CombatDamage 168 "}} 
 Player 1 21:37:03 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage 1 combat damage to Lilith"} 
 Player 1 21:37:03 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage 1 combat damage to Lilith"} 
 Player 1 21:37:03 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":252}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":false,"index":4} 
 Player 1 21:37:03 $NEXT_STACK_ID:  
 Player 1 21:37:03 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage 1 combat damage to Lilith"} 
 Player 1 21:37:03 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage 1 combat damage to Lilith \n2:Activate Lard effect DiscardLoot<DiscardLoot>"} 
 Player 1 21:37:03 $ADD_TO_STACK:  
 {"stackEffect":{"effectCollectedData":null,"entityId":170,"creatorCardId":270,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":172,"effectToDo":{"effectName":"DiscardLoot","cardEffectNum":2,"cardPlayerId":1,"cardId":172,"effctType":0},"isAfterActivation":false,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 21:37:03 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":673,"_text":"Add ActivatePassiveEffect 170 "}} 
 Player 1 21:37:04 $LOG_ERROR:  
 {} 
 Player 1 21:37:04 $LOG_ERROR:  
 {} 
 Player 1 21:37:04 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage 1 combat damage to Lilith \n2:Activate Lard effect DiscardLoot<DiscardLoot>"} 
 Player 1 21:37:04 $ACTION_MASSAGE_REMOVE:  
 {"id":673} 
 Player 1 21:37:04 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage 1 combat damage to Lilith \n2:Activate Lard effect DiscardLoot<DiscardLoot>"} 
 Player 1 21:37:04 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":270,"effectCardPlayer":270},"entityId":170,"creatorCardId":270,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":172,"effectToDo":{"effectName":"DiscardLoot","cardEffectNum":2,"cardPlayerId":1,"cardId":172,"effctType":0},"isAfterActivation":false,"index":4,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 21:37:05 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":674,"_text":"Response Adding ActivatePassiveEffect 170"},"childOfId":673} 
 Player 1 21:37:05 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":675,"_text":"Wait For Response From Player 1 "},"childOfId":673} 
 Player 1 21:37:05 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:37:05 $ACTION_MASSAGE_REMOVE:  
 {"id":675} 
 Player 1 21:37:05 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":676,"_text":"Wait For Response From Player 2 "},"childOfId":673} 
 Player 1 21:37:05 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:37:06 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:37:06 $ACTION_MASSAGE_REMOVE:  
 {"id":676} 
 Player 1 21:37:07 $ACTION_MASSAGE_REMOVE:  
 {"id":674} 
 Player 1 21:37:07 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":677,"_text":"Resolve ActivatePassiveEffect 170 "}} 
 Player 1 21:37:07 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":172,"particleType":6} 
 Player 1 21:37:09 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":172,"particleType":6} 
 Player 1 21:37:09 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":252}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":false,"index":4} 
 Player 1 21:37:09 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage 1 combat damage to Lilith \n2:Activate Lard effect DiscardLoot<DiscardLoot>"} 
 Player 1 21:37:09 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":270,"effectCardPlayer":270},"entityId":170,"creatorCardId":270,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":172,"isAfterActivation":false,"index":4,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 21:37:09 $ACTION_MASSAGE_REMOVE:  
 {"id":677} 
 Player 1 21:37:09 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":678,"_text":"Remove After Resolve ActivatePassiveEffect 170  "}} 
 Player 1 21:37:09 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage 1 combat damage to Lilith"} 
 Player 1 21:37:10 $REMOVE_FROM_STACK:  
 {"stackEffect":{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":270,"effectCardPlayer":270},"entityId":170,"creatorCardId":270,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":172,"isAfterActivation":false,"index":4,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 21:37:10 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":679,"_text":"Response Remove After Resolve ActivatePassiveEffect 170"},"childOfId":678} 
 Player 1 21:37:10 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":680,"_text":"Wait For Response From Player 2 "},"childOfId":678} 
 Player 1 21:37:10 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:37:10 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:37:10 $ACTION_MASSAGE_REMOVE:  
 {"id":680} 
 Player 1 21:37:10 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":681,"_text":"Wait For Response From Player 1 "},"childOfId":678} 
 Player 1 21:37:10 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:37:11 $ACTION_MASSAGE_REMOVE:  
 {"id":678} 
 Player 1 21:37:34 $ACTION_MASSAGE_REMOVE:  
 {"id":681} 
 Player 1 21:37:34 $ACTION_MASSAGE_REMOVE:  
 {"id":679} 
 Player 1 21:37:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":682,"_text":"Resolve CombatDamage 168 "}} 
 Player 1 21:37:34 $PLAYER_GET_HIT:  
 {"playerId":1,"damage":1,"damageDealerId":252} 
 Player 1 21:37:34 $NEXT_STACK_ID:  
 Player 1 21:37:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage 1 combat damage to Lilith"} 
 Player 1 21:37:34 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:37:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage 1 combat damage to Lilith \n2:Player 1 is about to die"} 
 Player 1 21:37:34 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":171,"creatorCardId":270,"playerToDieCardId":270,"stackEffectType":15,"killerId":252}} 
 Player 1 21:37:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage 1 combat damage to Lilith \n2:Player 1 is about to die"} 
 Player 1 21:37:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Cage 1 combat damage to Lilith \n2:Player 1 is about to die"} 
 Player 1 21:37:34 $REPLACE_STACK:  
 {"currentStack":[{"entityId":168,"creatorCardId":270,"entityToDoDamageCardId":252,"entityToTakeDamageCardId":270,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":171,"creatorCardId":270,"playerToDieCardId":270,"stackEffectType":15,"killerId":252}]} 
 Player 1 21:37:34 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":252}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 
 Player 1 21:37:34 $ACTION_MASSAGE_REMOVE:  
 {"id":672} 
 Player 1 21:37:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":683,"_text":"Remove After Resolve CombatDamage 168  "}} 
 Player 1 21:37:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to die"} 
 Player 1 21:37:34 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":168,"creatorCardId":270,"entityToDoDamageCardId":252,"entityToTakeDamageCardId":270,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 21:37:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":684,"_text":"Response Remove After Resolve CombatDamage 168"},"childOfId":683} 
 Player 1 21:37:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":685,"_text":"Wait For Response From Player 1 "},"childOfId":683} 
 Player 1 21:37:34 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:37:35 $ACTION_MASSAGE_REMOVE:  
 {"id":685} 
 Player 1 21:37:35 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":686,"_text":"Wait For Response From Player 2 "},"childOfId":683} 
 Player 1 21:37:35 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:37:35 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:37:36 $ACTION_MASSAGE_REMOVE:  
 {"id":686} 
 Player 1 21:37:36 $ACTION_MASSAGE_REMOVE:  
 {"id":684} 
 Player 1 21:37:36 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":687,"_text":"Resolve PlayerDeath 171 "}} 
 Player 1 21:37:36 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":252,"particleType":5} 
 Player 1 21:37:36 $CANCEL_ATTACK:  
 Player 1 21:37:36 $NEXT_STACK_ID:  
 Player 1 21:37:36 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to die"} 
 Player 1 21:37:36 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:37:36 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 
 Player 1 21:37:36 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":172,"creatorCardId":270,"playerToPayCardId":270,"stackEffectType":16}} 
 Player 1 21:37:36 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 
 Player 1 21:37:36 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 
 Player 1 21:37:36 $REPLACE_STACK:  
 {"currentStack":[{"entityId":171,"creatorCardId":270,"playerToDieCardId":270,"stackEffectType":15,"killerId":252},{"entityId":172,"creatorCardId":270,"playerToPayCardId":270,"stackEffectType":16}]} 
 Player 1 21:37:36 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 
 Player 1 21:37:36 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":171,"creatorCardId":270,"playerToDieCardId":270,"stackEffectType":15,"killerId":252}} 
 Player 1 21:37:36 $ACTION_MASSAGE_REMOVE:  
 {"id":687} 
 Player 1 21:37:36 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":688,"_text":"Remove After Resolve PlayerDeath 171  "}} 
 Player 1 21:37:36 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 1 21:37:36 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":171,"creatorCardId":270,"playerToDieCardId":270,"stackEffectType":15,"killerId":252}} 
 Player 1 21:37:36 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":689,"_text":"Response Remove After Resolve PlayerDeath 171"},"childOfId":688} 
 Player 1 21:37:36 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":690,"_text":"Wait For Response From Player 1 "},"childOfId":688} 
 Player 1 21:37:36 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:37:37 $ACTION_MASSAGE_REMOVE:  
 {"id":683} 
 Player 1 21:37:38 $ACTION_MASSAGE_REMOVE:  
 {"id":690} 
 Player 1 21:37:38 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":691,"_text":"Wait For Response From Player 2 "},"childOfId":688} 
 Player 1 21:37:38 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:37:38 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:37:38 $ACTION_MASSAGE_REMOVE:  
 {"id":691} 
 Player 1 21:37:38 $ACTION_MASSAGE_REMOVE:  
 {"id":689} 
 Player 1 21:37:38 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":692,"_text":"Resolve PlayerDeathPenalties 172 "}} 
 Player 1 21:37:38 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":693,"_text":"Player 1 pays Penalties"}} 
 Player 1 21:37:39 $ACTION_MASSAGE_REMOVE:  
 {"id":688} 
 Player 1 21:37:47 $REMOVE_FROM_PASSIVE_MANAGER:  
 {"cardId":172} 
 Player 1 21:37:47 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_LOSE_ITEM","args":[{"type":0,"number":172}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":75,"originStackId":-1},"isAfterActivation":true,"index":75} 
 Player 1 21:37:47 $MOVE_CARD:  
 {"moveIndex":85,"cardId":172,"placeID":281,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 21:37:48 $MOVE_CARD_TO_PILE:  
 {"type":5,"cardId":172} 
 Player 1 21:37:48 $USE_ITEM:  
 {"cardId":270} 
 Player 1 21:37:48 $USE_ITEM:  
 {"cardId":271} 
 Player 1 21:37:48 $USE_ITEM:  
 {"cardId":187} 
 Player 1 21:37:48 $ACTION_MASSAGE_REMOVE:  
 {"id":693} 
 Player 1 21:37:48 $PLAYER_DIED:  
 {"playerId":1} 
 Player 1 21:37:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 1 21:37:48 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":172,"creatorCardId":270,"playerToPayCardId":270,"stackEffectType":16}} 
 Player 1 21:37:48 $ACTION_MASSAGE_REMOVE:  
 {"id":692} 
 Player 1 21:37:48 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":694,"_text":"Remove After Resolve PlayerDeathPenalties 172  "}} 
 Player 1 21:37:48 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:37:48 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":172,"creatorCardId":270,"playerToPayCardId":270,"stackEffectType":16}} 
 Player 1 21:37:48 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":695,"_text":"Response Remove After Resolve PlayerDeathPenalties 172"},"childOfId":694} 
 Player 1 21:37:48 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":696,"_text":"Wait For Response From Player 2 "},"childOfId":694} 
 Player 1 21:37:48 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:37:48 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:37:48 $ACTION_MASSAGE_REMOVE:  
 {"id":696} 
 Player 1 21:37:48 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":697,"_text":"Wait For Response From Player 1 "},"childOfId":694} 
 Player 1 21:37:48 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:37:48 $ACTION_MASSAGE_REMOVE:  
 {"id":697} 
 Player 1 21:37:48 $ACTION_MASSAGE_REMOVE:  
 {"id":695} 
 Player 1 21:37:48 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":698,"_text":"Stack Was Emptied "}} 
 Player 1 21:37:48 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:37:48 $ACTION_MASSAGE_REMOVE:  
 {"id":658} 
 Player 1 21:37:48 $ACTION_MASSAGE_REMOVE:  
 {"id":660} 
 Player 1 21:37:48 $ACTION_MASSAGE_REMOVE:  
 {"id":672} 
 Player 1 21:37:48 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:37:48 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:37:48 $ACTION_MASSAGE_REMOVE:  
 {"id":658} 
 Player 1 21:37:48 $REPLACE_STACK:  
 {"currentStack":[]} 
 Player 1 21:37:48 $END_TURN:  
 Player 1 21:37:49 $SET_TURN:  
 {"playerId":2} 
 Player 1 21:37:49 $START_TURN:  
 {"playerId":2} 
 Player 1 21:37:49 $ACTION_MASSAGE_REMOVE:  
 {"id":662} 
 Player 1 21:37:49 $ACTION_MASSAGE_REMOVE:  
 {"id":661} 
 Player 1 21:37:49 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:37:49 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:37:49 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 21:37:49 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 21:37:49 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:37:50 $ACTION_MASSAGE_REMOVE:  
 {"id":698} 
 Player 1 21:37:50 $MOVE_CARD_END:  
 {"moveIndex":86,"cardId":40,"flipIfFlipped":false,"playerId":2} 
 Player 1 21:37:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 21:37:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 21:37:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 21:37:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 21:37:50 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:37:51 $ACTION_MASSAGE_REMOVE:  
 {"id":694} 
 Player 1 21:37:57 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:37:57 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:37:57 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard"} 
 Player 1 21:37:57 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard"} 
 Player 1 21:37:57 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:38:04 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard"} 
 Player 1 21:38:04 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard"} 
 Player 1 21:38:04 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard \n2:Player 2 activated Gold Chest (2)"} 
 Player 1 21:38:04 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard \n2:Player 2 activated Gold Chest (2)"} 
 Player 1 21:38:04 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:38:04 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard \n2:Player 2 activated Gold Chest (2)"} 
 Player 1 21:38:04 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard \n2:Player 2 activated Gold Chest (2)"} 
 Player 1 21:38:04 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard \n2:Player 2 activated Gold Chest (2)"} 
 Player 1 21:38:04 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard \n2:Player 2 activated Gold Chest (2)"} 
 Player 1 21:38:06 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard \n2:Player 2 activated Gold Chest (2) \n3:Player 2 roll a dice"} 
 Player 1 21:38:06 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard \n2:Player 2 activated Gold Chest (2) \n3:Player 2 roll a dice"} 
 Player 1 21:38:06 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard \n2:Player 2 activated Gold Chest (2) \n3:Player 2 roll a dice"} 
 Player 1 21:38:06 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard \n2:Player 2 activated Gold Chest (2) \n3:Player 2 roll a dice"} 
 Player 1 21:38:06 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:38:07 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard \n2:Player 2 activated Gold Chest (2) \n3:Player 2 roll a dice"} 
 Player 1 21:38:07 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard \n2:Player 2 activated Gold Chest (2) \n3:Player 2 roll a dice"} 
 Player 1 21:38:07 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard \n2:Player 2 activated Gold Chest (2) \n3:Player 2 roll a dice"} 
 Player 1 21:38:07 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard \n2:Player 2 activated Gold Chest (2) \n3:Player 2 roll a dice"} 
 Player 1 21:38:07 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard \n2:Player 2 activated Gold Chest (2) \n3:Player 2 roll a dice"} 
 Player 1 21:38:07 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard \n2:Player 2 activated Gold Chest (2) \n3:Player 2 roll a dice"} 
 Player 1 21:38:07 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard \n2:Player 2 activated Gold Chest (2) \n3:Player 2 roll a dice"} 
 Player 1 21:38:07 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard \n2:Player 2 activated Gold Chest (2) \n3:Player 2 roll a dice"} 
 Player 1 21:38:07 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:38:09 $MOVE_CARD_END:  
 {"moveIndex":87,"cardId":69,"flipIfFlipped":false,"playerId":2} 
 Player 1 21:38:10 $MOVE_CARD_END:  
 {"moveIndex":88,"cardId":35,"flipIfFlipped":false,"playerId":2} 
 Player 1 21:38:10 $MOVE_CARD_END:  
 {"moveIndex":89,"cardId":228,"flipIfFlipped":true,"playerId":2} 
 Player 1 21:38:11 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard \n2:Player 2 activated Gold Chest (2)"} 
 Player 1 21:38:11 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard \n2:Player 2 activated Gold Chest (2)"} 
 Player 1 21:38:11 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard \n2:Player 2 activated Gold Chest (2)"} 
 Player 1 21:38:11 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard \n2:Player 2 activated Gold Chest (2)"} 
 Player 1 21:38:11 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:38:12 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard"} 
 Player 1 21:38:12 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard"} 
 Player 1 21:38:12 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:38:17 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:38:17 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:38:17 $MOVE_CARD_END:  
 {"moveIndex":90,"cardId":69,"flipIfFlipped":true,"playerId":2} 
 Player 1 21:38:17 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 4 Cents(9) "} 
 Player 1 21:38:17 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 4 Cents(9) "} 
 Player 1 21:38:18 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:38:20 $MOVE_CARD_END:  
 {"moveIndex":91,"cardId":69,"flipIfFlipped":true,"playerId":2} 
 Player 1 21:38:20 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 4 Cents(9) "} 
 Player 1 21:38:20 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 4 Cents(9) "} 
 Player 1 21:38:20 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 4 Cents(9) "} 
 Player 1 21:38:20 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 4 Cents(9) "} 
 Player 1 21:38:21 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:38:22 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:38:22 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:38:24 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Samson"} 
 Player 1 21:38:24 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Samson"} 
 Player 1 21:38:24 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:38:26 $MOVE_CARD_END:  
 {"moveIndex":92,"cardId":40,"flipIfFlipped":true,"playerId":2} 
 Player 1 21:38:27 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Samson"} 
 Player 1 21:38:27 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Samson"} 
 Player 1 21:38:27 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 3 Cents(2) "} 
 Player 1 21:38:27 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 3 Cents(2) "} 
 Player 1 21:38:27 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 3 Cents(2) "} 
 Player 1 21:38:27 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 3 Cents(2) "} 
 Player 1 21:38:27 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 3 Cents(2)  \n2:Player 2 activated Samson"} 
 Player 1 21:38:27 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 3 Cents(2)  \n2:Player 2 activated Samson"} 
 Player 1 21:38:27 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 3 Cents(2)  \n2:Player 2 activated Samson"} 
 Player 1 21:38:27 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 3 Cents(2)  \n2:Player 2 activated Samson"} 
 Player 1 21:38:27 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:38:30 $MOVE_CARD_END:  
 {"moveIndex":93,"cardId":40,"flipIfFlipped":true,"playerId":2} 
 Player 1 21:38:30 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 3 Cents(2) "} 
 Player 1 21:38:30 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 3 Cents(2) "} 
 Player 1 21:38:30 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 3 Cents(2) "} 
 Player 1 21:38:30 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 3 Cents(2) "} 
 Player 1 21:38:30 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:38:33 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:38:33 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:38:33 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to buy TopBlankCard for 10"} 
 Player 1 21:38:33 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to buy TopBlankCard for 10"} 
 Player 1 21:38:33 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:38:34 $MOVE_CARD_END:  
 {"moveIndex":94,"cardId":151,"flipIfFlipped":true,"playerId":2} 
 Player 1 21:38:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to buy TopBlankCard for 10"} 
 Player 1 21:38:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to buy TopBlankCard for 10"} 
 Player 1 21:38:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to buy TopBlankCard for 10 \n2:Activate Champion Belt "} 
 Player 1 21:38:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to buy TopBlankCard for 10 \n2:Activate Champion Belt "} 
 Player 1 21:38:34 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:38:37 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to buy TopBlankCard for 10 \n2:Activate Champion Belt "} 
 Player 1 21:38:37 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to buy TopBlankCard for 10 \n2:Activate Champion Belt "} 
 Player 1 21:38:37 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to buy TopBlankCard for 10 \n2:Activate Champion Belt "} 
 Player 1 21:38:37 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to buy TopBlankCard for 10 \n2:Activate Champion Belt "} 
 Player 1 21:38:37 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:38:37 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to buy TopBlankCard for 10"} 
 Player 1 21:38:37 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to buy TopBlankCard for 10"} 
 Player 1 21:38:37 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:38:53 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:38:53 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:38:53 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard"} 
 Player 1 21:38:53 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard"} 
 Player 1 21:38:53 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:38:57 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard"} 
 Player 1 21:38:57 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard"} 
 Player 1 21:38:57 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on Pooter"} 
 Player 1 21:38:57 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on Pooter"} 
 Player 1 21:38:57 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:39:02 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:39:02 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:39:04 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Pooter<Monster>"} 
 Player 1 21:39:04 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Pooter<Monster>"} 
 Player 1 21:39:07 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:39:07 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Pooter<Monster>"} 
 Player 1 21:39:07 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Pooter<Monster>"} 
 Player 1 21:39:07 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to Pooter"} 
 Player 1 21:39:08 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to Pooter"} 
 Player 1 21:39:08 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to Pooter"} 
 Player 1 21:39:08 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to Pooter"} 
 Player 1 21:39:08 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to Pooter \n2:Player 2 is rolling against Pooter<Monster>"} 
 Player 1 21:39:08 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to Pooter \n2:Player 2 is rolling against Pooter<Monster>"} 
 Player 1 21:39:08 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to Pooter \n2:Player 2 is rolling against Pooter<Monster>"} 
 Player 1 21:39:08 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to Pooter \n2:Player 2 is rolling against Pooter<Monster>"} 
 Player 1 21:39:10 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:39:10 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to Pooter"} 
 Player 1 21:39:10 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to Pooter"} 
 Player 1 21:39:10 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to Pooter \n2:Activate Champion Belt "} 
 Player 1 21:39:10 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to Pooter \n2:Activate Champion Belt "} 
 Player 1 21:39:10 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:39:13 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to Pooter \n2:Activate Champion Belt "} 
 Player 1 21:39:13 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to Pooter \n2:Activate Champion Belt "} 
 Player 1 21:39:13 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to Pooter \n2:Activate Champion Belt "} 
 Player 1 21:39:13 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to Pooter \n2:Activate Champion Belt "} 
 Player 1 21:39:15 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:39:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to Pooter"} 
 Player 1 21:39:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to Pooter"} 
 Player 1 21:39:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by undefined"} 
 Player 1 21:39:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by undefined"} 
 Player 1 21:39:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by undefined"} 
 Player 1 21:39:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by undefined"} 
 Player 1 21:39:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to Pooter \n2:[object Object] killed by undefined"} 
 Player 1 21:39:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to Pooter \n2:[object Object] killed by undefined"} 
 Player 1 21:39:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to Pooter \n2:[object Object] killed by undefined"} 
 Player 1 21:39:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Samson combat damage to Pooter \n2:[object Object] killed by undefined"} 
 Player 1 21:39:23 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:39:23 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by undefined"} 
 Player 1 21:39:23 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by undefined"} 
 Player 1 21:39:23 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Pooter<Monster> reward"} 
 Player 1 21:39:23 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Pooter<Monster> reward"} 
 Player 1 21:39:23 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Pooter<Monster> reward"} 
 Player 1 21:39:23 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Pooter<Monster> reward"} 
 Player 1 21:39:23 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Pooter<Monster> reward \n2:[object Object] killed by undefined"} 
 Player 1 21:39:23 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Pooter<Monster> reward \n2:[object Object] killed by undefined"} 
 Player 1 21:39:23 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Pooter<Monster> reward \n2:[object Object] killed by undefined"} 
 Player 1 21:39:23 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Pooter<Monster> reward \n2:[object Object] killed by undefined"} 
 Player 1 21:39:24 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:39:24 $MOVE_CARD_END:  
 {"moveIndex":95,"cardId":95,"flipIfFlipped":false,"playerId":2} 
 Player 1 21:39:25 $MOVE_CARD_END:  
 {"moveIndex":96,"cardId":242,"flipIfFlipped":true,"playerId":2} 
 Player 1 21:39:32 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:39:32 $RECHARGE_ITEM:  
 {"cardId":270} 
 Player 1 21:39:32 $PLAYER_RECHARGE_ITEM:  
 {"playerId":1,"cardId":270} 
 Player 1 21:39:32 $RECHARGE_ITEM:  
 {"cardId":271} 
 Player 1 21:39:32 $PLAYER_RECHARGE_ITEM:  
 {"playerId":1,"cardId":271} 
 Player 1 21:39:32 $RECHARGE_ITEM:  
 {"cardId":187} 
 Player 1 21:39:32 $PLAYER_RECHARGE_ITEM:  
 {"playerId":1,"cardId":187} 
 Player 1 21:39:32 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:39:32 $NEXT_STACK_ID:  
 Player 1 21:39:32 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:39:32 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 21:39:32 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":189,"creatorCardId":270,"turnPlayerCardId":270,"stackEffectType":13}} 
 Player 1 21:39:32 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":699,"_text":"Add StartTurnLoot 189 "}} 
 Player 1 21:39:32 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:39:32 $ACTION_MASSAGE_REMOVE:  
 {"id":699} 
 Player 1 21:39:32 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 21:39:32 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":189,"creatorCardId":270,"turnPlayerCardId":270,"stackEffectType":13}} 
 Player 1 21:39:32 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":700,"_text":"Response Adding StartTurnLoot 189"},"childOfId":699} 
 Player 1 21:39:32 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":701,"_text":"Wait For Response From Player 1 "},"childOfId":699} 
 Player 1 21:39:32 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:39:32 $ACTION_MASSAGE_REMOVE:  
 {"id":701} 
 Player 1 21:39:32 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":702,"_text":"Wait For Response From Player 2 "},"childOfId":699} 
 Player 1 21:39:32 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:39:32 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:39:33 $ACTION_MASSAGE_REMOVE:  
 {"id":702} 
 Player 1 21:39:33 $ACTION_MASSAGE_REMOVE:  
 {"id":700} 
 Player 1 21:39:33 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":703,"_text":"Resolve StartTurnLoot 189 "}} 
 Player 1 21:39:33 $DRAW_CARD:  
 {"deckType":1} 
 Player 1 21:39:33 $MOVE_CARD:  
 {"moveIndex":97,"cardId":39,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 1 21:39:33 $CARD_DRAWN:  
 {"playerId":1,"deckType":1,"drawnCardId":39} 
 Player 1 21:39:33 $FLIP_CARD:  
 {"cardId":39} 
 Player 1 21:39:33 $PLAYER_GET_LOOT:  
 {"playerId":1,"cardId":39} 
 Player 1 21:39:33 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 21:39:33 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":189,"creatorCardId":270,"turnPlayerCardId":270,"stackEffectType":13}} 
 Player 1 21:39:33 $ACTION_MASSAGE_REMOVE:  
 {"id":703} 
 Player 1 21:39:33 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":704,"_text":"Remove After Resolve StartTurnLoot 189  "}} 
 Player 1 21:39:33 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:39:33 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":189,"creatorCardId":270,"turnPlayerCardId":270,"stackEffectType":13}} 
 Player 1 21:39:33 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":705,"_text":"Response Remove After Resolve StartTurnLoot 189"},"childOfId":704} 
 Player 1 21:39:33 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":706,"_text":"Wait For Response From Player 2 "},"childOfId":704} 
 Player 1 21:39:33 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:39:33 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:39:34 $ACTION_MASSAGE_REMOVE:  
 {"id":706} 
 Player 1 21:39:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":707,"_text":"Wait For Response From Player 1 "},"childOfId":704} 
 Player 1 21:39:34 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:39:34 $ACTION_MASSAGE_REMOVE:  
 {"id":707} 
 Player 1 21:39:34 $ACTION_MASSAGE_REMOVE:  
 {"id":705} 
 Player 1 21:39:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":708,"_text":"Stack Was Emptied "}} 
 Player 1 21:39:34 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:39:34 $ACTION_MASSAGE_REMOVE:  
 {"id":704} 
 Player 1 21:39:35 $ACTION_MASSAGE_REMOVE:  
 {"id":708} 
 Player 1 21:39:36 $ACTION_MASSAGE_REMOVE:  
 {"id":704} 
 Player 1 21:39:45 $NEXT_STACK_ID:  
 Player 1 21:39:45 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:39:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to buy TopBlankCard for 10"} 
 Player 1 21:39:45 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":190,"creatorCardId":270,"itemToPurchaseCardId":0,"playerWhoBuysCardId":270,"cost":10,"stackEffectType":9}} 
 Player 1 21:39:45 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":709,"_text":"Add PurchaseItem 190 "}} 
 Player 1 21:39:45 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:39:45 $ACTION_MASSAGE_REMOVE:  
 {"id":709} 
 Player 1 21:39:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to buy TopBlankCard for 10"} 
 Player 1 21:39:45 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":190,"creatorCardId":270,"itemToPurchaseCardId":0,"playerWhoBuysCardId":270,"cost":10,"stackEffectType":9}} 
 Player 1 21:39:45 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":710,"_text":"Response Adding PurchaseItem 190"},"childOfId":709} 
 Player 1 21:39:45 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":711,"_text":"Wait For Response From Player 1 "},"childOfId":709} 
 Player 1 21:39:45 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:39:45 $ACTION_MASSAGE_REMOVE:  
 {"id":711} 
 Player 1 21:39:45 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":712,"_text":"Wait For Response From Player 2 "},"childOfId":709} 
 Player 1 21:39:45 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:39:45 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:39:46 $ACTION_MASSAGE_REMOVE:  
 {"id":712} 
 Player 1 21:39:46 $ACTION_MASSAGE_REMOVE:  
 {"id":710} 
 Player 1 21:39:46 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":713,"_text":"Resolve PurchaseItem 190 "}} 
 Player 1 21:39:46 $CHANGE_MONEY:  
 {"playerId":1,"numOfCoins":-10} 
 Player 1 21:39:46 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-10}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":76,"originStackId":-1},"isAfterActivation":true,"index":76} 
 Player 1 21:39:46 $DRAW_CARD:  
 {"deckType":5} 
 Player 1 21:39:46 $REGISTER_PASSIVE_ITEM:  
 {"cardId":190} 
 Player 1 21:39:46 $MOVE_CARD:  
 {"moveIndex":98,"cardId":190,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 
 Player 1 21:39:46 $ADD_AN_ITEM:  
 {"playerId":1,"cardId":190,"isReward":false} 
 Player 1 21:39:46 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":190}],"result":true,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":77,"originStackId":-1},"isAfterActivation":true,"index":77} 
 Player 1 21:39:46 $NEXT_STACK_ID:  
 Player 1 21:39:46 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to buy TopBlankCard for 10"} 
 Player 1 21:39:46 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to buy TopBlankCard for 10 \n2:Activate Skeleton Key effect AddAttackOpportunity<AddAttackOpportunity>"} 
 Player 1 21:39:46 $ADD_TO_STACK:  
 {"stackEffect":{"effectCollectedData":null,"entityId":191,"creatorCardId":270,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":190,"effectToDo":{"effectName":"AddAttackOpportunity","cardEffectNum":0,"cardPlayerId":1,"cardId":190,"effctType":0},"isAfterActivation":true,"index":77,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 21:39:46 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":714,"_text":"Add ActivatePassiveEffect 191 "}} 
 Player 1 21:39:46 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to buy TopBlankCard for 10 \n2:Activate Skeleton Key effect AddAttackOpportunity<AddAttackOpportunity>"} 
 Player 1 21:39:46 $ACTION_MASSAGE_REMOVE:  
 {"id":714} 
 Player 1 21:39:46 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to buy TopBlankCard for 10 \n2:Activate Skeleton Key effect AddAttackOpportunity<AddAttackOpportunity>"} 
 Player 1 21:39:46 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"effectCollectedData":{"effectTargets":[270],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":270,"effectCardPlayer":270},"entityId":191,"creatorCardId":270,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":190,"effectToDo":{"effectName":"AddAttackOpportunity","cardEffectNum":0,"cardPlayerId":1,"cardId":190,"effctType":0},"isAfterActivation":true,"index":77,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 21:39:46 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":715,"_text":"Response Adding ActivatePassiveEffect 191"},"childOfId":714} 
 Player 1 21:39:47 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":716,"_text":"Wait For Response From Player 2 "},"childOfId":714} 
 Player 1 21:39:47 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:39:47 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:39:47 $ACTION_MASSAGE_REMOVE:  
 {"id":716} 
 Player 1 21:39:47 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":717,"_text":"Wait For Response From Player 1 "},"childOfId":714} 
 Player 1 21:39:47 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:39:47 $ACTION_MASSAGE_REMOVE:  
 {"id":717} 
 Player 1 21:39:47 $ACTION_MASSAGE_REMOVE:  
 {"id":715} 
 Player 1 21:39:47 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":718,"_text":"Resolve ActivatePassiveEffect 191 "}} 
 Player 1 21:39:47 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":190,"particleType":6} 
 Player 1 21:39:49 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":190,"particleType":6} 
 Player 1 21:39:49 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":190}],"result":true,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":77,"originStackId":-1},"isAfterActivation":true,"index":77} 
 Player 1 21:39:49 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to buy TopBlankCard for 10 \n2:Activate Skeleton Key effect AddAttackOpportunity<AddAttackOpportunity>"} 
 Player 1 21:39:49 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"effectCollectedData":{"effectTargets":[270],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":270,"effectCardPlayer":270},"entityId":191,"creatorCardId":270,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":190,"isAfterActivation":true,"index":77,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 21:39:49 $ACTION_MASSAGE_REMOVE:  
 {"id":718} 
 Player 1 21:39:49 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":719,"_text":"Remove After Resolve ActivatePassiveEffect 191  "}} 
 Player 1 21:39:49 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to buy TopBlankCard for 10"} 
 Player 1 21:39:49 $REMOVE_FROM_STACK:  
 {"stackEffect":{"effectCollectedData":{"effectTargets":[270],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":270,"effectCardPlayer":270},"entityId":191,"creatorCardId":270,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":190,"isAfterActivation":true,"index":77,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 21:39:49 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":720,"_text":"Response Remove After Resolve ActivatePassiveEffect 191"},"childOfId":719} 
 Player 1 21:39:49 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":721,"_text":"Wait For Response From Player 1 "},"childOfId":719} 
 Player 1 21:39:49 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:39:49 $ACTION_MASSAGE_REMOVE:  
 {"id":721} 
 Player 1 21:39:49 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":722,"_text":"Wait For Response From Player 2 "},"childOfId":719} 
 Player 1 21:39:49 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:39:49 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:39:49 $ACTION_MASSAGE_REMOVE:  
 {"id":722} 
 Player 1 21:39:49 $ACTION_MASSAGE_REMOVE:  
 {"id":720} 
 Player 1 21:39:49 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":723,"_text":"Resolve PurchaseItem 190 "}} 
 Player 1 21:39:49 $ACTION_MASSAGE_REMOVE:  
 {"id":713} 
 Player 1 21:39:49 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":724,"_text":"Remove After Resolve PurchaseItem 190  "}} 
 Player 1 21:39:49 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:39:49 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":190,"creatorCardId":270,"itemToPurchaseCardId":0,"playerWhoBuysCardId":270,"cost":10,"stackEffectType":9}} 
 Player 1 21:39:50 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":725,"_text":"Response Remove After Resolve PurchaseItem 190"},"childOfId":724} 
 Player 1 21:39:50 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":726,"_text":"Wait For Response From Player 2 "},"childOfId":724} 
 Player 1 21:39:50 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:39:50 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:39:50 $ACTION_MASSAGE_REMOVE:  
 {"id":726} 
 Player 1 21:39:50 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":727,"_text":"Wait For Response From Player 1 "},"childOfId":724} 
 Player 1 21:39:50 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:39:50 $ACTION_MASSAGE_REMOVE:  
 {"id":727} 
 Player 1 21:39:50 $ACTION_MASSAGE_REMOVE:  
 {"id":725} 
 Player 1 21:39:50 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":728,"_text":"Stack Was Emptied "}} 
 Player 1 21:39:50 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:39:50 $ACTION_MASSAGE_REMOVE:  
 {"id":713} 
 Player 1 21:39:50 $ACTION_MASSAGE_REMOVE:  
 {"id":719} 
 Player 1 21:39:51 $ACTION_MASSAGE_REMOVE:  
 {"id":728} 
 Player 1 21:39:52 $ACTION_MASSAGE_REMOVE:  
 {"id":719} 
 Player 1 21:39:52 $ACTION_MASSAGE_REMOVE:  
 {"id":724} 
 Player 1 21:40:08 $NEXT_STACK_ID:  
 Player 1 21:40:08 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:40:08 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 activated Incubus"} 
 Player 1 21:40:08 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":192,"creatorCardId":270,"hasLockingStackEffect":false,"itemToPlayCardId":271,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 1 21:40:08 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":729,"_text":"Add ActivateItem 192 "}} 
 Player 1 21:40:12 $USE_ITEM:  
 {"cardId":271} 
 Player 1 21:40:12 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:40:12 $ACTION_MASSAGE_REMOVE:  
 {"id":729} 
 Player 1 21:40:12 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 activated Incubus"} 
 Player 1 21:40:12 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":192,"creatorCardId":270,"hasLockingStackEffect":false,"itemToPlayCardId":271,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 21:40:12 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":730,"_text":"Response Adding ActivateItem 192"},"childOfId":729} 
 Player 1 21:40:12 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":731,"_text":"Wait For Response From Player 1 "},"childOfId":729} 
 Player 1 21:40:12 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:40:12 $ACTION_MASSAGE_REMOVE:  
 {"id":731} 
 Player 1 21:40:12 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":732,"_text":"Wait For Response From Player 2 "},"childOfId":729} 
 Player 1 21:40:12 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:40:13 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:40:13 $ACTION_MASSAGE_REMOVE:  
 {"id":732} 
 Player 1 21:40:13 $ACTION_MASSAGE_REMOVE:  
 {"id":730} 
 Player 1 21:40:13 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":733,"_text":"Resolve ActivateItem 192 "}} 
 Player 1 21:40:13 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":271,"particleType":6} 
 Player 1 21:40:15 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":271,"particleType":6} 
 Player 1 21:40:33 $PLAYER_LOSE_LOOT:  
 {"playerId":1,"cardId":39} 
 Player 1 21:40:33 $MOVE_CARD:  
 {"moveIndex":99,"cardId":39,"placeID":2,"flipIfFlipped":false,"playerId":1,"placeType":"Hand"} 
 Player 1 21:40:34 $FLIP_CARD:  
 {"cardId":39} 
 Player 1 21:40:34 $PLAYER_GET_LOOT:  
 {"playerId":2,"cardId":39} 
 Player 1 21:40:34 $PLAYER_LOSE_LOOT:  
 {"playerId":2,"cardId":95} 
 Player 1 21:40:34 $MOVE_CARD:  
 {"moveIndex":100,"cardId":95,"placeID":1,"flipIfFlipped":false,"playerId":1,"placeType":"Hand"} 
 Player 1 21:40:34 $FLIP_CARD:  
 {"cardId":95} 
 Player 1 21:40:34 $PLAYER_GET_LOOT:  
 {"playerId":1,"cardId":95} 
 Player 1 21:40:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 activated Incubus"} 
 Player 1 21:40:34 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":192,"creatorCardId":270,"hasLockingStackEffect":false,"itemToPlayCardId":271,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 21:40:34 $ACTION_MASSAGE_REMOVE:  
 {"id":733} 
 Player 1 21:40:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":734,"_text":"Remove After Resolve ActivateItem 192  "}} 
 Player 1 21:40:34 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:40:34 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":192,"creatorCardId":270,"hasLockingStackEffect":false,"itemToPlayCardId":271,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 21:40:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":735,"_text":"Response Remove After Resolve ActivateItem 192"},"childOfId":734} 
 Player 1 21:40:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":736,"_text":"Wait For Response From Player 2 "},"childOfId":734} 
 Player 1 21:40:34 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:40:34 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:40:35 $ACTION_MASSAGE_REMOVE:  
 {"id":736} 
 Player 1 21:40:35 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":737,"_text":"Wait For Response From Player 1 "},"childOfId":734} 
 Player 1 21:40:35 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:40:35 $ACTION_MASSAGE_REMOVE:  
 {"id":737} 
 Player 1 21:40:35 $ACTION_MASSAGE_REMOVE:  
 {"id":735} 
 Player 1 21:40:35 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":738,"_text":"Stack Was Emptied "}} 
 Player 1 21:40:35 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:40:35 $ACTION_MASSAGE_REMOVE:  
 {"id":734} 
 Player 1 21:40:36 $ACTION_MASSAGE_REMOVE:  
 {"id":738} 
 Player 1 21:40:37 $ACTION_MASSAGE_REMOVE:  
 {"id":734} 
 Player 1 21:40:53 $NEXT_STACK_ID:  
 Player 1 21:40:53 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:40:53 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1  declared attack on TopBlankCard"} 
 Player 1 21:40:53 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":193,"creatorCardId":270,"attackingPlayerCardId":270,"idOfCardBeingAttacked":0,"stackEffectType":4}} 
 Player 1 21:40:53 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":739,"_text":"Add DeclareAttack 193 "}} 
 Player 1 21:40:53 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:40:53 $ACTION_MASSAGE_REMOVE:  
 {"id":739} 
 Player 1 21:40:53 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1  declared attack on TopBlankCard"} 
 Player 1 21:40:53 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":193,"creatorCardId":270,"attackingPlayerCardId":270,"idOfCardBeingAttacked":0,"stackEffectType":4}} 
 Player 1 21:40:53 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":740,"_text":"Response Adding DeclareAttack 193"},"childOfId":739} 
 Player 1 21:40:53 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":741,"_text":"Wait For Response From Player 1 "},"childOfId":739} 
 Player 1 21:40:53 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:40:53 $ACTION_MASSAGE_REMOVE:  
 {"id":741} 
 Player 1 21:40:53 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":742,"_text":"Wait For Response From Player 2 "},"childOfId":739} 
 Player 1 21:40:53 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:40:53 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:40:53 $ACTION_MASSAGE_REMOVE:  
 {"id":742} 
 Player 1 21:40:53 $ACTION_MASSAGE_REMOVE:  
 {"id":740} 
 Player 1 21:40:53 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":743,"_text":"Resolve DeclareAttack 193 "}} 
 Player 1 21:40:53 $DRAW_CARD:  
 {"deckType":2} 
 Player 1 21:40:53 $SHOW_CARD_PREVIEW:  
 {"cardToShowId":223,"playerId":1} 
 Player 1 21:41:06 $FLIP_CARD:  
 {"cardId":223} 
 Player 1 21:41:06 $ADD_MONSTER:  
 {"monsterPlaceId":1,"monsterId":223} 
 Player 1 21:41:06 $NEW_MONSTER_ON_PLACE:  
 {"cardId":223,"monsterPlaceId":1} 
 Player 1 21:41:06 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":223,"particleType":5} 
 Player 1 21:41:06 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":78,"originStackId":193},"isAfterActivation":true,"index":78} 
 Player 1 21:41:06 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1  declared attack on TopBlankCard"} 
 Player 1 21:41:06 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":193,"creatorCardId":270,"attackingPlayerCardId":270,"idOfCardBeingAttacked":223,"stackEffectType":4}} 
 Player 1 21:41:06 $ACTION_MASSAGE_REMOVE:  
 {"id":743} 
 Player 1 21:41:06 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":744,"_text":"Remove After Resolve DeclareAttack 193  "}} 
 Player 1 21:41:06 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:41:06 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":193,"creatorCardId":270,"attackingPlayerCardId":270,"idOfCardBeingAttacked":223,"stackEffectType":4}} 
 Player 1 21:41:06 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":745,"_text":"Response Remove After Resolve DeclareAttack 193"},"childOfId":744} 
 Player 1 21:41:06 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":746,"_text":"Wait For Response From Player 2 "},"childOfId":744} 
 Player 1 21:41:06 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:41:06 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:41:07 $ACTION_MASSAGE_REMOVE:  
 {"id":746} 
 Player 1 21:41:07 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":747,"_text":"Wait For Response From Player 1 "},"childOfId":744} 
 Player 1 21:41:07 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:41:07 $ACTION_MASSAGE_REMOVE:  
 {"id":747} 
 Player 1 21:41:07 $ACTION_MASSAGE_REMOVE:  
 {"id":745} 
 Player 1 21:41:07 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":748,"_text":"Stack Was Emptied "}} 
 Player 1 21:41:07 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:41:07 $ACTION_MASSAGE_REMOVE:  
 {"id":744} 
 Player 1 21:41:07 $NEXT_STACK_ID:  
 Player 1 21:41:07 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:41:07 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Fat Bat<Monster>"} 
 Player 1 21:41:07 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":194,"creatorCardId":270,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":223}} 
 Player 1 21:41:07 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":749,"_text":"Add AttackRoll 194 "}} 
 Player 1 21:41:07 $ROLL_DICE:  
 {"playerId":1} 
 Player 1 21:41:08 $ACTION_MASSAGE_REMOVE:  
 {"id":748} 
 Player 1 21:41:09 $ACTION_MASSAGE_REMOVE:  
 {"id":744} 
 Player 1 21:41:09 $ROLL_DICE_ENDED:  
 {"playerId":1,"numberRolled":2} 
 Player 1 21:41:09 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 2 vs Fat Bat<Monster>"} 
 Player 1 21:41:09 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:41:09 $ACTION_MASSAGE_REMOVE:  
 {"id":749} 
 Player 1 21:41:09 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 2 vs Fat Bat<Monster>"} 
 Player 1 21:41:09 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":194,"creatorCardId":270,"numberRolled":2,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":223}} 
 Player 1 21:41:10 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":750,"_text":"Response Adding AttackRoll 194"},"childOfId":749} 
 Player 1 21:41:10 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":751,"_text":"Wait For Response From Player 1 "},"childOfId":749} 
 Player 1 21:41:10 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:41:14 $ACTION_MASSAGE_REMOVE:  
 {"id":751} 
 Player 1 21:41:14 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":752,"_text":"Wait For Response From Player 2 "},"childOfId":749} 
 Player 1 21:41:14 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:41:14 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:41:16 $ACTION_MASSAGE_REMOVE:  
 {"id":752} 
 Player 1 21:41:16 $ACTION_MASSAGE_REMOVE:  
 {"id":750} 
 Player 1 21:41:17 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 2 vs Fat Bat<Monster>"} 
 Player 1 21:41:17 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 2 vs Fat Bat<Monster>"} 
 Player 1 21:41:19 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 2 vs Fat Bat<Monster> \n2:Player 2 activated Blood Lust"} 
 Player 1 21:41:19 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 2 vs Fat Bat<Monster> \n2:Player 2 activated Blood Lust"} 
 Player 1 21:42:01 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:42:03 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 2 vs Fat Bat<Monster> \n2:Player 2 activated Blood Lust"} 
 Player 1 21:42:03 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 2 vs Fat Bat<Monster> \n2:Player 2 activated Blood Lust"} 
 Player 1 21:42:03 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 2 vs Fat Bat<Monster> \n2:Player 2 activated Blood Lust"} 
 Player 1 21:42:03 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 2 vs Fat Bat<Monster> \n2:Player 2 activated Blood Lust"} 
 Player 1 21:42:06 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:42:06 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 2 vs Fat Bat<Monster>"} 
 Player 1 21:42:06 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 2 vs Fat Bat<Monster>"} 
 Player 1 21:42:06 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":753,"_text":"Added 0 to original roll"}} 
 Player 1 21:42:06 $NEXT_STACK_ID:  
 Player 1 21:42:06 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Fat Bat<Monster>"} 
 Player 1 21:42:06 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:42:06 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Fat Bat combat damage to Lilith \n2:Player 1 is rolling against Fat Bat<Monster>"} 
 Player 1 21:42:06 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":196,"creatorCardId":270,"entityToDoDamageCardId":223,"entityToTakeDamageCardId":270,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 21:42:06 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Fat Bat combat damage to Lilith \n2:Player 1 is rolling against Fat Bat<Monster>"} 
 Player 1 21:42:06 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Fat Bat combat damage to Lilith \n2:Player 1 is rolling against Fat Bat<Monster>"} 
 Player 1 21:42:07 $REPLACE_STACK:  
 {"currentStack":[{"entityId":196,"creatorCardId":270,"entityToDoDamageCardId":223,"entityToTakeDamageCardId":270,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":194,"creatorCardId":270,"numberRolled":2,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":223}]} 
 Player 1 21:42:07 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":2},{"type":2,"number":2},{"type":2,"number":5}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":79,"originStackId":194},"isAfterActivation":true,"index":79} 
 Player 1 21:42:07 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Fat Bat combat damage to Lilith \n2:Player 1 is rolling against Fat Bat<Monster>"} 
 Player 1 21:42:07 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":194,"creatorCardId":270,"numberRolled":2,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":223}} 
 Player 1 21:42:07 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Fat Bat combat damage to Lilith \n2:Player 1 is rolling against Fat Bat<Monster>"} 
 Player 1 21:42:07 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Fat Bat combat damage to Lilith \n2:Player 1 is rolling against Fat Bat<Monster>"} 
 Player 1 21:42:07 $FINISH_DO_STACK_EFFECT:  
 {"playerId":2,"newStack":[{"entityId":196,"creatorCardId":270,"entityToDoDamageCardId":223,"entityToTakeDamageCardId":270,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":194,"creatorCardId":270,"numberRolled":2,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":223}]} 
 Player 1 21:42:07 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Fat Bat combat damage to Lilith \n2:Player 1 is rolling against Fat Bat<Monster>"} 
 Player 1 21:42:07 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Fat Bat combat damage to Lilith \n2:Player 1 is rolling against Fat Bat<Monster>"} 
 Player 1 21:42:07 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Fat Bat combat damage to Lilith \n2:Player 1 is rolling against Fat Bat<Monster>"} 
 Player 1 21:42:07 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Fat Bat combat damage to Lilith \n2:Player 1 is rolling against Fat Bat<Monster>"} 
 Player 1 21:42:07 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Fat Bat combat damage to Lilith \n2:Player 1 is rolling against Fat Bat<Monster>"} 
 Player 1 21:42:07 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Fat Bat combat damage to Lilith \n2:Player 1 is rolling against Fat Bat<Monster>"} 
 Player 1 21:42:09 $ACTION_MASSAGE_REMOVE:  
 {"id":753} 
 Player 1 21:42:26 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:42:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Fat Bat combat damage to Lilith"} 
 Player 1 21:42:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Fat Bat combat damage to Lilith"} 
 Player 1 21:42:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Fat Bat 2 combat damage to Lilith"} 
 Player 1 21:42:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Fat Bat 2 combat damage to Lilith"} 
 Player 1 21:42:26 $PLAYER_GET_HIT:  
 {"playerId":1,"damage":2,"damageDealerId":223} 
 Player 1 21:42:26 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":223}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":80,"originStackId":-1},"isAfterActivation":true,"index":80} 
 Player 1 21:42:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Fat Bat 2 combat damage to Lilith"} 
 Player 1 21:42:26 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":196,"creatorCardId":270,"entityToDoDamageCardId":223,"entityToTakeDamageCardId":270,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 21:42:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Fat Bat 2 combat damage to Lilith"} 
 Player 1 21:42:26 $FINISH_DO_STACK_EFFECT:  
 {"playerId":2,"newStack":[{"entityId":196,"creatorCardId":270,"entityToDoDamageCardId":223,"entityToTakeDamageCardId":270,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}]} 
 Player 1 21:42:27 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Fat Bat 2 combat damage to Lilith"} 
 Player 1 21:42:27 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Fat Bat 2 combat damage to Lilith"} 
 Player 1 21:42:27 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Fat Bat combat damage to Lilith"} 
 Player 1 21:42:27 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Fat Bat combat damage to Lilith"} 
 Player 1 21:42:32 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 21:42:33 $NEXT_STACK_ID:  
 Player 1 21:42:33 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 21:42:33 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Fat Bat<Monster>"} 
 Player 1 21:42:33 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":197,"creatorCardId":270,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":223}} 
 Player 1 21:42:33 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":754,"_text":"Add AttackRoll 197 "}} 
 Player 1 21:42:33 $ROLL_DICE:  
 {"playerId":1} 
 Player 1 21:42:34 $ROLL_DICE_ENDED:  
 {"playerId":1,"numberRolled":2} 
 Player 1 21:42:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 2 vs Fat Bat<Monster>"} 
 Player 1 21:42:34 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:42:34 $ACTION_MASSAGE_REMOVE:  
 {"id":754} 
 Player 1 21:42:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 2 vs Fat Bat<Monster>"} 
 Player 1 21:42:34 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":197,"creatorCardId":270,"numberRolled":2,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":223}} 
 Player 1 21:42:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":755,"_text":"Response Adding AttackRoll 197"},"childOfId":754} 
 Player 1 21:42:35 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":756,"_text":"Wait For Response From Player 1 "},"childOfId":754} 
 Player 1 21:42:35 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:42:39 $ACTION_MASSAGE_REMOVE:  
 {"id":756} 
 Player 1 21:42:39 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":757,"_text":"Wait For Response From Player 2 "},"childOfId":754} 
 Player 1 21:42:39 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:42:39 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:42:39 $ACTION_MASSAGE_REMOVE:  
 {"id":757} 
 Player 1 21:42:39 $ACTION_MASSAGE_REMOVE:  
 {"id":755} 
 Player 1 21:42:39 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":758,"_text":"Resolve AttackRoll 197 "}} 
 Player 1 21:42:39 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":759,"_text":"Added 0 to original roll"}} 
 Player 1 21:42:39 $NEXT_STACK_ID:  
 Player 1 21:42:39 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 2 vs Fat Bat<Monster>"} 
 Player 1 21:42:39 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:42:39 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Fat Bat combat damage to Lilith \n2:Player 1 rolled 2 vs Fat Bat<Monster>"} 
 Player 1 21:42:39 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":198,"creatorCardId":270,"entityToDoDamageCardId":223,"entityToTakeDamageCardId":270,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 21:42:39 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Fat Bat combat damage to Lilith \n2:Player 1 rolled 2 vs Fat Bat<Monster>"} 
 Player 1 21:42:39 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Fat Bat combat damage to Lilith \n2:Player 1 rolled 2 vs Fat Bat<Monster>"} 
 Player 1 21:42:39 $REPLACE_STACK:  
 {"currentStack":[{"entityId":198,"creatorCardId":270,"entityToDoDamageCardId":223,"entityToTakeDamageCardId":270,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":197,"creatorCardId":270,"numberRolled":2,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":223}]} 
 Player 1 21:42:39 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":2},{"type":2,"number":1},{"type":2,"number":5}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":81,"originStackId":197},"isAfterActivation":true,"index":81} 
 Player 1 21:42:40 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Fat Bat combat damage to Lilith \n2:Player 1 rolled 2 vs Fat Bat<Monster>"} 
 Player 1 21:42:40 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":197,"creatorCardId":270,"numberRolled":2,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":223}} 
 Player 1 21:42:40 $ACTION_MASSAGE_REMOVE:  
 {"id":758} 
 Player 1 21:42:40 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":760,"_text":"Remove After Resolve AttackRoll 197  "}} 
 Player 1 21:42:40 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Fat Bat combat damage to Lilith"} 
 Player 1 21:42:40 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":197,"creatorCardId":270,"numberRolled":2,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":223}} 
 Player 1 21:42:40 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":761,"_text":"Response Remove After Resolve AttackRoll 197"},"childOfId":760} 
 Player 1 21:42:40 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":762,"_text":"Wait For Response From Player 1 "},"childOfId":760} 
 Player 1 21:42:40 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:42:40 $ACTION_MASSAGE_REMOVE:  
 {"id":762} 
 Player 1 21:42:40 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":763,"_text":"Wait For Response From Player 2 "},"childOfId":760} 
 Player 1 21:42:40 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:42:40 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:42:40 $ACTION_MASSAGE_REMOVE:  
 {"id":763} 
 Player 1 21:42:41 $ACTION_MASSAGE_REMOVE:  
 {"id":761} 
 Player 1 21:42:41 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":764,"_text":"Resolve CombatDamage 198 "}} 
 Player 1 21:42:41 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Fat Bat 2 combat damage to Lilith"} 
 Player 1 21:42:41 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Fat Bat 2 combat damage to Lilith"} 
 Player 1 21:42:41 $PLAYER_GET_HIT:  
 {"playerId":1,"damage":2,"damageDealerId":223} 
 Player 1 21:42:41 $NEXT_STACK_ID:  
 Player 1 21:42:41 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Fat Bat 2 combat damage to Lilith"} 
 Player 1 21:42:41 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:42:41 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Fat Bat 2 combat damage to Lilith \n2:Player 1 is about to die"} 
 Player 1 21:42:41 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":199,"creatorCardId":270,"playerToDieCardId":270,"stackEffectType":15,"killerId":223}} 
 Player 1 21:42:41 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Fat Bat 2 combat damage to Lilith \n2:Player 1 is about to die"} 
 Player 1 21:42:41 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Fat Bat 2 combat damage to Lilith \n2:Player 1 is about to die"} 
 Player 1 21:42:41 $REPLACE_STACK:  
 {"currentStack":[{"entityId":198,"creatorCardId":270,"entityToDoDamageCardId":223,"entityToTakeDamageCardId":270,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":199,"creatorCardId":270,"playerToDieCardId":270,"stackEffectType":15,"killerId":223}]} 
 Player 1 21:42:41 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":223}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":82,"originStackId":-1},"isAfterActivation":true,"index":82} 
 Player 1 21:42:41 $ACTION_MASSAGE_REMOVE:  
 {"id":764} 
 Player 1 21:42:41 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":765,"_text":"Remove After Resolve CombatDamage 198  "}} 
 Player 1 21:42:41 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to die"} 
 Player 1 21:42:41 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":198,"creatorCardId":270,"entityToDoDamageCardId":223,"entityToTakeDamageCardId":270,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 21:42:41 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":766,"_text":"Response Remove After Resolve CombatDamage 198"},"childOfId":765} 
 Player 1 21:42:41 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":767,"_text":"Wait For Response From Player 1 "},"childOfId":765} 
 Player 1 21:42:41 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:42:42 $ACTION_MASSAGE_REMOVE:  
 {"id":759} 
 Player 1 21:42:43 $ACTION_MASSAGE_REMOVE:  
 {"id":760} 
 Player 1 21:42:43 $ACTION_MASSAGE_REMOVE:  
 {"id":765} 
 Player 1 21:42:53 $ACTION_MASSAGE_REMOVE:  
 {"id":767} 
 Player 1 21:42:53 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":768,"_text":"Wait For Response From Player 2 "},"childOfId":765} 
 Player 1 21:42:53 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 21:42:53 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 21:42:53 $ACTION_MASSAGE_REMOVE:  
 {"id":768} 
 Player 1 21:42:53 $ACTION_MASSAGE_REMOVE:  
 {"id":766} 
 Player 1 21:42:53 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":769,"_text":"Resolve PlayerDeath 199 "}} 
 Player 1 21:42:53 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":223,"particleType":5} 
 Player 1 21:42:53 $CANCEL_ATTACK:  
 Player 1 21:42:53 $NEXT_STACK_ID:  
 Player 1 21:42:53 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to die"} 
 Player 1 21:42:53 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:42:53 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 
 Player 1 21:42:53 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":200,"creatorCardId":270,"playerToPayCardId":270,"stackEffectType":16}} 
 Player 1 21:42:53 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 
 Player 1 21:42:53 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 
 Player 1 21:42:53 $REPLACE_STACK:  
 {"currentStack":[{"entityId":199,"creatorCardId":270,"playerToDieCardId":270,"stackEffectType":15,"killerId":223},{"entityId":200,"creatorCardId":270,"playerToPayCardId":270,"stackEffectType":16}]} 
 Player 1 21:42:53 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 
 Player 1 21:42:54 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":199,"creatorCardId":270,"playerToDieCardId":270,"stackEffectType":15,"killerId":223}} 
 Player 1 21:42:54 $ACTION_MASSAGE_REMOVE:  
 {"id":769} 
 Player 1 21:42:54 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":770,"_text":"Remove After Resolve PlayerDeath 199  "}} 
 Player 1 21:42:54 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 1 21:42:54 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":199,"creatorCardId":270,"playerToDieCardId":270,"stackEffectType":15,"killerId":223}} 
 Player 1 21:42:54 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":771,"_text":"Response Remove After Resolve PlayerDeath 199"},"childOfId":770} 
 Player 1 21:42:54 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":772,"_text":"Wait For Response From Player 1 "},"childOfId":770} 
 Player 1 21:42:54 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:42:56 $ACTION_MASSAGE_REMOVE:  
 {"id":770} 
 Player 1 21:42:58 $NEXT_STACK_ID:  
 Player 1 21:42:58 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 1 21:42:58 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to pay death penalties \n2:Player 1 play Charged Penny "} 
 Player 1 21:42:58 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":201,"creatorCardId":270,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":95,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 1 21:42:58 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":773,"_text":"Add PlayLootCardStackEffect 201 "}} 
 Player 1 21:42:58 $PLAYER_LOSE_LOOT:  
 {"playerId":1,"cardId":95} 
 Player 1 21:42:58 $MOVE_CARD:  
 {"moveIndex":101,"cardId":95,"placeID":278,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 21:42:59 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to pay death penalties \n2:Player 1 play Charged Penny: ChainEffects"} 
 Player 1 21:42:59 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to pay death penalties \n2:Player 1 play Charged Penny: ChainEffects"} 
 Player 1 21:43:29 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:43:29 $ACTION_MASSAGE_REMOVE:  
 {"id":773} 
 Player 1 21:43:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to pay death penalties \n2:Player 1 play Charged Penny: ChainEffects"} 
 Player 1 21:43:29 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":201,"creatorCardId":270,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":95,"lootPlayerId":1,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":95,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 21:43:29 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":774,"_text":"Response Adding PlayLootCardStackEffect 201"},"childOfId":773} 
 Player 1 21:43:29 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":775,"_text":"Wait For Response From Player 1 "},"childOfId":773} 
 Player 1 21:43:29 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 21:43:36 $NEXT_STACK_ID:  
 Player 1 21:43:36 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to pay death penalties \n2:Player 1 play Charged Penny: ChainEffects"} 
 Player 1 21:43:36 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to pay death penalties \n2:Player 1 play Charged Penny: ChainEffects \n3:Player 1 activated Lilith"} 
 Player 1 21:43:36 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":202,"creatorCardId":270,"hasLockingStackEffect":false,"itemToPlayCardId":270,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 1 21:43:36 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":776,"_text":"Add ActivateItem 202 "}} 
 Player 1 21:44:04 $RESPOND_TO:  
 {"playerId":-1,"stackEffectResponse":false} 
 Player 1 21:44:04 $RESPOND_TO:  
 {"playerId":-1,"stackEffectResponse":false} 
 Player 1 21:44:04 $RESPOND_TO:  
 {"playerId":-1,"stackEffectResponse":false} 
 Player 1 21:44:04 $RESPOND_TO:  
 {"playerId":-1,"stackEffectResponse":false} 
 Player 1 21:44:04 $RESPOND_TO:  
 {"playerId":-1,"stackEffectResponse":false} 
 Player 1 21:44:04 $RESPOND_TO:  
 {"playerId":-1,"stackEffectResponse":false} 
 Player 1 21:44:04 $RESPOND_TO:  
 {"playerId":-1,"stackEffectResponse":false} 
 Player 1 21:44:04 $RESPOND_TO:  
 {"playerId":-1,"stackEffectResponse":false} 
 Player 1 21:44:04 $RESPOND_TO:  
 {"playerId":-1,"stackEffectResponse":false} 
 Player 1 21:44:04 $RESPOND_TO:  
 {"playerId":-1,"stackEffectResponse":false}