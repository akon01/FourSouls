{"version":3,"sources":["access/AsyncPromiseProceeding.ts"],"names":[],"mappings":";;;AAAA,qCAAkD;AAClD,2DAAkF;AAElF,iDAAgD;AAChD,2DAA0D;AAI1D;IAEI;IAEA,CAAC;IAED,2CAAU,GAAV,UAAW,SAAoB;QAAE,iBAAqC;aAArC,UAAqC,EAArC,qBAAqC,EAArC,IAAqC;YAArC,gCAAqC;;QAClE,IAAI,SAAS,CAAC,SAAS,EAAE;YACrB,OAAO,CAAC,OAAO,CAAC,CAAC,UAAA,MAAM;gBACnB,SAAS,CAAC,SAAS,GAAG,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,UAAC,GAAG;oBAC/C,SAAS,CAAC,cAAc,GAAG,GAAG,CAAC;oBAC/B,OAAO,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;yBACpC,IAAI,CAAC;wBACF,OAAO,SAAS,CAAC,cAAc,CAAC;oBACpC,CAAC,CAAC,CAAC;gBACX,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC,CAAC;SACP;IACL,CAAC;IAE0B,wCAAiB,GAAxB;QACI,OAAO,EAAC,MAAM,EAAC,wBAAwB,EAAC,QAAQ,EAAC,EAAC,aAAa,EAAC,EAAE,EAAC,YAAY,EAAC,CAAC,WAAW,EAAC,SAAS,CAAC,EAAC,EAAC,CAAC;IAC9G,CAAC;IAtBZ,sBAAsB;QAFlC,2BAAY,EAAE;QACd,gBAAS,CAAC,2CAAsB,EAAE,6BAAa,CAAC,OAAO,CAAC;;OAC5C,sBAAsB,CAuBf;IAAD,6BAAC;CAvBpB,AAuBoB,IAAA;AAvBP,wDAAsB","file":"../../access/AsyncPromiseProceeding.js","sourcesContent":["import { Express, Singleton } from '@ts-ioc/core';\r\nimport { IAdvisorProceeding, AdvisorProceedingToken } from './IAdvisorProceeding';\r\nimport { Joinpoint } from '../joinpoints';\r\nimport { ReturningType } from './ReturningType';\r\nimport { NonePointcut } from '../decorators/NonePointcut';\r\n\r\n@NonePointcut()\r\n@Singleton(AdvisorProceedingToken, ReturningType.promise)\r\nexport class AsyncPromiseProceeding implements IAdvisorProceeding {\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    proceeding(joinPoint: Joinpoint, ...actions: Express<Joinpoint, any>[]) {\r\n        if (joinPoint.returning) {\r\n            actions.forEach((action => {\r\n                joinPoint.returning = joinPoint.returning.then((val) => {\r\n                    joinPoint.returningValue = val;\r\n                    return Promise.resolve(action(joinPoint))\r\n                        .then(() => {\r\n                            return joinPoint.returningValue;\r\n                        });\r\n                });\r\n            }));\r\n        }\r\n    }\r\n\n                        static getClassAnnations():any  {\n                            return {\"name\":\"AsyncPromiseProceeding\",\"params\":{\"constructor\":[],\"proceeding\":[\"joinPoint\",\"actions\"]}};\n                        }\n                   }\r\n"]}