Start Log 
 Player 2 19:05:25 $MOVE_TO_TABLE:  
 Player 2 19:05:32 $FINISH_LOAD:  

 {"id":2,"turnPlayerId":2} 
 Player 2 19:05:33 $ASSIGN_CHAR_TO_PLAYER:  

 {"playerId":1,"charCardId":291,"itemCardId":292} 
 Player 2 19:05:33 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":286}],"result":true,"preventMethod":false,"methodScopeId":285,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 19:05:33 $ASSIGN_CHAR_TO_PLAYER:  

 {"playerId":2,"charCardId":285,"itemCardId":286} 
 Player 2 19:05:33 $DECK_ARRAGMENT:  

 {"deckType":1,"arrangement":[96,26,13,50,51,98,37,123,59,72,114,32,99,36,66,63,133,57,65,102,84,25,30,120,89,109,112,97,138,126,117,21,130,73,64,125,31,134,53,47,92,137,14,110,103,29,60,49,27,135,108,142,81,95,54,40,105,78,80,74,113,41,94,136,7,24,62,104,101,86,15,55,8,132,43,87,82,18,115,44,118,20,10,42,71,35,129,77,67,128,58,23,45,119,106,9,79,38,111,48,76,124,91,88,127,139,83,61,12,17,69,56,16,22,107,85,33,141,46,93,131,52,100,39,75,121,11,28,116,90,19,140,122,68,70,34]} 
 Player 2 19:05:33 $DECK_ARRAGMENT:  

 {"deckType":2,"arrangement":[258,232,257,234,275,269,243,248,236,238,229,240,235,245,256,253,249,265,237,227,247,255,261,250,259,223,266,262,241,246,239,276,263,224,233,252,272,267,270,251,226,244,273,268,271,225,264,254,274,231,242,230,260,228]} 
 Player 2 19:05:33 $DECK_ARRAGMENT:  

 {"deckType":5,"arrangement":[192,171,215,164,189,166,184,146,220,191,213,158,148,159,195,147,157,145,175,201,219,204,180,217,194,214,168,186,156,183,165,172,187,207,152,202,212,218,154,209,200,193,206,170,150,167,203,173,151,211,198,149,190,181,155,174,178,185,179,162,176,169,188,216,197,160,208,177,196,153,182,199,210,205,163,161]} 
 Player 2 19:05:33 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 19:05:33 $FLIP_CARD:  

 {"cardId":161} 
 Player 2 19:05:33 $ADD_STORE_CARD:  

 {"cardId":161} 
 Player 2 19:05:33 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 19:05:33 $FLIP_CARD:  

 {"cardId":163} 
 Player 2 19:05:33 $ADD_STORE_CARD:  

 {"cardId":163} 
 Player 2 19:05:33 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 19:05:33 $DECK_ADD_TO_BOTTOM:  

 {"deckType":2,"cardId":228} 
 Player 2 19:05:33 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 19:05:33 $FLIP_CARD:  

 {"cardId":260} 
 Player 2 19:05:33 $ADD_MONSTER:  

 {"monsterPlaceId":1,"monsterId":260} 
 Player 2 19:05:33 $NEW_MONSTER_ON_PLACE:  

 {"cardId":260,"monsterPlaceId":1} 
 Player 2 19:05:33 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 19:05:33 $FLIP_CARD:  

 {"cardId":230} 
 Player 2 19:05:33 $ADD_MONSTER:  

 {"monsterPlaceId":2,"monsterId":230} 
 Player 2 19:05:33 $NEW_MONSTER_ON_PLACE:  

 {"cardId":230,"monsterPlaceId":2} 
 Player 2 19:05:33 $SET_MONEY:  

 {"playerId":1,"numOfCoins":3} 
 Player 2 19:05:34 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":291,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 2 19:05:34 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 19:05:34 $MOVE_CARD:  

 {"moveIndex":1,"cardId":34,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 19:05:34 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":34} 
 Player 2 19:05:34 $FLIP_CARD:  

 {"cardId":34} 
 Player 2 19:05:34 $FLIP_CARD:  

 {"cardId":34} 
 Player 2 19:05:34 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":34} 
 Player 2 19:05:34 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 19:05:34 $MOVE_CARD:  

 {"moveIndex":2,"cardId":70,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 19:05:35 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":70} 
 Player 2 19:05:35 $FLIP_CARD:  

 {"cardId":70} 
 Player 2 19:05:35 $FLIP_CARD:  

 {"cardId":70} 
 Player 2 19:05:35 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":70} 
 Player 2 19:05:35 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 19:05:35 $MOVE_CARD:  

 {"moveIndex":3,"cardId":68,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 19:05:35 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":68} 
 Player 2 19:05:35 $FLIP_CARD:  

 {"cardId":68} 
 Player 2 19:05:36 $FLIP_CARD:  

 {"cardId":68} 
 Player 2 19:05:36 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":68} 
 Player 2 19:05:36 $SET_MONEY:  

 {"playerId":2,"numOfCoins":3} 
 Player 2 19:05:36 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":285,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Player 2 19:05:36 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 19:05:36 $MOVE_CARD:  

 {"moveIndex":4,"cardId":122,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 19:05:36 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":122} 
 Player 2 19:05:36 $FLIP_CARD:  

 {"cardId":122} 
 Player 2 19:05:36 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":122} 
 Player 2 19:05:36 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 19:05:36 $MOVE_CARD:  

 {"moveIndex":5,"cardId":140,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 19:05:37 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":140} 
 Player 2 19:05:37 $FLIP_CARD:  

 {"cardId":140} 
 Player 2 19:05:37 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":140} 
 Player 2 19:05:37 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 19:05:37 $MOVE_CARD:  

 {"moveIndex":6,"cardId":19,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 19:05:37 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":19} 
 Player 2 19:05:37 $FLIP_CARD:  

 {"cardId":19} 
 Player 2 19:05:37 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":19} 
 Player 2 19:05:37 $GAME_HAS_STARTED:  
 Player 2 19:05:37 $SET_TURN:  

 {"playerId":2} 
 Player 2 19:05:37 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:05:37 $NEXT_STACK_ID:  
 Player 2 19:05:38 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:05:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 19:05:38 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":285,"turnPlayerCardId":285,"stackEffectType":13}} 
 Player 2 19:05:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 19:05:38 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":1,"creatorCardId":285,"turnPlayerCardId":285,"stackEffectType":13}} 
 Player 2 19:05:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 
 Player 2 19:05:38 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:05:38 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 2 19:05:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 19:05:38 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":285,"turnPlayerCardId":285,"stackEffectType":13}} 
 Player 2 19:05:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 
 Player 2 19:05:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 2 19:05:38 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:05:38 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 2 19:05:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 2 19:05:38 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:05:38 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:05:38 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 2 19:05:39 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 2 19:05:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 
 Player 2 19:05:39 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 19:05:39 $MOVE_CARD:  

 {"moveIndex":7,"cardId":90,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 19:05:39 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":90} 
 Player 2 19:05:39 $FLIP_CARD:  

 {"cardId":90} 
 Player 2 19:05:39 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":90} 
 Player 2 19:05:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 19:05:39 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":285,"turnPlayerCardId":285,"stackEffectType":13}} 
 Player 2 19:05:39 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 2 19:05:39 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:05:39 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":1,"creatorCardId":285,"turnPlayerCardId":285,"stackEffectType":13}} 
 Player 2 19:05:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 
 Player 2 19:05:39 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:05:39 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":285,"turnPlayerCardId":285,"stackEffectType":13}} 
 Player 2 19:05:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 
 Player 2 19:05:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Player 2 19:05:39 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:05:39 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:05:40 $ACTION_MASSAGE_REMOVE:  

 {"id":7} 
 Player 2 19:05:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Player 2 19:05:40 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:05:40 $ACTION_MASSAGE_REMOVE:  

 {"id":8} 
 Player 2 19:05:40 $ACTION_MASSAGE_REMOVE:  

 {"id":6} 
 Player 2 19:05:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":9,"_text":"Stack Was Emptied "}} 
 Player 2 19:05:40 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:05:40 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 2 19:05:40 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 2 19:05:40 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 2 19:05:40 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 2 19:05:40 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 2 19:05:40 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 2 19:05:40 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 2 19:05:40 $UPDATE_ACTIONS:  
 Player 2 19:05:41 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 2 19:05:42 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 2 19:05:50 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:05:50 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:05:50 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 2 19:05:50 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 2 19:05:50 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 2 19:05:50 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 2 19:05:50 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 2 19:05:50 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 2 19:05:50 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 2 19:05:50 $REPLACE_STACK:  

 {"currentStack":[]} 
 Player 2 19:05:50 $END_TURN:  
 Player 2 19:05:50 $SET_TURN:  

 {"playerId":1} 
 Player 2 19:05:50 $START_TURN:  

 {"playerId":1} 
 Player 2 19:05:51 $STACK_EMPTIED:  

 {"playerId":1} 
 Player 2 19:05:51 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:05:51 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:05:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 19:05:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 19:05:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 19:05:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 19:05:51 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:05:52 $MOVE_CARD_END:  

 {"moveIndex":8,"cardId":116,"flipIfFlipped":false,"playerId":1} 
 Player 2 19:05:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 19:05:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 19:05:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 19:05:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 19:05:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 19:05:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 19:05:52 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:05:58 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:05:58 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:05:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Dead Bird for 10"} 
 Player 2 19:05:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Dead Bird for 10"} 
 Player 2 19:05:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Dead Bird for 10"} 
 Player 2 19:05:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Dead Bird for 10"} 
 Player 2 19:05:58 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:05:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Dead Bird for 10"} 
 Player 2 19:05:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Dead Bird for 10"} 
 Player 2 19:05:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill Store slot"} 
 Player 2 19:05:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill Store slot"} 
 Player 2 19:05:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill Store slot"} 
 Player 2 19:05:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill Store slot"} 
 Player 2 19:05:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill Store slot"} 
 Player 2 19:05:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill Store slot"} 
 Player 2 19:05:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill Store slot"} 
 Player 2 19:05:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill Store slot"} 
 Player 2 19:05:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill Store slot"} 
 Player 2 19:05:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill Store slot"} 
 Player 2 19:05:59 $MOVE_CARD_END:  

 {"moveIndex":9,"cardId":161,"flipIfFlipped":true,"playerId":1} 
 Player 2 19:05:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Dead Bird for 10 \n2:Refill Store slot"} 
 Player 2 19:05:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Dead Bird for 10 \n2:Refill Store slot"} 
 Player 2 19:05:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Dead Bird for 10 \n2:Refill Store slot"} 
 Player 2 19:05:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Dead Bird for 10 \n2:Refill Store slot"} 
 Player 2 19:05:59 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:06:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill Store slot"} 
 Player 2 19:06:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill Store slot"} 
 Player 2 19:06:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill Store slot"} 
 Player 2 19:06:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill Store slot"} 
 Player 2 19:06:00 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:06:06 $STACK_EMPTIED:  

 {"playerId":1} 
 Player 2 19:06:06 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:06:06 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 2 19:06:06 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 2 19:06:06 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 2 19:06:06 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 2 19:06:06 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 2 19:06:06 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 2 19:06:06 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 2 19:06:06 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 2 19:06:06 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 2 19:06:06 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 2 19:06:06 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 2 19:06:06 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 2 19:06:06 $ACTION_MASSAGE_REMOVE:  

 {"id":24} 
 Player 2 19:06:06 $ACTION_MASSAGE_REMOVE:  

 {"id":25} 
 Player 2 19:06:06 $ACTION_MASSAGE_REMOVE:  

 {"id":29} 
 Player 2 19:06:06 $ACTION_MASSAGE_REMOVE:  

 {"id":30} 
 Player 2 19:06:06 $ACTION_MASSAGE_REMOVE:  

 {"id":34} 
 Player 2 19:06:07 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:06:07 $NEXT_STACK_ID:  
 Player 2 19:06:07 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:06:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 19:06:07 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":5,"creatorCardId":285,"turnPlayerCardId":285,"stackEffectType":13}} 
 Player 2 19:06:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 19:06:07 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":5,"creatorCardId":285,"turnPlayerCardId":285,"stackEffectType":13}} 
 Player 2 19:06:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":35,"_text":"Add StartTurnLoot 5 "}} 
 Player 2 19:06:07 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:06:07 $ACTION_MASSAGE_REMOVE:  

 {"id":35} 
 Player 2 19:06:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 19:06:07 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":5,"creatorCardId":285,"turnPlayerCardId":285,"stackEffectType":13}} 
 Player 2 19:06:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":36,"_text":"Response Adding StartTurnLoot 5"},"childOfId":35} 
 Player 2 19:06:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":37,"_text":"Wait For Response From Player 2 "},"childOfId":35} 
 Player 2 19:06:07 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:06:07 $ACTION_MASSAGE_REMOVE:  

 {"id":37} 
 Player 2 19:06:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":38,"_text":"Wait For Response From Player 1 "},"childOfId":35} 
 Player 2 19:06:07 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:06:07 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:06:07 $ACTION_MASSAGE_REMOVE:  

 {"id":38} 
 Player 2 19:06:07 $ACTION_MASSAGE_REMOVE:  

 {"id":36} 
 Player 2 19:06:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":39,"_text":"Resolve StartTurnLoot 5 "}} 
 Player 2 19:06:07 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 19:06:07 $MOVE_CARD:  

 {"moveIndex":10,"cardId":28,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 19:06:08 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":28} 
 Player 2 19:06:08 $FLIP_CARD:  

 {"cardId":28} 
 Player 2 19:06:08 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":28} 
 Player 2 19:06:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 19:06:08 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":5,"creatorCardId":285,"turnPlayerCardId":285,"stackEffectType":13}} 
 Player 2 19:06:08 $ACTION_MASSAGE_REMOVE:  

 {"id":39} 
 Player 2 19:06:08 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:06:08 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":5,"creatorCardId":285,"turnPlayerCardId":285,"stackEffectType":13}} 
 Player 2 19:06:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":40,"_text":"Remove After Resolve StartTurnLoot 5  "}} 
 Player 2 19:06:08 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:06:08 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":5,"creatorCardId":285,"turnPlayerCardId":285,"stackEffectType":13}} 
 Player 2 19:06:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":41,"_text":"Response Remove After Resolve StartTurnLoot 5"},"childOfId":40} 
 Player 2 19:06:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":42,"_text":"Wait For Response From Player 1 "},"childOfId":40} 
 Player 2 19:06:08 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:06:08 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:06:09 $ACTION_MASSAGE_REMOVE:  

 {"id":42} 
 Player 2 19:06:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":43,"_text":"Wait For Response From Player 2 "},"childOfId":40} 
 Player 2 19:06:09 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:06:09 $ACTION_MASSAGE_REMOVE:  

 {"id":43} 
 Player 2 19:06:09 $ACTION_MASSAGE_REMOVE:  

 {"id":41} 
 Player 2 19:06:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":44,"_text":"Stack Was Emptied "}} 
 Player 2 19:06:09 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:06:09 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 2 19:06:09 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 2 19:06:09 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 2 19:06:09 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 2 19:06:10 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 2 19:06:10 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 2 19:06:10 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 2 19:06:10 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 2 19:06:10 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 2 19:06:10 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 2 19:06:10 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 2 19:06:10 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 2 19:06:10 $ACTION_MASSAGE_REMOVE:  

 {"id":24} 
 Player 2 19:06:10 $ACTION_MASSAGE_REMOVE:  

 {"id":25} 
 Player 2 19:06:10 $ACTION_MASSAGE_REMOVE:  

 {"id":29} 
 Player 2 19:06:10 $ACTION_MASSAGE_REMOVE:  

 {"id":30} 
 Player 2 19:06:10 $ACTION_MASSAGE_REMOVE:  

 {"id":34} 
 Player 2 19:06:10 $ACTION_MASSAGE_REMOVE:  

 {"id":35} 
 Player 2 19:06:10 $ACTION_MASSAGE_REMOVE:  

 {"id":39} 
 Player 2 19:06:10 $ACTION_MASSAGE_REMOVE:  

 {"id":40} 
 Player 2 19:06:10 $ACTION_MASSAGE_REMOVE:  

 {"id":44} 
 Player 2 19:06:10 $ACTION_MASSAGE_REMOVE:  

 {"id":44} 
 Player 2 19:06:11 $ACTION_MASSAGE_REMOVE:  

 {"id":40} 
 Player 2 19:06:20 $SHOW_DECISION:  

 {"startCardId":285,"endCardId":230} 
 Player 2 19:06:23 $NEXT_STACK_ID:  
 Player 2 19:06:23 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:06:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Clotty"} 
 Player 2 19:06:23 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":6,"creatorCardId":285,"attackingPlayerCardId":285,"idOfCardBeingAttacked":230,"stackEffectType":4}} 
 Player 2 19:06:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Clotty"} 
 Player 2 19:06:23 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":6,"creatorCardId":285,"attackingPlayerCardId":285,"idOfCardBeingAttacked":230,"stackEffectType":4}} 
 Player 2 19:06:23 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":45,"_text":"Add DeclareAttack 6 "}} 
 Player 2 19:06:23 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:06:23 $ACTION_MASSAGE_REMOVE:  

 {"id":45} 
 Player 2 19:06:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Clotty"} 
 Player 2 19:06:24 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":6,"creatorCardId":285,"attackingPlayerCardId":285,"idOfCardBeingAttacked":230,"stackEffectType":4}} 
 Player 2 19:06:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":46,"_text":"Response Adding DeclareAttack 6"},"childOfId":45} 
 Player 2 19:06:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":47,"_text":"Wait For Response From Player 2 "},"childOfId":45} 
 Player 2 19:06:24 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:06:24 $ACTION_MASSAGE_REMOVE:  

 {"id":47} 
 Player 2 19:06:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":48,"_text":"Wait For Response From Player 1 "},"childOfId":45} 
 Player 2 19:06:24 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:06:24 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:06:24 $ACTION_MASSAGE_REMOVE:  

 {"id":48} 
 Player 2 19:06:24 $ACTION_MASSAGE_REMOVE:  

 {"id":46} 
 Player 2 19:06:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":49,"_text":"Resolve DeclareAttack 6 "}} 
 Player 2 19:06:24 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":230,"particleType":5} 
 Player 2 19:06:24 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":285,"scopeIsPlayer":true,"index":4,"originStackId":6},"isAfterActivation":true,"index":4} 
 Player 2 19:06:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Clotty"} 
 Player 2 19:06:24 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":6,"creatorCardId":285,"attackingPlayerCardId":285,"idOfCardBeingAttacked":230,"stackEffectType":4}} 
 Player 2 19:06:24 $ACTION_MASSAGE_REMOVE:  

 {"id":49} 
 Player 2 19:06:24 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:06:24 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":6,"creatorCardId":285,"attackingPlayerCardId":285,"idOfCardBeingAttacked":230,"stackEffectType":4}} 
 Player 2 19:06:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":50,"_text":"Remove After Resolve DeclareAttack 6  "}} 
 Player 2 19:06:24 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:06:24 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":6,"creatorCardId":285,"attackingPlayerCardId":285,"idOfCardBeingAttacked":230,"stackEffectType":4}} 
 Player 2 19:06:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":51,"_text":"Response Remove After Resolve DeclareAttack 6"},"childOfId":50} 
 Player 2 19:06:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":52,"_text":"Wait For Response From Player 1 "},"childOfId":50} 
 Player 2 19:06:25 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:06:25 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:06:25 $ACTION_MASSAGE_REMOVE:  

 {"id":52} 
 Player 2 19:06:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":53,"_text":"Wait For Response From Player 2 "},"childOfId":50} 
 Player 2 19:06:25 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:06:25 $ACTION_MASSAGE_REMOVE:  

 {"id":53} 
 Player 2 19:06:25 $ACTION_MASSAGE_REMOVE:  

 {"id":51} 
 Player 2 19:06:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":54,"_text":"Stack Was Emptied "}} 
 Player 2 19:06:25 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:06:25 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 2 19:06:25 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 2 19:06:25 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 2 19:06:25 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 2 19:06:25 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 2 19:06:25 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 2 19:06:25 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 2 19:06:25 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 2 19:06:25 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 2 19:06:25 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 2 19:06:25 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 2 19:06:25 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 2 19:06:25 $ACTION_MASSAGE_REMOVE:  

 {"id":24} 
 Player 2 19:06:25 $ACTION_MASSAGE_REMOVE:  

 {"id":25} 
 Player 2 19:06:25 $ACTION_MASSAGE_REMOVE:  

 {"id":29} 
 Player 2 19:06:25 $ACTION_MASSAGE_REMOVE:  

 {"id":30} 
 Player 2 19:06:25 $ACTION_MASSAGE_REMOVE:  

 {"id":34} 
 Player 2 19:06:25 $ACTION_MASSAGE_REMOVE:  

 {"id":35} 
 Player 2 19:06:26 $ACTION_MASSAGE_REMOVE:  

 {"id":39} 
 Player 2 19:06:26 $ACTION_MASSAGE_REMOVE:  

 {"id":40} 
 Player 2 19:06:26 $ACTION_MASSAGE_REMOVE:  

 {"id":44} 
 Player 2 19:06:26 $ACTION_MASSAGE_REMOVE:  

 {"id":45} 
 Player 2 19:06:26 $ACTION_MASSAGE_REMOVE:  

 {"id":49} 
 Player 2 19:06:26 $ACTION_MASSAGE_REMOVE:  

 {"id":50} 
 Player 2 19:06:26 $ACTION_MASSAGE_REMOVE:  

 {"id":54} 
 Player 2 19:06:26 $ACTION_MASSAGE_REMOVE:  

 {"id":54} 
 Player 2 19:06:27 $ACTION_MASSAGE_REMOVE:  

 {"id":50} 
 Player 2 19:06:27 $NEXT_STACK_ID:  
 Player 2 19:06:27 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:06:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Clotty<Monster>"} 
 Player 2 19:06:28 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":7,"creatorCardId":285,"rollingPlayerCardId":285,"stackEffectType":2,"attackedMonsterCardId":230}} 
 Player 2 19:06:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Clotty<Monster>"} 
 Player 2 19:06:28 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":285,"rollingPlayerCardId":285,"stackEffectType":2,"attackedMonsterCardId":230}} 
 Player 2 19:06:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":55,"_text":"Add AttackRoll 7 "}} 
 Player 2 19:06:28 $ROLL_DICE:  

 {"playerId":2} 
 Player 2 19:06:30 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":5} 
 Player 2 19:06:30 $UPDATE_STACK_VIS:  

 {"stackId":7,"text":"player rolled 5 vs Clotty<Monster>"} 
 Player 2 19:06:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 5 vs Clotty<Monster>"} 
 Player 2 19:06:30 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:06:30 $ACTION_MASSAGE_REMOVE:  

 {"id":55} 
 Player 2 19:06:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 5 vs Clotty<Monster>"} 
 Player 2 19:06:30 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":7,"creatorCardId":285,"numberRolled":5,"rollingPlayerCardId":285,"stackEffectType":2,"attackedMonsterCardId":230}} 
 Player 2 19:06:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":56,"_text":"Response Adding AttackRoll 7"},"childOfId":55} 
 Player 2 19:06:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":57,"_text":"Wait For Response From Player 2 "},"childOfId":55} 
 Player 2 19:06:30 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:06:30 $ACTION_MASSAGE_REMOVE:  

 {"id":57} 
 Player 2 19:06:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":58,"_text":"Wait For Response From Player 1 "},"childOfId":55} 
 Player 2 19:06:30 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:06:30 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:06:30 $ACTION_MASSAGE_REMOVE:  

 {"id":58} 
 Player 2 19:06:30 $ACTION_MASSAGE_REMOVE:  

 {"id":56} 
 Player 2 19:06:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":59,"_text":"Resolve AttackRoll 7 "}} 
 Player 2 19:06:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":60,"_text":"Added 0 to original roll"}} 
 Player 2 19:06:31 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":3},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":285,"scopeIsPlayer":true,"index":1,"originStackId":7},"isAfterActivation":false,"index":1} 
 Player 2 19:06:31 $NEXT_STACK_ID:  
 Player 2 19:06:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 5 vs Clotty<Monster>"} 
 Player 2 19:06:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 5 vs Clotty<Monster> \n2:Activate Dead Bird effect ChainEffects<ChainEffects>"} 
 Player 2 19:06:31 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":8,"creatorCardId":291,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":161,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":161,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 19:06:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 5 vs Clotty<Monster> \n2:Activate Dead Bird effect ChainEffects<ChainEffects>"} 
 Player 2 19:06:31 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":8,"creatorCardId":291,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":161,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":161,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 19:06:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":61,"_text":"Add ActivatePassiveEffect 8 "}} 
 Player 2 19:06:31 $LOG_ERROR:  

 "no MetaIndex" 
//////Error From Player 2////
 [object Object]
////// 
 Player 2 19:06:31 $LOG_ERROR:  

 "no MetaIndex" 
//////Error From Player 2////
 [object Object]
////// 
 Player 2 19:06:31 $LOG_ERROR:  

 "no MetaIndex" 
//////Error From Player 2////
 [object Object]
////// 
 Player 2 19:06:31 $LOG_ERROR:  

 {"message":"\"Cannot read property 'getComponent' of undefined\"","stack":"\"TypeError: Cannot read property 'getComponent' of undefined\\n    at http://localhost:7456/preview-scripts/assets/Script/Managers/DataInterpreter.js:159:56\\n    at Array.map (<anonymous>)\\n    at Function.DataInterpreter.convertToServerData (http://localhost:7456/preview-scripts/assets/Script/Managers/DataInterpreter.js:152:75)\\n    at CardEffect.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/CardEffect.js:362:62)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.throw (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\\n    at rejected (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89794:36)\""} 
 Player 2 19:06:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 5 vs Clotty<Monster> \n2:Activate Dead Bird effect ChainEffects<ChainEffects>"} 
 Player 2 19:06:31 $ACTION_MASSAGE_REMOVE:  

 {"id":61} 
 Player 2 19:06:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 5 vs Clotty<Monster> \n2:Activate Dead Bird effect ChainEffects<ChainEffects>"} 
 Player 2 19:06:31 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":291,"effectCardPlayer":291},"entityId":8,"creatorCardId":291,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":161,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":161,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 19:06:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":62,"_text":"Response Adding ActivatePassiveEffect 8"},"childOfId":61} 
 Player 2 19:06:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":63,"_text":"Wait For Response From Player 1 "},"childOfId":61} 
 Player 2 19:06:32 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:06:32 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:06:32 $ACTION_MASSAGE_REMOVE:  

 {"id":63} 
 Player 2 19:06:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":64,"_text":"Wait For Response From Player 2 "},"childOfId":61} 
 Player 2 19:06:32 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:06:32 $ACTION_MASSAGE_REMOVE:  

 {"id":64} 
 Player 2 19:06:32 $ACTION_MASSAGE_REMOVE:  

 {"id":62} 
 Player 2 19:06:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":65,"_text":"Resolve ActivatePassiveEffect 8 "}} 
 Player 2 19:06:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 5 vs Clotty<Monster> \n2:Activate Dead Bird effect ChainEffects<ChainEffects>"} 
 Player 2 19:06:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 5 vs Clotty<Monster> \n2:Activate Dead Bird effect ChainEffects<ChainEffects>"} 
 Player 2 19:06:32 $DO_STACK_EFFECT:  

 {"originPlayerId":2,"playerId":1,"currentStack":[{"entityId":7,"creatorCardId":285,"numberRolled":5,"rollingPlayerCardId":285,"stackEffectType":2,"attackedMonsterCardId":230},{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":291,"effectCardPlayer":291},"entityId":8,"creatorCardId":291,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":161,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":161,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}]} 
 Player 2 19:06:33 $ACTION_MASSAGE_REMOVE:  

 {"id":60} 
 Player 2 19:07:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 5 vs Clotty<Monster> \n2:Activate Dead Bird effect ChainEffects<ChainEffects>"} 
 Player 2 19:07:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 5 vs Clotty<Monster> \n2:Activate Dead Bird effect ChainEffects<ChainEffects>"} 
 Player 2 19:07:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 5 vs Clotty<Monster> \n2:Activate Dead Bird "} 
 Player 2 19:07:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 5 vs Clotty<Monster> \n2:Activate Dead Bird "} 
 Player 2 19:07:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 5 vs Clotty<Monster> \n2:Activate Dead Bird "} 
 Player 2 19:07:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 5 vs Clotty<Monster> \n2:Activate Dead Bird "} 
 Player 2 19:07:02 $ACTION_MASSAGE_REMOVE:  

 {"id":65} 
 Player 2 19:07:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Clotty<Monster> \n2:Activate Dead Bird "} 
 Player 2 19:07:02 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":285,"numberRolled":5,"rollingPlayerCardId":285,"stackEffectType":2,"attackedMonsterCardId":230}} 
 Player 2 19:07:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Clotty<Monster> \n2:Activate Dead Bird "} 
 Player 2 19:07:02 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":285,"numberRolled":5,"rollingPlayerCardId":285,"stackEffectType":2,"attackedMonsterCardId":230}} 
 Player 2 19:07:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Clotty<Monster> \n2:Activate Dead Bird "} 
 Player 2 19:07:02 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":8,"creatorCardId":291,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":161,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 19:07:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Clotty<Monster> \n2:Activate Dead Bird "} 
 Player 2 19:07:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Clotty<Monster> \n2:Activate Dead Bird "} 
 Player 2 19:07:03 $REPLACE_STACK:  

 {"currentStack":[{"entityId":7,"creatorCardId":285,"numberRolled":5,"rollingPlayerCardId":285,"stackEffectType":2,"attackedMonsterCardId":230},{"effectCollectedData":null,"entityId":8,"creatorCardId":291,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":161,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}]} 
 Player 2 19:07:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Clotty<Monster>"} 
 Player 2 19:07:03 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":8,"creatorCardId":291,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":161,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 19:07:03 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":66,"_text":"Remove After Resolve ActivatePassiveEffect 8  "}} 
 Player 2 19:07:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Clotty<Monster>"} 
 Player 2 19:07:03 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":8,"creatorCardId":291,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":161,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 19:07:03 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":67,"_text":"Response Remove After Resolve ActivatePassiveEffect 8"},"childOfId":66} 
 Player 2 19:07:03 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":68,"_text":"Wait For Response From Player 2 "},"childOfId":66} 
 Player 2 19:07:03 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:07:03 $ACTION_MASSAGE_REMOVE:  

 {"id":68} 
 Player 2 19:07:03 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":69,"_text":"Wait For Response From Player 1 "},"childOfId":66} 
 Player 2 19:07:03 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:07:03 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:07:03 $ACTION_MASSAGE_REMOVE:  

 {"id":69} 
 Player 2 19:07:03 $ACTION_MASSAGE_REMOVE:  

 {"id":67} 
 Player 2 19:07:03 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":70,"_text":"Resolve AttackRoll 7 "}} 
 Player 2 19:07:03 $NEXT_STACK_ID:  
 Player 2 19:07:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Clotty<Monster>"} 
 Player 2 19:07:03 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:07:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Clotty \n2:Player 2 is rolling against Clotty<Monster>"} 
 Player 2 19:07:04 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":9,"creatorCardId":285,"entityToDoDamageCardId":285,"entityToTakeDamageCardId":230,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 19:07:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Clotty \n2:Player 2 is rolling against Clotty<Monster>"} 
 Player 2 19:07:04 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":285,"numberRolled":5,"rollingPlayerCardId":285,"stackEffectType":2,"attackedMonsterCardId":230}} 
 Player 2 19:07:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Clotty \n2:Player 2 is rolling against Clotty<Monster>"} 
 Player 2 19:07:04 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":9,"creatorCardId":285,"entityToDoDamageCardId":285,"entityToTakeDamageCardId":230,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 19:07:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Clotty \n2:Player 2 is rolling against Clotty<Monster>"} 
 Player 2 19:07:04 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":285,"numberRolled":5,"rollingPlayerCardId":285,"stackEffectType":2,"attackedMonsterCardId":230}} 
 Player 2 19:07:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Clotty \n2:Player 2 is rolling against Clotty<Monster>"} 
 Player 2 19:07:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Clotty \n2:Player 2 is rolling against Clotty<Monster>"} 
 Player 2 19:07:04 $REPLACE_STACK:  

 {"currentStack":[{"entityId":9,"creatorCardId":285,"entityToDoDamageCardId":285,"entityToTakeDamageCardId":230,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":7,"creatorCardId":285,"numberRolled":5,"rollingPlayerCardId":285,"stackEffectType":2,"attackedMonsterCardId":230}]} 
 Player 2 19:07:04 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":{"type":2,"number":{"type":2,"number":3}}},{"type":2,"number":2},{"type":2,"number":{"type":2,"number":{"type":2,"number":3}}}],"result":null,"preventMethod":false,"methodScopeId":285,"scopeIsPlayer":true,"index":1,"originStackId":7},"isAfterActivation":true,"index":1} 
 Player 2 19:07:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Clotty \n2:Player 2 is rolling against Clotty<Monster>"} 
 Player 2 19:07:04 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":7,"creatorCardId":285,"numberRolled":5,"rollingPlayerCardId":285,"stackEffectType":2,"attackedMonsterCardId":230}} 
 Player 2 19:07:04 $ACTION_MASSAGE_REMOVE:  

 {"id":59} 
 Player 2 19:07:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Clotty"} 
 Player 2 19:07:04 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":285,"numberRolled":5,"rollingPlayerCardId":285,"stackEffectType":2,"attackedMonsterCardId":230}} 
 Player 2 19:07:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":71,"_text":"Remove After Resolve AttackRoll 7  "}} 
 Player 2 19:07:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Clotty"} 
 Player 2 19:07:04 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":7,"creatorCardId":285,"numberRolled":5,"rollingPlayerCardId":285,"stackEffectType":2,"attackedMonsterCardId":230}} 
 Player 2 19:07:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":72,"_text":"Response Remove After Resolve AttackRoll 7"},"childOfId":71} 
 Player 2 19:07:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":73,"_text":"Wait For Response From Player 2 "},"childOfId":71} 
 Player 2 19:07:04 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:07:04 $ACTION_MASSAGE_REMOVE:  

 {"id":73} 
 Player 2 19:07:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":74,"_text":"Wait For Response From Player 1 "},"childOfId":71} 
 Player 2 19:07:04 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:07:04 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:07:05 $ACTION_MASSAGE_REMOVE:  

 {"id":74} 
 Player 2 19:07:05 $ACTION_MASSAGE_REMOVE:  

 {"id":72} 
 Player 2 19:07:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":75,"_text":"Resolve CombatDamage 9 "}} 
 Player 2 19:07:05 $UPDATE_STACK_VIS:  

 {"stackId":9,"text":"Isaac will deal 1 combat damage to Clotty"} 
 Player 2 19:07:05 $MONSTER_GET_DAMAGED:  

 {"cardId":230,"hpLeft":1,"damageDealerId":285} 
 Player 2 19:07:05 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":285}],"result":null,"preventMethod":false,"methodScopeId":230,"scopeIsPlayer":false,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 
 Player 2 19:07:05 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":{"type":2,"number":{"type":2,"number":3}}},{"type":0,"number":285},{"type":0,"number":230}],"result":null,"preventMethod":false,"methodScopeId":285,"scopeIsPlayer":true,"index":6,"originStackId":9},"isAfterActivation":true,"index":6} 
 Player 2 19:07:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Clotty"} 
 Player 2 19:07:05 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":9,"creatorCardId":285,"entityToDoDamageCardId":285,"entityToTakeDamageCardId":230,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 19:07:05 $ACTION_MASSAGE_REMOVE:  

 {"id":75} 
 Player 2 19:07:05 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:07:05 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":9,"creatorCardId":285,"entityToDoDamageCardId":285,"entityToTakeDamageCardId":230,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 19:07:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":76,"_text":"Remove After Resolve CombatDamage 9  "}} 
 Player 2 19:07:05 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:07:05 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":9,"creatorCardId":285,"entityToDoDamageCardId":285,"entityToTakeDamageCardId":230,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 19:07:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":77,"_text":"Response Remove After Resolve CombatDamage 9"},"childOfId":76} 
 Player 2 19:07:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":78,"_text":"Wait For Response From Player 1 "},"childOfId":76} 
 Player 2 19:07:05 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:07:05 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:07:05 $ACTION_MASSAGE_REMOVE:  

 {"id":66} 
 Player 2 19:07:06 $ACTION_MASSAGE_REMOVE:  

 {"id":78} 
 Player 2 19:07:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":79,"_text":"Wait For Response From Player 2 "},"childOfId":76} 
 Player 2 19:07:06 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:07:06 $ACTION_MASSAGE_REMOVE:  

 {"id":79} 
 Player 2 19:07:06 $ACTION_MASSAGE_REMOVE:  

 {"id":77} 
 Player 2 19:07:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":80,"_text":"Stack Was Emptied "}} 
 Player 2 19:07:06 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:07:06 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 2 19:07:06 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 2 19:07:06 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 2 19:07:06 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 2 19:07:06 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 2 19:07:06 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 2 19:07:06 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 2 19:07:06 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 2 19:07:06 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 2 19:07:06 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 2 19:07:06 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 2 19:07:06 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 2 19:07:06 $ACTION_MASSAGE_REMOVE:  

 {"id":24} 
 Player 2 19:07:06 $ACTION_MASSAGE_REMOVE:  

 {"id":25} 
 Player 2 19:07:06 $ACTION_MASSAGE_REMOVE:  

 {"id":29} 
 Player 2 19:07:06 $ACTION_MASSAGE_REMOVE:  

 {"id":30} 
 Player 2 19:07:06 $ACTION_MASSAGE_REMOVE:  

 {"id":34} 
 Player 2 19:07:06 $ACTION_MASSAGE_REMOVE:  

 {"id":35} 
 Player 2 19:07:06 $ACTION_MASSAGE_REMOVE:  

 {"id":39} 
 Player 2 19:07:06 $ACTION_MASSAGE_REMOVE:  

 {"id":40} 
 Player 2 19:07:06 $ACTION_MASSAGE_REMOVE:  

 {"id":44} 
 Player 2 19:07:06 $ACTION_MASSAGE_REMOVE:  

 {"id":45} 
 Player 2 19:07:06 $ACTION_MASSAGE_REMOVE:  

 {"id":49} 
 Player 2 19:07:06 $ACTION_MASSAGE_REMOVE:  

 {"id":50} 
 Player 2 19:07:06 $ACTION_MASSAGE_REMOVE:  

 {"id":54} 
 Player 2 19:07:07 $ACTION_MASSAGE_REMOVE:  

 {"id":55} 
 Player 2 19:07:07 $ACTION_MASSAGE_REMOVE:  

 {"id":59} 
 Player 2 19:07:07 $ACTION_MASSAGE_REMOVE:  

 {"id":60} 
 Player 2 19:07:07 $ACTION_MASSAGE_REMOVE:  

 {"id":61} 
 Player 2 19:07:07 $ACTION_MASSAGE_REMOVE:  

 {"id":65} 
 Player 2 19:07:07 $ACTION_MASSAGE_REMOVE:  

 {"id":66} 
 Player 2 19:07:07 $ACTION_MASSAGE_REMOVE:  

 {"id":70} 
 Player 2 19:07:07 $ACTION_MASSAGE_REMOVE:  

 {"id":71} 
 Player 2 19:07:07 $ACTION_MASSAGE_REMOVE:  

 {"id":75} 
 Player 2 19:07:07 $ACTION_MASSAGE_REMOVE:  

 {"id":76} 
 Player 2 19:07:07 $ACTION_MASSAGE_REMOVE:  

 {"id":80} 
 Player 2 19:07:07 $ACTION_MASSAGE_REMOVE:  

 {"id":71} 
 Player 2 19:07:07 $ACTION_MASSAGE_REMOVE:  

 {"id":80} 
 Player 2 19:07:08 $ACTION_MASSAGE_REMOVE:  

 {"id":76} 
 Player 2 19:13:52 $MATCH: 