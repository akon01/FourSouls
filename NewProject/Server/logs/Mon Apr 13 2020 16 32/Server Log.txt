Start Log 

 Player 1 16:32:34 $MATCH:  

 Player 1 16:32:35 $START_GAME:  

 Player 2 16:32:35 $MOVE_TO_TABLE:  

 Player 1 16:32:35 $MOVE_TO_TABLE:  

 Player 2 16:32:45 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 1 16:32:45 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 16:32:45 $SET_CHAR:  
{"originPlayerId":2,"playerId":1,"charCardId":319,"itemCardId":320} 

 Player 1 16:32:46 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":319,"itemCardId":320} 

 Player 1 16:32:46 $SET_CHAR_END:  
{"playerId":2} 

 Player 2 16:32:46 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":321,"itemCardId":322} 

 Player 2 16:32:46 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[84,82,139,26,45,35,120,36,131,48,19,28,80,72,125,117,14,66,109,104,49,41,110,7,6,61,16,50,39,74,79,85,34,13,46,122,73,63,95,30,132,53,136,112,93,22,127,128,126,27,114,17,134,106,81,137,83,77,38,70,129,88,31,86,111,123,135,121,58,32,12,33,69,94,65,107,102,97,68,87,119,60,18,103,96,76,59,118,62,89,130,99,64,8,47,67,9,100,91,54,52,56,113,4,124,105,101,24,44,92,116,51,23,43,10,25,40,115,108,37,5,55,21,11,78,133,71,42,57,90,20,75,29,15,138,98]} 

 Player 2 16:32:46 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[232,295,250,242,271,255,244,307,256,226,300,286,261,289,270,260,230,298,257,263,264,224,249,293,291,231,238,279,301,252,299,269,246,229,288,241,235,302,254,227,248,275,266,236,272,281,276,234,258,253,239,273,304,265,251,305,262,240,297,225,285,308,237,223,228,278,287,294,243,296,267,274,233,280,268,277,282,222,259,245,292,303,247,283,284,290,306]} 

 Player 2 16:32:46 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[182,214,209,183,208,174,191,206,150,210,175,198,205,181,185,165,155,145,152,141,219,176,159,220,156,196,148,142,169,163,201,197,160,178,161,188,162,193,154,194,166,216,195,168,190,200,211,173,146,151,215,199,187,170,203,164,167,158,218,172,157,202,213,192,143,179,204,180,153,212,217,189,177,144,149,184,186,147,207,171]} 

 Player 2 16:32:46 $DRAW_CARD:  
{"deckType":5} 

 Player 2 16:32:46 $FLIP_CARD:  
{"cardId":171} 

 Player 2 16:32:46 $ADD_STORE_CARD:  
{"cardId":171} 

 Player 2 16:32:46 $DRAW_CARD:  
{"deckType":5} 

 Player 2 16:32:46 $FLIP_CARD:  
{"cardId":207} 

 Player 2 16:32:46 $ADD_STORE_CARD:  
{"cardId":207} 

 Player 2 16:32:46 $DRAW_CARD:  
{"deckType":2} 

 Player 2 16:32:46 $FLIP_CARD:  
{"cardId":306} 

 Player 2 16:32:46 $REGISTER_PASSIVE_ITEM:  
{"cardId":306} 

 Player 2 16:32:46 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":306} 

 Player 2 16:32:46 $NEW_MONSTER_ON_PLACE:  
{"cardId":306,"monsterPlaceId":1} 

 Player 2 16:32:46 $DRAW_CARD:  
{"deckType":2} 

 Player 2 16:32:46 $FLIP_CARD:  
{"cardId":290} 

 Player 2 16:32:46 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":290} 

 Player 2 16:32:46 $NEW_MONSTER_ON_PLACE:  
{"cardId":290,"monsterPlaceId":2} 

 Player 2 16:32:46 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 16:32:46 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":319,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 16:32:46 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:32:46 $MOVE_CARD:  
{"moveIndex":1,"cardId":98,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:32:47 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":98,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:32:47 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":98} 

 Player 2 16:32:47 $FLIP_CARD:  
{"cardId":98} 

 Player 2 16:32:47 $FLIP_CARD:  
{"cardId":98} 

 Player 2 16:32:47 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":98} 

 Player 2 16:32:47 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:32:47 $MOVE_CARD:  
{"moveIndex":2,"cardId":138,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:32:47 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":138,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:32:47 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":138} 

 Player 2 16:32:47 $FLIP_CARD:  
{"cardId":138} 

 Player 2 16:32:47 $FLIP_CARD:  
{"cardId":138} 

 Player 2 16:32:47 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":138} 

 Player 2 16:32:47 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:32:47 $MOVE_CARD:  
{"moveIndex":3,"cardId":15,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:32:48 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":15,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:32:48 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":15} 

 Player 2 16:32:48 $FLIP_CARD:  
{"cardId":15} 

 Player 2 16:32:48 $FLIP_CARD:  
{"cardId":15} 

 Player 2 16:32:48 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":15} 

 Player 2 16:32:48 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 16:32:48 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 16:32:48 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:32:48 $MOVE_CARD:  
{"moveIndex":4,"cardId":29,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:32:48 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":29,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:32:48 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":29} 

 Player 2 16:32:48 $FLIP_CARD:  
{"cardId":29} 

 Player 2 16:32:48 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":29} 

 Player 2 16:32:48 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:32:48 $MOVE_CARD:  
{"moveIndex":5,"cardId":75,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:32:49 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":75,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:32:49 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":75} 

 Player 2 16:32:49 $FLIP_CARD:  
{"cardId":75} 

 Player 2 16:32:49 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":75} 

 Player 2 16:32:49 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:32:49 $MOVE_CARD:  
{"moveIndex":6,"cardId":20,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:32:49 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":20,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:32:49 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":20} 

 Player 2 16:32:49 $FLIP_CARD:  
{"cardId":20} 

 Player 2 16:32:49 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":20} 

 Player 2 16:32:49 $GAME_HAS_STARTED:  

 Player 2 16:32:49 $SET_TURN:  
{"playerId":2} 

 Player 2 16:32:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:32:49 $NEXT_STACK_ID:  

 Player 2 16:32:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:32:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 16:32:50 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":321,"turnPlayerCardId":321,"stackEffectType":13}} 

 Player 2 16:32:50 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":321,"turnPlayerCardId":321,"stackEffectType":13}} 

 Player 2 16:32:50 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 16:32:50 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 1 16:32:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:32:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 16:32:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 2 16:32:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:32:52 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":321,"turnPlayerCardId":321,"stackEffectType":13}} 

 Player 2 16:32:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 2 16:32:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 2 16:32:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:32:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 2 16:32:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:32:53 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:32:53 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[319,320]} 

 Player 1 16:32:53 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:32:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 2 16:32:53 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":321,"turnPlayerCardId":321,"stackEffectType":13}} 

 Player 2 16:32:53 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:32:53 $MOVE_CARD:  
{"moveIndex":7,"cardId":90,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:32:53 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":90,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:32:53 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":90} 

 Player 2 16:32:53 $FLIP_CARD:  
{"cardId":90} 

 Player 2 16:32:53 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":90} 

 Player 2 16:32:53 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":321,"turnPlayerCardId":321,"stackEffectType":13}} 

 Player 2 16:32:53 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":1} 

 Player 2 16:32:53 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 16:32:53 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 2 16:32:56 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":1} 

 Player 2 16:32:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 2 16:32:56 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:32:56 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":321,"turnPlayerCardId":321,"stackEffectType":13}} 

 Player 2 16:32:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 2 16:32:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 2 16:32:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:32:56 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:32:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 16:32:56 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[319,320]} 

 Player 1 16:32:56 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:32:56 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 2 16:32:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 2 16:32:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:32:56 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 2 16:32:56 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 2 16:32:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 2 16:32:56 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:32:56 $CLEAR_SE_VIS:  

 Player 2 16:32:56 $UPDATE_ACTIONS:  

 Player 2 16:33:05 $NEXT_STACK_ID:  

 Player 2 16:33:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on War"} 

 Player 2 16:33:05 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":321,"attackingPlayerCardId":321,"idOfCardBeingAttacked":306,"stackEffectType":4}} 

 Player 2 16:33:05 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":321,"attackingPlayerCardId":321,"idOfCardBeingAttacked":306,"stackEffectType":4}} 

 Player 2 16:33:05 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 16:33:05 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 1 16:33:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:33:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on War"} 

 Player 2 16:33:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add DeclareAttack 2 "}} 

 Player 2 16:33:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:33:08 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":321,"attackingPlayerCardId":321,"idOfCardBeingAttacked":306,"stackEffectType":4}} 

 Player 2 16:33:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding DeclareAttack 2"},"childOfId":10} 

 Player 2 16:33:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 2 16:33:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:33:08 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 2 16:33:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 2 16:33:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:33:08 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:33:08 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[319,320]} 

 Player 1 16:33:08 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:33:08 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 2 16:33:08 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 2 16:33:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve DeclareAttack 2 "}} 

 Player 2 16:33:08 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":321,"attackingPlayerCardId":321,"idOfCardBeingAttacked":306,"stackEffectType":4}} 

 Player 2 16:33:08 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":306,"particleType":5} 

 Player 2 16:33:08 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":3,"originStackId":2},"isAfterActivation":true,"index":3} 

 Player 2 16:33:08 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":321,"attackingPlayerCardId":321,"idOfCardBeingAttacked":306,"stackEffectType":4}} 

 Player 2 16:33:08 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":2} 

 Player 2 16:33:08 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 16:33:08 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 2 16:33:11 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":2} 

 Player 2 16:33:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve DeclareAttack 2  "}} 

 Player 2 16:33:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:33:11 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":321,"attackingPlayerCardId":321,"idOfCardBeingAttacked":306,"stackEffectType":4}} 

 Player 2 16:33:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve DeclareAttack 2"},"childOfId":15} 

 Player 2 16:33:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 2 16:33:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:33:11 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:33:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on War"} 

 Player 1 16:33:11 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[319,320]} 

 Player 1 16:33:11 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:33:11 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 16:33:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 2 16:33:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:33:11 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 2 16:33:11 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 2 16:33:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 2 16:33:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:33:11 $CLEAR_SE_VIS:  

 Player 2 16:33:12 $NEXT_STACK_ID:  

 Player 2 16:33:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against War<Monster>"} 

 Player 2 16:33:12 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":321,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":306}} 

 Player 2 16:33:12 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":321,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":306}} 

 Player 2 16:33:12 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 16:33:12 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 1 16:33:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:33:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against War<Monster>"} 

 Player 2 16:33:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add AttackRoll 3 "}} 

 Player 2 16:33:15 $ROLL_DICE:  
{"playerId":2} 

 Player 2 16:33:17 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":1} 

 Player 2 16:33:17 $UPDATE_STACK_VIS:  
{"stackId":3,"text":"player rolled 1 vs War<Monster>"} 

 Player 2 16:33:17 $SHOW_DICE_ROLL:  
{"stackId":3} 

 Player 2 16:33:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs War<Monster>"} 

 Player 2 16:33:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:33:20 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":321,"numberRolled":1,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":306}} 

 Player 2 16:33:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding AttackRoll 3"},"childOfId":20} 

 Player 2 16:33:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 2 16:33:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:33:20 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 2 16:33:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 2 16:33:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:33:20 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:33:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against War<Monster>"} 

 Player 1 16:33:20 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[319,320]} 

 Player 1 16:33:20 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:33:20 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 2 16:33:21 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 2 16:33:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve AttackRoll 3 "}} 

 Player 2 16:33:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs War<Monster>"} 

 Player 2 16:33:21 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":321,"numberRolled":1,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":306}} 

 Player 2 16:33:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Added 0 to original roll"}} 

 Player 2 16:33:21 $NEXT_STACK_ID:  

 Player 2 16:33:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:33:21 $CLEAR_SE_VIS:  

 Player 2 16:33:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to Maggy \n2:Player 2 rolled 1 vs War<Monster>"} 

 Player 2 16:33:21 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":321,"entityToDoDamageCardId":306,"entityToTakeDamageCardId":321,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1}} 

 Player 2 16:33:21 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":321,"numberRolled":1,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":306}} 

 Player 2 16:33:21 $REPLACE_STACK:  
{"currentStack":[{"entityId":4,"creatorCardId":321,"entityToDoDamageCardId":306,"entityToTakeDamageCardId":321,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1},{"entityId":3,"creatorCardId":321,"numberRolled":1,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":306}]} 

 Player 2 16:33:21 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 16:33:21 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 1 16:33:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against War<Monster>"} 

 Player 1 16:33:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against War<Monster>"} 

 Player 2 16:33:24 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":4,"originStackId":3},"isAfterActivation":true,"index":4} 

 Player 2 16:33:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to Maggy \n2:Player 2 rolled 1 vs War<Monster>"} 

 Player 2 16:33:24 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":321,"numberRolled":1,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":306}} 

 Player 2 16:33:24 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":3} 

 Player 2 16:33:24 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 16:33:24 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 1 16:33:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to Maggy \n2:Player 2 is rolling against War<Monster>"} 

 Player 2 16:33:27 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":3} 

 Player 2 16:33:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Remove After Resolve AttackRoll 3  "}} 

 Player 2 16:33:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to Maggy"} 

 Player 2 16:33:27 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":321,"numberRolled":1,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":306}} 

 Player 2 16:33:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Response Remove After Resolve AttackRoll 3"},"childOfId":26} 

 Player 2 16:33:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":26} 

 Player 2 16:33:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:33:27 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 2 16:33:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Wait For Response From Player 1 "},"childOfId":26} 

 Player 2 16:33:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:33:27 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:33:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to Maggy \n2:Player 2 is rolling against War<Monster>"} 

 Player 1 16:33:27 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[319,320]} 

 Player 1 16:33:27 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:33:27 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 16:33:27 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 2 16:33:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Resolve CombatDamage 4 "}} 

 Player 2 16:33:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to Maggy"} 

 Player 2 16:33:27 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":321,"entityToDoDamageCardId":306,"entityToTakeDamageCardId":321,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1}} 

 Player 2 16:33:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War 1 combat damage to Maggy"} 

 Player 2 16:33:27 $UPDATE_STACK_VIS:  
{"stackId":4,"text":"War will deal 1 combat damage to Maggy"} 

 Player 2 16:33:27 $PLAYER_GET_HIT:  
{"playerId":2,"damage":1,"damageDealerId":306} 

 Player 2 16:33:27 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":306}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 2 16:33:27 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_TAKEN","args":[{"type":2,"number":1},{"type":2,"number":1},{"type":0,"number":306}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":6,"originStackId":4},"isAfterActivation":true,"index":6} 

 Player 2 16:33:27 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":321,"entityToDoDamageCardId":306,"entityToTakeDamageCardId":321,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1}} 

 Player 2 16:33:27 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":4} 

 Player 2 16:33:27 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 16:33:27 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 1 16:33:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to Maggy"} 

 Player 2 16:33:30 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":4} 

 Player 2 16:33:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Remove After Resolve CombatDamage 4  "}} 

 Player 2 16:33:30 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:33:30 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":321,"entityToDoDamageCardId":306,"entityToTakeDamageCardId":321,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1}} 

 Player 2 16:33:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Response Remove After Resolve CombatDamage 4"},"childOfId":31} 

 Player 2 16:33:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":31} 

 Player 2 16:33:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:33:30 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:33:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to Maggy"} 

 Player 1 16:33:30 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[319,320]} 

 Player 1 16:33:30 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:33:30 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 2 16:33:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Wait For Response From Player 2 "},"childOfId":31} 

 Player 2 16:33:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:33:30 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 16:33:30 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 2 16:33:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Stack Was Emptied "}} 

 Player 2 16:33:30 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:33:30 $CLEAR_SE_VIS:  

 Player 2 16:33:38 $NEXT_STACK_ID:  

 Player 2 16:33:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against War<Monster>"} 

 Player 2 16:33:38 $ADD_TO_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":321,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":306}} 

 Player 2 16:33:38 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":321,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":306}} 

 Player 2 16:33:38 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 16:33:38 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 1 16:33:38 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:33:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against War<Monster>"} 

 Player 2 16:33:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Add AttackRoll 5 "}} 

 Player 2 16:33:41 $ROLL_DICE:  
{"playerId":2} 

 Player 2 16:33:43 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":1} 

 Player 2 16:33:43 $UPDATE_STACK_VIS:  
{"stackId":5,"text":"player rolled 1 vs War<Monster>"} 

 Player 2 16:33:43 $SHOW_DICE_ROLL:  
{"stackId":5} 

 Player 2 16:33:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs War<Monster>"} 

 Player 2 16:33:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:33:46 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":321,"numberRolled":1,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":306}} 

 Player 2 16:33:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Response Adding AttackRoll 5"},"childOfId":36} 

 Player 2 16:33:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 2 "},"childOfId":36} 

 Player 2 16:33:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:33:46 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 2 16:33:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Wait For Response From Player 1 "},"childOfId":36} 

 Player 2 16:33:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:33:46 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:33:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against War<Monster>"} 

 Player 1 16:33:46 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[319,320]} 

 Player 1 16:33:46 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:33:46 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 16:33:46 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 2 16:33:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Resolve AttackRoll 5 "}} 

 Player 2 16:33:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs War<Monster>"} 

 Player 2 16:33:46 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":321,"numberRolled":1,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":306}} 

 Player 2 16:33:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Added 0 to original roll"}} 

 Player 2 16:33:46 $NEXT_STACK_ID:  

 Player 2 16:33:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:33:47 $CLEAR_SE_VIS:  

 Player 2 16:33:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to Maggy \n2:Player 2 rolled 1 vs War<Monster>"} 

 Player 2 16:33:47 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":321,"entityToDoDamageCardId":306,"entityToTakeDamageCardId":321,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1}} 

 Player 2 16:33:47 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":321,"numberRolled":1,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":306}} 

 Player 2 16:33:47 $REPLACE_STACK:  
{"currentStack":[{"entityId":6,"creatorCardId":321,"entityToDoDamageCardId":306,"entityToTakeDamageCardId":321,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1},{"entityId":5,"creatorCardId":321,"numberRolled":1,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":306}]} 

 Player 2 16:33:47 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 16:33:47 $SHOW_STACK_EFFECT:  
{"effectId":6} 

 Player 1 16:33:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against War<Monster>"} 

 Player 1 16:33:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against War<Monster>"} 

 Player 2 16:33:49 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":1},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":7,"originStackId":5},"isAfterActivation":true,"index":7} 

 Player 2 16:33:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to Maggy \n2:Player 2 rolled 1 vs War<Monster>"} 

 Player 2 16:33:49 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":321,"numberRolled":1,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":306}} 

 Player 2 16:33:49 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":5} 

 Player 2 16:33:49 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 16:33:49 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 1 16:33:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to Maggy \n2:Player 2 is rolling against War<Monster>"} 

 Player 2 16:33:52 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":5} 

 Player 2 16:33:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Remove After Resolve AttackRoll 5  "}} 

 Player 2 16:33:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to Maggy"} 

 Player 2 16:33:52 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":321,"numberRolled":1,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":306}} 

 Player 2 16:33:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Response Remove After Resolve AttackRoll 5"},"childOfId":42} 

 Player 2 16:33:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Wait For Response From Player 2 "},"childOfId":42} 

 Player 2 16:33:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:33:53 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 16:33:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Wait For Response From Player 1 "},"childOfId":42} 

 Player 2 16:33:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:33:53 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:33:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to Maggy \n2:Player 2 is rolling against War<Monster>"} 

 Player 1 16:33:53 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[319,320]} 

 Player 1 16:33:53 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:33:53 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 2 16:33:53 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 2 16:33:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Resolve CombatDamage 6 "}} 

 Player 2 16:33:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to Maggy"} 

 Player 2 16:33:53 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":321,"entityToDoDamageCardId":306,"entityToTakeDamageCardId":321,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1}} 

 Player 2 16:33:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War 1 combat damage to Maggy"} 

 Player 2 16:33:53 $UPDATE_STACK_VIS:  
{"stackId":6,"text":"War will deal 1 combat damage to Maggy"} 

 Player 2 16:33:53 $PLAYER_GET_HIT:  
{"playerId":2,"damage":1,"damageDealerId":306} 

 Player 2 16:33:53 $NEXT_STACK_ID:  

 Player 2 16:33:53 $CLEAR_SE_VIS:  

 Player 2 16:33:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War 1 combat damage to Maggy \n2:Player 2 is about to die"} 

 Player 2 16:33:53 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":321,"entityToDoDamageCardId":306,"entityToTakeDamageCardId":321,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1}} 

 Player 2 16:33:53 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":321,"playerToDieCardId":321,"stackEffectType":15,"killerId":306}} 

 Player 2 16:33:53 $REPLACE_STACK:  
{"currentStack":[{"entityId":6,"creatorCardId":321,"entityToDoDamageCardId":306,"entityToTakeDamageCardId":321,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1},{"entityId":7,"creatorCardId":321,"playerToDieCardId":321,"stackEffectType":15,"killerId":306}]} 

 Player 2 16:33:53 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":321,"playerToDieCardId":321,"stackEffectType":15,"killerId":306}} 

 Player 2 16:33:53 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 16:33:53 $SHOW_STACK_EFFECT:  
{"effectId":7} 

 Player 1 16:33:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to Maggy"} 

 Player 1 16:33:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to Maggy \n2:Player 2 is about to die"} 

 Player 2 16:33:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:33:56 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":306}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":8,"originStackId":-1},"isAfterActivation":true,"index":8} 

 Player 2 16:33:56 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_TAKEN","args":[{"type":2,"number":1},{"type":2,"number":1},{"type":0,"number":306}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":9,"originStackId":6},"isAfterActivation":true,"index":9} 

 Player 2 16:33:56 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":6} 

 Player 2 16:33:56 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 16:33:56 $SHOW_STACK_EFFECT:  
{"effectId":6} 

 Player 2 16:33:59 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":6} 

 Player 2 16:33:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Remove After Resolve CombatDamage 6  "}} 

 Player 2 16:33:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 16:33:59 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":321,"entityToDoDamageCardId":306,"entityToTakeDamageCardId":321,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1}} 

 Player 2 16:33:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Response Remove After Resolve CombatDamage 6"},"childOfId":47} 

 Player 2 16:33:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Wait For Response From Player 2 "},"childOfId":47} 

 Player 2 16:33:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:33:59 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 2 16:33:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Wait For Response From Player 1 "},"childOfId":47} 

 Player 2 16:33:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:33:59 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:33:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to Maggy \n2:Player 2 is about to die"} 

 Player 1 16:33:59 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[319,320]} 

 Player 1 16:33:59 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:33:59 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 2 16:33:59 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 2 16:33:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Resolve PlayerDeath 7 "}} 

 Player 2 16:33:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 16:33:59 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":321,"playerToDieCardId":321,"stackEffectType":15,"killerId":306}} 

 Player 2 16:33:59 $DISABLE_PARTICLE_EFFECT:  
{"cardId":306,"particleType":5} 

 Player 2 16:33:59 $CANCEL_ATTACK:  

 Player 2 16:33:59 $NEXT_STACK_ID:  

 Player 2 16:33:59 $CLEAR_SE_VIS:  

 Player 2 16:33:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 

 Player 2 16:33:59 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":321,"playerToDieCardId":321,"stackEffectType":15,"killerId":306}} 

 Player 2 16:33:59 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":321,"playerToPayCardId":321,"stackEffectType":16}} 

 Player 2 16:33:59 $REPLACE_STACK:  
{"currentStack":[{"entityId":7,"creatorCardId":321,"playerToDieCardId":321,"stackEffectType":15,"killerId":306},{"entityId":8,"creatorCardId":321,"playerToPayCardId":321,"stackEffectType":16}]} 

 Player 2 16:33:59 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":321,"playerToPayCardId":321,"stackEffectType":16}} 

 Player 2 16:33:59 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 16:33:59 $SHOW_STACK_EFFECT:  
{"effectId":8} 

 Player 1 16:33:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to Maggy"} 

 Player 1 16:33:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to Maggy"} 

 Player 1 16:33:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 

 Player 2 16:34:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:34:02 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":321,"playerToDieCardId":321,"stackEffectType":15,"killerId":306}} 

 Player 2 16:34:02 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":7} 

 Player 2 16:34:02 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 16:34:02 $SHOW_STACK_EFFECT:  
{"effectId":7} 

 Player 2 16:34:05 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":7} 

 Player 2 16:34:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Remove After Resolve PlayerDeath 7  "}} 

 Player 2 16:34:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to pay death penalties"} 

 Player 2 16:34:05 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":321,"playerToDieCardId":321,"stackEffectType":15,"killerId":306}} 

 Player 2 16:34:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Response Remove After Resolve PlayerDeath 7"},"childOfId":52} 

 Player 2 16:34:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Wait For Response From Player 2 "},"childOfId":52} 

 Player 2 16:34:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:34:05 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 2 16:34:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Wait For Response From Player 1 "},"childOfId":52} 

 Player 2 16:34:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:34:05 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:34:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 

 Player 1 16:34:05 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[319,320]} 

 Player 1 16:34:05 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:34:05 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 2 16:34:05 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 2 16:34:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":56,"_text":"Resolve PlayerDeathPenalties 8 "}} 

 Player 2 16:34:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to pay death penalties"} 

 Player 2 16:34:06 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":321,"playerToPayCardId":321,"stackEffectType":16}} 

 Player 2 16:34:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":57,"_text":"Player 2 pays Penalties"}} 

 Player 2 16:34:06 $SET_MONEY:  
{"playerId":2,"numOfCoins":2} 

 Player 2 16:34:06 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-1}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":10,"originStackId":-1},"isAfterActivation":true,"index":10} 

 Player 1 16:34:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 16:34:15 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":20} 

 Player 2 16:34:15 $MOVE_CARD:  
{"moveIndex":8,"cardId":20,"placeID":328,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 16:34:15 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":20,"flipIfFlipped":true,"playerId":2} 

 Player 2 16:34:15 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":20} 

 Player 2 16:34:15 $USE_ITEM:  
{"cardId":321} 

 Player 2 16:34:15 $USE_ITEM:  
{"cardId":322} 

 Player 2 16:34:15 $PLAYER_DIED:  
{"playerId":2} 

 Player 2 16:34:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to pay death penalties"} 

 Player 2 16:34:16 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":321,"playerToPayCardId":321,"stackEffectType":16}} 

 Player 2 16:34:16 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":8} 

 Player 2 16:34:16 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 16:34:16 $SHOW_STACK_EFFECT:  
{"effectId":8} 

 Player 1 16:34:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 16:34:18 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":8} 

 Player 2 16:34:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":58,"_text":"Remove After Resolve PlayerDeathPenalties 8  "}} 

 Player 2 16:34:18 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:34:19 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":8,"creatorCardId":321,"playerToPayCardId":321,"stackEffectType":16}} 

 Player 2 16:34:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":59,"_text":"Response Remove After Resolve PlayerDeathPenalties 8"},"childOfId":58} 

 Player 2 16:34:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":60,"_text":"Wait For Response From Player 1 "},"childOfId":58} 

 Player 2 16:34:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:34:19 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:34:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to pay death penalties"} 

 Player 1 16:34:19 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[319,320]} 

 Player 1 16:34:19 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:34:19 $ACTION_MASSAGE_REMOVE:  
{"id":60} 

 Player 2 16:34:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":61,"_text":"Wait For Response From Player 2 "},"childOfId":58} 

 Player 2 16:34:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:34:19 $ACTION_MASSAGE_REMOVE:  
{"id":61} 

 Player 2 16:34:19 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 2 16:34:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":62,"_text":"Stack Was Emptied "}} 

 Player 2 16:34:19 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:34:19 $CLEAR_SE_VIS:  

 Player 2 16:34:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:34:19 $CLEAR_SE_VIS:  

 Player 2 16:34:19 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 2 16:34:19 $CLEAR_SE_VIS:  

 Player 2 16:34:19 $END_TURN:  

 Player 2 16:34:19 $SET_TURN:  
{"playerId":1} 

 Player 2 16:34:19 $START_TURN:  
{"playerId":1} 

 Player 1 16:34:19 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 16:34:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:34:19 $NEXT_STACK_ID:  

 Player 1 16:34:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 16:34:19 $ADD_TO_STACK:  
{"stackEffect":{"entityId":9,"creatorCardId":319,"turnPlayerCardId":319,"stackEffectType":13}} 

 Player 1 16:34:19 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":319,"turnPlayerCardId":319,"stackEffectType":13}} 

 Player 1 16:34:19 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 16:34:19 $SHOW_STACK_EFFECT:  
{"effectId":9} 

 Player 2 16:34:19 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 16:34:19 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:34:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 16:34:19 $CLEAR_SE_VIS:  

 Player 1 16:34:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":63,"_text":"Add StartTurnLoot 9 "}} 

 Player 1 16:34:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:34:22 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":319,"turnPlayerCardId":319,"stackEffectType":13}} 

 Player 1 16:34:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":64,"_text":"Response Adding StartTurnLoot 9"},"childOfId":63} 

 Player 1 16:34:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":65,"_text":"Wait For Response From Player 1 "},"childOfId":63} 

 Player 1 16:34:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:34:22 $ACTION_MASSAGE_REMOVE:  
{"id":65} 

 Player 1 16:34:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":66,"_text":"Wait For Response From Player 2 "},"childOfId":63} 

 Player 1 16:34:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 16:34:22 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 16:34:22 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[]} 

 Player 2 16:34:22 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 16:34:22 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 1 16:34:22 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 1 16:34:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":67,"_text":"Resolve StartTurnLoot 9 "}} 

 Player 1 16:34:22 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":319,"turnPlayerCardId":319,"stackEffectType":13}} 

 Player 1 16:34:22 $DRAW_CARD:  
{"deckType":1} 

 Player 1 16:34:22 $MOVE_CARD:  
{"moveIndex":9,"cardId":57,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 16:34:23 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":57,"flipIfFlipped":false,"playerId":1} 

 Player 1 16:34:23 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":57} 

 Player 1 16:34:23 $FLIP_CARD:  
{"cardId":57} 

 Player 1 16:34:23 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":57} 

 Player 1 16:34:23 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":319,"turnPlayerCardId":319,"stackEffectType":13}} 

 Player 1 16:34:23 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":9} 

 Player 1 16:34:23 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 16:34:23 $SHOW_STACK_EFFECT:  
{"effectId":9} 

 Player 1 16:34:26 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":9} 

 Player 1 16:34:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":68,"_text":"Remove After Resolve StartTurnLoot 9  "}} 

 Player 1 16:34:26 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:34:26 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":9,"creatorCardId":319,"turnPlayerCardId":319,"stackEffectType":13}} 

 Player 1 16:34:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":69,"_text":"Response Remove After Resolve StartTurnLoot 9"},"childOfId":68} 

 Player 1 16:34:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":70,"_text":"Wait For Response From Player 2 "},"childOfId":68} 

 Player 1 16:34:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 16:34:26 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 16:34:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 16:34:26 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[]} 

 Player 2 16:34:26 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 16:34:26 $ACTION_MASSAGE_REMOVE:  
{"id":70} 

 Player 1 16:34:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":71,"_text":"Wait For Response From Player 1 "},"childOfId":68} 

 Player 1 16:34:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:34:26 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 1 16:34:26 $ACTION_MASSAGE_REMOVE:  
{"id":69} 

 Player 1 16:34:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":72,"_text":"Stack Was Emptied "}} 

 Player 1 16:34:26 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:34:26 $CLEAR_SE_VIS:  

 Player 1 16:34:37 $NEXT_STACK_ID:  

 Player 1 16:34:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Incubus"} 

 Player 1 16:34:37 $ADD_TO_STACK:  
{"stackEffect":{"entityId":10,"creatorCardId":319,"hasLockingStackEffect":false,"itemToPlayCardId":320,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 16:34:37 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":319,"hasLockingStackEffect":false,"itemToPlayCardId":320,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 16:34:37 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 16:34:37 $SHOW_STACK_EFFECT:  
{"effectId":10} 

 Player 2 16:34:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:34:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Incubus"} 

 Player 1 16:34:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":73,"_text":"Add ActivateItem 10 "}} 

 Player 1 16:34:42 $SHOW_EFFECT_CHOSEN:  
{"cardId":320,"pos":{"x":-667,"y":-256.909},"size":{"w":490,"h":80}} 

 Player 1 16:34:45 $USE_ITEM:  
{"cardId":320} 

 Player 1 16:34:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:34:45 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":319,"hasLockingStackEffect":false,"itemToPlayCardId":320,"itemPlayerId":1,"effectToDoData":{"type":1,"index":1},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 16:34:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":74,"_text":"Response Adding ActivateItem 10"},"childOfId":73} 

 Player 1 16:34:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":75,"_text":"Wait For Response From Player 1 "},"childOfId":73} 

 Player 1 16:34:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:34:45 $SHOW_REACTIONS:  
{"playerId":1,"cardsIds":[319,98,138,15,57]} 

 Player 1 16:34:50 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[319,98,138,15,57]} 

 Player 1 16:34:50 $NEXT_STACK_ID:  

 Player 1 16:34:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Incubus \n2:Player 1 play 1 Penny(10) "} 

 Player 1 16:34:50 $ADD_TO_STACK:  
{"stackEffect":{"entityId":11,"creatorCardId":319,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":15,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 16:34:50 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":319,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":15,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 16:34:51 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 16:34:51 $SHOW_STACK_EFFECT:  
{"effectId":11} 

 Player 2 16:34:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Incubus"} 

 Player 2 16:34:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Incubus \n2:Player 1 play 1 Penny(10) "} 

 Player 1 16:34:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":76,"_text":"Add PlayLootCardStackEffect 11 "}} 

 Player 1 16:34:53 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":15} 

 Player 1 16:34:53 $MOVE_CARD:  
{"moveIndex":10,"cardId":15,"placeID":327,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 16:34:54 $MOVE_CARD_END:  
{"moveIndex":10,"cardId":15,"flipIfFlipped":true,"playerId":1} 

 Player 1 16:34:54 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":15} 

 Player 1 16:34:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Incubus \n2:Player 1 play 1 Penny(10): addMoney"} 

 Player 1 16:34:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:34:54 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":11,"creatorCardId":319,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":15,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":15,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 16:34:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":77,"_text":"Response Adding PlayLootCardStackEffect 11"},"childOfId":76} 

 Player 1 16:34:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":78,"_text":"Wait For Response From Player 1 "},"childOfId":76} 

 Player 1 16:34:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:34:54 $SHOW_REACTIONS:  
{"playerId":1,"cardsIds":[319]} 

 Player 2 16:34:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Incubus \n2:Player 1 play 1 Penny(10) "} 

 Player 1 16:34:55 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[319]} 

 Player 1 16:34:55 $NEXT_STACK_ID:  

 Player 1 16:34:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Incubus \n2:Player 1 play 1 Penny(10): addMoney"} 

 Player 1 16:34:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Incubus \n2:Player 1 play 1 Penny(10): addMoney \n3:Player 1 activated Lilith"} 

 Player 1 16:34:55 $ADD_TO_STACK:  
{"stackEffect":{"entityId":12,"creatorCardId":319,"hasLockingStackEffect":false,"itemToPlayCardId":319,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 16:34:55 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":12,"creatorCardId":319,"hasLockingStackEffect":false,"itemToPlayCardId":319,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 16:34:55 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 16:34:55 $SHOW_STACK_EFFECT:  
{"effectId":12} 

 Player 2 16:34:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Incubus \n2:Player 1 play 1 Penny(10) "} 

 Player 2 16:34:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Incubus \n2:Player 1 play 1 Penny(10)  \n3:Player 1 activated Lilith"} 

 Player 1 16:34:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":79,"_text":"Add ActivateItem 12 "}} 

 Player 1 16:35:01 $SHOW_DECISION:  
{"startCardId":319,"endCardId":57,"flipEndCard":true} 

 Player 1 16:35:04 $USE_ITEM:  
{"cardId":319} 

 Player 1 16:35:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:35:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Incubus \n2:Player 1 play 1 Penny(10): addMoney \n3:Player 1 activated Lilith"} 

 Player 1 16:35:04 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":12,"creatorCardId":319,"hasLockingStackEffect":false,"itemToPlayCardId":319,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 16:35:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":80,"_text":"Response Adding ActivateItem 12"},"childOfId":79} 

 Player 1 16:35:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":81,"_text":"Wait For Response From Player 1 "},"childOfId":79} 

 Player 1 16:35:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:35:04 $ACTION_MASSAGE_REMOVE:  
{"id":81} 

 Player 1 16:35:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":82,"_text":"Wait For Response From Player 2 "},"childOfId":79} 

 Player 1 16:35:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 16:35:04 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 16:35:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Incubus \n2:Player 1 play 1 Penny(10)  \n3:Player 1 activated Lilith"} 

 Player 2 16:35:04 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[]} 

 Player 2 16:35:04 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 16:35:04 $ACTION_MASSAGE_REMOVE:  
{"id":82} 

 Player 1 16:35:04 $ACTION_MASSAGE_REMOVE:  
{"id":80} 

 Player 1 16:35:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":83,"_text":"Resolve ActivateItem 12 "}} 

 Player 1 16:35:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Incubus \n2:Player 1 play 1 Penny(10): addMoney \n3:Player 1 activated Lilith"} 

 Player 1 16:35:04 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":12,"creatorCardId":319,"hasLockingStackEffect":false,"itemToPlayCardId":319,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 16:35:04 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":319,"particleType":6} 

 Player 2 16:35:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Incubus \n2:Player 1 play 1 Penny(10)  \n3:Player 1 activated Lilith"} 

 Player 1 16:35:06 $DISABLE_PARTICLE_EFFECT:  
{"cardId":319,"particleType":6} 

 Player 1 16:35:06 $NEXT_STACK_ID:  

 Player 1 16:35:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Incubus \n2:Player 1 play 1 Penny(10): addMoney \n3:Player 1 activated Lilith"} 

 Player 1 16:35:06 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":57} 

 Player 1 16:35:06 $MOVE_CARD:  
{"moveIndex":11,"cardId":57,"placeID":327,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 16:35:06 $MOVE_CARD_END:  
{"moveIndex":11,"cardId":57,"flipIfFlipped":true,"playerId":1} 

 Player 1 16:35:06 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":57} 

 Player 1 16:35:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Incubus \n2:Player 1 play 1 Penny(10): addMoney \n3:Player 1 play 4 Cents(0): addMoney \n4:Player 1 activated Lilith"} 

 Player 1 16:35:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:35:07 $CLEAR_SE_VIS:  

 Player 1 16:35:07 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":319,"hasLockingStackEffect":false,"itemToPlayCardId":320,"itemPlayerId":1,"effectToDoData":{"type":1,"index":1},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 16:35:07 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":319,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":15,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":15,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 16:35:07 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":13,"creatorCardId":319,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":57,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":57,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 16:35:07 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":12,"creatorCardId":319,"hasLockingStackEffect":false,"itemToPlayCardId":319,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 16:35:07 $REPLACE_STACK:  
{"currentStack":[{"entityId":10,"creatorCardId":319,"hasLockingStackEffect":false,"itemToPlayCardId":320,"itemPlayerId":1,"effectToDoData":{"type":1,"index":1},"hasDataBeenCollectedYet":true,"stackEffectType":1},{"entityId":11,"creatorCardId":319,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":15,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":15,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":13,"creatorCardId":319,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":57,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":57,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":12,"creatorCardId":319,"hasLockingStackEffect":false,"itemToPlayCardId":319,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 

 Player 1 16:35:07 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 16:35:07 $SHOW_STACK_EFFECT:  
{"effectId":13} 

 Player 2 16:35:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Incubus \n2:Player 1 play 1 Penny(10)  \n3:Player 1 activated Lilith"} 

 Player 1 16:35:09 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ACTIVATE_ITEM","args":[{"type":0,"number":319}],"result":null,"preventMethod":false,"methodScopeId":319,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 16:35:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Incubus \n2:Player 1 play 1 Penny(10): addMoney \n3:Player 1 play 4 Cents(0): addMoney \n4:Player 1 activated Lilith"} 

 Player 1 16:35:10 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":12,"creatorCardId":319,"hasLockingStackEffect":false,"itemToPlayCardId":319,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 16:35:10 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":12} 

 Player 1 16:35:10 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 16:35:10 $SHOW_STACK_EFFECT:  
{"effectId":12} 

 Player 2 16:35:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Incubus \n2:Player 1 play 1 Penny(10)  \n3:Player 1 play 4 Cents(0)  \n4:Player 1 activated Lilith"} 

 Player 1 16:35:12 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":12} 

 Player 1 16:35:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":84,"_text":"Remove After Resolve ActivateItem 12  "}} 

 Player 1 16:35:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Incubus \n2:Player 1 play 1 Penny(10): addMoney \n3:Player 1 play 4 Cents(0): addMoney"} 

 Player 1 16:35:13 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":12,"creatorCardId":319,"hasLockingStackEffect":false,"itemToPlayCardId":319,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 16:35:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":85,"_text":"Response Remove After Resolve ActivateItem 12"},"childOfId":84} 

 Player 1 16:35:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":86,"_text":"Wait For Response From Player 1 "},"childOfId":84} 

 Player 1 16:35:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:35:13 $ACTION_MASSAGE_REMOVE:  
{"id":86} 

 Player 1 16:35:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":87,"_text":"Wait For Response From Player 2 "},"childOfId":84} 

 Player 1 16:35:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 16:35:13 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 16:35:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Incubus \n2:Player 1 play 1 Penny(10)  \n3:Player 1 play 4 Cents(0)  \n4:Player 1 activated Lilith"} 

 Player 2 16:35:13 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[]} 

 Player 2 16:35:13 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 16:35:13 $ACTION_MASSAGE_REMOVE:  
{"id":87} 

 Player 1 16:35:13 $ACTION_MASSAGE_REMOVE:  
{"id":85} 

 Player 1 16:35:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":88,"_text":"Resolve PlayLootCardStackEffect 13 "}} 

 Player 1 16:35:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Incubus \n2:Player 1 play 1 Penny(10): addMoney \n3:Player 1 play 4 Cents(0): addMoney"} 

 Player 1 16:35:13 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":13,"creatorCardId":319,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":57,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":57,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 16:35:13 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":57,"particleType":6} 

 Player 2 16:35:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Incubus \n2:Player 1 play 1 Penny(10)  \n3:Player 1 play 4 Cents(0) "} 

 Player 1 16:35:15 $DISABLE_PARTICLE_EFFECT:  
{"cardId":57,"particleType":6} 

 Player 1 16:35:15 $SET_MONEY:  
{"playerId":1,"numOfCoins":7} 

 Player 1 16:35:15 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":319,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 1 16:35:15 $REMOVE_FROM_PILE:  
{"cardId":57} 

 Player 1 16:35:15 $MOVE_CARD:  
{"moveIndex":12,"cardId":57,"placeID":328,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 16:35:15 $MOVE_CARD_END:  
{"moveIndex":12,"cardId":57,"flipIfFlipped":true,"playerId":1} 

 Player 1 16:35:15 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":57} 

 Player 1 16:35:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Incubus \n2:Player 1 play 1 Penny(10): addMoney \n3:Player 1 play 4 Cents(0): addMoney"} 

 Player 1 16:35:15 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":13,"creatorCardId":319,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":57,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 16:35:15 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":13} 

 Player 1 16:35:15 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 16:35:15 $SHOW_STACK_EFFECT:  
{"effectId":13} 

 Player 2 16:35:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Incubus \n2:Player 1 play 1 Penny(10)  \n3:Player 1 play 4 Cents(0) "} 

 Player 1 16:35:18 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":13} 

 Player 1 16:35:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":89,"_text":"Remove After Resolve PlayLootCardStackEffect 13  "}} 

 Player 1 16:35:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Incubus \n2:Player 1 play 1 Penny(10): addMoney"} 

 Player 1 16:35:18 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":13,"creatorCardId":319,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":57,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 16:35:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":90,"_text":"Response Remove After Resolve PlayLootCardStackEffect 13"},"childOfId":89} 

 Player 1 16:35:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":91,"_text":"Wait For Response From Player 2 "},"childOfId":89} 

 Player 1 16:35:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 16:35:18 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 16:35:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Incubus \n2:Player 1 play 1 Penny(10)  \n3:Player 1 play 4 Cents(0) "} 

 Player 2 16:35:19 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[]} 

 Player 2 16:35:19 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 16:35:19 $ACTION_MASSAGE_REMOVE:  
{"id":91} 

 Player 1 16:35:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":92,"_text":"Wait For Response From Player 1 "},"childOfId":89} 

 Player 1 16:35:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:35:19 $ACTION_MASSAGE_REMOVE:  
{"id":92} 

 Player 1 16:35:19 $ACTION_MASSAGE_REMOVE:  
{"id":90} 

 Player 1 16:35:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":93,"_text":"Resolve PlayLootCardStackEffect 11 "}} 

 Player 1 16:35:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Incubus \n2:Player 1 play 1 Penny(10): addMoney"} 

 Player 1 16:35:19 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":11,"creatorCardId":319,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":15,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":15,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 16:35:19 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":15,"particleType":6} 

 Player 2 16:35:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Incubus \n2:Player 1 play 1 Penny(10) "} 

 Player 1 16:35:21 $DISABLE_PARTICLE_EFFECT:  
{"cardId":15,"particleType":6} 

 Player 1 16:35:21 $SET_MONEY:  
{"playerId":1,"numOfCoins":8} 

 Player 1 16:35:21 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":1}],"result":null,"preventMethod":false,"methodScopeId":319,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 1 16:35:21 $REMOVE_FROM_PILE:  
{"cardId":15} 

 Player 1 16:35:21 $MOVE_CARD:  
{"moveIndex":13,"cardId":15,"placeID":328,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 16:35:21 $MOVE_CARD_END:  
{"moveIndex":13,"cardId":15,"flipIfFlipped":true,"playerId":1} 

 Player 1 16:35:21 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":15} 

 Player 1 16:35:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Incubus \n2:Player 1 play 1 Penny(10): addMoney"} 

 Player 1 16:35:21 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":11,"creatorCardId":319,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":15,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 16:35:21 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":11} 

 Player 1 16:35:21 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 16:35:21 $SHOW_STACK_EFFECT:  
{"effectId":11} 

 Player 2 16:35:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Incubus \n2:Player 1 play 1 Penny(10) "} 

 Player 1 16:35:24 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":11} 

 Player 1 16:35:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":94,"_text":"Remove After Resolve PlayLootCardStackEffect 11  "}} 

 Player 1 16:35:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Incubus"} 

 Player 1 16:35:24 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":11,"creatorCardId":319,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":15,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 16:35:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":95,"_text":"Response Remove After Resolve PlayLootCardStackEffect 11"},"childOfId":94} 

 Player 1 16:35:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":96,"_text":"Wait For Response From Player 1 "},"childOfId":94} 

 Player 1 16:35:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:35:24 $ACTION_MASSAGE_REMOVE:  
{"id":96} 

 Player 1 16:35:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":97,"_text":"Wait For Response From Player 2 "},"childOfId":94} 

 Player 1 16:35:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 16:35:24 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 16:35:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Incubus \n2:Player 1 play 1 Penny(10) "} 

 Player 2 16:35:24 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[]} 

 Player 2 16:35:24 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 16:35:24 $ACTION_MASSAGE_REMOVE:  
{"id":97} 

 Player 1 16:35:24 $ACTION_MASSAGE_REMOVE:  
{"id":95} 

 Player 1 16:35:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":98,"_text":"Resolve ActivateItem 10 "}} 

 Player 1 16:35:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Incubus"} 

 Player 1 16:35:25 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":319,"hasLockingStackEffect":false,"itemToPlayCardId":320,"itemPlayerId":1,"effectToDoData":{"type":1,"index":1},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 16:35:25 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":320,"particleType":6} 

 Player 1 16:35:26 $DISABLE_PARTICLE_EFFECT:  
{"cardId":320,"particleType":6} 

 Player 1 16:35:26 $DRAW_CARD:  
{"deckType":1} 

 Player 1 16:35:26 $MOVE_CARD:  
{"moveIndex":14,"cardId":42,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 16:35:27 $MOVE_CARD_END:  
{"moveIndex":14,"cardId":42,"flipIfFlipped":false,"playerId":1} 

 Player 1 16:35:27 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":42} 

 Player 1 16:35:27 $FLIP_CARD:  
{"cardId":42} 

 Player 1 16:35:27 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":42} 

 Player 1 16:35:34 $MOVE_CARD:  
{"moveIndex":15,"cardId":42,"placeID":3,"flipIfFlipped":false,"playerId":1,"placeType":"Card"} 

 Player 2 16:35:34 $MOVE_CARD_END:  
{"moveIndex":15,"cardId":42,"flipIfFlipped":false,"playerId":1} 

 Player 1 16:35:34 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":42} 

 Player 1 16:35:34 $DECK_ADD_TO_TOP:  
{"deckType":1,"cardId":42} 

 Player 1 16:35:34 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ACTIVATE_ITEM","args":[{"type":0,"number":320}],"result":null,"preventMethod":false,"methodScopeId":319,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 1 16:35:34 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":319,"hasLockingStackEffect":false,"itemToPlayCardId":320,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 16:35:34 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":10} 

 Player 1 16:35:34 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 16:35:34 $SHOW_STACK_EFFECT:  
{"effectId":10} 

 Player 1 16:35:37 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":10} 

 Player 1 16:35:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":99,"_text":"Remove After Resolve ActivateItem 10  "}} 

 Player 1 16:35:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:35:37 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":10,"creatorCardId":319,"hasLockingStackEffect":false,"itemToPlayCardId":320,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 16:35:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":100,"_text":"Response Remove After Resolve ActivateItem 10"},"childOfId":99} 

 Player 1 16:35:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":101,"_text":"Wait For Response From Player 2 "},"childOfId":99} 

 Player 1 16:35:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 16:35:37 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 16:35:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Incubus"} 

 Player 2 16:35:37 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[]} 

 Player 2 16:35:37 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 16:35:37 $ACTION_MASSAGE_REMOVE:  
{"id":101} 

 Player 1 16:35:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":102,"_text":"Wait For Response From Player 1 "},"childOfId":99} 

 Player 1 16:35:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:35:37 $ACTION_MASSAGE_REMOVE:  
{"id":102} 

 Player 1 16:35:37 $ACTION_MASSAGE_REMOVE:  
{"id":100} 

 Player 1 16:35:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":103,"_text":"Stack Was Emptied "}} 

 Player 1 16:35:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:35:37 $CLEAR_SE_VIS:  

 Player 1 16:35:37 $ACTION_MASSAGE_REMOVE:  
{"id":78} 

 Player 1 16:35:37 $ACTION_MASSAGE_REMOVE:  
{"id":77} 

 Player 1 16:35:37 $ACTION_MASSAGE_REMOVE:  
{"id":75} 

 Player 1 16:35:37 $ACTION_MASSAGE_REMOVE:  
{"id":74} 

 Player 1 16:36:10 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[]} 

 Player 1 16:36:10 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[]} 

 Player 2 16:36:54 $MATCH: 