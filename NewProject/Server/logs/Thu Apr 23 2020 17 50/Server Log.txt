Start Log 

 Player 1 17:50:18 $MATCH:  

 Player 1 17:50:19 $START_GAME:  

 Player 1 17:50:19 $MOVE_TO_TABLE:  

 Player 2 17:50:19 $MOVE_TO_TABLE:  

 Player 1 17:50:28 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 17:50:28 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 2 17:50:28 $CHOOSE_FOR_EDEN:  
{"playerId":1,"originPlayerId":2} 

 Player 1 17:50:28 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[180,184,173,210,153,170,220,171,204,177,145,158,195,168,219,164,186,161,201,179,221,205,150,143,166,196,190,209,189,216,144,192,152,160,142,217,175,181,167,163,178,182,211,188,191,212,199,193,154,183,162,187,169,156,172,141,155,214,148,159,206,203,198,176,200,202,218,149,194,213,197,208,215,146,157,185,165,151,207,174,147]} 

 Player 1 17:50:33 $EDEN_CHOSEN:  
{"cardId":184,"playerId":2} 

 Player 2 17:50:34 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[180,173,210,153,170,220,171,204,177,145,158,195,168,219,164,186,161,201,179,221,205,150,143,166,196,190,209,189,216,144,192,152,160,142,217,175,181,167,163,178,182,211,188,191,212,199,193,154,183,162,187,169,156,172,141,155,214,148,159,206,203,198,176,200,202,218,149,194,213,197,208,215,146,157,185,165,151,207,174,147]} 

 Player 2 17:50:34 $FLIP_CARD:  
{"cardId":184} 

 Player 2 17:50:34 $SET_CHAR:  
{"originPlayerId":2,"playerId":1,"charCardId":317,"itemCardId":184} 

 Player 1 17:50:34 $REGISTER_PASSIVE_ITEM:  
{"cardId":184} 

 Player 1 17:50:34 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":184}],"result":true,"preventMethod":false,"methodScopeId":317,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 17:50:34 $NEXT_STACK_ID:  

 Player 1 17:50:34 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:50:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Meat! Effect GainStats<GainStats>"} 

 Player 1 17:50:34 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":1,"creatorCardId":317,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":1,"cardId":184,"effctType":0},"isAfterActivation":true,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 17:50:34 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":1,"creatorCardId":317,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":1,"cardId":184,"effctType":0},"isAfterActivation":true,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 17:50:34 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 17:50:34 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 2 17:50:34 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:50:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Meat! "} 

 Player 1 17:50:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add Activate Passive Effect 1 "}} 

 Player 1 17:50:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Meat! effect GainStats<GainStats>"} 

 Player 1 17:50:37 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":1,"creatorCardId":317,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":1,"cardId":184,"effctType":0},"isAfterActivation":true,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 17:50:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding Activate Passive Effect 1"},"childOfId":0} 

 Player 1 17:50:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Resolve Activate Passive Effect 1 "}} 

 Player 1 17:50:37 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"effectCollectedData":null,"entityId":1,"creatorCardId":317,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":1,"cardId":184,"effctType":0},"isAfterActivation":true,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}]} 

 Player 1 17:50:37 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":184,"particleType":6} 

 Player 2 17:50:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Meat! "} 

 Player 1 17:50:39 $DISABLE_PARTICLE_EFFECT:  
{"cardId":184,"particleType":6} 

 Player 1 17:50:39 $PLAYER_GAIN_ATTACK_ROLL_BONUS:  
{"playerId":1,"bonusToGain":1,"isTemp":false} 

 Player 1 17:50:39 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":184}],"result":true,"preventMethod":false,"methodScopeId":317,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 17:50:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activated Meat! Effect"} 

 Player 1 17:50:39 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":1,"creatorCardId":317,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"isAfterActivation":true,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 17:50:39 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 1 17:50:39 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 17:50:39 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 2 17:50:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Meat! "} 

 Player 1 17:50:42 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":1} 

 Player 1 17:50:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Remove After Resolve Activate Passive Effect 1  "}} 

 Player 1 17:50:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:50:42 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":1,"creatorCardId":317,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"isAfterActivation":true,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 17:50:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Response Remove After Resolve Activate Passive Effect 1"},"childOfId":3} 

 Player 1 17:50:42 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 17:50:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Stack Was Emptied "}} 

 Player 1 17:50:42 $TURN_PLAYER_DO_STACK_EFFECT:  
{"playerId":2} 

 Player 1 17:50:42 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 17:50:42 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":317,"itemCardId":184} 

 Player 1 17:50:42 $SET_CHAR_END:  
{"playerId":2} 

 Player 2 17:50:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Meat! "} 

 Player 2 17:50:42 $CLEAR_SE_VIS:  

 Player 2 17:50:42 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":325,"itemCardId":326} 

 Player 2 17:50:42 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":318}],"result":null,"preventMethod":false,"methodScopeId":317,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 17:50:42 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[131,10,84,46,23,25,71,123,119,65,111,15,76,7,137,6,29,120,125,113,56,135,85,61,121,47,105,42,79,81,44,127,39,88,82,41,70,101,89,30,116,73,139,94,99,54,132,60,27,37,80,43,90,8,128,114,67,133,77,86,92,11,136,28,45,5,40,117,108,48,110,98,58,31,32,104,138,55,124,13,18,51,38,75,21,93,50,63,17,49,91,59,22,36,96,35,34,14,100,106,115,87,102,72,78,109,57,53,19,52,9,62,69,97,130,26,4,118,68,112,122,126,95,66,24,64,20,16,33,74,107,134,12,103,83,129]} 

 Player 2 17:50:42 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[243,292,302,223,305,298,287,254,262,269,225,270,247,266,237,236,268,229,280,284,278,275,264,249,242,245,295,294,234,283,227,265,282,277,239,251,308,286,276,299,224,241,255,281,240,263,230,267,238,261,306,288,226,273,250,309,285,297,259,244,291,301,252,260,310,272,290,246,296,233,307,271,304,248,235,253,303,228,274,279,256,289,257,231,293,258,232,300]} 

 Player 2 17:50:42 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[173,176,190,165,191,168,171,202,206,149,179,217,220,154,160,183,198,208,213,186,155,197,144,188,161,195,181,145,157,169,182,221,146,207,152,147,151,201,219,158,170,166,159,216,164,210,177,178,192,185,212,175,150,218,215,172,187,148,194,162,153,205,189,163,141,209,193,174,214,196,167,180,211,204,199,203,143,156,200,142]} 

 Player 2 17:50:42 $DRAW_CARD:  
{"deckType":5} 

 Player 2 17:50:42 $FLIP_CARD:  
{"cardId":142} 

 Player 2 17:50:42 $ADD_STORE_CARD:  
{"cardId":142} 

 Player 2 17:50:42 $DRAW_CARD:  
{"deckType":5} 

 Player 2 17:50:42 $FLIP_CARD:  
{"cardId":200} 

 Player 2 17:50:42 $ADD_STORE_CARD:  
{"cardId":200} 

 Player 2 17:50:42 $DRAW_CARD:  
{"deckType":2} 

 Player 2 17:50:42 $FLIP_CARD:  
{"cardId":300} 

 Player 2 17:50:42 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":300} 

 Player 2 17:50:42 $NEW_MONSTER_ON_PLACE:  
{"cardId":300,"monsterPlaceId":1} 

 Player 2 17:50:43 $DRAW_CARD:  
{"deckType":2} 

 Player 2 17:50:43 $FLIP_CARD:  
{"cardId":232} 

 Player 2 17:50:43 $REGISTER_PASSIVE_ITEM:  
{"cardId":232} 

 Player 2 17:50:43 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":232} 

 Player 2 17:50:43 $NEW_MONSTER_ON_PLACE:  
{"cardId":232,"monsterPlaceId":2} 

 Player 2 17:50:43 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 17:50:43 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":317,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 17:50:43 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:50:43 $MOVE_CARD:  
{"moveIndex":1,"cardId":129,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:50:43 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":129,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:50:43 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":129} 

 Player 2 17:50:43 $FLIP_CARD:  
{"cardId":129} 

 Player 2 17:50:43 $FLIP_CARD:  
{"cardId":129} 

 Player 2 17:50:43 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":129} 

 Player 2 17:50:43 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:50:43 $MOVE_CARD:  
{"moveIndex":2,"cardId":83,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:50:44 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":83,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:50:44 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":83} 

 Player 2 17:50:44 $FLIP_CARD:  
{"cardId":83} 

 Player 2 17:50:44 $FLIP_CARD:  
{"cardId":83} 

 Player 2 17:50:44 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":83} 

 Player 2 17:50:44 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:50:44 $MOVE_CARD:  
{"moveIndex":3,"cardId":103,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:50:44 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":103,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:50:44 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":103} 

 Player 2 17:50:44 $FLIP_CARD:  
{"cardId":103} 

 Player 2 17:50:44 $FLIP_CARD:  
{"cardId":103} 

 Player 2 17:50:44 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":103} 

 Player 2 17:50:44 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 17:50:44 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 17:50:44 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:50:44 $MOVE_CARD:  
{"moveIndex":4,"cardId":12,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:50:45 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":12,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:50:45 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":12} 

 Player 2 17:50:45 $FLIP_CARD:  
{"cardId":12} 

 Player 2 17:50:45 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":12} 

 Player 2 17:50:45 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:50:45 $MOVE_CARD:  
{"moveIndex":5,"cardId":134,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:50:45 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":134,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:50:45 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":134} 

 Player 2 17:50:45 $FLIP_CARD:  
{"cardId":134} 

 Player 2 17:50:45 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":134} 

 Player 2 17:50:45 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:50:46 $MOVE_CARD:  
{"moveIndex":6,"cardId":107,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:50:46 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":107,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:50:46 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":107} 

 Player 2 17:50:46 $FLIP_CARD:  
{"cardId":107} 

 Player 2 17:50:46 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":107} 

 Player 2 17:50:46 $GAME_HAS_STARTED:  

 Player 2 17:50:46 $SET_TURN:  
{"playerId":1} 

 Player 2 17:50:46 $START_TURN:  
{"playerId":1} 

 Player 2 17:50:46 $UPDATE_ACTIONS:  

 Player 1 17:50:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:50:46 $NEXT_STACK_ID:  

 Player 1 17:50:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:50:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 

 Player 1 17:50:46 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":317,"turnPlayerCardId":317,"stackEffectType":13}} 

 Player 1 17:50:46 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":317,"turnPlayerCardId":317,"stackEffectType":13}} 

 Player 1 17:50:46 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 17:50:46 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 2 17:50:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:50:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 

 Player 1 17:50:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Add Start Turn Loot Draw 2 "}} 

 Player 1 17:50:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:50:49 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":317,"turnPlayerCardId":317,"stackEffectType":13}} 

 Player 1 17:50:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Response Adding Start Turn Loot Draw 2"},"childOfId":6} 

 Player 1 17:50:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":6} 

 Player 1 17:50:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:50:49 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 1 17:50:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Wait For Response From Player 2 "},"childOfId":6} 

 Player 1 17:50:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 17:50:49 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 17:50:49 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[325,326]} 

 Player 2 17:50:49 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 17:50:49 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 17:50:49 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 1 17:50:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Resolve Start Turn Loot Draw 2 "}} 

 Player 1 17:50:50 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":2,"creatorCardId":317,"turnPlayerCardId":317,"stackEffectType":13}]} 

 Player 1 17:50:50 $DRAW_CARD:  
{"deckType":1} 

 Player 1 17:50:50 $MOVE_CARD:  
{"moveIndex":7,"cardId":74,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 17:50:50 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":74,"flipIfFlipped":false,"playerId":1} 

 Player 1 17:50:50 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":74} 

 Player 1 17:50:50 $FLIP_CARD:  
{"cardId":74} 

 Player 1 17:50:50 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":74} 

 Player 1 17:50:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Has Drawen Loot For Start Turn"} 

 Player 1 17:50:50 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":317,"turnPlayerCardId":317,"stackEffectType":13}} 

 Player 1 17:50:50 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 1 17:50:50 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 17:50:50 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 2 17:50:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 

 Player 1 17:50:53 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":2} 

 Player 1 17:50:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Remove After Resolve Start Turn Loot Draw 2  "}} 

 Player 1 17:50:53 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:50:53 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":317,"turnPlayerCardId":317,"stackEffectType":13}} 

 Player 1 17:50:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Response Remove After Resolve Start Turn Loot Draw 2"},"childOfId":11} 

 Player 1 17:50:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":11} 

 Player 1 17:50:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 17:50:53 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 17:50:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 

 Player 2 17:50:53 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[325,326]} 

 Player 2 17:50:53 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 17:50:53 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 1 17:50:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Wait For Response From Player 1 "},"childOfId":11} 

 Player 1 17:50:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:50:53 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 17:50:53 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 1 17:50:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Stack Was Emptied "}} 

 Player 1 17:50:54 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:50:54 $CLEAR_SE_VIS:  

 Player 1 17:51:04 $NEXT_STACK_ID:  

 Player 1 17:51:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 declared attack on Carrion Queen"} 

 Player 1 17:51:04 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":317,"attackingPlayerCardId":317,"idOfCardBeingAttacked":232,"stackEffectType":4}} 

 Player 1 17:51:04 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":317,"attackingPlayerCardId":317,"idOfCardBeingAttacked":232,"stackEffectType":4}} 

 Player 1 17:51:05 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 17:51:05 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 2 17:51:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:51:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 declared attack on Carrion Queen"} 

 Player 1 17:51:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Add Player Declare Attack On Monster 3 "}} 

 Player 1 17:51:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:51:08 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":317,"attackingPlayerCardId":317,"idOfCardBeingAttacked":232,"stackEffectType":4}} 

 Player 1 17:51:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Response Adding Player Declare Attack On Monster 3"},"childOfId":16} 

 Player 1 17:51:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":16} 

 Player 1 17:51:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:51:08 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 1 17:51:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Wait For Response From Player 2 "},"childOfId":16} 

 Player 1 17:51:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 17:51:08 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 17:51:08 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[325,326]} 

 Player 2 17:51:08 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 17:51:08 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 17:51:08 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 1 17:51:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Resolve Player Declare Attack On Monster 3 "}} 

 Player 1 17:51:08 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":3,"creatorCardId":317,"attackingPlayerCardId":317,"idOfCardBeingAttacked":232,"stackEffectType":4}]} 

 Player 1 17:51:08 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":232,"particleType":5} 

 Player 1 17:51:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Has Entered Battle with Carrion Queen"} 

 Player 1 17:51:08 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":317,"scopeIsPlayer":true,"index":2,"originStackId":3},"isAfterActivation":true,"index":2} 

 Player 1 17:51:08 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":317,"attackingPlayerCardId":317,"idOfCardBeingAttacked":232,"stackEffectType":4}} 

 Player 1 17:51:08 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 1 17:51:08 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 17:51:08 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 2 17:51:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 declared attack on Carrion Queen"} 

 Player 1 17:51:11 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":3} 

 Player 1 17:51:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Remove After Resolve Player Declare Attack On Monster 3  "}} 

 Player 1 17:51:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:51:11 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":317,"attackingPlayerCardId":317,"idOfCardBeingAttacked":232,"stackEffectType":4}} 

 Player 1 17:51:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Response Remove After Resolve Player Declare Attack On Monster 3"},"childOfId":21} 

 Player 1 17:51:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 2 "},"childOfId":21} 

 Player 1 17:51:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 17:51:11 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 17:51:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 declared attack on Carrion Queen"} 

 Player 2 17:51:11 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[325,326]} 

 Player 2 17:51:11 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 17:51:11 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 1 17:51:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Wait For Response From Player 1 "},"childOfId":21} 

 Player 1 17:51:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:51:11 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 17:51:11 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 1 17:51:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Stack Was Emptied "}} 

 Player 1 17:51:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:51:11 $CLEAR_SE_VIS:  

 Player 1 17:51:15 $NEXT_STACK_ID:  

 Player 1 17:51:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Carrion Queen<Monster>"} 

 Player 1 17:51:15 $ADD_TO_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":317,"rollingPlayerCardId":317,"stackEffectType":2,"attackedMonsterCardId":232}} 

 Player 1 17:51:15 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":317,"rollingPlayerCardId":317,"stackEffectType":2,"attackedMonsterCardId":232}} 

 Player 1 17:51:15 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 17:51:15 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 2 17:51:15 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:51:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Carrion Queen<Monster>"} 

 Player 1 17:51:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Add Player Attack Roll On Monster 4 "}} 

 Player 1 17:51:18 $ROLL_DICE:  
{"playerId":1} 

 Player 1 17:51:19 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":5} 

 Player 1 17:51:19 $UPDATE_STACK_VIS:  
{"stackId":4,"text":"player rolled 5 vs Carrion Queen<Monster>"} 

 Player 1 17:51:19 $SHOW_DICE_ROLL:  
{"stackId":4} 

 Player 1 17:51:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 5 vs Carrion Queen<Monster>"} 

 Player 1 17:51:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:51:23 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":317,"numberRolled":5,"rollingPlayerCardId":317,"stackEffectType":2,"attackedMonsterCardId":232}} 

 Player 1 17:51:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Response Adding Player Attack Roll On Monster 4"},"childOfId":26} 

 Player 1 17:51:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 1 "},"childOfId":26} 

 Player 1 17:51:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:51:23 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 1 17:51:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Wait For Response From Player 2 "},"childOfId":26} 

 Player 1 17:51:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 17:51:23 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 17:51:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Carrion Queen<Monster>"} 

 Player 2 17:51:23 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[325,326]} 

 Player 2 17:51:23 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 17:51:23 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 1 17:51:23 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 1 17:51:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Resolve Player Attack Roll On Monster 4 "}} 

 Player 1 17:51:23 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":4,"creatorCardId":317,"numberRolled":5,"rollingPlayerCardId":317,"stackEffectType":2,"attackedMonsterCardId":232}]} 

 Player 1 17:51:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Added 1 to original roll"}} 

 Player 1 17:51:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Rolled 4 Against Carrion Queen<Monster> 4"} 

 Player 1 17:51:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Roll Hit"} 

 Player 1 17:51:23 $NEXT_STACK_ID:  

 Player 1 17:51:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:51:23 $CLEAR_SE_VIS:  

 Player 1 17:51:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden is going to hurt Carrion Queen \n2:Player 1 Roll Hit"} 

 Player 1 17:51:23 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":317,"entityToDoDamageCardId":317,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 1 17:51:23 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":317,"numberRolled":5,"rollingPlayerCardId":317,"stackEffectType":2,"attackedMonsterCardId":232}} 

 Player 1 17:51:23 $REPLACE_STACK:  
{"currentStack":[{"entityId":5,"creatorCardId":317,"entityToDoDamageCardId":317,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":4,"creatorCardId":317,"numberRolled":5,"rollingPlayerCardId":317,"stackEffectType":2,"attackedMonsterCardId":232}]} 

 Player 1 17:51:23 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 17:51:23 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":317,"scopeIsPlayer":true,"index":3,"originStackId":4},"isAfterActivation":true,"index":3} 

 Player 1 17:51:23 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":317,"numberRolled":5,"rollingPlayerCardId":317,"stackEffectType":2,"attackedMonsterCardId":232}} 

 Player 1 17:51:23 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 1 17:51:23 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 17:51:23 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 2 17:51:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Carrion Queen<Monster>"} 

 Player 2 17:51:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster>"} 

 Player 1 17:51:26 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":4} 

 Player 1 17:51:26 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 1 17:51:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Remove After Resolve Player Attack Roll On Monster 4  "}} 

 Player 1 17:51:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden is going to hurt Carrion Queen"} 

 Player 1 17:51:29 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":317,"numberRolled":5,"rollingPlayerCardId":317,"stackEffectType":2,"attackedMonsterCardId":232}} 

 Player 1 17:51:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Response Remove After Resolve Player Attack Roll On Monster 4"},"childOfId":32} 

 Player 1 17:51:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Wait For Response From Player 1 "},"childOfId":32} 

 Player 1 17:51:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:51:29 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 1 17:51:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Wait For Response From Player 2 "},"childOfId":32} 

 Player 1 17:51:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 17:51:29 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 17:51:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster>"} 

 Player 2 17:51:29 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[325,326]} 

 Player 2 17:51:29 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 17:51:29 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 1 17:51:29 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 1 17:51:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Resolve Monster Combat Damage To A Player 5 "}} 

 Player 1 17:51:29 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":5,"creatorCardId":317,"entityToDoDamageCardId":317,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}]} 

 Player 1 17:51:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden will deal 1 combat damage to Carrion Queen "} 

 Player 1 17:51:30 $UPDATE_STACK_VIS:  
{"stackId":5,"text":"Eden will deal 1 combat damage to Carrion Queen"} 

 Player 1 17:51:30 $MONSTER_GET_DAMAGED:  
{"cardId":232,"hpLeft":2,"damageDealerId":317} 

 Player 1 17:51:30 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":317},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":232,"scopeIsPlayer":false,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 1 17:51:30 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":4},{"type":0,"number":317},{"type":0,"number":232}],"result":null,"preventMethod":false,"methodScopeId":317,"scopeIsPlayer":true,"index":5,"originStackId":5},"isAfterActivation":true,"index":5} 

 Player 1 17:51:30 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":317,"entityToDoDamageCardId":317,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 1 17:51:30 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 1 17:51:30 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 17:51:30 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 2 17:51:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden is going to hurt Carrion Queen"} 

 Player 2 17:51:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden is going to hurt Carrion Queen"} 

 Player 1 17:51:32 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":5} 

 Player 1 17:51:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Remove After Resolve Monster Combat Damage To A Player 5  "}} 

 Player 1 17:51:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:51:32 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":317,"entityToDoDamageCardId":317,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 1 17:51:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Response Remove After Resolve Monster Combat Damage To A Player 5"},"childOfId":37} 

 Player 1 17:51:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Wait For Response From Player 2 "},"childOfId":37} 

 Player 1 17:51:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 17:51:33 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 17:51:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden is going to hurt Carrion Queen"} 

 Player 2 17:51:33 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[325,326]} 

 Player 2 17:51:33 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 17:51:33 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 1 17:51:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Wait For Response From Player 1 "},"childOfId":37} 

 Player 1 17:51:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:51:33 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 1 17:51:33 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 1 17:51:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Stack Was Emptied "}} 

 Player 1 17:51:33 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:51:33 $CLEAR_SE_VIS:  

 Player 2 17:52:33 $MATCH: 