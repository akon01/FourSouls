Start Log 

 Player 1 22:50:48 $MATCH:  

 Player 1 22:50:48 $START_GAME:  

 Player 1 22:50:48 $MOVE_TO_TABLE:  

 Player 2 22:50:48 $MOVE_TO_TABLE:  

 Player 1 22:51:00 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 22:51:00 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 2 22:51:00 $SET_CHAR:  
{"originPlayerId":2,"playerId":1,"charCardId":315,"itemCardId":318} 

 Player 1 22:51:00 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":315,"itemCardId":318} 

 Player 1 22:51:00 $SET_CHAR_END:  
{"playerId":2} 

 Player 2 22:51:00 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":319,"itemCardId":320} 

 Player 2 22:51:00 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[18,44,85,10,121,35,133,56,139,86,98,136,22,58,6,69,14,128,46,130,74,96,134,89,122,23,71,38,115,112,131,81,61,118,8,65,114,103,24,41,79,66,51,40,9,109,50,31,102,11,92,16,125,106,37,42,124,54,43,20,117,4,127,116,67,25,84,113,45,32,137,87,91,107,126,110,105,80,19,26,101,120,34,104,53,47,123,90,15,62,135,111,68,75,17,70,129,57,78,29,39,108,7,12,73,64,97,28,138,55,88,5,36,82,13,83,33,95,60,99,30,77,72,94,119,48,59,21,27,93,132,63,49,52,76,100]} 

 Player 2 22:51:00 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[244,270,262,298,279,299,247,255,241,231,276,288,226,309,249,265,256,289,252,263,308,280,230,266,248,254,235,303,239,300,242,274,246,301,251,240,305,294,229,304,223,260,272,297,253,264,237,245,290,233,268,275,225,227,228,267,271,259,238,282,292,261,234,306,257,258,284,307,310,236,291,243,224,273,283,287,285,277,293,295,232,250,286,296,281,278,269,302]} 

 Player 2 22:51:00 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[209,203,183,192,147,172,155,191,184,178,186,168,218,177,142,151,174,175,163,154,198,141,197,219,167,201,204,146,211,170,149,166,220,185,179,160,181,145,182,195,176,206,200,199,173,205,189,161,156,208,210,180,152,157,207,214,144,194,143,171,187,165,159,215,193,150,202,221,216,164,212,162,158,169,148,153,196,217,213,190,188]} 

 Player 2 22:51:00 $DRAW_CARD:  
{"deckType":5} 

 Player 2 22:51:00 $FLIP_CARD:  
{"cardId":188} 

 Player 2 22:51:00 $ADD_STORE_CARD:  
{"cardId":188} 

 Player 2 22:51:00 $DRAW_CARD:  
{"deckType":5} 

 Player 2 22:51:00 $FLIP_CARD:  
{"cardId":190} 

 Player 2 22:51:00 $ADD_STORE_CARD:  
{"cardId":190} 

 Player 2 22:51:00 $DRAW_CARD:  
{"deckType":2} 

 Player 2 22:51:00 $FLIP_CARD:  
{"cardId":302} 

 Player 2 22:51:00 $REGISTER_PASSIVE_ITEM:  
{"cardId":302} 

 Player 2 22:51:00 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":302} 

 Player 2 22:51:00 $NEW_MONSTER_ON_PLACE:  
{"cardId":302,"monsterPlaceId":1} 

 Player 2 22:51:00 $DRAW_CARD:  
{"deckType":2} 

 Player 2 22:51:00 $FLIP_CARD:  
{"cardId":269} 

 Player 2 22:51:00 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":269} 

 Player 2 22:51:00 $NEW_MONSTER_ON_PLACE:  
{"cardId":269,"monsterPlaceId":2} 

 Player 2 22:51:00 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 22:51:00 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 22:51:00 $DRAW_CARD:  
{"deckType":1} 

 Player 2 22:51:00 $MOVE_CARD:  
{"moveIndex":1,"cardId":100,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 22:51:01 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":100,"flipIfFlipped":false,"playerId":2} 

 Player 2 22:51:01 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":100} 

 Player 2 22:51:01 $FLIP_CARD:  
{"cardId":100} 

 Player 2 22:51:01 $FLIP_CARD:  
{"cardId":100} 

 Player 2 22:51:01 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":100} 

 Player 2 22:51:01 $DRAW_CARD:  
{"deckType":1} 

 Player 2 22:51:01 $MOVE_CARD:  
{"moveIndex":2,"cardId":76,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 22:51:01 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":76,"flipIfFlipped":false,"playerId":2} 

 Player 2 22:51:01 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":76} 

 Player 2 22:51:01 $FLIP_CARD:  
{"cardId":76} 

 Player 2 22:51:01 $FLIP_CARD:  
{"cardId":76} 

 Player 2 22:51:01 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":76} 

 Player 2 22:51:01 $DRAW_CARD:  
{"deckType":1} 

 Player 2 22:51:01 $MOVE_CARD:  
{"moveIndex":3,"cardId":52,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 22:51:02 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":52,"flipIfFlipped":false,"playerId":2} 

 Player 2 22:51:02 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":52} 

 Player 2 22:51:02 $FLIP_CARD:  
{"cardId":52} 

 Player 2 22:51:02 $FLIP_CARD:  
{"cardId":52} 

 Player 2 22:51:02 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":52} 

 Player 2 22:51:02 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 22:51:02 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":319,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 22:51:02 $DRAW_CARD:  
{"deckType":1} 

 Player 2 22:51:02 $MOVE_CARD:  
{"moveIndex":4,"cardId":49,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 22:51:02 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":49,"flipIfFlipped":false,"playerId":2} 

 Player 2 22:51:02 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":49} 

 Player 2 22:51:02 $FLIP_CARD:  
{"cardId":49} 

 Player 2 22:51:02 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":49} 

 Player 2 22:51:02 $DRAW_CARD:  
{"deckType":1} 

 Player 2 22:51:02 $MOVE_CARD:  
{"moveIndex":5,"cardId":63,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 22:51:03 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":63,"flipIfFlipped":false,"playerId":2} 

 Player 2 22:51:03 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":63} 

 Player 2 22:51:03 $FLIP_CARD:  
{"cardId":63} 

 Player 2 22:51:03 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":63} 

 Player 2 22:51:03 $DRAW_CARD:  
{"deckType":1} 

 Player 2 22:51:03 $MOVE_CARD:  
{"moveIndex":6,"cardId":132,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 22:51:03 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":132,"flipIfFlipped":false,"playerId":2} 

 Player 2 22:51:03 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":132} 

 Player 2 22:51:03 $FLIP_CARD:  
{"cardId":132} 

 Player 2 22:51:03 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":132} 

 Player 2 22:51:03 $GAME_HAS_STARTED:  

 Player 2 22:51:03 $SET_TURN:  
{"playerId":1} 

 Player 2 22:51:03 $START_TURN:  
{"playerId":1} 

 Player 2 22:51:04 $UPDATE_ACTIONS:  

 Player 1 22:51:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:51:04 $NEXT_STACK_ID:  

 Player 1 22:51:04 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 22:51:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 

 Player 1 22:51:04 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":315,"turnPlayerCardId":315,"stackEffectType":13}} 

 Player 1 22:51:04 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":315,"turnPlayerCardId":315,"stackEffectType":13}} 

 Player 1 22:51:04 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 22:51:04 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 2 22:51:04 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 22:51:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 

 Player 1 22:51:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 1 22:51:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:51:07 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":315,"turnPlayerCardId":315,"stackEffectType":13}} 

 Player 1 22:51:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 1 22:51:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 1 22:51:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:51:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 1 22:51:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:51:07 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:51:07 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[319]} 

 Player 2 22:51:07 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:51:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 1 22:51:07 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":1,"creatorCardId":315,"turnPlayerCardId":315,"stackEffectType":13}]} 

 Player 1 22:51:07 $DRAW_CARD:  
{"deckType":1} 

 Player 1 22:51:07 $MOVE_CARD:  
{"moveIndex":7,"cardId":93,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 22:51:07 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":93,"flipIfFlipped":false,"playerId":1} 

 Player 1 22:51:07 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":93} 

 Player 1 22:51:07 $FLIP_CARD:  
{"cardId":93} 

 Player 1 22:51:07 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":93} 

 Player 1 22:51:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Has Drawen Loot For Start Turn"} 

 Player 1 22:51:07 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":315,"turnPlayerCardId":315,"stackEffectType":13}} 

 Player 1 22:51:07 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 1 22:51:08 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 22:51:08 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 2 22:51:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 

 Player 1 22:51:10 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":1} 

 Player 1 22:51:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 1 22:51:10 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 22:51:10 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":315,"turnPlayerCardId":315,"stackEffectType":13}} 

 Player 1 22:51:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 1 22:51:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 1 22:51:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:51:11 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:51:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 

 Player 2 22:51:11 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[319]} 

 Player 2 22:51:11 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:51:11 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 1 22:51:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 1 22:51:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:51:11 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 1 22:51:11 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 1 22:51:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 1 22:51:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 22:51:11 $CLEAR_SE_VIS:  

 Player 2 22:51:13 $MOVE_CARD:  
{"moveIndex":8,"cardId":123,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 

 Player 1 22:51:13 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":123,"flipIfFlipped":true,"playerId":2} 

 Player 2 22:51:13 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[18,44,85,10,121,35,133,56,139,86,98,136,22,58,6,69,14,128,46,130,74,96,134,89,122,23,71,38,115,112,131,81,61,118,8,65,114,103,24,41,79,66,51,40,9,109,50,31,102,11,92,16,125,106,37,42,124,54,43,20,117,4,127,116,67,25,84,113,45,32,137,87,91,107,126,110,105,80,19,26,101,120,34,104,53,47,90,15,62,135,111,68,75,17,70,129,57,78,29,39,108,7,12,73,64,97,28,138,55,88,5,36,82,13,83,33,95,60,99,30,77,72,94,119,48,59,21,27]} 

 Player 2 22:51:13 $FLIP_CARD:  
{"cardId":123} 

 Player 2 22:51:13 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":123} 

 Player 1 22:51:22 $MOVE_CARD:  
{"moveIndex":9,"cardId":247,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Hand"} 

 Player 2 22:51:22 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":247,"flipIfFlipped":true,"playerId":1} 

 Player 1 22:51:22 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[244,270,262,298,279,299,255,241,231,276,288,226,309,249,265,256,289,252,263,308,280,230,266,248,254,235,303,239,300,242,274,246,301,251,240,305,294,229,304,223,260,272,297,253,264,237,245,290,233,268,275,225,227,228,267,271,259,238,282,292,261,234,306,257,258,284,307,310,236,291,243,224,273,283,287,285,277,293,295,232,250,286,296,281,278]} 

 Player 1 22:51:22 $FLIP_CARD:  
{"cardId":247} 

 Player 1 22:51:23 $REMOVE_FROM_PASSIVE_MANAGER:  
{"cardId":302} 

 Player 1 22:51:23 $REGISTER_PASSIVE_ITEM:  
{"cardId":247} 

 Player 1 22:51:23 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":247} 

 Player 1 22:51:23 $NEW_MONSTER_ON_PLACE:  
{"cardId":247,"monsterPlaceId":1} 

 Player 1 22:51:28 $NEXT_STACK_ID:  

 Player 1 22:51:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 declared attack on Cursed Tumor"} 

 Player 1 22:51:28 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":315,"attackingPlayerCardId":315,"idOfCardBeingAttacked":247,"stackEffectType":4}} 

 Player 1 22:51:28 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":315,"attackingPlayerCardId":315,"idOfCardBeingAttacked":247,"stackEffectType":4}} 

 Player 1 22:51:28 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 22:51:28 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 2 22:51:28 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 22:51:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 declared attack on Cursed Tumor"} 

 Player 1 22:51:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add DeclareAttack 2 "}} 

 Player 1 22:51:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:51:31 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":315,"attackingPlayerCardId":315,"idOfCardBeingAttacked":247,"stackEffectType":4}} 

 Player 1 22:51:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding DeclareAttack 2"},"childOfId":10} 

 Player 1 22:51:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 1 22:51:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:51:31 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 1 22:51:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 1 22:51:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:51:31 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:51:31 $SHOW_REACTIONS:  
{"playerId":2,"cardsIds":[319]} 

 Player 2 22:51:40 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":true} 

 Player 2 22:51:40 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[319]} 

 Player 2 22:51:40 $NEXT_STACK_ID:  

 Player 2 22:51:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 declared attack on Cursed Tumor \n2:Player 2 is going to activate Isaac"} 

 Player 2 22:51:40 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":319,"hasLockingStackEffect":false,"itemToPlayCardId":319,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 22:51:40 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":319,"hasLockingStackEffect":false,"itemToPlayCardId":319,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 22:51:40 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 22:51:40 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 1 22:51:40 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 1 22:51:40 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 1 22:51:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 declared attack on Cursed Tumor"} 

 Player 1 22:51:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 declared attack on Cursed Tumor \n2:Player 2 is going to activate Isaac"} 

 Player 2 22:51:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Add ActivateItem 3 "}} 

 Player 2 22:51:47 $SHOW_DECISION:  
{"startCardId":319,"endCardId":123,"flipEndCard":true} 

 Player 2 22:51:50 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[319]} 

 Player 2 22:51:50 $RESPOND_TO:  
{"playerId":-1,"stackEffectResponse":false} 

 Player 2 22:51:50 $USE_ITEM:  
{"cardId":319} 

 Player 2 22:51:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 22:51:50 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":319,"hasLockingStackEffect":false,"itemToPlayCardId":319,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 22:51:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Response Adding ActivateItem 3"},"childOfId":14} 

 Player 2 22:51:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Wait For Response From Player 1 "},"childOfId":14} 

 Player 2 22:51:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 22:51:50 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 22:51:50 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[315,318,100,76,52,93]} 

 Player 1 22:51:50 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 22:51:50 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 2 22:51:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":14} 

 Player 2 22:51:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:51:50 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 22:51:50 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 22:51:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Resolve ActivateItem 3 "}} 

 Player 2 22:51:50 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":3,"creatorCardId":319,"hasLockingStackEffect":false,"itemToPlayCardId":319,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 

 Player 2 22:51:50 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":319,"particleType":6} 

 Player 2 22:51:52 $DISABLE_PARTICLE_EFFECT:  
{"cardId":319,"particleType":6} 

 Player 2 22:51:52 $NEXT_STACK_ID:  

 Player 2 22:51:52 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":123} 

 Player 2 22:51:52 $MOVE_CARD:  
{"moveIndex":10,"cardId":123,"placeID":329,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 22:51:53 $MOVE_CARD_END:  
{"moveIndex":10,"cardId":123,"flipIfFlipped":true,"playerId":2} 

 Player 2 22:51:53 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":123} 

 Player 2 22:51:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 declared attack on Cursed Tumor \n2:Player 2 Is Going To Play Swallowed Penny: AddTrinket \n3:Player 2 is going to activate Isaac"} 

 Player 2 22:51:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 22:51:53 $CLEAR_SE_VIS:  

 Player 2 22:51:53 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":315,"attackingPlayerCardId":315,"idOfCardBeingAttacked":247,"stackEffectType":4}} 

 Player 2 22:51:53 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":319,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":123,"lootPlayerId":2,"effectToDo":{"effectName":"AddTrinket","cardEffectNum":0,"cardPlayerId":2,"cardId":123,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 22:51:53 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":319,"hasLockingStackEffect":false,"itemToPlayCardId":319,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 22:51:53 $REPLACE_STACK:  
{"currentStack":[{"entityId":2,"creatorCardId":315,"attackingPlayerCardId":315,"idOfCardBeingAttacked":247,"stackEffectType":4},{"entityId":4,"creatorCardId":319,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":123,"lootPlayerId":2,"effectToDo":{"effectName":"AddTrinket","cardEffectNum":0,"cardPlayerId":2,"cardId":123,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":3,"creatorCardId":319,"hasLockingStackEffect":false,"itemToPlayCardId":319,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 

 Player 2 22:51:53 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 22:51:53 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 1 22:51:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 declared attack on Cursed Tumor \n2:Player 2 is going to activate Isaac"} 

 Player 2 22:51:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 declared attack on Cursed Tumor \n2:Player 2 Is Going To Play Swallowed Penny: AddTrinket \n3:Player 2 has activated Isaac"} 

 Player 2 22:51:56 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ACTIVATE_ITEM","args":[{"type":0,"number":319}],"result":null,"preventMethod":false,"methodScopeId":319,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 22:51:56 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":319,"hasLockingStackEffect":false,"itemToPlayCardId":319,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 22:51:56 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 22:51:56 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 22:51:56 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 1 22:51:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 declared attack on Cursed Tumor \n2:Player 2 Is Going To Play Swallowed Penny  \n3:Player 2 is going to activate Isaac"} 

 Player 2 22:51:59 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":3} 

 Player 2 22:51:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Remove After Resolve ActivateItem 3  "}} 

 Player 2 22:51:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 declared attack on Cursed Tumor \n2:Player 2 Is Going To Play Swallowed Penny: AddTrinket"} 

 Player 2 22:51:59 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":319,"hasLockingStackEffect":false,"itemToPlayCardId":319,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 22:51:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Response Remove After Resolve ActivateItem 3"},"childOfId":19} 

 Player 2 22:51:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Wait For Response From Player 1 "},"childOfId":19} 

 Player 2 22:51:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 22:51:59 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 22:51:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 declared attack on Cursed Tumor \n2:Player 2 Is Going To Play Swallowed Penny  \n3:Player 2 is going to activate Isaac"} 

 Player 1 22:51:59 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[315,318,100,76,52,93]} 

 Player 1 22:51:59 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 22:51:59 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 2 22:51:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":19} 

 Player 2 22:51:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:51:59 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 2 22:51:59 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 22:51:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Resolve PlayLootCardStackEffect 4 "}} 

 Player 2 22:51:59 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":4,"creatorCardId":319,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":123,"lootPlayerId":2,"effectToDo":{"effectName":"AddTrinket","cardEffectNum":0,"cardPlayerId":2,"cardId":123,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}]} 

 Player 2 22:51:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 declared attack on Cursed Tumor \n2:Player 2 Plays Swallowed Penny: AddTrinket"} 

 Player 2 22:51:59 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":123,"particleType":6} 

 Player 1 22:51:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 declared attack on Cursed Tumor \n2:Player 2 Is Going To Play Swallowed Penny "} 

 Player 2 22:52:01 $DISABLE_PARTICLE_EFFECT:  
{"cardId":123,"particleType":6} 

 Player 2 22:52:01 $CARD_ADD_TRINKET:  
{"cardId":123,"playerId":2,"addMuiliEffect":false} 

 Player 2 22:52:01 $REMOVE_FROM_PILE:  
{"cardId":123} 

 Player 2 22:52:01 $REGISTER_PASSIVE_ITEM:  
{"cardId":123} 

 Player 2 22:52:01 $MOVE_CARD:  
{"moveIndex":11,"cardId":123,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 

 Player 1 22:52:02 $MOVE_CARD_END:  
{"moveIndex":11,"cardId":123,"flipIfFlipped":true,"playerId":2} 

 Player 2 22:52:02 $ADD_AN_ITEM:  
{"playerId":2,"cardId":123,"isReward":true} 

 Player 2 22:52:02 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":123}],"result":true,"preventMethod":false,"methodScopeId":319,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 2 22:52:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 declared attack on Cursed Tumor \n2:Player 2 Plays Swallowed Penny: AddTrinket"} 

 Player 2 22:52:02 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":319,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":123,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 22:52:02 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 22:52:02 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 22:52:02 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 1 22:52:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 declared attack on Cursed Tumor \n2:Player 2 Is Going To Play Swallowed Penny "} 

 Player 2 22:52:05 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":4} 

 Player 2 22:52:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Remove After Resolve PlayLootCardStackEffect 4  "}} 

 Player 2 22:52:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 declared attack on Cursed Tumor"} 

 Player 2 22:52:05 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":319,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":123,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 22:52:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Response Remove After Resolve PlayLootCardStackEffect 4"},"childOfId":24} 

 Player 2 22:52:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Wait For Response From Player 2 "},"childOfId":24} 

 Player 2 22:52:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:52:05 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 2 22:52:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Wait For Response From Player 1 "},"childOfId":24} 

 Player 2 22:52:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 22:52:05 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 22:52:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 declared attack on Cursed Tumor \n2:Player 2 Is Going To Play Swallowed Penny "} 

 Player 1 22:52:05 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[315,318,100,76,52,93]} 

 Player 1 22:52:05 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 22:52:05 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 2 22:52:05 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 22:52:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Resolve DeclareAttack 2 "}} 

 Player 2 22:52:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 declared attack on Cursed Tumor"} 

 Player 2 22:52:05 $DO_STACK_EFFECT:  
{"originPlayerId":2,"playerId":1,"currentStack":[{"entityId":2,"creatorCardId":315,"attackingPlayerCardId":315,"idOfCardBeingAttacked":247,"stackEffectType":4}]} 

 Player 1 22:52:05 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":2,"creatorCardId":315,"attackingPlayerCardId":315,"idOfCardBeingAttacked":247,"stackEffectType":4}]} 

 Player 1 22:52:05 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":247,"particleType":5} 

 Player 1 22:52:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Has Entered Battle with Cursed Tumor"} 

 Player 1 22:52:05 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":1,"originStackId":2},"isAfterActivation":true,"index":1} 

 Player 1 22:52:05 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":315,"attackingPlayerCardId":315,"idOfCardBeingAttacked":247,"stackEffectType":4}} 

 Player 1 22:52:05 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 1 22:52:05 $FINISH_DO_STACK_EFFECT:  
{"playerId":2,"newStack":[{"entityId":2,"creatorCardId":315,"attackingPlayerCardId":315,"idOfCardBeingAttacked":247,"stackEffectType":4}]} 

 Player 2 22:52:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 declared attack on Cursed Tumor"} 

 Player 2 22:52:06 $CLEAR_SE_VIS:  

 Player 2 22:52:06 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":315,"attackingPlayerCardId":315,"idOfCardBeingAttacked":247,"stackEffectType":4}} 

 Player 2 22:52:06 $REPLACE_STACK:  
{"currentStack":[{"entityId":2,"creatorCardId":315,"attackingPlayerCardId":315,"idOfCardBeingAttacked":247,"stackEffectType":4}]} 

 Player 2 22:52:06 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 22:52:06 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 1 22:52:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Has Entered Battle with Cursed Tumor"} 

 Player 2 22:52:09 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":2} 

 Player 2 22:52:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Remove After Resolve DeclareAttack 2  "}} 

 Player 2 22:52:09 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 22:52:09 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":315,"attackingPlayerCardId":315,"idOfCardBeingAttacked":247,"stackEffectType":4}} 

 Player 2 22:52:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Response Remove After Resolve DeclareAttack 2"},"childOfId":29} 

 Player 2 22:52:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Wait For Response From Player 1 "},"childOfId":29} 

 Player 2 22:52:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 22:52:09 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 22:52:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 declared attack on Cursed Tumor"} 

 Player 1 22:52:09 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[315,318,100,76,52,93]} 

 Player 1 22:52:09 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 22:52:09 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 2 22:52:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Wait For Response From Player 2 "},"childOfId":29} 

 Player 2 22:52:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:52:09 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 2 22:52:09 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 22:52:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Stack Was Emptied "}} 

 Player 2 22:52:09 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 22:52:09 $TURN_PLAYER_DO_STACK_EFFECT:  
{"playerId":1} 

 Player 2 22:52:09 $STACK_EMPTIED:  
{"playerId":1} 

 Player 1 22:52:09 $CLEAR_SE_VIS:  

 Player 1 22:52:14 $NEXT_STACK_ID:  

 Player 1 22:52:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Cursed Tumor<Monster>"} 

 Player 1 22:52:14 $ADD_TO_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":315,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":247}} 

 Player 1 22:52:14 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":315,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":247}} 

 Player 1 22:52:14 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 22:52:14 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 2 22:52:14 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 22:52:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Cursed Tumor<Monster>"} 

 Player 1 22:52:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Add AttackRoll 5 "}} 

 Player 1 22:52:17 $ROLL_DICE:  
{"playerId":1} 

 Player 1 22:52:19 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":6} 

 Player 1 22:52:19 $UPDATE_STACK_VIS:  
{"stackId":5,"text":"player rolled 6 vs Cursed Tumor<Monster>"} 

 Player 1 22:52:19 $SHOW_DICE_ROLL:  
{"stackId":5} 

 Player 1 22:52:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Cursed Tumor<Monster>"} 

 Player 1 22:52:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:52:22 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":315,"numberRolled":6,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":247}} 

 Player 1 22:52:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Response Adding AttackRoll 5"},"childOfId":34} 

 Player 1 22:52:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Wait For Response From Player 1 "},"childOfId":34} 

 Player 1 22:52:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:52:22 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 1 22:52:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Wait For Response From Player 2 "},"childOfId":34} 

 Player 1 22:52:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:52:22 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:52:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Cursed Tumor<Monster>"} 

 Player 2 22:52:22 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[320]} 

 Player 2 22:52:22 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:52:22 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 1 22:52:22 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 1 22:52:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Resolve AttackRoll 5 "}} 

 Player 1 22:52:22 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":5,"creatorCardId":315,"numberRolled":6,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":247}]} 

 Player 1 22:52:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Added 0 to original roll"}} 

 Player 1 22:52:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Rolled 4 Against Cursed Tumor<Monster> 4"} 

 Player 1 22:52:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Roll Hit"} 

 Player 1 22:52:22 $NEXT_STACK_ID:  

 Player 1 22:52:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:52:22 $CLEAR_SE_VIS:  

 Player 1 22:52:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Cursed Tumor \n2:Player 1 Roll Hit"} 

 Player 1 22:52:22 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":247,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 1 22:52:22 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":315,"numberRolled":6,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":247}} 

 Player 1 22:52:22 $REPLACE_STACK:  
{"currentStack":[{"entityId":6,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":247,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":5,"creatorCardId":315,"numberRolled":6,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":247}]} 

 Player 1 22:52:22 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 22:52:22 $SHOW_STACK_EFFECT:  
{"effectId":6} 

 Player 2 22:52:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Cursed Tumor<Monster>"} 

 Player 1 22:52:25 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":2,"originStackId":5},"isAfterActivation":true,"index":2} 

 Player 1 22:52:25 $NEXT_STACK_ID:  

 Player 1 22:52:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Cursed Tumor \n2:Player 1 Roll Hit"} 

 Player 1 22:52:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Cursed Tumor \n2:Player 1 Roll Hit \n3:Activate Cursed Tumor Effect DealDamage<DealDamage>"} 

 Player 1 22:52:25 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":7,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":247,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":247,"effctType":0},"isAfterActivation":true,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 22:52:25 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":7,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":247,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":247,"effctType":0},"isAfterActivation":true,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 22:52:25 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 22:52:25 $SHOW_STACK_EFFECT:  
{"effectId":7} 

 Player 2 22:52:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Cursed Tumor \n2:Player 1 is rolling against Cursed Tumor<Monster>"} 

 Player 2 22:52:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Cursed Tumor \n2:Player 1 is rolling against Cursed Tumor<Monster> \n3:Activate Cursed Tumor "} 

 Player 1 22:52:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Add ActivatePassiveEffect 7 "}} 

 Player 1 22:52:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Cursed Tumor \n2:Player 1 Roll Hit \n3:Activate Cursed Tumor effect DealDamage<DealDamage>"} 

 Player 1 22:52:28 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[315,319],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":247,"effectCardPlayer":247},"entityId":7,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":247,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":247,"effctType":0},"isAfterActivation":true,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 22:52:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Response Adding ActivatePassiveEffect 7"},"childOfId":40} 

 Player 1 22:52:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Wait For Response From Player 1 "},"childOfId":40} 

 Player 1 22:52:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:52:28 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 1 22:52:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 2 "},"childOfId":40} 

 Player 1 22:52:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:52:28 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:52:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Cursed Tumor \n2:Player 1 is rolling against Cursed Tumor<Monster> \n3:Activate Cursed Tumor "} 

 Player 2 22:52:28 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[320]} 

 Player 2 22:52:28 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:52:29 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 1 22:52:29 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 1 22:52:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Resolve ActivatePassiveEffect 7 "}} 

 Player 1 22:52:29 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":5,"creatorCardId":315,"numberRolled":6,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":247},{"effectCollectedData":{"effectTargets":[315,319],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":247,"effectCardPlayer":247},"entityId":7,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":247,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":247,"effctType":0},"isAfterActivation":true,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14}]} 

 Player 1 22:52:29 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":247,"particleType":6} 

 Player 1 22:52:31 $DISABLE_PARTICLE_EFFECT:  
{"cardId":247,"particleType":6} 

 Player 1 22:52:31 $PLAYER_GET_HIT:  
{"playerId":1,"damage":1,"damageDealerId":247} 

 Player 1 22:52:31 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":247}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 1 22:52:31 $PLAYER_GET_HIT:  
{"playerId":2,"damage":1,"damageDealerId":247} 

 Player 1 22:52:31 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":247}],"result":null,"preventMethod":false,"methodScopeId":319,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 1 22:52:31 $NEXT_STACK_ID:  

 Player 1 22:52:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Cursed Tumor \n2:Player 1 Roll Hit \n3:Activate Cursed Tumor effect DealDamage<DealDamage>"} 

 Player 1 22:52:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Cursed Tumor \n2:Player 1 Roll Hit \n3:Activate Cursed Tumor effect DealDamage<DealDamage> \n4:Activate Swallowed Penny Effect AddMoney<AddMoney>"} 

 Player 1 22:52:31 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":8,"creatorCardId":319,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":123,"effctType":0},"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 22:52:31 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":8,"creatorCardId":319,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":123,"effctType":0},"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 22:52:31 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 22:52:31 $SHOW_STACK_EFFECT:  
{"effectId":8} 

 Player 2 22:52:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Cursed Tumor \n2:Player 1 is rolling against Cursed Tumor<Monster> \n3:Activate Cursed Tumor "} 

 Player 2 22:52:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Cursed Tumor \n2:Player 1 is rolling against Cursed Tumor<Monster> \n3:Activate Cursed Tumor  \n4:Activate Swallowed Penny "} 

 Player 1 22:52:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Add ActivatePassiveEffect 8 "}} 

 Player 1 22:52:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Cursed Tumor \n2:Player 1 Roll Hit \n3:Activate Cursed Tumor effect DealDamage<DealDamage> \n4:Activate Swallowed Penny Effect AddMoney<AddMoney>"} 

 Player 1 22:52:34 $PUT_ON_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":8,"creatorCardId":319,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":123,"effctType":0},"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14},"playerId":2,"originPlayerId":1} 

 Player 2 22:52:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Cursed Tumor \n2:Player 1 is rolling against Cursed Tumor<Monster> \n3:Activate Cursed Tumor  \n4:Activate Swallowed Penny "} 

 Player 2 22:52:34 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[319],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":319,"effectCardPlayer":319},"entityId":8,"creatorCardId":319,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":123,"effctType":0},"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 22:52:34 $END_PUT_ON_STACK:  
{"playerId":1} 

 Player 1 22:52:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Cursed Tumor \n2:Player 1 Roll Hit \n3:Activate Cursed Tumor effect DealDamage<DealDamage> \n4:Activate Swallowed Penny Effect AddMoney<AddMoney>"} 

 Player 1 22:52:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Response Adding ActivatePassiveEffect 8"},"childOfId":45} 

 Player 1 22:52:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Wait For Response From Player 2 "},"childOfId":45} 

 Player 1 22:52:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:52:34 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:52:34 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[320]} 

 Player 2 22:52:34 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:52:34 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 1 22:52:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Wait For Response From Player 1 "},"childOfId":45} 

 Player 1 22:52:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:52:34 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 1 22:52:34 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 1 22:52:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Resolve ActivatePassiveEffect 8 "}} 

 Player 1 22:52:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Cursed Tumor \n2:Player 1 Roll Hit \n3:Activate Cursed Tumor effect DealDamage<DealDamage> \n4:Activate Swallowed Penny "} 

 Player 1 22:52:34 $DO_STACK_EFFECT:  
{"originPlayerId":1,"playerId":2,"currentStack":[{"entityId":6,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":247,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":5,"creatorCardId":315,"numberRolled":6,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":247},{"effectCollectedData":{"effectTargets":[315,319],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":247,"effectCardPlayer":247},"entityId":7,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":247,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":247,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":2,"originStackId":5},"isAfterActivation":true,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14},{"effectCollectedData":{"effectTargets":[319],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":319,"effectCardPlayer":319},"entityId":8,"creatorCardId":319,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":123,"effctType":0},"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":true,"stackEffectType":14}]} 

 Player 2 22:52:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Cursed Tumor \n2:Player 1 is rolling against Cursed Tumor<Monster> \n3:Activate Cursed Tumor  \n4:Activate Swallowed Penny "} 

 Player 2 22:52:34 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":5,"creatorCardId":315,"numberRolled":6,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":247},{"effectCollectedData":{"effectTargets":[315,319],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":247,"effectCardPlayer":247},"entityId":7,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":247,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":247,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":{"type":2,"number":4}},{"type":2,"number":{"type":2,"number":2}},{"type":2,"number":{"type":2,"number":4}}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":null},"isAfterActivation":true,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14},{"effectCollectedData":{"effectTargets":[319],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":319,"effectCardPlayer":319},"entityId":8,"creatorCardId":319,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":123,"effctType":0},"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":true,"stackEffectType":14}]} 

 Player 2 22:52:34 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":123,"particleType":6} 

 Player 1 22:52:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Cursed Tumor \n2:Player 1 Roll Hit \n3:Activate Cursed Tumor effect DealDamage<DealDamage> \n4:Activate Swallowed Penny "} 

 Player 2 22:52:36 $DISABLE_PARTICLE_EFFECT:  
{"cardId":123,"particleType":6} 

 Player 2 22:52:36 $SET_MONEY:  
{"playerId":2,"numOfCoins":4} 

 Player 2 22:52:36 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":1}],"result":null,"preventMethod":false,"methodScopeId":319,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 2 22:52:36 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":{"type":2,"number":1}},{"type":0,"number":247}],"result":null,"preventMethod":false,"methodScopeId":319,"scopeIsPlayer":true,"index":4},"isAfterActivation":true,"index":4} 

 Player 2 22:52:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Cursed Tumor \n2:Player 1 is rolling against Cursed Tumor<Monster> \n3:Activate Cursed Tumor  \n4:Activated Swallowed Penny Effect"} 

 Player 2 22:52:36 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[319],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":319,"effectCardPlayer":319},"entityId":8,"creatorCardId":319,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 22:52:36 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":5,"creatorCardId":315,"numberRolled":6,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":247},{"effectCollectedData":{"effectTargets":[315,319],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":247,"effectCardPlayer":247},"entityId":7,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":247,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":247,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":{"type":2,"number":4}},{"type":2,"number":{"type":2,"number":2}},{"type":2,"number":{"type":2,"number":4}}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":null},"isAfterActivation":true,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14}]} 

 Player 2 22:52:37 $FINISH_DO_STACK_EFFECT:  
{"playerId":1,"newStack":[{"entityId":6,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":247,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":5,"creatorCardId":315,"numberRolled":6,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":247},{"effectCollectedData":{"effectTargets":[315,319],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":247,"effectCardPlayer":247},"entityId":7,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":247,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":247,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":{"type":2,"number":4}},{"type":2,"number":{"type":2,"number":2}},{"type":2,"number":{"type":2,"number":4}}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":null},"isAfterActivation":true,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14},{"effectCollectedData":{"effectTargets":[319],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":319,"effectCardPlayer":319},"entityId":8,"creatorCardId":319,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":true,"stackEffectType":14}]} 

 Player 1 22:52:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Cursed Tumor \n2:Player 1 Roll Hit \n3:Activate Cursed Tumor effect DealDamage<DealDamage> \n4:Activate Swallowed Penny "} 

 Player 1 22:52:37 $CLEAR_SE_VIS:  

 Player 1 22:52:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Cursed Tumor \n2:Player 1 is rolling against Cursed Tumor<Monster> \n3:Activate Cursed Tumor  \n4:Activate Swallowed Penny "} 

 Player 1 22:52:37 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":247,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 1 22:52:37 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":315,"numberRolled":6,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":247}} 

 Player 1 22:52:37 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[315,319],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":247,"effectCardPlayer":247},"entityId":7,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":247,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":247,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":{"type":2,"number":{"type":2,"number":4}}},{"type":2,"number":{"type":2,"number":{"type":2,"number":2}}},{"type":2,"number":{"type":2,"number":{"type":2,"number":4}}}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":null},"isAfterActivation":true,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 22:52:37 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":8,"creatorCardId":319,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 22:52:37 $REPLACE_STACK:  
{"currentStack":[{"entityId":6,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":247,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":5,"creatorCardId":315,"numberRolled":6,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":247},{"effectCollectedData":{"effectTargets":[315,319],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":247,"effectCardPlayer":247},"entityId":7,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":247,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":247,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":{"type":2,"number":{"type":2,"number":4}}},{"type":2,"number":{"type":2,"number":{"type":2,"number":2}}},{"type":2,"number":{"type":2,"number":{"type":2,"number":4}}}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":null},"isAfterActivation":true,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14},{"effectCollectedData":null,"entityId":8,"creatorCardId":319,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":true,"stackEffectType":14}]} 

 Player 1 22:52:37 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 22:52:37 $SHOW_STACK_EFFECT:  
{"effectId":8} 

 Player 2 22:52:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Cursed Tumor \n2:Player 1 is rolling against Cursed Tumor<Monster> \n3:Activate Cursed Tumor  \n4:Activated Swallowed Penny Effect"} 

 Player 1 22:52:40 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":8} 

 Player 1 22:52:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Remove After Resolve ActivatePassiveEffect 8  "}} 

 Player 1 22:52:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Cursed Tumor \n2:Player 1 is rolling against Cursed Tumor<Monster> \n3:Activate Cursed Tumor "} 

 Player 1 22:52:40 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":8,"creatorCardId":319,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 22:52:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Response Remove After Resolve ActivatePassiveEffect 8"},"childOfId":50} 

 Player 1 22:52:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Wait For Response From Player 1 "},"childOfId":50} 

 Player 1 22:52:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:52:40 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 1 22:52:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Wait For Response From Player 2 "},"childOfId":50} 

 Player 1 22:52:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:52:40 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:52:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Cursed Tumor \n2:Player 1 is rolling against Cursed Tumor<Monster> \n3:Activate Cursed Tumor  \n4:Activate Swallowed Penny "} 

 Player 2 22:52:40 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[320]} 

 Player 2 22:52:40 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:52:40 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 1 22:52:40 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 1 22:52:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Resolve ActivatePassiveEffect 7 "}} 

 Player 1 22:52:40 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":2,"originStackId":5},"isAfterActivation":true,"index":2} 

 Player 1 22:52:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Cursed Tumor \n2:Player 1 is rolling against Cursed Tumor<Monster> \n3:Activate Cursed Tumor "} 

 Player 1 22:52:40 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[315,319],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":247,"effectCardPlayer":247},"entityId":7,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":247,"isAfterActivation":true,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 22:52:40 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":5,"creatorCardId":315,"numberRolled":6,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":247}]} 

 Player 1 22:52:40 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 22:52:40 $SHOW_STACK_EFFECT:  
{"effectId":7} 

 Player 1 22:52:43 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":7} 

 Player 1 22:52:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Remove After Resolve ActivatePassiveEffect 7  "}} 

 Player 1 22:52:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Cursed Tumor \n2:Player 1 is rolling against Cursed Tumor<Monster>"} 

 Player 1 22:52:43 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[315,319],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":247,"effectCardPlayer":247},"entityId":7,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":247,"isAfterActivation":true,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 22:52:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":56,"_text":"Response Remove After Resolve ActivatePassiveEffect 7"},"childOfId":55} 

 Player 1 22:52:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":57,"_text":"Wait For Response From Player 2 "},"childOfId":55} 

 Player 1 22:52:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:52:43 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:52:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Cursed Tumor \n2:Player 1 is rolling against Cursed Tumor<Monster> \n3:Activate Cursed Tumor "} 

 Player 2 22:52:43 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[320]} 

 Player 2 22:52:43 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:52:43 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 1 22:52:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":58,"_text":"Wait For Response From Player 1 "},"childOfId":55} 

 Player 1 22:52:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:52:43 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 1 22:52:43 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 1 22:52:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":59,"_text":"Resolve AttackRoll 5 "}} 

 Player 1 22:52:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Cursed Tumor \n2:Player 1 is rolling against Cursed Tumor<Monster>"} 

 Player 1 22:52:44 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":315,"numberRolled":6,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":247}} 

 Player 1 22:52:44 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 1 22:52:44 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 22:52:44 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 1 22:52:46 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":5} 

 Player 1 22:52:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":60,"_text":"Remove After Resolve AttackRoll 5  "}} 

 Player 1 22:52:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Cursed Tumor"} 

 Player 1 22:52:46 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":315,"numberRolled":6,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":247}} 

 Player 1 22:52:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":61,"_text":"Response Remove After Resolve AttackRoll 5"},"childOfId":60} 

 Player 1 22:52:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":62,"_text":"Wait For Response From Player 1 "},"childOfId":60} 

 Player 1 22:52:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:52:47 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 1 22:52:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":63,"_text":"Wait For Response From Player 2 "},"childOfId":60} 

 Player 1 22:52:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:52:47 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:52:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Cursed Tumor \n2:Player 1 is rolling against Cursed Tumor<Monster>"} 

 Player 2 22:52:47 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[]} 

 Player 2 22:52:47 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:52:47 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 1 22:52:47 $ACTION_MASSAGE_REMOVE:  
{"id":61} 

 Player 1 22:52:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":64,"_text":"Resolve CombatDamage 6 "}} 

 Player 1 22:52:47 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":6,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":247,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}]} 

 Player 1 22:52:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain will deal 1 combat damage to Cursed Tumor "} 

 Player 1 22:52:47 $UPDATE_STACK_VIS:  
{"stackId":6,"text":"Cain will deal 1 combat damage to Cursed Tumor"} 

 Player 1 22:52:47 $MONSTER_GET_DAMAGED:  
{"cardId":247,"hpLeft":2,"damageDealerId":315} 

 Player 1 22:52:47 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":315},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":247,"scopeIsPlayer":false,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 1 22:52:47 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":4},{"type":0,"number":315},{"type":0,"number":247}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":6,"originStackId":6},"isAfterActivation":true,"index":6} 

 Player 1 22:52:47 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":247,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 1 22:52:47 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 1 22:52:47 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 22:52:47 $SHOW_STACK_EFFECT:  
{"effectId":6} 

 Player 2 22:52:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Cursed Tumor"} 

 Player 2 22:52:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Cursed Tumor"} 

 Player 1 22:52:50 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":6} 

 Player 1 22:52:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":65,"_text":"Remove After Resolve CombatDamage 6  "}} 

 Player 1 22:52:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 22:52:50 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":247,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 1 22:52:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":66,"_text":"Response Remove After Resolve CombatDamage 6"},"childOfId":65} 

 Player 1 22:52:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":67,"_text":"Wait For Response From Player 2 "},"childOfId":65} 

 Player 1 22:52:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:52:50 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:52:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Cursed Tumor"} 

 Player 2 22:52:50 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[]} 

 Player 2 22:52:50 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:52:50 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 1 22:52:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":68,"_text":"Wait For Response From Player 1 "},"childOfId":65} 

 Player 1 22:52:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:52:50 $ACTION_MASSAGE_REMOVE:  
{"id":68} 

 Player 1 22:52:50 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 1 22:52:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":69,"_text":"Stack Was Emptied "}} 

 Player 1 22:52:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 22:52:50 $CLEAR_SE_VIS:  

 Player 2 22:55:10 $MATCH: 