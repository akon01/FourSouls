Start Log 

 Player 1 02:05:38 $MATCH:  

 Player 1 02:05:38 $START_GAME:  

 Player 1 02:05:38 $MOVE_TO_TABLE:  

 Player 2 02:05:38 $MOVE_TO_TABLE:  

 Player 1 02:05:44 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 02:05:45 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 2 02:05:45 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":286,"itemCardId":289} 

 Player 2 02:05:45 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":299}],"result":true,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 02:05:45 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":298,"itemCardId":299} 

 Player 2 02:05:45 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[124,85,21,72,95,118,91,132,127,38,44,84,114,135,92,81,68,30,137,122,87,138,121,96,26,100,83,120,136,27,70,47,42,69,41,102,7,97,15,9,10,113,126,20,22,32,65,104,24,111,66,18,23,140,88,59,73,142,117,86,71,107,36,79,108,94,101,134,129,116,29,55,110,28,133,51,99,64,17,125,35,141,34,63,77,8,43,93,40,74,57,54,105,53,16,37,109,60,139,76,119,33,19,39,14,52,112,131,115,25,50,82,48,89,78,49,58,90,31,128,106,12,130,123,75,67,80,56,103,11,46,61,45,13,62,98]} 

 Player 2 02:05:45 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[251,238,234,240,260,272,233,276,237,255,273,242,265,268,254,231,259,229,252,280,244,239,275,266,257,264,256,262,278,248,228,270,236,267,274,263,271,243,232,241,247,281,246,279,249,235,230,277,245,261,269,253,258,250]} 

 Player 2 02:05:45 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[201,222,213,209,152,148,207,180,189,204,218,197,179,224,194,216,190,170,214,161,165,182,202,164,187,173,147,220,154,160,185,193,223,156,163,172,195,174,149,210,162,188,151,215,208,171,158,167,184,176,166,168,219,183,181,206,186,217,178,198,177,146,153,155,200,150,225,145,205,192,191,203,212,169,221,199,175,211,159,157,196]} 

 Player 2 02:05:45 $DRAW_CARD:  
{"deckType":5} 

 Player 2 02:05:45 $FLIP_CARD:  
{"cardId":196} 

 Player 2 02:05:45 $ADD_STORE_CARD:  
{"cardId":196} 

 Player 2 02:05:45 $DRAW_CARD:  
{"deckType":5} 

 Player 2 02:05:45 $FLIP_CARD:  
{"cardId":157} 

 Player 2 02:05:45 $ADD_STORE_CARD:  
{"cardId":157} 

 Player 2 02:05:46 $DRAW_CARD:  
{"deckType":2} 

 Player 2 02:05:46 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":250} 

 Player 2 02:05:46 $DRAW_CARD:  
{"deckType":2} 

 Player 2 02:05:46 $FLIP_CARD:  
{"cardId":258} 

 Player 2 02:05:46 $REGISTER_PASSIVE_ITEM:  
{"cardId":258} 

 Player 2 02:05:46 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":258} 

 Player 2 02:05:46 $NEW_MONSTER_ON_PLACE:  
{"cardId":258,"monsterPlaceId":1} 

 Player 2 02:05:46 $DRAW_CARD:  
{"deckType":2} 

 Player 2 02:05:46 $FLIP_CARD:  
{"cardId":253} 

 Player 2 02:05:46 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":253} 

 Player 2 02:05:46 $NEW_MONSTER_ON_PLACE:  
{"cardId":253,"monsterPlaceId":2} 

 Player 2 02:05:46 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 02:05:46 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 02:05:46 $DRAW_CARD:  
{"deckType":1} 

 Player 2 02:05:46 $MOVE_CARD:  
{"moveIndex":1,"cardId":98,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 02:05:46 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":289}],"result":true,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 02:05:46 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":98,"flipIfFlipped":false,"playerId":2} 

 Player 2 02:05:46 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":98} 

 Player 2 02:05:46 $FLIP_CARD:  
{"cardId":98} 

 Player 2 02:05:46 $FLIP_CARD:  
{"cardId":98} 

 Player 2 02:05:46 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":98} 

 Player 2 02:05:46 $DRAW_CARD:  
{"deckType":1} 

 Player 2 02:05:46 $MOVE_CARD:  
{"moveIndex":2,"cardId":62,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 02:05:47 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":62,"flipIfFlipped":false,"playerId":2} 

 Player 2 02:05:47 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":62} 

 Player 2 02:05:47 $FLIP_CARD:  
{"cardId":62} 

 Player 2 02:05:47 $FLIP_CARD:  
{"cardId":62} 

 Player 2 02:05:47 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":62} 

 Player 2 02:05:47 $DRAW_CARD:  
{"deckType":1} 

 Player 2 02:05:47 $MOVE_CARD:  
{"moveIndex":3,"cardId":13,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 02:05:47 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":13,"flipIfFlipped":false,"playerId":2} 

 Player 2 02:05:47 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":13} 

 Player 2 02:05:47 $FLIP_CARD:  
{"cardId":13} 

 Player 2 02:05:47 $FLIP_CARD:  
{"cardId":13} 

 Player 2 02:05:47 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":13} 

 Player 2 02:05:47 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 02:05:47 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 02:05:47 $DRAW_CARD:  
{"deckType":1} 

 Player 2 02:05:47 $MOVE_CARD:  
{"moveIndex":4,"cardId":45,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 02:05:48 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":45,"flipIfFlipped":false,"playerId":2} 

 Player 2 02:05:48 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":45} 

 Player 2 02:05:48 $FLIP_CARD:  
{"cardId":45} 

 Player 2 02:05:48 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":45} 

 Player 2 02:05:48 $DRAW_CARD:  
{"deckType":1} 

 Player 2 02:05:48 $MOVE_CARD:  
{"moveIndex":5,"cardId":61,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 02:05:48 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":61,"flipIfFlipped":false,"playerId":2} 

 Player 2 02:05:48 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":61} 

 Player 2 02:05:48 $FLIP_CARD:  
{"cardId":61} 

 Player 2 02:05:48 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":61} 

 Player 2 02:05:48 $DRAW_CARD:  
{"deckType":1} 

 Player 2 02:05:48 $MOVE_CARD:  
{"moveIndex":6,"cardId":46,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 02:05:49 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":46,"flipIfFlipped":false,"playerId":2} 

 Player 2 02:05:49 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":46} 

 Player 2 02:05:49 $FLIP_CARD:  
{"cardId":46} 

 Player 2 02:05:49 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":46} 

 Player 2 02:05:49 $GAME_HAS_STARTED:  

 Player 2 02:05:49 $SET_TURN:  
{"playerId":1} 

 Player 2 02:05:49 $START_TURN:  
{"playerId":1} 

 Player 2 02:05:49 $UPDATE_ACTIONS:  

 Player 1 02:05:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:05:49 $NEXT_STACK_ID:  

 Player 1 02:05:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:05:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 02:05:49 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 

 Player 1 02:05:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 02:05:49 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 

 Player 1 02:05:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 1 02:05:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:05:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 02:05:49 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 

 Player 1 02:05:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 1 02:05:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 1 02:05:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:05:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 1 02:05:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:05:49 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:05:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:05:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:05:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:05:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:05:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:05:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:05:50 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:05:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 1 02:05:50 $DRAW_CARD:  
{"deckType":1} 

 Player 1 02:05:50 $MOVE_CARD:  
{"moveIndex":7,"cardId":11,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 02:05:50 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":11,"flipIfFlipped":false,"playerId":1} 

 Player 1 02:05:50 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":11} 

 Player 1 02:05:50 $FLIP_CARD:  
{"cardId":11} 

 Player 1 02:05:50 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":11} 

 Player 1 02:05:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 02:05:50 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 

 Player 1 02:05:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:05:50 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 

 Player 1 02:05:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 1 02:05:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:05:50 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 

 Player 1 02:05:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 1 02:05:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 1 02:05:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:05:50 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:05:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:05:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:05:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:05:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:05:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:05:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:05:50 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:05:51 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 1 02:05:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 1 02:05:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:05:51 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 1 02:05:51 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 1 02:05:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 1 02:05:51 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:06:26 $SHOW_DECISION:  
{"startCardId":286,"endCardId":289} 

 Player 1 02:06:29 $NEXT_STACK_ID:  

 Player 1 02:06:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:06:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 1 02:06:29 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":286,"hasLockingStackEffect":false,"itemToPlayCardId":289,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 02:06:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 1 02:06:29 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":286,"hasLockingStackEffect":false,"itemToPlayCardId":289,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 02:06:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add ActivateItem 2 "}} 

 Player 2 02:06:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:06:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:06:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 02:06:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 1 02:06:30 $SHOW_DECISION:  
{"startCardId":289,"endCardId":227} 

 Player 1 02:06:33 $USE_ITEM:  
{"cardId":289} 

 Player 1 02:06:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:06:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 1 02:06:33 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":286,"hasLockingStackEffect":false,"itemToPlayCardId":289,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 02:06:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding ActivateItem 2"},"childOfId":10} 

 Player 1 02:06:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 1 02:06:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:06:34 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 1 02:06:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 1 02:06:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:06:34 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:06:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 02:06:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 02:06:34 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:06:34 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 1 02:06:34 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 1 02:06:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve ActivateItem 2 "}} 

 Player 1 02:06:34 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":289,"particleType":6} 

 Player 1 02:06:36 $DISABLE_PARTICLE_EFFECT:  
{"cardId":289,"particleType":6} 

 Player 1 02:06:53 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[250,251,238,234,240,260,272,233,276,237,255,273,242,265,268,254,231,259,229,252,280,244,239,275,266,257,264,256,262,278,248,228,270,236,267,274,263,271,243,232,241,247,281,246,279,249,235,230,277,245,269]} 

 Player 1 02:06:53 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[250,251,238,234,240,260,272,233,276,237,255,273,242,265,268,254,231,259,229,252,280,244,239,275,266,257,264,256,262,278,248,228,270,236,267,274,263,271,243,232,241,247,281,246,279,249,235,230,245,269]} 

 Player 1 02:06:53 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[250,251,238,234,240,260,272,233,276,237,255,273,242,265,268,254,231,259,229,252,280,244,239,275,266,257,264,256,262,278,248,228,270,236,267,274,263,271,243,232,241,247,281,246,279,249,235,230,269]} 

 Player 1 02:06:53 $DECK_ADD_TO_TOP:  
{"deckType":2,"cardId":245} 

 Player 1 02:06:53 $DECK_ADD_TO_TOP:  
{"deckType":2,"cardId":277} 

 Player 1 02:06:53 $DECK_ADD_TO_TOP:  
{"deckType":2,"cardId":261} 

 Player 1 02:06:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 1 02:06:53 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":286,"hasLockingStackEffect":false,"itemToPlayCardId":289,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 02:06:53 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:06:53 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":286,"hasLockingStackEffect":false,"itemToPlayCardId":289,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 02:06:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve ActivateItem 2  "}} 

 Player 1 02:06:54 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:06:54 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":286,"hasLockingStackEffect":false,"itemToPlayCardId":289,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 02:06:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve ActivateItem 2"},"childOfId":15} 

 Player 1 02:06:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 1 02:06:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:06:54 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:06:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 02:06:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 02:06:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 02:06:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 02:06:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 02:06:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 02:06:54 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:06:54 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 1 02:06:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 1 02:06:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:06:54 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 1 02:06:54 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 1 02:06:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 1 02:06:54 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:06:58 $SHOW_DECISION:  
{"startCardId":98,"endCardId":98,"flipEndCard":true} 

 Player 1 02:07:01 $NEXT_STACK_ID:  

 Player 1 02:07:01 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:07:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Curved Horn "} 

 Player 1 02:07:01 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":286,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":98,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 02:07:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Curved Horn "} 

 Player 1 02:07:01 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":286,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":98,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 02:07:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add PlayLootCardStackEffect 3 "}} 

 Player 1 02:07:01 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":98} 

 Player 1 02:07:01 $MOVE_CARD:  
{"moveIndex":8,"cardId":98,"placeID":300,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 02:07:01 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:07:01 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:07:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Curved Horn "} 

 Player 2 02:07:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Curved Horn "} 

 Player 2 02:07:01 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":98,"flipIfFlipped":true,"playerId":1} 

 Player 1 02:07:01 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":98} 

 Player 1 02:07:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Curved Horn: AddTrinket"} 

 Player 1 02:07:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:07:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Curved Horn: AddTrinket"} 

 Player 1 02:07:02 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":286,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":98,"lootPlayerId":1,"effectToDo":{"effectName":"AddTrinket","cardEffectNum":0,"cardPlayerId":1,"cardId":98,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 02:07:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding PlayLootCardStackEffect 3"},"childOfId":20} 

 Player 1 02:07:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 1 02:07:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:07:02 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 1 02:07:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 1 02:07:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:07:02 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:07:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Curved Horn "} 

 Player 2 02:07:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Curved Horn "} 

 Player 2 02:07:02 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:07:02 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 1 02:07:02 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 1 02:07:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve PlayLootCardStackEffect 3 "}} 

 Player 1 02:07:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Curved Horn: AddTrinket"} 

 Player 1 02:07:02 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":98,"particleType":6} 

 Player 1 02:07:04 $DISABLE_PARTICLE_EFFECT:  
{"cardId":98,"particleType":6} 

 Player 1 02:07:04 $CARD_ADD_TRINKET:  
{"cardId":98,"playerId":1,"addMuiliEffect":false} 

 Player 1 02:07:04 $REMOVE_FROM_PILE:  
{"cardId":98} 

 Player 1 02:07:04 $REGISTER_PASSIVE_ITEM:  
{"cardId":98} 

 Player 1 02:07:04 $MOVE_CARD:  
{"moveIndex":9,"cardId":98,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 

 Player 2 02:07:04 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":98,"flipIfFlipped":true,"playerId":1} 

 Player 1 02:07:04 $ADD_AN_ITEM:  
{"playerId":1,"cardId":98,"isReward":true} 

 Player 1 02:07:04 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":98}],"result":true,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 1 02:07:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Curved Horn: AddTrinket"} 

 Player 1 02:07:04 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":286,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":98,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 02:07:04 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:07:04 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":286,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":98,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 02:07:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Remove After Resolve PlayLootCardStackEffect 3  "}} 

 Player 1 02:07:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:07:05 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":286,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":98,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 02:07:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Response Remove After Resolve PlayLootCardStackEffect 3"},"childOfId":25} 

 Player 1 02:07:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Wait For Response From Player 2 "},"childOfId":25} 

 Player 1 02:07:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:07:05 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:07:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Curved Horn "} 

 Player 2 02:07:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Curved Horn "} 

 Player 2 02:07:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Curved Horn "} 

 Player 2 02:07:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Curved Horn "} 

 Player 2 02:07:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Curved Horn "} 

 Player 2 02:07:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Curved Horn "} 

 Player 2 02:07:05 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:07:05 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 1 02:07:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 1 "},"childOfId":25} 

 Player 1 02:07:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:07:05 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 1 02:07:05 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 1 02:07:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Stack Was Emptied "}} 

 Player 1 02:07:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:07:11 $SHOW_DECISION:  
{"startCardId":286,"endCardId":258} 

 Player 1 02:07:14 $NEXT_STACK_ID:  

 Player 1 02:07:14 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:07:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust"} 

 Player 1 02:07:14 $ADD_TO_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":286,"attackingPlayerCardId":286,"idOfCardBeingAttacked":258,"stackEffectType":4}} 

 Player 1 02:07:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust"} 

 Player 1 02:07:14 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":286,"attackingPlayerCardId":286,"idOfCardBeingAttacked":258,"stackEffectType":4}} 

 Player 1 02:07:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Add DeclareAttack 4 "}} 

 Player 1 02:07:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:07:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust"} 

 Player 1 02:07:14 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":286,"attackingPlayerCardId":286,"idOfCardBeingAttacked":258,"stackEffectType":4}} 

 Player 1 02:07:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Response Adding DeclareAttack 4"},"childOfId":30} 

 Player 1 02:07:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Wait For Response From Player 1 "},"childOfId":30} 

 Player 1 02:07:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:07:14 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 1 02:07:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 2 "},"childOfId":30} 

 Player 1 02:07:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:07:14 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:07:14 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:07:14 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:07:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust"} 

 Player 2 02:07:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust"} 

 Player 2 02:07:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust"} 

 Player 2 02:07:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust"} 

 Player 2 02:07:15 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":true} 

 Player 2 02:07:15 $SHOW_DECISION:  
{"startCardId":298,"endCardId":298} 

 Player 1 02:07:15 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 1 02:07:15 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 2 02:07:18 $NEXT_STACK_ID:  

 Player 2 02:07:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust"} 

 Player 2 02:07:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 activated The Lost"} 

 Player 2 02:07:18 $ADD_TO_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":298,"hasLockingStackEffect":false,"itemToPlayCardId":298,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 02:07:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 activated The Lost"} 

 Player 2 02:07:19 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":298,"hasLockingStackEffect":false,"itemToPlayCardId":298,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 02:07:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Add ActivateItem 5 "}} 

 Player 1 02:07:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust"} 

 Player 1 02:07:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust"} 

 Player 1 02:07:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 activated The Lost"} 

 Player 1 02:07:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 activated The Lost"} 

 Player 2 02:07:21 $SHOW_DECISION:  
{"startCardId":298,"endCardId":61,"flipEndCard":true} 

 Player 2 02:07:21 $RESPOND_TO:  
{"playerId":-1,"stackEffectResponse":false} 

 Player 2 02:07:24 $USE_ITEM:  
{"cardId":298} 

 Player 2 02:07:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:07:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 activated The Lost"} 

 Player 2 02:07:24 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":298,"hasLockingStackEffect":false,"itemToPlayCardId":298,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 02:07:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Response Adding ActivateItem 5"},"childOfId":34} 

 Player 2 02:07:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Wait For Response From Player 1 "},"childOfId":34} 

 Player 2 02:07:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:07:24 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:07:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 activated The Lost"} 

 Player 1 02:07:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 activated The Lost"} 

 Player 1 02:07:24 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:07:24 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 2 02:07:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Wait For Response From Player 2 "},"childOfId":34} 

 Player 2 02:07:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:07:24 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 2 02:07:24 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 02:07:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Resolve ActivateItem 5 "}} 

 Player 2 02:07:24 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":298,"particleType":6} 

 Player 2 02:07:26 $DISABLE_PARTICLE_EFFECT:  
{"cardId":298,"particleType":6} 

 Player 2 02:07:26 $NEXT_STACK_ID:  

 Player 2 02:07:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 activated The Lost"} 

 Player 2 02:07:26 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":61} 

 Player 2 02:07:26 $MOVE_CARD:  
{"moveIndex":10,"cardId":61,"placeID":300,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 02:07:26 $MOVE_CARD_END:  
{"moveIndex":10,"cardId":61,"flipIfFlipped":true,"playerId":2} 

 Player 2 02:07:26 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":61} 

 Player 2 02:07:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1): addMoney \n3:Player 2 activated The Lost"} 

 Player 2 02:07:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:07:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1): addMoney \n3:Player 2 activated The Lost"} 

 Player 2 02:07:26 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":298,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":61,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":61,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 02:07:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1): addMoney \n3:Player 2 activated The Lost"} 

 Player 2 02:07:26 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":286,"attackingPlayerCardId":286,"idOfCardBeingAttacked":258,"stackEffectType":4}} 

 Player 2 02:07:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1): addMoney \n3:Player 2 activated The Lost"} 

 Player 2 02:07:27 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":286,"attackingPlayerCardId":286,"idOfCardBeingAttacked":258,"stackEffectType":4}} 

 Player 2 02:07:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1): addMoney \n3:Player 2 activated The Lost"} 

 Player 2 02:07:27 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":298,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":61,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":61,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 02:07:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1): addMoney \n3:Player 2 activated The Lost"} 

 Player 2 02:07:27 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":298,"hasLockingStackEffect":false,"itemToPlayCardId":298,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 02:07:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1): addMoney \n3:Player 2 activated The Lost"} 

 Player 2 02:07:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1): addMoney \n3:Player 2 activated The Lost"} 

 Player 2 02:07:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1): addMoney \n3:Player 2 activated The Lost"} 

 Player 2 02:07:27 $REPLACE_STACK:  
{"currentStack":[{"entityId":4,"creatorCardId":286,"attackingPlayerCardId":286,"idOfCardBeingAttacked":258,"stackEffectType":4},{"entityId":6,"creatorCardId":298,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":61,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":61,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":5,"creatorCardId":298,"hasLockingStackEffect":false,"itemToPlayCardId":298,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 

 Player 2 02:07:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1): addMoney \n3:Player 2 activated The Lost"} 

 Player 2 02:07:27 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":298,"hasLockingStackEffect":false,"itemToPlayCardId":298,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 02:07:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1): addMoney"} 

 Player 2 02:07:27 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":298,"hasLockingStackEffect":false,"itemToPlayCardId":298,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 02:07:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Remove After Resolve ActivateItem 5  "}} 

 Player 2 02:07:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1): addMoney"} 

 Player 2 02:07:27 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":298,"hasLockingStackEffect":false,"itemToPlayCardId":298,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 02:07:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Response Remove After Resolve ActivateItem 5"},"childOfId":39} 

 Player 2 02:07:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Wait For Response From Player 1 "},"childOfId":39} 

 Player 2 02:07:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:07:27 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:07:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 activated The Lost"} 

 Player 1 02:07:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 activated The Lost"} 

 Player 1 02:07:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1) "} 

 Player 1 02:07:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1) "} 

 Player 1 02:07:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1) "} 

 Player 1 02:07:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1) "} 

 Player 1 02:07:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1) "} 

 Player 1 02:07:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1) "} 

 Player 1 02:07:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1) "} 

 Player 1 02:07:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1) "} 

 Player 1 02:07:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1) "} 

 Player 1 02:07:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1) "} 

 Player 1 02:07:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1) "} 

 Player 1 02:07:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1) "} 

 Player 1 02:07:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1) "} 

 Player 1 02:07:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1) "} 

 Player 1 02:07:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1)  \n3:Player 2 activated The Lost"} 

 Player 1 02:07:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1)  \n3:Player 2 activated The Lost"} 

 Player 1 02:07:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1)  \n3:Player 2 activated The Lost"} 

 Player 1 02:07:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1)  \n3:Player 2 activated The Lost"} 

 Player 1 02:07:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1)  \n3:Player 2 activated The Lost"} 

 Player 1 02:07:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1)  \n3:Player 2 activated The Lost"} 

 Player 1 02:07:28 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:07:28 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 2 02:07:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Wait For Response From Player 2 "},"childOfId":39} 

 Player 2 02:07:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:07:28 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 2 02:07:28 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 02:07:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Resolve PlayLootCardStackEffect 6 "}} 

 Player 2 02:07:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1): addMoney"} 

 Player 2 02:07:28 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":61,"particleType":6} 

 Player 2 02:07:30 $DISABLE_PARTICLE_EFFECT:  
{"cardId":61,"particleType":6} 

 Player 2 02:07:30 $SET_MONEY:  
{"playerId":2,"numOfCoins":7} 

 Player 2 02:07:30 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 2 02:07:30 $REMOVE_FROM_PILE:  
{"cardId":61} 

 Player 2 02:07:30 $MOVE_CARD:  
{"moveIndex":11,"cardId":61,"placeID":301,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 02:07:30 $MOVE_CARD_END:  
{"moveIndex":11,"cardId":61,"flipIfFlipped":true,"playerId":2} 

 Player 2 02:07:30 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":61} 

 Player 2 02:07:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1): addMoney"} 

 Player 2 02:07:30 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":298,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":61,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 02:07:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust"} 

 Player 2 02:07:30 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":298,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":61,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 02:07:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Remove After Resolve PlayLootCardStackEffect 6  "}} 

 Player 2 02:07:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust"} 

 Player 2 02:07:30 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":298,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":61,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 02:07:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Response Remove After Resolve PlayLootCardStackEffect 6"},"childOfId":44} 

 Player 2 02:07:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Wait For Response From Player 2 "},"childOfId":44} 

 Player 2 02:07:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:07:31 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 2 02:07:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Wait For Response From Player 1 "},"childOfId":44} 

 Player 2 02:07:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:07:31 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:07:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1) "} 

 Player 1 02:07:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1) "} 

 Player 1 02:07:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1) "} 

 Player 1 02:07:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1) "} 

 Player 1 02:07:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1) "} 

 Player 1 02:07:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1) "} 

 Player 1 02:07:31 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:07:31 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 2 02:07:31 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 2 02:07:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Resolve DeclareAttack 4 "}} 

 Player 2 02:07:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust"} 

 Player 2 02:07:31 $DO_STACK_EFFECT:  
{"originPlayerId":2,"playerId":1,"currentStack":[{"entityId":4,"creatorCardId":286,"attackingPlayerCardId":286,"idOfCardBeingAttacked":258,"stackEffectType":4}]} 

 Player 1 02:07:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust"} 

 Player 1 02:07:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust"} 

 Player 1 02:07:31 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":258,"particleType":5} 

 Player 1 02:07:31 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":3,"originStackId":4},"isAfterActivation":true,"index":3} 

 Player 1 02:07:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust"} 

 Player 1 02:07:31 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":286,"attackingPlayerCardId":286,"idOfCardBeingAttacked":258,"stackEffectType":4}} 

 Player 1 02:07:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust"} 

 Player 1 02:07:31 $FINISH_DO_STACK_EFFECT:  
{"playerId":2,"newStack":[{"entityId":4,"creatorCardId":286,"attackingPlayerCardId":286,"idOfCardBeingAttacked":258,"stackEffectType":4}]} 

 Player 2 02:07:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust"} 

 Player 2 02:07:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust"} 

 Player 2 02:07:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust"} 

 Player 2 02:07:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust"} 

 Player 2 02:07:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust"} 

 Player 2 02:07:31 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":286,"attackingPlayerCardId":286,"idOfCardBeingAttacked":258,"stackEffectType":4}} 

 Player 2 02:07:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust"} 

 Player 2 02:07:31 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":286,"attackingPlayerCardId":286,"idOfCardBeingAttacked":258,"stackEffectType":4}} 

 Player 2 02:07:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust"} 

 Player 2 02:07:31 $REPLACE_STACK:  
{"currentStack":[{"entityId":4,"creatorCardId":286,"attackingPlayerCardId":286,"idOfCardBeingAttacked":258,"stackEffectType":4}]} 

 Player 2 02:07:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:07:32 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":286,"attackingPlayerCardId":286,"idOfCardBeingAttacked":258,"stackEffectType":4}} 

 Player 2 02:07:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Remove After Resolve DeclareAttack 4  "}} 

 Player 2 02:07:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:07:32 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":286,"attackingPlayerCardId":286,"idOfCardBeingAttacked":258,"stackEffectType":4}} 

 Player 2 02:07:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Response Remove After Resolve DeclareAttack 4"},"childOfId":49} 

 Player 2 02:07:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Wait For Response From Player 1 "},"childOfId":49} 

 Player 2 02:07:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:07:32 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:07:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust"} 

 Player 1 02:07:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust"} 

 Player 1 02:07:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust"} 

 Player 1 02:07:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust"} 

 Player 1 02:07:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust"} 

 Player 1 02:07:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust"} 

 Player 1 02:07:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust"} 

 Player 1 02:07:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust"} 

 Player 1 02:07:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust"} 

 Player 1 02:07:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust"} 

 Player 1 02:07:32 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:07:32 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 2 02:07:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Wait For Response From Player 2 "},"childOfId":49} 

 Player 2 02:07:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:07:32 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 2 02:07:32 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 2 02:07:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Stack Was Emptied "}} 

 Player 2 02:07:32 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 02:07:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:07:32 $TURN_PLAYER_DO_STACK_EFFECT:  
{"playerId":1} 

 Player 1 02:07:49 $NEXT_STACK_ID:  

 Player 1 02:07:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:07:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster>"} 

 Player 1 02:07:49 $ADD_TO_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":286,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 1 02:07:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster>"} 

 Player 1 02:07:49 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":286,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 1 02:07:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Add AttackRoll 7 "}} 

 Player 1 02:07:49 $ROLL_DICE:  
{"playerId":1} 

 Player 2 02:07:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:07:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:07:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster>"} 

 Player 2 02:07:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster>"} 

 Player 1 02:07:51 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":5} 

 Player 1 02:07:51 $UPDATE_STACK_VIS:  
{"stackId":7,"text":"player rolled 5 vs Lust<Monster>"} 

 Player 1 02:07:51 $SHOW_DICE_ROLL:  
{"stackId":7} 

 Player 1 02:07:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 5 vs Lust<Monster>"} 

 Player 1 02:07:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:07:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 5 vs Lust<Monster>"} 

 Player 1 02:07:54 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":286,"numberRolled":5,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 1 02:07:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Response Adding AttackRoll 7"},"childOfId":54} 

 Player 1 02:07:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":56,"_text":"Wait For Response From Player 1 "},"childOfId":54} 

 Player 1 02:07:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:07:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster>"} 

 Player 2 02:07:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster>"} 

 Player 1 02:08:28 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 1 02:08:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":57,"_text":"Wait For Response From Player 2 "},"childOfId":54} 

 Player 1 02:08:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:08:28 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:08:28 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:08:28 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 1 02:08:28 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 1 02:08:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":58,"_text":"Resolve AttackRoll 7 "}} 

 Player 1 02:08:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":59,"_text":"Added 0 to original roll"}} 

 Player 1 02:08:28 $LOG_ERROR:  
{"message":"\"Cannot read property 'name' of null\"","stack":"\"TypeError: Cannot read property 'name' of null\\n    at CardOwnerFirstAttackRollOfTurn.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardConditions/CardOwnerFirstAttackRollOfTurn.js:27:46)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\\n    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\\n    at new Promise (<anonymous>)\\n    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\\n    at CardOwnerFirstAttackRollOfTurn.testCondition (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardConditions/CardOwnerFirstAttackRollOfTurn.js:20:16)\\n    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:298:56)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\""} 
//////Error From Player 1////
  

 Player 1 02:08:28 $LOG_ERROR:  
//////Error From Player 1////

 "\"Cannot read property 'name' of null\""

 + "\"TypeError: Cannot read property 'name' of null\
    at CardOwnerFirstAttackRollOfTurn.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardConditions/CardOwnerFirstAttackRollOfTurn.js:27:46)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\
    at new Promise (<anonymous>)\
    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\
    at CardOwnerFirstAttackRollOfTurn.testCondition (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardConditions/CardOwnerFirstAttackRollOfTurn.js:20:16)\
    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:298:56)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\""

////// 
//////Error From Player 1////

 "\"Cannot read property 'name' of null\""

 + "\"TypeError: Cannot read property 'name' of null\
    at CardOwnerFirstAttackRollOfTurn.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardConditions/CardOwnerFirstAttackRollOfTurn.js:27:46)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\
    at new Promise (<anonymous>)\
    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\
    at CardOwnerFirstAttackRollOfTurn.testCondition (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardConditions/CardOwnerFirstAttackRollOfTurn.js:20:16)\
    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:298:56)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\""

////// 

 Player 1 02:08:28 $NEXT_STACK_ID:  

 Player 1 02:08:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 5 vs Lust<Monster>"} 

 Player 1 02:08:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:08:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Lust \n2:Player 1 rolled 5 vs Lust<Monster>"} 

 Player 1 02:08:29 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":286,"entityToDoDamageCardId":286,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 02:08:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Lust \n2:Player 1 rolled 5 vs Lust<Monster>"} 

 Player 1 02:08:29 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":286,"numberRolled":5,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 1 02:08:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Lust \n2:Player 1 rolled 5 vs Lust<Monster>"} 

 Player 1 02:08:29 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":286,"entityToDoDamageCardId":286,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 02:08:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Lust \n2:Player 1 rolled 5 vs Lust<Monster>"} 

 Player 1 02:08:29 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":286,"numberRolled":5,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 1 02:08:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Lust \n2:Player 1 rolled 5 vs Lust<Monster>"} 

 Player 1 02:08:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Lust \n2:Player 1 rolled 5 vs Lust<Monster>"} 

 Player 1 02:08:29 $REPLACE_STACK:  
{"currentStack":[{"entityId":8,"creatorCardId":286,"entityToDoDamageCardId":286,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":7,"creatorCardId":286,"numberRolled":5,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":258}]} 

 Player 1 02:08:29 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":4,"originStackId":7},"isAfterActivation":true,"index":4} 

 Player 1 02:08:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Lust \n2:Player 1 rolled 5 vs Lust<Monster>"} 

 Player 1 02:08:29 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":286,"numberRolled":5,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 1 02:08:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Lust"} 

 Player 1 02:08:29 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":286,"numberRolled":5,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 1 02:08:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":60,"_text":"Remove After Resolve AttackRoll 7  "}} 

 Player 1 02:08:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Lust"} 

 Player 1 02:08:29 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":286,"numberRolled":5,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 1 02:08:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":61,"_text":"Response Remove After Resolve AttackRoll 7"},"childOfId":60} 

 Player 1 02:08:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":62,"_text":"Wait For Response From Player 1 "},"childOfId":60} 

 Player 1 02:08:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:08:29 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 1 02:08:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":63,"_text":"Wait For Response From Player 2 "},"childOfId":60} 

 Player 1 02:08:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:08:30 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:08:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster>"} 

 Player 2 02:08:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster>"} 

 Player 2 02:08:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Lust"} 

 Player 2 02:08:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Lust"} 

 Player 2 02:08:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Lust"} 

 Player 2 02:08:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Lust"} 

 Player 2 02:08:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Lust"} 

 Player 2 02:08:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Lust"} 

 Player 2 02:08:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Lust"} 

 Player 2 02:08:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Lust"} 

 Player 2 02:08:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Lust"} 

 Player 2 02:08:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Lust"} 

 Player 2 02:08:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Lust \n2:Player 1 is rolling against Lust<Monster>"} 

 Player 2 02:08:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Lust \n2:Player 1 is rolling against Lust<Monster>"} 

 Player 2 02:08:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Lust \n2:Player 1 is rolling against Lust<Monster>"} 

 Player 2 02:08:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Lust \n2:Player 1 is rolling against Lust<Monster>"} 

 Player 2 02:08:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Lust \n2:Player 1 is rolling against Lust<Monster>"} 

 Player 2 02:08:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Lust \n2:Player 1 is rolling against Lust<Monster>"} 

 Player 2 02:08:30 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:08:30 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 1 02:08:30 $ACTION_MASSAGE_REMOVE:  
{"id":61} 

 Player 1 02:08:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":64,"_text":"Resolve CombatDamage 8 "}} 

 Player 1 02:08:30 $UPDATE_STACK_VIS:  
{"stackId":8,"text":"Cain will deal 1 combat damage to Lust"} 

 Player 1 02:08:30 $MONSTER_GET_DAMAGED:  
{"cardId":258,"hpLeft":1,"damageDealerId":286} 

 Player 1 02:08:30 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":286}],"result":null,"preventMethod":false,"methodScopeId":258,"scopeIsPlayer":false,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 1 02:08:30 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":5},{"type":0,"number":286},{"type":0,"number":258}],"result":null,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":6,"originStackId":8},"isAfterActivation":true,"index":6} 

 Player 1 02:08:30 $NEXT_STACK_ID:  

 Player 1 02:08:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Lust"} 

 Player 1 02:08:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Lust \n2:Activate Lust effect DealDamage<DealDamage>"} 

 Player 1 02:08:30 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":9,"creatorCardId":258,"hasLockingStackEffect":false,"cardActivatorId":258,"cardWithEffectId":258,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":258,"cardId":258,"effctType":0},"isAfterActivation":true,"index":6,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 02:08:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Lust \n2:Activate Lust effect DealDamage<DealDamage>"} 

 Player 1 02:08:30 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":9,"creatorCardId":258,"hasLockingStackEffect":false,"cardActivatorId":258,"cardWithEffectId":258,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":258,"cardId":258,"effctType":0},"isAfterActivation":true,"index":6,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 02:08:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":65,"_text":"Add ActivatePassiveEffect 9 "}} 

 Player 1 02:08:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Lust \n2:Activate Lust effect DealDamage<DealDamage>"} 

 Player 1 02:08:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Lust \n2:Activate Lust effect DealDamage<DealDamage>"} 

 Player 1 02:08:31 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[286],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":258,"effectCardPlayer":258},"entityId":9,"creatorCardId":258,"hasLockingStackEffect":false,"cardActivatorId":258,"cardWithEffectId":258,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":258,"cardId":258,"effctType":0},"isAfterActivation":true,"index":6,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 02:08:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":66,"_text":"Response Adding ActivatePassiveEffect 9"},"childOfId":65} 

 Player 1 02:08:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":67,"_text":"Wait For Response From Player 2 "},"childOfId":65} 

 Player 1 02:08:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:08:31 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:08:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Lust"} 

 Player 2 02:08:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Lust"} 

 Player 2 02:08:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Lust \n2:Activate Lust "} 

 Player 2 02:08:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Lust \n2:Activate Lust "} 

 Player 2 02:08:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Lust \n2:Activate Lust "} 

 Player 2 02:08:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Lust \n2:Activate Lust "} 

 Player 2 02:08:31 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:08:31 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 1 02:08:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":68,"_text":"Wait For Response From Player 1 "},"childOfId":65} 

 Player 1 02:08:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:08:31 $ACTION_MASSAGE_REMOVE:  
{"id":68} 

 Player 1 02:08:31 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 1 02:08:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":69,"_text":"Resolve ActivatePassiveEffect 9 "}} 

 Player 1 02:08:31 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":258,"particleType":6} 

 Player 1 02:08:33 $DISABLE_PARTICLE_EFFECT:  
{"cardId":258,"particleType":6} 

 Player 1 02:08:33 $PLAYER_GET_HIT:  
{"playerId":1,"damage":1,"damageDealerId":258} 

 Player 1 02:08:33 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":258}],"result":null,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 

 Player 1 02:08:33 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":5},{"type":0,"number":286},{"type":0,"number":258}],"result":null,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":false,"index":6,"originStackId":8},"isAfterActivation":true,"index":6} 

 Player 1 02:08:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Lust \n2:Activate Lust effect DealDamage<DealDamage>"} 

 Player 1 02:08:33 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[286],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":258,"effectCardPlayer":258},"entityId":9,"creatorCardId":258,"hasLockingStackEffect":false,"cardActivatorId":258,"cardWithEffectId":258,"isAfterActivation":true,"index":6,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 02:08:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Lust"} 

 Player 1 02:08:33 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[286],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":258,"effectCardPlayer":258},"entityId":9,"creatorCardId":258,"hasLockingStackEffect":false,"cardActivatorId":258,"cardWithEffectId":258,"isAfterActivation":true,"index":6,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 02:08:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":70,"_text":"Remove After Resolve ActivatePassiveEffect 9  "}} 

 Player 1 02:08:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Lust"} 

 Player 1 02:08:33 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[286],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":258,"effectCardPlayer":258},"entityId":9,"creatorCardId":258,"hasLockingStackEffect":false,"cardActivatorId":258,"cardWithEffectId":258,"isAfterActivation":true,"index":6,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 02:08:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":71,"_text":"Response Remove After Resolve ActivatePassiveEffect 9"},"childOfId":70} 

 Player 1 02:08:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":72,"_text":"Wait For Response From Player 1 "},"childOfId":70} 

 Player 1 02:08:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:08:33 $ACTION_MASSAGE_REMOVE:  
{"id":72} 

 Player 1 02:08:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":73,"_text":"Wait For Response From Player 2 "},"childOfId":70} 

 Player 1 02:08:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:08:34 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:08:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Lust \n2:Activate Lust "} 

 Player 2 02:08:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Lust \n2:Activate Lust "} 

 Player 2 02:08:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Lust \n2:Activate Lust "} 

 Player 2 02:08:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Lust \n2:Activate Lust "} 

 Player 2 02:08:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Lust \n2:Activate Lust "} 

 Player 2 02:08:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Lust \n2:Activate Lust "} 

 Player 2 02:08:34 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:08:34 $ACTION_MASSAGE_REMOVE:  
{"id":73} 

 Player 1 02:08:34 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 1 02:08:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":74,"_text":"Resolve CombatDamage 8 "}} 

 Player 1 02:08:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Lust"} 

 Player 1 02:08:34 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":286,"entityToDoDamageCardId":286,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 02:08:34 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:08:34 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":286,"entityToDoDamageCardId":286,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 02:08:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":75,"_text":"Remove After Resolve CombatDamage 8  "}} 

 Player 1 02:08:34 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:08:34 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":8,"creatorCardId":286,"entityToDoDamageCardId":286,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 02:08:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":76,"_text":"Response Remove After Resolve CombatDamage 8"},"childOfId":75} 

 Player 1 02:08:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":77,"_text":"Wait For Response From Player 2 "},"childOfId":75} 

 Player 1 02:08:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:08:34 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:08:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Lust"} 

 Player 2 02:08:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Lust"} 

 Player 2 02:08:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Lust"} 

 Player 2 02:08:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Lust"} 

 Player 2 02:08:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Lust"} 

 Player 2 02:08:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Lust"} 

 Player 2 02:08:34 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:08:34 $ACTION_MASSAGE_REMOVE:  
{"id":77} 

 Player 1 02:08:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":78,"_text":"Wait For Response From Player 1 "},"childOfId":75} 

 Player 1 02:08:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:08:34 $ACTION_MASSAGE_REMOVE:  
{"id":78} 

 Player 1 02:08:34 $ACTION_MASSAGE_REMOVE:  
{"id":76} 

 Player 1 02:08:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":79,"_text":"Stack Was Emptied "}} 

 Player 1 02:08:34 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:08:58 $NEXT_STACK_ID:  

 Player 1 02:08:58 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:08:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster>"} 

 Player 1 02:08:58 $ADD_TO_STACK:  
{"stackEffect":{"entityId":10,"creatorCardId":286,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 1 02:08:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster>"} 

 Player 1 02:08:58 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":286,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 1 02:08:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":80,"_text":"Add AttackRoll 10 "}} 

 Player 1 02:08:58 $ROLL_DICE:  
{"playerId":1} 

 Player 2 02:08:58 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:08:58 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:08:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster>"} 

 Player 2 02:08:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster>"} 

 Player 1 02:08:59 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":2} 

 Player 1 02:08:59 $UPDATE_STACK_VIS:  
{"stackId":10,"text":"player rolled 2 vs Lust<Monster>"} 

 Player 1 02:09:00 $SHOW_DICE_ROLL:  
{"stackId":10} 

 Player 1 02:09:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Lust<Monster>"} 

 Player 1 02:09:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:09:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Lust<Monster>"} 

 Player 1 02:09:03 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":286,"numberRolled":2,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 1 02:09:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":81,"_text":"Response Adding AttackRoll 10"},"childOfId":80} 

 Player 1 02:09:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":82,"_text":"Wait For Response From Player 1 "},"childOfId":80} 

 Player 1 02:09:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:09:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster>"} 

 Player 2 02:09:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster>"} 

 Player 1 02:09:04 $SHOW_DECISION:  
{"startCardId":286,"endCardId":286} 

 Player 1 02:09:07 $NEXT_STACK_ID:  

 Player 1 02:09:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Lust<Monster>"} 

 Player 1 02:09:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Lust<Monster> \n2:Player 1 activated Cain"} 

 Player 1 02:09:07 $ADD_TO_STACK:  
{"stackEffect":{"entityId":11,"creatorCardId":286,"hasLockingStackEffect":false,"itemToPlayCardId":286,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 02:09:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Lust<Monster> \n2:Player 1 activated Cain"} 

 Player 1 02:09:07 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":286,"hasLockingStackEffect":false,"itemToPlayCardId":286,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 02:09:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":83,"_text":"Add ActivateItem 11 "}} 

 Player 2 02:09:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster>"} 

 Player 2 02:09:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster>"} 

 Player 2 02:09:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster> \n2:Player 1 activated Cain"} 

 Player 2 02:09:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster> \n2:Player 1 activated Cain"} 

 Player 1 02:09:15 $SHOW_DECISION:  
{"startCardId":286,"endCardId":62,"flipEndCard":true} 

 Player 1 02:09:18 $USE_ITEM:  
{"cardId":286} 

 Player 1 02:09:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:09:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Lust<Monster> \n2:Player 1 activated Cain"} 

 Player 1 02:09:18 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":11,"creatorCardId":286,"hasLockingStackEffect":false,"itemToPlayCardId":286,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 02:09:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":84,"_text":"Response Adding ActivateItem 11"},"childOfId":83} 

 Player 1 02:09:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":85,"_text":"Wait For Response From Player 1 "},"childOfId":83} 

 Player 1 02:09:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:09:18 $ACTION_MASSAGE_REMOVE:  
{"id":85} 

 Player 1 02:09:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":86,"_text":"Wait For Response From Player 2 "},"childOfId":83} 

 Player 1 02:09:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:09:18 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:09:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster> \n2:Player 1 activated Cain"} 

 Player 2 02:09:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster> \n2:Player 1 activated Cain"} 

 Player 2 02:09:18 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:09:18 $ACTION_MASSAGE_REMOVE:  
{"id":86} 

 Player 1 02:09:18 $ACTION_MASSAGE_REMOVE:  
{"id":84} 

 Player 1 02:09:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":87,"_text":"Resolve ActivateItem 11 "}} 

 Player 1 02:09:18 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":286,"particleType":6} 

 Player 1 02:09:20 $DISABLE_PARTICLE_EFFECT:  
{"cardId":286,"particleType":6} 

 Player 1 02:09:20 $NEXT_STACK_ID:  

 Player 1 02:09:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Lust<Monster> \n2:Player 1 activated Cain"} 

 Player 1 02:09:20 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":62} 

 Player 1 02:09:20 $MOVE_CARD:  
{"moveIndex":12,"cardId":62,"placeID":300,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 02:09:21 $MOVE_CARD_END:  
{"moveIndex":12,"cardId":62,"flipIfFlipped":true,"playerId":1} 

 Player 1 02:09:21 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":62} 

 Player 1 02:09:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Lust<Monster> \n2:Player 1 play 4 Cents(2): addMoney \n3:Player 1 activated Cain"} 

 Player 1 02:09:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:09:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Lust<Monster> \n2:Player 1 play 4 Cents(2): addMoney \n3:Player 1 activated Cain"} 

 Player 1 02:09:21 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":12,"creatorCardId":286,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":62,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":62,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 02:09:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Lust<Monster> \n2:Player 1 play 4 Cents(2): addMoney \n3:Player 1 activated Cain"} 

 Player 1 02:09:21 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":286,"numberRolled":2,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 1 02:09:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Lust<Monster> \n2:Player 1 play 4 Cents(2): addMoney \n3:Player 1 activated Cain"} 

 Player 1 02:09:21 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":286,"numberRolled":2,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 1 02:09:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Lust<Monster> \n2:Player 1 play 4 Cents(2): addMoney \n3:Player 1 activated Cain"} 

 Player 1 02:09:21 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":12,"creatorCardId":286,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":62,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":62,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 02:09:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Lust<Monster> \n2:Player 1 play 4 Cents(2): addMoney \n3:Player 1 activated Cain"} 

 Player 1 02:09:21 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":286,"hasLockingStackEffect":false,"itemToPlayCardId":286,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 02:09:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Lust<Monster> \n2:Player 1 play 4 Cents(2): addMoney \n3:Player 1 activated Cain"} 

 Player 1 02:09:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Lust<Monster> \n2:Player 1 play 4 Cents(2): addMoney \n3:Player 1 activated Cain"} 

 Player 1 02:09:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Lust<Monster> \n2:Player 1 play 4 Cents(2): addMoney \n3:Player 1 activated Cain"} 

 Player 1 02:09:21 $REPLACE_STACK:  
{"currentStack":[{"entityId":10,"creatorCardId":286,"numberRolled":2,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":258},{"entityId":12,"creatorCardId":286,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":62,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":62,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":11,"creatorCardId":286,"hasLockingStackEffect":false,"itemToPlayCardId":286,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 

 Player 1 02:09:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Lust<Monster> \n2:Player 1 play 4 Cents(2): addMoney \n3:Player 1 activated Cain"} 

 Player 1 02:09:21 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":11,"creatorCardId":286,"hasLockingStackEffect":false,"itemToPlayCardId":286,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 02:09:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Lust<Monster> \n2:Player 1 play 4 Cents(2): addMoney"} 

 Player 1 02:09:21 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":286,"hasLockingStackEffect":false,"itemToPlayCardId":286,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 02:09:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":88,"_text":"Remove After Resolve ActivateItem 11  "}} 

 Player 1 02:09:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Lust<Monster> \n2:Player 1 play 4 Cents(2): addMoney"} 

 Player 1 02:09:21 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":11,"creatorCardId":286,"hasLockingStackEffect":false,"itemToPlayCardId":286,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 02:09:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":89,"_text":"Response Remove After Resolve ActivateItem 11"},"childOfId":88} 

 Player 1 02:09:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":90,"_text":"Wait For Response From Player 1 "},"childOfId":88} 

 Player 1 02:09:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:09:22 $ACTION_MASSAGE_REMOVE:  
{"id":90} 

 Player 1 02:09:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":91,"_text":"Wait For Response From Player 2 "},"childOfId":88} 

 Player 1 02:09:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:09:22 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:09:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster> \n2:Player 1 activated Cain"} 

 Player 2 02:09:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster> \n2:Player 1 activated Cain"} 

 Player 2 02:09:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster> \n2:Player 1 play 4 Cents(2) "} 

 Player 2 02:09:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster> \n2:Player 1 play 4 Cents(2) "} 

 Player 2 02:09:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster> \n2:Player 1 play 4 Cents(2) "} 

 Player 2 02:09:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster> \n2:Player 1 play 4 Cents(2) "} 

 Player 2 02:09:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster> \n2:Player 1 play 4 Cents(2) "} 

 Player 2 02:09:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster> \n2:Player 1 play 4 Cents(2) "} 

 Player 2 02:09:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster> \n2:Player 1 play 4 Cents(2) "} 

 Player 2 02:09:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster> \n2:Player 1 play 4 Cents(2) "} 

 Player 2 02:09:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster> \n2:Player 1 play 4 Cents(2) "} 

 Player 2 02:09:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster> \n2:Player 1 play 4 Cents(2) "} 

 Player 2 02:09:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster> \n2:Player 1 play 4 Cents(2) "} 

 Player 2 02:09:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster> \n2:Player 1 play 4 Cents(2) "} 

 Player 2 02:09:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster> \n2:Player 1 play 4 Cents(2) "} 

 Player 2 02:09:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster> \n2:Player 1 play 4 Cents(2) "} 

 Player 2 02:09:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster> \n2:Player 1 play 4 Cents(2)  \n3:Player 1 activated Cain"} 

 Player 2 02:09:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster> \n2:Player 1 play 4 Cents(2)  \n3:Player 1 activated Cain"} 

 Player 2 02:09:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster> \n2:Player 1 play 4 Cents(2)  \n3:Player 1 activated Cain"} 

 Player 2 02:09:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster> \n2:Player 1 play 4 Cents(2)  \n3:Player 1 activated Cain"} 

 Player 2 02:09:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster> \n2:Player 1 play 4 Cents(2)  \n3:Player 1 activated Cain"} 

 Player 2 02:09:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster> \n2:Player 1 play 4 Cents(2)  \n3:Player 1 activated Cain"} 

 Player 2 02:09:22 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:09:22 $ACTION_MASSAGE_REMOVE:  
{"id":91} 

 Player 1 02:09:22 $ACTION_MASSAGE_REMOVE:  
{"id":89} 

 Player 1 02:09:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":92,"_text":"Resolve PlayLootCardStackEffect 12 "}} 

 Player 1 02:09:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Lust<Monster> \n2:Player 1 play 4 Cents(2): addMoney"} 

 Player 1 02:09:22 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":62,"particleType":6} 

 Player 1 02:09:24 $DISABLE_PARTICLE_EFFECT:  
{"cardId":62,"particleType":6} 

 Player 1 02:09:24 $SET_MONEY:  
{"playerId":1,"numOfCoins":7} 

 Player 1 02:09:24 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":8,"originStackId":-1},"isAfterActivation":true,"index":8} 

 Player 1 02:09:24 $REMOVE_FROM_PILE:  
{"cardId":62} 

 Player 1 02:09:24 $MOVE_CARD:  
{"moveIndex":13,"cardId":62,"placeID":301,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 02:09:25 $MOVE_CARD_END:  
{"moveIndex":13,"cardId":62,"flipIfFlipped":true,"playerId":1} 

 Player 1 02:09:25 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":62} 

 Player 1 02:09:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Lust<Monster> \n2:Player 1 play 4 Cents(2): addMoney"} 

 Player 1 02:09:25 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":12,"creatorCardId":286,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":62,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 02:09:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Lust<Monster>"} 

 Player 1 02:09:25 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":12,"creatorCardId":286,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":62,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 02:09:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":93,"_text":"Remove After Resolve PlayLootCardStackEffect 12  "}} 

 Player 1 02:09:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Lust<Monster>"} 

 Player 1 02:09:25 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":12,"creatorCardId":286,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":62,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 02:09:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":94,"_text":"Response Remove After Resolve PlayLootCardStackEffect 12"},"childOfId":93} 

 Player 1 02:09:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":95,"_text":"Wait For Response From Player 2 "},"childOfId":93} 

 Player 1 02:09:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:09:25 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:09:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster> \n2:Player 1 play 4 Cents(2) "} 

 Player 2 02:09:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster> \n2:Player 1 play 4 Cents(2) "} 

 Player 2 02:09:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster> \n2:Player 1 play 4 Cents(2) "} 

 Player 2 02:09:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster> \n2:Player 1 play 4 Cents(2) "} 

 Player 2 02:09:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster> \n2:Player 1 play 4 Cents(2) "} 

 Player 2 02:09:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster> \n2:Player 1 play 4 Cents(2) "} 

 Player 2 02:09:25 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:09:25 $ACTION_MASSAGE_REMOVE:  
{"id":95} 

 Player 1 02:09:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":96,"_text":"Wait For Response From Player 1 "},"childOfId":93} 

 Player 1 02:09:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:09:25 $ACTION_MASSAGE_REMOVE:  
{"id":96} 

 Player 1 02:09:25 $ACTION_MASSAGE_REMOVE:  
{"id":94} 

 Player 1 02:09:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":97,"_text":"Resolve AttackRoll 10 "}} 

 Player 1 02:09:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":98,"_text":"Added 0 to original roll"}} 

 Player 1 02:09:26 $LOG_ERROR:  
{"message":"\"Cannot read property 'name' of null\"","stack":"\"TypeError: Cannot read property 'name' of null\\n    at CardOwnerFirstAttackRollOfTurn.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardConditions/CardOwnerFirstAttackRollOfTurn.js:27:46)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\\n    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\\n    at new Promise (<anonymous>)\\n    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\\n    at CardOwnerFirstAttackRollOfTurn.testCondition (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardConditions/CardOwnerFirstAttackRollOfTurn.js:20:16)\\n    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:298:56)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\""} 
//////Error From Player 1////
  

 Player 1 02:09:26 $LOG_ERROR:  
//////Error From Player 1////

 "\"Cannot read property 'name' of null\""

 + "\"TypeError: Cannot read property 'name' of null\
    at CardOwnerFirstAttackRollOfTurn.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardConditions/CardOwnerFirstAttackRollOfTurn.js:27:46)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\
    at new Promise (<anonymous>)\
    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\
    at CardOwnerFirstAttackRollOfTurn.testCondition (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardConditions/CardOwnerFirstAttackRollOfTurn.js:20:16)\
    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:298:56)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\""

////// 
//////Error From Player 1////

 "\"Cannot read property 'name' of null\""

 + "\"TypeError: Cannot read property 'name' of null\
    at CardOwnerFirstAttackRollOfTurn.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardConditions/CardOwnerFirstAttackRollOfTurn.js:27:46)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\
    at new Promise (<anonymous>)\
    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\
    at CardOwnerFirstAttackRollOfTurn.testCondition (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardConditions/CardOwnerFirstAttackRollOfTurn.js:20:16)\
    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:298:56)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\""

////// 

 Player 1 02:09:26 $NEXT_STACK_ID:  

 Player 1 02:09:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Lust<Monster>"} 

 Player 1 02:09:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:09:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust combat damage to Cain \n2:Player 1 rolled 2 vs Lust<Monster>"} 

 Player 1 02:09:26 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":13,"creatorCardId":286,"entityToDoDamageCardId":258,"entityToTakeDamageCardId":286,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 02:09:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust combat damage to Cain \n2:Player 1 rolled 2 vs Lust<Monster>"} 

 Player 1 02:09:26 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":286,"numberRolled":2,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 1 02:09:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust combat damage to Cain \n2:Player 1 rolled 2 vs Lust<Monster>"} 

 Player 1 02:09:26 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":13,"creatorCardId":286,"entityToDoDamageCardId":258,"entityToTakeDamageCardId":286,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 02:09:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust combat damage to Cain \n2:Player 1 rolled 2 vs Lust<Monster>"} 

 Player 1 02:09:26 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":286,"numberRolled":2,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 1 02:09:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust combat damage to Cain \n2:Player 1 rolled 2 vs Lust<Monster>"} 

 Player 1 02:09:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust combat damage to Cain \n2:Player 1 rolled 2 vs Lust<Monster>"} 

 Player 1 02:09:26 $REPLACE_STACK:  
{"currentStack":[{"entityId":13,"creatorCardId":286,"entityToDoDamageCardId":258,"entityToTakeDamageCardId":286,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":10,"creatorCardId":286,"numberRolled":2,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":258}]} 

 Player 1 02:09:26 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":2},{"type":2,"number":1},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":9,"originStackId":10},"isAfterActivation":true,"index":9} 

 Player 1 02:09:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust combat damage to Cain \n2:Player 1 rolled 2 vs Lust<Monster>"} 

 Player 1 02:09:26 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":286,"numberRolled":2,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 1 02:09:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust combat damage to Cain"} 

 Player 1 02:09:26 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":286,"numberRolled":2,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 1 02:09:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":99,"_text":"Remove After Resolve AttackRoll 10  "}} 

 Player 1 02:09:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust combat damage to Cain"} 

 Player 1 02:09:27 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":10,"creatorCardId":286,"numberRolled":2,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 1 02:09:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":100,"_text":"Response Remove After Resolve AttackRoll 10"},"childOfId":99} 

 Player 1 02:09:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":101,"_text":"Wait For Response From Player 1 "},"childOfId":99} 

 Player 1 02:09:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:09:27 $ACTION_MASSAGE_REMOVE:  
{"id":101} 

 Player 1 02:09:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":102,"_text":"Wait For Response From Player 2 "},"childOfId":99} 

 Player 1 02:09:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:09:27 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:09:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster>"} 

 Player 2 02:09:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster>"} 

 Player 2 02:09:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust combat damage to Cain"} 

 Player 2 02:09:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust combat damage to Cain"} 

 Player 2 02:09:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust combat damage to Cain"} 

 Player 2 02:09:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust combat damage to Cain"} 

 Player 2 02:09:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust combat damage to Cain"} 

 Player 2 02:09:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust combat damage to Cain"} 

 Player 2 02:09:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust combat damage to Cain"} 

 Player 2 02:09:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust combat damage to Cain"} 

 Player 2 02:09:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust combat damage to Cain"} 

 Player 2 02:09:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust combat damage to Cain"} 

 Player 2 02:09:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust combat damage to Cain \n2:Player 1 is rolling against Lust<Monster>"} 

 Player 2 02:09:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust combat damage to Cain \n2:Player 1 is rolling against Lust<Monster>"} 

 Player 2 02:09:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust combat damage to Cain \n2:Player 1 is rolling against Lust<Monster>"} 

 Player 2 02:09:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust combat damage to Cain \n2:Player 1 is rolling against Lust<Monster>"} 

 Player 2 02:09:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust combat damage to Cain \n2:Player 1 is rolling against Lust<Monster>"} 

 Player 2 02:09:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust combat damage to Cain \n2:Player 1 is rolling against Lust<Monster>"} 

 Player 2 02:09:28 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:09:28 $ACTION_MASSAGE_REMOVE:  
{"id":102} 

 Player 1 02:09:28 $ACTION_MASSAGE_REMOVE:  
{"id":100} 

 Player 1 02:09:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":103,"_text":"Resolve CombatDamage 13 "}} 

 Player 1 02:09:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust 1 combat damage to Cain"} 

 Player 1 02:09:28 $UPDATE_STACK_VIS:  
{"stackId":13,"text":"Lust will deal 1 combat damage to Cain"} 

 Player 1 02:09:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust 1 combat damage to Cain"} 

 Player 1 02:09:28 $PLAYER_GET_HIT:  
{"playerId":1,"damage":1,"damageDealerId":258} 

 Player 1 02:09:28 $NEXT_STACK_ID:  

 Player 1 02:09:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust 1 combat damage to Cain"} 

 Player 1 02:09:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:09:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust 1 combat damage to Cain \n2:Player 1 is about to die"} 

 Player 1 02:09:28 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":14,"creatorCardId":286,"playerToDieCardId":286,"stackEffectType":15,"killerId":258}} 

 Player 1 02:09:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust 1 combat damage to Cain \n2:Player 1 is about to die"} 

 Player 1 02:09:28 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":13,"creatorCardId":286,"entityToDoDamageCardId":258,"entityToTakeDamageCardId":286,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 02:09:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust 1 combat damage to Cain \n2:Player 1 is about to die"} 

 Player 1 02:09:28 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":13,"creatorCardId":286,"entityToDoDamageCardId":258,"entityToTakeDamageCardId":286,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 02:09:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust 1 combat damage to Cain \n2:Player 1 is about to die"} 

 Player 1 02:09:28 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":14,"creatorCardId":286,"playerToDieCardId":286,"stackEffectType":15,"killerId":258}} 

 Player 1 02:09:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust 1 combat damage to Cain \n2:Player 1 is about to die"} 

 Player 1 02:09:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust 1 combat damage to Cain \n2:Player 1 is about to die"} 

 Player 1 02:09:28 $REPLACE_STACK:  
{"currentStack":[{"entityId":13,"creatorCardId":286,"entityToDoDamageCardId":258,"entityToTakeDamageCardId":286,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":14,"creatorCardId":286,"playerToDieCardId":286,"stackEffectType":15,"killerId":258}]} 

 Player 1 02:09:28 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":258}],"result":null,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":10,"originStackId":-1},"isAfterActivation":true,"index":10} 

 Player 1 02:09:28 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_TAKEN","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":0,"number":258}],"result":null,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":11,"originStackId":13},"isAfterActivation":true,"index":11} 

 Player 1 02:09:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 1 02:09:28 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":13,"creatorCardId":286,"entityToDoDamageCardId":258,"entityToTakeDamageCardId":286,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 02:09:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":104,"_text":"Remove After Resolve CombatDamage 13  "}} 

 Player 1 02:09:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 1 02:09:28 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":13,"creatorCardId":286,"entityToDoDamageCardId":258,"entityToTakeDamageCardId":286,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 02:09:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":105,"_text":"Response Remove After Resolve CombatDamage 13"},"childOfId":104} 

 Player 1 02:09:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":106,"_text":"Wait For Response From Player 1 "},"childOfId":104} 

 Player 1 02:09:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:09:29 $ACTION_MASSAGE_REMOVE:  
{"id":106} 

 Player 1 02:09:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":107,"_text":"Wait For Response From Player 2 "},"childOfId":104} 

 Player 1 02:09:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:09:29 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:09:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust combat damage to Cain"} 

 Player 2 02:09:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust combat damage to Cain"} 

 Player 2 02:09:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 02:09:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 02:09:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 02:09:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 02:09:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 02:09:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 02:09:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 02:09:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 02:09:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 02:09:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 02:09:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust combat damage to Cain \n2:Player 1 is about to die"} 

 Player 2 02:09:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust combat damage to Cain \n2:Player 1 is about to die"} 

 Player 2 02:09:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust combat damage to Cain \n2:Player 1 is about to die"} 

 Player 2 02:09:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust combat damage to Cain \n2:Player 1 is about to die"} 

 Player 2 02:09:29 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:09:29 $ACTION_MASSAGE_REMOVE:  
{"id":107} 

 Player 1 02:09:29 $ACTION_MASSAGE_REMOVE:  
{"id":105} 

 Player 1 02:09:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":108,"_text":"Resolve PlayerDeath 14 "}} 

 Player 1 02:09:29 $DISABLE_PARTICLE_EFFECT:  
{"cardId":258,"particleType":5} 

 Player 1 02:09:29 $CANCEL_ATTACK:  

 Player 1 02:09:29 $NEXT_STACK_ID:  

 Player 1 02:09:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 1 02:09:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:09:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 02:09:29 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":15,"creatorCardId":286,"playerToPayCardId":286,"stackEffectType":16}} 

 Player 1 02:09:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 02:09:30 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":14,"creatorCardId":286,"playerToDieCardId":286,"stackEffectType":15,"killerId":258}} 

 Player 1 02:09:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 02:09:30 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":14,"creatorCardId":286,"playerToDieCardId":286,"stackEffectType":15,"killerId":258}} 

 Player 1 02:09:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 02:09:30 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":15,"creatorCardId":286,"playerToPayCardId":286,"stackEffectType":16}} 

 Player 1 02:09:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 02:09:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 02:09:30 $REPLACE_STACK:  
{"currentStack":[{"entityId":14,"creatorCardId":286,"playerToDieCardId":286,"stackEffectType":15,"killerId":258},{"entityId":15,"creatorCardId":286,"playerToPayCardId":286,"stackEffectType":16}]} 

 Player 1 02:09:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 02:09:30 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":14,"creatorCardId":286,"playerToDieCardId":286,"stackEffectType":15,"killerId":258}} 

 Player 1 02:09:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 1 02:09:30 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":14,"creatorCardId":286,"playerToDieCardId":286,"stackEffectType":15,"killerId":258}} 

 Player 1 02:09:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":109,"_text":"Remove After Resolve PlayerDeath 14  "}} 

 Player 1 02:09:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 1 02:09:30 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":14,"creatorCardId":286,"playerToDieCardId":286,"stackEffectType":15,"killerId":258}} 

 Player 1 02:09:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":110,"_text":"Response Remove After Resolve PlayerDeath 14"},"childOfId":109} 

 Player 1 02:09:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":111,"_text":"Wait For Response From Player 1 "},"childOfId":109} 

 Player 1 02:09:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:09:30 $ACTION_MASSAGE_REMOVE:  
{"id":111} 

 Player 1 02:09:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":112,"_text":"Wait For Response From Player 2 "},"childOfId":109} 

 Player 1 02:09:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:09:30 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:09:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 02:09:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 02:09:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 02:09:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 02:09:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 02:09:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 02:09:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 02:09:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 02:09:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 02:09:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 02:09:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 02:09:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 02:09:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 2 02:09:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 2 02:09:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 2 02:09:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 2 02:09:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 2 02:09:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 2 02:09:31 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:09:31 $ACTION_MASSAGE_REMOVE:  
{"id":112} 

 Player 1 02:09:31 $ACTION_MASSAGE_REMOVE:  
{"id":110} 

 Player 1 02:09:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":113,"_text":"Resolve PlayerDeathPenalties 15 "}} 

 Player 1 02:09:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":114,"_text":"Player 1 pays Penalties"}} 

 Player 1 02:09:31 $SET_MONEY:  
{"playerId":1,"numOfCoins":6} 

 Player 1 02:09:31 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-1}],"result":null,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":12,"originStackId":-1},"isAfterActivation":true,"index":12} 

 Player 1 02:09:33 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":11} 

 Player 1 02:09:33 $MOVE_CARD:  
{"moveIndex":14,"cardId":11,"placeID":301,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 02:09:34 $MOVE_CARD_END:  
{"moveIndex":14,"cardId":11,"flipIfFlipped":true,"playerId":1} 

 Player 1 02:09:34 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":11} 

 Player 1 02:11:23 $REMOVE_FROM_PASSIVE_MANAGER:  
{"cardId":98} 

 Player 1 02:11:24 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_LOSE_ITEM","args":[{"type":0,"number":98}],"result":null,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":13,"originStackId":-1},"isAfterActivation":true,"index":13} 

 Player 1 02:11:24 $MOVE_CARD:  
{"moveIndex":15,"cardId":98,"placeID":301,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 02:11:24 $MOVE_CARD_END:  
{"moveIndex":15,"cardId":98,"flipIfFlipped":true,"playerId":1} 

 Player 1 02:11:24 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":98} 

 Player 1 02:11:24 $USE_ITEM:  
{"cardId":286} 

 Player 1 02:11:24 $USE_ITEM:  
{"cardId":289} 

 Player 1 02:11:24 $PLAYER_DIED:  
{"playerId":1} 

 Player 1 02:11:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 1 02:11:24 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":15,"creatorCardId":286,"playerToPayCardId":286,"stackEffectType":16}} 

 Player 1 02:11:24 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:11:24 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":15,"creatorCardId":286,"playerToPayCardId":286,"stackEffectType":16}} 

 Player 1 02:11:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":115,"_text":"Remove After Resolve PlayerDeathPenalties 15  "}} 

 Player 1 02:11:24 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:11:24 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":15,"creatorCardId":286,"playerToPayCardId":286,"stackEffectType":16}} 

 Player 1 02:11:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":116,"_text":"Response Remove After Resolve PlayerDeathPenalties 15"},"childOfId":115} 

 Player 1 02:11:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":117,"_text":"Wait For Response From Player 2 "},"childOfId":115} 

 Player 1 02:11:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:11:24 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:11:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 02:11:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 02:11:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 02:11:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 02:11:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 02:11:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 02:11:25 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:11:25 $ACTION_MASSAGE_REMOVE:  
{"id":117} 

 Player 1 02:11:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":118,"_text":"Wait For Response From Player 1 "},"childOfId":115} 

 Player 1 02:11:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:11:25 $ACTION_MASSAGE_REMOVE:  
{"id":118} 

 Player 1 02:11:25 $ACTION_MASSAGE_REMOVE:  
{"id":116} 

 Player 1 02:11:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":119,"_text":"Stack Was Emptied "}} 

 Player 1 02:11:25 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:11:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:11:25 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:11:25 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 1 02:11:25 $END_TURN:  

 Player 1 02:11:25 $SET_TURN:  
{"playerId":2} 

 Player 1 02:11:25 $START_TURN:  
{"playerId":2} 

 Player 1 02:11:25 $ACTION_MASSAGE_REMOVE:  
{"id":82} 

 Player 1 02:11:25 $ACTION_MASSAGE_REMOVE:  
{"id":81} 

 Player 2 02:11:25 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 02:11:25 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:11:25 $RECHARGE_ITEM:  
{"cardId":298} 

 Player 2 02:11:25 $PLAYER_RECHARGE_ITEM:  
{"playerId":2,"cardId":298} 

 Player 2 02:11:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:11:25 $NEXT_STACK_ID:  

 Player 2 02:11:25 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:11:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 02:11:25 $ADD_TO_STACK:  
{"stackEffect":{"entityId":16,"creatorCardId":298,"turnPlayerCardId":298,"stackEffectType":13}} 

 Player 2 02:11:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 02:11:25 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":16,"creatorCardId":298,"turnPlayerCardId":298,"stackEffectType":13}} 

 Player 2 02:11:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":120,"_text":"Add StartTurnLoot 16 "}} 

 Player 2 02:11:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:11:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 02:11:25 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":16,"creatorCardId":298,"turnPlayerCardId":298,"stackEffectType":13}} 

 Player 2 02:11:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":121,"_text":"Response Adding StartTurnLoot 16"},"childOfId":120} 

 Player 2 02:11:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":122,"_text":"Wait For Response From Player 2 "},"childOfId":120} 

 Player 2 02:11:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:11:25 $ACTION_MASSAGE_REMOVE:  
{"id":122} 

 Player 2 02:11:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":123,"_text":"Wait For Response From Player 1 "},"childOfId":120} 

 Player 2 02:11:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:11:26 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:11:26 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 02:11:26 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:11:26 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:11:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 02:11:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 02:11:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 02:11:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 02:11:26 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:11:26 $ACTION_MASSAGE_REMOVE:  
{"id":123} 

 Player 2 02:11:26 $ACTION_MASSAGE_REMOVE:  
{"id":121} 

 Player 2 02:11:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":124,"_text":"Resolve StartTurnLoot 16 "}} 

 Player 2 02:11:26 $DRAW_CARD:  
{"deckType":1} 

 Player 2 02:11:26 $MOVE_CARD:  
{"moveIndex":16,"cardId":103,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 02:11:26 $MOVE_CARD_END:  
{"moveIndex":16,"cardId":103,"flipIfFlipped":false,"playerId":2} 

 Player 2 02:11:26 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":103} 

 Player 2 02:11:26 $FLIP_CARD:  
{"cardId":103} 

 Player 2 02:11:26 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":103} 

 Player 2 02:11:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 02:11:26 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":16,"creatorCardId":298,"turnPlayerCardId":298,"stackEffectType":13}} 

 Player 2 02:11:26 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:11:26 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":16,"creatorCardId":298,"turnPlayerCardId":298,"stackEffectType":13}} 

 Player 2 02:11:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":125,"_text":"Remove After Resolve StartTurnLoot 16  "}} 

 Player 2 02:11:26 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:11:26 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":16,"creatorCardId":298,"turnPlayerCardId":298,"stackEffectType":13}} 

 Player 2 02:11:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":126,"_text":"Response Remove After Resolve StartTurnLoot 16"},"childOfId":125} 

 Player 2 02:11:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":127,"_text":"Wait For Response From Player 1 "},"childOfId":125} 

 Player 2 02:11:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:11:27 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:11:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 02:11:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 02:11:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 02:11:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 02:11:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 02:11:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 02:11:27 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:11:27 $ACTION_MASSAGE_REMOVE:  
{"id":127} 

 Player 2 02:11:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":128,"_text":"Wait For Response From Player 2 "},"childOfId":125} 

 Player 2 02:11:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:11:27 $ACTION_MASSAGE_REMOVE:  
{"id":128} 

 Player 2 02:11:27 $ACTION_MASSAGE_REMOVE:  
{"id":126} 

 Player 2 02:11:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":129,"_text":"Stack Was Emptied "}} 

 Player 2 02:11:27 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:11:47 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:11:58 $SHOW_DECISION:  
{"startCardId":45,"endCardId":45,"flipEndCard":true} 

 Player 2 02:12:01 $NEXT_STACK_ID:  

 Player 2 02:12:01 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:12:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(7) "} 

 Player 2 02:12:01 $ADD_TO_STACK:  
{"stackEffect":{"entityId":17,"creatorCardId":298,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":45,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 02:12:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(7) "} 

 Player 2 02:12:01 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":17,"creatorCardId":298,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":45,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 02:12:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":130,"_text":"Add PlayLootCardStackEffect 17 "}} 

 Player 2 02:12:01 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":45} 

 Player 2 02:12:01 $MOVE_CARD:  
{"moveIndex":17,"cardId":45,"placeID":300,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 02:12:01 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:12:01 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:12:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(7) "} 

 Player 1 02:12:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(7) "} 

 Player 1 02:12:01 $MOVE_CARD_END:  
{"moveIndex":17,"cardId":45,"flipIfFlipped":true,"playerId":2} 

 Player 2 02:12:01 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":45} 

 Player 2 02:12:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(7): addMoney"} 

 Player 2 02:12:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:12:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(7): addMoney"} 

 Player 2 02:12:01 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":17,"creatorCardId":298,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":45,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":45,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 02:12:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":131,"_text":"Response Adding PlayLootCardStackEffect 17"},"childOfId":130} 

 Player 2 02:12:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":132,"_text":"Wait For Response From Player 2 "},"childOfId":130} 

 Player 2 02:12:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:12:01 $ACTION_MASSAGE_REMOVE:  
{"id":132} 

 Player 2 02:12:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":133,"_text":"Wait For Response From Player 1 "},"childOfId":130} 

 Player 2 02:12:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:12:01 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:12:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(7) "} 

 Player 1 02:12:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(7) "} 

 Player 1 02:12:02 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:12:02 $ACTION_MASSAGE_REMOVE:  
{"id":133} 

 Player 2 02:12:02 $ACTION_MASSAGE_REMOVE:  
{"id":131} 

 Player 2 02:12:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":134,"_text":"Resolve PlayLootCardStackEffect 17 "}} 

 Player 2 02:12:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(7): addMoney"} 

 Player 2 02:12:02 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":45,"particleType":6} 

 Player 2 02:12:04 $DISABLE_PARTICLE_EFFECT:  
{"cardId":45,"particleType":6} 

 Player 2 02:12:04 $SET_MONEY:  
{"playerId":2,"numOfCoins":10} 

 Player 2 02:12:04 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 2 02:12:04 $REMOVE_FROM_PILE:  
{"cardId":45} 

 Player 2 02:12:04 $MOVE_CARD:  
{"moveIndex":18,"cardId":45,"placeID":301,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 02:12:04 $MOVE_CARD_END:  
{"moveIndex":18,"cardId":45,"flipIfFlipped":true,"playerId":2} 

 Player 2 02:12:04 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":45} 

 Player 2 02:12:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(7): addMoney"} 

 Player 2 02:12:04 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":17,"creatorCardId":298,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":45,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 02:12:04 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:12:04 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":17,"creatorCardId":298,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":45,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 02:12:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":135,"_text":"Remove After Resolve PlayLootCardStackEffect 17  "}} 

 Player 2 02:12:04 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:12:04 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":17,"creatorCardId":298,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":45,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 02:12:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":136,"_text":"Response Remove After Resolve PlayLootCardStackEffect 17"},"childOfId":135} 

 Player 2 02:12:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":137,"_text":"Wait For Response From Player 1 "},"childOfId":135} 

 Player 2 02:12:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:12:04 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:12:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(7) "} 

 Player 1 02:12:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(7) "} 

 Player 1 02:12:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(7) "} 

 Player 1 02:12:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(7) "} 

 Player 1 02:12:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(7) "} 

 Player 1 02:12:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(7) "} 

 Player 1 02:12:05 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:12:05 $ACTION_MASSAGE_REMOVE:  
{"id":137} 

 Player 2 02:12:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":138,"_text":"Wait For Response From Player 2 "},"childOfId":135} 

 Player 2 02:12:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:12:05 $ACTION_MASSAGE_REMOVE:  
{"id":138} 

 Player 2 02:12:05 $ACTION_MASSAGE_REMOVE:  
{"id":136} 

 Player 2 02:12:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":139,"_text":"Stack Was Emptied "}} 

 Player 2 02:12:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:12:16 $SHOW_DECISION:  
{"startCardId":298,"endCardId":196} 

 Player 2 02:12:19 $NEXT_STACK_ID:  

 Player 2 02:12:19 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:12:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Pandora's Box for 10"} 

 Player 2 02:12:19 $ADD_TO_STACK:  
{"stackEffect":{"entityId":18,"creatorCardId":298,"itemToPurchaseCardId":196,"playerWhoBuysCardId":298,"cost":10,"stackEffectType":9}} 

 Player 2 02:12:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Pandora's Box for 10"} 

 Player 2 02:12:19 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":18,"creatorCardId":298,"itemToPurchaseCardId":196,"playerWhoBuysCardId":298,"cost":10,"stackEffectType":9}} 

 Player 2 02:12:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":140,"_text":"Add PurchaseItem 18 "}} 

 Player 2 02:12:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:12:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Pandora's Box for 10"} 

 Player 2 02:12:19 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":18,"creatorCardId":298,"itemToPurchaseCardId":196,"playerWhoBuysCardId":298,"cost":10,"stackEffectType":9}} 

 Player 2 02:12:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":141,"_text":"Response Adding PurchaseItem 18"},"childOfId":140} 

 Player 2 02:12:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":142,"_text":"Wait For Response From Player 2 "},"childOfId":140} 

 Player 2 02:12:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:12:19 $ACTION_MASSAGE_REMOVE:  
{"id":142} 

 Player 2 02:12:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":143,"_text":"Wait For Response From Player 1 "},"childOfId":140} 

 Player 2 02:12:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:12:19 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:12:19 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:12:19 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:12:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Pandora's Box for 10"} 

 Player 1 02:12:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Pandora's Box for 10"} 

 Player 1 02:12:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Pandora's Box for 10"} 

 Player 1 02:12:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Pandora's Box for 10"} 

 Player 1 02:12:19 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:12:19 $ACTION_MASSAGE_REMOVE:  
{"id":143} 

 Player 2 02:12:19 $ACTION_MASSAGE_REMOVE:  
{"id":141} 

 Player 2 02:12:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":144,"_text":"Resolve PurchaseItem 18 "}} 

 Player 2 02:12:19 $SET_MONEY:  
{"playerId":2,"numOfCoins":0} 

 Player 2 02:12:19 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-10}],"result":null,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 

 Player 2 02:12:19 $REMOVE_ITEM_FROM_SHOP:  
{"cardId":196} 

 Player 2 02:12:19 $NEXT_STACK_ID:  

 Player 2 02:12:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Pandora's Box for 10"} 

 Player 2 02:12:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:12:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Pandora's Box for 10 \n2:Refill Store slot"} 

 Player 2 02:12:19 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":19,"creatorCardId":298,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 2 02:12:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Pandora's Box for 10 \n2:Refill Store slot"} 

 Player 2 02:12:19 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":18,"creatorCardId":298,"itemToPurchaseCardId":196,"playerWhoBuysCardId":298,"cost":10,"stackEffectType":9}} 

 Player 2 02:12:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Pandora's Box for 10 \n2:Refill Store slot"} 

 Player 2 02:12:20 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":18,"creatorCardId":298,"itemToPurchaseCardId":196,"playerWhoBuysCardId":298,"cost":10,"stackEffectType":9}} 

 Player 2 02:12:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Pandora's Box for 10 \n2:Refill Store slot"} 

 Player 2 02:12:20 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":19,"creatorCardId":298,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 2 02:12:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Pandora's Box for 10 \n2:Refill Store slot"} 

 Player 2 02:12:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Pandora's Box for 10 \n2:Refill Store slot"} 

 Player 2 02:12:20 $REPLACE_STACK:  
{"currentStack":[{"entityId":18,"creatorCardId":298,"itemToPurchaseCardId":196,"playerWhoBuysCardId":298,"cost":10,"stackEffectType":9},{"entityId":19,"creatorCardId":298,"slotType":5,"slotToFillId":0,"stackEffectType":10}]} 

 Player 2 02:12:20 $MOVE_CARD:  
{"moveIndex":19,"cardId":196,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 

 Player 1 02:12:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Pandora's Box for 10"} 

 Player 1 02:12:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Pandora's Box for 10"} 

 Player 1 02:12:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 02:12:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 02:12:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 02:12:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 02:12:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 02:12:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 02:12:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 02:12:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 02:12:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 02:12:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 02:12:20 $MOVE_CARD_END:  
{"moveIndex":19,"cardId":196,"flipIfFlipped":true,"playerId":2} 

 Player 2 02:12:20 $ADD_AN_ITEM:  
{"playerId":2,"cardId":196,"isReward":false} 

 Player 2 02:12:20 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":196}],"result":true,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 

 Player 2 02:12:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 2 02:12:20 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":18,"creatorCardId":298,"itemToPurchaseCardId":196,"playerWhoBuysCardId":298,"cost":10,"stackEffectType":9}} 

 Player 2 02:12:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":145,"_text":"Remove After Resolve PurchaseItem 18  "}} 

 Player 2 02:12:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 2 02:12:20 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":18,"creatorCardId":298,"itemToPurchaseCardId":196,"playerWhoBuysCardId":298,"cost":10,"stackEffectType":9}} 

 Player 2 02:12:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":146,"_text":"Response Remove After Resolve PurchaseItem 18"},"childOfId":145} 

 Player 2 02:12:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":147,"_text":"Wait For Response From Player 2 "},"childOfId":145} 

 Player 2 02:12:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:12:20 $ACTION_MASSAGE_REMOVE:  
{"id":147} 

 Player 2 02:12:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":148,"_text":"Wait For Response From Player 1 "},"childOfId":145} 

 Player 2 02:12:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:12:20 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:12:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Pandora's Box for 10 \n2:Refill Store slot"} 

 Player 1 02:12:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Pandora's Box for 10 \n2:Refill Store slot"} 

 Player 1 02:12:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Pandora's Box for 10 \n2:Refill Store slot"} 

 Player 1 02:12:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Pandora's Box for 10 \n2:Refill Store slot"} 

 Player 1 02:12:21 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:12:21 $ACTION_MASSAGE_REMOVE:  
{"id":148} 

 Player 2 02:12:21 $ACTION_MASSAGE_REMOVE:  
{"id":146} 

 Player 2 02:12:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":149,"_text":"Resolve RefillEmptySlot 19 "}} 

 Player 2 02:12:21 $DRAW_CARD:  
{"deckType":5} 

 Player 2 02:12:21 $FLIP_CARD:  
{"cardId":159} 

 Player 2 02:12:21 $ADD_STORE_CARD:  
{"cardId":159} 

 Player 2 02:12:21 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:12:21 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":19,"creatorCardId":298,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 2 02:12:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":150,"_text":"Remove After Resolve RefillEmptySlot 19  "}} 

 Player 2 02:12:21 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:12:21 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":19,"creatorCardId":298,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 2 02:12:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":151,"_text":"Response Remove After Resolve RefillEmptySlot 19"},"childOfId":150} 

 Player 2 02:12:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":152,"_text":"Wait For Response From Player 1 "},"childOfId":150} 

 Player 2 02:12:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:12:21 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:12:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 02:12:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 02:12:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 02:12:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 02:12:21 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:12:21 $ACTION_MASSAGE_REMOVE:  
{"id":152} 

 Player 2 02:12:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":153,"_text":"Wait For Response From Player 2 "},"childOfId":150} 

 Player 2 02:12:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:12:21 $ACTION_MASSAGE_REMOVE:  
{"id":153} 

 Player 2 02:12:21 $ACTION_MASSAGE_REMOVE:  
{"id":151} 

 Player 2 02:12:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":154,"_text":"Stack Was Emptied "}} 

 Player 2 02:12:21 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:12:26 $SHOW_DECISION:  
{"startCardId":298,"endCardId":196} 

 Player 2 02:12:29 $NEXT_STACK_ID:  

 Player 2 02:12:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:12:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Pandora's Box"} 

 Player 2 02:12:29 $ADD_TO_STACK:  
{"stackEffect":{"entityId":20,"creatorCardId":298,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":196,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 02:12:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Pandora's Box"} 

 Player 2 02:12:29 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":20,"creatorCardId":298,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":196,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 02:12:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":155,"_text":"Add ActivateItem 20 "}} 

 Player 2 02:12:29 $USE_ITEM:  
{"cardId":196} 

 Player 2 02:12:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:12:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Pandora's Box"} 

 Player 2 02:12:29 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":20,"creatorCardId":298,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":196,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 02:12:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":156,"_text":"Response Adding ActivateItem 20"},"childOfId":155} 

 Player 2 02:12:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":157,"_text":"Wait For Response From Player 2 "},"childOfId":155} 

 Player 2 02:12:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:12:29 $ACTION_MASSAGE_REMOVE:  
{"id":157} 

 Player 2 02:12:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":158,"_text":"Wait For Response From Player 1 "},"childOfId":155} 

 Player 2 02:12:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:12:29 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:12:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:12:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:12:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Pandora's Box"} 

 Player 1 02:12:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Pandora's Box"} 

 Player 1 02:12:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Pandora's Box"} 

 Player 1 02:12:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Pandora's Box"} 

 Player 1 02:12:29 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:12:29 $ACTION_MASSAGE_REMOVE:  
{"id":158} 

 Player 2 02:12:30 $ACTION_MASSAGE_REMOVE:  
{"id":156} 

 Player 2 02:12:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":159,"_text":"Resolve ActivateItem 20 "}} 

 Player 2 02:12:30 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_LOSE_ITEM","args":[{"type":0,"number":196}],"result":null,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":8,"originStackId":-1},"isAfterActivation":true,"index":8} 

 Player 2 02:12:30 $MOVE_CARD:  
{"moveIndex":20,"cardId":196,"placeID":303,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 02:12:30 $MOVE_CARD_END:  
{"moveIndex":20,"cardId":196,"flipIfFlipped":true,"playerId":2} 

 Player 2 02:12:30 $MOVE_CARD_TO_PILE:  
{"type":5,"cardId":196} 

 Player 2 02:12:30 $NEXT_STACK_ID:  

 Player 2 02:12:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Pandora's Box"} 

 Player 2 02:12:30 $NEXT_STACK_ID:  

 Player 2 02:12:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Pandora's Box"} 

 Player 2 02:12:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Pandora's Box \n2:Player 2 roll a dice"} 

 Player 2 02:12:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Pandora's Box \n2:Player 2 roll a dice"} 

 Player 2 02:12:30 $ADD_TO_STACK:  
{"stackEffect":{"entityId":22,"creatorCardId":298,"stackEffectToLock":{"entityId":20,"creatorCardId":298,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":196,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"stackEffectType":11}} 

 Player 2 02:12:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Pandora's Box \n2:Player 2 roll a dice"} 

 Player 2 02:12:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Pandora's Box \n2:Player 2 roll a dice"} 

 Player 2 02:12:30 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":22,"creatorCardId":298,"stackEffectToLock":{"entityId":20,"creatorCardId":298,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":196,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"stackEffectType":11}} 

 Player 2 02:12:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":160,"_text":"Add RollDiceStackEffect 22 "}} 

 Player 2 02:12:30 $ROLL_DICE:  
{"playerId":2} 

 Player 1 02:12:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Pandora's Box"} 

 Player 1 02:12:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Pandora's Box"} 

 Player 1 02:12:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Pandora's Box"} 

 Player 1 02:12:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Pandora's Box"} 

 Player 1 02:12:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Pandora's Box \n2:Player 2 roll a dice"} 

 Player 1 02:12:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Pandora's Box \n2:Player 2 roll a dice"} 

 Player 1 02:12:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Pandora's Box \n2:Player 2 roll a dice"} 

 Player 1 02:12:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Pandora's Box \n2:Player 2 roll a dice"} 

 Player 2 02:12:31 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":2} 

 Player 2 02:12:31 $UPDATE_STACK_VIS:  
{"stackId":22,"text":"player 2 rolled 2"} 

 Player 2 02:12:31 $SHOW_DICE_ROLL:  
{"stackId":22} 

 Player 2 02:12:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Pandora's Box \n2:Player 2 rolled 2"} 

 Player 2 02:12:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:12:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Pandora's Box \n2:Player 2 rolled 2"} 

 Player 2 02:12:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Pandora's Box \n2:Player 2 rolled 2"} 

 Player 2 02:12:34 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":22,"creatorCardId":298,"stackEffectToLock":{"entityId":20,"creatorCardId":298,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":196,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"numberRolled":2,"stackEffectType":11}} 

 Player 2 02:12:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":161,"_text":"Response Adding RollDiceStackEffect 22"},"childOfId":160} 

 Player 2 02:12:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":162,"_text":"Wait For Response From Player 2 "},"childOfId":160} 

 Player 2 02:12:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:12:34 $ACTION_MASSAGE_REMOVE:  
{"id":162} 

 Player 2 02:12:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":163,"_text":"Wait For Response From Player 1 "},"childOfId":160} 

 Player 2 02:12:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:12:34 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:12:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Pandora's Box \n2:Player 2 roll a dice"} 

 Player 1 02:12:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Pandora's Box \n2:Player 2 roll a dice"} 

 Player 1 02:12:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Pandora's Box \n2:Player 2 roll a dice"} 

 Player 1 02:12:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Pandora's Box \n2:Player 2 roll a dice"} 

 Player 1 02:12:35 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:12:35 $ACTION_MASSAGE_REMOVE:  
{"id":163} 

 Player 2 02:12:35 $ACTION_MASSAGE_REMOVE:  
{"id":161} 

 Player 2 02:12:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":164,"_text":"Resolve RollDiceStackEffect 22 "}} 

 Player 2 02:12:35 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":9,"originStackId":22},"isAfterActivation":true,"index":9} 

 Player 2 02:12:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Pandora's Box \n2:Player 2 rolled 2"} 

 Player 2 02:12:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Pandora's Box \n2:Player 2 rolled 2"} 

 Player 2 02:12:35 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":22,"creatorCardId":298,"stackEffectToLock":{"entityId":20,"creatorCardId":298,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":196,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"numberRolled":2,"stackEffectType":11}} 

 Player 2 02:12:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Pandora's Box"} 

 Player 2 02:12:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Pandora's Box"} 

 Player 2 02:12:35 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":22,"creatorCardId":298,"stackEffectToLock":{"entityId":20,"creatorCardId":298,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":196,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"numberRolled":2,"stackEffectType":11}} 

 Player 2 02:12:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":165,"_text":"Remove After Resolve RollDiceStackEffect 22  "}} 

 Player 2 02:12:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Pandora's Box"} 

 Player 2 02:12:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Pandora's Box"} 

 Player 2 02:12:35 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":22,"creatorCardId":298,"stackEffectToLock":{"entityId":20,"creatorCardId":298,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":196,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"numberRolled":2,"stackEffectType":11}} 

 Player 2 02:12:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":166,"_text":"Response Remove After Resolve RollDiceStackEffect 22"},"childOfId":165} 

 Player 2 02:12:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":167,"_text":"Wait For Response From Player 1 "},"childOfId":165} 

 Player 2 02:12:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:12:35 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:12:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Pandora's Box \n2:Player 2 roll a dice"} 

 Player 1 02:12:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Pandora's Box \n2:Player 2 roll a dice"} 

 Player 1 02:12:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Pandora's Box \n2:Player 2 roll a dice"} 

 Player 1 02:12:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Pandora's Box \n2:Player 2 roll a dice"} 

 Player 1 02:12:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Pandora's Box \n2:Player 2 roll a dice"} 

 Player 1 02:12:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Pandora's Box \n2:Player 2 roll a dice"} 

 Player 1 02:12:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Pandora's Box \n2:Player 2 roll a dice"} 

 Player 1 02:12:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Pandora's Box \n2:Player 2 roll a dice"} 

 Player 1 02:12:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Pandora's Box \n2:Player 2 roll a dice"} 

 Player 1 02:12:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Pandora's Box \n2:Player 2 roll a dice"} 

 Player 1 02:12:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Pandora's Box \n2:Player 2 roll a dice"} 

 Player 1 02:12:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Pandora's Box \n2:Player 2 roll a dice"} 

 Player 1 02:12:35 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:12:35 $ACTION_MASSAGE_REMOVE:  
{"id":167} 

 Player 2 02:12:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":168,"_text":"Wait For Response From Player 2 "},"childOfId":165} 

 Player 2 02:12:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:12:36 $ACTION_MASSAGE_REMOVE:  
{"id":168} 

 Player 2 02:12:36 $ACTION_MASSAGE_REMOVE:  
{"id":166} 

 Player 2 02:12:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":169,"_text":"Resolve ActivateItem 20 "}} 

 Player 2 02:12:36 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":196,"particleType":6} 

 Player 2 02:12:37 $DISABLE_PARTICLE_EFFECT:  
{"cardId":196,"particleType":6} 

 Player 2 02:12:37 $SET_MONEY:  
{"playerId":2,"numOfCoins":6} 

 Player 2 02:12:38 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":6}],"result":null,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":10,"originStackId":-1},"isAfterActivation":true,"index":10} 

 Player 2 02:12:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Pandora's Box"} 

 Player 2 02:12:38 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":20,"creatorCardId":298,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":196,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 02:12:38 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:12:38 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":20,"creatorCardId":298,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":196,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 02:12:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":170,"_text":"Remove After Resolve ActivateItem 20  "}} 

 Player 2 02:12:38 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:12:38 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":20,"creatorCardId":298,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":196,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 02:12:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":171,"_text":"Response Remove After Resolve ActivateItem 20"},"childOfId":170} 

 Player 2 02:12:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":172,"_text":"Wait For Response From Player 2 "},"childOfId":170} 

 Player 2 02:12:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:12:38 $ACTION_MASSAGE_REMOVE:  
{"id":172} 

 Player 2 02:12:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":173,"_text":"Wait For Response From Player 1 "},"childOfId":170} 

 Player 2 02:12:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:12:38 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:12:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Pandora's Box"} 

 Player 1 02:12:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Pandora's Box"} 

 Player 1 02:12:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Pandora's Box"} 

 Player 1 02:12:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Pandora's Box"} 

 Player 1 02:12:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Pandora's Box"} 

 Player 1 02:12:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Pandora's Box"} 

 Player 1 02:12:38 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:12:38 $ACTION_MASSAGE_REMOVE:  
{"id":173} 

 Player 2 02:12:38 $ACTION_MASSAGE_REMOVE:  
{"id":171} 

 Player 2 02:12:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":174,"_text":"Stack Was Emptied "}} 

 Player 2 02:12:38 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:12:49 $SHOW_DECISION:  
{"startCardId":298,"endCardId":298} 

 Player 2 02:12:52 $NEXT_STACK_ID:  

 Player 2 02:12:52 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:12:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated The Lost"} 

 Player 2 02:12:52 $ADD_TO_STACK:  
{"stackEffect":{"entityId":23,"creatorCardId":298,"hasLockingStackEffect":false,"itemToPlayCardId":298,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 02:12:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated The Lost"} 

 Player 2 02:12:52 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":23,"creatorCardId":298,"hasLockingStackEffect":false,"itemToPlayCardId":298,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 02:12:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":175,"_text":"Add ActivateItem 23 "}} 

 Player 1 02:12:52 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:12:53 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:12:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated The Lost"} 

 Player 1 02:12:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated The Lost"} 

 Player 2 02:12:57 $SHOW_DECISION:  
{"startCardId":298,"endCardId":103,"flipEndCard":true} 

 Player 2 02:13:00 $USE_ITEM:  
{"cardId":298} 

 Player 2 02:13:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:13:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated The Lost"} 

 Player 2 02:13:00 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":23,"creatorCardId":298,"hasLockingStackEffect":false,"itemToPlayCardId":298,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 02:13:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":176,"_text":"Response Adding ActivateItem 23"},"childOfId":175} 

 Player 2 02:13:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":177,"_text":"Wait For Response From Player 2 "},"childOfId":175} 

 Player 2 02:13:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:13:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated The Lost"} 

 Player 1 02:13:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated The Lost"} 

 Player 2 02:13:05 $ACTION_MASSAGE_REMOVE:  
{"id":177} 

 Player 2 02:13:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":178,"_text":"Wait For Response From Player 1 "},"childOfId":175} 

 Player 2 02:13:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:13:05 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:13:05 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:13:05 $ACTION_MASSAGE_REMOVE:  
{"id":178} 

 Player 2 02:13:05 $ACTION_MASSAGE_REMOVE:  
{"id":176} 

 Player 2 02:13:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":179,"_text":"Resolve ActivateItem 23 "}} 

 Player 2 02:13:05 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":298,"particleType":6} 

 Player 2 02:13:07 $DISABLE_PARTICLE_EFFECT:  
{"cardId":298,"particleType":6} 

 Player 2 02:13:07 $NEXT_STACK_ID:  

 Player 2 02:13:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated The Lost"} 

 Player 2 02:13:07 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":103} 

 Player 2 02:13:07 $MOVE_CARD:  
{"moveIndex":21,"cardId":103,"placeID":300,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 02:13:08 $MOVE_CARD_END:  
{"moveIndex":21,"cardId":103,"flipIfFlipped":true,"playerId":2} 

 Player 2 02:13:08 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":103} 

 Player 2 02:13:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb: DealDamage \n2:Player 2 activated The Lost"} 

 Player 2 02:13:15 $SHOW_DECISION:  
{"startCardId":103,"endCardId":258} 

 Player 2 02:13:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:13:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb: DealDamage \n2:Player 2 activated The Lost"} 

 Player 2 02:13:18 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":24,"creatorCardId":298,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":103,"lootPlayerId":2,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":103,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 02:13:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb: DealDamage \n2:Player 2 activated The Lost"} 

 Player 2 02:13:18 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":23,"creatorCardId":298,"hasLockingStackEffect":false,"itemToPlayCardId":298,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 02:13:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb: DealDamage \n2:Player 2 activated The Lost"} 

 Player 2 02:13:18 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":24,"creatorCardId":298,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":103,"lootPlayerId":2,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":103,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 02:13:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb: DealDamage \n2:Player 2 activated The Lost"} 

 Player 2 02:13:18 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":23,"creatorCardId":298,"hasLockingStackEffect":false,"itemToPlayCardId":298,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 02:13:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb: DealDamage \n2:Player 2 activated The Lost"} 

 Player 2 02:13:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb: DealDamage \n2:Player 2 activated The Lost"} 

 Player 2 02:13:18 $REPLACE_STACK:  
{"currentStack":[{"entityId":24,"creatorCardId":298,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":103,"lootPlayerId":2,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":103,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":23,"creatorCardId":298,"hasLockingStackEffect":false,"itemToPlayCardId":298,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 

 Player 2 02:13:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb: DealDamage \n2:Player 2 activated The Lost"} 

 Player 2 02:13:18 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":23,"creatorCardId":298,"hasLockingStackEffect":false,"itemToPlayCardId":298,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 02:13:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb: DealDamage"} 

 Player 2 02:13:18 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":23,"creatorCardId":298,"hasLockingStackEffect":false,"itemToPlayCardId":298,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 02:13:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":180,"_text":"Remove After Resolve ActivateItem 23  "}} 

 Player 2 02:13:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb: DealDamage"} 

 Player 2 02:13:18 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":23,"creatorCardId":298,"hasLockingStackEffect":false,"itemToPlayCardId":298,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 02:13:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":181,"_text":"Response Remove After Resolve ActivateItem 23"},"childOfId":180} 

 Player 2 02:13:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":182,"_text":"Wait For Response From Player 2 "},"childOfId":180} 

 Player 2 02:13:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:13:18 $ACTION_MASSAGE_REMOVE:  
{"id":182} 

 Player 2 02:13:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":183,"_text":"Wait For Response From Player 1 "},"childOfId":180} 

 Player 2 02:13:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:13:18 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:13:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated The Lost"} 

 Player 1 02:13:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated The Lost"} 

 Player 1 02:13:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb "} 

 Player 1 02:13:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb "} 

 Player 1 02:13:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb "} 

 Player 1 02:13:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb "} 

 Player 1 02:13:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb "} 

 Player 1 02:13:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb "} 

 Player 1 02:13:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb "} 

 Player 1 02:13:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb "} 

 Player 1 02:13:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb "} 

 Player 1 02:13:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb "} 

 Player 1 02:13:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb  \n2:Player 2 activated The Lost"} 

 Player 1 02:13:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb  \n2:Player 2 activated The Lost"} 

 Player 1 02:13:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb  \n2:Player 2 activated The Lost"} 

 Player 1 02:13:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb  \n2:Player 2 activated The Lost"} 

 Player 1 02:13:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb  \n2:Player 2 activated The Lost"} 

 Player 1 02:13:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb  \n2:Player 2 activated The Lost"} 

 Player 1 02:13:19 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:13:19 $ACTION_MASSAGE_REMOVE:  
{"id":183} 

 Player 2 02:13:19 $ACTION_MASSAGE_REMOVE:  
{"id":181} 

 Player 2 02:13:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":184,"_text":"Resolve PlayLootCardStackEffect 24 "}} 

 Player 2 02:13:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb: DealDamage"} 

 Player 2 02:13:19 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":103,"particleType":6} 

 Player 2 02:13:21 $DISABLE_PARTICLE_EFFECT:  
{"cardId":103,"particleType":6} 

 Player 2 02:13:21 $MONSTER_GET_DAMAGED:  
{"cardId":258,"hpLeft":0,"damageDealerId":298} 

 Player 2 02:13:21 $NEXT_STACK_ID:  

 Player 2 02:13:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb: DealDamage"} 

 Player 2 02:13:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:13:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb: DealDamage \n2:[object Object] killed by The Lost"} 

 Player 2 02:13:21 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":25,"creatorCardId":298,"monsterToDieCardId":258,"stackEffectType":5,"killerId":298}} 

 Player 2 02:13:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb: DealDamage \n2:[object Object] killed by The Lost"} 

 Player 2 02:13:21 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":24,"creatorCardId":298,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":103,"lootPlayerId":2,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":103,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 02:13:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb: DealDamage \n2:[object Object] killed by The Lost"} 

 Player 2 02:13:21 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":24,"creatorCardId":298,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":103,"lootPlayerId":2,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":103,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 02:13:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb: DealDamage \n2:[object Object] killed by The Lost"} 

 Player 2 02:13:21 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":25,"creatorCardId":298,"monsterToDieCardId":258,"stackEffectType":5,"killerId":298}} 

 Player 2 02:13:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb: DealDamage \n2:[object Object] killed by The Lost"} 

 Player 2 02:13:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb: DealDamage \n2:[object Object] killed by The Lost"} 

 Player 2 02:13:21 $REPLACE_STACK:  
{"currentStack":[{"entityId":24,"creatorCardId":298,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":103,"lootPlayerId":2,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":103,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":25,"creatorCardId":298,"monsterToDieCardId":258,"stackEffectType":5,"killerId":298}]} 

 Player 2 02:13:21 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":3},{"type":0,"number":298}],"result":null,"preventMethod":false,"methodScopeId":258,"scopeIsPlayer":false,"index":11,"originStackId":-1},"isAfterActivation":true,"index":11} 

 Player 2 02:13:21 $REMOVE_FROM_PILE:  
{"cardId":103} 

 Player 2 02:13:21 $MOVE_CARD:  
{"moveIndex":22,"cardId":103,"placeID":301,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 02:13:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb "} 

 Player 1 02:13:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb "} 

 Player 1 02:13:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by The Lost"} 

 Player 1 02:13:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by The Lost"} 

 Player 1 02:13:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by The Lost"} 

 Player 1 02:13:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by The Lost"} 

 Player 1 02:13:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by The Lost"} 

 Player 1 02:13:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by The Lost"} 

 Player 1 02:13:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by The Lost"} 

 Player 1 02:13:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by The Lost"} 

 Player 1 02:13:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by The Lost"} 

 Player 1 02:13:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by The Lost"} 

 Player 1 02:13:22 $MOVE_CARD_END:  
{"moveIndex":22,"cardId":103,"flipIfFlipped":true,"playerId":2} 

 Player 2 02:13:22 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":103} 

 Player 2 02:13:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb: DealDamage \n2:[object Object] killed by The Lost"} 

 Player 2 02:13:22 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":24,"creatorCardId":298,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":103,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 02:13:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by The Lost"} 

 Player 2 02:13:22 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":24,"creatorCardId":298,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":103,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 02:13:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":185,"_text":"Remove After Resolve PlayLootCardStackEffect 24  "}} 

 Player 2 02:13:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by The Lost"} 

 Player 2 02:13:22 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":24,"creatorCardId":298,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":103,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 02:13:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":186,"_text":"Response Remove After Resolve PlayLootCardStackEffect 24"},"childOfId":185} 

 Player 2 02:13:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":187,"_text":"Wait For Response From Player 2 "},"childOfId":185} 

 Player 2 02:13:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:13:22 $ACTION_MASSAGE_REMOVE:  
{"id":187} 

 Player 2 02:13:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":188,"_text":"Wait For Response From Player 1 "},"childOfId":185} 

 Player 2 02:13:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:13:22 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:13:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb  \n2:[object Object] killed by The Lost"} 

 Player 1 02:13:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb  \n2:[object Object] killed by The Lost"} 

 Player 1 02:13:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb  \n2:[object Object] killed by The Lost"} 

 Player 1 02:13:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb  \n2:[object Object] killed by The Lost"} 

 Player 1 02:13:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb  \n2:[object Object] killed by The Lost"} 

 Player 1 02:13:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb  \n2:[object Object] killed by The Lost"} 

 Player 1 02:13:22 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:13:22 $ACTION_MASSAGE_REMOVE:  
{"id":188} 

 Player 2 02:13:22 $ACTION_MASSAGE_REMOVE:  
{"id":186} 

 Player 2 02:13:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":189,"_text":"Resolve MonsterDeath 25 "}} 

 Player 2 02:13:22 $NEXT_STACK_ID:  

 Player 2 02:13:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by The Lost"} 

 Player 2 02:13:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:13:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Lust<Monster> reward \n2:[object Object] killed by The Lost"} 

 Player 2 02:13:23 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":26,"creatorCardId":298,"monsterCardWithRewardId":258,"playerCardIdToReward":298,"stackEffectType":7}} 

 Player 2 02:13:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Lust<Monster> reward \n2:[object Object] killed by The Lost"} 

 Player 2 02:13:23 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":25,"creatorCardId":298,"monsterToDieCardId":258,"stackEffectType":5,"killerId":298}} 

 Player 2 02:13:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Lust<Monster> reward \n2:[object Object] killed by The Lost"} 

 Player 2 02:13:23 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":26,"creatorCardId":298,"monsterCardWithRewardId":258,"playerCardIdToReward":298,"stackEffectType":7}} 

 Player 2 02:13:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Lust<Monster> reward \n2:[object Object] killed by The Lost"} 

 Player 2 02:13:23 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":25,"creatorCardId":298,"monsterToDieCardId":258,"stackEffectType":5,"killerId":298}} 

 Player 2 02:13:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Lust<Monster> reward \n2:[object Object] killed by The Lost"} 

 Player 2 02:13:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Lust<Monster> reward \n2:[object Object] killed by The Lost"} 

 Player 2 02:13:23 $REPLACE_STACK:  
{"currentStack":[{"entityId":26,"creatorCardId":298,"monsterCardWithRewardId":258,"playerCardIdToReward":298,"stackEffectType":7},{"entityId":25,"creatorCardId":298,"monsterToDieCardId":258,"stackEffectType":5,"killerId":298}]} 

 Player 2 02:13:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Lust<Monster> reward \n2:[object Object] killed by The Lost"} 

 Player 2 02:13:23 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":25,"creatorCardId":298,"monsterToDieCardId":258,"stackEffectType":5,"killerId":298}} 

 Player 2 02:13:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Lust<Monster> reward"} 

 Player 2 02:13:23 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":25,"creatorCardId":298,"monsterToDieCardId":258,"stackEffectType":5,"killerId":298}} 

 Player 2 02:13:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":190,"_text":"Remove After Resolve MonsterDeath 25  "}} 

 Player 2 02:13:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Lust<Monster> reward"} 

 Player 2 02:13:23 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":25,"creatorCardId":298,"monsterToDieCardId":258,"stackEffectType":5,"killerId":298}} 

 Player 2 02:13:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":191,"_text":"Response Remove After Resolve MonsterDeath 25"},"childOfId":190} 

 Player 2 02:13:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":192,"_text":"Wait For Response From Player 2 "},"childOfId":190} 

 Player 2 02:13:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:13:23 $ACTION_MASSAGE_REMOVE:  
{"id":192} 

 Player 2 02:13:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":193,"_text":"Wait For Response From Player 1 "},"childOfId":190} 

 Player 2 02:13:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:13:23 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:13:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by The Lost"} 

 Player 1 02:13:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by The Lost"} 

 Player 1 02:13:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Lust<Monster> reward"} 

 Player 1 02:13:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Lust<Monster> reward"} 

 Player 1 02:13:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Lust<Monster> reward"} 

 Player 1 02:13:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Lust<Monster> reward"} 

 Player 1 02:13:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Lust<Monster> reward"} 

 Player 1 02:13:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Lust<Monster> reward"} 

 Player 1 02:13:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Lust<Monster> reward"} 

 Player 1 02:13:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Lust<Monster> reward"} 

 Player 1 02:13:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Lust<Monster> reward"} 

 Player 1 02:13:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Lust<Monster> reward"} 

 Player 1 02:13:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Lust<Monster> reward \n2:[object Object] killed by The Lost"} 

 Player 1 02:13:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Lust<Monster> reward \n2:[object Object] killed by The Lost"} 

 Player 1 02:13:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Lust<Monster> reward \n2:[object Object] killed by The Lost"} 

 Player 1 02:13:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Lust<Monster> reward \n2:[object Object] killed by The Lost"} 

 Player 1 02:13:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Lust<Monster> reward \n2:[object Object] killed by The Lost"} 

 Player 1 02:13:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Lust<Monster> reward \n2:[object Object] killed by The Lost"} 

 Player 1 02:13:24 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:13:24 $ACTION_MASSAGE_REMOVE:  
{"id":193} 

 Player 2 02:13:24 $ACTION_MASSAGE_REMOVE:  
{"id":191} 

 Player 2 02:13:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":194,"_text":"Resolve MonsterRewardStackEffect 26 "}} 

 Player 2 02:13:24 $DRAW_CARD:  
{"deckType":1} 

 Player 2 02:13:24 $MOVE_CARD:  
{"moveIndex":23,"cardId":56,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 02:13:24 $MOVE_CARD_END:  
{"moveIndex":23,"cardId":56,"flipIfFlipped":false,"playerId":2} 

 Player 2 02:13:24 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":56} 

 Player 2 02:13:24 $FLIP_CARD:  
{"cardId":56} 

 Player 2 02:13:24 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":56} 

 Player 2 02:13:24 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":258,"scopeIsPlayer":false,"index":12,"originStackId":26},"isAfterActivation":true,"index":12} 

 Player 2 02:13:24 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:13:24 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:13:24 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":26,"creatorCardId":298,"monsterCardWithRewardId":258,"playerCardIdToReward":298,"stackEffectType":7}} 

 Player 2 02:13:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":195,"_text":"Fizzle MonsterRewardStackEffect 26"}} 

 Player 2 02:13:24 $FIZZLE_STACK_EFFECT:  
{"entityId":26} 

 Player 2 02:13:24 $MOVE_CARD:  
{"moveIndex":24,"cardId":258,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"soulsLayout"} 

 Player 1 02:13:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Lust<Monster> reward"} 

 Player 1 02:13:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Lust<Monster> reward"} 

 Player 1 02:13:25 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 02:13:25 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:13:25 $MOVE_CARD_END:  
{"moveIndex":24,"cardId":258,"flipIfFlipped":true,"playerId":2} 

 Player 2 02:13:25 $GET_SOUL:  
{"playerId":2,"cardId":258} 

 Player 2 02:13:25 $REMOVE_FROM_PASSIVE_MANAGER:  
{"cardId":258} 

 Player 2 02:13:25 $REMOVE_MONSTER:  
{"holderId":1,"monsterId":258} 

 Player 2 02:13:25 $NEXT_STACK_ID:  

 Player 2 02:13:25 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:13:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 2 02:13:25 $ADD_TO_STACK:  
{"stackEffect":{"entityId":27,"creatorCardId":298,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 2 02:13:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 2 02:13:25 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":27,"creatorCardId":298,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 2 02:13:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":196,"_text":"Add RefillEmptySlot 27 "}} 

 Player 2 02:13:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:13:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 2 02:13:25 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":27,"creatorCardId":298,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 2 02:13:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":197,"_text":"Response Adding RefillEmptySlot 27"},"childOfId":196} 

 Player 2 02:13:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":198,"_text":"Wait For Response From Player 2 "},"childOfId":196} 

 Player 2 02:13:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:13:25 $ACTION_MASSAGE_REMOVE:  
{"id":198} 

 Player 2 02:13:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":199,"_text":"Wait For Response From Player 1 "},"childOfId":196} 

 Player 2 02:13:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:13:25 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:13:25 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:13:25 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:13:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 1 02:13:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 1 02:13:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 1 02:13:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 1 02:13:26 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:13:26 $ACTION_MASSAGE_REMOVE:  
{"id":199} 

 Player 2 02:13:26 $ACTION_MASSAGE_REMOVE:  
{"id":197} 

 Player 2 02:13:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":200,"_text":"Resolve RefillEmptySlot 27 "}} 

 Player 2 02:13:26 $DRAW_CARD:  
{"deckType":2} 

 Player 2 02:13:26 $FLIP_CARD:  
{"cardId":261} 

 Player 2 02:13:26 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":261} 

 Player 2 02:13:26 $NEW_MONSTER_ON_PLACE:  
{"cardId":261,"monsterPlaceId":1} 

 Player 2 02:13:26 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:13:26 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":27,"creatorCardId":298,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 2 02:13:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":201,"_text":"Remove After Resolve RefillEmptySlot 27  "}} 

 Player 2 02:13:26 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:13:26 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":27,"creatorCardId":298,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 2 02:13:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":202,"_text":"Response Remove After Resolve RefillEmptySlot 27"},"childOfId":201} 

 Player 2 02:13:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":203,"_text":"Wait For Response From Player 1 "},"childOfId":201} 

 Player 2 02:13:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:13:26 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:13:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 1 02:13:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 1 02:13:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 1 02:13:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 1 02:13:26 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:13:26 $ACTION_MASSAGE_REMOVE:  
{"id":203} 

 Player 2 02:13:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":204,"_text":"Wait For Response From Player 2 "},"childOfId":201} 

 Player 2 02:13:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:13:26 $ACTION_MASSAGE_REMOVE:  
{"id":204} 

 Player 2 02:13:26 $ACTION_MASSAGE_REMOVE:  
{"id":202} 

 Player 2 02:13:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":205,"_text":"Stack Was Emptied "}} 

 Player 2 02:13:26 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:13:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":206,"_text":"Stack Was Emptied "}} 

 Player 2 02:13:26 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:14:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:14:15 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:14:15 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 2 02:14:15 $END_TURN:  

 Player 2 02:14:15 $SET_TURN:  
{"playerId":1} 

 Player 2 02:14:15 $START_TURN:  
{"playerId":1} 

 Player 1 02:14:15 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 02:14:15 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:14:15 $RECHARGE_ITEM:  
{"cardId":286} 

 Player 1 02:14:15 $PLAYER_RECHARGE_ITEM:  
{"playerId":1,"cardId":286} 

 Player 1 02:14:15 $RECHARGE_ITEM:  
{"cardId":289} 

 Player 1 02:14:15 $PLAYER_RECHARGE_ITEM:  
{"playerId":1,"cardId":289} 

 Player 1 02:14:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:14:15 $NEXT_STACK_ID:  

 Player 1 02:14:15 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:14:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 02:14:15 $ADD_TO_STACK:  
{"stackEffect":{"entityId":28,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 

 Player 1 02:14:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 02:14:15 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":28,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 

 Player 1 02:14:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":207,"_text":"Add StartTurnLoot 28 "}} 

 Player 1 02:14:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:14:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 02:14:15 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":28,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 

 Player 1 02:14:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":208,"_text":"Response Adding StartTurnLoot 28"},"childOfId":207} 

 Player 1 02:14:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":209,"_text":"Wait For Response From Player 1 "},"childOfId":207} 

 Player 1 02:14:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:14:15 $ACTION_MASSAGE_REMOVE:  
{"id":209} 

 Player 1 02:14:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":210,"_text":"Wait For Response From Player 2 "},"childOfId":207} 

 Player 1 02:14:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:14:15 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:14:15 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 02:14:15 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:14:15 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:14:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:14:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:14:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:14:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:14:16 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:14:16 $ACTION_MASSAGE_REMOVE:  
{"id":210} 

 Player 1 02:14:16 $ACTION_MASSAGE_REMOVE:  
{"id":208} 

 Player 1 02:14:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":211,"_text":"Resolve StartTurnLoot 28 "}} 

 Player 1 02:14:16 $DRAW_CARD:  
{"deckType":1} 

 Player 1 02:14:16 $MOVE_CARD:  
{"moveIndex":25,"cardId":80,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 02:14:16 $MOVE_CARD_END:  
{"moveIndex":25,"cardId":80,"flipIfFlipped":false,"playerId":1} 

 Player 1 02:14:16 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":80} 

 Player 1 02:14:16 $FLIP_CARD:  
{"cardId":80} 

 Player 1 02:14:16 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":80} 

 Player 1 02:14:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 02:14:16 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":28,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 

 Player 1 02:14:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:14:16 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":28,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 

 Player 1 02:14:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":212,"_text":"Remove After Resolve StartTurnLoot 28  "}} 

 Player 1 02:14:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:14:16 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":28,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 

 Player 1 02:14:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":213,"_text":"Response Remove After Resolve StartTurnLoot 28"},"childOfId":212} 

 Player 1 02:14:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":214,"_text":"Wait For Response From Player 2 "},"childOfId":212} 

 Player 1 02:14:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:14:17 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:14:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:14:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:14:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:14:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:14:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:14:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:14:17 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:14:17 $ACTION_MASSAGE_REMOVE:  
{"id":214} 

 Player 1 02:14:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":215,"_text":"Wait For Response From Player 1 "},"childOfId":212} 

 Player 1 02:14:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:14:17 $ACTION_MASSAGE_REMOVE:  
{"id":215} 

 Player 1 02:14:17 $ACTION_MASSAGE_REMOVE:  
{"id":213} 

 Player 1 02:14:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":216,"_text":"Stack Was Emptied "}} 

 Player 1 02:14:17 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:14:23 $SHOW_DECISION:  
{"startCardId":80,"endCardId":80,"flipEndCard":true} 

 Player 1 02:14:26 $NEXT_STACK_ID:  

 Player 1 02:14:26 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:14:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Nickel "} 

 Player 1 02:14:26 $ADD_TO_STACK:  
{"stackEffect":{"entityId":29,"creatorCardId":286,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":80,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 02:14:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Nickel "} 

 Player 1 02:14:26 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":29,"creatorCardId":286,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":80,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 02:14:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":217,"_text":"Add PlayLootCardStackEffect 29 "}} 

 Player 1 02:14:26 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":80} 

 Player 1 02:14:26 $MOVE_CARD:  
{"moveIndex":26,"cardId":80,"placeID":300,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 02:14:26 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:14:26 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:14:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Nickel "} 

 Player 2 02:14:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Nickel "} 

 Player 2 02:14:27 $MOVE_CARD_END:  
{"moveIndex":26,"cardId":80,"flipIfFlipped":true,"playerId":1} 

 Player 1 02:14:27 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":80} 

 Player 1 02:14:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Nickel: addMoney"} 

 Player 1 02:14:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:14:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Nickel: addMoney"} 

 Player 1 02:14:27 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":29,"creatorCardId":286,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":80,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":80,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 02:14:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":218,"_text":"Response Adding PlayLootCardStackEffect 29"},"childOfId":217} 

 Player 1 02:14:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":219,"_text":"Wait For Response From Player 1 "},"childOfId":217} 

 Player 1 02:14:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:14:27 $ACTION_MASSAGE_REMOVE:  
{"id":219} 

 Player 1 02:14:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":220,"_text":"Wait For Response From Player 2 "},"childOfId":217} 

 Player 1 02:14:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:14:27 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:14:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Nickel "} 

 Player 2 02:14:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Nickel "} 

 Player 2 02:14:27 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:14:27 $ACTION_MASSAGE_REMOVE:  
{"id":220} 

 Player 1 02:14:27 $ACTION_MASSAGE_REMOVE:  
{"id":218} 

 Player 1 02:14:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":221,"_text":"Resolve PlayLootCardStackEffect 29 "}} 

 Player 1 02:14:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Nickel: addMoney"} 

 Player 1 02:14:27 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":80,"particleType":6} 

 Player 1 02:14:29 $DISABLE_PARTICLE_EFFECT:  
{"cardId":80,"particleType":6} 

 Player 1 02:14:29 $SET_MONEY:  
{"playerId":1,"numOfCoins":11} 

 Player 1 02:14:29 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":5}],"result":null,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":14,"originStackId":-1},"isAfterActivation":true,"index":14} 

 Player 1 02:14:29 $REMOVE_FROM_PILE:  
{"cardId":80} 

 Player 1 02:14:29 $MOVE_CARD:  
{"moveIndex":27,"cardId":80,"placeID":301,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 02:14:30 $MOVE_CARD_END:  
{"moveIndex":27,"cardId":80,"flipIfFlipped":true,"playerId":1} 

 Player 1 02:14:30 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":80} 

 Player 1 02:14:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Nickel: addMoney"} 

 Player 1 02:14:30 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":29,"creatorCardId":286,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":80,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 02:14:30 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:14:30 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":29,"creatorCardId":286,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":80,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 02:14:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":222,"_text":"Remove After Resolve PlayLootCardStackEffect 29  "}} 

 Player 1 02:14:30 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:14:30 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":29,"creatorCardId":286,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":80,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 02:14:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":223,"_text":"Response Remove After Resolve PlayLootCardStackEffect 29"},"childOfId":222} 

 Player 1 02:14:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":224,"_text":"Wait For Response From Player 2 "},"childOfId":222} 

 Player 1 02:14:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:14:30 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:14:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Nickel "} 

 Player 2 02:14:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Nickel "} 

 Player 2 02:14:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Nickel "} 

 Player 2 02:14:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Nickel "} 

 Player 2 02:14:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Nickel "} 

 Player 2 02:14:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Nickel "} 

 Player 2 02:14:30 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:14:30 $ACTION_MASSAGE_REMOVE:  
{"id":224} 

 Player 1 02:14:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":225,"_text":"Wait For Response From Player 1 "},"childOfId":222} 

 Player 1 02:14:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:14:30 $ACTION_MASSAGE_REMOVE:  
{"id":225} 

 Player 1 02:14:30 $ACTION_MASSAGE_REMOVE:  
{"id":223} 

 Player 1 02:14:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":226,"_text":"Stack Was Emptied "}} 

 Player 1 02:14:30 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:14:32 $SHOW_DECISION:  
{"startCardId":286,"endCardId":289} 

 Player 1 02:14:35 $NEXT_STACK_ID:  

 Player 1 02:14:35 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:14:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 1 02:14:35 $ADD_TO_STACK:  
{"stackEffect":{"entityId":30,"creatorCardId":286,"hasLockingStackEffect":false,"itemToPlayCardId":289,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 02:14:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 1 02:14:35 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":30,"creatorCardId":286,"hasLockingStackEffect":false,"itemToPlayCardId":289,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 02:14:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":227,"_text":"Add ActivateItem 30 "}} 

 Player 2 02:14:35 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:14:35 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:14:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 02:14:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 1 02:14:36 $SHOW_DECISION:  
{"startCardId":289,"endCardId":144} 

 Player 1 02:14:39 $USE_ITEM:  
{"cardId":289} 

 Player 1 02:14:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:14:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 1 02:14:39 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":30,"creatorCardId":286,"hasLockingStackEffect":false,"itemToPlayCardId":289,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 02:14:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":228,"_text":"Response Adding ActivateItem 30"},"childOfId":227} 

 Player 1 02:14:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":229,"_text":"Wait For Response From Player 1 "},"childOfId":227} 

 Player 1 02:14:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:14:39 $ACTION_MASSAGE_REMOVE:  
{"id":229} 

 Player 1 02:14:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":230,"_text":"Wait For Response From Player 2 "},"childOfId":227} 

 Player 1 02:14:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:14:39 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:14:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 02:14:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 02:14:40 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:14:40 $ACTION_MASSAGE_REMOVE:  
{"id":230} 

 Player 1 02:14:40 $ACTION_MASSAGE_REMOVE:  
{"id":228} 

 Player 1 02:14:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":231,"_text":"Resolve ActivateItem 30 "}} 

 Player 1 02:14:40 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":289,"particleType":6} 

 Player 1 02:14:42 $DISABLE_PARTICLE_EFFECT:  
{"cardId":289,"particleType":6} 

 Player 1 02:15:56 $LOG_ERROR:  
{"message":"\"Cannot read property '0' of undefined\"","stack":"\"TypeError: Cannot read property '0' of undefined\\n    at Deck.drawSpecificCard (http://localhost:7456/preview-scripts/assets/Script/Entites/GameEntities/Deck.js:86:25)\\n    at http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardEffects/LookAtTopDeckAndPutOnTop.js:78:34\\n    at Array.forEach (<anonymous>)\\n    at LookAtTopDeckAndPutOnTop.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardEffects/LookAtTopDeckAndPutOnTop.js:77:39)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\\n    at fulfilled (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89787:28)\""} 
//////Error From Player 1////
  

 Player 1 02:15:56 $LOG_ERROR:  
//////Error From Player 1////

 "\"Cannot read property '0' of undefined\""

 + "\"TypeError: Cannot read property '0' of undefined\
    at Deck.drawSpecificCard (http://localhost:7456/preview-scripts/assets/Script/Entites/GameEntities/Deck.js:86:25)\
    at http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardEffects/LookAtTopDeckAndPutOnTop.js:78:34\
    at Array.forEach (<anonymous>)\
    at LookAtTopDeckAndPutOnTop.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardEffects/LookAtTopDeckAndPutOnTop.js:77:39)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at fulfilled (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89787:28)\""

////// 
//////Error From Player 1////

 "\"Cannot read property '0' of undefined\""

 + "\"TypeError: Cannot read property '0' of undefined\
    at Deck.drawSpecificCard (http://localhost:7456/preview-scripts/assets/Script/Entites/GameEntities/Deck.js:86:25)\
    at http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardEffects/LookAtTopDeckAndPutOnTop.js:78:34\
    at Array.forEach (<anonymous>)\
    at LookAtTopDeckAndPutOnTop.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardEffects/LookAtTopDeckAndPutOnTop.js:77:39)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at fulfilled (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89787:28)\""

////// 

 Player 1 02:15:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 1 02:15:56 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":30,"creatorCardId":286,"hasLockingStackEffect":false,"itemToPlayCardId":289,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 02:15:57 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:15:57 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":30,"creatorCardId":286,"hasLockingStackEffect":false,"itemToPlayCardId":289,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 02:15:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":232,"_text":"Remove After Resolve ActivateItem 30  "}} 

 Player 1 02:15:57 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:15:57 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":30,"creatorCardId":286,"hasLockingStackEffect":false,"itemToPlayCardId":289,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 02:15:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":233,"_text":"Response Remove After Resolve ActivateItem 30"},"childOfId":232} 

 Player 1 02:15:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":234,"_text":"Wait For Response From Player 2 "},"childOfId":232} 

 Player 1 02:15:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:15:57 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:15:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 02:15:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 02:15:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 02:15:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 02:15:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 02:15:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 02:15:58 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:15:58 $ACTION_MASSAGE_REMOVE:  
{"id":234} 

 Player 1 02:15:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":235,"_text":"Wait For Response From Player 1 "},"childOfId":232} 

 Player 1 02:15:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:15:58 $ACTION_MASSAGE_REMOVE:  
{"id":235} 

 Player 1 02:15:58 $ACTION_MASSAGE_REMOVE:  
{"id":233} 

 Player 1 02:15:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":236,"_text":"Stack Was Emptied "}} 

 Player 1 02:15:58 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:17:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:17:09 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:17:10 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 1 02:17:10 $END_TURN:  

 Player 1 02:17:10 $SET_TURN:  
{"playerId":2} 

 Player 1 02:17:10 $START_TURN:  
{"playerId":2} 

 Player 2 02:17:10 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 02:17:10 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:17:10 $RECHARGE_ITEM:  
{"cardId":298} 

 Player 2 02:17:10 $PLAYER_RECHARGE_ITEM:  
{"playerId":2,"cardId":298} 

 Player 2 02:17:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:17:10 $NEXT_STACK_ID:  

 Player 2 02:17:10 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:17:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 02:17:10 $ADD_TO_STACK:  
{"stackEffect":{"entityId":31,"creatorCardId":298,"turnPlayerCardId":298,"stackEffectType":13}} 

 Player 2 02:17:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 02:17:10 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":31,"creatorCardId":298,"turnPlayerCardId":298,"stackEffectType":13}} 

 Player 2 02:17:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":237,"_text":"Add StartTurnLoot 31 "}} 

 Player 2 02:17:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:17:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 02:17:11 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":31,"creatorCardId":298,"turnPlayerCardId":298,"stackEffectType":13}} 

 Player 2 02:17:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":238,"_text":"Response Adding StartTurnLoot 31"},"childOfId":237} 

 Player 2 02:17:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":239,"_text":"Wait For Response From Player 2 "},"childOfId":237} 

 Player 2 02:17:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:17:11 $ACTION_MASSAGE_REMOVE:  
{"id":239} 

 Player 2 02:17:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":240,"_text":"Wait For Response From Player 1 "},"childOfId":237} 

 Player 2 02:17:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:17:11 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:17:11 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 02:17:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:17:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:17:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 02:17:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 02:17:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 02:17:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 02:17:11 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:17:11 $ACTION_MASSAGE_REMOVE:  
{"id":240} 

 Player 2 02:17:11 $ACTION_MASSAGE_REMOVE:  
{"id":238} 

 Player 2 02:17:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":241,"_text":"Resolve StartTurnLoot 31 "}} 

 Player 2 02:17:11 $DRAW_CARD:  
{"deckType":1} 

 Player 2 02:17:11 $MOVE_CARD:  
{"moveIndex":28,"cardId":67,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 02:17:11 $MOVE_CARD_END:  
{"moveIndex":28,"cardId":67,"flipIfFlipped":false,"playerId":2} 

 Player 2 02:17:12 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":67} 

 Player 2 02:17:12 $FLIP_CARD:  
{"cardId":67} 

 Player 2 02:17:12 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":67} 

 Player 2 02:17:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 02:17:12 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":31,"creatorCardId":298,"turnPlayerCardId":298,"stackEffectType":13}} 

 Player 2 02:17:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:17:12 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":31,"creatorCardId":298,"turnPlayerCardId":298,"stackEffectType":13}} 

 Player 2 02:17:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":242,"_text":"Remove After Resolve StartTurnLoot 31  "}} 

 Player 2 02:17:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:17:12 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":31,"creatorCardId":298,"turnPlayerCardId":298,"stackEffectType":13}} 

 Player 2 02:17:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":243,"_text":"Response Remove After Resolve StartTurnLoot 31"},"childOfId":242} 

 Player 2 02:17:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":244,"_text":"Wait For Response From Player 1 "},"childOfId":242} 

 Player 2 02:17:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:17:12 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:17:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 02:17:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 02:17:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 02:17:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 02:17:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 02:17:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 02:17:12 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:17:12 $ACTION_MASSAGE_REMOVE:  
{"id":244} 

 Player 2 02:17:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":245,"_text":"Wait For Response From Player 2 "},"childOfId":242} 

 Player 2 02:17:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:17:12 $ACTION_MASSAGE_REMOVE:  
{"id":245} 

 Player 2 02:17:12 $ACTION_MASSAGE_REMOVE:  
{"id":243} 

 Player 2 02:17:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":246,"_text":"Stack Was Emptied "}} 

 Player 2 02:17:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:17:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:17:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:17:13 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 2 02:17:13 $END_TURN:  

 Player 2 02:17:13 $SET_TURN:  
{"playerId":1} 

 Player 2 02:17:13 $START_TURN:  
{"playerId":1} 

 Player 1 02:17:13 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 02:17:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:17:13 $RECHARGE_ITEM:  
{"cardId":289} 

 Player 1 02:17:13 $PLAYER_RECHARGE_ITEM:  
{"playerId":1,"cardId":289} 

 Player 1 02:17:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:17:13 $NEXT_STACK_ID:  

 Player 1 02:17:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:17:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 02:17:13 $ADD_TO_STACK:  
{"stackEffect":{"entityId":32,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 

 Player 1 02:17:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 02:17:13 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":32,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 

 Player 1 02:17:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":247,"_text":"Add StartTurnLoot 32 "}} 

 Player 1 02:17:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:17:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 02:17:13 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":32,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 

 Player 1 02:17:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":248,"_text":"Response Adding StartTurnLoot 32"},"childOfId":247} 

 Player 1 02:17:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":249,"_text":"Wait For Response From Player 1 "},"childOfId":247} 

 Player 1 02:17:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:17:14 $ACTION_MASSAGE_REMOVE:  
{"id":249} 

 Player 1 02:17:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":250,"_text":"Wait For Response From Player 2 "},"childOfId":247} 

 Player 1 02:17:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:17:14 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:17:14 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 02:17:14 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:17:14 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:17:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:17:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:17:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:17:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:17:14 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:17:14 $ACTION_MASSAGE_REMOVE:  
{"id":250} 

 Player 1 02:17:14 $ACTION_MASSAGE_REMOVE:  
{"id":248} 

 Player 1 02:17:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":251,"_text":"Resolve StartTurnLoot 32 "}} 

 Player 1 02:17:14 $DRAW_CARD:  
{"deckType":1} 

 Player 1 02:17:14 $MOVE_CARD:  
{"moveIndex":29,"cardId":75,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 02:17:14 $MOVE_CARD_END:  
{"moveIndex":29,"cardId":75,"flipIfFlipped":false,"playerId":1} 

 Player 1 02:17:14 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":75} 

 Player 1 02:17:14 $FLIP_CARD:  
{"cardId":75} 

 Player 1 02:17:14 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":75} 

 Player 1 02:17:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 02:17:14 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":32,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 

 Player 1 02:17:14 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:17:14 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":32,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 

 Player 1 02:17:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":252,"_text":"Remove After Resolve StartTurnLoot 32  "}} 

 Player 1 02:17:15 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:17:15 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":32,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 

 Player 1 02:17:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":253,"_text":"Response Remove After Resolve StartTurnLoot 32"},"childOfId":252} 

 Player 1 02:17:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":254,"_text":"Wait For Response From Player 2 "},"childOfId":252} 

 Player 1 02:17:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:17:15 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:17:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:17:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:17:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:17:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:17:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:17:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:17:15 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:17:15 $ACTION_MASSAGE_REMOVE:  
{"id":254} 

 Player 1 02:17:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":255,"_text":"Wait For Response From Player 1 "},"childOfId":252} 

 Player 1 02:17:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:17:15 $ACTION_MASSAGE_REMOVE:  
{"id":255} 

 Player 1 02:17:15 $ACTION_MASSAGE_REMOVE:  
{"id":253} 

 Player 1 02:17:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":256,"_text":"Stack Was Emptied "}} 

 Player 1 02:17:15 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:17:19 $SHOW_DECISION:  
{"startCardId":286,"endCardId":159} 

 Player 1 02:17:22 $NEXT_STACK_ID:  

 Player 1 02:17:22 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:17:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Cursed Eye for 10"} 

 Player 1 02:17:22 $ADD_TO_STACK:  
{"stackEffect":{"entityId":33,"creatorCardId":286,"itemToPurchaseCardId":159,"playerWhoBuysCardId":286,"cost":10,"stackEffectType":9}} 

 Player 1 02:17:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Cursed Eye for 10"} 

 Player 1 02:17:22 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":33,"creatorCardId":286,"itemToPurchaseCardId":159,"playerWhoBuysCardId":286,"cost":10,"stackEffectType":9}} 

 Player 1 02:17:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":257,"_text":"Add PurchaseItem 33 "}} 

 Player 1 02:17:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:17:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Cursed Eye for 10"} 

 Player 1 02:17:22 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":33,"creatorCardId":286,"itemToPurchaseCardId":159,"playerWhoBuysCardId":286,"cost":10,"stackEffectType":9}} 

 Player 1 02:17:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":258,"_text":"Response Adding PurchaseItem 33"},"childOfId":257} 

 Player 1 02:17:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":259,"_text":"Wait For Response From Player 1 "},"childOfId":257} 

 Player 1 02:17:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:17:22 $ACTION_MASSAGE_REMOVE:  
{"id":259} 

 Player 1 02:17:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":260,"_text":"Wait For Response From Player 2 "},"childOfId":257} 

 Player 1 02:17:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:17:22 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:17:22 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:17:22 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:17:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Cursed Eye for 10"} 

 Player 2 02:17:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Cursed Eye for 10"} 

 Player 2 02:17:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Cursed Eye for 10"} 

 Player 2 02:17:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Cursed Eye for 10"} 

 Player 2 02:17:22 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:17:22 $ACTION_MASSAGE_REMOVE:  
{"id":260} 

 Player 1 02:17:22 $ACTION_MASSAGE_REMOVE:  
{"id":258} 

 Player 1 02:17:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":261,"_text":"Resolve PurchaseItem 33 "}} 

 Player 1 02:17:22 $SET_MONEY:  
{"playerId":1,"numOfCoins":1} 

 Player 1 02:17:22 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-10}],"result":null,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":15,"originStackId":-1},"isAfterActivation":true,"index":15} 

 Player 1 02:17:22 $REMOVE_ITEM_FROM_SHOP:  
{"cardId":159} 

 Player 1 02:17:22 $NEXT_STACK_ID:  

 Player 1 02:17:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Cursed Eye for 10"} 

 Player 1 02:17:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:17:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Cursed Eye for 10 \n2:Refill Store slot"} 

 Player 1 02:17:23 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":34,"creatorCardId":286,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 1 02:17:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Cursed Eye for 10 \n2:Refill Store slot"} 

 Player 1 02:17:23 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":33,"creatorCardId":286,"itemToPurchaseCardId":159,"playerWhoBuysCardId":286,"cost":10,"stackEffectType":9}} 

 Player 1 02:17:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Cursed Eye for 10 \n2:Refill Store slot"} 

 Player 1 02:17:23 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":33,"creatorCardId":286,"itemToPurchaseCardId":159,"playerWhoBuysCardId":286,"cost":10,"stackEffectType":9}} 

 Player 1 02:17:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Cursed Eye for 10 \n2:Refill Store slot"} 

 Player 1 02:17:23 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":34,"creatorCardId":286,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 1 02:17:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Cursed Eye for 10 \n2:Refill Store slot"} 

 Player 1 02:17:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Cursed Eye for 10 \n2:Refill Store slot"} 

 Player 1 02:17:23 $REPLACE_STACK:  
{"currentStack":[{"entityId":33,"creatorCardId":286,"itemToPurchaseCardId":159,"playerWhoBuysCardId":286,"cost":10,"stackEffectType":9},{"entityId":34,"creatorCardId":286,"slotType":5,"slotToFillId":0,"stackEffectType":10}]} 

 Player 1 02:17:23 $REGISTER_PASSIVE_ITEM:  
{"cardId":159} 

 Player 1 02:17:23 $MOVE_CARD:  
{"moveIndex":30,"cardId":159,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 

 Player 2 02:17:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Cursed Eye for 10"} 

 Player 2 02:17:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Cursed Eye for 10"} 

 Player 2 02:17:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 2 02:17:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 2 02:17:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 2 02:17:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 2 02:17:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 2 02:17:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 2 02:17:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 2 02:17:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 2 02:17:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 2 02:17:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 2 02:17:23 $MOVE_CARD_END:  
{"moveIndex":30,"cardId":159,"flipIfFlipped":true,"playerId":1} 

 Player 1 02:17:23 $ADD_AN_ITEM:  
{"playerId":1,"cardId":159,"isReward":false} 

 Player 1 02:17:23 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":159}],"result":true,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":16,"originStackId":-1},"isAfterActivation":true,"index":16} 

 Player 1 02:17:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 02:17:23 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":33,"creatorCardId":286,"itemToPurchaseCardId":159,"playerWhoBuysCardId":286,"cost":10,"stackEffectType":9}} 

 Player 1 02:17:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":262,"_text":"Remove After Resolve PurchaseItem 33  "}} 

 Player 1 02:17:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 02:17:23 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":33,"creatorCardId":286,"itemToPurchaseCardId":159,"playerWhoBuysCardId":286,"cost":10,"stackEffectType":9}} 

 Player 1 02:17:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":263,"_text":"Response Remove After Resolve PurchaseItem 33"},"childOfId":262} 

 Player 1 02:17:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":264,"_text":"Wait For Response From Player 1 "},"childOfId":262} 

 Player 1 02:17:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:17:24 $ACTION_MASSAGE_REMOVE:  
{"id":264} 

 Player 1 02:17:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":265,"_text":"Wait For Response From Player 2 "},"childOfId":262} 

 Player 1 02:17:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:17:24 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:17:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Cursed Eye for 10 \n2:Refill Store slot"} 

 Player 2 02:17:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Cursed Eye for 10 \n2:Refill Store slot"} 

 Player 2 02:17:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Cursed Eye for 10 \n2:Refill Store slot"} 

 Player 2 02:17:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Cursed Eye for 10 \n2:Refill Store slot"} 

 Player 2 02:17:24 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:17:24 $ACTION_MASSAGE_REMOVE:  
{"id":265} 

 Player 1 02:17:24 $ACTION_MASSAGE_REMOVE:  
{"id":263} 

 Player 1 02:17:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":266,"_text":"Resolve RefillEmptySlot 34 "}} 

 Player 1 02:17:24 $DRAW_CARD:  
{"deckType":5} 

 Player 1 02:17:24 $FLIP_CARD:  
{"cardId":211} 

 Player 1 02:17:24 $ADD_STORE_CARD:  
{"cardId":211} 

 Player 1 02:17:24 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:17:24 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":34,"creatorCardId":286,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 1 02:17:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":267,"_text":"Remove After Resolve RefillEmptySlot 34  "}} 

 Player 1 02:17:24 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:17:24 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":34,"creatorCardId":286,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 1 02:17:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":268,"_text":"Response Remove After Resolve RefillEmptySlot 34"},"childOfId":267} 

 Player 1 02:17:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":269,"_text":"Wait For Response From Player 2 "},"childOfId":267} 

 Player 1 02:17:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:17:24 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:17:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 2 02:17:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 2 02:17:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 2 02:17:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 2 02:17:24 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:17:24 $ACTION_MASSAGE_REMOVE:  
{"id":269} 

 Player 1 02:17:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":270,"_text":"Wait For Response From Player 1 "},"childOfId":267} 

 Player 1 02:17:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:17:24 $ACTION_MASSAGE_REMOVE:  
{"id":270} 

 Player 1 02:17:25 $ACTION_MASSAGE_REMOVE:  
{"id":268} 

 Player 1 02:17:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":271,"_text":"Stack Was Emptied "}} 

 Player 1 02:17:25 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:18:13 $SHOW_DECISION:  
{"startCardId":286,"endCardId":289} 

 Player 1 02:18:16 $NEXT_STACK_ID:  

 Player 1 02:18:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:18:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 1 02:18:16 $ADD_TO_STACK:  
{"stackEffect":{"entityId":35,"creatorCardId":286,"hasLockingStackEffect":false,"itemToPlayCardId":289,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 02:18:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 1 02:18:16 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":35,"creatorCardId":286,"hasLockingStackEffect":false,"itemToPlayCardId":289,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 02:18:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":272,"_text":"Add ActivateItem 35 "}} 

 Player 2 02:18:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:18:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:18:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 02:18:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 1 02:18:18 $SHOW_DECISION:  
{"startCardId":289,"endCardId":144} 

 Player 1 02:18:21 $USE_ITEM:  
{"cardId":289} 

 Player 1 02:18:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:18:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 1 02:18:21 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":35,"creatorCardId":286,"hasLockingStackEffect":false,"itemToPlayCardId":289,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 02:18:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":273,"_text":"Response Adding ActivateItem 35"},"childOfId":272} 

 Player 1 02:18:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":274,"_text":"Wait For Response From Player 1 "},"childOfId":272} 

 Player 1 02:18:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:18:21 $ACTION_MASSAGE_REMOVE:  
{"id":274} 

 Player 1 02:18:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":275,"_text":"Wait For Response From Player 2 "},"childOfId":272} 

 Player 1 02:18:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:18:21 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:18:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 02:18:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 02:18:21 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:18:21 $ACTION_MASSAGE_REMOVE:  
{"id":275} 

 Player 1 02:18:21 $ACTION_MASSAGE_REMOVE:  
{"id":273} 

 Player 1 02:18:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":276,"_text":"Resolve ActivateItem 35 "}} 

 Player 1 02:18:21 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":289,"particleType":6} 

 Player 1 02:18:23 $DISABLE_PARTICLE_EFFECT:  
{"cardId":289,"particleType":6} 

 Player 1 02:20:36 $LOG_ERROR:  
{"message":"\"Cannot read property '0' of undefined\"","stack":"\"TypeError: Cannot read property '0' of undefined\\n    at Deck.drawSpecificCard (http://localhost:7456/preview-scripts/assets/Script/Entites/GameEntities/Deck.js:86:25)\\n    at http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardEffects/LookAtTopDeckAndPutOnTop.js:78:34\\n    at Array.forEach (<anonymous>)\\n    at LookAtTopDeckAndPutOnTop.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardEffects/LookAtTopDeckAndPutOnTop.js:77:39)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\\n    at fulfilled (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89787:28)\""} 
//////Error From Player 1////
  

 Player 1 02:20:36 $LOG_ERROR:  
//////Error From Player 1////

 "\"Cannot read property '0' of undefined\""

 + "\"TypeError: Cannot read property '0' of undefined\
    at Deck.drawSpecificCard (http://localhost:7456/preview-scripts/assets/Script/Entites/GameEntities/Deck.js:86:25)\
    at http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardEffects/LookAtTopDeckAndPutOnTop.js:78:34\
    at Array.forEach (<anonymous>)\
    at LookAtTopDeckAndPutOnTop.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardEffects/LookAtTopDeckAndPutOnTop.js:77:39)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at fulfilled (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89787:28)\""

////// 
//////Error From Player 1////

 "\"Cannot read property '0' of undefined\""

 + "\"TypeError: Cannot read property '0' of undefined\
    at Deck.drawSpecificCard (http://localhost:7456/preview-scripts/assets/Script/Entites/GameEntities/Deck.js:86:25)\
    at http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardEffects/LookAtTopDeckAndPutOnTop.js:78:34\
    at Array.forEach (<anonymous>)\
    at LookAtTopDeckAndPutOnTop.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardEffects/LookAtTopDeckAndPutOnTop.js:77:39)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at fulfilled (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89787:28)\""

////// 

 Player 1 02:20:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 1 02:20:37 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":35,"creatorCardId":286,"hasLockingStackEffect":false,"itemToPlayCardId":289,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 02:20:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:20:37 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":35,"creatorCardId":286,"hasLockingStackEffect":false,"itemToPlayCardId":289,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 02:20:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":277,"_text":"Remove After Resolve ActivateItem 35  "}} 

 Player 1 02:20:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:20:37 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":35,"creatorCardId":286,"hasLockingStackEffect":false,"itemToPlayCardId":289,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 02:20:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":278,"_text":"Response Remove After Resolve ActivateItem 35"},"childOfId":277} 

 Player 1 02:20:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":279,"_text":"Wait For Response From Player 2 "},"childOfId":277} 

 Player 1 02:20:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:20:37 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:20:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 02:20:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 02:20:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 02:20:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 02:20:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 02:20:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 02:20:38 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:20:38 $ACTION_MASSAGE_REMOVE:  
{"id":279} 

 Player 1 02:20:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":280,"_text":"Wait For Response From Player 1 "},"childOfId":277} 

 Player 1 02:20:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:20:38 $ACTION_MASSAGE_REMOVE:  
{"id":280} 

 Player 1 02:20:38 $ACTION_MASSAGE_REMOVE:  
{"id":278} 

 Player 1 02:20:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":281,"_text":"Stack Was Emptied "}} 

 Player 1 02:20:38 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:21:06 $SHOW_DECISION:  
{"startCardId":75,"endCardId":75,"flipEndCard":true} 

 Player 1 02:21:09 $NEXT_STACK_ID:  

 Player 1 02:21:09 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:21:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Dime(1) "} 

 Player 1 02:21:09 $ADD_TO_STACK:  
{"stackEffect":{"entityId":36,"creatorCardId":286,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":75,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 02:21:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Dime(1) "} 

 Player 1 02:21:09 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":36,"creatorCardId":286,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":75,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 02:21:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":282,"_text":"Add PlayLootCardStackEffect 36 "}} 

 Player 1 02:21:09 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":75} 

 Player 1 02:21:09 $MOVE_CARD:  
{"moveIndex":31,"cardId":75,"placeID":300,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 02:21:09 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:21:10 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:21:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Dime(1) "} 

 Player 2 02:21:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Dime(1) "} 

 Player 2 02:21:10 $MOVE_CARD_END:  
{"moveIndex":31,"cardId":75,"flipIfFlipped":true,"playerId":1} 

 Player 1 02:21:10 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":75} 

 Player 1 02:21:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Dime(1): addMoney"} 

 Player 1 02:21:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:21:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Dime(1): addMoney"} 

 Player 1 02:21:10 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":36,"creatorCardId":286,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":75,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":75,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 02:21:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":283,"_text":"Response Adding PlayLootCardStackEffect 36"},"childOfId":282} 

 Player 1 02:21:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":284,"_text":"Wait For Response From Player 1 "},"childOfId":282} 

 Player 1 02:21:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:21:10 $ACTION_MASSAGE_REMOVE:  
{"id":284} 

 Player 1 02:21:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":285,"_text":"Wait For Response From Player 2 "},"childOfId":282} 

 Player 1 02:21:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:21:10 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:21:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Dime(1) "} 

 Player 2 02:21:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Dime(1) "} 

 Player 2 02:21:10 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:21:10 $ACTION_MASSAGE_REMOVE:  
{"id":285} 

 Player 1 02:21:10 $ACTION_MASSAGE_REMOVE:  
{"id":283} 

 Player 1 02:21:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":286,"_text":"Resolve PlayLootCardStackEffect 36 "}} 

 Player 1 02:21:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Dime(1): addMoney"} 

 Player 1 02:21:10 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":75,"particleType":6} 

 Player 1 02:21:12 $DISABLE_PARTICLE_EFFECT:  
{"cardId":75,"particleType":6} 

 Player 1 02:21:12 $SET_MONEY:  
{"playerId":1,"numOfCoins":11} 

 Player 1 02:21:12 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":10}],"result":null,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":17,"originStackId":-1},"isAfterActivation":true,"index":17} 

 Player 1 02:21:12 $REMOVE_FROM_PILE:  
{"cardId":75} 

 Player 1 02:21:12 $MOVE_CARD:  
{"moveIndex":32,"cardId":75,"placeID":301,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 02:21:13 $MOVE_CARD_END:  
{"moveIndex":32,"cardId":75,"flipIfFlipped":true,"playerId":1} 

 Player 1 02:21:13 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":75} 

 Player 1 02:21:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Dime(1): addMoney"} 

 Player 1 02:21:13 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":36,"creatorCardId":286,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":75,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 02:21:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:21:13 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":36,"creatorCardId":286,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":75,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 02:21:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":287,"_text":"Remove After Resolve PlayLootCardStackEffect 36  "}} 

 Player 1 02:21:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:21:13 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":36,"creatorCardId":286,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":75,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 02:21:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":288,"_text":"Response Remove After Resolve PlayLootCardStackEffect 36"},"childOfId":287} 

 Player 1 02:21:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":289,"_text":"Wait For Response From Player 2 "},"childOfId":287} 

 Player 1 02:21:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:21:13 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:21:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Dime(1) "} 

 Player 2 02:21:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Dime(1) "} 

 Player 2 02:21:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Dime(1) "} 

 Player 2 02:21:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Dime(1) "} 

 Player 2 02:21:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Dime(1) "} 

 Player 2 02:21:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Dime(1) "} 

 Player 2 02:21:13 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:21:13 $ACTION_MASSAGE_REMOVE:  
{"id":289} 

 Player 1 02:21:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":290,"_text":"Wait For Response From Player 1 "},"childOfId":287} 

 Player 1 02:21:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:21:13 $ACTION_MASSAGE_REMOVE:  
{"id":290} 

 Player 1 02:21:13 $ACTION_MASSAGE_REMOVE:  
{"id":288} 

 Player 1 02:21:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":291,"_text":"Stack Was Emptied "}} 

 Player 1 02:21:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:21:16 $SHOW_DECISION:  
{"startCardId":286,"endCardId":211} 

 Player 1 02:21:19 $NEXT_STACK_ID:  

 Player 1 02:21:19 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:21:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10"} 

 Player 1 02:21:19 $ADD_TO_STACK:  
{"stackEffect":{"entityId":37,"creatorCardId":286,"itemToPurchaseCardId":211,"playerWhoBuysCardId":286,"cost":10,"stackEffectType":9}} 

 Player 1 02:21:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10"} 

 Player 1 02:21:19 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":37,"creatorCardId":286,"itemToPurchaseCardId":211,"playerWhoBuysCardId":286,"cost":10,"stackEffectType":9}} 

 Player 1 02:21:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":292,"_text":"Add PurchaseItem 37 "}} 

 Player 1 02:21:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:21:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10"} 

 Player 1 02:21:20 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":37,"creatorCardId":286,"itemToPurchaseCardId":211,"playerWhoBuysCardId":286,"cost":10,"stackEffectType":9}} 

 Player 1 02:21:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":293,"_text":"Response Adding PurchaseItem 37"},"childOfId":292} 

 Player 1 02:21:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":294,"_text":"Wait For Response From Player 1 "},"childOfId":292} 

 Player 1 02:21:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:21:20 $ACTION_MASSAGE_REMOVE:  
{"id":294} 

 Player 1 02:21:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":295,"_text":"Wait For Response From Player 2 "},"childOfId":292} 

 Player 1 02:21:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:21:20 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:21:20 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:21:20 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:21:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10"} 

 Player 2 02:21:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10"} 

 Player 2 02:21:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10"} 

 Player 2 02:21:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10"} 

 Player 2 02:21:20 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:21:20 $ACTION_MASSAGE_REMOVE:  
{"id":295} 

 Player 1 02:21:20 $ACTION_MASSAGE_REMOVE:  
{"id":293} 

 Player 1 02:21:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":296,"_text":"Resolve PurchaseItem 37 "}} 

 Player 1 02:21:20 $SET_MONEY:  
{"playerId":1,"numOfCoins":1} 

 Player 1 02:21:20 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-10}],"result":null,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":18,"originStackId":-1},"isAfterActivation":true,"index":18} 

 Player 1 02:21:20 $REMOVE_ITEM_FROM_SHOP:  
{"cardId":211} 

 Player 1 02:21:20 $NEXT_STACK_ID:  

 Player 1 02:21:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10"} 

 Player 1 02:21:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:21:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10 \n2:Refill Store slot"} 

 Player 1 02:21:20 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":38,"creatorCardId":286,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 1 02:21:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10 \n2:Refill Store slot"} 

 Player 1 02:21:20 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":37,"creatorCardId":286,"itemToPurchaseCardId":211,"playerWhoBuysCardId":286,"cost":10,"stackEffectType":9}} 

 Player 1 02:21:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10 \n2:Refill Store slot"} 

 Player 1 02:21:20 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":37,"creatorCardId":286,"itemToPurchaseCardId":211,"playerWhoBuysCardId":286,"cost":10,"stackEffectType":9}} 

 Player 1 02:21:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10 \n2:Refill Store slot"} 

 Player 1 02:21:20 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":38,"creatorCardId":286,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 1 02:21:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10 \n2:Refill Store slot"} 

 Player 1 02:21:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10 \n2:Refill Store slot"} 

 Player 1 02:21:21 $REPLACE_STACK:  
{"currentStack":[{"entityId":37,"creatorCardId":286,"itemToPurchaseCardId":211,"playerWhoBuysCardId":286,"cost":10,"stackEffectType":9},{"entityId":38,"creatorCardId":286,"slotType":5,"slotToFillId":0,"stackEffectType":10}]} 

 Player 1 02:21:21 $REGISTER_PASSIVE_ITEM:  
{"cardId":211} 

 Player 1 02:21:21 $MOVE_CARD:  
{"moveIndex":33,"cardId":211,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 

 Player 2 02:21:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10"} 

 Player 2 02:21:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10"} 

 Player 2 02:21:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 2 02:21:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 2 02:21:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 2 02:21:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 2 02:21:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 2 02:21:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 2 02:21:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 2 02:21:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 2 02:21:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 2 02:21:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 2 02:21:21 $MOVE_CARD_END:  
{"moveIndex":33,"cardId":211,"flipIfFlipped":true,"playerId":1} 

 Player 1 02:21:21 $ADD_AN_ITEM:  
{"playerId":1,"cardId":211,"isReward":false} 

 Player 1 02:21:21 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":211}],"result":true,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":19,"originStackId":-1},"isAfterActivation":true,"index":19} 

 Player 1 02:21:21 $NEXT_STACK_ID:  

 Player 1 02:21:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10 \n2:Refill Store slot"} 

 Player 1 02:21:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10 \n2:Refill Store slot \n3:Activate Steamy Sale effect Steamy Sale Effect<Steamy Sale Effect>"} 

 Player 1 02:21:21 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":39,"creatorCardId":286,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":211,"effectToDo":{"effectName":"SteamySaleEffect","cardEffectNum":0,"cardPlayerId":1,"cardId":211,"effctType":0},"isAfterActivation":true,"index":19,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 02:21:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10 \n2:Refill Store slot \n3:Activate Steamy Sale effect Steamy Sale Effect<Steamy Sale Effect>"} 

 Player 1 02:21:21 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":39,"creatorCardId":286,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":211,"effectToDo":{"effectName":"SteamySaleEffect","cardEffectNum":0,"cardPlayerId":1,"cardId":211,"effctType":0},"isAfterActivation":true,"index":19,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 02:21:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":297,"_text":"Add ActivatePassiveEffect 39 "}} 

 Player 1 02:21:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10 \n2:Refill Store slot \n3:Activate Steamy Sale effect Steamy Sale Effect<Steamy Sale Effect>"} 

 Player 1 02:21:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10 \n2:Refill Store slot \n3:Activate Steamy Sale effect Steamy Sale Effect<Steamy Sale Effect>"} 

 Player 1 02:21:21 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":39,"creatorCardId":286,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":211,"effectToDo":{"effectName":"SteamySaleEffect","cardEffectNum":0,"cardPlayerId":1,"cardId":211,"effctType":0},"isAfterActivation":true,"index":19,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 02:21:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":298,"_text":"Response Adding ActivatePassiveEffect 39"},"childOfId":297} 

 Player 1 02:21:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":299,"_text":"Wait For Response From Player 1 "},"childOfId":297} 

 Player 1 02:21:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:21:21 $ACTION_MASSAGE_REMOVE:  
{"id":299} 

 Player 1 02:21:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":300,"_text":"Wait For Response From Player 2 "},"childOfId":297} 

 Player 1 02:21:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:21:21 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:21:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10 \n2:Refill Store slot"} 

 Player 2 02:21:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10 \n2:Refill Store slot"} 

 Player 2 02:21:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10 \n2:Refill Store slot \n3:Activate Steamy Sale "} 

 Player 2 02:21:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10 \n2:Refill Store slot \n3:Activate Steamy Sale "} 

 Player 2 02:21:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10 \n2:Refill Store slot \n3:Activate Steamy Sale "} 

 Player 2 02:21:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10 \n2:Refill Store slot \n3:Activate Steamy Sale "} 

 Player 2 02:21:22 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:21:22 $ACTION_MASSAGE_REMOVE:  
{"id":300} 

 Player 1 02:21:22 $ACTION_MASSAGE_REMOVE:  
{"id":298} 

 Player 1 02:21:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":301,"_text":"Resolve ActivatePassiveEffect 39 "}} 

 Player 1 02:21:22 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":211,"particleType":6} 

 Player 1 02:21:24 $DISABLE_PARTICLE_EFFECT:  
{"cardId":211,"particleType":6} 

 Player 1 02:21:24 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":211}],"result":true,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":19,"originStackId":-1},"isAfterActivation":true,"index":19} 

 Player 1 02:21:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10 \n2:Refill Store slot \n3:Activate Steamy Sale effect Steamy Sale Effect<Steamy Sale Effect>"} 

 Player 1 02:21:24 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":39,"creatorCardId":286,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":211,"isAfterActivation":true,"index":19,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 02:21:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10 \n2:Refill Store slot"} 

 Player 1 02:21:24 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":39,"creatorCardId":286,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":211,"isAfterActivation":true,"index":19,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 02:21:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":302,"_text":"Remove After Resolve ActivatePassiveEffect 39  "}} 

 Player 1 02:21:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10 \n2:Refill Store slot"} 

 Player 1 02:21:24 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":39,"creatorCardId":286,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":211,"isAfterActivation":true,"index":19,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 02:21:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":303,"_text":"Response Remove After Resolve ActivatePassiveEffect 39"},"childOfId":302} 

 Player 1 02:21:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":304,"_text":"Wait For Response From Player 2 "},"childOfId":302} 

 Player 1 02:21:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:21:24 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:21:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10 \n2:Refill Store slot \n3:Activate Steamy Sale "} 

 Player 2 02:21:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10 \n2:Refill Store slot \n3:Activate Steamy Sale "} 

 Player 2 02:21:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10 \n2:Refill Store slot \n3:Activate Steamy Sale "} 

 Player 2 02:21:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10 \n2:Refill Store slot \n3:Activate Steamy Sale "} 

 Player 2 02:21:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10 \n2:Refill Store slot \n3:Activate Steamy Sale "} 

 Player 2 02:21:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10 \n2:Refill Store slot \n3:Activate Steamy Sale "} 

 Player 2 02:21:24 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:21:24 $ACTION_MASSAGE_REMOVE:  
{"id":304} 

 Player 1 02:21:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":305,"_text":"Wait For Response From Player 1 "},"childOfId":302} 

 Player 1 02:21:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:21:24 $ACTION_MASSAGE_REMOVE:  
{"id":305} 

 Player 1 02:21:24 $ACTION_MASSAGE_REMOVE:  
{"id":303} 

 Player 1 02:21:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":306,"_text":"Resolve RefillEmptySlot 38 "}} 

 Player 1 02:21:24 $DRAW_CARD:  
{"deckType":5} 

 Player 1 02:21:24 $FLIP_CARD:  
{"cardId":175} 

 Player 1 02:21:24 $ADD_STORE_CARD:  
{"cardId":175} 

 Player 1 02:21:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10"} 

 Player 1 02:21:24 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":38,"creatorCardId":286,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 1 02:21:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":307,"_text":"Remove After Resolve RefillEmptySlot 38  "}} 

 Player 1 02:21:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10"} 

 Player 1 02:21:25 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":38,"creatorCardId":286,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 1 02:21:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":308,"_text":"Response Remove After Resolve RefillEmptySlot 38"},"childOfId":307} 

 Player 1 02:21:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":309,"_text":"Wait For Response From Player 1 "},"childOfId":307} 

 Player 1 02:21:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:21:25 $ACTION_MASSAGE_REMOVE:  
{"id":309} 

 Player 1 02:21:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":310,"_text":"Wait For Response From Player 2 "},"childOfId":307} 

 Player 1 02:21:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:21:25 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:21:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10 \n2:Refill Store slot"} 

 Player 2 02:21:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10 \n2:Refill Store slot"} 

 Player 2 02:21:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10 \n2:Refill Store slot"} 

 Player 2 02:21:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10 \n2:Refill Store slot"} 

 Player 2 02:21:25 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:21:25 $ACTION_MASSAGE_REMOVE:  
{"id":310} 

 Player 1 02:21:25 $ACTION_MASSAGE_REMOVE:  
{"id":308} 

 Player 1 02:21:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":311,"_text":"Resolve PurchaseItem 37 "}} 

 Player 1 02:21:25 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:21:25 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":37,"creatorCardId":286,"itemToPurchaseCardId":211,"playerWhoBuysCardId":286,"cost":10,"stackEffectType":9}} 

 Player 1 02:21:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":312,"_text":"Remove After Resolve PurchaseItem 37  "}} 

 Player 1 02:21:25 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:21:25 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":37,"creatorCardId":286,"itemToPurchaseCardId":211,"playerWhoBuysCardId":286,"cost":10,"stackEffectType":9}} 

 Player 1 02:21:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":313,"_text":"Response Remove After Resolve PurchaseItem 37"},"childOfId":312} 

 Player 1 02:21:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":314,"_text":"Wait For Response From Player 2 "},"childOfId":312} 

 Player 1 02:21:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:21:25 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:21:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10"} 

 Player 2 02:21:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10"} 

 Player 2 02:21:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10"} 

 Player 2 02:21:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10"} 

 Player 2 02:21:25 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:21:25 $ACTION_MASSAGE_REMOVE:  
{"id":314} 

 Player 1 02:21:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":315,"_text":"Wait For Response From Player 1 "},"childOfId":312} 

 Player 1 02:21:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:21:26 $ACTION_MASSAGE_REMOVE:  
{"id":315} 

 Player 1 02:21:26 $ACTION_MASSAGE_REMOVE:  
{"id":313} 

 Player 1 02:21:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":316,"_text":"Stack Was Emptied "}} 

 Player 1 02:21:26 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:29:34 $SHOW_DECISION:  
{"startCardId":286,"endCardId":253} 

 Player 1 02:29:37 $NEXT_STACK_ID:  

 Player 1 02:29:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:29:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Dinga"} 

 Player 1 02:29:37 $ADD_TO_STACK:  
{"stackEffect":{"entityId":40,"creatorCardId":286,"attackingPlayerCardId":286,"idOfCardBeingAttacked":253,"stackEffectType":4}} 

 Player 1 02:29:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Dinga"} 

 Player 1 02:29:37 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":40,"creatorCardId":286,"attackingPlayerCardId":286,"idOfCardBeingAttacked":253,"stackEffectType":4}} 

 Player 1 02:29:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":317,"_text":"Add DeclareAttack 40 "}} 

 Player 1 02:29:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:29:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Dinga"} 

 Player 1 02:29:37 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":40,"creatorCardId":286,"attackingPlayerCardId":286,"idOfCardBeingAttacked":253,"stackEffectType":4}} 

 Player 1 02:29:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":318,"_text":"Response Adding DeclareAttack 40"},"childOfId":317} 

 Player 1 02:29:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":319,"_text":"Wait For Response From Player 1 "},"childOfId":317} 

 Player 1 02:29:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:29:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:29:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:29:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Dinga"} 

 Player 2 02:29:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Dinga"} 

 Player 2 02:29:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Dinga"} 

 Player 2 02:29:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Dinga"} 

 Player 1 02:30:06 $ACTION_MASSAGE_REMOVE:  
{"id":319} 

 Player 1 02:30:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":320,"_text":"Wait For Response From Player 2 "},"childOfId":317} 

 Player 1 02:30:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:30:06 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:30:06 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:30:06 $ACTION_MASSAGE_REMOVE:  
{"id":320} 

 Player 1 02:30:06 $ACTION_MASSAGE_REMOVE:  
{"id":318} 

 Player 1 02:30:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":321,"_text":"Resolve DeclareAttack 40 "}} 

 Player 1 02:30:06 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":253,"particleType":5} 

 Player 1 02:30:06 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":20,"originStackId":40},"isAfterActivation":true,"index":20} 

 Player 1 02:30:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Dinga"} 

 Player 1 02:30:06 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":40,"creatorCardId":286,"attackingPlayerCardId":286,"idOfCardBeingAttacked":253,"stackEffectType":4}} 

 Player 1 02:30:06 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:30:06 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":40,"creatorCardId":286,"attackingPlayerCardId":286,"idOfCardBeingAttacked":253,"stackEffectType":4}} 

 Player 1 02:30:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":322,"_text":"Remove After Resolve DeclareAttack 40  "}} 

 Player 1 02:30:06 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:30:06 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":40,"creatorCardId":286,"attackingPlayerCardId":286,"idOfCardBeingAttacked":253,"stackEffectType":4}} 

 Player 1 02:30:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":323,"_text":"Response Remove After Resolve DeclareAttack 40"},"childOfId":322} 

 Player 1 02:30:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":324,"_text":"Wait For Response From Player 2 "},"childOfId":322} 

 Player 1 02:30:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:30:06 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:30:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Dinga"} 

 Player 2 02:30:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Dinga"} 

 Player 2 02:30:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Dinga"} 

 Player 2 02:30:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Dinga"} 

 Player 2 02:30:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Dinga"} 

 Player 2 02:30:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Dinga"} 

 Player 2 02:30:07 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:30:07 $ACTION_MASSAGE_REMOVE:  
{"id":324} 

 Player 1 02:30:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":325,"_text":"Wait For Response From Player 1 "},"childOfId":322} 

 Player 1 02:30:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:30:10 $ACTION_MASSAGE_REMOVE:  
{"id":325} 

 Player 1 02:30:10 $ACTION_MASSAGE_REMOVE:  
{"id":323} 

 Player 1 02:30:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":326,"_text":"Stack Was Emptied "}} 

 Player 1 02:30:10 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:30:34 $NEXT_STACK_ID:  

 Player 1 02:30:34 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:30:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster>"} 

 Player 1 02:30:34 $ADD_TO_STACK:  
{"stackEffect":{"entityId":41,"creatorCardId":286,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":253}} 

 Player 1 02:30:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster>"} 

 Player 1 02:30:34 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":41,"creatorCardId":286,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":253}} 

 Player 1 02:30:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":327,"_text":"Add AttackRoll 41 "}} 

 Player 1 02:30:34 $ROLL_DICE:  
{"playerId":1} 

 Player 2 02:30:34 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:30:34 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:30:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster>"} 

 Player 2 02:30:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster>"} 

 Player 1 02:30:36 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":1} 

 Player 1 02:30:36 $UPDATE_STACK_VIS:  
{"stackId":41,"text":"player rolled 1 vs Holy Dinga<Monster>"} 

 Player 1 02:30:36 $SHOW_DICE_ROLL:  
{"stackId":41} 

 Player 1 02:30:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 1 vs Holy Dinga<Monster>"} 

 Player 1 02:30:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:30:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 1 vs Holy Dinga<Monster>"} 

 Player 1 02:30:39 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":41,"creatorCardId":286,"numberRolled":1,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":253}} 

 Player 1 02:30:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":328,"_text":"Response Adding AttackRoll 41"},"childOfId":327} 

 Player 1 02:30:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":329,"_text":"Wait For Response From Player 1 "},"childOfId":327} 

 Player 1 02:30:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:30:39 $ACTION_MASSAGE_REMOVE:  
{"id":329} 

 Player 1 02:30:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":330,"_text":"Wait For Response From Player 2 "},"childOfId":327} 

 Player 1 02:30:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:30:40 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:30:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster>"} 

 Player 2 02:30:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster>"} 

 Player 2 02:30:40 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:30:40 $ACTION_MASSAGE_REMOVE:  
{"id":330} 

 Player 1 02:30:40 $ACTION_MASSAGE_REMOVE:  
{"id":328} 

 Player 1 02:30:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":331,"_text":"Resolve AttackRoll 41 "}} 

 Player 1 02:30:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":332,"_text":"Added 0 to original roll"}} 

 Player 1 02:30:40 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":1,"originStackId":41},"isAfterActivation":false,"index":1} 

 Player 1 02:30:40 $NEXT_STACK_ID:  

 Player 1 02:30:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 1 vs Holy Dinga<Monster>"} 

 Player 1 02:30:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 1 vs Holy Dinga<Monster> \n2:Activate Cursed Eye effect EndTurn<EndTurn>"} 

 Player 1 02:30:40 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":42,"creatorCardId":286,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":159,"effectToDo":{"effectName":"EndTurn","cardEffectNum":1,"cardPlayerId":1,"cardId":159,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 02:30:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 1 vs Holy Dinga<Monster> \n2:Activate Cursed Eye effect EndTurn<EndTurn>"} 

 Player 1 02:30:40 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":42,"creatorCardId":286,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":159,"effectToDo":{"effectName":"EndTurn","cardEffectNum":1,"cardPlayerId":1,"cardId":159,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 02:30:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":333,"_text":"Add ActivatePassiveEffect 42 "}} 

 Player 1 02:30:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 1 vs Holy Dinga<Monster> \n2:Activate Cursed Eye effect EndTurn<EndTurn>"} 

 Player 1 02:30:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 1 vs Holy Dinga<Monster> \n2:Activate Cursed Eye effect EndTurn<EndTurn>"} 

 Player 1 02:30:40 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":42,"creatorCardId":286,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":159,"effectToDo":{"effectName":"EndTurn","cardEffectNum":1,"cardPlayerId":1,"cardId":159,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 02:30:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":334,"_text":"Response Adding ActivatePassiveEffect 42"},"childOfId":333} 

 Player 1 02:30:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":335,"_text":"Wait For Response From Player 2 "},"childOfId":333} 

 Player 1 02:30:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:30:40 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:30:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster>"} 

 Player 2 02:30:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster>"} 

 Player 2 02:30:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster> \n2:Activate Cursed Eye "} 

 Player 2 02:30:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster> \n2:Activate Cursed Eye "} 

 Player 2 02:30:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster> \n2:Activate Cursed Eye "} 

 Player 2 02:30:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster> \n2:Activate Cursed Eye "} 

 Player 2 02:30:40 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:30:40 $ACTION_MASSAGE_REMOVE:  
{"id":335} 

 Player 1 02:30:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":336,"_text":"Wait For Response From Player 1 "},"childOfId":333} 

 Player 1 02:30:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:30:40 $ACTION_MASSAGE_REMOVE:  
{"id":336} 

 Player 1 02:30:40 $ACTION_MASSAGE_REMOVE:  
{"id":334} 

 Player 1 02:30:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":337,"_text":"Resolve ActivatePassiveEffect 42 "}} 

 Player 1 02:30:40 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":159,"particleType":6} 

 Player 1 02:30:42 $DISABLE_PARTICLE_EFFECT:  
{"cardId":159,"particleType":6} 

 Player 1 02:30:42 $DISABLE_PARTICLE_EFFECT:  
{"cardId":253,"particleType":5} 

 Player 1 02:30:42 $CANCEL_ATTACK:  

 Player 1 02:30:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Cursed Eye effect EndTurn<EndTurn>"} 

 Player 1 02:30:42 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":41,"creatorCardId":286,"numberRolled":1,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":253}} 

 Player 1 02:30:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":338,"_text":"Fizzle AttackRoll 41"}} 

 Player 1 02:30:42 $FIZZLE_STACK_EFFECT:  
{"entityId":41} 

 Player 1 02:30:43 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":1,"originStackId":41},"isAfterActivation":false,"index":1} 

 Player 1 02:30:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Cursed Eye effect EndTurn<EndTurn>"} 

 Player 1 02:30:43 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":42,"creatorCardId":286,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":159,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 02:30:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:30:43 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":42,"creatorCardId":286,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":159,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 02:30:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":339,"_text":"Remove After Resolve ActivatePassiveEffect 42  "}} 

 Player 1 02:30:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:30:43 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":42,"creatorCardId":286,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":159,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 02:30:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":340,"_text":"Response Remove After Resolve ActivatePassiveEffect 42"},"childOfId":339} 

 Player 1 02:30:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":341,"_text":"Wait For Response From Player 1 "},"childOfId":339} 

 Player 1 02:30:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:30:43 $ACTION_MASSAGE_REMOVE:  
{"id":341} 

 Player 1 02:30:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":342,"_text":"Wait For Response From Player 2 "},"childOfId":339} 

 Player 1 02:30:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:30:43 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:30:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster> \n2:Activate Cursed Eye "} 

 Player 2 02:30:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster> \n2:Activate Cursed Eye "} 

 Player 2 02:30:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Cursed Eye "} 

 Player 2 02:30:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Cursed Eye "} 

 Player 2 02:30:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Cursed Eye "} 

 Player 2 02:30:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Cursed Eye "} 

 Player 2 02:30:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Cursed Eye "} 

 Player 2 02:30:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Cursed Eye "} 

 Player 2 02:30:43 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:30:43 $ACTION_MASSAGE_REMOVE:  
{"id":342} 

 Player 1 02:30:43 $ACTION_MASSAGE_REMOVE:  
{"id":340} 

 Player 1 02:30:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":343,"_text":"Stack Was Emptied "}} 

 Player 1 02:30:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:30:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:30:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:30:43 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 1 02:30:43 $END_TURN:  

 Player 1 02:30:43 $SET_TURN:  
{"playerId":2} 

 Player 1 02:30:43 $START_TURN:  
{"playerId":2} 

 Player 1 02:30:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":344,"_text":"Stack Was Emptied "}} 

 Player 1 02:30:43 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 02:30:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:30:44 $TURN_PLAYER_DO_STACK_EFFECT:  
{"playerId":2} 

 Player 2 02:30:44 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 02:30:44 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:30:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:30:44 $NEXT_STACK_ID:  

 Player 2 02:30:44 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:30:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 02:30:44 $ADD_TO_STACK:  
{"stackEffect":{"entityId":43,"creatorCardId":298,"turnPlayerCardId":298,"stackEffectType":13}} 

 Player 2 02:30:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 02:30:44 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":43,"creatorCardId":298,"turnPlayerCardId":298,"stackEffectType":13}} 

 Player 2 02:30:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":344,"_text":"Add StartTurnLoot 43 "}} 

 Player 2 02:30:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:30:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 02:30:44 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":43,"creatorCardId":298,"turnPlayerCardId":298,"stackEffectType":13}} 

 Player 2 02:30:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":345,"_text":"Response Adding StartTurnLoot 43"},"childOfId":344} 

 Player 2 02:30:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":346,"_text":"Wait For Response From Player 2 "},"childOfId":344} 

 Player 2 02:30:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:30:44 $ACTION_MASSAGE_REMOVE:  
{"id":346} 

 Player 2 02:30:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":347,"_text":"Wait For Response From Player 1 "},"childOfId":344} 

 Player 2 02:30:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:30:44 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:30:44 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 02:30:44 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:30:44 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:30:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 02:30:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 02:30:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 02:30:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 02:30:44 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:30:44 $ACTION_MASSAGE_REMOVE:  
{"id":347} 

 Player 2 02:30:44 $ACTION_MASSAGE_REMOVE:  
{"id":345} 

 Player 2 02:30:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":349,"_text":"Resolve StartTurnLoot 43 "}} 

 Player 2 02:30:44 $DRAW_CARD:  
{"deckType":1} 

 Player 2 02:30:44 $MOVE_CARD:  
{"moveIndex":34,"cardId":123,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 02:30:45 $MOVE_CARD_END:  
{"moveIndex":34,"cardId":123,"flipIfFlipped":false,"playerId":2} 

 Player 2 02:30:45 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":123} 

 Player 2 02:30:45 $FLIP_CARD:  
{"cardId":123} 

 Player 2 02:30:45 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":123} 

 Player 2 02:30:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 02:30:45 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":43,"creatorCardId":298,"turnPlayerCardId":298,"stackEffectType":13}} 

 Player 2 02:30:45 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:30:45 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":43,"creatorCardId":298,"turnPlayerCardId":298,"stackEffectType":13}} 

 Player 2 02:30:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":350,"_text":"Remove After Resolve StartTurnLoot 43  "}} 

 Player 2 02:30:45 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:30:45 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":43,"creatorCardId":298,"turnPlayerCardId":298,"stackEffectType":13}} 

 Player 2 02:30:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":351,"_text":"Response Remove After Resolve StartTurnLoot 43"},"childOfId":350} 

 Player 2 02:30:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":352,"_text":"Wait For Response From Player 1 "},"childOfId":350} 

 Player 2 02:30:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:30:45 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:30:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 02:30:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 02:30:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 02:30:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 02:30:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 02:30:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 02:30:45 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:30:45 $ACTION_MASSAGE_REMOVE:  
{"id":352} 

 Player 2 02:30:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":353,"_text":"Wait For Response From Player 2 "},"childOfId":350} 

 Player 2 02:30:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:30:45 $ACTION_MASSAGE_REMOVE:  
{"id":353} 

 Player 2 02:30:45 $ACTION_MASSAGE_REMOVE:  
{"id":351} 

 Player 2 02:30:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":354,"_text":"Stack Was Emptied "}} 

 Player 2 02:30:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:30:50 $SHOW_DECISION:  
{"startCardId":123,"endCardId":123,"flipEndCard":true} 

 Player 2 02:30:53 $NEXT_STACK_ID:  

 Player 2 02:30:53 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:30:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Sack "} 

 Player 2 02:30:53 $ADD_TO_STACK:  
{"stackEffect":{"entityId":44,"creatorCardId":298,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":123,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 02:30:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Sack "} 

 Player 2 02:30:53 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":44,"creatorCardId":298,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":123,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 02:30:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":355,"_text":"Add PlayLootCardStackEffect 44 "}} 

 Player 2 02:30:53 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":123} 

 Player 2 02:30:53 $MOVE_CARD:  
{"moveIndex":35,"cardId":123,"placeID":300,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 02:30:53 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:30:53 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:30:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Sack "} 

 Player 1 02:30:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Sack "} 

 Player 1 02:30:53 $MOVE_CARD_END:  
{"moveIndex":35,"cardId":123,"flipIfFlipped":true,"playerId":2} 

 Player 2 02:30:53 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":123} 

 Player 2 02:30:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Sack: GainLoot"} 

 Player 2 02:30:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:30:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Sack: GainLoot"} 

 Player 2 02:30:54 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":44,"creatorCardId":298,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":123,"lootPlayerId":2,"effectToDo":{"effectName":"GainLoot","cardEffectNum":0,"cardPlayerId":2,"cardId":123,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 02:30:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":356,"_text":"Response Adding PlayLootCardStackEffect 44"},"childOfId":355} 

 Player 2 02:30:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":357,"_text":"Wait For Response From Player 2 "},"childOfId":355} 

 Player 2 02:30:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:30:54 $ACTION_MASSAGE_REMOVE:  
{"id":357} 

 Player 2 02:30:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":358,"_text":"Wait For Response From Player 1 "},"childOfId":355} 

 Player 2 02:30:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:30:54 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:30:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Sack "} 

 Player 1 02:30:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Sack "} 

 Player 1 02:30:54 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:30:54 $ACTION_MASSAGE_REMOVE:  
{"id":358} 

 Player 2 02:30:54 $ACTION_MASSAGE_REMOVE:  
{"id":356} 

 Player 2 02:30:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":359,"_text":"Resolve PlayLootCardStackEffect 44 "}} 

 Player 2 02:30:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Sack: GainLoot"} 

 Player 2 02:30:54 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":123,"particleType":6} 

 Player 2 02:30:56 $DISABLE_PARTICLE_EFFECT:  
{"cardId":123,"particleType":6} 

 Player 2 02:30:56 $DRAW_CARD:  
{"deckType":1} 

 Player 2 02:30:56 $MOVE_CARD:  
{"moveIndex":36,"cardId":130,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 02:30:56 $MOVE_CARD_END:  
{"moveIndex":36,"cardId":130,"flipIfFlipped":false,"playerId":2} 

 Player 2 02:30:56 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":130} 

 Player 2 02:30:56 $FLIP_CARD:  
{"cardId":130} 

 Player 2 02:30:56 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":130} 

 Player 2 02:30:56 $DRAW_CARD:  
{"deckType":1} 

 Player 2 02:30:56 $MOVE_CARD:  
{"moveIndex":37,"cardId":12,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 02:30:57 $MOVE_CARD_END:  
{"moveIndex":37,"cardId":12,"flipIfFlipped":false,"playerId":2} 

 Player 2 02:30:57 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":12} 

 Player 2 02:30:57 $FLIP_CARD:  
{"cardId":12} 

 Player 2 02:30:57 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":12} 

 Player 2 02:30:57 $DRAW_CARD:  
{"deckType":1} 

 Player 2 02:30:57 $MOVE_CARD:  
{"moveIndex":38,"cardId":106,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 02:30:57 $MOVE_CARD_END:  
{"moveIndex":38,"cardId":106,"flipIfFlipped":false,"playerId":2} 

 Player 2 02:30:57 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":106} 

 Player 2 02:30:57 $FLIP_CARD:  
{"cardId":106} 

 Player 2 02:30:57 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":106} 

 Player 2 02:30:57 $REMOVE_FROM_PILE:  
{"cardId":123} 

 Player 2 02:30:57 $MOVE_CARD:  
{"moveIndex":39,"cardId":123,"placeID":301,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 02:30:58 $MOVE_CARD_END:  
{"moveIndex":39,"cardId":123,"flipIfFlipped":true,"playerId":2} 

 Player 2 02:30:58 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":123} 

 Player 2 02:30:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Sack: GainLoot"} 

 Player 2 02:30:58 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":44,"creatorCardId":298,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":123,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 02:30:58 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:30:58 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":44,"creatorCardId":298,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":123,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 02:30:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":360,"_text":"Remove After Resolve PlayLootCardStackEffect 44  "}} 

 Player 2 02:30:58 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:30:58 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":44,"creatorCardId":298,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":123,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 02:30:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":361,"_text":"Response Remove After Resolve PlayLootCardStackEffect 44"},"childOfId":360} 

 Player 2 02:30:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":362,"_text":"Wait For Response From Player 1 "},"childOfId":360} 

 Player 2 02:30:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:30:58 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:30:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Sack "} 

 Player 1 02:30:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Sack "} 

 Player 1 02:30:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Sack "} 

 Player 1 02:30:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Sack "} 

 Player 1 02:30:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Sack "} 

 Player 1 02:30:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Sack "} 

 Player 1 02:30:58 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:30:58 $ACTION_MASSAGE_REMOVE:  
{"id":362} 

 Player 2 02:30:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":363,"_text":"Wait For Response From Player 2 "},"childOfId":360} 

 Player 2 02:30:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:30:58 $ACTION_MASSAGE_REMOVE:  
{"id":363} 

 Player 2 02:30:58 $ACTION_MASSAGE_REMOVE:  
{"id":361} 

 Player 2 02:30:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":364,"_text":"Stack Was Emptied "}} 

 Player 2 02:30:58 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:31:19 $SHOW_DECISION:  
{"startCardId":298,"endCardId":298} 

 Player 2 02:31:22 $NEXT_STACK_ID:  

 Player 2 02:31:22 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:31:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated The Lost"} 

 Player 2 02:31:23 $ADD_TO_STACK:  
{"stackEffect":{"entityId":45,"creatorCardId":298,"hasLockingStackEffect":false,"itemToPlayCardId":298,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 02:31:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated The Lost"} 

 Player 2 02:31:23 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":45,"creatorCardId":298,"hasLockingStackEffect":false,"itemToPlayCardId":298,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 02:31:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":365,"_text":"Add ActivateItem 45 "}} 

 Player 1 02:31:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:31:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:31:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated The Lost"} 

 Player 1 02:31:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated The Lost"} 

 Player 2 02:31:25 $SHOW_DECISION:  
{"startCardId":298,"endCardId":67,"flipEndCard":true} 

 Player 2 02:31:28 $USE_ITEM:  
{"cardId":298} 

 Player 2 02:31:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:31:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated The Lost"} 

 Player 2 02:31:28 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":45,"creatorCardId":298,"hasLockingStackEffect":false,"itemToPlayCardId":298,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 02:31:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":366,"_text":"Response Adding ActivateItem 45"},"childOfId":365} 

 Player 2 02:31:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":367,"_text":"Wait For Response From Player 2 "},"childOfId":365} 

 Player 2 02:31:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:31:28 $ACTION_MASSAGE_REMOVE:  
{"id":367} 

 Player 2 02:31:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":368,"_text":"Wait For Response From Player 1 "},"childOfId":365} 

 Player 2 02:31:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:31:29 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:31:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated The Lost"} 

 Player 1 02:31:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated The Lost"} 

 Player 1 02:31:29 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:31:29 $ACTION_MASSAGE_REMOVE:  
{"id":368} 

 Player 2 02:31:29 $ACTION_MASSAGE_REMOVE:  
{"id":366} 

 Player 2 02:31:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":369,"_text":"Resolve ActivateItem 45 "}} 

 Player 2 02:31:29 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":298,"particleType":6} 

 Player 2 02:31:31 $DISABLE_PARTICLE_EFFECT:  
{"cardId":298,"particleType":6} 

 Player 2 02:31:31 $NEXT_STACK_ID:  

 Player 2 02:31:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated The Lost"} 

 Player 2 02:31:31 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":67} 

 Player 2 02:31:31 $MOVE_CARD:  
{"moveIndex":40,"cardId":67,"placeID":300,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 02:31:31 $MOVE_CARD_END:  
{"moveIndex":40,"cardId":67,"flipIfFlipped":true,"playerId":2} 

 Player 2 02:31:31 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":67} 

 Player 2 02:31:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(7): addMoney \n2:Player 2 activated The Lost"} 

 Player 2 02:31:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:31:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(7): addMoney \n2:Player 2 activated The Lost"} 

 Player 2 02:31:31 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":46,"creatorCardId":298,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":67,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":67,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 02:31:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(7): addMoney \n2:Player 2 activated The Lost"} 

 Player 2 02:31:31 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":45,"creatorCardId":298,"hasLockingStackEffect":false,"itemToPlayCardId":298,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 02:31:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(7): addMoney \n2:Player 2 activated The Lost"} 

 Player 2 02:31:31 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":46,"creatorCardId":298,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":67,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":67,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 02:31:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(7): addMoney \n2:Player 2 activated The Lost"} 

 Player 2 02:31:31 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":45,"creatorCardId":298,"hasLockingStackEffect":false,"itemToPlayCardId":298,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 02:31:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(7): addMoney \n2:Player 2 activated The Lost"} 

 Player 2 02:31:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(7): addMoney \n2:Player 2 activated The Lost"} 

 Player 2 02:31:32 $REPLACE_STACK:  
{"currentStack":[{"entityId":46,"creatorCardId":298,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":67,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":67,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":45,"creatorCardId":298,"hasLockingStackEffect":false,"itemToPlayCardId":298,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 

 Player 2 02:31:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(7): addMoney \n2:Player 2 activated The Lost"} 

 Player 2 02:31:32 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":45,"creatorCardId":298,"hasLockingStackEffect":false,"itemToPlayCardId":298,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 02:31:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(7): addMoney"} 

 Player 2 02:31:32 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":45,"creatorCardId":298,"hasLockingStackEffect":false,"itemToPlayCardId":298,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 02:31:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":370,"_text":"Remove After Resolve ActivateItem 45  "}} 

 Player 2 02:31:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(7): addMoney"} 

 Player 2 02:31:32 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":45,"creatorCardId":298,"hasLockingStackEffect":false,"itemToPlayCardId":298,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 02:31:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":371,"_text":"Response Remove After Resolve ActivateItem 45"},"childOfId":370} 

 Player 2 02:31:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":372,"_text":"Wait For Response From Player 2 "},"childOfId":370} 

 Player 2 02:31:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:31:32 $ACTION_MASSAGE_REMOVE:  
{"id":372} 

 Player 2 02:31:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":373,"_text":"Wait For Response From Player 1 "},"childOfId":370} 

 Player 2 02:31:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:31:32 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:31:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated The Lost"} 

 Player 1 02:31:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated The Lost"} 

 Player 1 02:31:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(7) "} 

 Player 1 02:31:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(7) "} 

 Player 1 02:31:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(7) "} 

 Player 1 02:31:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(7) "} 

 Player 1 02:31:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(7) "} 

 Player 1 02:31:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(7) "} 

 Player 1 02:31:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(7) "} 

 Player 1 02:31:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(7) "} 

 Player 1 02:31:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(7) "} 

 Player 1 02:31:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(7) "} 

 Player 1 02:31:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(7)  \n2:Player 2 activated The Lost"} 

 Player 1 02:31:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(7)  \n2:Player 2 activated The Lost"} 

 Player 1 02:31:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(7)  \n2:Player 2 activated The Lost"} 

 Player 1 02:31:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(7)  \n2:Player 2 activated The Lost"} 

 Player 1 02:31:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(7)  \n2:Player 2 activated The Lost"} 

 Player 1 02:31:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(7)  \n2:Player 2 activated The Lost"} 

 Player 1 02:31:32 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:31:32 $ACTION_MASSAGE_REMOVE:  
{"id":373} 

 Player 2 02:31:32 $ACTION_MASSAGE_REMOVE:  
{"id":371} 

 Player 2 02:31:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":374,"_text":"Resolve PlayLootCardStackEffect 46 "}} 

 Player 2 02:31:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(7): addMoney"} 

 Player 2 02:31:33 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":67,"particleType":6} 

 Player 2 02:31:34 $DISABLE_PARTICLE_EFFECT:  
{"cardId":67,"particleType":6} 

 Player 2 02:31:34 $SET_MONEY:  
{"playerId":2,"numOfCoins":10} 

 Player 2 02:31:34 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":13,"originStackId":-1},"isAfterActivation":true,"index":13} 

 Player 2 02:31:35 $REMOVE_FROM_PILE:  
{"cardId":67} 

 Player 2 02:31:35 $MOVE_CARD:  
{"moveIndex":41,"cardId":67,"placeID":301,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 02:31:35 $MOVE_CARD_END:  
{"moveIndex":41,"cardId":67,"flipIfFlipped":true,"playerId":2} 

 Player 2 02:31:35 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":67} 

 Player 2 02:31:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(7): addMoney"} 

 Player 2 02:31:35 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":46,"creatorCardId":298,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":67,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 02:31:35 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:31:35 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":46,"creatorCardId":298,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":67,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 02:31:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":375,"_text":"Remove After Resolve PlayLootCardStackEffect 46  "}} 

 Player 2 02:31:35 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:31:35 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":46,"creatorCardId":298,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":67,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 02:31:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":376,"_text":"Response Remove After Resolve PlayLootCardStackEffect 46"},"childOfId":375} 

 Player 2 02:31:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":377,"_text":"Wait For Response From Player 1 "},"childOfId":375} 

 Player 2 02:31:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:31:35 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:31:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(7) "} 

 Player 1 02:31:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(7) "} 

 Player 1 02:31:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(7) "} 

 Player 1 02:31:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(7) "} 

 Player 1 02:31:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(7) "} 

 Player 1 02:31:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(7) "} 

 Player 1 02:31:35 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:31:35 $ACTION_MASSAGE_REMOVE:  
{"id":377} 

 Player 2 02:31:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":378,"_text":"Wait For Response From Player 2 "},"childOfId":375} 

 Player 2 02:31:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:31:36 $ACTION_MASSAGE_REMOVE:  
{"id":378} 

 Player 2 02:31:36 $ACTION_MASSAGE_REMOVE:  
{"id":376} 

 Player 2 02:31:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":379,"_text":"Stack Was Emptied "}} 

 Player 2 02:31:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:32:13 $SHOW_DECISION:  
{"startCardId":298,"endCardId":144} 

 Player 2 02:32:16 $NEXT_STACK_ID:  

 Player 2 02:32:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:32:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 

 Player 2 02:32:16 $ADD_TO_STACK:  
{"stackEffect":{"entityId":47,"creatorCardId":298,"itemToPurchaseCardId":144,"playerWhoBuysCardId":298,"cost":10,"stackEffectType":9}} 

 Player 2 02:32:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 

 Player 2 02:32:17 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":47,"creatorCardId":298,"itemToPurchaseCardId":144,"playerWhoBuysCardId":298,"cost":10,"stackEffectType":9}} 

 Player 2 02:32:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":380,"_text":"Add PurchaseItem 47 "}} 

 Player 2 02:32:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:32:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 

 Player 2 02:32:17 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":47,"creatorCardId":298,"itemToPurchaseCardId":144,"playerWhoBuysCardId":298,"cost":10,"stackEffectType":9}} 

 Player 2 02:32:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":381,"_text":"Response Adding PurchaseItem 47"},"childOfId":380} 

 Player 2 02:32:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":382,"_text":"Wait For Response From Player 2 "},"childOfId":380} 

 Player 2 02:32:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:32:17 $ACTION_MASSAGE_REMOVE:  
{"id":382} 

 Player 2 02:32:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":383,"_text":"Wait For Response From Player 1 "},"childOfId":380} 

 Player 2 02:32:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:32:17 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:32:17 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:32:17 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:32:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 

 Player 1 02:32:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 

 Player 1 02:32:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 

 Player 1 02:32:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 

 Player 1 02:32:17 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:32:17 $ACTION_MASSAGE_REMOVE:  
{"id":383} 

 Player 2 02:32:17 $ACTION_MASSAGE_REMOVE:  
{"id":381} 

 Player 2 02:32:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":384,"_text":"Resolve PurchaseItem 47 "}} 

 Player 2 02:32:17 $SET_MONEY:  
{"playerId":2,"numOfCoins":0} 

 Player 2 02:32:17 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-10}],"result":null,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":14,"originStackId":-1},"isAfterActivation":true,"index":14} 

 Player 2 02:32:17 $DRAW_CARD:  
{"deckType":5} 

 Player 2 02:32:17 $REGISTER_PASSIVE_ITEM:  
{"cardId":199} 

 Player 2 02:32:17 $MOVE_CARD:  
{"moveIndex":42,"cardId":199,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 

 Player 1 02:32:18 $MOVE_CARD_END:  
{"moveIndex":42,"cardId":199,"flipIfFlipped":true,"playerId":2} 

 Player 2 02:32:18 $ADD_AN_ITEM:  
{"playerId":2,"cardId":199,"isReward":false} 

 Player 2 02:32:18 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":199}],"result":true,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":15,"originStackId":-1},"isAfterActivation":true,"index":15} 

 Player 2 02:32:18 $NEXT_STACK_ID:  

 Player 2 02:32:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 

 Player 2 02:32:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10 \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 

 Player 2 02:32:18 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":48,"creatorCardId":298,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":199,"effectToDo":{"effectName":"AddPlayLootOpportunity","cardEffectNum":0,"cardPlayerId":2,"cardId":199,"effctType":0},"isAfterActivation":true,"index":15,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 02:32:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10 \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 

 Player 2 02:32:18 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":48,"creatorCardId":298,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":199,"effectToDo":{"effectName":"AddPlayLootOpportunity","cardEffectNum":0,"cardPlayerId":2,"cardId":199,"effctType":0},"isAfterActivation":true,"index":15,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 02:32:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":385,"_text":"Add ActivatePassiveEffect 48 "}} 

 Player 2 02:32:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10 \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 

 Player 2 02:32:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10 \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 

 Player 2 02:32:18 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":48,"creatorCardId":298,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":199,"effectToDo":{"effectName":"AddPlayLootOpportunity","cardEffectNum":0,"cardPlayerId":2,"cardId":199,"effctType":0},"isAfterActivation":true,"index":15,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 02:32:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":386,"_text":"Response Adding ActivatePassiveEffect 48"},"childOfId":385} 

 Player 2 02:32:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":387,"_text":"Wait For Response From Player 1 "},"childOfId":385} 

 Player 2 02:32:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:32:18 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:32:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 

 Player 1 02:32:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 

 Player 1 02:32:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10 \n2:Activate Polydactyly "} 

 Player 1 02:32:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10 \n2:Activate Polydactyly "} 

 Player 1 02:32:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10 \n2:Activate Polydactyly "} 

 Player 1 02:32:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10 \n2:Activate Polydactyly "} 

 Player 1 02:32:18 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:32:18 $ACTION_MASSAGE_REMOVE:  
{"id":387} 

 Player 2 02:32:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":388,"_text":"Wait For Response From Player 2 "},"childOfId":385} 

 Player 2 02:32:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:32:18 $ACTION_MASSAGE_REMOVE:  
{"id":388} 

 Player 2 02:32:18 $ACTION_MASSAGE_REMOVE:  
{"id":386} 

 Player 2 02:32:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":389,"_text":"Resolve ActivatePassiveEffect 48 "}} 

 Player 2 02:32:18 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":199,"particleType":6} 

 Player 2 02:32:20 $DISABLE_PARTICLE_EFFECT:  
{"cardId":199,"particleType":6} 

 Player 2 02:32:20 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":199}],"result":true,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":15,"originStackId":-1},"isAfterActivation":true,"index":15} 

 Player 2 02:32:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10 \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 

 Player 2 02:32:20 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":48,"creatorCardId":298,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":199,"isAfterActivation":true,"index":15,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 02:32:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 

 Player 2 02:32:20 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":48,"creatorCardId":298,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":199,"isAfterActivation":true,"index":15,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 02:32:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":390,"_text":"Remove After Resolve ActivatePassiveEffect 48  "}} 

 Player 2 02:32:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 

 Player 2 02:32:21 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":48,"creatorCardId":298,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":199,"isAfterActivation":true,"index":15,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 02:32:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":391,"_text":"Response Remove After Resolve ActivatePassiveEffect 48"},"childOfId":390} 

 Player 2 02:32:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":392,"_text":"Wait For Response From Player 2 "},"childOfId":390} 

 Player 2 02:32:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:32:21 $ACTION_MASSAGE_REMOVE:  
{"id":392} 

 Player 2 02:32:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":393,"_text":"Wait For Response From Player 1 "},"childOfId":390} 

 Player 2 02:32:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:32:21 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:32:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10 \n2:Activate Polydactyly "} 

 Player 1 02:32:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10 \n2:Activate Polydactyly "} 

 Player 1 02:32:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10 \n2:Activate Polydactyly "} 

 Player 1 02:32:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10 \n2:Activate Polydactyly "} 

 Player 1 02:32:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10 \n2:Activate Polydactyly "} 

 Player 1 02:32:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10 \n2:Activate Polydactyly "} 

 Player 1 02:32:21 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:32:21 $ACTION_MASSAGE_REMOVE:  
{"id":393} 

 Player 2 02:32:21 $ACTION_MASSAGE_REMOVE:  
{"id":391} 

 Player 2 02:32:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":394,"_text":"Resolve PurchaseItem 47 "}} 

 Player 2 02:32:21 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:32:21 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":47,"creatorCardId":298,"itemToPurchaseCardId":144,"playerWhoBuysCardId":298,"cost":10,"stackEffectType":9}} 

 Player 2 02:32:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":395,"_text":"Remove After Resolve PurchaseItem 47  "}} 

 Player 2 02:32:21 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:32:21 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":47,"creatorCardId":298,"itemToPurchaseCardId":144,"playerWhoBuysCardId":298,"cost":10,"stackEffectType":9}} 

 Player 2 02:32:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":396,"_text":"Response Remove After Resolve PurchaseItem 47"},"childOfId":395} 

 Player 2 02:32:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":397,"_text":"Wait For Response From Player 1 "},"childOfId":395} 

 Player 2 02:32:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:32:21 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:32:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 

 Player 1 02:32:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 

 Player 1 02:32:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 

 Player 1 02:32:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 

 Player 1 02:32:21 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:32:21 $ACTION_MASSAGE_REMOVE:  
{"id":397} 

 Player 2 02:32:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":398,"_text":"Wait For Response From Player 2 "},"childOfId":395} 

 Player 2 02:32:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:32:22 $ACTION_MASSAGE_REMOVE:  
{"id":398} 

 Player 2 02:32:22 $ACTION_MASSAGE_REMOVE:  
{"id":396} 

 Player 2 02:32:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":399,"_text":"Stack Was Emptied "}} 

 Player 2 02:32:22 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:32:31 $SHOW_DECISION:  
{"startCardId":106,"endCardId":106,"flipEndCard":true} 

 Player 2 02:32:34 $NEXT_STACK_ID:  

 Player 2 02:32:34 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:32:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Guppys Hairball "} 

 Player 2 02:32:34 $ADD_TO_STACK:  
{"stackEffect":{"entityId":49,"creatorCardId":298,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":106,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 02:32:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Guppys Hairball "} 

 Player 2 02:32:34 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":49,"creatorCardId":298,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":106,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 02:32:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":400,"_text":"Add PlayLootCardStackEffect 49 "}} 

 Player 2 02:32:34 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":106} 

 Player 2 02:32:34 $MOVE_CARD:  
{"moveIndex":43,"cardId":106,"placeID":300,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 02:32:34 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:32:34 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:32:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Guppys Hairball "} 

 Player 1 02:32:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Guppys Hairball "} 

 Player 1 02:32:34 $MOVE_CARD_END:  
{"moveIndex":43,"cardId":106,"flipIfFlipped":true,"playerId":2} 

 Player 2 02:32:34 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":106} 

 Player 2 02:32:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Guppys Hairball: AddTrinket"} 

 Player 2 02:32:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:32:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Guppys Hairball: AddTrinket"} 

 Player 2 02:32:34 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":49,"creatorCardId":298,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":106,"lootPlayerId":2,"effectToDo":{"effectName":"AddTrinket","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 02:32:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":401,"_text":"Response Adding PlayLootCardStackEffect 49"},"childOfId":400} 

 Player 2 02:32:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":402,"_text":"Wait For Response From Player 2 "},"childOfId":400} 

 Player 2 02:32:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:32:35 $ACTION_MASSAGE_REMOVE:  
{"id":402} 

 Player 2 02:32:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":403,"_text":"Wait For Response From Player 1 "},"childOfId":400} 

 Player 2 02:32:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:32:35 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:32:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Guppys Hairball "} 

 Player 1 02:32:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Guppys Hairball "} 

 Player 1 02:32:35 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:32:35 $ACTION_MASSAGE_REMOVE:  
{"id":403} 

 Player 2 02:32:35 $ACTION_MASSAGE_REMOVE:  
{"id":401} 

 Player 2 02:32:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":404,"_text":"Resolve PlayLootCardStackEffect 49 "}} 

 Player 2 02:32:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Guppys Hairball: AddTrinket"} 

 Player 2 02:32:35 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":106,"particleType":6} 

 Player 2 02:32:37 $DISABLE_PARTICLE_EFFECT:  
{"cardId":106,"particleType":6} 

 Player 2 02:32:37 $CARD_ADD_TRINKET:  
{"cardId":106,"playerId":2,"addMuiliEffect":true} 

 Player 2 02:32:37 $REMOVE_FROM_PILE:  
{"cardId":106} 

 Player 2 02:32:37 $REGISTER_PASSIVE_ITEM:  
{"cardId":106} 

 Player 2 02:32:37 $MOVE_CARD:  
{"moveIndex":44,"cardId":106,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 

 Player 1 02:32:37 $MOVE_CARD_END:  
{"moveIndex":44,"cardId":106,"flipIfFlipped":true,"playerId":2} 

 Player 2 02:32:37 $ADD_AN_ITEM:  
{"playerId":2,"cardId":106,"isReward":true} 

 Player 2 02:32:37 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":106}],"result":true,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":16,"originStackId":-1},"isAfterActivation":true,"index":16} 

 Player 2 02:32:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Guppys Hairball: AddTrinket"} 

 Player 2 02:32:37 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":49,"creatorCardId":298,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":106,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 02:32:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:32:37 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":49,"creatorCardId":298,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":106,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 02:32:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":405,"_text":"Remove After Resolve PlayLootCardStackEffect 49  "}} 

 Player 2 02:32:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:32:38 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":49,"creatorCardId":298,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":106,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 02:32:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":406,"_text":"Response Remove After Resolve PlayLootCardStackEffect 49"},"childOfId":405} 

 Player 2 02:32:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":407,"_text":"Wait For Response From Player 1 "},"childOfId":405} 

 Player 2 02:32:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:32:38 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:32:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Guppys Hairball "} 

 Player 1 02:32:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Guppys Hairball "} 

 Player 1 02:32:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Guppys Hairball "} 

 Player 1 02:32:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Guppys Hairball "} 

 Player 1 02:32:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Guppys Hairball "} 

 Player 1 02:32:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Guppys Hairball "} 

 Player 1 02:32:38 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:32:38 $ACTION_MASSAGE_REMOVE:  
{"id":407} 

 Player 2 02:32:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":408,"_text":"Wait For Response From Player 2 "},"childOfId":405} 

 Player 2 02:32:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:32:38 $ACTION_MASSAGE_REMOVE:  
{"id":408} 

 Player 2 02:32:38 $ACTION_MASSAGE_REMOVE:  
{"id":406} 

 Player 2 02:32:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":409,"_text":"Stack Was Emptied "}} 

 Player 2 02:32:38 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:32:52 $SHOW_DECISION:  
{"startCardId":298,"endCardId":227} 

 Player 2 02:32:55 $NEXT_STACK_ID:  

 Player 2 02:32:55 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:32:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 02:32:55 $ADD_TO_STACK:  
{"stackEffect":{"entityId":50,"creatorCardId":298,"attackingPlayerCardId":298,"idOfCardBeingAttacked":227,"stackEffectType":4}} 

 Player 2 02:32:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 02:32:55 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":50,"creatorCardId":298,"attackingPlayerCardId":298,"idOfCardBeingAttacked":227,"stackEffectType":4}} 

 Player 2 02:32:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":410,"_text":"Add DeclareAttack 50 "}} 

 Player 2 02:32:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:32:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 02:32:55 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":50,"creatorCardId":298,"attackingPlayerCardId":298,"idOfCardBeingAttacked":227,"stackEffectType":4}} 

 Player 2 02:32:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":411,"_text":"Response Adding DeclareAttack 50"},"childOfId":410} 

 Player 2 02:32:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":412,"_text":"Wait For Response From Player 2 "},"childOfId":410} 

 Player 2 02:32:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:32:55 $ACTION_MASSAGE_REMOVE:  
{"id":412} 

 Player 2 02:32:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":413,"_text":"Wait For Response From Player 1 "},"childOfId":410} 

 Player 2 02:32:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:32:55 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:32:55 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:32:55 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:32:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 02:32:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 02:32:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 02:32:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 02:32:56 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:32:56 $ACTION_MASSAGE_REMOVE:  
{"id":413} 

 Player 2 02:32:56 $ACTION_MASSAGE_REMOVE:  
{"id":411} 

 Player 2 02:32:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":414,"_text":"Resolve DeclareAttack 50 "}} 

 Player 2 02:32:56 $DRAW_CARD:  
{"deckType":2} 

 Player 2 02:32:56 $SHOW_CARD_PREVIEW:  
{"cardToShowId":277,"playerId":2} 

 Player 2 02:33:20 $FLIP_CARD:  
{"cardId":277} 

 Player 2 02:33:20 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":277} 

 Player 2 02:33:20 $NEW_MONSTER_ON_PLACE:  
{"cardId":277,"monsterPlaceId":2} 

 Player 2 02:33:20 $SHOW_DECISION:  
{"startCardId":298,"endCardId":277} 

 Player 2 02:33:23 $NEXT_STACK_ID:  

 Player 2 02:33:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 02:33:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs!"} 

 Player 2 02:33:23 $ADD_TO_STACK:  
{"stackEffect":{"entityId":51,"creatorCardId":298,"hasLockingStackEffect":false,"itemToPlayCardId":277,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 02:33:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs!"} 

 Player 2 02:33:23 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":51,"creatorCardId":298,"hasLockingStackEffect":false,"itemToPlayCardId":277,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 02:33:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":415,"_text":"Add ActivateItem 51 "}} 

 Player 2 02:33:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:33:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs!"} 

 Player 2 02:33:23 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":51,"creatorCardId":298,"hasLockingStackEffect":false,"itemToPlayCardId":277,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 02:33:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":416,"_text":"Response Adding ActivateItem 51"},"childOfId":415} 

 Player 2 02:33:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":417,"_text":"Wait For Response From Player 2 "},"childOfId":415} 

 Player 2 02:33:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:33:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 02:33:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 02:33:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs!"} 

 Player 1 02:33:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs!"} 

 Player 1 02:33:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs!"} 

 Player 1 02:33:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs!"} 

 Player 2 02:33:28 $ACTION_MASSAGE_REMOVE:  
{"id":417} 

 Player 2 02:33:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":418,"_text":"Wait For Response From Player 1 "},"childOfId":415} 

 Player 2 02:33:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:33:28 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:33:28 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:33:28 $ACTION_MASSAGE_REMOVE:  
{"id":418} 

 Player 2 02:33:28 $ACTION_MASSAGE_REMOVE:  
{"id":416} 

 Player 2 02:33:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":419,"_text":"Resolve ActivateItem 51 "}} 

 Player 2 02:33:29 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":277,"particleType":6} 

 Player 2 02:33:30 $DISABLE_PARTICLE_EFFECT:  
{"cardId":277,"particleType":6} 

 Player 2 02:33:30 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":277}],"result":null,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1} 

 Player 2 02:33:30 $NEXT_STACK_ID:  

 Player 2 02:33:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs!"} 

 Player 2 02:33:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 

 Player 2 02:33:31 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":52,"creatorCardId":298,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 02:33:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 

 Player 2 02:33:31 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":52,"creatorCardId":298,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 02:33:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":420,"_text":"Add ActivatePassiveEffect 52 "}} 

 Player 2 02:33:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 

 Player 2 02:33:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 

 Player 2 02:33:31 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":52,"creatorCardId":298,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 02:33:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":421,"_text":"Response Adding ActivatePassiveEffect 52"},"childOfId":420} 

 Player 2 02:33:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":422,"_text":"Wait For Response From Player 1 "},"childOfId":420} 

 Player 2 02:33:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:33:31 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:33:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs!"} 

 Player 1 02:33:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs!"} 

 Player 1 02:33:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball "} 

 Player 1 02:33:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball "} 

 Player 1 02:33:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball "} 

 Player 1 02:33:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball "} 

 Player 1 02:33:31 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:33:31 $ACTION_MASSAGE_REMOVE:  
{"id":422} 

 Player 2 02:33:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":423,"_text":"Wait For Response From Player 2 "},"childOfId":420} 

 Player 2 02:33:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:33:34 $ACTION_MASSAGE_REMOVE:  
{"id":423} 

 Player 2 02:33:34 $ACTION_MASSAGE_REMOVE:  
{"id":421} 

 Player 2 02:33:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":424,"_text":"Resolve ActivatePassiveEffect 52 "}} 

 Player 2 02:33:34 $NEXT_STACK_ID:  

 Player 2 02:33:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 

 Player 2 02:33:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n4:Player 2 roll a dice"} 

 Player 2 02:33:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n4:Player 2 roll a dice"} 

 Player 2 02:33:35 $ADD_TO_STACK:  
{"stackEffect":{"entityId":53,"creatorCardId":298,"stackEffectToLock":{"effectCollectedData":null,"entityId":52,"creatorCardId":298,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":277}],"result":null,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14},"hasLockingStackEffect":false,"stackEffectType":11}} 

 Player 2 02:33:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n4:Player 2 roll a dice"} 

 Player 2 02:33:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n4:Player 2 roll a dice"} 

 Player 2 02:33:35 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":53,"creatorCardId":298,"stackEffectToLock":{"effectCollectedData":null,"entityId":52,"creatorCardId":298,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":277}],"result":null,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14},"hasLockingStackEffect":false,"stackEffectType":11}} 

 Player 2 02:33:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":425,"_text":"Add RollDiceStackEffect 53 "}} 

 Player 2 02:33:35 $ROLL_DICE:  
{"playerId":2} 

 Player 1 02:33:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball "} 

 Player 1 02:33:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball "} 

 Player 1 02:33:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball "} 

 Player 1 02:33:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball "} 

 Player 1 02:33:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 

 Player 1 02:33:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 

 Player 1 02:33:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 

 Player 1 02:33:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 

 Player 2 02:33:37 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":2} 

 Player 2 02:33:37 $UPDATE_STACK_VIS:  
{"stackId":53,"text":"player 2 rolled 2"} 

 Player 2 02:33:37 $SHOW_DICE_ROLL:  
{"stackId":53} 

 Player 2 02:33:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n4:Player 2 rolled 2"} 

 Player 2 02:33:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:33:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n4:Player 2 rolled 2"} 

 Player 2 02:33:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n4:Player 2 rolled 2"} 

 Player 2 02:33:40 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":53,"creatorCardId":298,"stackEffectToLock":{"effectCollectedData":null,"entityId":52,"creatorCardId":298,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":277}],"result":null,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14},"hasLockingStackEffect":false,"numberRolled":2,"stackEffectType":11}} 

 Player 2 02:33:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":426,"_text":"Response Adding RollDiceStackEffect 53"},"childOfId":425} 

 Player 2 02:33:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":427,"_text":"Wait For Response From Player 2 "},"childOfId":425} 

 Player 2 02:33:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:33:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 

 Player 1 02:33:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 

 Player 1 02:33:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 

 Player 1 02:33:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 

 Player 2 02:33:41 $SHOW_DECISION:  
{"startCardId":298,"endCardId":299} 

 Player 2 02:33:44 $NEXT_STACK_ID:  

 Player 2 02:33:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n4:Player 2 rolled 2"} 

 Player 2 02:33:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n4:Player 2 rolled 2 \n5:Player 2 activated HolyMantle"} 

 Player 2 02:33:45 $ADD_TO_STACK:  
{"stackEffect":{"entityId":54,"creatorCardId":298,"hasLockingStackEffect":false,"itemToPlayCardId":299,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 02:33:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n4:Player 2 rolled 2 \n5:Player 2 activated HolyMantle"} 

 Player 2 02:33:45 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":54,"creatorCardId":298,"hasLockingStackEffect":false,"itemToPlayCardId":299,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 02:33:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":428,"_text":"Add ActivateItem 54 "}} 

 Player 1 02:33:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 

 Player 1 02:33:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 

 Player 1 02:33:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice \n5:Player 2 activated HolyMantle"} 

 Player 1 02:33:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice \n5:Player 2 activated HolyMantle"} 

 Player 2 02:34:11 $SHOW_DECISION:  
{"startCardId":299,"endCardId":298} 

 Player 2 02:34:12 $RESPOND_TO:  
{"playerId":-1,"stackEffectResponse":false} 

 Player 2 02:34:12 $RESPOND_TO:  
{"playerId":-1,"stackEffectResponse":false} 

 Player 2 02:34:12 $RESPOND_TO:  
{"playerId":-1,"stackEffectResponse":false} 

 Player 2 02:34:14 $USE_ITEM:  
{"cardId":299} 

 Player 2 02:34:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:34:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n4:Player 2 rolled 2 \n5:Player 2 activated HolyMantle"} 

 Player 2 02:34:14 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":54,"creatorCardId":298,"hasLockingStackEffect":false,"itemToPlayCardId":299,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 02:34:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":429,"_text":"Response Adding ActivateItem 54"},"childOfId":428} 

 Player 2 02:34:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":430,"_text":"Wait For Response From Player 2 "},"childOfId":428} 

 Player 2 02:34:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:34:14 $ACTION_MASSAGE_REMOVE:  
{"id":430} 

 Player 2 02:34:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":431,"_text":"Wait For Response From Player 1 "},"childOfId":428} 

 Player 2 02:34:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:34:14 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:34:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice \n5:Player 2 activated HolyMantle"} 

 Player 1 02:34:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice \n5:Player 2 activated HolyMantle"} 

 Player 1 02:34:14 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:34:14 $ACTION_MASSAGE_REMOVE:  
{"id":431} 

 Player 2 02:34:14 $ACTION_MASSAGE_REMOVE:  
{"id":429} 

 Player 2 02:34:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":432,"_text":"Resolve ActivateItem 54 "}} 

 Player 2 02:34:14 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":299,"particleType":6} 

 Player 2 02:34:16 $DISABLE_PARTICLE_EFFECT:  
{"cardId":299,"particleType":6} 

 Player 2 02:34:16 $REGISTER_ONE_TURN_PASSIVE_EFFECT:  
{"cardId":299,"effectIndex":{"type":3,"index":0},"conditionData":[{"effectTargets":[298],"chainEffectsData":[],"methodArgs":[],"isPassive":false,"effectCard":299,"effectCardOwner":298,"effectCardPlayer":298}]} 

 Player 2 02:34:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n4:Player 2 rolled 2 \n5:Player 2 activated HolyMantle"} 

 Player 2 02:34:16 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":54,"creatorCardId":298,"hasLockingStackEffect":false,"itemToPlayCardId":299,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 02:34:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n4:Player 2 rolled 2"} 

 Player 2 02:34:16 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":54,"creatorCardId":298,"hasLockingStackEffect":false,"itemToPlayCardId":299,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 02:34:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":433,"_text":"Remove After Resolve ActivateItem 54  "}} 

 Player 2 02:34:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n4:Player 2 rolled 2"} 

 Player 2 02:34:16 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":54,"creatorCardId":298,"hasLockingStackEffect":false,"itemToPlayCardId":299,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 02:34:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":434,"_text":"Response Remove After Resolve ActivateItem 54"},"childOfId":433} 

 Player 2 02:34:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":435,"_text":"Wait For Response From Player 1 "},"childOfId":433} 

 Player 2 02:34:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:34:16 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:34:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice \n5:Player 2 activated HolyMantle"} 

 Player 1 02:34:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice \n5:Player 2 activated HolyMantle"} 

 Player 1 02:34:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice \n5:Player 2 activated HolyMantle"} 

 Player 1 02:34:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice \n5:Player 2 activated HolyMantle"} 

 Player 1 02:34:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice \n5:Player 2 activated HolyMantle"} 

 Player 1 02:34:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice \n5:Player 2 activated HolyMantle"} 

 Player 1 02:34:17 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:34:17 $ACTION_MASSAGE_REMOVE:  
{"id":435} 

 Player 2 02:34:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":436,"_text":"Wait For Response From Player 2 "},"childOfId":433} 

 Player 2 02:34:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:34:17 $ACTION_MASSAGE_REMOVE:  
{"id":436} 

 Player 2 02:34:17 $ACTION_MASSAGE_REMOVE:  
{"id":434} 

 Player 2 02:34:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":437,"_text":"Resolve RollDiceStackEffect 53 "}} 

 Player 2 02:34:17 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":17,"originStackId":53},"isAfterActivation":true,"index":17} 

 Player 2 02:34:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n4:Player 2 rolled 2"} 

 Player 2 02:34:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n4:Player 2 rolled 2"} 

 Player 2 02:34:17 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":53,"creatorCardId":298,"stackEffectToLock":{"effectCollectedData":null,"entityId":52,"creatorCardId":298,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":277}],"result":null,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14},"hasLockingStackEffect":false,"numberRolled":2,"stackEffectType":11}} 

 Player 2 02:34:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 

 Player 2 02:34:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 

 Player 2 02:34:17 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":53,"creatorCardId":298,"stackEffectToLock":{"effectCollectedData":null,"entityId":52,"creatorCardId":298,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":277}],"result":null,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14},"hasLockingStackEffect":false,"numberRolled":2,"stackEffectType":11}} 

 Player 2 02:34:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":438,"_text":"Remove After Resolve RollDiceStackEffect 53  "}} 

 Player 2 02:34:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 

 Player 2 02:34:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 

 Player 2 02:34:17 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":53,"creatorCardId":298,"stackEffectToLock":{"effectCollectedData":null,"entityId":52,"creatorCardId":298,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":277}],"result":null,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14},"hasLockingStackEffect":false,"numberRolled":2,"stackEffectType":11}} 

 Player 2 02:34:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":439,"_text":"Response Remove After Resolve RollDiceStackEffect 53"},"childOfId":438} 

 Player 2 02:34:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":440,"_text":"Wait For Response From Player 2 "},"childOfId":438} 

 Player 2 02:34:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:34:17 $ACTION_MASSAGE_REMOVE:  
{"id":440} 

 Player 2 02:34:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":441,"_text":"Wait For Response From Player 1 "},"childOfId":438} 

 Player 2 02:34:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:34:17 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:34:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 

 Player 1 02:34:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 

 Player 1 02:34:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 

 Player 1 02:34:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 

 Player 1 02:34:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 

 Player 1 02:34:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 

 Player 1 02:34:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 

 Player 1 02:34:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 

 Player 1 02:34:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 

 Player 1 02:34:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 

 Player 1 02:34:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 

 Player 1 02:34:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 

 Player 1 02:34:18 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:34:18 $ACTION_MASSAGE_REMOVE:  
{"id":441} 

 Player 2 02:34:18 $ACTION_MASSAGE_REMOVE:  
{"id":439} 

 Player 2 02:34:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":442,"_text":"Resolve ActivatePassiveEffect 52 "}} 

 Player 2 02:34:18 $ACTION_MASSAGE_REMOVE:  
{"id":427} 

 Player 2 02:34:18 $ACTION_MASSAGE_REMOVE:  
{"id":426} 

 Player 2 02:34:18 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":106,"particleType":6} 

 Player 2 02:34:20 $DISABLE_PARTICLE_EFFECT:  
{"cardId":106,"particleType":6} 

 Player 2 02:34:20 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":277}],"result":null,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1} 

 Player 2 02:34:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 

 Player 2 02:34:20 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":52,"creatorCardId":298,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":2,"cardWithEffectId":106,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 02:34:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs!"} 

 Player 2 02:34:20 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":52,"creatorCardId":298,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":2,"cardWithEffectId":106,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 02:34:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":443,"_text":"Remove After Resolve ActivatePassiveEffect 52  "}} 

 Player 2 02:34:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs!"} 

 Player 2 02:34:20 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":52,"creatorCardId":298,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":2,"cardWithEffectId":106,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 02:34:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":444,"_text":"Response Remove After Resolve ActivatePassiveEffect 52"},"childOfId":443} 

 Player 2 02:34:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":445,"_text":"Wait For Response From Player 1 "},"childOfId":443} 

 Player 2 02:34:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:34:20 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:34:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball "} 

 Player 1 02:34:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball "} 

 Player 1 02:34:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball "} 

 Player 1 02:34:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball "} 

 Player 1 02:34:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball "} 

 Player 1 02:34:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball "} 

 Player 1 02:34:20 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:34:20 $ACTION_MASSAGE_REMOVE:  
{"id":445} 

 Player 2 02:34:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":446,"_text":"Wait For Response From Player 2 "},"childOfId":443} 

 Player 2 02:34:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:34:20 $ACTION_MASSAGE_REMOVE:  
{"id":446} 

 Player 2 02:34:20 $ACTION_MASSAGE_REMOVE:  
{"id":444} 

 Player 2 02:34:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":447,"_text":"Resolve ActivateItem 51 "}} 

 Player 2 02:34:20 $PLAYER_GET_HIT:  
{"playerId":2,"damage":2,"damageDealerId":277} 

 Player 2 02:34:20 $NEXT_STACK_ID:  

 Player 2 02:34:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs!"} 

 Player 2 02:34:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:34:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Player 2 is about to die"} 

 Player 2 02:34:20 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":55,"creatorCardId":298,"playerToDieCardId":298,"stackEffectType":15,"killerId":277}} 

 Player 2 02:34:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Player 2 is about to die"} 

 Player 2 02:34:20 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":50,"creatorCardId":298,"attackingPlayerCardId":298,"idOfCardBeingAttacked":227,"stackEffectType":4}} 

 Player 2 02:34:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Player 2 is about to die"} 

 Player 2 02:34:20 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":50,"creatorCardId":298,"attackingPlayerCardId":298,"idOfCardBeingAttacked":227,"stackEffectType":4}} 

 Player 2 02:34:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Player 2 is about to die"} 

 Player 2 02:34:21 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":51,"creatorCardId":298,"hasLockingStackEffect":false,"itemToPlayCardId":277,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 02:34:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Player 2 is about to die"} 

 Player 2 02:34:21 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":55,"creatorCardId":298,"playerToDieCardId":298,"stackEffectType":15,"killerId":277}} 

 Player 2 02:34:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Player 2 is about to die"} 

 Player 2 02:34:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Player 2 is about to die"} 

 Player 2 02:34:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Player 2 is about to die"} 

 Player 2 02:34:21 $REPLACE_STACK:  
{"currentStack":[{"entityId":50,"creatorCardId":298,"attackingPlayerCardId":298,"idOfCardBeingAttacked":227,"stackEffectType":4},{"entityId":51,"creatorCardId":298,"hasLockingStackEffect":false,"itemToPlayCardId":277,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1},{"entityId":55,"creatorCardId":298,"playerToDieCardId":298,"stackEffectType":15,"killerId":277}]} 

 Player 2 02:34:21 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":277}],"result":null,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 02:34:21 $MOVE_CARD:  
{"moveIndex":45,"cardId":277,"placeID":303,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 02:34:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs!"} 

 Player 1 02:34:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs!"} 

 Player 1 02:34:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 

 Player 1 02:34:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 

 Player 1 02:34:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 

 Player 1 02:34:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 

 Player 1 02:34:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 

 Player 1 02:34:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 

 Player 1 02:34:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 

 Player 1 02:34:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 

 Player 1 02:34:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 

 Player 1 02:34:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 

 Player 1 02:34:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 

 Player 1 02:34:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 

 Player 1 02:34:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 

 Player 1 02:34:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 

 Player 1 02:34:21 $MOVE_CARD_END:  
{"moveIndex":45,"cardId":277,"flipIfFlipped":true,"playerId":2} 

 Player 2 02:34:21 $MOVE_CARD_TO_PILE:  
{"type":2,"cardId":277} 

 Player 2 02:34:21 $REMOVE_MONSTER:  
{"holderId":2,"monsterId":277} 

 Player 2 02:34:21 $GET_NEXT_MONSTER:  
{"monsterPlaceId":2} 

 Player 2 02:34:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Player 2 is about to die"} 

 Player 2 02:34:21 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":51,"creatorCardId":298,"hasLockingStackEffect":false,"itemToPlayCardId":277,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 02:34:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 

 Player 2 02:34:21 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":51,"creatorCardId":298,"hasLockingStackEffect":false,"itemToPlayCardId":277,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 02:34:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":448,"_text":"Remove After Resolve ActivateItem 51  "}} 

 Player 2 02:34:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 

 Player 2 02:34:21 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":51,"creatorCardId":298,"hasLockingStackEffect":false,"itemToPlayCardId":277,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 02:34:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":449,"_text":"Response Remove After Resolve ActivateItem 51"},"childOfId":448} 

 Player 2 02:34:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":450,"_text":"Wait For Response From Player 2 "},"childOfId":448} 

 Player 2 02:34:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:34:22 $ACTION_MASSAGE_REMOVE:  
{"id":450} 

 Player 2 02:34:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":451,"_text":"Wait For Response From Player 1 "},"childOfId":448} 

 Player 2 02:34:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:34:22 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:34:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Player 2 is about to die"} 

 Player 1 02:34:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Player 2 is about to die"} 

 Player 1 02:34:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Player 2 is about to die"} 

 Player 1 02:34:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Player 2 is about to die"} 

 Player 1 02:34:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Player 2 is about to die"} 

 Player 1 02:34:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Player 2 is about to die"} 

 Player 1 02:34:22 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:34:22 $ACTION_MASSAGE_REMOVE:  
{"id":451} 

 Player 2 02:34:22 $ACTION_MASSAGE_REMOVE:  
{"id":449} 

 Player 2 02:34:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":452,"_text":"Resolve PlayerDeath 55 "}} 

 Player 2 02:34:22 $NEXT_STACK_ID:  

 Player 2 02:34:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 

 Player 2 02:34:22 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_PAY_DEATH_PANELTIES","args":[],"result":null,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":2,"originStackId":56},"isAfterActivation":false,"index":2} 

 Player 2 02:34:22 $NEXT_STACK_ID:  

 Player 2 02:34:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die \n3:Player 2 is about to pay death penalties"} 

 Player 2 02:34:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die \n3:Player 2 is about to pay death penalties \n4:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 2 02:34:22 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":57,"creatorCardId":298,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":299,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":299,"effctType":3},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 02:34:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die \n3:Player 2 is about to pay death penalties \n4:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 2 02:34:22 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":57,"creatorCardId":298,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":299,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":299,"effctType":3},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 02:34:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":453,"_text":"Add ActivatePassiveEffect 57 "}} 

 Player 2 02:34:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die \n3:Player 2 is about to pay death penalties \n4:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 2 02:34:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die \n3:Player 2 is about to pay death penalties \n4:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 2 02:34:22 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":57,"creatorCardId":298,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":299,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":299,"effctType":3},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 02:34:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":454,"_text":"Response Adding ActivatePassiveEffect 57"},"childOfId":453} 

 Player 2 02:34:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":455,"_text":"Wait For Response From Player 1 "},"childOfId":453} 

 Player 2 02:34:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:34:22 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:34:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 

 Player 1 02:34:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 

 Player 1 02:34:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die \n3:Activate HolyMantle "} 

 Player 1 02:34:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die \n3:Activate HolyMantle "} 

 Player 1 02:34:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die \n3:Activate HolyMantle "} 

 Player 1 02:34:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die \n3:Activate HolyMantle "} 

 Player 1 02:34:23 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:34:23 $ACTION_MASSAGE_REMOVE:  
{"id":455} 

 Player 2 02:34:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":456,"_text":"Wait For Response From Player 2 "},"childOfId":453} 

 Player 2 02:34:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:34:23 $ACTION_MASSAGE_REMOVE:  
{"id":456} 

 Player 2 02:34:23 $ACTION_MASSAGE_REMOVE:  
{"id":454} 

 Player 2 02:34:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":457,"_text":"Resolve ActivatePassiveEffect 57 "}} 

 Player 2 02:34:23 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":299,"particleType":6} 

 Player 2 02:34:25 $DISABLE_PARTICLE_EFFECT:  
{"cardId":299,"particleType":6} 

 Player 2 02:34:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 2 02:34:25 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":56,"creatorCardId":298,"playerToPayCardId":298,"stackEffectType":16}} 

 Player 2 02:34:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":458,"_text":"Fizzle PlayerDeathPenalties 56"}} 

 Player 2 02:34:25 $FIZZLE_STACK_EFFECT:  
{"entityId":56} 

 Player 2 02:34:25 $PLAYER_HEAL:  
{"playerId":2,"hpToHeal":1,"healDown":true} 

 Player 2 02:34:25 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_PAY_DEATH_PANELTIES","args":[],"result":null,"preventMethod":true,"methodScopeId":298,"scopeIsPlayer":true,"index":2,"originStackId":56},"isAfterActivation":false,"index":2} 

 Player 2 02:34:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 2 02:34:25 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":57,"creatorCardId":298,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":299,"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 02:34:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 

 Player 2 02:34:25 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":57,"creatorCardId":298,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":299,"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 02:34:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":459,"_text":"Remove After Resolve ActivatePassiveEffect 57  "}} 

 Player 2 02:34:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 

 Player 2 02:34:25 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":57,"creatorCardId":298,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":299,"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 02:34:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":460,"_text":"Response Remove After Resolve ActivatePassiveEffect 57"},"childOfId":459} 

 Player 2 02:34:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":461,"_text":"Wait For Response From Player 2 "},"childOfId":459} 

 Player 2 02:34:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:34:25 $ACTION_MASSAGE_REMOVE:  
{"id":461} 

 Player 2 02:34:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":462,"_text":"Wait For Response From Player 1 "},"childOfId":459} 

 Player 2 02:34:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:34:25 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:34:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die \n3:Activate HolyMantle "} 

 Player 1 02:34:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die \n3:Activate HolyMantle "} 

 Player 1 02:34:25 $PLAYER_HEAL:  
{"playerId":2,"hpToHeal":1} 

 Player 1 02:34:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die \n3:Activate HolyMantle "} 

 Player 1 02:34:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die \n3:Activate HolyMantle "} 

 Player 1 02:34:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die \n3:Activate HolyMantle "} 

 Player 1 02:34:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die \n3:Activate HolyMantle "} 

 Player 1 02:34:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die \n3:Activate HolyMantle "} 

 Player 1 02:34:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die \n3:Activate HolyMantle "} 

 Player 1 02:34:25 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:34:25 $ACTION_MASSAGE_REMOVE:  
{"id":462} 

 Player 2 02:34:25 $ACTION_MASSAGE_REMOVE:  
{"id":460} 

 Player 2 02:34:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":463,"_text":"Resolve PlayerDeath 55 "}} 

 Player 2 02:34:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 

 Player 2 02:34:26 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":56,"creatorCardId":298,"playerToPayCardId":298,"stackEffectType":16}} 

 Player 2 02:34:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 

 Player 2 02:34:26 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":50,"creatorCardId":298,"attackingPlayerCardId":298,"idOfCardBeingAttacked":227,"stackEffectType":4}} 

 Player 2 02:34:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 

 Player 2 02:34:26 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":50,"creatorCardId":298,"attackingPlayerCardId":298,"idOfCardBeingAttacked":227,"stackEffectType":4}} 

 Player 2 02:34:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 

 Player 2 02:34:26 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":55,"creatorCardId":298,"playerToDieCardId":298,"stackEffectType":15,"killerId":277}} 

 Player 2 02:34:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 

 Player 2 02:34:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 

 Player 2 02:34:26 $REPLACE_STACK:  
{"currentStack":[{"entityId":50,"creatorCardId":298,"attackingPlayerCardId":298,"idOfCardBeingAttacked":227,"stackEffectType":4},{"entityId":55,"creatorCardId":298,"playerToDieCardId":298,"stackEffectType":15,"killerId":277}]} 

 Player 2 02:34:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 

 Player 2 02:34:26 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":55,"creatorCardId":298,"playerToDieCardId":298,"stackEffectType":15,"killerId":277}} 

 Player 2 02:34:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 02:34:26 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":55,"creatorCardId":298,"playerToDieCardId":298,"stackEffectType":15,"killerId":277}} 

 Player 2 02:34:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":464,"_text":"Remove After Resolve PlayerDeath 55  "}} 

 Player 2 02:34:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 02:34:26 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":55,"creatorCardId":298,"playerToDieCardId":298,"stackEffectType":15,"killerId":277}} 

 Player 2 02:34:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":465,"_text":"Response Remove After Resolve PlayerDeath 55"},"childOfId":464} 

 Player 2 02:34:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":466,"_text":"Wait For Response From Player 1 "},"childOfId":464} 

 Player 2 02:34:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:34:26 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:34:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 

 Player 1 02:34:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 

 Player 1 02:34:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to pay death penalties"} 

 Player 1 02:34:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to pay death penalties"} 

 Player 1 02:34:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to pay death penalties"} 

 Player 1 02:34:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to pay death penalties"} 

 Player 1 02:34:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to pay death penalties"} 

 Player 1 02:34:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to pay death penalties"} 

 Player 1 02:34:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to pay death penalties"} 

 Player 1 02:34:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to pay death penalties"} 

 Player 1 02:34:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to pay death penalties"} 

 Player 1 02:34:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to pay death penalties"} 

 Player 1 02:34:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 

 Player 1 02:34:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 

 Player 1 02:34:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 

 Player 1 02:34:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 

 Player 1 02:34:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 

 Player 1 02:34:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 

 Player 1 02:34:27 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:34:27 $ACTION_MASSAGE_REMOVE:  
{"id":466} 

 Player 2 02:34:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":467,"_text":"Wait For Response From Player 2 "},"childOfId":464} 

 Player 2 02:34:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:34:27 $ACTION_MASSAGE_REMOVE:  
{"id":467} 

 Player 2 02:34:27 $ACTION_MASSAGE_REMOVE:  
{"id":465} 

 Player 2 02:34:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":468,"_text":"Resolve DeclareAttack 50 "}} 

 Player 2 02:34:27 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":18,"originStackId":50},"isAfterActivation":true,"index":18} 

 Player 2 02:34:27 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:34:27 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":50,"creatorCardId":298,"attackingPlayerCardId":298,"idOfCardBeingAttacked":277,"stackEffectType":4}} 

 Player 2 02:34:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":469,"_text":"Remove After Resolve DeclareAttack 50  "}} 

 Player 2 02:34:27 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:34:27 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":50,"creatorCardId":298,"attackingPlayerCardId":298,"idOfCardBeingAttacked":277,"stackEffectType":4}} 

 Player 2 02:34:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":470,"_text":"Response Remove After Resolve DeclareAttack 50"},"childOfId":469} 

 Player 2 02:34:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":471,"_text":"Wait For Response From Player 2 "},"childOfId":469} 

 Player 2 02:34:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:34:27 $ACTION_MASSAGE_REMOVE:  
{"id":471} 

 Player 2 02:34:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":472,"_text":"Wait For Response From Player 1 "},"childOfId":469} 

 Player 2 02:34:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:34:27 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:34:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 02:34:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 02:34:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 02:34:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 02:34:27 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:34:27 $ACTION_MASSAGE_REMOVE:  
{"id":472} 

 Player 2 02:34:27 $ACTION_MASSAGE_REMOVE:  
{"id":470} 

 Player 2 02:34:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":473,"_text":"Stack Was Emptied "}} 

 Player 2 02:34:27 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:34:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:34:27 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:34:27 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 2 02:34:27 $END_TURN:  

 Player 2 02:34:27 $SET_TURN:  
{"playerId":1} 

 Player 2 02:34:27 $START_TURN:  
{"playerId":1} 

 Player 1 02:34:27 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 02:34:27 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:34:27 $RECHARGE_ITEM:  
{"cardId":289} 

 Player 1 02:34:28 $PLAYER_RECHARGE_ITEM:  
{"playerId":1,"cardId":289} 

 Player 1 02:34:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:34:28 $NEXT_STACK_ID:  

 Player 1 02:34:28 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:34:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 02:34:28 $ADD_TO_STACK:  
{"stackEffect":{"entityId":58,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 

 Player 1 02:34:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 02:34:28 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":58,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 

 Player 1 02:34:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":474,"_text":"Add StartTurnLoot 58 "}} 

 Player 1 02:34:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:34:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 02:34:28 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":58,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 

 Player 1 02:34:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":475,"_text":"Response Adding StartTurnLoot 58"},"childOfId":474} 

 Player 1 02:34:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":476,"_text":"Wait For Response From Player 1 "},"childOfId":474} 

 Player 1 02:34:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:34:28 $ACTION_MASSAGE_REMOVE:  
{"id":476} 

 Player 1 02:34:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":477,"_text":"Wait For Response From Player 2 "},"childOfId":474} 

 Player 1 02:34:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:34:28 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:34:28 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 02:34:28 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:34:28 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:34:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:34:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:34:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:34:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:34:28 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:34:28 $ACTION_MASSAGE_REMOVE:  
{"id":477} 

 Player 1 02:34:28 $ACTION_MASSAGE_REMOVE:  
{"id":475} 

 Player 1 02:34:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":478,"_text":"Resolve StartTurnLoot 58 "}} 

 Player 1 02:34:28 $DRAW_CARD:  
{"deckType":1} 

 Player 1 02:34:28 $MOVE_CARD:  
{"moveIndex":46,"cardId":128,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 02:34:29 $MOVE_CARD_END:  
{"moveIndex":46,"cardId":128,"flipIfFlipped":false,"playerId":1} 

 Player 1 02:34:29 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":128} 

 Player 1 02:34:29 $FLIP_CARD:  
{"cardId":128} 

 Player 1 02:34:29 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":128} 

 Player 1 02:34:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 02:34:29 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":58,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 

 Player 1 02:34:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:34:29 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":58,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 

 Player 1 02:34:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":479,"_text":"Remove After Resolve StartTurnLoot 58  "}} 

 Player 1 02:34:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:34:29 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":58,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 

 Player 1 02:34:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":480,"_text":"Response Remove After Resolve StartTurnLoot 58"},"childOfId":479} 

 Player 1 02:34:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":481,"_text":"Wait For Response From Player 2 "},"childOfId":479} 

 Player 1 02:34:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:34:29 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:34:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:34:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:34:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:34:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:34:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:34:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:34:29 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:34:29 $ACTION_MASSAGE_REMOVE:  
{"id":481} 

 Player 1 02:34:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":482,"_text":"Wait For Response From Player 1 "},"childOfId":479} 

 Player 1 02:34:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:34:29 $ACTION_MASSAGE_REMOVE:  
{"id":482} 

 Player 1 02:34:29 $ACTION_MASSAGE_REMOVE:  
{"id":480} 

 Player 1 02:34:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":483,"_text":"Stack Was Emptied "}} 

 Player 1 02:34:30 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:12:27 $MATCH: 