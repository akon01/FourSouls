"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var LifeScope_1 = require("./LifeScope");
var core_1 = require("./core");
var ICacheManager_1 = require("./ICacheManager");
var IMethodAccessor_1 = require("./IMethodAccessor");
var resolves_1 = require("./resolves");
var providers_1 = require("./providers");
/**
 * register core for container.
 *
 * @export
 * @param {IContainer} container
 */
function registerCores(container) {
    container.registerSingleton(LifeScope_1.LifeScopeToken, function () { return new core_1.DefaultLifeScope(container); });
    container.registerSingleton(ICacheManager_1.CacheManagerToken, function () { return new core_1.CacheManager(container); });
    container.registerSingleton(resolves_1.ResolverChainToken, function () { return new resolves_1.ResolverChain(container); });
    container.register(providers_1.ProviderMapToken, function () { return new providers_1.ProviderMap(container); });
    container.bindProvider(providers_1.ProviderMap, providers_1.ProviderMapToken);
    container.registerSingleton(providers_1.ProviderParserToken, function () { return new providers_1.ProviderParser(container); });
    container.registerSingleton(IMethodAccessor_1.MethodAccessorToken, function () { return new core_1.MethodAccessor(container); });
    container.registerSingleton(core_1.MetaAccessorToken, core_1.MetaAccessor);
    var lifeScope = container.get(LifeScope_1.LifeScopeToken);
    lifeScope.registerDecorator(core_1.Injectable, core_1.CoreActions.bindProvider, core_1.CoreActions.cache);
    lifeScope.registerDecorator(core_1.Component, core_1.CoreActions.bindProvider, core_1.CoreActions.cache, core_1.CoreActions.componentBeforeInit, core_1.CoreActions.componentInit, core_1.CoreActions.componentAfterInit);
    lifeScope.registerDecorator(core_1.Singleton, core_1.CoreActions.bindProvider);
    lifeScope.registerDecorator(core_1.Refs, core_1.CoreActions.bindProvider);
    lifeScope.registerDecorator(core_1.Providers, core_1.CoreActions.bindProvider);
    lifeScope.registerDecorator(core_1.Abstract, core_1.CoreActions.bindProvider, core_1.CoreActions.cache);
    lifeScope.registerDecorator(core_1.AutoWired, core_1.CoreActions.bindParameterType, core_1.CoreActions.bindPropertyType);
    lifeScope.registerDecorator(core_1.Inject, core_1.CoreActions.bindParameterType, core_1.CoreActions.bindPropertyType);
    lifeScope.registerDecorator(core_1.Param, core_1.CoreActions.bindParameterType, core_1.CoreActions.bindPropertyType);
    lifeScope.registerDecorator(core_1.Method, core_1.CoreActions.bindParameterProviders);
    lifeScope.registerDecorator(core_1.Autorun, core_1.CoreActions.autorun, core_1.CoreActions.methodAutorun);
    lifeScope.registerDecorator(core_1.IocExt, core_1.CoreActions.autorun, core_1.CoreActions.componentBeforeInit, core_1.CoreActions.componentInit, core_1.CoreActions.componentAfterInit);
    container.register(Date, function () { return new Date(); });
    container.register(String, function () { return ''; });
    container.register(Number, function () { return Number.NaN; });
    container.register(Boolean, function () { return undefined; });
    container.register(Array, function () { return []; });
}
exports.registerCores = registerCores;

//# sourceMappingURL=sourcemaps/registerCores.js.map
