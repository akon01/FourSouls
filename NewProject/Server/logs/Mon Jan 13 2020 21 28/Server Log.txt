Start Log 

 Player 1 21:28:53 $MATCH:  

 Player 1 21:28:53 $START_GAME:  

 Player 2 21:28:53 $MOVE_TO_TABLE:  

 Player 1 21:28:53 $MOVE_TO_TABLE:  

 Player 1 21:29:02 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 21:29:02 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 2 21:29:02 $CHOOSE_FOR_EDEN:  
{"playerId":1,"originPlayerId":2} 

 Player 1 21:29:02 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[156,145,209,172,157,163,206,202,197,155,192,198,211,146,216,218,215,214,162,179,188,191,153,208,189,193,178,159,212,173,167,180,205,220,161,182,213,151,171,154,200,186,194,166,152,170,147,181,203,158,217,199,207,187,219,176,168,165,174,204,150,183,196,210,185,177,164,148,195,175,190,149,201,160,184,169]} 

 Player 1 21:29:07 $EDEN_CHOSEN:  
{"cardId":209,"playerId":2} 

 Player 2 21:29:07 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[156,145,172,157,163,206,202,197,155,192,198,211,146,216,218,215,214,162,179,188,191,153,208,189,193,178,159,212,173,167,180,205,220,161,182,213,151,171,154,200,186,194,166,152,170,147,181,203,158,217,199,207,187,219,176,168,165,174,204,150,183,196,210,185,177,164,148,195,175,190,149,201,160,184,169]} 

 Player 2 21:29:07 $FLIP_CARD:  
{"cardId":209} 

 Player 2 21:29:07 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":283,"itemCardId":209} 

 Player 2 21:29:07 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":294}],"result":true,"preventMethod":false,"methodScopeId":293,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 21:29:07 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":293,"itemCardId":294} 

 Player 2 21:29:07 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[117,140,134,109,122,12,139,45,113,46,55,29,128,54,56,79,97,64,89,118,59,25,125,24,34,129,82,85,15,41,100,81,14,26,132,108,44,91,11,135,28,90,16,101,87,73,58,114,142,124,94,112,50,57,60,68,77,96,84,120,103,119,49,66,95,99,92,42,23,88,116,107,8,33,9,76,18,123,104,80,35,13,69,71,52,75,121,30,105,111,127,86,7,72,40,62,51,63,37,22,138,61,43,20,136,67,36,131,31,38,137,27,78,48,47,17,10,115,53,19,93,74,130,133,110,83,39,141,32,98,65,126,106,70,102,21]} 

 Player 2 21:29:07 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[238,263,252,273,257,231,235,260,245,232,266,228,230,264,261,224,275,267,276,258,227,223,255,248,265,269,249,251,270,250,244,272,254,246,243,247,225,242,229,241,233,237,262,239,271,253,259,268,226,234,274,240,236,256]} 

 Player 2 21:29:07 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[148,215,182,216,210,213,205,170,217,184,181,203,163,158,174,189,180,155,156,151,199,214,191,153,196,150,204,162,188,190,159,202,197,172,179,154,145,219,211,173,212,164,169,152,195,165,198,186,157,177,201,220,193,171,192,175,167,200,146,218,176,187,207,166,194,168,149,206,183,208,161,178,185,160,147]} 

 Player 2 21:29:07 $DRAW_CARD:  
{"deckType":5} 

 Player 2 21:29:07 $FLIP_CARD:  
{"cardId":147} 

 Player 2 21:29:07 $ADD_STORE_CARD:  
{"cardId":147} 

 Player 2 21:29:07 $DRAW_CARD:  
{"deckType":5} 

 Player 2 21:29:07 $FLIP_CARD:  
{"cardId":160} 

 Player 2 21:29:07 $ADD_STORE_CARD:  
{"cardId":160} 

 Player 2 21:29:07 $DRAW_CARD:  
{"deckType":2} 

 Player 2 21:29:07 $FLIP_CARD:  
{"cardId":256} 

 Player 2 21:29:07 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":256} 

 Player 2 21:29:07 $NEW_MONSTER_ON_PLACE:  
{"cardId":256,"monsterPlaceId":1} 

 Player 2 21:29:07 $DRAW_CARD:  
{"deckType":2} 

 Player 2 21:29:07 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":236} 

 Player 2 21:29:07 $DRAW_CARD:  
{"deckType":2} 

 Player 2 21:29:07 $FLIP_CARD:  
{"cardId":240} 

 Player 2 21:29:07 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":240} 

 Player 2 21:29:07 $NEW_MONSTER_ON_PLACE:  
{"cardId":240,"monsterPlaceId":2} 

 Player 2 21:29:07 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 21:29:07 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":283,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 21:29:07 $DRAW_CARD:  
{"deckType":1} 

 Player 2 21:29:07 $MOVE_CARD:  
{"moveIndex":1,"cardId":21,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 21:29:07 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":209}],"result":true,"preventMethod":false,"methodScopeId":283,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 21:29:08 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":21,"flipIfFlipped":false,"playerId":2} 

 Player 2 21:29:08 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":21} 

 Player 2 21:29:08 $FLIP_CARD:  
{"cardId":21} 

 Player 2 21:29:08 $FLIP_CARD:  
{"cardId":21} 

 Player 2 21:29:08 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":21} 

 Player 2 21:29:08 $DRAW_CARD:  
{"deckType":1} 

 Player 2 21:29:08 $MOVE_CARD:  
{"moveIndex":2,"cardId":102,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 21:29:08 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":102,"flipIfFlipped":false,"playerId":2} 

 Player 2 21:29:08 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":102} 

 Player 2 21:29:08 $FLIP_CARD:  
{"cardId":102} 

 Player 2 21:29:08 $FLIP_CARD:  
{"cardId":102} 

 Player 2 21:29:08 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":102} 

 Player 2 21:29:08 $DRAW_CARD:  
{"deckType":1} 

 Player 2 21:29:08 $MOVE_CARD:  
{"moveIndex":3,"cardId":70,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 21:29:09 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":70,"flipIfFlipped":false,"playerId":2} 

 Player 2 21:29:09 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":70} 

 Player 2 21:29:09 $FLIP_CARD:  
{"cardId":70} 

 Player 2 21:29:09 $FLIP_CARD:  
{"cardId":70} 

 Player 2 21:29:09 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":70} 

 Player 2 21:29:09 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 21:29:09 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":293,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 21:29:09 $DRAW_CARD:  
{"deckType":1} 

 Player 2 21:29:09 $MOVE_CARD:  
{"moveIndex":4,"cardId":106,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 21:29:09 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":106,"flipIfFlipped":false,"playerId":2} 

 Player 2 21:29:09 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":106} 

 Player 2 21:29:09 $FLIP_CARD:  
{"cardId":106} 

 Player 2 21:29:09 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":106} 

 Player 2 21:29:09 $DRAW_CARD:  
{"deckType":1} 

 Player 2 21:29:09 $MOVE_CARD:  
{"moveIndex":5,"cardId":126,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 21:29:10 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":126,"flipIfFlipped":false,"playerId":2} 

 Player 2 21:29:10 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":126} 

 Player 2 21:29:10 $FLIP_CARD:  
{"cardId":126} 

 Player 2 21:29:10 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":126} 

 Player 2 21:29:10 $DRAW_CARD:  
{"deckType":1} 

 Player 2 21:29:10 $MOVE_CARD:  
{"moveIndex":6,"cardId":65,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 21:29:10 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":65,"flipIfFlipped":false,"playerId":2} 

 Player 2 21:29:10 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":65} 

 Player 2 21:29:10 $FLIP_CARD:  
{"cardId":65} 

 Player 2 21:29:10 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":65} 

 Player 2 21:29:10 $GAME_HAS_STARTED:  

 Player 2 21:29:10 $SET_TURN:  
{"playerId":2} 

 Player 2 21:29:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:29:10 $NEXT_STACK_ID:  

 Player 2 21:29:10 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 21:29:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 21:29:10 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":293,"turnPlayerCardId":293,"stackEffectType":13}} 

 Player 2 21:29:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 21:29:11 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":293,"turnPlayerCardId":293,"stackEffectType":13}} 

 Player 2 21:29:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 2 21:29:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:29:11 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 21:29:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 21:29:11 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":293,"turnPlayerCardId":293,"stackEffectType":13}} 

 Player 2 21:29:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 2 21:29:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 2 21:29:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:29:11 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 21:29:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 2 21:29:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:29:11 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:29:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:29:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:29:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 21:29:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 21:29:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 21:29:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 21:29:11 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:29:11 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 21:29:11 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 21:29:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 2 21:29:11 $DRAW_CARD:  
{"deckType":1} 

 Player 2 21:29:11 $MOVE_CARD:  
{"moveIndex":7,"cardId":98,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 21:29:12 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":98,"flipIfFlipped":false,"playerId":2} 

 Player 2 21:29:12 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":98} 

 Player 2 21:29:12 $FLIP_CARD:  
{"cardId":98} 

 Player 2 21:29:12 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":98} 

 Player 2 21:29:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 21:29:12 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":293,"turnPlayerCardId":293,"stackEffectType":13}} 

 Player 2 21:29:12 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 21:29:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 21:29:12 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":293,"turnPlayerCardId":293,"stackEffectType":13}} 

 Player 2 21:29:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 2 21:29:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 21:29:12 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":293,"turnPlayerCardId":293,"stackEffectType":13}} 

 Player 2 21:29:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 2 21:29:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 2 21:29:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:29:12 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:29:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 21:29:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 21:29:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 21:29:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 21:29:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 21:29:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 21:29:12 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:29:12 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 2 21:29:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 2 21:29:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:29:12 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 2 21:29:12 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 2 21:29:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 2 21:29:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 21:29:12 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 21:29:12 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 21:29:12 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 21:29:12 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 21:29:12 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 21:29:12 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 21:29:12 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 21:29:12 $UPDATE_ACTIONS:  

 Player 2 21:29:14 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 21:29:15 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 21:29:41 $SET_MONEY:  
{"playerId":1,"numOfCoins":11} 

 Player 1 21:29:41 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":8}],"result":null,"preventMethod":false,"methodScopeId":283,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 21:29:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:29:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 21:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 21:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 21:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 21:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 21:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 21:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 21:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 21:29:43 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 2 21:29:43 $END_TURN:  

 Player 2 21:29:43 $SET_TURN:  
{"playerId":1} 

 Player 2 21:29:43 $START_TURN:  
{"playerId":1} 

 Player 1 21:29:43 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 21:29:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 21:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 21:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 21:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 21:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 21:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 21:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 21:29:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:29:43 $NEXT_STACK_ID:  

 Player 1 21:29:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:29:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 21:29:43 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":283,"turnPlayerCardId":283,"stackEffectType":13}} 

 Player 1 21:29:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 21:29:43 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":283,"turnPlayerCardId":283,"stackEffectType":13}} 

 Player 1 21:29:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add StartTurnLoot 2 "}} 

 Player 1 21:29:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 21:29:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 21:29:43 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":283,"turnPlayerCardId":283,"stackEffectType":13}} 

 Player 1 21:29:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding StartTurnLoot 2"},"childOfId":10} 

 Player 1 21:29:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 1 21:29:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 1 21:29:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 1 21:29:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:29:43 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:29:44 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 21:29:44 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 21:29:44 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 21:29:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 21:29:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 21:29:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 21:29:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 21:29:44 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 1 21:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 1 21:29:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve StartTurnLoot 2 "}} 

 Player 1 21:29:44 $DRAW_CARD:  
{"deckType":1} 

 Player 1 21:29:44 $MOVE_CARD:  
{"moveIndex":8,"cardId":32,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 21:29:44 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":32,"flipIfFlipped":false,"playerId":1} 

 Player 1 21:29:44 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":32} 

 Player 1 21:29:44 $FLIP_CARD:  
{"cardId":32} 

 Player 1 21:29:44 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":32} 

 Player 1 21:29:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 21:29:44 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":283,"turnPlayerCardId":283,"stackEffectType":13}} 

 Player 1 21:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 21:29:44 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:29:44 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":283,"turnPlayerCardId":283,"stackEffectType":13}} 

 Player 1 21:29:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve StartTurnLoot 2  "}} 

 Player 1 21:29:44 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:29:44 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":283,"turnPlayerCardId":283,"stackEffectType":13}} 

 Player 1 21:29:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve StartTurnLoot 2"},"childOfId":15} 

 Player 1 21:29:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 1 21:29:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:29:45 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:29:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 21:29:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 21:29:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 21:29:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 21:29:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 21:29:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 21:29:45 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:29:45 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 1 21:29:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 1 21:29:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:29:45 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 1 21:29:45 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 1 21:29:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 1 21:29:45 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:29:45 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 21:29:45 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 21:29:45 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 21:29:45 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 21:29:45 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 21:29:45 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 21:29:45 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 21:29:45 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 21:29:45 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 21:29:45 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 21:29:45 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 21:29:46 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 21:29:47 $SHOW_DECISION:  
{"startCardId":283,"endCardId":160} 

 Player 1 21:29:47 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 21:29:50 $NEXT_STACK_ID:  

 Player 1 21:29:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:29:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Dads Lost Coin for 10"} 

 Player 1 21:29:50 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":283,"itemToPurchaseCardId":160,"playerWhoBuysCardId":283,"cost":10,"stackEffectType":9}} 

 Player 1 21:29:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Dads Lost Coin for 10"} 

 Player 1 21:29:50 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":283,"itemToPurchaseCardId":160,"playerWhoBuysCardId":283,"cost":10,"stackEffectType":9}} 

 Player 1 21:29:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add PurchaseItem 3 "}} 

 Player 1 21:29:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:29:50 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 21:29:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Dads Lost Coin for 10"} 

 Player 1 21:29:50 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":283,"itemToPurchaseCardId":160,"playerWhoBuysCardId":283,"cost":10,"stackEffectType":9}} 

 Player 1 21:29:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding PurchaseItem 3"},"childOfId":20} 

 Player 1 21:29:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 1 21:29:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:29:50 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 1 21:29:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 1 21:29:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:29:50 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:29:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 21:29:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 21:29:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Dads Lost Coin for 10"} 

 Player 2 21:29:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Dads Lost Coin for 10"} 

 Player 2 21:29:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Dads Lost Coin for 10"} 

 Player 2 21:29:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Dads Lost Coin for 10"} 

 Player 2 21:29:50 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:29:50 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 1 21:29:50 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 1 21:29:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve PurchaseItem 3 "}} 

 Player 1 21:29:50 $SET_MONEY:  
{"playerId":1,"numOfCoins":1} 

 Player 1 21:29:50 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-10}],"result":null,"preventMethod":false,"methodScopeId":283,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 1 21:29:50 $REMOVE_ITEM_FROM_SHOP:  
{"cardId":160} 

 Player 1 21:29:50 $NEXT_STACK_ID:  

 Player 1 21:29:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Dads Lost Coin for 10"} 

 Player 1 21:29:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:29:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Dads Lost Coin for 10 \n2:Refill Store slot"} 

 Player 1 21:29:51 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":283,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 1 21:29:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Dads Lost Coin for 10 \n2:Refill Store slot"} 

 Player 1 21:29:51 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":283,"itemToPurchaseCardId":160,"playerWhoBuysCardId":283,"cost":10,"stackEffectType":9}} 

 Player 1 21:29:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Dads Lost Coin for 10 \n2:Refill Store slot"} 

 Player 1 21:29:51 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":283,"itemToPurchaseCardId":160,"playerWhoBuysCardId":283,"cost":10,"stackEffectType":9}} 

 Player 1 21:29:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Dads Lost Coin for 10 \n2:Refill Store slot"} 

 Player 1 21:29:51 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":283,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 1 21:29:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Dads Lost Coin for 10 \n2:Refill Store slot"} 

 Player 1 21:29:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Dads Lost Coin for 10 \n2:Refill Store slot"} 

 Player 1 21:29:51 $REPLACE_STACK:  
{"currentStack":[{"entityId":3,"creatorCardId":283,"itemToPurchaseCardId":160,"playerWhoBuysCardId":283,"cost":10,"stackEffectType":9},{"entityId":4,"creatorCardId":283,"slotType":5,"slotToFillId":0,"stackEffectType":10}]} 

 Player 1 21:29:51 $REGISTER_PASSIVE_ITEM:  
{"cardId":160} 

 Player 1 21:29:51 $MOVE_CARD:  
{"moveIndex":9,"cardId":160,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 

 Player 2 21:29:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Dads Lost Coin for 10"} 

 Player 2 21:29:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Dads Lost Coin for 10"} 

 Player 2 21:29:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 2 21:29:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 2 21:29:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 2 21:29:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 2 21:29:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 2 21:29:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 2 21:29:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 2 21:29:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 2 21:29:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 2 21:29:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 2 21:29:51 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":160,"flipIfFlipped":true,"playerId":1} 

 Player 1 21:29:51 $ADD_AN_ITEM:  
{"playerId":1,"cardId":160,"isReward":false} 

 Player 1 21:29:51 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":160}],"result":true,"preventMethod":false,"methodScopeId":283,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 1 21:29:51 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 21:29:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 21:29:51 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":283,"itemToPurchaseCardId":160,"playerWhoBuysCardId":283,"cost":10,"stackEffectType":9}} 

 Player 1 21:29:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Remove After Resolve PurchaseItem 3  "}} 

 Player 1 21:29:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 21:29:51 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":283,"itemToPurchaseCardId":160,"playerWhoBuysCardId":283,"cost":10,"stackEffectType":9}} 

 Player 1 21:29:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Response Remove After Resolve PurchaseItem 3"},"childOfId":25} 

 Player 1 21:29:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Wait For Response From Player 1 "},"childOfId":25} 

 Player 1 21:29:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:29:52 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 1 21:29:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":25} 

 Player 1 21:29:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:29:52 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:29:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Dads Lost Coin for 10 \n2:Refill Store slot"} 

 Player 2 21:29:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Dads Lost Coin for 10 \n2:Refill Store slot"} 

 Player 2 21:29:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Dads Lost Coin for 10 \n2:Refill Store slot"} 

 Player 2 21:29:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Dads Lost Coin for 10 \n2:Refill Store slot"} 

 Player 2 21:29:52 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:29:52 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 1 21:29:52 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 1 21:29:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Resolve RefillEmptySlot 4 "}} 

 Player 1 21:29:52 $DRAW_CARD:  
{"deckType":5} 

 Player 1 21:29:52 $FLIP_CARD:  
{"cardId":185} 

 Player 1 21:29:52 $ADD_STORE_CARD:  
{"cardId":185} 

 Player 1 21:29:52 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 1 21:29:52 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:29:52 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":283,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 1 21:29:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Remove After Resolve RefillEmptySlot 4  "}} 

 Player 1 21:29:52 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:29:52 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":283,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 1 21:29:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Response Remove After Resolve RefillEmptySlot 4"},"childOfId":30} 

 Player 1 21:29:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Wait For Response From Player 2 "},"childOfId":30} 

 Player 1 21:29:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:29:52 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:29:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 2 21:29:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 2 21:29:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 2 21:29:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 2 21:29:52 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:29:52 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 1 21:29:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":30} 

 Player 1 21:29:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:29:52 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 1 21:29:52 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 1 21:29:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Stack Was Emptied "}} 

 Player 1 21:29:53 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:29:53 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 21:29:53 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 21:29:53 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 21:29:53 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 21:29:53 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 21:29:53 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 21:29:53 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 21:29:53 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 21:29:53 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 21:29:53 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 21:29:53 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 21:29:53 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 21:29:53 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 21:29:53 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 21:29:53 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 1 21:29:53 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 21:29:53 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 1 21:29:54 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 1 21:29:54 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 21:29:55 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 21:29:59 $SHOW_DECISION:  
{"startCardId":283,"endCardId":240} 

 Player 1 21:30:02 $NEXT_STACK_ID:  

 Player 1 21:30:02 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:30:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Fat Bat"} 

 Player 1 21:30:02 $ADD_TO_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":283,"attackingPlayerCardId":283,"idOfCardBeingAttacked":240,"stackEffectType":4}} 

 Player 1 21:30:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Fat Bat"} 

 Player 1 21:30:02 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":283,"attackingPlayerCardId":283,"idOfCardBeingAttacked":240,"stackEffectType":4}} 

 Player 1 21:30:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Add DeclareAttack 5 "}} 

 Player 1 21:30:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:30:02 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 1 21:30:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Fat Bat"} 

 Player 1 21:30:02 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":283,"attackingPlayerCardId":283,"idOfCardBeingAttacked":240,"stackEffectType":4}} 

 Player 1 21:30:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Response Adding DeclareAttack 5"},"childOfId":35} 

 Player 1 21:30:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Wait For Response From Player 1 "},"childOfId":35} 

 Player 1 21:30:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:30:02 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 1 21:30:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 2 "},"childOfId":35} 

 Player 1 21:30:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:30:02 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:30:02 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 21:30:02 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 21:30:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Fat Bat"} 

 Player 2 21:30:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Fat Bat"} 

 Player 2 21:30:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Fat Bat"} 

 Player 2 21:30:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Fat Bat"} 

 Player 2 21:30:02 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:30:02 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 1 21:30:02 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 1 21:30:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Resolve DeclareAttack 5 "}} 

 Player 1 21:30:02 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":240,"particleType":5} 

 Player 1 21:30:02 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":283,"scopeIsPlayer":true,"index":5,"originStackId":5},"isAfterActivation":true,"index":5} 

 Player 1 21:30:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Fat Bat"} 

 Player 1 21:30:03 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":283,"attackingPlayerCardId":283,"idOfCardBeingAttacked":240,"stackEffectType":4}} 

 Player 1 21:30:03 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 1 21:30:03 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:30:03 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":283,"attackingPlayerCardId":283,"idOfCardBeingAttacked":240,"stackEffectType":4}} 

 Player 1 21:30:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Remove After Resolve DeclareAttack 5  "}} 

 Player 1 21:30:03 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:30:03 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":283,"attackingPlayerCardId":283,"idOfCardBeingAttacked":240,"stackEffectType":4}} 

 Player 1 21:30:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Response Remove After Resolve DeclareAttack 5"},"childOfId":40} 

 Player 1 21:30:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Wait For Response From Player 2 "},"childOfId":40} 

 Player 1 21:30:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:30:03 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:30:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Fat Bat"} 

 Player 2 21:30:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Fat Bat"} 

 Player 2 21:30:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Fat Bat"} 

 Player 2 21:30:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Fat Bat"} 

 Player 2 21:30:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Fat Bat"} 

 Player 2 21:30:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Fat Bat"} 

 Player 2 21:30:03 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:30:03 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 1 21:30:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 1 "},"childOfId":40} 

 Player 1 21:30:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:30:03 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 1 21:30:03 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 1 21:30:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Stack Was Emptied "}} 

 Player 1 21:30:03 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:30:03 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 21:30:03 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 21:30:03 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 21:30:03 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 21:30:03 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 21:30:03 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 21:30:03 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 21:30:03 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 21:30:04 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 21:30:04 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 21:30:04 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 21:30:04 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 21:30:04 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 21:30:04 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 21:30:04 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 1 21:30:04 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 21:30:04 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 1 21:30:04 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 1 21:30:04 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 1 21:30:04 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 1 21:30:04 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 1 21:30:05 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 1 21:30:05 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 1 21:30:14 $NEXT_STACK_ID:  

 Player 1 21:30:14 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:30:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Fat Bat<Monster>"} 

 Player 1 21:30:14 $ADD_TO_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":283,"rollingPlayerCardId":283,"stackEffectType":2,"attackedMonsterCardId":240}} 

 Player 1 21:30:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Fat Bat<Monster>"} 

 Player 1 21:30:14 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":283,"rollingPlayerCardId":283,"stackEffectType":2,"attackedMonsterCardId":240}} 

 Player 1 21:30:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Add AttackRoll 6 "}} 

 Player 1 21:30:14 $ROLL_DICE:  
{"playerId":1} 

 Player 2 21:30:14 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 21:30:14 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 21:30:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Fat Bat<Monster>"} 

 Player 2 21:30:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Fat Bat<Monster>"} 

 Player 1 21:30:16 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":6} 

 Player 1 21:30:16 $UPDATE_STACK_VIS:  
{"stackId":6,"text":"player rolled 6 vs Fat Bat<Monster>"} 

 Player 1 21:30:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Fat Bat<Monster>"} 

 Player 1 21:30:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:30:16 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 1 21:30:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Fat Bat<Monster>"} 

 Player 1 21:30:16 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":283,"numberRolled":6,"rollingPlayerCardId":283,"stackEffectType":2,"attackedMonsterCardId":240}} 

 Player 1 21:30:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Response Adding AttackRoll 6"},"childOfId":45} 

 Player 1 21:30:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Wait For Response From Player 1 "},"childOfId":45} 

 Player 1 21:30:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:30:17 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 1 21:30:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Wait For Response From Player 2 "},"childOfId":45} 

 Player 1 21:30:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:30:17 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:30:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Fat Bat<Monster>"} 

 Player 2 21:30:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Fat Bat<Monster>"} 

 Player 2 21:30:17 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:30:17 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 1 21:30:17 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 1 21:30:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Resolve AttackRoll 6 "}} 

 Player 1 21:30:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Added 0 to original roll"}} 

 Player 1 21:30:17 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":2,"number":5}],"result":null,"preventMethod":false,"methodScopeId":283,"scopeIsPlayer":true,"index":1,"originStackId":6},"isAfterActivation":false,"index":1} 

 Player 1 21:30:17 $NEXT_STACK_ID:  

 Player 1 21:30:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Fat Bat<Monster>"} 

 Player 1 21:30:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Fat Bat<Monster> \n2:Activate Dads Lost Coin effect Reroll Dice Passive<Reroll Dice Passive>"} 

 Player 1 21:30:17 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":7,"creatorCardId":283,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":160,"effectToDo":{"effectName":"RerollDicePassive","cardEffectNum":0,"cardPlayerId":1,"cardId":160,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 21:30:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Fat Bat<Monster> \n2:Activate Dads Lost Coin effect Reroll Dice Passive<Reroll Dice Passive>"} 

 Player 1 21:30:17 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":7,"creatorCardId":283,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":160,"effectToDo":{"effectName":"RerollDicePassive","cardEffectNum":0,"cardPlayerId":1,"cardId":160,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 21:30:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Add ActivatePassiveEffect 7 "}} 

 Player 1 21:30:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Fat Bat<Monster> \n2:Activate Dads Lost Coin effect Reroll Dice Passive<Reroll Dice Passive>"} 

 Player 1 21:30:17 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 1 21:30:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Fat Bat<Monster> \n2:Activate Dads Lost Coin effect Reroll Dice Passive<Reroll Dice Passive>"} 

 Player 1 21:30:17 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[283],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":283,"effectCardPlayer":283},"entityId":7,"creatorCardId":283,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":160,"effectToDo":{"effectName":"RerollDicePassive","cardEffectNum":0,"cardPlayerId":1,"cardId":160,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 21:30:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Response Adding ActivatePassiveEffect 7"},"childOfId":51} 

 Player 1 21:30:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Wait For Response From Player 2 "},"childOfId":51} 

 Player 1 21:30:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:30:17 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:30:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Fat Bat<Monster>"} 

 Player 2 21:30:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Fat Bat<Monster>"} 

 Player 2 21:30:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Fat Bat<Monster> \n2:Activate Dads Lost Coin "} 

 Player 2 21:30:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Fat Bat<Monster> \n2:Activate Dads Lost Coin "} 

 Player 2 21:30:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Fat Bat<Monster> \n2:Activate Dads Lost Coin "} 

 Player 2 21:30:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Fat Bat<Monster> \n2:Activate Dads Lost Coin "} 

 Player 2 21:30:17 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:30:18 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 1 21:30:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Wait For Response From Player 1 "},"childOfId":51} 

 Player 1 21:30:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:30:18 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 1 21:30:18 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 1 21:30:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Resolve ActivatePassiveEffect 7 "}} 

 Player 1 21:30:18 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":160,"particleType":6} 

 Player 1 21:30:20 $DISABLE_PARTICLE_EFFECT:  
{"cardId":160,"particleType":6} 

 Player 1 21:30:20 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 1 21:30:39 $ROLL_DICE:  
{"playerId":1} 

 Player 1 21:30:40 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":5} 

 Player 1 21:30:40 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":2},{"type":2,"number":5}],"result":null,"preventMethod":false,"methodScopeId":283,"scopeIsPlayer":false,"index":1,"originStackId":6},"isAfterActivation":false,"index":1} 

 Player 1 21:30:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Fat Bat<Monster> \n2:Activate Dads Lost Coin effect Reroll Dice Passive<Reroll Dice Passive>"} 

 Player 1 21:30:40 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[283],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":283,"effectCardPlayer":283},"entityId":7,"creatorCardId":283,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":160,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 21:30:40 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 1 21:30:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Fat Bat<Monster>"} 

 Player 1 21:30:40 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[283],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":283,"effectCardPlayer":283},"entityId":7,"creatorCardId":283,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":160,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 21:30:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":56,"_text":"Remove After Resolve ActivatePassiveEffect 7  "}} 

 Player 1 21:30:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Fat Bat<Monster>"} 

 Player 1 21:30:40 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[283],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":283,"effectCardPlayer":283},"entityId":7,"creatorCardId":283,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":160,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 21:30:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":57,"_text":"Response Remove After Resolve ActivatePassiveEffect 7"},"childOfId":56} 

 Player 1 21:30:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":58,"_text":"Wait For Response From Player 1 "},"childOfId":56} 

 Player 1 21:30:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:30:40 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 1 21:30:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":59,"_text":"Wait For Response From Player 2 "},"childOfId":56} 

 Player 1 21:30:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:30:40 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:30:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Fat Bat<Monster> \n2:Activate Dads Lost Coin "} 

 Player 2 21:30:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Fat Bat<Monster> \n2:Activate Dads Lost Coin "} 

 Player 2 21:30:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Fat Bat<Monster> \n2:Activate Dads Lost Coin "} 

 Player 2 21:30:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Fat Bat<Monster> \n2:Activate Dads Lost Coin "} 

 Player 2 21:30:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Fat Bat<Monster> \n2:Activate Dads Lost Coin "} 

 Player 2 21:30:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Fat Bat<Monster> \n2:Activate Dads Lost Coin "} 

 Player 2 21:30:40 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:30:40 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 1 21:30:40 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 1 21:30:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":60,"_text":"Resolve AttackRoll 6 "}} 

 Player 1 21:30:40 $NEXT_STACK_ID:  

 Player 1 21:30:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Fat Bat<Monster>"} 

 Player 1 21:30:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:30:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden combat damage to Fat Bat \n2:Player 1 rolled 6 vs Fat Bat<Monster>"} 

 Player 1 21:30:41 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":283,"entityToDoDamageCardId":283,"entityToTakeDamageCardId":240,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 21:30:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden combat damage to Fat Bat \n2:Player 1 rolled 6 vs Fat Bat<Monster>"} 

 Player 1 21:30:41 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":283,"numberRolled":6,"rollingPlayerCardId":283,"stackEffectType":2,"attackedMonsterCardId":240}} 

 Player 1 21:30:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden combat damage to Fat Bat \n2:Player 1 rolled 6 vs Fat Bat<Monster>"} 

 Player 1 21:30:41 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":283,"entityToDoDamageCardId":283,"entityToTakeDamageCardId":240,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 21:30:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden combat damage to Fat Bat \n2:Player 1 rolled 6 vs Fat Bat<Monster>"} 

 Player 1 21:30:41 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":283,"numberRolled":6,"rollingPlayerCardId":283,"stackEffectType":2,"attackedMonsterCardId":240}} 

 Player 1 21:30:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden combat damage to Fat Bat \n2:Player 1 rolled 6 vs Fat Bat<Monster>"} 

 Player 1 21:30:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden combat damage to Fat Bat \n2:Player 1 rolled 6 vs Fat Bat<Monster>"} 

 Player 1 21:30:41 $REPLACE_STACK:  
{"currentStack":[{"entityId":8,"creatorCardId":283,"entityToDoDamageCardId":283,"entityToTakeDamageCardId":240,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":6,"creatorCardId":283,"numberRolled":6,"rollingPlayerCardId":283,"stackEffectType":2,"attackedMonsterCardId":240}]} 

 Player 1 21:30:41 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":2},{"type":2,"number":5}],"result":null,"preventMethod":false,"methodScopeId":283,"scopeIsPlayer":false,"index":1,"originStackId":6},"isAfterActivation":true,"index":1} 

 Player 1 21:30:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden combat damage to Fat Bat \n2:Player 1 rolled 6 vs Fat Bat<Monster>"} 

 Player 1 21:30:41 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":283,"numberRolled":6,"rollingPlayerCardId":283,"stackEffectType":2,"attackedMonsterCardId":240}} 

 Player 1 21:30:41 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 1 21:30:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden combat damage to Fat Bat"} 

 Player 1 21:30:41 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":283,"numberRolled":6,"rollingPlayerCardId":283,"stackEffectType":2,"attackedMonsterCardId":240}} 

 Player 1 21:30:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":61,"_text":"Remove After Resolve AttackRoll 6  "}} 

 Player 1 21:30:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden combat damage to Fat Bat"} 

 Player 1 21:30:41 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":283,"numberRolled":6,"rollingPlayerCardId":283,"stackEffectType":2,"attackedMonsterCardId":240}} 

 Player 1 21:30:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":62,"_text":"Response Remove After Resolve AttackRoll 6"},"childOfId":61} 

 Player 1 21:30:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":63,"_text":"Wait For Response From Player 1 "},"childOfId":61} 

 Player 1 21:30:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:30:41 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 1 21:30:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":64,"_text":"Wait For Response From Player 2 "},"childOfId":61} 

 Player 1 21:30:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:30:41 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:30:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Fat Bat<Monster>"} 

 Player 2 21:30:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Fat Bat<Monster>"} 

 Player 2 21:30:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden combat damage to Fat Bat"} 

 Player 2 21:30:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden combat damage to Fat Bat"} 

 Player 2 21:30:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden combat damage to Fat Bat"} 

 Player 2 21:30:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden combat damage to Fat Bat"} 

 Player 2 21:30:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden combat damage to Fat Bat"} 

 Player 2 21:30:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden combat damage to Fat Bat"} 

 Player 2 21:30:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden combat damage to Fat Bat"} 

 Player 2 21:30:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden combat damage to Fat Bat"} 

 Player 2 21:30:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden combat damage to Fat Bat"} 

 Player 2 21:30:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden combat damage to Fat Bat"} 

 Player 2 21:30:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden combat damage to Fat Bat \n2:Player 1 is rolling against Fat Bat<Monster>"} 

 Player 2 21:30:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden combat damage to Fat Bat \n2:Player 1 is rolling against Fat Bat<Monster>"} 

 Player 2 21:30:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden combat damage to Fat Bat \n2:Player 1 is rolling against Fat Bat<Monster>"} 

 Player 2 21:30:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden combat damage to Fat Bat \n2:Player 1 is rolling against Fat Bat<Monster>"} 

 Player 2 21:30:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden combat damage to Fat Bat \n2:Player 1 is rolling against Fat Bat<Monster>"} 

 Player 2 21:30:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden combat damage to Fat Bat \n2:Player 1 is rolling against Fat Bat<Monster>"} 

 Player 2 21:30:42 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:30:42 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 1 21:30:42 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 1 21:30:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":65,"_text":"Resolve CombatDamage 8 "}} 

 Player 1 21:30:42 $UPDATE_STACK_VIS:  
{"stackId":8,"text":"Eden will deal 1 combat damage to Fat Bat"} 

 Player 1 21:30:42 $MONSTER_GET_DAMAGED:  
{"cardId":240,"hpLeft":2,"damageDealerId":283} 

 Player 1 21:30:42 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":283}],"result":null,"preventMethod":false,"methodScopeId":240,"scopeIsPlayer":false,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 

 Player 1 21:30:42 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":5},{"type":0,"number":283},{"type":0,"number":240}],"result":null,"preventMethod":false,"methodScopeId":283,"scopeIsPlayer":true,"index":7,"originStackId":8},"isAfterActivation":true,"index":7} 

 Player 1 21:30:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden combat damage to Fat Bat"} 

 Player 1 21:30:42 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":283,"entityToDoDamageCardId":283,"entityToTakeDamageCardId":240,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 21:30:42 $ACTION_MASSAGE_REMOVE:  
{"id":65} 

 Player 1 21:30:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:30:42 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":283,"entityToDoDamageCardId":283,"entityToTakeDamageCardId":240,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 21:30:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":66,"_text":"Remove After Resolve CombatDamage 8  "}} 

 Player 1 21:30:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:30:42 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":8,"creatorCardId":283,"entityToDoDamageCardId":283,"entityToTakeDamageCardId":240,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 21:30:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":67,"_text":"Response Remove After Resolve CombatDamage 8"},"childOfId":66} 

 Player 1 21:30:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":68,"_text":"Wait For Response From Player 2 "},"childOfId":66} 

 Player 1 21:30:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:30:42 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:30:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden combat damage to Fat Bat"} 

 Player 2 21:30:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden combat damage to Fat Bat"} 

 Player 2 21:30:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden combat damage to Fat Bat"} 

 Player 2 21:30:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden combat damage to Fat Bat"} 

 Player 2 21:30:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden combat damage to Fat Bat"} 

 Player 2 21:30:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden combat damage to Fat Bat"} 

 Player 2 21:30:42 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:30:42 $ACTION_MASSAGE_REMOVE:  
{"id":68} 

 Player 1 21:30:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":69,"_text":"Wait For Response From Player 1 "},"childOfId":66} 

 Player 1 21:30:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:30:43 $ACTION_MASSAGE_REMOVE:  
{"id":69} 

 Player 1 21:30:43 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 1 21:30:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":70,"_text":"Stack Was Emptied "}} 

 Player 1 21:30:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:30:43 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 21:30:43 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 21:30:43 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 21:30:43 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 21:30:43 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 21:30:43 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 21:30:43 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 21:30:43 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 21:30:43 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 21:30:43 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 21:30:43 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 21:30:43 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 21:30:43 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 21:30:43 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 21:30:43 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 1 21:30:43 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 21:30:43 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 1 21:30:43 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 1 21:30:43 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 1 21:30:43 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 1 21:30:43 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 1 21:30:43 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 1 21:30:43 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 1 21:30:43 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 1 21:30:43 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 1 21:30:43 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 1 21:30:43 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 1 21:30:43 $ACTION_MASSAGE_REMOVE:  
{"id":60} 

 Player 1 21:30:43 $ACTION_MASSAGE_REMOVE:  
{"id":61} 

 Player 1 21:30:43 $ACTION_MASSAGE_REMOVE:  
{"id":65} 

 Player 1 21:30:43 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 1 21:30:44 $ACTION_MASSAGE_REMOVE:  
{"id":70} 

 Player 1 21:30:44 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 1 21:30:44 $ACTION_MASSAGE_REMOVE:  
{"id":61} 

 Player 1 21:30:44 $ACTION_MASSAGE_REMOVE:  
{"id":70} 

 Player 1 21:30:45 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 1 21:30:49 $NEXT_STACK_ID:  

 Player 1 21:30:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:30:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Fat Bat<Monster>"} 

 Player 1 21:30:49 $ADD_TO_STACK:  
{"stackEffect":{"entityId":9,"creatorCardId":283,"rollingPlayerCardId":283,"stackEffectType":2,"attackedMonsterCardId":240}} 

 Player 1 21:30:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Fat Bat<Monster>"} 

 Player 1 21:30:49 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":283,"rollingPlayerCardId":283,"stackEffectType":2,"attackedMonsterCardId":240}} 

 Player 1 21:30:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":71,"_text":"Add AttackRoll 9 "}} 

 Player 1 21:30:49 $ROLL_DICE:  
{"playerId":1} 

 Player 2 21:30:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 21:30:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 21:30:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Fat Bat<Monster>"} 

 Player 2 21:30:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Fat Bat<Monster>"} 

 Player 1 21:30:51 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":1} 

 Player 1 21:30:51 $UPDATE_STACK_VIS:  
{"stackId":9,"text":"player rolled 1 vs Fat Bat<Monster>"} 

 Player 1 21:30:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 1 vs Fat Bat<Monster>"} 

 Player 1 21:30:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:30:51 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 1 21:30:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 1 vs Fat Bat<Monster>"} 

 Player 1 21:30:51 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":283,"numberRolled":1,"rollingPlayerCardId":283,"stackEffectType":2,"attackedMonsterCardId":240}} 

 Player 1 21:30:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":72,"_text":"Response Adding AttackRoll 9"},"childOfId":71} 

 Player 1 21:30:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":73,"_text":"Wait For Response From Player 1 "},"childOfId":71} 

 Player 1 21:30:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:30:51 $ACTION_MASSAGE_REMOVE:  
{"id":73} 

 Player 1 21:30:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":74,"_text":"Wait For Response From Player 2 "},"childOfId":71} 

 Player 1 21:30:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:30:51 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:30:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Fat Bat<Monster>"} 

 Player 2 21:30:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Fat Bat<Monster>"} 

 Player 2 21:30:52 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:30:52 $ACTION_MASSAGE_REMOVE:  
{"id":74} 

 Player 1 21:30:52 $ACTION_MASSAGE_REMOVE:  
{"id":72} 

 Player 1 21:30:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":75,"_text":"Resolve AttackRoll 9 "}} 

 Player 1 21:30:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":76,"_text":"Added 0 to original roll"}} 

 Player 1 21:30:52 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":1},{"type":2,"number":5}],"result":null,"preventMethod":false,"methodScopeId":283,"scopeIsPlayer":true,"index":2,"originStackId":9},"isAfterActivation":false,"index":2} 

 Player 1 21:30:52 $NEXT_STACK_ID:  

 Player 1 21:30:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 1 vs Fat Bat<Monster>"} 

 Player 1 21:30:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 1 vs Fat Bat<Monster> \n2:Activate Dads Lost Coin effect Reroll Dice Passive<Reroll Dice Passive>"} 

 Player 1 21:30:52 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":10,"creatorCardId":283,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":160,"effectToDo":{"effectName":"RerollDicePassive","cardEffectNum":0,"cardPlayerId":1,"cardId":160,"effctType":0},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 21:30:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 1 vs Fat Bat<Monster> \n2:Activate Dads Lost Coin effect Reroll Dice Passive<Reroll Dice Passive>"} 

 Player 1 21:30:52 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":10,"creatorCardId":283,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":160,"effectToDo":{"effectName":"RerollDicePassive","cardEffectNum":0,"cardPlayerId":1,"cardId":160,"effctType":0},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 21:30:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":77,"_text":"Add ActivatePassiveEffect 10 "}} 

 Player 1 21:30:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 1 vs Fat Bat<Monster> \n2:Activate Dads Lost Coin effect Reroll Dice Passive<Reroll Dice Passive>"} 

 Player 1 21:30:52 $ACTION_MASSAGE_REMOVE:  
{"id":77} 

 Player 1 21:30:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 1 vs Fat Bat<Monster> \n2:Activate Dads Lost Coin effect Reroll Dice Passive<Reroll Dice Passive>"} 

 Player 1 21:30:52 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[283],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":283,"effectCardPlayer":283},"entityId":10,"creatorCardId":283,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":160,"effectToDo":{"effectName":"RerollDicePassive","cardEffectNum":0,"cardPlayerId":1,"cardId":160,"effctType":0},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 21:30:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":78,"_text":"Response Adding ActivatePassiveEffect 10"},"childOfId":77} 

 Player 1 21:30:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":79,"_text":"Wait For Response From Player 2 "},"childOfId":77} 

 Player 1 21:30:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:30:52 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:30:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Fat Bat<Monster>"} 

 Player 2 21:30:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Fat Bat<Monster>"} 

 Player 2 21:30:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Fat Bat<Monster> \n2:Activate Dads Lost Coin "} 

 Player 2 21:30:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Fat Bat<Monster> \n2:Activate Dads Lost Coin "} 

 Player 2 21:30:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Fat Bat<Monster> \n2:Activate Dads Lost Coin "} 

 Player 2 21:30:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Fat Bat<Monster> \n2:Activate Dads Lost Coin "} 

 Player 2 21:30:52 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:30:52 $ACTION_MASSAGE_REMOVE:  
{"id":79} 

 Player 1 21:30:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":80,"_text":"Wait For Response From Player 1 "},"childOfId":77} 

 Player 1 21:30:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:30:52 $ACTION_MASSAGE_REMOVE:  
{"id":80} 

 Player 1 21:30:52 $ACTION_MASSAGE_REMOVE:  
{"id":78} 

 Player 1 21:30:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":81,"_text":"Resolve ActivatePassiveEffect 10 "}} 

 Player 1 21:30:52 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":160,"particleType":6} 

 Player 1 21:30:54 $DISABLE_PARTICLE_EFFECT:  
{"cardId":160,"particleType":6} 

 Player 1 21:30:55 $ACTION_MASSAGE_REMOVE:  
{"id":76} 

 Player 2 15:28:46 $MATCH: 