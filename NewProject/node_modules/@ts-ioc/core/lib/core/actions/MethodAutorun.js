"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var ActionComposite_1 = require("./ActionComposite");
var utils_1 = require("../../utils");
var CoreActions_1 = require("./CoreActions");
var factories_1 = require("../factories");
var decorators_1 = require("../decorators");
/**
 * Inject DrawType action.
 *
 * @export
 * @class SetPropAction
 * @extends {ActionComposite}
 */
var MethodAutorun = /** @class */ (function (_super) {
    tslib_1.__extends(MethodAutorun, _super);
    function MethodAutorun() {
        return _super.call(this, CoreActions_1.CoreActions.methodAutorun) || this;
    }
    MethodAutorun.prototype.working = function (container, data) {
        if (data.raiseContainer && data.raiseContainer !== container) {
            return;
        }
        if (data.target && data.targetType) {
            if (factories_1.hasMethodMetadata(decorators_1.Autorun, data.targetType)) {
                var metas = factories_1.getMethodMetadata(decorators_1.Autorun, data.targetType);
                var lastmetas_1 = [];
                var idx_1 = utils_1.lang.keys(metas).length;
                utils_1.lang.forIn(metas, function (mm, key) {
                    if (mm && mm.length) {
                        var m = mm[0];
                        m.autorun = key;
                        idx_1++;
                        if (!utils_1.isNumber(m.order)) {
                            m.order = idx_1;
                        }
                        lastmetas_1.push(m);
                    }
                });
                lastmetas_1.sort(function (au1, au2) {
                    return au1.order - au1.order;
                }).forEach(function (aut) {
                    container.syncInvoke(data.target || data.targetType, aut.autorun, data.target);
                });
            }
        }
    };
    MethodAutorun.getClassAnnations = function () {
        return { "name": "MethodAutorun", "params": { "constructor": [], "working": ["container", "data"] } };
    };
    return MethodAutorun;
}(ActionComposite_1.ActionComposite));
exports.MethodAutorun = MethodAutorun;

//# sourceMappingURL=../../sourcemaps/core/actions/MethodAutorun.js.map
