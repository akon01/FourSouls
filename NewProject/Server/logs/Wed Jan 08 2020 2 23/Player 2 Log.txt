Start Log 
 Player 2 02:23:32 $MOVE_TO_TABLE:  
 Player 2 02:23:40 $FINISH_LOAD:  

 {"id":2,"turnPlayerId":2} 
 Player 2 02:23:40 $ASSIGN_CHAR_TO_PLAYER:  

 {"playerId":1,"charCardId":260,"itemCardId":261} 
 Player 2 02:23:40 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":273}],"result":true,"preventMethod":false,"methodScopeId":272,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 02:23:40 $ASSIGN_CHAR_TO_PLAYER:  

 {"playerId":2,"charCardId":272,"itemCardId":273} 
 Player 2 02:23:40 $DECK_ARRAGMENT:  

 {"deckType":1,"arrangement":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143]} 
 Player 2 02:23:40 $DECK_ARRAGMENT:  

 {"deckType":1,"arrangement":[206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259]} 
 Player 2 02:23:40 $DECK_ARRAGMENT:  

 {"deckType":1,"arrangement":[146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203]} 
 Player 2 02:23:40 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 02:23:40 $FLIP_CARD:  

 {"cardId":203} 
 Player 2 02:23:40 $ADD_STORE_CARD:  

 {"cardId":203} 
 Player 2 02:23:40 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 02:23:40 $FLIP_CARD:  

 {"cardId":202} 
 Player 2 02:23:40 $ADD_STORE_CARD:  

 {"cardId":202} 
 Player 2 02:23:40 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 02:23:40 $DECK_ADD_TO_BOTTOM:  

 {"deckType":1,"cardId":259} 
 Player 2 02:23:40 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 02:23:40 $FLIP_CARD:  

 {"cardId":258} 
 Player 2 02:23:40 $ADD_MONSTER:  

 {"monsterPlaceId":1,"monsterId":258} 
 Player 2 02:23:40 $NEW_MONSTER_ON_PLACE:  

 {"cardId":258,"monsterPlaceId":1} 
 Player 2 02:23:40 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 02:23:41 $FLIP_CARD:  

 {"cardId":257} 
 Player 2 02:23:41 $REGISTER_PASSIVE_ITEM:  

 {"cardId":257} 
 Player 2 02:23:41 $ADD_MONSTER:  

 {"monsterPlaceId":2,"monsterId":257} 
 Player 2 02:23:41 $NEW_MONSTER_ON_PLACE:  

 {"cardId":257,"monsterPlaceId":2} 
 Player 2 02:23:41 $SET_MONEY:  

 {"playerId":1,"numOfCoins":3} 
 Player 2 02:23:41 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":260,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 2 02:23:41 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 02:23:41 $MOVE_CARD:  

 {"moveIndex":1,"cardId":143,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 02:23:41 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":143} 
 Player 2 02:23:41 $FLIP_CARD:  

 {"cardId":143} 
 Player 2 02:23:41 $FLIP_CARD:  

 {"cardId":143} 
 Player 2 02:23:41 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":143} 
 Player 2 02:23:41 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 02:23:41 $MOVE_CARD:  

 {"moveIndex":2,"cardId":142,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 02:23:42 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":142} 
 Player 2 02:23:42 $FLIP_CARD:  

 {"cardId":142} 
 Player 2 02:23:42 $FLIP_CARD:  

 {"cardId":142} 
 Player 2 02:23:42 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":142} 
 Player 2 02:23:42 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 02:23:42 $MOVE_CARD:  

 {"moveIndex":3,"cardId":141,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 02:23:42 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":141} 
 Player 2 02:23:42 $FLIP_CARD:  

 {"cardId":141} 
 Player 2 02:23:42 $FLIP_CARD:  

 {"cardId":141} 
 Player 2 02:23:42 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":141} 
 Player 2 02:23:42 $SET_MONEY:  

 {"playerId":2,"numOfCoins":3} 
 Player 2 02:23:42 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":272,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Player 2 02:23:42 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 02:23:42 $MOVE_CARD:  

 {"moveIndex":4,"cardId":140,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 02:23:43 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":140} 
 Player 2 02:23:43 $FLIP_CARD:  

 {"cardId":140} 
 Player 2 02:23:43 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":140} 
 Player 2 02:23:43 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 02:23:43 $MOVE_CARD:  

 {"moveIndex":5,"cardId":139,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 02:23:43 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":139} 
 Player 2 02:23:43 $FLIP_CARD:  

 {"cardId":139} 
 Player 2 02:23:43 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":139} 
 Player 2 02:23:43 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 02:23:43 $MOVE_CARD:  

 {"moveIndex":6,"cardId":138,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 02:23:44 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":138} 
 Player 2 02:23:44 $FLIP_CARD:  

 {"cardId":138} 
 Player 2 02:23:44 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":138} 
 Player 2 02:23:44 $GAME_HAS_STARTED:  
 Player 2 02:23:44 $SET_TURN:  

 {"playerId":2} 
 Player 2 02:23:44 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:23:44 $NEXT_STACK_ID:  
 Player 2 02:23:44 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:23:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 02:23:44 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":272,"turnPlayerCardId":272,"stackEffectType":13}} 
 Player 2 02:23:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 02:23:44 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":1,"creatorCardId":272,"turnPlayerCardId":272,"stackEffectType":13}} 
 Player 2 02:23:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 
 Player 2 02:23:44 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:23:44 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 2 02:23:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 02:23:44 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":272,"turnPlayerCardId":272,"stackEffectType":13}} 
 Player 2 02:23:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 
 Player 2 02:23:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 2 02:23:44 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:23:44 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 2 02:23:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 2 02:23:44 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:23:44 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:23:44 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 2 02:23:44 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 2 02:23:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 
 Player 2 02:23:44 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 02:23:44 $MOVE_CARD:  

 {"moveIndex":7,"cardId":137,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 02:23:45 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":137} 
 Player 2 02:23:45 $FLIP_CARD:  

 {"cardId":137} 
 Player 2 02:23:45 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":137} 
 Player 2 02:23:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 02:23:45 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":272,"turnPlayerCardId":272,"stackEffectType":13}} 
 Player 2 02:23:45 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 2 02:23:45 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:23:45 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":1,"creatorCardId":272,"turnPlayerCardId":272,"stackEffectType":13}} 
 Player 2 02:23:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 
 Player 2 02:23:45 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:23:45 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":272,"turnPlayerCardId":272,"stackEffectType":13}} 
 Player 2 02:23:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 
 Player 2 02:23:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Player 2 02:23:45 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:23:45 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:23:45 $ACTION_MASSAGE_REMOVE:  

 {"id":7} 
 Player 2 02:23:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Player 2 02:23:46 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:23:46 $ACTION_MASSAGE_REMOVE:  

 {"id":8} 
 Player 2 02:23:46 $ACTION_MASSAGE_REMOVE:  

 {"id":6} 
 Player 2 02:23:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":9,"_text":"Stack Was Emptied "}} 
 Player 2 02:23:46 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:23:46 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 2 02:23:46 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 2 02:23:46 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 2 02:23:46 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 2 02:23:46 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 2 02:23:46 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 2 02:23:46 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 2 02:23:46 $UPDATE_ACTIONS:  
 Player 2 02:23:47 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 2 02:23:48 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 2 02:23:49 $SHOW_DECISION:  

 {"startCardId":272,"endCardId":257} 
 Player 2 02:23:52 $NEXT_STACK_ID:  
 Player 2 02:23:52 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:23:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on War"} 
 Player 2 02:23:52 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":272,"attackingPlayerCardId":272,"idOfCardBeingAttacked":257,"stackEffectType":4}} 
 Player 2 02:23:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on War"} 
 Player 2 02:23:52 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":2,"creatorCardId":272,"attackingPlayerCardId":272,"idOfCardBeingAttacked":257,"stackEffectType":4}} 
 Player 2 02:23:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":10,"_text":"Add DeclareAttack 2 "}} 
 Player 2 02:23:52 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:23:52 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 2 02:23:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on War"} 
 Player 2 02:23:52 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":272,"attackingPlayerCardId":272,"idOfCardBeingAttacked":257,"stackEffectType":4}} 
 Player 2 02:23:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":11,"_text":"Response Adding DeclareAttack 2"},"childOfId":10} 
 Player 2 02:23:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 
 Player 2 02:23:52 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:23:52 $ACTION_MASSAGE_REMOVE:  

 {"id":12} 
 Player 2 02:23:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 
 Player 2 02:23:52 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:23:52 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:23:52 $ACTION_MASSAGE_REMOVE:  

 {"id":13} 
 Player 2 02:23:52 $ACTION_MASSAGE_REMOVE:  

 {"id":11} 
 Player 2 02:23:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":14,"_text":"Resolve DeclareAttack 2 "}} 
 Player 2 02:23:52 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":257,"particleType":5} 
 Player 2 02:23:52 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":272,"scopeIsPlayer":true,"index":4,"originStackId":2},"isAfterActivation":true,"index":4} 
 Player 2 02:23:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on War"} 
 Player 2 02:23:52 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":272,"attackingPlayerCardId":272,"idOfCardBeingAttacked":257,"stackEffectType":4}} 
 Player 2 02:23:53 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 2 02:23:53 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:23:53 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":2,"creatorCardId":272,"attackingPlayerCardId":272,"idOfCardBeingAttacked":257,"stackEffectType":4}} 
 Player 2 02:23:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":15,"_text":"Remove After Resolve DeclareAttack 2  "}} 
 Player 2 02:23:53 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:23:53 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":272,"attackingPlayerCardId":272,"idOfCardBeingAttacked":257,"stackEffectType":4}} 
 Player 2 02:23:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":16,"_text":"Response Remove After Resolve DeclareAttack 2"},"childOfId":15} 
 Player 2 02:23:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 
 Player 2 02:23:53 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:23:53 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:23:53 $ACTION_MASSAGE_REMOVE:  

 {"id":17} 
 Player 2 02:23:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 
 Player 2 02:23:53 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:23:53 $ACTION_MASSAGE_REMOVE:  

 {"id":18} 
 Player 2 02:23:53 $ACTION_MASSAGE_REMOVE:  

 {"id":16} 
 Player 2 02:23:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":19,"_text":"Stack Was Emptied "}} 
 Player 2 02:23:53 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:23:53 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 2 02:23:53 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 2 02:23:53 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 2 02:23:53 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 2 02:23:53 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 2 02:23:53 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 2 02:23:53 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 2 02:23:53 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 2 02:23:53 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 2 02:23:53 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 2 02:23:53 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 2 02:23:55 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 2 02:23:55 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 2 02:24:24 $NEXT_STACK_ID:  
 Player 2 02:24:24 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:24:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against War<Monster>"} 
 Player 2 02:24:24 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":272,"rollingPlayerCardId":272,"stackEffectType":2,"attackedMonsterCardId":257}} 
 Player 2 02:24:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against War<Monster>"} 
 Player 2 02:24:24 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":272,"rollingPlayerCardId":272,"stackEffectType":2,"attackedMonsterCardId":257}} 
 Player 2 02:24:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":20,"_text":"Add AttackRoll 3 "}} 
 Player 2 02:24:24 $ROLL_DICE:  

 {"playerId":2} 
 Player 2 02:24:26 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":2} 
 Player 2 02:24:26 $UPDATE_STACK_VIS:  

 {"stackId":3,"text":"player rolled 2 vs War<Monster>"} 
 Player 2 02:24:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 2 vs War<Monster>"} 
 Player 2 02:24:26 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:24:26 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 2 02:24:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 2 vs War<Monster>"} 
 Player 2 02:24:26 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":272,"numberRolled":2,"rollingPlayerCardId":272,"stackEffectType":2,"attackedMonsterCardId":257}} 
 Player 2 02:24:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":21,"_text":"Response Adding AttackRoll 3"},"childOfId":20} 
 Player 2 02:24:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 
 Player 2 02:24:26 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:24:26 $ACTION_MASSAGE_REMOVE:  

 {"id":22} 
 Player 2 02:24:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 
 Player 2 02:24:26 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:24:26 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:24:26 $ACTION_MASSAGE_REMOVE:  

 {"id":23} 
 Player 2 02:24:26 $ACTION_MASSAGE_REMOVE:  

 {"id":21} 
 Player 2 02:24:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":24,"_text":"Resolve AttackRoll 3 "}} 
 Player 2 02:24:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":25,"_text":"Added 0 to original roll"}} 
 Player 2 02:24:26 $NEXT_STACK_ID:  
 Player 2 02:24:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 2 vs War<Monster>"} 
 Player 2 02:24:26 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:24:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Maggy combat damage to War \n2:Player 2 rolled 2 vs War<Monster>"} 
 Player 2 02:24:26 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":4,"creatorCardId":272,"entityToDoDamageCardId":272,"entityToTakeDamageCardId":257,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 02:24:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Maggy combat damage to War \n2:Player 2 rolled 2 vs War<Monster>"} 
 Player 2 02:24:26 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":272,"numberRolled":2,"rollingPlayerCardId":272,"stackEffectType":2,"attackedMonsterCardId":257}} 
 Player 2 02:24:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Maggy combat damage to War \n2:Player 2 rolled 2 vs War<Monster>"} 
 Player 2 02:24:27 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":4,"creatorCardId":272,"entityToDoDamageCardId":272,"entityToTakeDamageCardId":257,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 02:24:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Maggy combat damage to War \n2:Player 2 rolled 2 vs War<Monster>"} 
 Player 2 02:24:27 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":272,"numberRolled":2,"rollingPlayerCardId":272,"stackEffectType":2,"attackedMonsterCardId":257}} 
 Player 2 02:24:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Maggy combat damage to War \n2:Player 2 rolled 2 vs War<Monster>"} 
 Player 2 02:24:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Maggy combat damage to War \n2:Player 2 rolled 2 vs War<Monster>"} 
 Player 2 02:24:27 $REPLACE_STACK:  

 {"currentStack":[{"entityId":4,"creatorCardId":272,"entityToDoDamageCardId":272,"entityToTakeDamageCardId":257,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":3,"creatorCardId":272,"numberRolled":2,"rollingPlayerCardId":272,"stackEffectType":2,"attackedMonsterCardId":257}]} 
 Player 2 02:24:27 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":6},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":272,"scopeIsPlayer":true,"index":5,"originStackId":3},"isAfterActivation":true,"index":5} 
 Player 2 02:24:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Maggy combat damage to War \n2:Player 2 rolled 2 vs War<Monster>"} 
 Player 2 02:24:27 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":272,"numberRolled":2,"rollingPlayerCardId":272,"stackEffectType":2,"attackedMonsterCardId":257}} 
 Player 2 02:24:27 $ACTION_MASSAGE_REMOVE:  

 {"id":24} 
 Player 2 02:24:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Maggy combat damage to War"} 
 Player 2 02:24:27 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":272,"numberRolled":2,"rollingPlayerCardId":272,"stackEffectType":2,"attackedMonsterCardId":257}} 
 Player 2 02:24:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":26,"_text":"Remove After Resolve AttackRoll 3  "}} 
 Player 2 02:24:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Maggy combat damage to War"} 
 Player 2 02:24:27 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":272,"numberRolled":2,"rollingPlayerCardId":272,"stackEffectType":2,"attackedMonsterCardId":257}} 
 Player 2 02:24:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":27,"_text":"Response Remove After Resolve AttackRoll 3"},"childOfId":26} 
 Player 2 02:24:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":26} 
 Player 2 02:24:27 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:24:27 $ACTION_MASSAGE_REMOVE:  

 {"id":28} 
 Player 2 02:24:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":29,"_text":"Wait For Response From Player 1 "},"childOfId":26} 
 Player 2 02:24:27 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:24:27 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:24:28 $ACTION_MASSAGE_REMOVE:  

 {"id":29} 
 Player 2 02:24:28 $ACTION_MASSAGE_REMOVE:  

 {"id":27} 
 Player 2 02:24:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":30,"_text":"Resolve CombatDamage 4 "}} 
 Player 2 02:24:28 $UPDATE_STACK_VIS:  

 {"stackId":4,"text":"Maggy will deal 1 combat damage to War"} 
 Player 2 02:24:28 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":272}],"result":null,"preventMethod":false,"methodScopeId":257,"scopeIsPlayer":false,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1} 
 Player 2 02:24:28 $NEXT_STACK_ID:  
 Player 2 02:24:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Maggy combat damage to War"} 
 Player 2 02:24:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Maggy combat damage to War \n2:Activate War effect GainStats<GainStats>"} 
 Player 2 02:24:28 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":5,"creatorCardId":257,"hasLockingStackEffect":false,"cardActivatorId":257,"cardWithEffectId":257,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":257,"cardId":257,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 02:24:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Maggy combat damage to War \n2:Activate War effect GainStats<GainStats>"} 
 Player 2 02:24:28 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":5,"creatorCardId":257,"hasLockingStackEffect":false,"cardActivatorId":257,"cardWithEffectId":257,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":257,"cardId":257,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 02:24:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":31,"_text":"Add ActivatePassiveEffect 5 "}} 
 Player 2 02:24:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Maggy combat damage to War \n2:Activate War effect GainStats<GainStats>"} 
 Player 2 02:24:28 $ACTION_MASSAGE_REMOVE:  

 {"id":31} 
 Player 2 02:24:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Maggy combat damage to War \n2:Activate War effect GainStats<GainStats>"} 
 Player 2 02:24:28 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[257],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":257,"effectCardPlayer":257},"entityId":5,"creatorCardId":257,"hasLockingStackEffect":false,"cardActivatorId":257,"cardWithEffectId":257,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":257,"cardId":257,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 02:24:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":32,"_text":"Response Adding ActivatePassiveEffect 5"},"childOfId":31} 
 Player 2 02:24:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":31} 
 Player 2 02:24:28 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:24:28 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:24:28 $ACTION_MASSAGE_REMOVE:  

 {"id":33} 
 Player 2 02:24:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":34,"_text":"Wait For Response From Player 2 "},"childOfId":31} 
 Player 2 02:24:28 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:24:29 $ACTION_MASSAGE_REMOVE:  

 {"id":25} 
 Player 2 02:24:29 $ACTION_MASSAGE_REMOVE:  

 {"id":26} 
 Player 2 02:24:52 $ACTION_MASSAGE_REMOVE:  

 {"id":34} 
 Player 2 02:24:52 $ACTION_MASSAGE_REMOVE:  

 {"id":32} 
 Player 2 02:24:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":35,"_text":"Resolve ActivatePassiveEffect 5 "}} 
 Player 2 02:24:52 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":257,"particleType":6} 
 Player 2 02:24:54 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":257,"particleType":6} 
 Player 2 02:24:54 $MONSTER_GAIN_DMG:  

 {"cardId":257,"DMGToGain":1} 
 Player 2 02:24:54 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":272}],"result":null,"preventMethod":false,"methodScopeId":257,"scopeIsPlayer":false,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1} 
 Player 2 02:24:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Maggy combat damage to War \n2:Activate War effect GainStats<GainStats>"} 
 Player 2 02:24:54 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[257],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":257,"effectCardPlayer":257},"entityId":5,"creatorCardId":257,"hasLockingStackEffect":false,"cardActivatorId":257,"cardWithEffectId":257,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 02:24:54 $ACTION_MASSAGE_REMOVE:  

 {"id":35} 
 Player 2 02:24:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Maggy combat damage to War"} 
 Player 2 02:24:55 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[257],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":257,"effectCardPlayer":257},"entityId":5,"creatorCardId":257,"hasLockingStackEffect":false,"cardActivatorId":257,"cardWithEffectId":257,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 02:24:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":36,"_text":"Remove After Resolve ActivatePassiveEffect 5  "}} 
 Player 2 02:24:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Maggy combat damage to War"} 
 Player 2 02:24:55 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[257],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":257,"effectCardPlayer":257},"entityId":5,"creatorCardId":257,"hasLockingStackEffect":false,"cardActivatorId":257,"cardWithEffectId":257,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 02:24:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":37,"_text":"Response Remove After Resolve ActivatePassiveEffect 5"},"childOfId":36} 
 Player 2 02:24:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":38,"_text":"Wait For Response From Player 2 "},"childOfId":36} 
 Player 2 02:24:55 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:24:57 $ACTION_MASSAGE_REMOVE:  

 {"id":38} 
 Player 2 02:24:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":39,"_text":"Wait For Response From Player 1 "},"childOfId":36} 
 Player 2 02:24:57 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:24:57 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:24:57 $ACTION_MASSAGE_REMOVE:  

 {"id":39} 
 Player 2 02:24:57 $ACTION_MASSAGE_REMOVE:  

 {"id":37} 
 Player 2 02:24:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":40,"_text":"Resolve CombatDamage 4 "}} 
 Player 2 02:24:57 $MONSTER_GET_DAMAGED:  

 {"cardId":257,"hpLeft":2,"damageDealerId":272} 
 Player 2 02:24:57 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":272}],"result":null,"preventMethod":false,"methodScopeId":257,"scopeIsPlayer":false,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 02:24:57 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":6},{"type":0,"number":272},{"type":0,"number":257}],"result":null,"preventMethod":false,"methodScopeId":272,"scopeIsPlayer":true,"index":6,"originStackId":4},"isAfterActivation":true,"index":6} 
 Player 2 02:24:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Maggy combat damage to War"} 
 Player 2 02:24:57 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":4,"creatorCardId":272,"entityToDoDamageCardId":272,"entityToTakeDamageCardId":257,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 02:24:57 $ACTION_MASSAGE_REMOVE:  

 {"id":30} 
 Player 2 02:24:57 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:24:57 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":4,"creatorCardId":272,"entityToDoDamageCardId":272,"entityToTakeDamageCardId":257,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 02:24:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":41,"_text":"Remove After Resolve CombatDamage 4  "}} 
 Player 2 02:24:57 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:24:57 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":4,"creatorCardId":272,"entityToDoDamageCardId":272,"entityToTakeDamageCardId":257,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 02:24:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":42,"_text":"Response Remove After Resolve CombatDamage 4"},"childOfId":41} 
 Player 2 02:24:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":43,"_text":"Wait For Response From Player 1 "},"childOfId":41} 
 Player 2 02:24:57 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:24:57 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:24:57 $ACTION_MASSAGE_REMOVE:  

 {"id":36} 
 Player 2 02:24:57 $ACTION_MASSAGE_REMOVE:  

 {"id":43} 
 Player 2 02:24:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":44,"_text":"Wait For Response From Player 2 "},"childOfId":41} 
 Player 2 02:24:58 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:25:00 $ACTION_MASSAGE_REMOVE:  

 {"id":41} 
 Player 2 02:25:02 $ACTION_MASSAGE_REMOVE:  

 {"id":44} 
 Player 2 02:25:03 $ACTION_MASSAGE_REMOVE:  

 {"id":42} 
 Player 2 02:25:03 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":45,"_text":"Stack Was Emptied "}} 
 Player 2 02:25:03 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:25:03 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 2 02:25:03 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 2 02:25:03 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 2 02:25:03 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 2 02:25:03 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 2 02:25:03 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 2 02:25:03 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 2 02:25:03 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 2 02:25:03 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 2 02:25:03 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 2 02:25:03 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 2 02:25:03 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 2 02:25:03 $ACTION_MASSAGE_REMOVE:  

 {"id":24} 
 Player 2 02:25:03 $ACTION_MASSAGE_REMOVE:  

 {"id":25} 
 Player 2 02:25:03 $ACTION_MASSAGE_REMOVE:  

 {"id":26} 
 Player 2 02:25:03 $ACTION_MASSAGE_REMOVE:  

 {"id":30} 
 Player 2 02:25:03 $ACTION_MASSAGE_REMOVE:  

 {"id":31} 
 Player 2 02:25:03 $ACTION_MASSAGE_REMOVE:  

 {"id":35} 
 Player 2 02:25:03 $ACTION_MASSAGE_REMOVE:  

 {"id":36} 
 Player 2 02:25:03 $ACTION_MASSAGE_REMOVE:  

 {"id":40} 
 Player 2 02:25:03 $ACTION_MASSAGE_REMOVE:  

 {"id":41} 
 Player 2 02:25:03 $ACTION_MASSAGE_REMOVE:  

 {"id":45} 
 Player 2 02:25:04 $ACTION_MASSAGE_REMOVE:  

 {"id":45} 
 Player 2 02:25:10 $PLAYER_GAIN_DMG:  

 {"playerId":2,"DMGToGain":2,"isTemp":true} 
 Player 2 02:25:12 $NEXT_STACK_ID:  
 Player 2 02:25:12 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:25:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against War<Monster>"} 
 Player 2 02:25:12 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":6,"creatorCardId":272,"rollingPlayerCardId":272,"stackEffectType":2,"attackedMonsterCardId":257}} 
 Player 2 02:25:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against War<Monster>"} 
 Player 2 02:25:12 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":6,"creatorCardId":272,"rollingPlayerCardId":272,"stackEffectType":2,"attackedMonsterCardId":257}} 
 Player 2 02:25:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":46,"_text":"Add AttackRoll 6 "}} 
 Player 2 02:25:12 $ROLL_DICE:  

 {"playerId":2} 
 Player 2 02:25:14 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":1} 
 Player 2 02:25:14 $UPDATE_STACK_VIS:  

 {"stackId":6,"text":"player rolled 1 vs War<Monster>"} 
 Player 2 02:25:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs War<Monster>"} 
 Player 2 02:25:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:25:14 $ACTION_MASSAGE_REMOVE:  

 {"id":46} 
 Player 2 02:25:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs War<Monster>"} 
 Player 2 02:25:14 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":6,"creatorCardId":272,"numberRolled":1,"rollingPlayerCardId":272,"stackEffectType":2,"attackedMonsterCardId":257}} 
 Player 2 02:25:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":47,"_text":"Response Adding AttackRoll 6"},"childOfId":46} 
 Player 2 02:25:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":48,"_text":"Wait For Response From Player 2 "},"childOfId":46} 
 Player 2 02:25:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:25:17 $ACTION_MASSAGE_REMOVE:  

 {"id":48} 
 Player 2 02:25:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":49,"_text":"Wait For Response From Player 1 "},"childOfId":46} 
 Player 2 02:25:17 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:25:17 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:25:17 $ACTION_MASSAGE_REMOVE:  

 {"id":49} 
 Player 2 02:25:17 $ACTION_MASSAGE_REMOVE:  

 {"id":47} 
 Player 2 02:25:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":50,"_text":"Resolve AttackRoll 6 "}} 
 Player 2 02:25:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":51,"_text":"Added 0 to original roll"}} 
 Player 2 02:25:17 $NEXT_STACK_ID:  
 Player 2 02:25:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs War<Monster>"} 
 Player 2 02:25:17 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:25:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Maggy combat damage to War \n2:Player 2 rolled 1 vs War<Monster>"} 
 Player 2 02:25:18 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":7,"creatorCardId":272,"entityToDoDamageCardId":272,"entityToTakeDamageCardId":257,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 02:25:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Maggy combat damage to War \n2:Player 2 rolled 1 vs War<Monster>"} 
 Player 2 02:25:18 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":6,"creatorCardId":272,"numberRolled":1,"rollingPlayerCardId":272,"stackEffectType":2,"attackedMonsterCardId":257}} 
 Player 2 02:25:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Maggy combat damage to War \n2:Player 2 rolled 1 vs War<Monster>"} 
 Player 2 02:25:18 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":272,"entityToDoDamageCardId":272,"entityToTakeDamageCardId":257,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 02:25:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Maggy combat damage to War \n2:Player 2 rolled 1 vs War<Monster>"} 
 Player 2 02:25:18 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":6,"creatorCardId":272,"numberRolled":1,"rollingPlayerCardId":272,"stackEffectType":2,"attackedMonsterCardId":257}} 
 Player 2 02:25:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Maggy combat damage to War \n2:Player 2 rolled 1 vs War<Monster>"} 
 Player 2 02:25:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Maggy combat damage to War \n2:Player 2 rolled 1 vs War<Monster>"} 
 Player 2 02:25:18 $REPLACE_STACK:  

 {"currentStack":[{"entityId":7,"creatorCardId":272,"entityToDoDamageCardId":272,"entityToTakeDamageCardId":257,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":6,"creatorCardId":272,"numberRolled":1,"rollingPlayerCardId":272,"stackEffectType":2,"attackedMonsterCardId":257}]} 
 Player 2 02:25:18 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":6},{"type":2,"number":1},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":272,"scopeIsPlayer":true,"index":7,"originStackId":6},"isAfterActivation":true,"index":7} 
 Player 2 02:25:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Maggy combat damage to War \n2:Player 2 rolled 1 vs War<Monster>"} 
 Player 2 02:25:18 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":6,"creatorCardId":272,"numberRolled":1,"rollingPlayerCardId":272,"stackEffectType":2,"attackedMonsterCardId":257}} 
 Player 2 02:25:18 $ACTION_MASSAGE_REMOVE:  

 {"id":50} 
 Player 2 02:25:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Maggy combat damage to War"} 
 Player 2 02:25:18 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":6,"creatorCardId":272,"numberRolled":1,"rollingPlayerCardId":272,"stackEffectType":2,"attackedMonsterCardId":257}} 
 Player 2 02:25:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":52,"_text":"Remove After Resolve AttackRoll 6  "}} 
 Player 2 02:25:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Maggy combat damage to War"} 
 Player 2 02:25:18 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":6,"creatorCardId":272,"numberRolled":1,"rollingPlayerCardId":272,"stackEffectType":2,"attackedMonsterCardId":257}} 
 Player 2 02:25:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":53,"_text":"Response Remove After Resolve AttackRoll 6"},"childOfId":52} 
 Player 2 02:25:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":54,"_text":"Wait For Response From Player 2 "},"childOfId":52} 
 Player 2 02:25:18 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:25:20 $ACTION_MASSAGE_REMOVE:  

 {"id":51} 
 Player 2 02:25:20 $ACTION_MASSAGE_REMOVE:  

 {"id":52} 
 Player 2 02:25:23 $ACTION_MASSAGE_REMOVE:  

 {"id":54} 
 Player 2 02:25:23 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":55,"_text":"Wait For Response From Player 1 "},"childOfId":52} 
 Player 2 02:25:23 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:25:23 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:25:23 $ACTION_MASSAGE_REMOVE:  

 {"id":55} 
 Player 2 02:25:23 $ACTION_MASSAGE_REMOVE:  

 {"id":53} 
 Player 2 02:25:23 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":56,"_text":"Resolve CombatDamage 7 "}} 
 Player 2 02:25:24 $UPDATE_STACK_VIS:  

 {"stackId":7,"text":"Maggy will deal 3 combat damage to War"} 
 Player 2 02:25:24 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":3},{"type":0,"number":272}],"result":null,"preventMethod":false,"methodScopeId":257,"scopeIsPlayer":false,"index":2,"originStackId":-1},"isAfterActivation":false,"index":2} 
 Player 2 02:25:24 $NEXT_STACK_ID:  
 Player 2 02:25:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Maggy combat damage to War"} 
 Player 2 02:25:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Maggy combat damage to War \n2:Activate War effect GainStats<GainStats>"} 
 Player 2 02:25:24 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":8,"creatorCardId":257,"hasLockingStackEffect":false,"cardActivatorId":257,"cardWithEffectId":257,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":257,"cardId":257,"effctType":0},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 02:25:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Maggy combat damage to War \n2:Activate War effect GainStats<GainStats>"} 
 Player 2 02:25:24 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":8,"creatorCardId":257,"hasLockingStackEffect":false,"cardActivatorId":257,"cardWithEffectId":257,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":257,"cardId":257,"effctType":0},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 02:25:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":57,"_text":"Add ActivatePassiveEffect 8 "}} 
 Player 2 02:25:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Maggy combat damage to War \n2:Activate War effect GainStats<GainStats>"} 
 Player 2 02:25:24 $ACTION_MASSAGE_REMOVE:  

 {"id":57} 
 Player 2 02:25:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Maggy combat damage to War \n2:Activate War effect GainStats<GainStats>"} 
 Player 2 02:25:24 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[257],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":257,"effectCardPlayer":257},"entityId":8,"creatorCardId":257,"hasLockingStackEffect":false,"cardActivatorId":257,"cardWithEffectId":257,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":257,"cardId":257,"effctType":0},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 02:25:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":58,"_text":"Response Adding ActivatePassiveEffect 8"},"childOfId":57} 
 Player 2 02:25:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":59,"_text":"Wait For Response From Player 1 "},"childOfId":57} 
 Player 2 02:25:24 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:25:24 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:25:24 $ACTION_MASSAGE_REMOVE:  

 {"id":59} 
 Player 2 02:25:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":60,"_text":"Wait For Response From Player 2 "},"childOfId":57} 
 Player 2 02:25:24 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:25:29 $ACTION_MASSAGE_REMOVE:  

 {"id":60} 
 Player 2 02:25:29 $ACTION_MASSAGE_REMOVE:  

 {"id":58} 
 Player 2 02:25:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":61,"_text":"Resolve ActivatePassiveEffect 8 "}} 
 Player 2 02:25:29 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":257,"particleType":6} 
 Player 2 02:25:31 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":257,"particleType":6} 
 Player 2 02:25:31 $MONSTER_GAIN_DMG:  

 {"cardId":257,"DMGToGain":1} 
 Player 2 02:25:31 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":3},{"type":0,"number":272}],"result":null,"preventMethod":false,"methodScopeId":257,"scopeIsPlayer":false,"index":2,"originStackId":-1},"isAfterActivation":false,"index":2} 
 Player 2 02:25:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Maggy combat damage to War \n2:Activate War effect GainStats<GainStats>"} 
 Player 2 02:25:31 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[257],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":257,"effectCardPlayer":257},"entityId":8,"creatorCardId":257,"hasLockingStackEffect":false,"cardActivatorId":257,"cardWithEffectId":257,"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 02:25:31 $ACTION_MASSAGE_REMOVE:  

 {"id":61} 
 Player 2 02:25:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Maggy combat damage to War"} 
 Player 2 02:25:31 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[257],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":257,"effectCardPlayer":257},"entityId":8,"creatorCardId":257,"hasLockingStackEffect":false,"cardActivatorId":257,"cardWithEffectId":257,"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 02:25:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":62,"_text":"Remove After Resolve ActivatePassiveEffect 8  "}} 
 Player 2 02:25:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Maggy combat damage to War"} 
 Player 2 02:25:31 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[257],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":257,"effectCardPlayer":257},"entityId":8,"creatorCardId":257,"hasLockingStackEffect":false,"cardActivatorId":257,"cardWithEffectId":257,"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 02:25:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":63,"_text":"Response Remove After Resolve ActivatePassiveEffect 8"},"childOfId":62} 
 Player 2 02:25:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":64,"_text":"Wait For Response From Player 2 "},"childOfId":62} 
 Player 2 02:25:31 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:25:34 $ACTION_MASSAGE_REMOVE:  

 {"id":64} 
 Player 2 02:25:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":65,"_text":"Wait For Response From Player 1 "},"childOfId":62} 
 Player 2 02:25:34 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:25:34 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:25:34 $ACTION_MASSAGE_REMOVE:  

 {"id":65} 
 Player 2 02:25:34 $ACTION_MASSAGE_REMOVE:  

 {"id":63} 
 Player 2 02:25:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":66,"_text":"Resolve CombatDamage 7 "}} 
 Player 2 02:25:34 $MONSTER_GET_DAMAGED:  

 {"cardId":257,"hpLeft":0,"damageDealerId":272} 
 Player 2 02:25:34 $NEXT_STACK_ID:  
 Player 2 02:25:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Maggy combat damage to War"} 
 Player 2 02:25:34 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:25:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Maggy combat damage to War \n2:[object Object] killed by Maggy"} 
 Player 2 02:25:34 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":9,"creatorCardId":272,"monsterToDieCardId":257,"stackEffectType":5,"killerId":272}} 
 Player 2 02:25:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Maggy combat damage to War \n2:[object Object] killed by Maggy"} 
 Player 2 02:25:34 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":272,"entityToDoDamageCardId":272,"entityToTakeDamageCardId":257,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 02:25:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Maggy combat damage to War \n2:[object Object] killed by Maggy"} 
 Player 2 02:25:34 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":272,"entityToDoDamageCardId":272,"entityToTakeDamageCardId":257,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 02:25:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Maggy combat damage to War \n2:[object Object] killed by Maggy"} 
 Player 2 02:25:34 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":9,"creatorCardId":272,"monsterToDieCardId":257,"stackEffectType":5,"killerId":272}} 
 Player 2 02:25:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Maggy combat damage to War \n2:[object Object] killed by Maggy"} 
 Player 2 02:25:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Maggy combat damage to War \n2:[object Object] killed by Maggy"} 
 Player 2 02:25:34 $REPLACE_STACK:  

 {"currentStack":[{"entityId":7,"creatorCardId":272,"entityToDoDamageCardId":272,"entityToTakeDamageCardId":257,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":9,"creatorCardId":272,"monsterToDieCardId":257,"stackEffectType":5,"killerId":272}]} 
 Player 2 02:25:34 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":3},{"type":0,"number":272}],"result":null,"preventMethod":false,"methodScopeId":257,"scopeIsPlayer":false,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 2 02:25:34 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":3},{"type":2,"number":6},{"type":0,"number":272},{"type":0,"number":257}],"result":null,"preventMethod":false,"methodScopeId":272,"scopeIsPlayer":true,"index":8,"originStackId":7},"isAfterActivation":true,"index":8} 
 Player 2 02:25:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Maggy combat damage to War \n2:[object Object] killed by Maggy"} 
 Player 2 02:25:34 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":7,"creatorCardId":272,"entityToDoDamageCardId":272,"entityToTakeDamageCardId":257,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 02:25:34 $ACTION_MASSAGE_REMOVE:  

 {"id":56} 
 Player 2 02:25:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Maggy"} 
 Player 2 02:25:35 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":272,"entityToDoDamageCardId":272,"entityToTakeDamageCardId":257,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 02:25:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":67,"_text":"Remove After Resolve CombatDamage 7  "}} 
 Player 2 02:25:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Maggy"} 
 Player 2 02:25:35 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":7,"creatorCardId":272,"entityToDoDamageCardId":272,"entityToTakeDamageCardId":257,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 02:25:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":68,"_text":"Response Remove After Resolve CombatDamage 7"},"childOfId":67} 
 Player 2 02:25:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":69,"_text":"Wait For Response From Player 2 "},"childOfId":67} 
 Player 2 02:25:35 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:25:35 $ACTION_MASSAGE_REMOVE:  

 {"id":62} 
 Player 2 02:25:37 $ACTION_MASSAGE_REMOVE:  

 {"id":67} 
 Player 2 02:25:47 $ACTION_MASSAGE_REMOVE:  

 {"id":69} 
 Player 2 02:25:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":70,"_text":"Wait For Response From Player 1 "},"childOfId":67} 
 Player 2 02:25:47 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:25:47 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:25:47 $ACTION_MASSAGE_REMOVE:  

 {"id":70} 
 Player 2 02:25:47 $ACTION_MASSAGE_REMOVE:  

 {"id":68} 
 Player 2 02:25:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":71,"_text":"Resolve MonsterDeath 9 "}} 
 Player 2 02:25:47 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":257,"particleType":5} 
 Player 2 02:25:47 $CANCEL_ATTACK:  
 Player 2 02:25:47 $NEXT_STACK_ID:  
 Player 2 02:25:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Maggy"} 
 Player 2 02:25:47 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:25:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get War<Monster> reward \n2:[object Object] killed by Maggy"} 
 Player 2 02:25:47 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":10,"creatorCardId":272,"monsterCardWithRewardId":257,"playerCardIdToReward":272,"stackEffectType":7}} 
 Player 2 02:25:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get War<Monster> reward \n2:[object Object] killed by Maggy"} 
 Player 2 02:25:47 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":9,"creatorCardId":272,"monsterToDieCardId":257,"stackEffectType":5,"killerId":272}} 
 Player 2 02:25:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get War<Monster> reward \n2:[object Object] killed by Maggy"} 
 Player 2 02:25:47 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":10,"creatorCardId":272,"monsterCardWithRewardId":257,"playerCardIdToReward":272,"stackEffectType":7}} 
 Player 2 02:25:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get War<Monster> reward \n2:[object Object] killed by Maggy"} 
 Player 2 02:25:47 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":9,"creatorCardId":272,"monsterToDieCardId":257,"stackEffectType":5,"killerId":272}} 
 Player 2 02:25:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get War<Monster> reward \n2:[object Object] killed by Maggy"} 
 Player 2 02:25:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get War<Monster> reward \n2:[object Object] killed by Maggy"} 
 Player 2 02:25:48 $REPLACE_STACK:  

 {"currentStack":[{"entityId":10,"creatorCardId":272,"monsterCardWithRewardId":257,"playerCardIdToReward":272,"stackEffectType":7},{"entityId":9,"creatorCardId":272,"monsterToDieCardId":257,"stackEffectType":5,"killerId":272}]} 
 Player 2 02:25:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get War<Monster> reward \n2:[object Object] killed by Maggy"} 
 Player 2 02:25:48 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":9,"creatorCardId":272,"monsterToDieCardId":257,"stackEffectType":5,"killerId":272}} 
 Player 2 02:25:48 $ACTION_MASSAGE_REMOVE:  

 {"id":71} 
 Player 2 02:25:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get War<Monster> reward"} 
 Player 2 02:25:48 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":9,"creatorCardId":272,"monsterToDieCardId":257,"stackEffectType":5,"killerId":272}} 
 Player 2 02:25:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":72,"_text":"Remove After Resolve MonsterDeath 9  "}} 
 Player 2 02:25:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get War<Monster> reward"} 
 Player 2 02:25:48 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":9,"creatorCardId":272,"monsterToDieCardId":257,"stackEffectType":5,"killerId":272}} 
 Player 2 02:25:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":73,"_text":"Response Remove After Resolve MonsterDeath 9"},"childOfId":72} 
 Player 2 02:25:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":74,"_text":"Wait For Response From Player 2 "},"childOfId":72} 
 Player 2 02:25:48 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:25:50 $ACTION_MASSAGE_REMOVE:  

 {"id":72} 
 Player 2 02:26:09 $ACTION_MASSAGE_REMOVE:  

 {"id":74} 
 Player 2 02:26:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":75,"_text":"Wait For Response From Player 1 "},"childOfId":72} 
 Player 2 02:26:09 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:26:09 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:26:10 $ACTION_MASSAGE_REMOVE:  

 {"id":75} 
 Player 2 02:26:10 $ACTION_MASSAGE_REMOVE:  

 {"id":73} 
 Player 2 02:26:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":76,"_text":"Resolve MonsterRewardStackEffect 10 "}} 
 Player 2 02:26:10 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":257,"scopeIsPlayer":false,"index":9,"originStackId":10},"isAfterActivation":true,"index":9} 
 Player 2 02:26:10 $SET_MONEY:  

 {"playerId":2,"numOfCoins":11} 
 Player 2 02:26:10 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":8}],"result":null,"preventMethod":false,"methodScopeId":272,"scopeIsPlayer":true,"index":10,"originStackId":-1},"isAfterActivation":true,"index":10} 
 Player 2 02:26:10 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:26:10 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 2 02:26:10 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 2 02:26:10 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 2 02:26:10 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 2 02:26:10 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 2 02:26:10 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 2 02:26:10 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 2 02:26:10 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 2 02:26:10 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 2 02:26:10 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 2 02:26:10 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 2 02:26:10 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 2 02:26:10 $ACTION_MASSAGE_REMOVE:  

 {"id":24} 
 Player 2 02:26:10 $ACTION_MASSAGE_REMOVE:  

 {"id":25} 
 Player 2 02:26:10 $ACTION_MASSAGE_REMOVE:  

 {"id":26} 
 Player 2 02:26:10 $ACTION_MASSAGE_REMOVE:  

 {"id":30} 
 Player 2 02:26:10 $ACTION_MASSAGE_REMOVE:  

 {"id":31} 
 Player 2 02:26:10 $ACTION_MASSAGE_REMOVE:  

 {"id":35} 
 Player 2 02:26:10 $ACTION_MASSAGE_REMOVE:  

 {"id":36} 
 Player 2 02:26:10 $ACTION_MASSAGE_REMOVE:  

 {"id":40} 
 Player 2 02:26:10 $ACTION_MASSAGE_REMOVE:  

 {"id":41} 
 Player 2 02:26:10 $ACTION_MASSAGE_REMOVE:  

 {"id":45} 
 Player 2 02:26:10 $ACTION_MASSAGE_REMOVE:  

 {"id":46} 
 Player 2 02:26:10 $ACTION_MASSAGE_REMOVE:  

 {"id":50} 
 Player 2 02:26:10 $ACTION_MASSAGE_REMOVE:  

 {"id":51} 
 Player 2 02:26:10 $ACTION_MASSAGE_REMOVE:  

 {"id":52} 
 Player 2 02:26:10 $ACTION_MASSAGE_REMOVE:  

 {"id":56} 
 Player 2 02:26:10 $ACTION_MASSAGE_REMOVE:  

 {"id":57} 
 Player 2 02:26:10 $ACTION_MASSAGE_REMOVE:  

 {"id":61} 
 Player 2 02:26:10 $ACTION_MASSAGE_REMOVE:  

 {"id":62} 
 Player 2 02:26:10 $ACTION_MASSAGE_REMOVE:  

 {"id":66} 
 Player 2 02:26:11 $ACTION_MASSAGE_REMOVE:  

 {"id":67} 
 Player 2 02:26:11 $ACTION_MASSAGE_REMOVE:  

 {"id":71} 
 Player 2 02:26:11 $ACTION_MASSAGE_REMOVE:  

 {"id":72} 
 Player 2 02:26:11 $ACTION_MASSAGE_REMOVE:  

 {"id":76} 
 Player 2 02:26:11 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:26:11 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":10,"creatorCardId":272,"monsterCardWithRewardId":257,"playerCardIdToReward":272,"stackEffectType":7}} 
 Player 2 02:26:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":77,"_text":"Fizzle MonsterRewardStackEffect 10"}} 
 Player 2 02:26:11 $MOVE_CARD:  

 {"moveIndex":8,"cardId":257,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"soulsLayout"} 
 Player 2 02:26:11 $GET_SOUL:  

 {"playerId":2,"cardId":257} 
 Player 2 02:26:11 $REMOVE_FROM_PASSIVE_MANAGER:  

 {"cardId":257} 
 Player 2 02:26:11 $REMOVE_MONSTER:  

 {"holderId":2,"monsterId":257} 
 Player 2 02:26:11 $NEXT_STACK_ID:  
 Player 2 02:26:11 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:26:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot"} 
 Player 2 02:26:11 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":11,"creatorCardId":272,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 
 Player 2 02:26:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot"} 
 Player 2 02:26:11 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":11,"creatorCardId":272,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 
 Player 2 02:26:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":78,"_text":"Add RefillEmptySlot 11 "}} 
 Player 2 02:26:11 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:26:11 $ACTION_MASSAGE_REMOVE:  

 {"id":78} 
 Player 2 02:26:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot"} 
 Player 2 02:26:11 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":11,"creatorCardId":272,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 
 Player 2 02:26:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":79,"_text":"Response Adding RefillEmptySlot 11"},"childOfId":78} 
 Player 2 02:26:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":80,"_text":"Wait For Response From Player 2 "},"childOfId":78} 
 Player 2 02:26:11 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:26:13 $ACTION_MASSAGE_REMOVE:  

 {"id":77} 
 Player 2 02:26:19 $ACTION_MASSAGE_REMOVE:  

 {"id":80} 
 Player 2 02:26:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":81,"_text":"Wait For Response From Player 1 "},"childOfId":78} 
 Player 2 02:26:19 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:26:19 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:26:19 $ACTION_MASSAGE_REMOVE:  

 {"id":81} 
 Player 2 02:26:19 $ACTION_MASSAGE_REMOVE:  

 {"id":79} 
 Player 2 02:26:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":82,"_text":"Resolve RefillEmptySlot 11 "}} 
 Player 2 02:26:19 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 02:26:19 $FLIP_CARD:  

 {"cardId":256} 
 Player 2 02:26:19 $ADD_MONSTER:  

 {"monsterPlaceId":2,"monsterId":256} 
 Player 2 02:26:19 $NEW_MONSTER_ON_PLACE:  

 {"cardId":256,"monsterPlaceId":2} 
 Player 2 02:26:19 $SHOW_DECISION:  

 {"startCardId":272,"endCardId":256} 
 Player 2 02:26:22 $NEXT_STACK_ID:  
 Player 2 02:26:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot"} 
 Player 2 02:26:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Troll Bombs"} 
 Player 2 02:26:22 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":12,"creatorCardId":272,"hasLockingStackEffect":false,"itemToPlayCardId":256,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 02:26:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Troll Bombs"} 
 Player 2 02:26:22 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":12,"creatorCardId":272,"hasLockingStackEffect":false,"itemToPlayCardId":256,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 02:26:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":83,"_text":"Add ActivateItem 12 "}} 
 Player 2 02:26:22 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:26:22 $ACTION_MASSAGE_REMOVE:  

 {"id":83} 
 Player 2 02:26:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Troll Bombs"} 
 Player 2 02:26:22 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":12,"creatorCardId":272,"hasLockingStackEffect":false,"itemToPlayCardId":256,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 02:26:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":84,"_text":"Response Adding ActivateItem 12"},"childOfId":83} 
 Player 2 02:26:23 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":85,"_text":"Wait For Response From Player 2 "},"childOfId":83} 
 Player 2 02:26:23 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:26:27 $ACTION_MASSAGE_REMOVE:  

 {"id":85} 
 Player 2 02:26:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":86,"_text":"Wait For Response From Player 1 "},"childOfId":83} 
 Player 2 02:26:27 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:26:27 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:26:27 $ACTION_MASSAGE_REMOVE:  

 {"id":86} 
 Player 2 02:26:27 $ACTION_MASSAGE_REMOVE:  

 {"id":84} 
 Player 2 02:26:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":87,"_text":"Resolve ActivateItem 12 "}} 
 Player 2 02:26:27 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":256,"particleType":6} 
 Player 2 02:26:29 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":256,"particleType":6} 
 Player 2 02:26:29 $PLAYER_GET_HIT:  

 {"playerId":2,"damage":2,"damageDealerId":256} 
 Player 2 02:26:29 $NEXT_STACK_ID:  
 Player 2 02:26:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Troll Bombs"} 
 Player 2 02:26:29 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:26:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die"} 
 Player 2 02:26:29 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":13,"creatorCardId":272,"playerToDieCardId":272,"stackEffectType":15,"killerId":256}} 
 Player 2 02:26:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die"} 
 Player 2 02:26:30 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":11,"creatorCardId":272,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 
 Player 2 02:26:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die"} 
 Player 2 02:26:30 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":11,"creatorCardId":272,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 
 Player 2 02:26:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die"} 
 Player 2 02:26:30 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":12,"creatorCardId":272,"hasLockingStackEffect":false,"itemToPlayCardId":256,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 02:26:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die"} 
 Player 2 02:26:30 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":13,"creatorCardId":272,"playerToDieCardId":272,"stackEffectType":15,"killerId":256}} 
 Player 2 02:26:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die"} 
 Player 2 02:26:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die"} 
 Player 2 02:26:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die"} 
 Player 2 02:26:30 $REPLACE_STACK:  

 {"currentStack":[{"entityId":11,"creatorCardId":272,"slotType":2,"slotToFillId":2,"stackEffectType":10},{"entityId":12,"creatorCardId":272,"hasLockingStackEffect":false,"itemToPlayCardId":256,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1},{"entityId":13,"creatorCardId":272,"playerToDieCardId":272,"stackEffectType":15,"killerId":256}]} 
 Player 2 02:26:30 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":256}],"result":null,"preventMethod":false,"methodScopeId":272,"scopeIsPlayer":true,"index":11,"originStackId":-1},"isAfterActivation":true,"index":11} 
 Player 2 02:26:30 $MOVE_CARD:  

 {"moveIndex":9,"cardId":256,"placeID":281,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 02:26:30 $MOVE_CARD_TO_PILE:  

 {"type":2,"cardId":256} 
 Player 2 02:26:30 $REMOVE_MONSTER:  

 {"holderId":2,"monsterId":256} 
 Player 2 02:26:30 $NEXT_STACK_ID:  
 Player 2 02:26:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die"} 
 Player 2 02:26:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die \n4:Refill holder2 slot"} 
 Player 2 02:26:30 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":14,"creatorCardId":272,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 
 Player 2 02:26:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die \n4:Refill holder2 slot"} 
 Player 2 02:26:31 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":14,"creatorCardId":272,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 
 Player 2 02:26:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":88,"_text":"Add RefillEmptySlot 14 "}} 
 Player 2 02:26:31 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:26:31 $ACTION_MASSAGE_REMOVE:  

 {"id":88} 
 Player 2 02:26:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die \n4:Refill holder2 slot"} 
 Player 2 02:26:31 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":14,"creatorCardId":272,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 
 Player 2 02:26:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":89,"_text":"Response Adding RefillEmptySlot 14"},"childOfId":88} 
 Player 2 02:26:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":90,"_text":"Wait For Response From Player 2 "},"childOfId":88} 
 Player 2 02:26:31 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:27:07 $ACTION_MASSAGE_REMOVE:  

 {"id":90} 
 Player 2 02:27:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":91,"_text":"Wait For Response From Player 1 "},"childOfId":88} 
 Player 2 02:27:07 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:27:07 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:27:07 $ACTION_MASSAGE_REMOVE:  

 {"id":91} 
 Player 2 02:27:07 $ACTION_MASSAGE_REMOVE:  

 {"id":89} 
 Player 2 02:27:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":92,"_text":"Resolve RefillEmptySlot 14 "}} 
 Player 2 02:27:07 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 02:27:07 $FLIP_CARD:  

 {"cardId":255} 
 Player 2 02:27:07 $ADD_MONSTER:  

 {"monsterPlaceId":2,"monsterId":255} 
 Player 2 02:27:07 $NEW_MONSTER_ON_PLACE:  

 {"cardId":255,"monsterPlaceId":2} 
 Player 2 02:27:07 $SHOW_DECISION:  

 {"startCardId":272,"endCardId":255} 
 Player 2 02:27:10 $NEXT_STACK_ID:  
 Player 2 02:27:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die \n4:Refill holder2 slot"} 
 Player 2 02:27:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die \n4:Refill holder2 slot \n5:Player 2 activated Troll Bombs!"} 
 Player 2 02:27:10 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":15,"creatorCardId":272,"hasLockingStackEffect":false,"itemToPlayCardId":255,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 02:27:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die \n4:Refill holder2 slot \n5:Player 2 activated Troll Bombs!"} 
 Player 2 02:27:10 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":15,"creatorCardId":272,"hasLockingStackEffect":false,"itemToPlayCardId":255,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 02:27:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":93,"_text":"Add ActivateItem 15 "}} 
 Player 2 02:27:10 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:27:10 $ACTION_MASSAGE_REMOVE:  

 {"id":93} 
 Player 2 02:27:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die \n4:Refill holder2 slot \n5:Player 2 activated Troll Bombs!"} 
 Player 2 02:27:10 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":15,"creatorCardId":272,"hasLockingStackEffect":false,"itemToPlayCardId":255,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 02:27:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":94,"_text":"Response Adding ActivateItem 15"},"childOfId":93} 
 Player 2 02:27:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":95,"_text":"Wait For Response From Player 2 "},"childOfId":93} 
 Player 2 02:27:10 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:27:13 $ACTION_MASSAGE_REMOVE:  

 {"id":95} 
 Player 2 02:27:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":96,"_text":"Wait For Response From Player 1 "},"childOfId":93} 
 Player 2 02:27:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:27:13 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:27:13 $ACTION_MASSAGE_REMOVE:  

 {"id":96} 
 Player 2 02:27:13 $ACTION_MASSAGE_REMOVE:  

 {"id":94} 
 Player 2 02:27:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":97,"_text":"Resolve ActivateItem 15 "}} 
 Player 2 02:27:13 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":255,"particleType":6} 
 Player 2 02:27:15 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":255,"particleType":6} 
 Player 2 02:27:15 $PLAYER_GET_HIT:  

 {"playerId":2,"damage":2,"damageDealerId":255} 
 Player 2 02:27:15 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":255}],"result":null,"preventMethod":false,"methodScopeId":272,"scopeIsPlayer":true,"index":12,"originStackId":-1},"isAfterActivation":true,"index":12} 
 Player 2 02:27:15 $MOVE_CARD:  

 {"moveIndex":10,"cardId":255,"placeID":281,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 02:27:16 $MOVE_CARD_TO_PILE:  

 {"type":2,"cardId":255} 
 Player 2 02:27:16 $REMOVE_MONSTER:  

 {"holderId":2,"monsterId":255} 
 Player 2 02:27:16 $NEXT_STACK_ID:  
 Player 2 02:27:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die \n4:Refill holder2 slot \n5:Player 2 activated Troll Bombs!"} 
 Player 2 02:27:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die \n4:Refill holder2 slot \n5:Player 2 activated Troll Bombs! \n6:Refill holder2 slot"} 
 Player 2 02:27:16 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":16,"creatorCardId":272,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 
 Player 2 02:27:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die \n4:Refill holder2 slot \n5:Player 2 activated Troll Bombs! \n6:Refill holder2 slot"} 
 Player 2 02:27:16 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":16,"creatorCardId":272,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 
 Player 2 02:27:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":98,"_text":"Add RefillEmptySlot 16 "}} 
 Player 2 02:27:16 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:27:16 $ACTION_MASSAGE_REMOVE:  

 {"id":98} 
 Player 2 02:27:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die \n4:Refill holder2 slot \n5:Player 2 activated Troll Bombs! \n6:Refill holder2 slot"} 
 Player 2 02:27:16 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":16,"creatorCardId":272,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 
 Player 2 02:27:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":99,"_text":"Response Adding RefillEmptySlot 16"},"childOfId":98} 
 Player 2 02:27:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":100,"_text":"Wait For Response From Player 2 "},"childOfId":98} 
 Player 2 02:27:16 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:27:24 $ACTION_MASSAGE_REMOVE:  

 {"id":100} 
 Player 2 02:27:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":101,"_text":"Wait For Response From Player 1 "},"childOfId":98} 
 Player 2 02:27:24 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:27:24 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:27:24 $ACTION_MASSAGE_REMOVE:  

 {"id":101} 
 Player 2 02:27:25 $ACTION_MASSAGE_REMOVE:  

 {"id":99} 
 Player 2 02:27:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":102,"_text":"Resolve RefillEmptySlot 16 "}} 
 Player 2 02:27:25 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 02:27:25 $FLIP_CARD:  

 {"cardId":254} 
 Player 2 02:27:25 $ADD_MONSTER:  

 {"monsterPlaceId":2,"monsterId":254} 
 Player 2 02:27:25 $NEW_MONSTER_ON_PLACE:  

 {"cardId":254,"monsterPlaceId":2} 
 Player 2 02:27:25 $ACTION_MASSAGE_REMOVE:  

 {"id":102} 
 Player 2 02:27:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die \n4:Refill holder2 slot \n5:Player 2 activated Troll Bombs!"} 
 Player 2 02:27:25 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":16,"creatorCardId":272,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 
 Player 2 02:27:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":103,"_text":"Remove After Resolve RefillEmptySlot 16  "}} 
 Player 2 02:27:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die \n4:Refill holder2 slot \n5:Player 2 activated Troll Bombs!"} 
 Player 2 02:27:25 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":16,"creatorCardId":272,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 
 Player 2 02:27:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":104,"_text":"Response Remove After Resolve RefillEmptySlot 16"},"childOfId":103} 
 Player 2 02:27:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":105,"_text":"Wait For Response From Player 1 "},"childOfId":103} 
 Player 2 02:27:25 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:27:25 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:27:25 $ACTION_MASSAGE_REMOVE:  

 {"id":105} 
 Player 2 02:27:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":106,"_text":"Wait For Response From Player 2 "},"childOfId":103} 
 Player 2 02:27:25 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:27:27 $ACTION_MASSAGE_REMOVE:  

 {"id":106} 
 Player 2 02:27:27 $ACTION_MASSAGE_REMOVE:  

 {"id":104} 
 Player 2 02:27:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":107,"_text":"Resolve ActivateItem 15 "}} 
 Player 2 02:27:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die \n4:Refill holder2 slot \n5:Player 2 activated Troll Bombs!"} 
 Player 2 02:27:27 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":15,"creatorCardId":272,"hasLockingStackEffect":false,"itemToPlayCardId":255,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 02:27:27 $ACTION_MASSAGE_REMOVE:  

 {"id":97} 
 Player 2 02:27:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die \n4:Refill holder2 slot"} 
 Player 2 02:27:27 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":15,"creatorCardId":272,"hasLockingStackEffect":false,"itemToPlayCardId":255,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 02:27:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":108,"_text":"Remove After Resolve ActivateItem 15  "}} 
 Player 2 02:27:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die \n4:Refill holder2 slot"} 
 Player 2 02:27:27 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":15,"creatorCardId":272,"hasLockingStackEffect":false,"itemToPlayCardId":255,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 02:27:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":109,"_text":"Response Remove After Resolve ActivateItem 15"},"childOfId":108} 
 Player 2 02:27:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":110,"_text":"Wait For Response From Player 2 "},"childOfId":108} 
 Player 2 02:27:27 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:27:27 $ACTION_MASSAGE_REMOVE:  

 {"id":103} 
 Player 2 02:27:30 $ACTION_MASSAGE_REMOVE:  

 {"id":108} 
 Player 2 02:27:34 $ACTION_MASSAGE_REMOVE:  

 {"id":110} 
 Player 2 02:27:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":111,"_text":"Wait For Response From Player 1 "},"childOfId":108} 
 Player 2 02:27:34 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:27:34 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:27:34 $ACTION_MASSAGE_REMOVE:  

 {"id":111} 
 Player 2 02:27:34 $ACTION_MASSAGE_REMOVE:  

 {"id":109} 
 Player 2 02:27:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":112,"_text":"Resolve RefillEmptySlot 14 "}} 
 Player 2 02:27:34 $ACTION_MASSAGE_REMOVE:  

 {"id":92} 
 Player 2 02:27:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die"} 
 Player 2 02:27:34 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":14,"creatorCardId":272,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 
 Player 2 02:27:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":113,"_text":"Remove After Resolve RefillEmptySlot 14  "}} 
 Player 2 02:27:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die"} 
 Player 2 02:27:34 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":14,"creatorCardId":272,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 
 Player 2 02:27:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":114,"_text":"Response Remove After Resolve RefillEmptySlot 14"},"childOfId":113} 
 Player 2 02:27:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":115,"_text":"Wait For Response From Player 1 "},"childOfId":113} 
 Player 2 02:27:34 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:27:34 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:27:34 $ACTION_MASSAGE_REMOVE:  

 {"id":115} 
 Player 2 02:27:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":116,"_text":"Wait For Response From Player 2 "},"childOfId":113} 
 Player 2 02:27:34 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:27:37 $ACTION_MASSAGE_REMOVE:  

 {"id":113} 
 Player 2 02:27:40 $ACTION_MASSAGE_REMOVE:  

 {"id":116} 
 Player 2 02:27:40 $ACTION_MASSAGE_REMOVE:  

 {"id":114} 
 Player 2 02:27:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":117,"_text":"Resolve PlayerDeath 13 "}} 
 Player 2 02:27:40 $NEXT_STACK_ID:  
 Player 2 02:27:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die"} 
 Player 2 02:27:40 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:27:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die \n4:Player 2 is about to pay death penalties"} 
 Player 2 02:27:40 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":17,"creatorCardId":272,"playerToPayCardId":272,"stackEffectType":16}} 
 Player 2 02:27:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die \n4:Player 2 is about to pay death penalties"} 
 Player 2 02:27:40 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":11,"creatorCardId":272,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 
 Player 2 02:27:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die \n4:Player 2 is about to pay death penalties"} 
 Player 2 02:27:40 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":13,"creatorCardId":272,"playerToDieCardId":272,"stackEffectType":15,"killerId":256}} 
 Player 2 02:27:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die \n4:Player 2 is about to pay death penalties"} 
 Player 2 02:27:40 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":11,"creatorCardId":272,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 
 Player 2 02:27:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die \n4:Player 2 is about to pay death penalties"} 
 Player 2 02:27:41 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":12,"creatorCardId":272,"hasLockingStackEffect":false,"itemToPlayCardId":256,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 02:27:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die \n4:Player 2 is about to pay death penalties"} 
 Player 2 02:27:41 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":13,"creatorCardId":272,"playerToDieCardId":272,"stackEffectType":15,"killerId":256}} 
 Player 2 02:27:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die \n4:Player 2 is about to pay death penalties"} 
 Player 2 02:27:41 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":17,"creatorCardId":272,"playerToPayCardId":272,"stackEffectType":16}} 
 Player 2 02:27:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die \n4:Player 2 is about to pay death penalties"} 
 Player 2 02:27:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die \n4:Player 2 is about to pay death penalties"} 
 Player 2 02:27:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die \n4:Player 2 is about to pay death penalties"} 
 Player 2 02:27:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die \n4:Player 2 is about to pay death penalties"} 
 Player 2 02:27:41 $REPLACE_STACK:  

 {"currentStack":[{"entityId":11,"creatorCardId":272,"slotType":2,"slotToFillId":2,"stackEffectType":10},{"entityId":12,"creatorCardId":272,"hasLockingStackEffect":false,"itemToPlayCardId":256,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1},{"entityId":13,"creatorCardId":272,"playerToDieCardId":272,"stackEffectType":15,"killerId":256},{"entityId":17,"creatorCardId":272,"playerToPayCardId":272,"stackEffectType":16}]} 
 Player 2 02:27:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die \n4:Player 2 is about to pay death penalties"} 
 Player 2 02:27:41 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":13,"creatorCardId":272,"playerToDieCardId":272,"stackEffectType":15,"killerId":256}} 
 Player 2 02:27:41 $ACTION_MASSAGE_REMOVE:  

 {"id":117} 
 Player 2 02:27:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to pay death penalties"} 
 Player 2 02:27:41 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":13,"creatorCardId":272,"playerToDieCardId":272,"stackEffectType":15,"killerId":256}} 
 Player 2 02:27:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":118,"_text":"Remove After Resolve PlayerDeath 13  "}} 
 Player 2 02:27:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to pay death penalties"} 
 Player 2 02:27:41 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":13,"creatorCardId":272,"playerToDieCardId":272,"stackEffectType":15,"killerId":256}} 
 Player 2 02:27:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":119,"_text":"Response Remove After Resolve PlayerDeath 13"},"childOfId":118} 
 Player 2 02:27:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":120,"_text":"Wait For Response From Player 2 "},"childOfId":118} 
 Player 2 02:27:41 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:27:43 $ACTION_MASSAGE_REMOVE:  

 {"id":118} 
 Player 2 02:27:53 $ACTION_MASSAGE_REMOVE:  

 {"id":120} 
 Player 2 02:27:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":121,"_text":"Wait For Response From Player 1 "},"childOfId":118} 
 Player 2 02:27:53 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:27:53 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:27:53 $ACTION_MASSAGE_REMOVE:  

 {"id":121} 
 Player 2 02:27:53 $ACTION_MASSAGE_REMOVE:  

 {"id":119} 
 Player 2 02:27:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":122,"_text":"Resolve PlayerDeathPenalties 17 "}} 
 Player 2 02:27:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":123,"_text":"Player 2 pays Penalties"}} 
 Player 2 02:36:16 $MATCH: 