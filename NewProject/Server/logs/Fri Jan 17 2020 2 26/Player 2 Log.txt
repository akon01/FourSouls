Start Log 
 Player 2 02:26:54 $MOVE_TO_TABLE:  
 Player 2 02:27:02 $FINISH_LOAD:  

 {"id":2,"turnPlayerId":2} 
 Player 2 02:27:02 $ASSIGN_CHAR_TO_PLAYER:  

 {"playerId":1,"charCardId":291,"itemCardId":292} 
 Player 2 02:27:02 $CHOOSE_FOR_EDEN:  

 {"playerId":2,"originPlayerId":2} 
 Player 2 02:27:02 $DECK_ARRAGMENT:  

 {"deckType":5,"arrangement":[176,164,161,155,216,186,184,219,206,181,159,165,212,157,169,192,160,209,150,187,172,215,196,204,208,185,183,147,173,180,207,182,220,151,195,148,218,156,168,203,158,179,177,149,201,162,174,191,175,210,217,167,194,199,202,166,152,190,197,153,211,178,154,171,198,163,214,145,189,146,170,200,193,213,188,205]} 
 Player 2 02:27:06 $EDEN_CHOSEN:  

 {"cardId":176,"playerId":2} 
 Player 2 02:27:06 $DECK_ARRAGMENT:  

 {"deckType":5,"arrangement":[164,161,155,216,186,184,219,206,181,159,165,212,157,169,192,160,209,150,187,172,215,196,204,208,185,183,147,173,180,207,182,220,151,195,148,218,156,168,203,158,179,177,149,201,162,174,191,175,210,217,167,194,199,202,166,152,190,197,153,211,178,154,171,198,163,214,145,189,146,170,200,193,213,188,205]} 
 Player 2 02:27:06 $FLIP_CARD:  

 {"cardId":176} 
 Player 2 02:27:06 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":176}],"result":true,"preventMethod":false,"methodScopeId":283,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 02:27:06 $ASSIGN_CHAR_TO_PLAYER:  

 {"playerId":2,"charCardId":283,"itemCardId":176} 
 Player 2 02:27:06 $DECK_ARRAGMENT:  

 {"deckType":1,"arrangement":[37,48,12,14,80,136,81,121,107,62,23,36,18,35,78,90,106,131,75,53,32,94,72,120,66,24,46,114,56,125,98,141,8,16,115,96,59,108,101,128,63,10,13,111,28,93,26,52,58,110,76,38,44,124,82,11,64,7,109,65,91,87,39,139,130,99,132,129,43,73,104,95,45,134,69,29,84,97,79,51,60,138,74,112,25,117,34,71,142,133,105,140,22,21,17,100,55,42,83,77,15,41,20,123,119,31,50,9,54,137,30,61,135,33,70,103,126,88,47,118,40,116,86,92,127,113,67,49,102,27,122,85,57,68,19,89]} 
 Player 2 02:27:06 $DECK_ARRAGMENT:  

 {"deckType":2,"arrangement":[224,229,253,247,238,256,235,260,257,228,272,267,263,241,242,258,223,237,261,266,251,268,264,259,230,232,244,255,246,265,276,239,271,231,245,274,273,233,254,250,252,269,226,270,275,240,234,243,249,227,236,248,262,225]} 
 Player 2 02:27:06 $DECK_ARRAGMENT:  

 {"deckType":5,"arrangement":[204,193,211,187,180,218,156,199,148,216,162,165,214,206,195,188,192,171,168,146,213,170,186,194,153,182,210,197,205,145,208,196,183,179,209,185,190,215,191,151,184,166,177,163,158,155,212,202,219,172,169,173,152,150,217,207,160,147,149,189,159,181,200,174,198,157,154,201,203,175,164,167,178,161,220]} 
 Player 2 02:27:06 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 02:27:06 $FLIP_CARD:  

 {"cardId":220} 
 Player 2 02:27:06 $ADD_STORE_CARD:  

 {"cardId":220} 
 Player 2 02:27:06 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 02:27:06 $FLIP_CARD:  

 {"cardId":161} 
 Player 2 02:27:06 $ADD_STORE_CARD:  

 {"cardId":161} 
 Player 2 02:27:06 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 02:27:06 $FLIP_CARD:  

 {"cardId":225} 
 Player 2 02:27:06 $ADD_MONSTER:  

 {"monsterPlaceId":1,"monsterId":225} 
 Player 2 02:27:06 $NEW_MONSTER_ON_PLACE:  

 {"cardId":225,"monsterPlaceId":1} 
 Player 2 02:27:06 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 02:27:06 $DECK_ADD_TO_BOTTOM:  

 {"deckType":2,"cardId":262} 
 Player 2 02:27:07 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 02:27:07 $FLIP_CARD:  

 {"cardId":248} 
 Player 2 02:27:07 $ADD_MONSTER:  

 {"monsterPlaceId":2,"monsterId":248} 
 Player 2 02:27:07 $NEW_MONSTER_ON_PLACE:  

 {"cardId":248,"monsterPlaceId":2} 
 Player 2 02:27:07 $SET_MONEY:  

 {"playerId":1,"numOfCoins":3} 
 Player 2 02:27:07 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":291,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 2 02:27:07 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 02:27:07 $MOVE_CARD:  

 {"moveIndex":1,"cardId":89,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 02:27:07 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":89} 
 Player 2 02:27:07 $FLIP_CARD:  

 {"cardId":89} 
 Player 2 02:27:07 $FLIP_CARD:  

 {"cardId":89} 
 Player 2 02:27:07 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":89} 
 Player 2 02:27:07 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 02:27:07 $MOVE_CARD:  

 {"moveIndex":2,"cardId":19,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 02:27:08 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":19} 
 Player 2 02:27:08 $FLIP_CARD:  

 {"cardId":19} 
 Player 2 02:27:08 $FLIP_CARD:  

 {"cardId":19} 
 Player 2 02:27:08 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":19} 
 Player 2 02:27:08 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 02:27:08 $MOVE_CARD:  

 {"moveIndex":3,"cardId":68,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 02:27:08 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":68} 
 Player 2 02:27:08 $FLIP_CARD:  

 {"cardId":68} 
 Player 2 02:27:08 $FLIP_CARD:  

 {"cardId":68} 
 Player 2 02:27:08 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":68} 
 Player 2 02:27:08 $SET_MONEY:  

 {"playerId":2,"numOfCoins":3} 
 Player 2 02:27:08 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":283,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Player 2 02:27:08 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 02:27:08 $MOVE_CARD:  

 {"moveIndex":4,"cardId":57,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 02:27:09 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":57} 
 Player 2 02:27:09 $FLIP_CARD:  

 {"cardId":57} 
 Player 2 02:27:09 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":57} 
 Player 2 02:27:09 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 02:27:09 $MOVE_CARD:  

 {"moveIndex":5,"cardId":85,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 02:27:09 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":85} 
 Player 2 02:27:09 $FLIP_CARD:  

 {"cardId":85} 
 Player 2 02:27:09 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":85} 
 Player 2 02:27:09 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 02:27:09 $MOVE_CARD:  

 {"moveIndex":6,"cardId":122,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 02:27:10 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":122} 
 Player 2 02:27:10 $FLIP_CARD:  

 {"cardId":122} 
 Player 2 02:27:10 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":122} 
 Player 2 02:27:10 $GAME_HAS_STARTED:  
 Player 2 02:27:10 $SET_TURN:  

 {"playerId":1} 
 Player 2 02:27:10 $START_TURN:  

 {"playerId":1} 
 Player 2 02:27:10 $UPDATE_ACTIONS:  
 Player 2 02:27:10 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:27:10 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:27:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 02:27:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 02:27:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 02:27:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 02:27:10 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 02:27:11 $MOVE_CARD_END:  

 {"moveIndex":7,"cardId":27,"flipIfFlipped":false,"playerId":1} 
 Player 2 02:27:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 02:27:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 02:27:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 02:27:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 02:27:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 02:27:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 02:27:12 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 02:27:12 $MOVE_CARD:  

 {"moveIndex":8,"cardId":161,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 
 Player 2 02:27:12 $REGISTER_PASSIVE_ITEM:  

 {"cardId":161} 
 Player 2 02:27:12 $MOVE_CARD:  

 {"moveIndex":9,"cardId":161,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 
 Player 2 02:27:13 $ADD_AN_ITEM:  

 {"playerId":2,"cardId":161,"isReward":true} 
 Player 2 02:27:13 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":161}],"result":true,"preventMethod":false,"methodScopeId":283,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 
 Player 2 02:27:21 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:27:22 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:27:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Holy Dinga"} 
 Player 2 02:27:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Holy Dinga"} 
 Player 2 02:27:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Holy Dinga"} 
 Player 2 02:27:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Holy Dinga"} 
 Player 2 02:27:22 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 02:27:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Holy Dinga"} 
 Player 2 02:27:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Holy Dinga"} 
 Player 2 02:27:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Holy Dinga"} 
 Player 2 02:27:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Holy Dinga"} 
 Player 2 02:27:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Holy Dinga"} 
 Player 2 02:27:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Holy Dinga"} 
 Player 2 02:27:22 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 02:27:28 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:27:28 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:27:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster>"} 
 Player 2 02:27:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster>"} 
 Player 2 02:27:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster>"} 
 Player 2 02:27:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster>"} 
 Player 2 02:27:30 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 02:27:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster>"} 
 Player 2 02:27:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster>"} 
 Player 2 02:27:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:27:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:27:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:27:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:27:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:27:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:27:31 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[291],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":283,"effectCardPlayer":283},"entityId":4,"creatorCardId":283,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":161,"effectToDo":{"effectName":"LookAtPlayerHand","cardEffectNum":0,"cardPlayerId":2,"cardId":161,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 02:27:31 $END_PUT_ON_STACK:  

 {"playerId":1} 
 Player 2 02:27:31 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 02:27:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:27:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:27:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:27:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:27:31 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":161,"particleType":6} 
 Player 2 02:27:33 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":161,"particleType":6} 
 Player 2 02:27:42 $PLAYER_LOSE_LOOT:  

 {"playerId":2,"cardId":283} 
 Player 2 02:27:42 $MOVE_CARD:  

 {"moveIndex":10,"cardId":283,"placeID":1,"flipIfFlipped":false,"playerId":2,"placeType":"Hand"} 
 Player 2 02:27:42 $FLIP_CARD:  

 {"cardId":283} 
 Player 2 02:27:42 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":283} 
 Player 2 02:27:43 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":{"type":2,"number":3}},{"type":2,"number":{"type":2,"number":2}},{"type":2,"number":{"type":2,"number":3}}],"result":null,"preventMethod":false,"methodScopeId":291,"scopeIsPlayer":false,"index":1},"isAfterActivation":false,"index":1} 
 Player 2 02:27:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:27:43 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[291],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":283,"effectCardPlayer":283},"entityId":4,"creatorCardId":283,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":161,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 02:27:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:27:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:27:43 $FINISH_DO_STACK_EFFECT:  

 {"playerId":1,"newStack":[{"entityId":3,"creatorCardId":291,"numberRolled":6,"rollingPlayerCardId":291,"stackEffectType":2,"attackedMonsterCardId":248},{"effectCollectedData":{"effectTargets":[291],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":283,"effectCardPlayer":283},"entityId":4,"creatorCardId":283,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":161,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}]} 
 Player 2 02:27:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:27:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:27:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:27:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:27:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:27:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:27:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:27:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:27:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:27:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:27:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:27:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:27:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:27:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:27:44 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 02:27:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster>"} 
 Player 2 02:27:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster>"} 
 Player 2 02:27:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 2 02:27:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 2 02:27:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 2 02:27:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 2 02:27:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 2 02:27:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 2 02:27:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 2 02:27:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 2 02:27:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 2 02:27:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 2 02:27:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:Player 1 is rolling against Holy Dinga<Monster>"} 
 Player 2 02:27:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:Player 1 is rolling against Holy Dinga<Monster>"} 
 Player 2 02:27:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:Player 1 is rolling against Holy Dinga<Monster>"} 
 Player 2 02:27:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:Player 1 is rolling against Holy Dinga<Monster>"} 
 Player 2 02:27:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:Player 1 is rolling against Holy Dinga<Monster>"} 
 Player 2 02:27:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:Player 1 is rolling against Holy Dinga<Monster>"} 
 Player 2 02:27:45 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 02:27:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 2 02:27:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 2 02:27:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 2 02:27:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 2 02:27:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 2 02:27:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 2 02:27:46 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 02:28:49 $MATCH: 