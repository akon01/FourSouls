Start Log 
 Player 1 02:26:54 $START_GAME:  
 Player 1 02:26:54 $MOVE_TO_TABLE:  
 Player 1 02:27:02 $FINISH_LOAD:  

 {"id":1,"turnPlayerId":2} 
 Player 1 02:27:02 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":292}],"result":true,"preventMethod":false,"methodScopeId":291,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 1 02:27:07 $MOVE_CARD_END:  

 {"moveIndex":1,"cardId":89,"flipIfFlipped":false,"playerId":2} 
 Player 1 02:27:08 $MOVE_CARD_END:  

 {"moveIndex":2,"cardId":19,"flipIfFlipped":false,"playerId":2} 
 Player 1 02:27:08 $MOVE_CARD_END:  

 {"moveIndex":3,"cardId":68,"flipIfFlipped":false,"playerId":2} 
 Player 1 02:27:09 $MOVE_CARD_END:  

 {"moveIndex":4,"cardId":57,"flipIfFlipped":false,"playerId":2} 
 Player 1 02:27:09 $MOVE_CARD_END:  

 {"moveIndex":5,"cardId":85,"flipIfFlipped":false,"playerId":2} 
 Player 1 02:27:10 $MOVE_CARD_END:  

 {"moveIndex":6,"cardId":122,"flipIfFlipped":false,"playerId":2} 
 Player 1 02:27:10 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:27:10 $NEXT_STACK_ID:  
 Player 1 02:27:10 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:27:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 02:27:10 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":291,"turnPlayerCardId":291,"stackEffectType":13}} 
 Player 1 02:27:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 02:27:10 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":1,"creatorCardId":291,"turnPlayerCardId":291,"stackEffectType":13}} 
 Player 1 02:27:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 
 Player 1 02:27:10 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:27:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 02:27:10 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":291,"turnPlayerCardId":291,"stackEffectType":13}} 
 Player 1 02:27:10 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 1 02:27:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 
 Player 1 02:27:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 1 02:27:10 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:27:10 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 1 02:27:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 1 02:27:10 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 02:27:10 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 02:27:10 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 1 02:27:10 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 1 02:27:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 
 Player 1 02:27:11 $DRAW_CARD:  

 {"deckType":1} 
 Player 1 02:27:11 $MOVE_CARD:  

 {"moveIndex":7,"cardId":27,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 1 02:27:11 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":27} 
 Player 1 02:27:11 $FLIP_CARD:  

 {"cardId":27} 
 Player 1 02:27:11 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":27} 
 Player 1 02:27:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 02:27:11 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":291,"turnPlayerCardId":291,"stackEffectType":13}} 
 Player 1 02:27:11 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 1 02:27:11 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:27:11 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":1,"creatorCardId":291,"turnPlayerCardId":291,"stackEffectType":13}} 
 Player 1 02:27:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 
 Player 1 02:27:11 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:27:11 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":291,"turnPlayerCardId":291,"stackEffectType":13}} 
 Player 1 02:27:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 
 Player 1 02:27:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Player 1 02:27:12 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 02:27:12 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 02:27:12 $ACTION_MASSAGE_REMOVE:  

 {"id":7} 
 Player 1 02:27:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Player 1 02:27:12 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:27:12 $ACTION_MASSAGE_REMOVE:  

 {"id":8} 
 Player 1 02:27:12 $ACTION_MASSAGE_REMOVE:  

 {"id":6} 
 Player 1 02:27:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":9,"_text":"Stack Was Emptied "}} 
 Player 1 02:27:12 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:27:12 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 1 02:27:12 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 1 02:27:12 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 1 02:27:12 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 1 02:27:12 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 1 02:27:12 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 1 02:27:12 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 1 02:27:12 $MOVE_CARD_END:  

 {"moveIndex":8,"cardId":161,"flipIfFlipped":true,"playerId":2} 
 Player 1 02:27:13 $MOVE_CARD_END:  

 {"moveIndex":9,"cardId":161,"flipIfFlipped":true,"playerId":2} 
 Player 1 02:27:13 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 1 02:27:14 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 1 02:27:18 $SHOW_DECISION:  

 {"startCardId":291,"endCardId":248} 
 Player 1 02:27:21 $NEXT_STACK_ID:  
 Player 1 02:27:21 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:27:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Holy Dinga"} 
 Player 1 02:27:21 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":291,"attackingPlayerCardId":291,"idOfCardBeingAttacked":248,"stackEffectType":4}} 
 Player 1 02:27:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Holy Dinga"} 
 Player 1 02:27:21 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":2,"creatorCardId":291,"attackingPlayerCardId":291,"idOfCardBeingAttacked":248,"stackEffectType":4}} 
 Player 1 02:27:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":10,"_text":"Add DeclareAttack 2 "}} 
 Player 1 02:27:21 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:27:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Holy Dinga"} 
 Player 1 02:27:21 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":291,"attackingPlayerCardId":291,"idOfCardBeingAttacked":248,"stackEffectType":4}} 
 Player 1 02:27:21 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 1 02:27:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":11,"_text":"Response Adding DeclareAttack 2"},"childOfId":10} 
 Player 1 02:27:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 
 Player 1 02:27:21 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:27:21 $ACTION_MASSAGE_REMOVE:  

 {"id":12} 
 Player 1 02:27:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 
 Player 1 02:27:21 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 02:27:21 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 02:27:22 $ACTION_MASSAGE_REMOVE:  

 {"id":13} 
 Player 1 02:27:22 $ACTION_MASSAGE_REMOVE:  

 {"id":11} 
 Player 1 02:27:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":14,"_text":"Resolve DeclareAttack 2 "}} 
 Player 1 02:27:22 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":248,"particleType":5} 
 Player 1 02:27:22 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":291,"scopeIsPlayer":true,"index":2,"originStackId":2},"isAfterActivation":true,"index":2} 
 Player 1 02:27:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Holy Dinga"} 
 Player 1 02:27:22 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":291,"attackingPlayerCardId":291,"idOfCardBeingAttacked":248,"stackEffectType":4}} 
 Player 1 02:27:22 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 1 02:27:22 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:27:22 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":2,"creatorCardId":291,"attackingPlayerCardId":291,"idOfCardBeingAttacked":248,"stackEffectType":4}} 
 Player 1 02:27:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":15,"_text":"Remove After Resolve DeclareAttack 2  "}} 
 Player 1 02:27:22 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:27:22 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":291,"attackingPlayerCardId":291,"idOfCardBeingAttacked":248,"stackEffectType":4}} 
 Player 1 02:27:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":16,"_text":"Response Remove After Resolve DeclareAttack 2"},"childOfId":15} 
 Player 1 02:27:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 
 Player 1 02:27:22 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 02:27:22 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 02:27:22 $ACTION_MASSAGE_REMOVE:  

 {"id":17} 
 Player 1 02:27:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 
 Player 1 02:27:22 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:27:22 $ACTION_MASSAGE_REMOVE:  

 {"id":18} 
 Player 1 02:27:22 $ACTION_MASSAGE_REMOVE:  

 {"id":16} 
 Player 1 02:27:23 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":19,"_text":"Stack Was Emptied "}} 
 Player 1 02:27:23 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:27:23 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 1 02:27:23 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 1 02:27:23 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 1 02:27:23 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 1 02:27:23 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 1 02:27:23 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 1 02:27:23 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 1 02:27:23 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 1 02:27:23 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 1 02:27:23 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 1 02:27:23 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 1 02:27:24 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 1 02:27:25 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 1 02:27:28 $NEXT_STACK_ID:  
 Player 1 02:27:28 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:27:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:27:28 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":291,"rollingPlayerCardId":291,"stackEffectType":2,"attackedMonsterCardId":248}} 
 Player 1 02:27:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:27:28 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":291,"rollingPlayerCardId":291,"stackEffectType":2,"attackedMonsterCardId":248}} 
 Player 1 02:27:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":20,"_text":"Add AttackRoll 3 "}} 
 Player 1 02:27:28 $ROLL_DICE:  

 {"playerId":1} 
 Player 1 02:27:29 $ROLL_DICE_ENDED:  

 {"playerId":1,"numberRolled":6} 
 Player 1 02:27:29 $UPDATE_STACK_VIS:  

 {"stackId":3,"text":"player rolled 6 vs Holy Dinga<Monster>"} 
 Player 1 02:27:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 6 vs Holy Dinga<Monster>"} 
 Player 1 02:27:30 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:27:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 6 vs Holy Dinga<Monster>"} 
 Player 1 02:27:30 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":291,"numberRolled":6,"rollingPlayerCardId":291,"stackEffectType":2,"attackedMonsterCardId":248}} 
 Player 1 02:27:30 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 1 02:27:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":21,"_text":"Response Adding AttackRoll 3"},"childOfId":20} 
 Player 1 02:27:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":22,"_text":"Wait For Response From Player 1 "},"childOfId":20} 
 Player 1 02:27:30 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:27:30 $ACTION_MASSAGE_REMOVE:  

 {"id":22} 
 Player 1 02:27:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":23,"_text":"Wait For Response From Player 2 "},"childOfId":20} 
 Player 1 02:27:30 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 02:27:30 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 02:27:30 $ACTION_MASSAGE_REMOVE:  

 {"id":23} 
 Player 1 02:27:30 $ACTION_MASSAGE_REMOVE:  

 {"id":21} 
 Player 1 02:27:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":24,"_text":"Resolve AttackRoll 3 "}} 
 Player 1 02:27:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":25,"_text":"Added 0 to original roll"}} 
 Player 1 02:27:30 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":3},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":291,"scopeIsPlayer":true,"index":1,"originStackId":3},"isAfterActivation":false,"index":1} 
 Player 1 02:27:30 $NEXT_STACK_ID:  
 Player 1 02:27:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 6 vs Holy Dinga<Monster>"} 
 Player 1 02:27:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 6 vs Holy Dinga<Monster> \n2:Activate Dead Bird effect LookAtPlayerHand<LookAtPlayerHand>"} 
 Player 1 02:27:30 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":283,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":161,"effectToDo":{"effectName":"LookAtPlayerHand","cardEffectNum":0,"cardPlayerId":2,"cardId":161,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 02:27:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 6 vs Holy Dinga<Monster> \n2:Activate Dead Bird effect LookAtPlayerHand<LookAtPlayerHand>"} 
 Player 1 02:27:30 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":283,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":161,"effectToDo":{"effectName":"LookAtPlayerHand","cardEffectNum":0,"cardPlayerId":2,"cardId":161,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 02:27:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":26,"_text":"Add ActivatePassiveEffect 4 "}} 
 Player 1 02:27:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 6 vs Holy Dinga<Monster> \n2:Activate Dead Bird effect LookAtPlayerHand<LookAtPlayerHand>"} 
 Player 1 02:27:30 $PUT_ON_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":283,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":161,"effectToDo":{"effectName":"LookAtPlayerHand","cardEffectNum":0,"cardPlayerId":2,"cardId":161,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14},"playerId":2,"originPlayerId":1} 
 Player 1 02:27:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 6 vs Holy Dinga<Monster> \n2:Activate Dead Bird effect LookAtPlayerHand<LookAtPlayerHand>"} 
 Player 1 02:27:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 6 vs Holy Dinga<Monster> \n2:Activate Dead Bird effect LookAtPlayerHand<LookAtPlayerHand>"} 
 Player 1 02:27:31 $ACTION_MASSAGE_REMOVE:  

 {"id":26} 
 Player 1 02:27:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":27,"_text":"Response Adding ActivatePassiveEffect 4"},"childOfId":26} 
 Player 1 02:27:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":26} 
 Player 1 02:27:31 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 02:27:31 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 02:27:31 $ACTION_MASSAGE_REMOVE:  

 {"id":28} 
 Player 1 02:27:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":29,"_text":"Wait For Response From Player 1 "},"childOfId":26} 
 Player 1 02:27:31 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:27:31 $ACTION_MASSAGE_REMOVE:  

 {"id":29} 
 Player 1 02:27:31 $ACTION_MASSAGE_REMOVE:  

 {"id":27} 
 Player 1 02:27:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":30,"_text":"Resolve ActivatePassiveEffect 4 "}} 
 Player 1 02:27:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 6 vs Holy Dinga<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:27:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 6 vs Holy Dinga<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:27:31 $DO_STACK_EFFECT:  

 {"originPlayerId":1,"playerId":2,"currentStack":[{"entityId":3,"creatorCardId":291,"numberRolled":6,"rollingPlayerCardId":291,"stackEffectType":2,"attackedMonsterCardId":248},{"effectCollectedData":{"effectTargets":[291],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":283,"effectCardPlayer":283},"entityId":4,"creatorCardId":283,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":161,"effectToDo":{"effectName":"LookAtPlayerHand","cardEffectNum":0,"cardPlayerId":2,"cardId":161,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}]} 
 Player 1 02:27:33 $ACTION_MASSAGE_REMOVE:  

 {"id":25} 
 Player 1 02:27:42 $MOVE_CARD_END:  

 {"moveIndex":10,"cardId":283,"flipIfFlipped":false,"playerId":2} 
 Player 1 02:27:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 6 vs Holy Dinga<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:27:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 6 vs Holy Dinga<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:27:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 6 vs Holy Dinga<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:27:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 6 vs Holy Dinga<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:27:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 6 vs Holy Dinga<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:27:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 6 vs Holy Dinga<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:27:43 $ACTION_MASSAGE_REMOVE:  

 {"id":30} 
 Player 1 02:27:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:27:43 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":291,"numberRolled":6,"rollingPlayerCardId":291,"stackEffectType":2,"attackedMonsterCardId":248}} 
 Player 1 02:27:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:27:43 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":291,"numberRolled":6,"rollingPlayerCardId":291,"stackEffectType":2,"attackedMonsterCardId":248}} 
 Player 1 02:27:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:27:43 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":283,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":161,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 02:27:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:27:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:27:43 $REPLACE_STACK:  

 {"currentStack":[{"entityId":3,"creatorCardId":291,"numberRolled":6,"rollingPlayerCardId":291,"stackEffectType":2,"attackedMonsterCardId":248},{"effectCollectedData":null,"entityId":4,"creatorCardId":283,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":161,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}]} 
 Player 1 02:27:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:27:43 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":283,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":161,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 02:27:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":31,"_text":"Remove After Resolve ActivatePassiveEffect 4  "}} 
 Player 1 02:27:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:27:43 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":283,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":161,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 02:27:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":32,"_text":"Response Remove After Resolve ActivatePassiveEffect 4"},"childOfId":31} 
 Player 1 02:27:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":31} 
 Player 1 02:27:43 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:27:43 $ACTION_MASSAGE_REMOVE:  

 {"id":33} 
 Player 1 02:27:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":34,"_text":"Wait For Response From Player 2 "},"childOfId":31} 
 Player 1 02:27:43 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 02:27:43 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 02:27:44 $ACTION_MASSAGE_REMOVE:  

 {"id":34} 
 Player 1 02:27:44 $ACTION_MASSAGE_REMOVE:  

 {"id":32} 
 Player 1 02:27:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":35,"_text":"Resolve AttackRoll 3 "}} 
 Player 1 02:27:44 $NEXT_STACK_ID:  
 Player 1 02:27:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:27:44 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:27:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:Player 1 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:27:44 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":5,"creatorCardId":291,"entityToDoDamageCardId":291,"entityToTakeDamageCardId":248,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 02:27:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:Player 1 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:27:44 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":291,"numberRolled":6,"rollingPlayerCardId":291,"stackEffectType":2,"attackedMonsterCardId":248}} 
 Player 1 02:27:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:Player 1 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:27:44 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":5,"creatorCardId":291,"entityToDoDamageCardId":291,"entityToTakeDamageCardId":248,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 02:27:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:Player 1 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:27:44 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":291,"numberRolled":6,"rollingPlayerCardId":291,"stackEffectType":2,"attackedMonsterCardId":248}} 
 Player 1 02:27:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:Player 1 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:27:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:Player 1 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:27:44 $REPLACE_STACK:  

 {"currentStack":[{"entityId":5,"creatorCardId":291,"entityToDoDamageCardId":291,"entityToTakeDamageCardId":248,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":3,"creatorCardId":291,"numberRolled":6,"rollingPlayerCardId":291,"stackEffectType":2,"attackedMonsterCardId":248}]} 
 Player 1 02:27:44 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":{"type":2,"number":{"type":2,"number":3}}},{"type":2,"number":2},{"type":2,"number":{"type":2,"number":{"type":2,"number":3}}}],"result":null,"preventMethod":false,"methodScopeId":291,"scopeIsPlayer":true,"index":1,"originStackId":3},"isAfterActivation":true,"index":1} 
 Player 1 02:27:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:Player 1 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:27:44 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":291,"numberRolled":6,"rollingPlayerCardId":291,"stackEffectType":2,"attackedMonsterCardId":248}} 
 Player 1 02:27:44 $ACTION_MASSAGE_REMOVE:  

 {"id":24} 
 Player 1 02:27:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 1 02:27:44 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":291,"numberRolled":6,"rollingPlayerCardId":291,"stackEffectType":2,"attackedMonsterCardId":248}} 
 Player 1 02:27:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":36,"_text":"Remove After Resolve AttackRoll 3  "}} 
 Player 1 02:27:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 1 02:27:45 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":291,"numberRolled":6,"rollingPlayerCardId":291,"stackEffectType":2,"attackedMonsterCardId":248}} 
 Player 1 02:27:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":37,"_text":"Response Remove After Resolve AttackRoll 3"},"childOfId":36} 
 Player 1 02:27:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":38,"_text":"Wait For Response From Player 1 "},"childOfId":36} 
 Player 1 02:27:45 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:27:45 $ACTION_MASSAGE_REMOVE:  

 {"id":38} 
 Player 1 02:27:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":39,"_text":"Wait For Response From Player 2 "},"childOfId":36} 
 Player 1 02:27:45 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 02:27:45 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 02:27:45 $ACTION_MASSAGE_REMOVE:  

 {"id":39} 
 Player 1 02:27:45 $ACTION_MASSAGE_REMOVE:  

 {"id":37} 
 Player 1 02:27:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":40,"_text":"Resolve CombatDamage 5 "}} 
 Player 1 02:27:45 $UPDATE_STACK_VIS:  

 {"stackId":5,"text":"Samson will deal 1 combat damage to Holy Dinga"} 
 Player 1 02:27:45 $MONSTER_GET_DAMAGED:  

 {"cardId":248,"hpLeft":2,"damageDealerId":291} 
 Player 1 02:27:45 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":291}],"result":null,"preventMethod":false,"methodScopeId":248,"scopeIsPlayer":false,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Player 1 02:27:45 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":{"type":2,"number":{"type":2,"number":3}}},{"type":0,"number":291},{"type":0,"number":248}],"result":null,"preventMethod":false,"methodScopeId":291,"scopeIsPlayer":true,"index":4,"originStackId":5},"isAfterActivation":true,"index":4} 
 Player 1 02:27:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 1 02:27:46 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":5,"creatorCardId":291,"entityToDoDamageCardId":291,"entityToTakeDamageCardId":248,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 02:27:46 $ACTION_MASSAGE_REMOVE:  

 {"id":40} 
 Player 1 02:27:46 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:27:46 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":5,"creatorCardId":291,"entityToDoDamageCardId":291,"entityToTakeDamageCardId":248,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 02:27:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":41,"_text":"Remove After Resolve CombatDamage 5  "}} 
 Player 1 02:27:46 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:27:46 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":5,"creatorCardId":291,"entityToDoDamageCardId":291,"entityToTakeDamageCardId":248,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 02:27:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":42,"_text":"Response Remove After Resolve CombatDamage 5"},"childOfId":41} 
 Player 1 02:27:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":43,"_text":"Wait For Response From Player 2 "},"childOfId":41} 
 Player 1 02:27:46 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 02:27:46 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 02:27:46 $ACTION_MASSAGE_REMOVE:  

 {"id":31} 
 Player 1 02:27:46 $ACTION_MASSAGE_REMOVE:  

 {"id":43} 
 Player 1 02:27:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":44,"_text":"Wait For Response From Player 1 "},"childOfId":41} 
 Player 1 02:27:46 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:27:46 $ACTION_MASSAGE_REMOVE:  

 {"id":44} 
 Player 1 02:27:46 $ACTION_MASSAGE_REMOVE:  

 {"id":42} 
 Player 1 02:27:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":45,"_text":"Stack Was Emptied "}} 
 Player 1 02:27:46 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:27:46 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 1 02:27:46 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 1 02:27:46 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 1 02:27:46 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 1 02:27:46 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 1 02:27:46 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 1 02:27:46 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 1 02:27:47 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 1 02:27:47 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 1 02:27:47 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 1 02:27:47 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 1 02:27:47 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 1 02:27:47 $ACTION_MASSAGE_REMOVE:  

 {"id":24} 
 Player 1 02:27:47 $ACTION_MASSAGE_REMOVE:  

 {"id":25} 
 Player 1 02:27:47 $ACTION_MASSAGE_REMOVE:  

 {"id":26} 
 Player 1 02:27:47 $ACTION_MASSAGE_REMOVE:  

 {"id":30} 
 Player 1 02:27:47 $ACTION_MASSAGE_REMOVE:  

 {"id":31} 
 Player 1 02:27:47 $ACTION_MASSAGE_REMOVE:  

 {"id":35} 
 Player 1 02:27:47 $ACTION_MASSAGE_REMOVE:  

 {"id":36} 
 Player 1 02:27:47 $ACTION_MASSAGE_REMOVE:  

 {"id":40} 
 Player 1 02:27:47 $ACTION_MASSAGE_REMOVE:  

 {"id":41} 
 Player 1 02:27:47 $ACTION_MASSAGE_REMOVE:  

 {"id":45} 
 Player 1 02:27:47 $ACTION_MASSAGE_REMOVE:  

 {"id":36} 
 Player 1 02:27:48 $ACTION_MASSAGE_REMOVE:  

 {"id":45} 
 Player 1 02:27:48 $ACTION_MASSAGE_REMOVE:  

 {"id":41}