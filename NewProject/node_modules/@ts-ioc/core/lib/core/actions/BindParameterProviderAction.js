"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var ActionComposite_1 = require("./ActionComposite");
var CoreActions_1 = require("./CoreActions");
var factories_1 = require("../factories");
var utils_1 = require("../../utils");
/**
 * bind parameters action.
 *
 * @export
 * @class BindParameterProviderAction
 * @extends {ActionComposite}
 */
var BindParameterProviderAction = /** @class */ (function (_super) {
    tslib_1.__extends(BindParameterProviderAction, _super);
    function BindParameterProviderAction() {
        return _super.call(this, CoreActions_1.CoreActions.bindParameterProviders) || this;
    }
    BindParameterProviderAction.prototype.working = function (container, data) {
        if (data.raiseContainer && data.raiseContainer !== container) {
            return;
        }
        var type = data.targetType;
        var propertyKey = data.propertyKey;
        var lifeScope = container.getLifeScope();
        var matchs = lifeScope.getMethodDecorators(type, function (surm) { return surm.actions.includes(CoreActions_1.CoreActions.bindParameterProviders) && factories_1.hasOwnMethodMetadata(surm.name, type); });
        var providers = [];
        matchs.forEach(function (surm) {
            var methodmtas = factories_1.getOwnMethodMetadata(surm.name, type);
            var metadatas = methodmtas[propertyKey];
            if (metadatas && utils_1.isArray(metadatas) && metadatas.length > 0) {
                metadatas.forEach(function (meta) {
                    if (meta.providers && meta.providers.length > 0) {
                        providers = providers.concat(meta.providers);
                    }
                });
            }
        });
        data.execResult = providers;
    };
    BindParameterProviderAction.getClassAnnations = function () {
        return { "name": "BindParameterProviderAction", "params": { "constructor": [], "working": ["container", "data"] } };
    };
    return BindParameterProviderAction;
}(ActionComposite_1.ActionComposite));
exports.BindParameterProviderAction = BindParameterProviderAction;

//# sourceMappingURL=../../sourcemaps/core/actions/BindParameterProviderAction.js.map
