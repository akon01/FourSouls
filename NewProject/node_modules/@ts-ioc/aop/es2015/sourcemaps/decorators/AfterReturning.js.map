{"version":3,"sources":["decorators/AfterReturning.ts"],"names":[],"mappings":";;AAAA,qCAAmE;AAEnE,uCAAwC;AAqBxC;;;;GAIG;AACU,QAAA,cAAc,GACvB,8BAAqB,CACjB,gBAAgB,EAChB,IAAI,EACJ,IAAI,CAAC,EAAE;IACH,IAAI,CAAC,IAAI,CAAyB;QAC9B,KAAK,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,eAAQ,CAAC,GAAG,CAAC;QAC7B,WAAW,EAAE,CAAC,QAAQ,EAAE,GAAG,EAAE,EAAE;YAC3B,QAAQ,CAAC,SAAS,GAAG,GAAG,CAAC;QAC7B,CAAC;KACJ,CAAC,CAAA;AACN,CAAC,CACgD,CAAC","file":"../../decorators/AfterReturning.js","sourcesContent":["import { IAdviceDecorator, createAdviceDecorator } from './Advice';\r\nimport { AfterReturningMetadata } from '../metadatas';\r\nimport { isString } from '@ts-ioc/core';\r\n\r\n/**\r\n * aop after returning decorator.\r\n *\r\n * @export\r\n * @interface IAfterReturningDecorator\r\n * @extends {IAdviceDecorator<T>}\r\n * @template T\r\n */\r\nexport interface IAfterReturningDecorator<T extends AfterReturningMetadata> extends IAdviceDecorator<T> {\r\n    /**\r\n     * define aop after returning advice.\r\n     *\r\n     * @param {(string | RegExp)} [pointcut] define advice match express for pointcut.\r\n     * @param {string} [returning] set name provider of pointcut returing data for advices.\r\n     * @param { string } [annotation] annotation name, special annotation metadata for annotation advices.\r\n     */\r\n    (pointcut?: string | RegExp, returning?: string, annotation?: string): MethodDecorator;\r\n}\r\n\r\n/**\r\n * aop after returning advice decorator.\r\n *\r\n * @AfterReturning\r\n */\r\nexport const AfterReturning: IAfterReturningDecorator<AfterReturningMetadata> =\r\n    createAdviceDecorator<AfterReturningMetadata>(\r\n        'AfterReturning',\r\n        null,\r\n        args => {\r\n            args.next<AfterReturningMetadata>({\r\n                match: (arg) => isString(arg),\r\n                setMetadata: (metadata, arg) => {\r\n                    metadata.returning = arg;\r\n                }\r\n            })\r\n        }\r\n    ) as IAfterReturningDecorator<AfterReturningMetadata>;\r\n"]}