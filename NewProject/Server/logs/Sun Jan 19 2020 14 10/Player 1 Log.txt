Start Log 
 Player 1 14:10:09 $START_GAME:  
 Player 1 14:10:09 $MOVE_TO_TABLE:  
 Player 1 14:10:17 $FINISH_LOAD:  

 {"id":1,"turnPlayerId":2} 
 Player 1 14:10:18 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":285}],"result":true,"preventMethod":false,"methodScopeId":284,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 1 14:10:19 $MOVE_CARD_END:  

 {"moveIndex":1,"cardId":117,"flipIfFlipped":false,"playerId":2} 
 Player 1 14:10:19 $MOVE_CARD_END:  

 {"moveIndex":2,"cardId":94,"flipIfFlipped":false,"playerId":2} 
 Player 1 14:10:20 $MOVE_CARD_END:  

 {"moveIndex":3,"cardId":118,"flipIfFlipped":false,"playerId":2} 
 Player 1 14:10:20 $MOVE_CARD_END:  

 {"moveIndex":4,"cardId":121,"flipIfFlipped":false,"playerId":2} 
 Player 1 14:10:21 $MOVE_CARD_END:  

 {"moveIndex":5,"cardId":66,"flipIfFlipped":false,"playerId":2} 
 Player 1 14:10:21 $MOVE_CARD_END:  

 {"moveIndex":6,"cardId":39,"flipIfFlipped":false,"playerId":2} 
 Player 1 14:10:21 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 14:10:22 $NEXT_STACK_ID:  
 Player 1 14:10:22 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 14:10:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 14:10:22 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":284,"turnPlayerCardId":284,"stackEffectType":13}} 
 Player 1 14:10:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 14:10:22 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":1,"creatorCardId":284,"turnPlayerCardId":284,"stackEffectType":13}} 
 Player 1 14:10:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 
 Player 1 14:10:22 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 14:10:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 14:10:22 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":284,"turnPlayerCardId":284,"stackEffectType":13}} 
 Player 1 14:10:22 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 1 14:10:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 
 Player 1 14:10:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 1 14:10:22 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 14:10:22 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 1 14:10:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 1 14:10:22 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 14:10:22 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 14:10:22 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 1 14:10:22 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 1 14:10:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 
 Player 1 14:10:22 $DRAW_CARD:  

 {"deckType":1} 
 Player 1 14:10:22 $MOVE_CARD:  

 {"moveIndex":7,"cardId":136,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 1 14:10:23 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":136} 
 Player 1 14:10:23 $FLIP_CARD:  

 {"cardId":136} 
 Player 1 14:10:23 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":136} 
 Player 1 14:10:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 14:10:23 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":284,"turnPlayerCardId":284,"stackEffectType":13}} 
 Player 1 14:10:23 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 1 14:10:23 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 14:10:23 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":1,"creatorCardId":284,"turnPlayerCardId":284,"stackEffectType":13}} 
 Player 1 14:10:23 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 
 Player 1 14:10:23 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 14:10:23 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":284,"turnPlayerCardId":284,"stackEffectType":13}} 
 Player 1 14:10:23 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 
 Player 1 14:10:23 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Player 1 14:10:23 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 14:10:23 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 14:10:23 $ACTION_MASSAGE_REMOVE:  

 {"id":7} 
 Player 1 14:10:23 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Player 1 14:10:23 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 14:10:23 $ACTION_MASSAGE_REMOVE:  

 {"id":8} 
 Player 1 14:10:24 $ACTION_MASSAGE_REMOVE:  

 {"id":6} 
 Player 1 14:10:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":9,"_text":"Stack Was Emptied "}} 
 Player 1 14:10:24 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 14:10:24 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 1 14:10:24 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 1 14:10:24 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 1 14:10:24 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 1 14:10:24 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 1 14:10:24 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 1 14:10:24 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 1 14:10:25 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 1 14:10:26 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 1 14:10:37 $SHOW_DECISION:  

 {"startCardId":284,"endCardId":229} 
 Player 1 14:10:40 $NEXT_STACK_ID:  
 Player 1 14:10:40 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 14:10:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Begotten"} 
 Player 1 14:10:40 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":284,"attackingPlayerCardId":284,"idOfCardBeingAttacked":229,"stackEffectType":4}} 
 Player 1 14:10:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Begotten"} 
 Player 1 14:10:40 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":2,"creatorCardId":284,"attackingPlayerCardId":284,"idOfCardBeingAttacked":229,"stackEffectType":4}} 
 Player 1 14:10:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":10,"_text":"Add DeclareAttack 2 "}} 
 Player 1 14:10:40 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 14:10:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Begotten"} 
 Player 1 14:10:40 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":284,"attackingPlayerCardId":284,"idOfCardBeingAttacked":229,"stackEffectType":4}} 
 Player 1 14:10:40 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 1 14:10:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":11,"_text":"Response Adding DeclareAttack 2"},"childOfId":10} 
 Player 1 14:10:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 
 Player 1 14:10:40 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 14:10:40 $ACTION_MASSAGE_REMOVE:  

 {"id":12} 
 Player 1 14:10:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 
 Player 1 14:10:40 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 14:10:40 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 14:10:40 $ACTION_MASSAGE_REMOVE:  

 {"id":13} 
 Player 1 14:10:41 $ACTION_MASSAGE_REMOVE:  

 {"id":11} 
 Player 1 14:10:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":14,"_text":"Resolve DeclareAttack 2 "}} 
 Player 1 14:10:41 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":229,"particleType":5} 
 Player 1 14:10:41 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":284,"scopeIsPlayer":true,"index":2,"originStackId":2},"isAfterActivation":true,"index":2} 
 Player 1 14:10:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Begotten"} 
 Player 1 14:10:41 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":284,"attackingPlayerCardId":284,"idOfCardBeingAttacked":229,"stackEffectType":4}} 
 Player 1 14:10:41 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 1 14:10:41 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 14:10:41 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":2,"creatorCardId":284,"attackingPlayerCardId":284,"idOfCardBeingAttacked":229,"stackEffectType":4}} 
 Player 1 14:10:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":15,"_text":"Remove After Resolve DeclareAttack 2  "}} 
 Player 1 14:10:41 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 14:10:41 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":284,"attackingPlayerCardId":284,"idOfCardBeingAttacked":229,"stackEffectType":4}} 
 Player 1 14:10:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":16,"_text":"Response Remove After Resolve DeclareAttack 2"},"childOfId":15} 
 Player 1 14:10:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 
 Player 1 14:10:41 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 14:10:41 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 14:10:41 $ACTION_MASSAGE_REMOVE:  

 {"id":17} 
 Player 1 14:10:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 
 Player 1 14:10:41 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 14:10:41 $ACTION_MASSAGE_REMOVE:  

 {"id":18} 
 Player 1 14:10:41 $ACTION_MASSAGE_REMOVE:  

 {"id":16} 
 Player 1 14:10:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":19,"_text":"Stack Was Emptied "}} 
 Player 1 14:10:41 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 14:10:41 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 1 14:10:42 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 1 14:10:42 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 1 14:10:42 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 1 14:10:42 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 1 14:10:42 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 1 14:10:42 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 1 14:10:42 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 1 14:10:42 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 1 14:10:42 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 1 14:10:42 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 1 14:10:42 $NEXT_STACK_ID:  
 Player 1 14:10:42 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 14:10:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Begotten<Monster>"} 
 Player 1 14:10:42 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":284,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":229}} 
 Player 1 14:10:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Begotten<Monster>"} 
 Player 1 14:10:42 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":284,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":229}} 
 Player 1 14:10:42 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":20,"_text":"Add AttackRoll 3 "}} 
 Player 1 14:10:42 $ROLL_DICE:  

 {"playerId":1} 
 Player 1 14:10:43 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 1 14:10:43 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 1 14:10:44 $ROLL_DICE_ENDED:  

 {"playerId":1,"numberRolled":1} 
 Player 1 14:10:44 $UPDATE_STACK_VIS:  

 {"stackId":3,"text":"player rolled 1 vs Begotten<Monster>"} 
 Player 1 14:10:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 1 vs Begotten<Monster>"} 
 Player 1 14:10:44 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 14:10:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 1 vs Begotten<Monster>"} 
 Player 1 14:10:44 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":284,"numberRolled":1,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":229}} 
 Player 1 14:10:44 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 1 14:10:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":21,"_text":"Response Adding AttackRoll 3"},"childOfId":20} 
 Player 1 14:10:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":22,"_text":"Wait For Response From Player 1 "},"childOfId":20} 
 Player 1 14:10:44 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 14:10:44 $ACTION_MASSAGE_REMOVE:  

 {"id":22} 
 Player 1 14:10:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":23,"_text":"Wait For Response From Player 2 "},"childOfId":20} 
 Player 1 14:10:44 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 14:10:44 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 14:10:45 $ACTION_MASSAGE_REMOVE:  

 {"id":23} 
 Player 1 14:10:45 $ACTION_MASSAGE_REMOVE:  

 {"id":21} 
 Player 1 14:10:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":24,"_text":"Resolve AttackRoll 3 "}} 
 Player 1 14:10:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":25,"_text":"Added 0 to original roll"}} 
 Player 1 14:10:45 $NEXT_STACK_ID:  
 Player 1 14:10:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 1 vs Begotten<Monster>"} 
 Player 1 14:10:45 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 14:10:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Begotten combat damage to Blue Baby \n2:Player 1 rolled 1 vs Begotten<Monster>"} 
 Player 1 14:10:45 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":4,"creatorCardId":284,"entityToDoDamageCardId":229,"entityToTakeDamageCardId":284,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 14:10:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Begotten combat damage to Blue Baby \n2:Player 1 rolled 1 vs Begotten<Monster>"} 
 Player 1 14:10:45 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":284,"numberRolled":1,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":229}} 
 Player 1 14:10:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Begotten combat damage to Blue Baby \n2:Player 1 rolled 1 vs Begotten<Monster>"} 
 Player 1 14:10:45 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":4,"creatorCardId":284,"entityToDoDamageCardId":229,"entityToTakeDamageCardId":284,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 14:10:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Begotten combat damage to Blue Baby \n2:Player 1 rolled 1 vs Begotten<Monster>"} 
 Player 1 14:10:45 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":284,"numberRolled":1,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":229}} 
 Player 1 14:10:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Begotten combat damage to Blue Baby \n2:Player 1 rolled 1 vs Begotten<Monster>"} 
 Player 1 14:10:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Begotten combat damage to Blue Baby \n2:Player 1 rolled 1 vs Begotten<Monster>"} 
 Player 1 14:10:45 $REPLACE_STACK:  

 {"currentStack":[{"entityId":4,"creatorCardId":284,"entityToDoDamageCardId":229,"entityToTakeDamageCardId":284,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":3,"creatorCardId":284,"numberRolled":1,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":229}]} 
 Player 1 14:10:45 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":284,"scopeIsPlayer":true,"index":3,"originStackId":3},"isAfterActivation":true,"index":3} 
 Player 1 14:10:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Begotten combat damage to Blue Baby \n2:Player 1 rolled 1 vs Begotten<Monster>"} 
 Player 1 14:10:45 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":284,"numberRolled":1,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":229}} 
 Player 1 14:10:45 $ACTION_MASSAGE_REMOVE:  

 {"id":24} 
 Player 1 14:10:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Begotten combat damage to Blue Baby"} 
 Player 1 14:10:45 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":284,"numberRolled":1,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":229}} 
 Player 1 14:10:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":26,"_text":"Remove After Resolve AttackRoll 3  "}} 
 Player 1 14:10:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Begotten combat damage to Blue Baby"} 
 Player 1 14:10:45 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":284,"numberRolled":1,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":229}} 
 Player 1 14:10:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":27,"_text":"Response Remove After Resolve AttackRoll 3"},"childOfId":26} 
 Player 1 14:10:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":28,"_text":"Wait For Response From Player 1 "},"childOfId":26} 
 Player 1 14:10:45 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 14:10:45 $ACTION_MASSAGE_REMOVE:  

 {"id":28} 
 Player 1 14:10:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":29,"_text":"Wait For Response From Player 2 "},"childOfId":26} 
 Player 1 14:10:46 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 14:10:46 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 14:10:46 $ACTION_MASSAGE_REMOVE:  

 {"id":29} 
 Player 1 14:10:46 $ACTION_MASSAGE_REMOVE:  

 {"id":27} 
 Player 1 14:10:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":30,"_text":"Resolve CombatDamage 4 "}} 
 Player 1 14:10:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Begotten 1 combat damage to Blue Baby"} 
 Player 1 14:10:46 $UPDATE_STACK_VIS:  

 {"stackId":4,"text":"Begotten will deal 1 combat damage to Blue Baby"} 
 Player 1 14:10:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Begotten 1 combat damage to Blue Baby"} 
 Player 1 14:10:46 $PLAYER_GET_HIT:  

 {"playerId":1,"damage":1,"damageDealerId":229} 
 Player 1 14:10:46 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":229}],"result":null,"preventMethod":false,"methodScopeId":284,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 
 Player 1 14:10:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Begotten 1 combat damage to Blue Baby"} 
 Player 1 14:10:46 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":4,"creatorCardId":284,"entityToDoDamageCardId":229,"entityToTakeDamageCardId":284,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 14:10:47 $ACTION_MASSAGE_REMOVE:  

 {"id":30} 
 Player 1 14:10:47 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 14:10:47 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":4,"creatorCardId":284,"entityToDoDamageCardId":229,"entityToTakeDamageCardId":284,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 14:10:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":31,"_text":"Remove After Resolve CombatDamage 4  "}} 
 Player 1 14:10:47 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 14:10:47 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":4,"creatorCardId":284,"entityToDoDamageCardId":229,"entityToTakeDamageCardId":284,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 14:10:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":32,"_text":"Response Remove After Resolve CombatDamage 4"},"childOfId":31} 
 Player 1 14:10:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":33,"_text":"Wait For Response From Player 2 "},"childOfId":31} 
 Player 1 14:10:47 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 14:10:47 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 14:10:47 $ACTION_MASSAGE_REMOVE:  

 {"id":33} 
 Player 1 14:10:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":34,"_text":"Wait For Response From Player 1 "},"childOfId":31} 
 Player 1 14:10:47 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 14:10:47 $ACTION_MASSAGE_REMOVE:  

 {"id":34} 
 Player 1 14:10:47 $ACTION_MASSAGE_REMOVE:  

 {"id":32} 
 Player 1 14:10:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":35,"_text":"Stack Was Emptied "}} 
 Player 1 14:10:47 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 14:10:47 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 1 14:10:47 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 1 14:10:47 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 1 14:10:47 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 1 14:10:47 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 1 14:10:47 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 1 14:10:47 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 1 14:10:47 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 1 14:10:48 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 1 14:10:48 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 1 14:10:48 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 1 14:10:48 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 1 14:10:48 $ACTION_MASSAGE_REMOVE:  

 {"id":24} 
 Player 1 14:10:48 $ACTION_MASSAGE_REMOVE:  

 {"id":25} 
 Player 1 14:10:48 $ACTION_MASSAGE_REMOVE:  

 {"id":26} 
 Player 1 14:10:48 $ACTION_MASSAGE_REMOVE:  

 {"id":30} 
 Player 1 14:10:48 $ACTION_MASSAGE_REMOVE:  

 {"id":31} 
 Player 1 14:10:48 $ACTION_MASSAGE_REMOVE:  

 {"id":35} 
 Player 1 14:10:48 $ACTION_MASSAGE_REMOVE:  

 {"id":25} 
 Player 1 14:10:48 $ACTION_MASSAGE_REMOVE:  

 {"id":26} 
 Player 1 14:10:49 $ACTION_MASSAGE_REMOVE:  

 {"id":35} 
 Player 1 14:10:49 $ACTION_MASSAGE_REMOVE:  

 {"id":31}