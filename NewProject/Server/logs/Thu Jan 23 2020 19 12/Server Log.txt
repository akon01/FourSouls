Start Log 

 Player 1 19:12:08 $MATCH:  

 Player 1 19:12:09 $START_GAME:  

 Player 1 19:12:09 $MOVE_TO_TABLE:  

 Player 2 19:12:09 $MOVE_TO_TABLE:  

 Player 1 19:12:18 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 19:12:18 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 2 19:12:18 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":290,"itemCardId":291} 

 Player 2 19:12:18 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":299}],"result":true,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 19:12:18 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":298,"itemCardId":299} 

 Player 2 19:12:19 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[140,28,61,8,34,56,7,95,60,92,103,71,105,115,113,98,84,73,106,40,75,57,59,133,21,119,45,101,86,97,85,54,81,41,127,13,138,125,78,111,66,12,99,122,83,9,31,11,37,88,128,44,135,121,96,32,33,129,72,36,26,68,134,118,120,50,94,82,136,102,25,39,70,90,29,137,48,107,15,24,64,117,55,49,62,77,63,139,51,58,46,93,91,131,114,47,110,65,53,132,38,80,23,69,126,52,124,30,123,35,109,130,16,141,43,142,22,79,27,14,10,100,87,104,20,19,42,108,116,18,67,76,112,74,17,89]} 

 Player 2 19:12:19 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[242,241,276,270,266,236,273,275,259,233,239,261,232,263,268,267,245,265,228,248,238,256,244,255,250,237,252,269,229,281,253,272,279,234,251,254,249,247,274,230,246,243,264,280,235,262,257,231,240,271,278,260,277,258]} 

 Player 2 19:12:19 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[223,147,175,204,156,178,220,146,203,202,217,212,197,181,209,201,184,214,221,218,215,211,193,145,219,166,164,160,224,183,154,186,180,170,168,150,195,173,206,196,225,151,210,179,155,194,171,190,149,176,216,165,182,163,199,222,177,162,152,161,169,198,191,187,174,158,205,148,208,200,188,192,185,207,167,159,213,157,153,189,172]} 

 Player 2 19:12:19 $DRAW_CARD:  
{"deckType":5} 

 Player 2 19:12:19 $FLIP_CARD:  
{"cardId":172} 

 Player 2 19:12:19 $ADD_STORE_CARD:  
{"cardId":172} 

 Player 2 19:12:19 $DRAW_CARD:  
{"deckType":5} 

 Player 2 19:12:19 $FLIP_CARD:  
{"cardId":189} 

 Player 2 19:12:19 $ADD_STORE_CARD:  
{"cardId":189} 

 Player 2 19:12:19 $DRAW_CARD:  
{"deckType":2} 

 Player 2 19:12:19 $FLIP_CARD:  
{"cardId":258} 

 Player 2 19:12:19 $REGISTER_PASSIVE_ITEM:  
{"cardId":258} 

 Player 2 19:12:19 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":258} 

 Player 2 19:12:19 $NEW_MONSTER_ON_PLACE:  
{"cardId":258,"monsterPlaceId":1} 

 Player 2 19:12:19 $DRAW_CARD:  
{"deckType":2} 

 Player 2 19:12:19 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":277} 

 Player 2 19:12:19 $DRAW_CARD:  
{"deckType":2} 

 Player 2 19:12:19 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":260} 

 Player 2 19:12:19 $DRAW_CARD:  
{"deckType":2} 

 Player 2 19:12:19 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":278} 

 Player 2 19:12:19 $DRAW_CARD:  
{"deckType":2} 

 Player 2 19:12:19 $FLIP_CARD:  
{"cardId":271} 

 Player 2 19:12:20 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":271} 

 Player 2 19:12:20 $NEW_MONSTER_ON_PLACE:  
{"cardId":271,"monsterPlaceId":2} 

 Player 2 19:12:20 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 19:12:20 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 19:12:20 $DRAW_CARD:  
{"deckType":1} 

 Player 2 19:12:20 $MOVE_CARD:  
{"moveIndex":1,"cardId":89,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 19:12:20 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":291}],"result":true,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 19:12:20 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":89,"flipIfFlipped":false,"playerId":2} 

 Player 2 19:12:20 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":89} 

 Player 2 19:12:20 $FLIP_CARD:  
{"cardId":89} 

 Player 2 19:12:20 $FLIP_CARD:  
{"cardId":89} 

 Player 2 19:12:20 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":89} 

 Player 2 19:12:20 $DRAW_CARD:  
{"deckType":1} 

 Player 2 19:12:20 $MOVE_CARD:  
{"moveIndex":2,"cardId":17,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 19:12:21 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":17,"flipIfFlipped":false,"playerId":2} 

 Player 2 19:12:21 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":17} 

 Player 2 19:12:21 $FLIP_CARD:  
{"cardId":17} 

 Player 2 19:12:21 $FLIP_CARD:  
{"cardId":17} 

 Player 2 19:12:21 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":17} 

 Player 2 19:12:21 $DRAW_CARD:  
{"deckType":1} 

 Player 2 19:12:21 $MOVE_CARD:  
{"moveIndex":3,"cardId":74,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 19:12:21 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":74,"flipIfFlipped":false,"playerId":2} 

 Player 2 19:12:21 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":74} 

 Player 2 19:12:21 $FLIP_CARD:  
{"cardId":74} 

 Player 2 19:12:21 $FLIP_CARD:  
{"cardId":74} 

 Player 2 19:12:21 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":74} 

 Player 2 19:12:21 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 19:12:21 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 19:12:21 $DRAW_CARD:  
{"deckType":1} 

 Player 2 19:12:21 $MOVE_CARD:  
{"moveIndex":4,"cardId":112,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 19:12:22 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":112,"flipIfFlipped":false,"playerId":2} 

 Player 2 19:12:22 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":112} 

 Player 2 19:12:22 $FLIP_CARD:  
{"cardId":112} 

 Player 2 19:12:22 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":112} 

 Player 2 19:12:22 $DRAW_CARD:  
{"deckType":1} 

 Player 2 19:12:22 $MOVE_CARD:  
{"moveIndex":5,"cardId":76,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 19:12:22 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":76,"flipIfFlipped":false,"playerId":2} 

 Player 2 19:12:22 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":76} 

 Player 2 19:12:22 $FLIP_CARD:  
{"cardId":76} 

 Player 2 19:12:22 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":76} 

 Player 2 19:12:22 $DRAW_CARD:  
{"deckType":1} 

 Player 2 19:12:22 $MOVE_CARD:  
{"moveIndex":6,"cardId":67,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 19:12:23 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":67,"flipIfFlipped":false,"playerId":2} 

 Player 2 19:12:23 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":67} 

 Player 2 19:12:23 $FLIP_CARD:  
{"cardId":67} 

 Player 2 19:12:23 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":67} 

 Player 2 19:12:23 $GAME_HAS_STARTED:  

 Player 2 19:12:23 $SET_TURN:  
{"playerId":1} 

 Player 2 19:12:23 $START_TURN:  
{"playerId":1} 

 Player 2 19:12:23 $UPDATE_ACTIONS:  

 Player 1 19:12:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:12:23 $NEXT_STACK_ID:  

 Player 1 19:12:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:12:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 19:12:23 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 1 19:12:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 19:12:23 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 1 19:12:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 1 19:12:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:12:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 19:12:23 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 1 19:12:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 1 19:12:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 1 19:12:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:12:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 1 19:12:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:12:23 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:12:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:12:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:12:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:12:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:12:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:12:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:12:24 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:12:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 1 19:12:24 $DRAW_CARD:  
{"deckType":1} 

 Player 1 19:12:24 $MOVE_CARD:  
{"moveIndex":7,"cardId":18,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 19:12:24 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":18,"flipIfFlipped":false,"playerId":1} 

 Player 1 19:12:24 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":18} 

 Player 1 19:12:24 $FLIP_CARD:  
{"cardId":18} 

 Player 1 19:12:24 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":18} 

 Player 1 19:12:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 19:12:24 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 1 19:12:24 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:12:24 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 1 19:12:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 1 19:12:24 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:12:24 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 1 19:12:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 1 19:12:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 1 19:12:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:12:25 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:12:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:12:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:12:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:12:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:12:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:12:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:12:25 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:12:25 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 1 19:12:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 1 19:12:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:12:25 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 1 19:12:25 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 1 19:12:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 1 19:12:25 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:12:33 $SHOW_DECISION:  
{"startCardId":290,"endCardId":290} 

 Player 1 19:12:36 $NEXT_STACK_ID:  

 Player 1 19:12:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:12:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Isaac"} 

 Player 1 19:12:36 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 19:12:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Isaac"} 

 Player 1 19:12:36 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 19:12:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add ActivateItem 2 "}} 

 Player 2 19:12:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:12:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:12:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Isaac"} 

 Player 2 19:12:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Isaac"} 

 Player 1 19:12:38 $SHOW_DECISION:  
{"startCardId":290,"endCardId":17,"flipEndCard":true} 

 Player 1 19:12:41 $USE_ITEM:  
{"cardId":290} 

 Player 1 19:12:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:12:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Isaac"} 

 Player 1 19:12:42 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 19:12:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding ActivateItem 2"},"childOfId":10} 

 Player 1 19:12:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 1 19:12:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:12:42 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 1 19:12:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 1 19:12:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:12:42 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:12:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Isaac"} 

 Player 2 19:12:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Isaac"} 

 Player 2 19:12:42 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:12:42 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 1 19:12:42 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 1 19:12:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve ActivateItem 2 "}} 

 Player 1 19:12:42 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":290,"particleType":6} 

 Player 1 19:12:44 $DISABLE_PARTICLE_EFFECT:  
{"cardId":290,"particleType":6} 

 Player 1 19:12:44 $NEXT_STACK_ID:  

 Player 1 19:12:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Isaac"} 

 Player 1 19:12:44 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":17} 

 Player 1 19:12:44 $MOVE_CARD:  
{"moveIndex":8,"cardId":17,"placeID":300,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 19:12:44 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":17,"flipIfFlipped":true,"playerId":1} 

 Player 1 19:12:44 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":17} 

 Player 1 19:12:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 1 Penny(9): addMoney \n2:Player 1 activated Isaac"} 

 Player 1 19:12:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:12:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 1 Penny(9): addMoney \n2:Player 1 activated Isaac"} 

 Player 1 19:12:45 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":17,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":17,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 19:12:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 1 Penny(9): addMoney \n2:Player 1 activated Isaac"} 

 Player 1 19:12:45 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 19:12:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 1 Penny(9): addMoney \n2:Player 1 activated Isaac"} 

 Player 1 19:12:45 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":17,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":17,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 19:12:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 1 Penny(9): addMoney \n2:Player 1 activated Isaac"} 

 Player 1 19:12:45 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 19:12:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 1 Penny(9): addMoney \n2:Player 1 activated Isaac"} 

 Player 1 19:12:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 1 Penny(9): addMoney \n2:Player 1 activated Isaac"} 

 Player 1 19:12:45 $REPLACE_STACK:  
{"currentStack":[{"entityId":3,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":17,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":17,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":2,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 

 Player 1 19:12:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 1 Penny(9): addMoney \n2:Player 1 activated Isaac"} 

 Player 1 19:12:45 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 19:12:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 1 Penny(9): addMoney"} 

 Player 1 19:12:45 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 19:12:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve ActivateItem 2  "}} 

 Player 1 19:12:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 1 Penny(9): addMoney"} 

 Player 1 19:12:45 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 19:12:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve ActivateItem 2"},"childOfId":15} 

 Player 1 19:12:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 1 19:12:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:12:45 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 1 19:12:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 1 19:12:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:12:45 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:12:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Isaac"} 

 Player 2 19:12:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Isaac"} 

 Player 2 19:12:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 1 Penny(9) "} 

 Player 2 19:12:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 1 Penny(9) "} 

 Player 2 19:12:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 1 Penny(9) "} 

 Player 2 19:12:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 1 Penny(9) "} 

 Player 2 19:12:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 1 Penny(9) "} 

 Player 2 19:12:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 1 Penny(9) "} 

 Player 2 19:12:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 1 Penny(9) "} 

 Player 2 19:12:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 1 Penny(9) "} 

 Player 2 19:12:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 1 Penny(9) "} 

 Player 2 19:12:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 1 Penny(9) "} 

 Player 2 19:12:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 1 Penny(9)  \n2:Player 1 activated Isaac"} 

 Player 2 19:12:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 1 Penny(9)  \n2:Player 1 activated Isaac"} 

 Player 2 19:12:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 1 Penny(9)  \n2:Player 1 activated Isaac"} 

 Player 2 19:12:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 1 Penny(9)  \n2:Player 1 activated Isaac"} 

 Player 2 19:12:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 1 Penny(9)  \n2:Player 1 activated Isaac"} 

 Player 2 19:12:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 1 Penny(9)  \n2:Player 1 activated Isaac"} 

 Player 2 19:12:46 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:12:46 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 1 19:12:46 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 1 19:12:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Resolve PlayLootCardStackEffect 3 "}} 

 Player 1 19:12:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 1 Penny(9): addMoney"} 

 Player 1 19:12:46 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":17,"particleType":6} 

 Player 1 19:12:48 $DISABLE_PARTICLE_EFFECT:  
{"cardId":17,"particleType":6} 

 Player 1 19:12:48 $SET_MONEY:  
{"playerId":1,"numOfCoins":4} 

 Player 1 19:12:48 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":1}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 1 19:12:48 $REMOVE_FROM_PILE:  
{"cardId":17} 

 Player 1 19:12:48 $MOVE_CARD:  
{"moveIndex":9,"cardId":17,"placeID":301,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 19:12:48 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":17,"flipIfFlipped":true,"playerId":1} 

 Player 1 19:12:48 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":17} 

 Player 1 19:12:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 1 Penny(9): addMoney"} 

 Player 1 19:12:49 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":17,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 19:12:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:12:49 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":17,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 19:12:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Remove After Resolve PlayLootCardStackEffect 3  "}} 

 Player 1 19:12:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:12:49 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":17,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 19:12:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Remove After Resolve PlayLootCardStackEffect 3"},"childOfId":20} 

 Player 1 19:12:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 1 19:12:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:12:49 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:12:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 1 Penny(9) "} 

 Player 2 19:12:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 1 Penny(9) "} 

 Player 2 19:12:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 1 Penny(9) "} 

 Player 2 19:12:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 1 Penny(9) "} 

 Player 2 19:12:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 1 Penny(9) "} 

 Player 2 19:12:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 1 Penny(9) "} 

 Player 2 19:12:49 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:12:49 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 1 19:12:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 1 19:12:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:12:49 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 1 19:12:49 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 1 19:12:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Stack Was Emptied "}} 

 Player 1 19:12:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:12:52 $SHOW_DECISION:  
{"startCardId":290,"endCardId":258} 

 Player 1 19:12:55 $NEXT_STACK_ID:  

 Player 1 19:12:55 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:12:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust"} 

 Player 1 19:12:55 $ADD_TO_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":258,"stackEffectType":4}} 

 Player 1 19:12:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust"} 

 Player 1 19:12:55 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":258,"stackEffectType":4}} 

 Player 1 19:12:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Add DeclareAttack 4 "}} 

 Player 1 19:12:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:12:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust"} 

 Player 1 19:12:55 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":258,"stackEffectType":4}} 

 Player 1 19:12:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Response Adding DeclareAttack 4"},"childOfId":25} 

 Player 1 19:12:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Wait For Response From Player 1 "},"childOfId":25} 

 Player 1 19:12:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:12:55 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 1 19:12:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":25} 

 Player 1 19:12:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:12:55 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:12:55 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:12:56 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:12:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust"} 

 Player 2 19:12:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust"} 

 Player 2 19:12:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust"} 

 Player 2 19:12:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust"} 

 Player 2 19:12:56 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:12:56 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 1 19:12:56 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 1 19:12:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Resolve DeclareAttack 4 "}} 

 Player 1 19:12:56 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":258,"particleType":5} 

 Player 1 19:12:56 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":3,"originStackId":4},"isAfterActivation":true,"index":3} 

 Player 1 19:12:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust"} 

 Player 1 19:12:56 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":258,"stackEffectType":4}} 

 Player 1 19:12:56 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:12:56 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":258,"stackEffectType":4}} 

 Player 1 19:12:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Remove After Resolve DeclareAttack 4  "}} 

 Player 1 19:12:56 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:12:56 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":258,"stackEffectType":4}} 

 Player 1 19:12:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Response Remove After Resolve DeclareAttack 4"},"childOfId":30} 

 Player 1 19:12:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Wait For Response From Player 2 "},"childOfId":30} 

 Player 1 19:12:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:12:56 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:12:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust"} 

 Player 2 19:12:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust"} 

 Player 2 19:12:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust"} 

 Player 2 19:12:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust"} 

 Player 2 19:12:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust"} 

 Player 2 19:12:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Lust"} 

 Player 2 19:12:56 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:12:56 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 1 19:12:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":30} 

 Player 1 19:12:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:12:57 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 1 19:12:57 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 1 19:12:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Stack Was Emptied "}} 

 Player 1 19:12:57 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:13:01 $NEXT_STACK_ID:  

 Player 1 19:13:01 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:13:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster>"} 

 Player 1 19:13:02 $ADD_TO_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 1 19:13:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster>"} 

 Player 1 19:13:02 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 1 19:13:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Add AttackRoll 5 "}} 

 Player 1 19:13:02 $ROLL_DICE:  
{"playerId":1} 

 Player 2 19:13:02 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:13:02 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:13:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster>"} 

 Player 2 19:13:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster>"} 

 Player 1 19:13:03 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":6} 

 Player 1 19:13:03 $UPDATE_STACK_VIS:  
{"stackId":5,"text":"player rolled 6 vs Lust<Monster>"} 

 Player 1 19:13:03 $SHOW_DICE_ROLL:  
{"stackId":5} 

 Player 1 19:13:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Lust<Monster>"} 

 Player 1 19:13:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:13:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Lust<Monster>"} 

 Player 1 19:13:06 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":290,"numberRolled":6,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 1 19:13:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Response Adding AttackRoll 5"},"childOfId":35} 

 Player 1 19:13:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Wait For Response From Player 1 "},"childOfId":35} 

 Player 1 19:13:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:13:07 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 1 19:13:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 2 "},"childOfId":35} 

 Player 1 19:13:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:13:07 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:13:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster>"} 

 Player 2 19:13:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster>"} 

 Player 2 19:13:07 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:13:07 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 1 19:13:07 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 1 19:13:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Resolve AttackRoll 5 "}} 

 Player 1 19:13:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Added 0 to original roll"}} 

 Player 1 19:13:07 $NEXT_STACK_ID:  

 Player 1 19:13:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Lust<Monster>"} 

 Player 1 19:13:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:13:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:Player 1 rolled 6 vs Lust<Monster>"} 

 Player 1 19:13:07 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:13:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:Player 1 rolled 6 vs Lust<Monster>"} 

 Player 1 19:13:07 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":290,"numberRolled":6,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 1 19:13:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:Player 1 rolled 6 vs Lust<Monster>"} 

 Player 1 19:13:07 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:13:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:Player 1 rolled 6 vs Lust<Monster>"} 

 Player 1 19:13:07 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":290,"numberRolled":6,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 1 19:13:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:Player 1 rolled 6 vs Lust<Monster>"} 

 Player 1 19:13:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:Player 1 rolled 6 vs Lust<Monster>"} 

 Player 1 19:13:07 $REPLACE_STACK:  
{"currentStack":[{"entityId":6,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":5,"creatorCardId":290,"numberRolled":6,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":258}]} 

 Player 1 19:13:07 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":6},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":4,"originStackId":5},"isAfterActivation":true,"index":4} 

 Player 1 19:13:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:Player 1 rolled 6 vs Lust<Monster>"} 

 Player 1 19:13:07 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":290,"numberRolled":6,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 1 19:13:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust"} 

 Player 1 19:13:07 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":290,"numberRolled":6,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 1 19:13:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Remove After Resolve AttackRoll 5  "}} 

 Player 1 19:13:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust"} 

 Player 1 19:13:08 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":290,"numberRolled":6,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 1 19:13:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Response Remove After Resolve AttackRoll 5"},"childOfId":41} 

 Player 1 19:13:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 1 "},"childOfId":41} 

 Player 1 19:13:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:13:08 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 1 19:13:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Wait For Response From Player 2 "},"childOfId":41} 

 Player 1 19:13:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:13:08 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:13:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster>"} 

 Player 2 19:13:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster>"} 

 Player 2 19:13:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust"} 

 Player 2 19:13:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust"} 

 Player 2 19:13:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust"} 

 Player 2 19:13:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust"} 

 Player 2 19:13:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust"} 

 Player 2 19:13:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust"} 

 Player 2 19:13:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust"} 

 Player 2 19:13:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust"} 

 Player 2 19:13:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust"} 

 Player 2 19:13:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust"} 

 Player 2 19:13:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:Player 1 is rolling against Lust<Monster>"} 

 Player 2 19:13:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:Player 1 is rolling against Lust<Monster>"} 

 Player 2 19:13:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:Player 1 is rolling against Lust<Monster>"} 

 Player 2 19:13:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:Player 1 is rolling against Lust<Monster>"} 

 Player 2 19:13:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:Player 1 is rolling against Lust<Monster>"} 

 Player 2 19:13:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:Player 1 is rolling against Lust<Monster>"} 

 Player 2 19:13:08 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:13:08 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 1 19:13:08 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 1 19:13:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Resolve CombatDamage 6 "}} 

 Player 1 19:13:09 $UPDATE_STACK_VIS:  
{"stackId":6,"text":"Isaac will deal 1 combat damage to Lust"} 

 Player 1 19:13:09 $MONSTER_GET_DAMAGED:  
{"cardId":258,"hpLeft":1,"damageDealerId":290} 

 Player 1 19:13:09 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":290}],"result":null,"preventMethod":false,"methodScopeId":258,"scopeIsPlayer":false,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 1 19:13:09 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":6},{"type":0,"number":290},{"type":0,"number":258}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":6,"originStackId":6},"isAfterActivation":true,"index":6} 

 Player 1 19:13:09 $NEXT_STACK_ID:  

 Player 1 19:13:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust"} 

 Player 1 19:13:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:Activate Lust effect DealDamage<DealDamage>"} 

 Player 1 19:13:09 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":7,"creatorCardId":258,"hasLockingStackEffect":false,"cardActivatorId":258,"cardWithEffectId":258,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":258,"cardId":258,"effctType":0},"isAfterActivation":true,"index":6,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 19:13:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:Activate Lust effect DealDamage<DealDamage>"} 

 Player 1 19:13:09 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":7,"creatorCardId":258,"hasLockingStackEffect":false,"cardActivatorId":258,"cardWithEffectId":258,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":258,"cardId":258,"effctType":0},"isAfterActivation":true,"index":6,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 19:13:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Add ActivatePassiveEffect 7 "}} 

 Player 1 19:13:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:Activate Lust effect DealDamage<DealDamage>"} 

 Player 1 19:13:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:Activate Lust effect DealDamage<DealDamage>"} 

 Player 1 19:13:09 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[290],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":258,"effectCardPlayer":258},"entityId":7,"creatorCardId":258,"hasLockingStackEffect":false,"cardActivatorId":258,"cardWithEffectId":258,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":258,"cardId":258,"effctType":0},"isAfterActivation":true,"index":6,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 19:13:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Response Adding ActivatePassiveEffect 7"},"childOfId":46} 

 Player 1 19:13:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Wait For Response From Player 2 "},"childOfId":46} 

 Player 1 19:13:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:13:09 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:13:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust"} 

 Player 2 19:13:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust"} 

 Player 2 19:13:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:Activate Lust "} 

 Player 2 19:13:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:Activate Lust "} 

 Player 2 19:13:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:Activate Lust "} 

 Player 2 19:13:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:Activate Lust "} 

 Player 2 19:13:09 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:13:09 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 1 19:13:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Wait For Response From Player 1 "},"childOfId":46} 

 Player 1 19:13:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:13:09 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 1 19:13:10 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 1 19:13:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Resolve ActivatePassiveEffect 7 "}} 

 Player 1 19:13:10 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":258,"particleType":6} 

 Player 1 19:13:11 $DISABLE_PARTICLE_EFFECT:  
{"cardId":258,"particleType":6} 

 Player 1 19:13:11 $PLAYER_GET_HIT:  
{"playerId":1,"damage":1,"damageDealerId":258} 

 Player 1 19:13:11 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":258}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 

 Player 1 19:13:12 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":6},{"type":0,"number":290},{"type":0,"number":258}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":false,"index":6,"originStackId":6},"isAfterActivation":true,"index":6} 

 Player 1 19:13:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:Activate Lust effect DealDamage<DealDamage>"} 

 Player 1 19:13:12 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[290],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":258,"effectCardPlayer":258},"entityId":7,"creatorCardId":258,"hasLockingStackEffect":false,"cardActivatorId":258,"cardWithEffectId":258,"isAfterActivation":true,"index":6,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 19:13:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust"} 

 Player 1 19:13:12 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[290],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":258,"effectCardPlayer":258},"entityId":7,"creatorCardId":258,"hasLockingStackEffect":false,"cardActivatorId":258,"cardWithEffectId":258,"isAfterActivation":true,"index":6,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 19:13:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Remove After Resolve ActivatePassiveEffect 7  "}} 

 Player 1 19:13:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust"} 

 Player 1 19:13:12 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[290],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":258,"effectCardPlayer":258},"entityId":7,"creatorCardId":258,"hasLockingStackEffect":false,"cardActivatorId":258,"cardWithEffectId":258,"isAfterActivation":true,"index":6,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 19:13:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Response Remove After Resolve ActivatePassiveEffect 7"},"childOfId":51} 

 Player 1 19:13:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Wait For Response From Player 1 "},"childOfId":51} 

 Player 1 19:13:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:13:12 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 1 19:13:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Wait For Response From Player 2 "},"childOfId":51} 

 Player 1 19:13:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:13:12 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:13:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:Activate Lust "} 

 Player 2 19:13:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:Activate Lust "} 

 Player 2 19:13:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:Activate Lust "} 

 Player 2 19:13:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:Activate Lust "} 

 Player 2 19:13:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:Activate Lust "} 

 Player 2 19:13:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:Activate Lust "} 

 Player 2 19:13:12 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:13:12 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 1 19:13:12 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 1 19:13:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Resolve CombatDamage 6 "}} 

 Player 1 19:13:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust"} 

 Player 1 19:13:12 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:13:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:13:12 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:13:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":56,"_text":"Remove After Resolve CombatDamage 6  "}} 

 Player 1 19:13:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:13:13 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:13:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":57,"_text":"Response Remove After Resolve CombatDamage 6"},"childOfId":56} 

 Player 1 19:13:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":58,"_text":"Wait For Response From Player 2 "},"childOfId":56} 

 Player 1 19:13:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:13:13 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:13:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust"} 

 Player 2 19:13:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust"} 

 Player 2 19:13:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust"} 

 Player 2 19:13:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust"} 

 Player 2 19:13:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust"} 

 Player 2 19:13:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust"} 

 Player 2 19:13:13 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:13:13 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 1 19:13:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":59,"_text":"Wait For Response From Player 1 "},"childOfId":56} 

 Player 1 19:13:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:13:13 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 1 19:13:13 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 1 19:13:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":60,"_text":"Stack Was Emptied "}} 

 Player 1 19:13:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:13:14 $NEXT_STACK_ID:  

 Player 1 19:13:14 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:13:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster>"} 

 Player 1 19:13:15 $ADD_TO_STACK:  
{"stackEffect":{"entityId":8,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 1 19:13:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster>"} 

 Player 1 19:13:15 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 1 19:13:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":61,"_text":"Add AttackRoll 8 "}} 

 Player 1 19:13:15 $ROLL_DICE:  
{"playerId":1} 

 Player 2 19:13:15 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:13:15 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:13:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster>"} 

 Player 2 19:13:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster>"} 

 Player 1 19:13:16 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":2} 

 Player 1 19:13:16 $UPDATE_STACK_VIS:  
{"stackId":8,"text":"player rolled 2 vs Lust<Monster>"} 

 Player 1 19:13:16 $SHOW_DICE_ROLL:  
{"stackId":8} 

 Player 1 19:13:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Lust<Monster>"} 

 Player 1 19:13:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:13:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Lust<Monster>"} 

 Player 1 19:13:19 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":290,"numberRolled":2,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 1 19:13:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":62,"_text":"Response Adding AttackRoll 8"},"childOfId":61} 

 Player 1 19:13:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":63,"_text":"Wait For Response From Player 1 "},"childOfId":61} 

 Player 1 19:13:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:13:19 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 1 19:13:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":64,"_text":"Wait For Response From Player 2 "},"childOfId":61} 

 Player 1 19:13:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:13:19 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:13:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster>"} 

 Player 2 19:13:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster>"} 

 Player 2 19:13:19 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:13:20 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 1 19:13:20 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 1 19:13:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":65,"_text":"Resolve AttackRoll 8 "}} 

 Player 1 19:13:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":66,"_text":"Added 0 to original roll"}} 

 Player 1 19:13:20 $NEXT_STACK_ID:  

 Player 1 19:13:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Lust<Monster>"} 

 Player 1 19:13:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:13:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust combat damage to Isaac \n2:Player 1 rolled 2 vs Lust<Monster>"} 

 Player 1 19:13:20 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":290,"entityToDoDamageCardId":258,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:13:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust combat damage to Isaac \n2:Player 1 rolled 2 vs Lust<Monster>"} 

 Player 1 19:13:20 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":290,"numberRolled":2,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 1 19:13:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust combat damage to Isaac \n2:Player 1 rolled 2 vs Lust<Monster>"} 

 Player 1 19:13:20 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":290,"entityToDoDamageCardId":258,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:13:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust combat damage to Isaac \n2:Player 1 rolled 2 vs Lust<Monster>"} 

 Player 1 19:13:20 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":290,"numberRolled":2,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 1 19:13:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust combat damage to Isaac \n2:Player 1 rolled 2 vs Lust<Monster>"} 

 Player 1 19:13:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust combat damage to Isaac \n2:Player 1 rolled 2 vs Lust<Monster>"} 

 Player 1 19:13:20 $REPLACE_STACK:  
{"currentStack":[{"entityId":9,"creatorCardId":290,"entityToDoDamageCardId":258,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":8,"creatorCardId":290,"numberRolled":2,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":258}]} 

 Player 1 19:13:20 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":2},{"type":2,"number":1},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":8,"originStackId":8},"isAfterActivation":true,"index":8} 

 Player 1 19:13:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust combat damage to Isaac \n2:Player 1 rolled 2 vs Lust<Monster>"} 

 Player 1 19:13:20 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":290,"numberRolled":2,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 1 19:13:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust combat damage to Isaac"} 

 Player 1 19:13:20 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":290,"numberRolled":2,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 1 19:13:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":67,"_text":"Remove After Resolve AttackRoll 8  "}} 

 Player 1 19:13:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust combat damage to Isaac"} 

 Player 1 19:13:20 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":8,"creatorCardId":290,"numberRolled":2,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 1 19:13:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":68,"_text":"Response Remove After Resolve AttackRoll 8"},"childOfId":67} 

 Player 1 19:13:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":69,"_text":"Wait For Response From Player 1 "},"childOfId":67} 

 Player 1 19:13:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:13:21 $ACTION_MASSAGE_REMOVE:  
{"id":69} 

 Player 1 19:13:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":70,"_text":"Wait For Response From Player 2 "},"childOfId":67} 

 Player 1 19:13:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:13:21 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:13:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster>"} 

 Player 2 19:13:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Lust<Monster>"} 

 Player 2 19:13:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust combat damage to Isaac"} 

 Player 2 19:13:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust combat damage to Isaac"} 

 Player 2 19:13:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust combat damage to Isaac"} 

 Player 2 19:13:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust combat damage to Isaac"} 

 Player 2 19:13:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust combat damage to Isaac"} 

 Player 2 19:13:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust combat damage to Isaac"} 

 Player 2 19:13:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust combat damage to Isaac"} 

 Player 2 19:13:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust combat damage to Isaac"} 

 Player 2 19:13:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust combat damage to Isaac"} 

 Player 2 19:13:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust combat damage to Isaac"} 

 Player 2 19:13:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust combat damage to Isaac \n2:Player 1 is rolling against Lust<Monster>"} 

 Player 2 19:13:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust combat damage to Isaac \n2:Player 1 is rolling against Lust<Monster>"} 

 Player 2 19:13:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust combat damage to Isaac \n2:Player 1 is rolling against Lust<Monster>"} 

 Player 2 19:13:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust combat damage to Isaac \n2:Player 1 is rolling against Lust<Monster>"} 

 Player 2 19:13:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust combat damage to Isaac \n2:Player 1 is rolling against Lust<Monster>"} 

 Player 2 19:13:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust combat damage to Isaac \n2:Player 1 is rolling against Lust<Monster>"} 

 Player 2 19:13:21 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:13:21 $ACTION_MASSAGE_REMOVE:  
{"id":70} 

 Player 1 19:13:21 $ACTION_MASSAGE_REMOVE:  
{"id":68} 

 Player 1 19:13:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":71,"_text":"Resolve CombatDamage 9 "}} 

 Player 1 19:13:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust 1 combat damage to Isaac"} 

 Player 1 19:13:21 $UPDATE_STACK_VIS:  
{"stackId":9,"text":"Lust will deal 1 combat damage to Isaac"} 

 Player 1 19:13:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust 1 combat damage to Isaac"} 

 Player 1 19:13:22 $PLAYER_GET_HIT:  
{"playerId":1,"damage":1,"damageDealerId":258} 

 Player 1 19:13:22 $NEXT_STACK_ID:  

 Player 1 19:13:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust 1 combat damage to Isaac"} 

 Player 1 19:13:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:13:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust 1 combat damage to Isaac \n2:Player 1 is about to die"} 

 Player 1 19:13:22 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":290,"playerToDieCardId":290,"stackEffectType":15,"killerId":258}} 

 Player 1 19:13:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust 1 combat damage to Isaac \n2:Player 1 is about to die"} 

 Player 1 19:13:22 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":290,"entityToDoDamageCardId":258,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:13:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust 1 combat damage to Isaac \n2:Player 1 is about to die"} 

 Player 1 19:13:22 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":290,"entityToDoDamageCardId":258,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:13:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust 1 combat damage to Isaac \n2:Player 1 is about to die"} 

 Player 1 19:13:22 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":290,"playerToDieCardId":290,"stackEffectType":15,"killerId":258}} 

 Player 1 19:13:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust 1 combat damage to Isaac \n2:Player 1 is about to die"} 

 Player 1 19:13:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust 1 combat damage to Isaac \n2:Player 1 is about to die"} 

 Player 1 19:13:22 $REPLACE_STACK:  
{"currentStack":[{"entityId":9,"creatorCardId":290,"entityToDoDamageCardId":258,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":10,"creatorCardId":290,"playerToDieCardId":290,"stackEffectType":15,"killerId":258}]} 

 Player 1 19:13:22 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":258}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":9,"originStackId":-1},"isAfterActivation":true,"index":9} 

 Player 1 19:13:22 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_TAKEN","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":0,"number":258}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":10,"originStackId":9},"isAfterActivation":true,"index":10} 

 Player 1 19:13:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 1 19:13:22 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":290,"entityToDoDamageCardId":258,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:13:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":72,"_text":"Remove After Resolve CombatDamage 9  "}} 

 Player 1 19:13:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 1 19:13:22 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":9,"creatorCardId":290,"entityToDoDamageCardId":258,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:13:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":73,"_text":"Response Remove After Resolve CombatDamage 9"},"childOfId":72} 

 Player 1 19:13:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":74,"_text":"Wait For Response From Player 1 "},"childOfId":72} 

 Player 1 19:13:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:13:22 $ACTION_MASSAGE_REMOVE:  
{"id":74} 

 Player 1 19:13:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":75,"_text":"Wait For Response From Player 2 "},"childOfId":72} 

 Player 1 19:13:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:13:23 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:13:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust combat damage to Isaac"} 

 Player 2 19:13:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust combat damage to Isaac"} 

 Player 2 19:13:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 19:13:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 19:13:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 19:13:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 19:13:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 19:13:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 19:13:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 19:13:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 19:13:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 19:13:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 19:13:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust combat damage to Isaac \n2:Player 1 is about to die"} 

 Player 2 19:13:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust combat damage to Isaac \n2:Player 1 is about to die"} 

 Player 2 19:13:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust combat damage to Isaac \n2:Player 1 is about to die"} 

 Player 2 19:13:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lust combat damage to Isaac \n2:Player 1 is about to die"} 

 Player 2 19:13:23 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:13:23 $ACTION_MASSAGE_REMOVE:  
{"id":75} 

 Player 1 19:13:23 $ACTION_MASSAGE_REMOVE:  
{"id":73} 

 Player 1 19:13:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":76,"_text":"Resolve PlayerDeath 10 "}} 

 Player 1 19:13:23 $DISABLE_PARTICLE_EFFECT:  
{"cardId":258,"particleType":5} 

 Player 1 19:13:23 $CANCEL_ATTACK:  

 Player 1 19:13:23 $NEXT_STACK_ID:  

 Player 1 19:13:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 1 19:13:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:13:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 19:13:23 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":11,"creatorCardId":290,"playerToPayCardId":290,"stackEffectType":16}} 

 Player 1 19:13:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 19:13:23 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":290,"playerToDieCardId":290,"stackEffectType":15,"killerId":258}} 

 Player 1 19:13:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 19:13:24 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":290,"playerToDieCardId":290,"stackEffectType":15,"killerId":258}} 

 Player 1 19:13:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 19:13:24 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":290,"playerToPayCardId":290,"stackEffectType":16}} 

 Player 1 19:13:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 19:13:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 19:13:24 $REPLACE_STACK:  
{"currentStack":[{"entityId":10,"creatorCardId":290,"playerToDieCardId":290,"stackEffectType":15,"killerId":258},{"entityId":11,"creatorCardId":290,"playerToPayCardId":290,"stackEffectType":16}]} 

 Player 1 19:13:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 19:13:24 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":290,"playerToDieCardId":290,"stackEffectType":15,"killerId":258}} 

 Player 1 19:13:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 1 19:13:24 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":290,"playerToDieCardId":290,"stackEffectType":15,"killerId":258}} 

 Player 1 19:13:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":77,"_text":"Remove After Resolve PlayerDeath 10  "}} 

 Player 1 19:13:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 1 19:13:24 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":10,"creatorCardId":290,"playerToDieCardId":290,"stackEffectType":15,"killerId":258}} 

 Player 1 19:13:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":78,"_text":"Response Remove After Resolve PlayerDeath 10"},"childOfId":77} 

 Player 1 19:13:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":79,"_text":"Wait For Response From Player 1 "},"childOfId":77} 

 Player 1 19:13:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:13:24 $ACTION_MASSAGE_REMOVE:  
{"id":79} 

 Player 1 19:13:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":80,"_text":"Wait For Response From Player 2 "},"childOfId":77} 

 Player 1 19:13:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:13:24 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:13:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 19:13:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 19:13:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 19:13:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 19:13:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 19:13:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 19:13:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 19:13:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 19:13:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 19:13:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 19:13:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 19:13:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 19:13:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 2 19:13:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 2 19:13:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 2 19:13:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 2 19:13:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 2 19:13:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 2 19:13:25 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:13:25 $ACTION_MASSAGE_REMOVE:  
{"id":80} 

 Player 1 19:13:25 $ACTION_MASSAGE_REMOVE:  
{"id":78} 

 Player 1 19:13:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":81,"_text":"Resolve PlayerDeathPenalties 11 "}} 

 Player 1 19:13:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":82,"_text":"Player 1 pays Penalties"}} 

 Player 1 19:13:25 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 1 19:13:25 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-1}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":11,"originStackId":-1},"isAfterActivation":true,"index":11} 

 Player 2 19:30:17 $MATCH: 