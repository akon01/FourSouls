{"version":3,"sources":["access/IAdvisorChain.ts"],"names":[],"mappings":";;AACA,uCAAiE;AAEjE;;;GAGG;AACU,QAAA,iBAAiB,GAAG,IAAI,kBAAW,CAAgB,kBAAkB,CAAC,CAAC","file":"../../access/IAdvisorChain.js","sourcesContent":["import { Joinpoint } from '../joinpoints';\r\nimport { Express, IRecognizer, InjectToken } from '@ts-ioc/core';\r\n\r\n/**\r\n * Aop IAdvisorChain interface token.\r\n * it is a token id, you can register yourself IAdvisorChain for this.\r\n */\r\nexport const AdvisorChainToken = new InjectToken<IAdvisorChain>('DI_IAdvisorChain');\r\n\r\n/**\r\n * advisor chain.\r\n *\r\n * @export\r\n * @interface IAdvisorChain\r\n */\r\nexport interface IAdvisorChain {\r\n    /**\r\n     * register next step of chain.\r\n     *\r\n     * @param {Express<Joinpoint, any>} action\r\n     * @memberof IAdvisorChain\r\n     */\r\n    next(action: Express<Joinpoint, any>);\r\n    /**\r\n     * get Recognizer of the chain, to recognize the vaule is special alias for registor to container.\r\n     *\r\n     * @returns {IRecognizer}\r\n     * @memberof IAdvisorChain\r\n     */\r\n    getRecognizer(): IRecognizer;\r\n    /**\r\n     * run chain process.\r\n     *\r\n     * @memberof IAdvisorChain\r\n     */\r\n    process(): void;\r\n}\r\n"]}