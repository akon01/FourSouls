Start Log 

 Player 1 21:17:58 $MATCH:  

 Player 1 21:17:59 $START_GAME:  

 Player 1 21:17:59 $MOVE_TO_TABLE:  

 Player 2 21:17:59 $MOVE_TO_TABLE:  

 Player 2 21:18:07 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 1 21:18:07 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 21:18:07 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":277,"itemCardId":278} 

 Player 2 21:18:07 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":292}],"result":true,"preventMethod":false,"methodScopeId":291,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 21:18:07 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":291,"itemCardId":292} 

 Player 2 21:18:07 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[86,16,93,62,107,8,70,94,121,12,127,55,139,125,34,60,119,87,106,38,112,102,105,74,84,41,36,31,61,20,98,91,27,18,85,50,80,66,99,65,116,135,68,104,110,11,21,42,111,45,14,81,141,64,72,13,53,113,126,79,89,32,63,19,117,76,52,136,133,83,100,59,109,9,103,137,46,120,33,37,78,30,47,15,82,134,108,132,131,123,39,114,142,54,101,35,130,26,96,88,128,28,129,138,67,17,140,95,115,51,71,29,25,48,40,56,24,43,7,44,69,75,22,92,124,58,122,118,97,10,77,73,57,49,90,23]} 

 Player 2 21:18:07 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[276,253,229,264,232,238,261,275,239,258,269,252,270,256,246,272,271,254,236,250,244,255,267,262,247,233,240,243,230,231,268,234,274,248,257,223,235,242,265,260,226,273,251,227,241,263,259,266,224,225,237,245,228,249]} 

 Player 2 21:18:07 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[201,178,148,210,167,197,149,179,172,191,202,196,200,204,203,188,183,177,153,192,174,216,209,180,150,147,198,219,184,217,157,175,181,170,169,205,186,187,190,207,195,165,145,151,176,173,160,171,161,193,220,168,208,215,164,194,211,146,213,158,182,156,166,212,206,154,155,214,152,189,218,199,162,163,185,159]} 

 Player 2 21:18:07 $DRAW_CARD:  
{"deckType":5} 

 Player 2 21:18:07 $FLIP_CARD:  
{"cardId":159} 

 Player 2 21:18:07 $ADD_STORE_CARD:  
{"cardId":159} 

 Player 2 21:18:07 $DRAW_CARD:  
{"deckType":5} 

 Player 2 21:18:07 $FLIP_CARD:  
{"cardId":185} 

 Player 2 21:18:07 $ADD_STORE_CARD:  
{"cardId":185} 

 Player 2 21:18:07 $DRAW_CARD:  
{"deckType":2} 

 Player 2 21:18:07 $FLIP_CARD:  
{"cardId":249} 

 Player 2 21:18:08 $REGISTER_PASSIVE_ITEM:  
{"cardId":249} 

 Player 2 21:18:08 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":249} 

 Player 2 21:18:08 $NEW_MONSTER_ON_PLACE:  
{"cardId":249,"monsterPlaceId":1} 

 Player 2 21:18:08 $DRAW_CARD:  
{"deckType":2} 

 Player 2 21:18:08 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":228} 

 Player 2 21:18:08 $DRAW_CARD:  
{"deckType":2} 

 Player 2 21:18:08 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":245} 

 Player 2 21:18:08 $DRAW_CARD:  
{"deckType":2} 

 Player 2 21:18:08 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":237} 

 Player 2 21:18:08 $DRAW_CARD:  
{"deckType":2} 

 Player 2 21:18:08 $FLIP_CARD:  
{"cardId":225} 

 Player 2 21:18:08 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":225} 

 Player 2 21:18:08 $NEW_MONSTER_ON_PLACE:  
{"cardId":225,"monsterPlaceId":2} 

 Player 2 21:18:08 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 21:18:08 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":277,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 21:18:08 $DRAW_CARD:  
{"deckType":1} 

 Player 2 21:18:08 $MOVE_CARD:  
{"moveIndex":1,"cardId":23,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 21:18:08 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":278}],"result":true,"preventMethod":false,"methodScopeId":277,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 21:18:08 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":23,"flipIfFlipped":false,"playerId":2} 

 Player 2 21:18:08 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":23} 

 Player 2 21:18:08 $FLIP_CARD:  
{"cardId":23} 

 Player 2 21:18:08 $FLIP_CARD:  
{"cardId":23} 

 Player 2 21:18:09 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":23} 

 Player 2 21:18:09 $DRAW_CARD:  
{"deckType":1} 

 Player 2 21:18:09 $MOVE_CARD:  
{"moveIndex":2,"cardId":90,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 21:18:09 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":90,"flipIfFlipped":false,"playerId":2} 

 Player 2 21:18:09 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":90} 

 Player 2 21:18:09 $FLIP_CARD:  
{"cardId":90} 

 Player 2 21:18:09 $FLIP_CARD:  
{"cardId":90} 

 Player 2 21:18:09 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":90} 

 Player 2 21:18:09 $DRAW_CARD:  
{"deckType":1} 

 Player 2 21:18:09 $MOVE_CARD:  
{"moveIndex":3,"cardId":49,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 21:18:09 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":49,"flipIfFlipped":false,"playerId":2} 

 Player 2 21:18:09 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":49} 

 Player 2 21:18:09 $FLIP_CARD:  
{"cardId":49} 

 Player 2 21:18:09 $FLIP_CARD:  
{"cardId":49} 

 Player 2 21:18:10 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":49} 

 Player 2 21:18:10 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 21:18:10 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":291,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 21:18:10 $DRAW_CARD:  
{"deckType":1} 

 Player 2 21:18:10 $MOVE_CARD:  
{"moveIndex":4,"cardId":57,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 21:18:10 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":57,"flipIfFlipped":false,"playerId":2} 

 Player 2 21:18:10 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":57} 

 Player 2 21:18:10 $FLIP_CARD:  
{"cardId":57} 

 Player 2 21:18:10 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":57} 

 Player 2 21:18:10 $DRAW_CARD:  
{"deckType":1} 

 Player 2 21:18:10 $MOVE_CARD:  
{"moveIndex":5,"cardId":73,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 21:18:10 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":73,"flipIfFlipped":false,"playerId":2} 

 Player 2 21:18:10 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":73} 

 Player 2 21:18:10 $FLIP_CARD:  
{"cardId":73} 

 Player 2 21:18:11 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":73} 

 Player 2 21:18:11 $DRAW_CARD:  
{"deckType":1} 

 Player 2 21:18:11 $MOVE_CARD:  
{"moveIndex":6,"cardId":77,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 21:18:11 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":77,"flipIfFlipped":false,"playerId":2} 

 Player 2 21:18:11 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":77} 

 Player 2 21:18:11 $FLIP_CARD:  
{"cardId":77} 

 Player 2 21:18:11 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":77} 

 Player 2 21:18:11 $GAME_HAS_STARTED:  

 Player 2 21:18:11 $SET_TURN:  
{"playerId":1} 

 Player 2 21:18:11 $START_TURN:  
{"playerId":1} 

 Player 2 21:18:11 $UPDATE_ACTIONS:  

 Player 1 21:18:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:18:11 $NEXT_STACK_ID:  

 Player 1 21:18:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:18:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 21:18:11 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":277,"turnPlayerCardId":277,"stackEffectType":13}} 

 Player 1 21:18:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 21:18:11 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":277,"turnPlayerCardId":277,"stackEffectType":13}} 

 Player 1 21:18:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 1 21:18:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:18:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 21:18:11 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":277,"turnPlayerCardId":277,"stackEffectType":13}} 

 Player 1 21:18:11 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 21:18:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 1 21:18:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 1 21:18:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:18:11 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 21:18:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 1 21:18:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:18:12 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:18:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 21:18:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 21:18:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 21:18:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 21:18:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 21:18:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 21:18:12 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:18:12 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 21:18:12 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 21:18:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 1 21:18:12 $DRAW_CARD:  
{"deckType":1} 

 Player 1 21:18:12 $MOVE_CARD:  
{"moveIndex":7,"cardId":10,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 21:18:12 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":10,"flipIfFlipped":false,"playerId":1} 

 Player 1 21:18:12 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":10} 

 Player 1 21:18:12 $FLIP_CARD:  
{"cardId":10} 

 Player 1 21:18:12 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":10} 

 Player 1 21:18:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 21:18:12 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":277,"turnPlayerCardId":277,"stackEffectType":13}} 

 Player 1 21:18:12 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 21:18:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:18:12 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":277,"turnPlayerCardId":277,"stackEffectType":13}} 

 Player 1 21:18:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 1 21:18:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:18:13 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":277,"turnPlayerCardId":277,"stackEffectType":13}} 

 Player 1 21:18:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 1 21:18:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 1 21:18:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:18:13 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:18:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 21:18:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 21:18:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 21:18:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 21:18:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 21:18:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 21:18:13 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:18:13 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 1 21:18:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 1 21:18:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:18:13 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 1 21:18:13 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 1 21:18:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 1 21:18:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:18:13 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 21:18:13 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 21:18:13 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 21:18:13 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 21:18:13 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 21:18:13 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 21:18:13 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 21:18:14 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 21:18:15 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 21:21:28 $MOVE_CARD:  
{"moveIndex":8,"cardId":161,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 

 Player 1 21:21:29 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":161,"flipIfFlipped":true,"playerId":2} 

 Player 2 21:21:29 $REGISTER_PASSIVE_ITEM:  
{"cardId":161} 

 Player 2 21:21:29 $MOVE_CARD:  
{"moveIndex":9,"cardId":161,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 

 Player 1 21:21:29 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":161,"flipIfFlipped":true,"playerId":2} 

 Player 2 21:21:29 $ADD_AN_ITEM:  
{"playerId":2,"cardId":161,"isReward":true} 

 Player 2 21:21:29 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":161}],"result":true,"preventMethod":false,"methodScopeId":291,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 1 21:21:38 $SHOW_DECISION:  
{"startCardId":277,"endCardId":249} 

 Player 1 21:21:41 $NEXT_STACK_ID:  

 Player 1 21:21:41 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:21:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Dip"} 

 Player 1 21:21:42 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":277,"attackingPlayerCardId":277,"idOfCardBeingAttacked":249,"stackEffectType":4}} 

 Player 1 21:21:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Dip"} 

 Player 1 21:21:42 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":277,"attackingPlayerCardId":277,"idOfCardBeingAttacked":249,"stackEffectType":4}} 

 Player 1 21:21:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add DeclareAttack 2 "}} 

 Player 1 21:21:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:21:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Dip"} 

 Player 1 21:21:42 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":277,"attackingPlayerCardId":277,"idOfCardBeingAttacked":249,"stackEffectType":4}} 

 Player 1 21:21:42 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 21:21:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding DeclareAttack 2"},"childOfId":10} 

 Player 1 21:21:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 1 21:21:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:21:42 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 1 21:21:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 1 21:21:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:21:42 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:21:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 21:21:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 21:21:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Dip"} 

 Player 2 21:21:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Dip"} 

 Player 2 21:21:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Dip"} 

 Player 2 21:21:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Dip"} 

 Player 2 21:21:42 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:21:42 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 1 21:21:42 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 1 21:21:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve DeclareAttack 2 "}} 

 Player 1 21:21:42 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":249,"particleType":5} 

 Player 1 21:21:42 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":277,"scopeIsPlayer":true,"index":2,"originStackId":2},"isAfterActivation":true,"index":2} 

 Player 1 21:21:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Dip"} 

 Player 1 21:21:42 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":277,"attackingPlayerCardId":277,"idOfCardBeingAttacked":249,"stackEffectType":4}} 

 Player 1 21:21:42 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 21:21:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:21:42 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":277,"attackingPlayerCardId":277,"idOfCardBeingAttacked":249,"stackEffectType":4}} 

 Player 1 21:21:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve DeclareAttack 2  "}} 

 Player 1 21:21:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:21:42 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":277,"attackingPlayerCardId":277,"idOfCardBeingAttacked":249,"stackEffectType":4}} 

 Player 1 21:21:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve DeclareAttack 2"},"childOfId":15} 

 Player 1 21:21:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 1 21:21:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:21:43 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:21:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Dip"} 

 Player 2 21:21:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Dip"} 

 Player 2 21:21:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Dip"} 

 Player 2 21:21:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Dip"} 

 Player 2 21:21:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Dip"} 

 Player 2 21:21:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Dip"} 

 Player 2 21:21:43 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:21:43 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 1 21:21:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 1 21:21:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:21:43 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 1 21:21:43 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 1 21:21:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 1 21:21:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:21:43 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 21:21:43 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 21:21:43 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 21:21:43 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 21:21:43 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 21:21:43 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 21:21:43 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 21:21:43 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 21:21:43 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 21:21:43 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 21:21:43 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 21:21:44 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 21:21:45 $NEXT_STACK_ID:  

 Player 1 21:21:45 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:21:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Dip<Monster>"} 

 Player 1 21:21:45 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":277,"rollingPlayerCardId":277,"stackEffectType":2,"attackedMonsterCardId":249}} 

 Player 1 21:21:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Dip<Monster>"} 

 Player 1 21:21:45 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":277,"rollingPlayerCardId":277,"stackEffectType":2,"attackedMonsterCardId":249}} 

 Player 1 21:21:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add AttackRoll 3 "}} 

 Player 1 21:21:45 $ROLL_DICE:  
{"playerId":1} 

 Player 2 21:21:45 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 21:21:45 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 21:21:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Dip<Monster>"} 

 Player 2 21:21:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Dip<Monster>"} 

 Player 1 21:21:45 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 21:21:47 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":2} 

 Player 1 21:21:47 $UPDATE_STACK_VIS:  
{"stackId":3,"text":"player rolled 2 vs Holy Dip<Monster>"} 

 Player 1 21:21:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Holy Dip<Monster>"} 

 Player 1 21:21:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:21:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Holy Dip<Monster>"} 

 Player 1 21:21:47 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":277,"numberRolled":2,"rollingPlayerCardId":277,"stackEffectType":2,"attackedMonsterCardId":249}} 

 Player 1 21:21:47 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 21:21:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding AttackRoll 3"},"childOfId":20} 

 Player 1 21:21:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 1 21:21:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:21:47 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 1 21:21:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 1 21:21:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:21:47 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:21:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Dip<Monster>"} 

 Player 2 21:21:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Dip<Monster>"} 

 Player 2 21:21:47 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:21:47 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 1 21:21:48 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 1 21:21:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve AttackRoll 3 "}} 

 Player 1 21:21:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Added 0 to original roll"}} 

 Player 1 21:21:48 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":3},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":277,"scopeIsPlayer":true,"index":1,"originStackId":3},"isAfterActivation":false,"index":1} 

 Player 1 21:21:48 $NEXT_STACK_ID:  

 Player 1 21:21:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Holy Dip<Monster>"} 

 Player 1 21:21:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Holy Dip<Monster> \n2:Activate Dead Bird effect ChainEffects<ChainEffects>"} 

 Player 1 21:21:48 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":161,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":161,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":161,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 21:21:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Holy Dip<Monster> \n2:Activate Dead Bird effect ChainEffects<ChainEffects>"} 

 Player 1 21:21:48 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":161,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":161,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":161,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 21:21:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Add ActivatePassiveEffect 4 "}} 

 Player 1 21:21:48 $LOG_ERROR:  
"error while resolving stack effect 3" 
//////Error From Player 1////
  

 Player 1 21:21:48 $LOG_ERROR:  
//////Error From Player 1////
 [object Object]
////// 

 Player 1 21:21:48 $LOG_ERROR:  
{"message":"\"Cannot read property 'playerId' of undefined\"","stack":"\"TypeError: Cannot read property 'playerId' of undefined\\n    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/Stack.js:316:221)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\\n    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\\n    at new Promise (<anonymous>)\\n    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\\n    at Function.Stack.addToStack (http://localhost:7456/preview-scripts/assets/Script/Entites/Stack.js:301:16)\\n    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:465:62)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\""} 
//////Error From Player 1////
  

 Player 1 21:21:48 $LOG_ERROR:  
//////Error From Player 1////

 "\"Cannot read property 'playerId' of undefined\""

 + "\"TypeError: Cannot read property 'playerId' of undefined\
    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/Stack.js:316:221)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\
    at new Promise (<anonymous>)\
    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\
    at Function.Stack.addToStack (http://localhost:7456/preview-scripts/assets/Script/Entites/Stack.js:301:16)\
    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:465:62)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\""

////// 
//////Error From Player 1////

 "\"Cannot read property 'playerId' of undefined\""

 + "\"TypeError: Cannot read property 'playerId' of undefined\
    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/Stack.js:316:221)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\
    at new Promise (<anonymous>)\
    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\
    at Function.Stack.addToStack (http://localhost:7456/preview-scripts/assets/Script/Entites/Stack.js:301:16)\
    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:465:62)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\""

////// 

 Player 1 21:21:48 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 21:21:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Dead Bird effect ChainEffects<ChainEffects>"} 

 Player 1 21:21:48 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":277,"numberRolled":2,"rollingPlayerCardId":277,"stackEffectType":2,"attackedMonsterCardId":249}} 

 Player 1 21:21:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Remove After Resolve AttackRoll 3  "}} 

 Player 1 21:21:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Dead Bird effect ChainEffects<ChainEffects>"} 

 Player 1 21:21:48 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":277,"numberRolled":2,"rollingPlayerCardId":277,"stackEffectType":2,"attackedMonsterCardId":249}} 

 Player 1 21:21:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Response Remove After Resolve AttackRoll 3"},"childOfId":27} 

 Player 1 21:21:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Wait For Response From Player 2 "},"childOfId":27} 

 Player 1 21:21:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:21:48 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:21:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Dip<Monster>"} 

 Player 2 21:21:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Dip<Monster>"} 

 Player 2 21:21:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Dip<Monster> \n2:Activate Dead Bird "} 

 Player 2 21:21:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Dip<Monster> \n2:Activate Dead Bird "} 

 Player 2 21:21:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Dip<Monster> \n2:Activate Dead Bird "} 

 Player 2 21:21:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Dip<Monster> \n2:Activate Dead Bird "} 

 Player 2 21:21:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Dip<Monster> \n2:Activate Dead Bird "} 

 Player 2 21:21:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Dip<Monster> \n2:Activate Dead Bird "} 

 Player 2 21:21:49 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:21:49 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 1 21:21:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Wait For Response From Player 1 "},"childOfId":27} 

 Player 1 21:21:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:21:49 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 21:21:49 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 1 21:21:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Resolve ActivatePassiveEffect 4 "}} 

 Player 1 21:21:49 $LOG_ERROR:  
"no MetaIndex" 
//////Error From Player 1////
  

 Player 1 21:21:49 $LOG_ERROR:  
//////Error From Player 1////
 [object Object]
////// 

 Player 1 21:21:49 $LOG_ERROR:  
"no MetaIndex" 
//////Error From Player 1////
  

 Player 1 21:21:49 $LOG_ERROR:  
//////Error From Player 1////
 [object Object]
////// 

 Player 1 21:21:49 $LOG_ERROR:  
"no MetaIndex" 
//////Error From Player 1////
  

 Player 1 21:21:49 $LOG_ERROR:  
//////Error From Player 1////
 [object Object]
////// 

 Player 1 21:21:49 $LOG_ERROR:  
{"message":"\"Cannot read property 'getComponent' of undefined\"","stack":"\"TypeError: Cannot read property 'getComponent' of undefined\\n    at http://localhost:7456/preview-scripts/assets/Script/Managers/DataInterpreter.js:159:56\\n    at Array.map (<anonymous>)\\n    at Function.DataInterpreter.convertToServerData (http://localhost:7456/preview-scripts/assets/Script/Managers/DataInterpreter.js:152:75)\\n    at CardEffect.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/CardEffect.js:362:62)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.throw (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\\n    at rejected (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89794:36)\""} 
//////Error From Player 1////
  

 Player 1 21:21:49 $LOG_ERROR:  
//////Error From Player 1////

 "\"Cannot read property 'getComponent' of undefined\""

 + "\"TypeError: Cannot read property 'getComponent' of undefined\
    at http://localhost:7456/preview-scripts/assets/Script/Managers/DataInterpreter.js:159:56\
    at Array.map (<anonymous>)\
    at Function.DataInterpreter.convertToServerData (http://localhost:7456/preview-scripts/assets/Script/Managers/DataInterpreter.js:152:75)\
    at CardEffect.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/CardEffect.js:362:62)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.throw (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at rejected (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89794:36)\""

////// 
//////Error From Player 1////

 "\"Cannot read property 'getComponent' of undefined\""

 + "\"TypeError: Cannot read property 'getComponent' of undefined\
    at http://localhost:7456/preview-scripts/assets/Script/Managers/DataInterpreter.js:159:56\
    at Array.map (<anonymous>)\
    at Function.DataInterpreter.convertToServerData (http://localhost:7456/preview-scripts/assets/Script/Managers/DataInterpreter.js:152:75)\
    at CardEffect.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/CardEffect.js:362:62)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.throw (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at rejected (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89794:36)\""

////// 

 Player 1 21:21:49 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":161,"particleType":6} 

 Player 1 21:21:50 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 21:21:51 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 1 21:21:51 $DISABLE_PARTICLE_EFFECT:  
{"cardId":161,"particleType":6} 

 Player 2 21:27:14 $MATCH: 