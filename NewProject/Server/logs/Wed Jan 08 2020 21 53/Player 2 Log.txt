Start Log 
 Player 2 21:53:48 $START_GAME:  
 Player 2 21:53:48 $MOVE_TO_TABLE:  
 Player 2 21:53:54 $FINISH_LOAD:  

 {"id":2,"turnPlayerId":2} 
 Player 2 21:53:54 $ASSIGN_CHAR_TO_PLAYER:  

 {"playerId":1,"charCardId":275,"itemCardId":276} 
 Player 2 21:53:54 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":274}],"result":true,"preventMethod":false,"methodScopeId":273,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 21:53:54 $ASSIGN_CHAR_TO_PLAYER:  

 {"playerId":2,"charCardId":273,"itemCardId":274} 
 Player 2 21:53:54 $DECK_ARRAGMENT:  

 {"deckType":1,"arrangement":[139,16,118,45,122,56,66,117,53,108,23,21,48,81,138,76,24,22,88,92,69,28,43,121,142,50,64,71,68,97,30,44,27,93,37,99,133,111,112,46,31,33,91,8,15,94,59,126,77,74,141,116,119,130,47,72,34,104,49,79,73,83,19,57,35,41,58,106,82,114,98,115,10,40,86,65,102,124,123,25,63,90,84,140,70,85,125,143,129,17,95,113,132,67,11,29,134,103,38,75,55,105,78,128,60,51,107,120,20,87,52,96,42,14,36,12,136,32,80,62,100,101,18,127,131,110,9,54,26,13,135,137,89,39,61,7,109]} 
 Player 2 21:53:54 $DECK_ARRAGMENT:  

 {"deckType":2,"arrangement":[230,213,252,206,224,237,233,257,238,254,244,240,246,247,241,249,208,226,256,243,250,218,248,217,251,216,229,239,258,223,215,231,242,232,253,207,236,210,211,205,220,245,214,225,212,228,222,227,221,234,209,255,235,219]} 
 Player 2 21:53:54 $DECK_ARRAGMENT:  

 {"deckType":5,"arrangement":[151,161,178,160,201,162,158,190,196,189,183,181,149,197,168,187,200,152,172,165,176,155,153,148,147,163,167,192,193,194,156,191,180,174,159,171,177,150,202,179,188,186,169,182,173,164,184,198,166,157,199,154,185,170,195,146,175]} 
 Player 2 21:53:54 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 21:53:54 $FLIP_CARD:  

 {"cardId":175} 
 Player 2 21:53:54 $ADD_STORE_CARD:  

 {"cardId":175} 
 Player 2 21:53:54 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 21:53:54 $FLIP_CARD:  

 {"cardId":146} 
 Player 2 21:53:54 $ADD_STORE_CARD:  

 {"cardId":146} 
 Player 2 21:53:54 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 21:53:54 $DECK_ADD_TO_BOTTOM:  

 {"deckType":2,"cardId":219} 
 Player 2 21:53:54 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 21:53:54 $FLIP_CARD:  

 {"cardId":235} 
 Player 2 21:53:54 $REGISTER_PASSIVE_ITEM:  

 {"cardId":235} 
 Player 2 21:53:54 $ADD_MONSTER:  

 {"monsterPlaceId":1,"monsterId":235} 
 Player 2 21:53:54 $NEW_MONSTER_ON_PLACE:  

 {"cardId":235,"monsterPlaceId":1} 
 Player 2 21:53:55 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 21:53:55 $DECK_ADD_TO_BOTTOM:  

 {"deckType":2,"cardId":255} 
 Player 2 21:53:55 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 21:53:55 $DECK_ADD_TO_BOTTOM:  

 {"deckType":2,"cardId":209} 
 Player 2 21:53:55 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 21:53:55 $FLIP_CARD:  

 {"cardId":234} 
 Player 2 21:53:55 $ADD_MONSTER:  

 {"monsterPlaceId":2,"monsterId":234} 
 Player 2 21:53:55 $NEW_MONSTER_ON_PLACE:  

 {"cardId":234,"monsterPlaceId":2} 
 Player 2 21:53:55 $SET_MONEY:  

 {"playerId":1,"numOfCoins":3} 
 Player 2 21:53:55 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 2 21:53:55 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 21:53:55 $MOVE_CARD:  

 {"moveIndex":1,"cardId":109,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 21:53:55 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":109} 
 Player 2 21:53:55 $FLIP_CARD:  

 {"cardId":109} 
 Player 2 21:53:55 $FLIP_CARD:  

 {"cardId":109} 
 Player 2 21:53:55 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":109} 
 Player 2 21:53:55 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 21:53:55 $MOVE_CARD:  

 {"moveIndex":2,"cardId":7,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 21:53:56 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":7} 
 Player 2 21:53:56 $FLIP_CARD:  

 {"cardId":7} 
 Player 2 21:53:56 $FLIP_CARD:  

 {"cardId":7} 
 Player 2 21:53:56 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":7} 
 Player 2 21:53:56 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 21:53:56 $MOVE_CARD:  

 {"moveIndex":3,"cardId":61,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 21:53:56 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":61} 
 Player 2 21:53:56 $FLIP_CARD:  

 {"cardId":61} 
 Player 2 21:53:56 $FLIP_CARD:  

 {"cardId":61} 
 Player 2 21:53:56 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":61} 
 Player 2 21:53:56 $SET_MONEY:  

 {"playerId":2,"numOfCoins":3} 
 Player 2 21:53:56 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":273,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Player 2 21:53:56 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 21:53:56 $MOVE_CARD:  

 {"moveIndex":4,"cardId":39,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 21:53:57 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":39} 
 Player 2 21:53:57 $FLIP_CARD:  

 {"cardId":39} 
 Player 2 21:53:57 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":39} 
 Player 2 21:53:57 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 21:53:57 $MOVE_CARD:  

 {"moveIndex":5,"cardId":89,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 21:53:57 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":89} 
 Player 2 21:53:57 $FLIP_CARD:  

 {"cardId":89} 
 Player 2 21:53:57 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":89} 
 Player 2 21:53:57 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 21:53:57 $MOVE_CARD:  

 {"moveIndex":6,"cardId":137,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 21:53:58 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":137} 
 Player 2 21:53:58 $FLIP_CARD:  

 {"cardId":137} 
 Player 2 21:53:58 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":137} 
 Player 2 21:53:58 $GAME_HAS_STARTED:  
 Player 2 21:53:58 $SET_TURN:  

 {"playerId":2} 
 Player 2 21:53:58 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:53:58 $NEXT_STACK_ID:  
 Player 2 21:53:58 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 21:53:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 21:53:58 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":273,"turnPlayerCardId":273,"stackEffectType":13}} 
 Player 2 21:53:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 21:53:58 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":1,"creatorCardId":273,"turnPlayerCardId":273,"stackEffectType":13}} 
 Player 2 21:53:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 
 Player 2 21:53:58 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:53:58 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 2 21:53:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 21:53:58 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":273,"turnPlayerCardId":273,"stackEffectType":13}} 
 Player 2 21:53:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 
 Player 2 21:53:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 2 21:53:58 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:53:58 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 2 21:53:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 2 21:53:58 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 21:53:58 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 21:53:58 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 2 21:53:58 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 2 21:53:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 
 Player 2 21:53:58 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 21:53:58 $MOVE_CARD:  

 {"moveIndex":7,"cardId":135,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 21:53:59 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":135} 
 Player 2 21:53:59 $FLIP_CARD:  

 {"cardId":135} 
 Player 2 21:53:59 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":135} 
 Player 2 21:53:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 21:53:59 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":273,"turnPlayerCardId":273,"stackEffectType":13}} 
 Player 2 21:53:59 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 2 21:53:59 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 21:53:59 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":1,"creatorCardId":273,"turnPlayerCardId":273,"stackEffectType":13}} 
 Player 2 21:53:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 
 Player 2 21:53:59 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 21:53:59 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":273,"turnPlayerCardId":273,"stackEffectType":13}} 
 Player 2 21:53:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 
 Player 2 21:53:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Player 2 21:53:59 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 21:53:59 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 21:53:59 $ACTION_MASSAGE_REMOVE:  

 {"id":7} 
 Player 2 21:53:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Player 2 21:53:59 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:53:59 $ACTION_MASSAGE_REMOVE:  

 {"id":8} 
 Player 2 21:53:59 $ACTION_MASSAGE_REMOVE:  

 {"id":6} 
 Player 2 21:53:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":9,"_text":"Stack Was Emptied "}} 
 Player 2 21:53:59 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 21:53:59 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 2 21:53:59 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 2 21:53:59 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 2 21:53:59 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 2 21:53:59 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 2 21:53:59 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 2 21:53:59 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 2 21:53:59 $UPDATE_ACTIONS:  
 Player 2 21:54:01 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 2 21:54:02 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 2 21:54:25 $SHOW_DECISION:  

 {"startCardId":273,"endCardId":274} 
 Player 2 21:54:28 $NEXT_STACK_ID:  
 Player 2 21:54:28 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 21:54:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Blood Lust"} 
 Player 2 21:54:28 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":273,"hasLockingStackEffect":false,"itemToPlayCardId":274,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 21:54:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Blood Lust"} 
 Player 2 21:54:28 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":2,"creatorCardId":273,"hasLockingStackEffect":false,"itemToPlayCardId":274,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 21:54:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":10,"_text":"Add ActivateItem 2 "}} 
 Player 2 21:54:32 $SHOW_DECISION:  

 {"startCardId":274,"endCardId":273} 
 Player 2 21:54:35 $USE_ITEM:  

 {"cardId":274} 
 Player 2 21:54:35 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:54:35 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 2 21:54:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Blood Lust"} 
 Player 2 21:54:35 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":273,"hasLockingStackEffect":false,"itemToPlayCardId":274,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 21:54:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":11,"_text":"Response Adding ActivateItem 2"},"childOfId":10} 
 Player 2 21:54:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 
 Player 2 21:54:35 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:54:39 $ACTION_MASSAGE_REMOVE:  

 {"id":12} 
 Player 2 21:54:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 
 Player 2 21:54:40 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 21:54:40 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 21:54:40 $ACTION_MASSAGE_REMOVE:  

 {"id":13} 
 Player 2 21:54:40 $ACTION_MASSAGE_REMOVE:  

 {"id":11} 
 Player 2 21:54:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":14,"_text":"Resolve ActivateItem 2 "}} 
 Player 2 21:54:40 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":274,"particleType":6} 
 Player 2 21:54:42 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":274,"particleType":6} 
 Player 2 21:54:42 $PLAYER_GAIN_DMG:  

 {"playerId":2,"DMGToGain":1,"isTemp":true} 
 Player 2 21:54:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Blood Lust"} 
 Player 2 21:54:42 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":273,"hasLockingStackEffect":false,"itemToPlayCardId":274,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 21:54:42 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 2 21:54:42 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 21:54:42 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":2,"creatorCardId":273,"hasLockingStackEffect":false,"itemToPlayCardId":274,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 21:54:42 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":15,"_text":"Remove After Resolve ActivateItem 2  "}} 
 Player 2 21:54:42 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 21:54:42 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":273,"hasLockingStackEffect":false,"itemToPlayCardId":274,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 21:54:42 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":16,"_text":"Response Remove After Resolve ActivateItem 2"},"childOfId":15} 
 Player 2 21:54:42 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 
 Player 2 21:54:42 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 21:54:42 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 21:54:42 $ACTION_MASSAGE_REMOVE:  

 {"id":17} 
 Player 2 21:54:42 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 
 Player 2 21:54:42 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:54:43 $ACTION_MASSAGE_REMOVE:  

 {"id":18} 
 Player 2 21:54:43 $ACTION_MASSAGE_REMOVE:  

 {"id":16} 
 Player 2 21:54:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":19,"_text":"Stack Was Emptied "}} 
 Player 2 21:54:43 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 21:54:43 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 2 21:54:43 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 2 21:54:43 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 2 21:54:43 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 2 21:54:43 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 2 21:54:43 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 2 21:54:43 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 2 21:54:43 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 2 21:54:43 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 2 21:54:43 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 2 21:54:43 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 2 21:54:45 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 2 21:54:45 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 2 21:54:46 $SHOW_DECISION:  

 {"startCardId":273,"endCardId":235} 
 Player 2 21:54:49 $NEXT_STACK_ID:  
 Player 2 21:54:49 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 21:54:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Lust"} 
 Player 2 21:54:49 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":273,"attackingPlayerCardId":273,"idOfCardBeingAttacked":235,"stackEffectType":4}} 
 Player 2 21:54:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Lust"} 
 Player 2 21:54:49 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":273,"attackingPlayerCardId":273,"idOfCardBeingAttacked":235,"stackEffectType":4}} 
 Player 2 21:54:49 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":20,"_text":"Add DeclareAttack 3 "}} 
 Player 2 21:54:49 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:54:49 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 2 21:54:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Lust"} 
 Player 2 21:54:49 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":273,"attackingPlayerCardId":273,"idOfCardBeingAttacked":235,"stackEffectType":4}} 
 Player 2 21:54:49 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":21,"_text":"Response Adding DeclareAttack 3"},"childOfId":20} 
 Player 2 21:54:49 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 
 Player 2 21:54:49 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:54:50 $ACTION_MASSAGE_REMOVE:  

 {"id":22} 
 Player 2 21:54:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 
 Player 2 21:54:50 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 21:54:50 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 21:54:56 $ACTION_MASSAGE_REMOVE:  

 {"id":23} 
 Player 2 21:54:56 $ACTION_MASSAGE_REMOVE:  

 {"id":21} 
 Player 2 21:54:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Lust"} 
 Player 2 21:54:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Lust"} 
 Player 2 21:54:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Lust \n2:Player 1 activated The Lost"} 
 Player 2 21:54:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Lust \n2:Player 1 activated The Lost"} 
 Player 2 21:55:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Lust \n2:Player 1 activated The Lost"} 
 Player 2 21:55:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Lust \n2:Player 1 activated The Lost"} 
 Player 2 21:55:13 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 21:55:50 $MOVE_CARD_END:  

 {"moveIndex":8,"cardId":109,"flipIfFlipped":true,"playerId":1} 
 Player 2 21:55:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Lust \n2:Player 1 activated The Lost"} 
 Player 2 21:55:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Lust \n2:Player 1 activated The Lost"} 
 Player 2 21:55:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Lust \n2:Player 1 play Joker "} 
 Player 2 21:55:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Lust \n2:Player 1 play Joker "} 
 Player 2 21:55:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Lust \n2:Player 1 play Joker "} 
 Player 2 21:55:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Lust \n2:Player 1 play Joker "} 
 Player 2 21:55:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Lust \n2:Player 1 play Joker "} 
 Player 2 21:55:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Lust \n2:Player 1 play Joker "} 
 Player 2 21:55:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Lust \n2:Player 1 play Joker "} 
 Player 2 21:55:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Lust \n2:Player 1 play Joker "} 
 Player 2 21:55:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Lust \n2:Player 1 play Joker "} 
 Player 2 21:55:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Lust \n2:Player 1 play Joker "} 
 Player 2 21:55:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Lust \n2:Player 1 play Joker "} 
 Player 2 21:55:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Lust \n2:Player 1 play Joker "} 
 Player 2 21:55:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Lust \n2:Player 1 play Joker "} 
 Player 2 21:55:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Lust \n2:Player 1 play Joker "} 
 Player 2 21:55:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Lust \n2:Player 1 play Joker  \n3:Player 1 activated The Lost"} 
 Player 2 21:55:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Lust \n2:Player 1 play Joker  \n3:Player 1 activated The Lost"} 
 Player 2 21:55:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Lust \n2:Player 1 play Joker  \n3:Player 1 activated The Lost"} 
 Player 2 21:55:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Lust \n2:Player 1 play Joker  \n3:Player 1 activated The Lost"} 
 Player 2 21:55:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Lust \n2:Player 1 play Joker  \n3:Player 1 activated The Lost"} 
 Player 2 21:55:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Lust \n2:Player 1 play Joker  \n3:Player 1 activated The Lost"} 
 Player 2 21:56:25 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 21:56:25 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 21:56:25 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 21:56:26 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 21:56:26 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 22:00:57 $MOVE_CARD_END:  

 {"moveIndex":9,"cardId":89,"flipIfFlipped":false,"playerId":1} 
 Player 2 22:00:57 $MOVE_CARD_END:  

 {"moveIndex":10,"cardId":109,"flipIfFlipped":true,"playerId":1} 
 Player 2 22:00:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Lust \n2:Player 1 play Joker "} 
 Player 2 22:00:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Lust \n2:Player 1 play Joker "} 
 Player 2 22:00:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Lust \n2:Player 1 play Joker "} 
 Player 2 22:00:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Lust \n2:Player 1 play Joker "} 
 Player 2 22:00:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Lust \n2:Player 1 play Joker "} 
 Player 2 22:00:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Lust \n2:Player 1 play Joker "} 
 Player 2 22:01:01 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 22:01:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Lust"} 
 Player 2 22:01:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Lust"} 
 Player 2 22:01:01 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":235,"particleType":5} 
 Player 2 22:01:01 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":273,"scopeIsPlayer":true,"index":4,"originStackId":3},"isAfterActivation":true,"index":4} 
 Player 2 22:01:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Lust"} 
 Player 2 22:01:01 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":273,"attackingPlayerCardId":273,"idOfCardBeingAttacked":235,"stackEffectType":4}} 
 Player 2 22:01:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Lust"} 
 Player 2 22:01:01 $FINISH_DO_STACK_EFFECT:  

 {"playerId":1,"newStack":[{"entityId":3,"creatorCardId":273,"attackingPlayerCardId":273,"idOfCardBeingAttacked":235,"stackEffectType":4}]} 
 Player 2 22:01:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Lust"} 
 Player 2 22:01:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Lust"} 
 Player 2 22:01:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Lust"} 
 Player 2 22:01:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Lust"} 
 Player 2 22:01:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Lust"} 
 Player 2 22:01:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Lust"} 
 Player 2 22:01:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Lust"} 
 Player 2 22:01:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Lust"} 
 Player 2 22:01:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Lust"} 
 Player 2 22:01:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Lust"} 
 Player 2 22:01:02 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 22:01:10 $NEXT_STACK_ID:  
 Player 2 22:01:10 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 22:01:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Lust<Monster>"} 
 Player 2 22:01:10 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":6,"creatorCardId":273,"rollingPlayerCardId":273,"stackEffectType":2,"attackedMonsterCardId":235}} 
 Player 2 22:01:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Lust<Monster>"} 
 Player 2 22:01:10 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":6,"creatorCardId":273,"rollingPlayerCardId":273,"stackEffectType":2,"attackedMonsterCardId":235}} 
 Player 2 22:01:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":44,"_text":"Add AttackRoll 6 "}} 
 Player 2 22:01:10 $ROLL_DICE:  

 {"playerId":2} 
 Player 2 22:01:12 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":5} 
 Player 2 22:01:12 $UPDATE_STACK_VIS:  

 {"stackId":6,"text":"player rolled 5 vs Lust<Monster>"} 
 Player 2 22:01:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 5 vs Lust<Monster>"} 
 Player 2 22:01:12 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 22:01:12 $ACTION_MASSAGE_REMOVE:  

 {"id":44} 
 Player 2 22:01:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 5 vs Lust<Monster>"} 
 Player 2 22:01:12 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":6,"creatorCardId":273,"numberRolled":5,"rollingPlayerCardId":273,"stackEffectType":2,"attackedMonsterCardId":235}} 
 Player 2 22:01:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":45,"_text":"Response Adding AttackRoll 6"},"childOfId":44} 
 Player 2 22:01:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":46,"_text":"Wait For Response From Player 2 "},"childOfId":44} 
 Player 2 22:01:12 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 22:01:14 $ACTION_MASSAGE_REMOVE:  

 {"id":46} 
 Player 2 22:01:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":47,"_text":"Wait For Response From Player 1 "},"childOfId":44} 
 Player 2 22:01:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 22:01:14 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 22:01:14 $ACTION_MASSAGE_REMOVE:  

 {"id":47} 
 Player 2 22:01:14 $ACTION_MASSAGE_REMOVE:  

 {"id":45} 
 Player 2 22:01:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":48,"_text":"Resolve AttackRoll 6 "}} 
 Player 2 22:01:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":49,"_text":"Added 0 to original roll"}} 
 Player 2 22:01:14 $NEXT_STACK_ID:  
 Player 2 22:01:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 5 vs Lust<Monster>"} 
 Player 2 22:01:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 22:01:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Lust \n2:Player 2 rolled 5 vs Lust<Monster>"} 
 Player 2 22:01:14 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":7,"creatorCardId":273,"entityToDoDamageCardId":273,"entityToTakeDamageCardId":235,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 22:01:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Lust \n2:Player 2 rolled 5 vs Lust<Monster>"} 
 Player 2 22:01:14 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":6,"creatorCardId":273,"numberRolled":5,"rollingPlayerCardId":273,"stackEffectType":2,"attackedMonsterCardId":235}} 
 Player 2 22:01:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Lust \n2:Player 2 rolled 5 vs Lust<Monster>"} 
 Player 2 22:01:14 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":273,"entityToDoDamageCardId":273,"entityToTakeDamageCardId":235,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 22:01:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Lust \n2:Player 2 rolled 5 vs Lust<Monster>"} 
 Player 2 22:01:14 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":6,"creatorCardId":273,"numberRolled":5,"rollingPlayerCardId":273,"stackEffectType":2,"attackedMonsterCardId":235}} 
 Player 2 22:01:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Lust \n2:Player 2 rolled 5 vs Lust<Monster>"} 
 Player 2 22:01:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Lust \n2:Player 2 rolled 5 vs Lust<Monster>"} 
 Player 2 22:01:14 $REPLACE_STACK:  

 {"currentStack":[{"entityId":7,"creatorCardId":273,"entityToDoDamageCardId":273,"entityToTakeDamageCardId":235,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":6,"creatorCardId":273,"numberRolled":5,"rollingPlayerCardId":273,"stackEffectType":2,"attackedMonsterCardId":235}]} 
 Player 2 22:01:14 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":273,"scopeIsPlayer":true,"index":5,"originStackId":6},"isAfterActivation":true,"index":5} 
 Player 2 22:01:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Lust \n2:Player 2 rolled 5 vs Lust<Monster>"} 
 Player 2 22:01:14 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":6,"creatorCardId":273,"numberRolled":5,"rollingPlayerCardId":273,"stackEffectType":2,"attackedMonsterCardId":235}} 
 Player 2 22:01:14 $ACTION_MASSAGE_REMOVE:  

 {"id":48} 
 Player 2 22:01:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Lust"} 
 Player 2 22:01:14 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":6,"creatorCardId":273,"numberRolled":5,"rollingPlayerCardId":273,"stackEffectType":2,"attackedMonsterCardId":235}} 
 Player 2 22:01:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":50,"_text":"Remove After Resolve AttackRoll 6  "}} 
 Player 2 22:01:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Lust"} 
 Player 2 22:01:14 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":6,"creatorCardId":273,"numberRolled":5,"rollingPlayerCardId":273,"stackEffectType":2,"attackedMonsterCardId":235}} 
 Player 2 22:01:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":51,"_text":"Response Remove After Resolve AttackRoll 6"},"childOfId":50} 
 Player 2 22:01:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":52,"_text":"Wait For Response From Player 2 "},"childOfId":50} 
 Player 2 22:01:15 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 22:01:15 $ACTION_MASSAGE_REMOVE:  

 {"id":52} 
 Player 2 22:01:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":53,"_text":"Wait For Response From Player 1 "},"childOfId":50} 
 Player 2 22:01:15 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 22:01:15 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 22:01:15 $ACTION_MASSAGE_REMOVE:  

 {"id":53} 
 Player 2 22:01:15 $ACTION_MASSAGE_REMOVE:  

 {"id":51} 
 Player 2 22:01:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":54,"_text":"Resolve CombatDamage 7 "}} 
 Player 2 22:01:15 $UPDATE_STACK_VIS:  

 {"stackId":7,"text":"Samson will deal 2 combat damage to Lust"} 
 Player 2 22:01:15 $MONSTER_GET_DAMAGED:  

 {"cardId":235,"hpLeft":0,"damageDealerId":273} 
 Player 2 22:01:15 $NEXT_STACK_ID:  
 Player 2 22:01:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Lust"} 
 Player 2 22:01:15 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 22:01:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Lust \n2:[object Object] killed by Samson"} 
 Player 2 22:01:15 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":8,"creatorCardId":273,"monsterToDieCardId":235,"stackEffectType":5,"killerId":273}} 
 Player 2 22:01:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Lust \n2:[object Object] killed by Samson"} 
 Player 2 22:01:15 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":273,"entityToDoDamageCardId":273,"entityToTakeDamageCardId":235,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 22:01:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Lust \n2:[object Object] killed by Samson"} 
 Player 2 22:01:15 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":273,"entityToDoDamageCardId":273,"entityToTakeDamageCardId":235,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 22:01:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Lust \n2:[object Object] killed by Samson"} 
 Player 2 22:01:15 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":8,"creatorCardId":273,"monsterToDieCardId":235,"stackEffectType":5,"killerId":273}} 
 Player 2 22:01:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Lust \n2:[object Object] killed by Samson"} 
 Player 2 22:01:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Lust \n2:[object Object] killed by Samson"} 
 Player 2 22:01:15 $REPLACE_STACK:  

 {"currentStack":[{"entityId":7,"creatorCardId":273,"entityToDoDamageCardId":273,"entityToTakeDamageCardId":235,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":8,"creatorCardId":273,"monsterToDieCardId":235,"stackEffectType":5,"killerId":273}]} 
 Player 2 22:01:15 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":273}],"result":null,"preventMethod":false,"methodScopeId":235,"scopeIsPlayer":false,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 
 Player 2 22:01:15 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":2},{"type":2,"number":5},{"type":0,"number":273},{"type":0,"number":235}],"result":null,"preventMethod":false,"methodScopeId":273,"scopeIsPlayer":true,"index":7,"originStackId":7},"isAfterActivation":true,"index":7} 
 Player 2 22:01:15 $NEXT_STACK_ID:  
 Player 2 22:01:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Lust \n2:[object Object] killed by Samson"} 
 Player 2 22:01:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Lust \n2:[object Object] killed by Samson \n3:Activate Lust effect DealDamage<DealDamage>"} 
 Player 2 22:01:16 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":9,"creatorCardId":235,"hasLockingStackEffect":false,"cardActivatorId":235,"cardWithEffectId":235,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":235,"cardId":235,"effctType":0},"isAfterActivation":true,"index":7,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 22:01:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Lust \n2:[object Object] killed by Samson \n3:Activate Lust effect DealDamage<DealDamage>"} 
 Player 2 22:01:16 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":9,"creatorCardId":235,"hasLockingStackEffect":false,"cardActivatorId":235,"cardWithEffectId":235,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":235,"cardId":235,"effctType":0},"isAfterActivation":true,"index":7,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 22:01:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":55,"_text":"Add ActivatePassiveEffect 9 "}} 
 Player 2 22:01:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Lust \n2:[object Object] killed by Samson \n3:Activate Lust effect DealDamage<DealDamage>"} 
 Player 2 22:01:16 $ACTION_MASSAGE_REMOVE:  

 {"id":55} 
 Player 2 22:01:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Lust \n2:[object Object] killed by Samson \n3:Activate Lust effect DealDamage<DealDamage>"} 
 Player 2 22:01:16 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[273],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":235,"effectCardPlayer":235},"entityId":9,"creatorCardId":235,"hasLockingStackEffect":false,"cardActivatorId":235,"cardWithEffectId":235,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":235,"cardId":235,"effctType":0},"isAfterActivation":true,"index":7,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 22:01:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":56,"_text":"Response Adding ActivatePassiveEffect 9"},"childOfId":55} 
 Player 2 22:01:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":57,"_text":"Wait For Response From Player 2 "},"childOfId":55} 
 Player 2 22:01:16 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 22:01:16 $ACTION_MASSAGE_REMOVE:  

 {"id":57} 
 Player 2 22:01:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":58,"_text":"Wait For Response From Player 1 "},"childOfId":55} 
 Player 2 22:01:16 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 22:01:16 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 22:01:16 $ACTION_MASSAGE_REMOVE:  

 {"id":58} 
 Player 2 22:01:16 $ACTION_MASSAGE_REMOVE:  

 {"id":56} 
 Player 2 22:01:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":59,"_text":"Resolve ActivatePassiveEffect 9 "}} 
 Player 2 22:01:16 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":235,"particleType":6} 
 Player 2 22:01:17 $ACTION_MASSAGE_REMOVE:  

 {"id":49} 
 Player 2 22:01:17 $ACTION_MASSAGE_REMOVE:  

 {"id":50} 
 Player 2 22:01:18 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":235,"particleType":6} 
 Player 2 22:01:18 $PLAYER_GET_HIT:  

 {"playerId":2,"damage":1,"damageDealerId":235} 
 Player 2 22:01:18 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":235}],"result":null,"preventMethod":false,"methodScopeId":273,"scopeIsPlayer":true,"index":8,"originStackId":-1},"isAfterActivation":true,"index":8} 
 Player 2 22:01:18 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":2},{"type":2,"number":5},{"type":0,"number":273},{"type":0,"number":235}],"result":null,"preventMethod":false,"methodScopeId":273,"scopeIsPlayer":false,"index":7,"originStackId":7},"isAfterActivation":true,"index":7} 
 Player 2 22:01:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Lust \n2:[object Object] killed by Samson \n3:Activate Lust effect DealDamage<DealDamage>"} 
 Player 2 22:01:18 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[273],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":235,"effectCardPlayer":235},"entityId":9,"creatorCardId":235,"hasLockingStackEffect":false,"cardActivatorId":235,"cardWithEffectId":235,"isAfterActivation":true,"index":7,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 22:01:18 $ACTION_MASSAGE_REMOVE:  

 {"id":59} 
 Player 2 22:01:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Lust \n2:[object Object] killed by Samson"} 
 Player 2 22:01:18 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[273],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":235,"effectCardPlayer":235},"entityId":9,"creatorCardId":235,"hasLockingStackEffect":false,"cardActivatorId":235,"cardWithEffectId":235,"isAfterActivation":true,"index":7,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 22:01:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":60,"_text":"Remove After Resolve ActivatePassiveEffect 9  "}} 
 Player 2 22:01:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Lust \n2:[object Object] killed by Samson"} 
 Player 2 22:01:18 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[273],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":235,"effectCardPlayer":235},"entityId":9,"creatorCardId":235,"hasLockingStackEffect":false,"cardActivatorId":235,"cardWithEffectId":235,"isAfterActivation":true,"index":7,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 22:01:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":61,"_text":"Response Remove After Resolve ActivatePassiveEffect 9"},"childOfId":60} 
 Player 2 22:01:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":62,"_text":"Wait For Response From Player 1 "},"childOfId":60} 
 Player 2 22:01:19 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 22:01:19 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 22:01:20 $ACTION_MASSAGE_REMOVE:  

 {"id":62} 
 Player 2 22:01:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":63,"_text":"Wait For Response From Player 2 "},"childOfId":60} 
 Player 2 22:01:20 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 22:01:20 $ACTION_MASSAGE_REMOVE:  

 {"id":63} 
 Player 2 22:01:20 $ACTION_MASSAGE_REMOVE:  

 {"id":61} 
 Player 2 22:01:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":64,"_text":"Resolve MonsterDeath 8 "}} 
 Player 2 22:01:20 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":235,"particleType":5} 
 Player 2 22:01:20 $CANCEL_ATTACK:  
 Player 2 22:01:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 22:01:20 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":273,"entityToDoDamageCardId":273,"entityToTakeDamageCardId":235,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 22:01:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":65,"_text":"Fizzle CombatDamage 7"}} 
 Player 2 22:01:20 $FIZZLE_STACK_EFFECT:  

 {"entityId":7} 
 Player 2 22:01:20 $NEXT_STACK_ID:  
 Player 2 22:01:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 22:01:20 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 22:01:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Lust<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 2 22:01:20 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":10,"creatorCardId":273,"monsterCardWithRewardId":235,"playerCardIdToReward":273,"stackEffectType":7}} 
 Player 2 22:01:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Lust<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 2 22:01:20 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":8,"creatorCardId":273,"monsterToDieCardId":235,"stackEffectType":5,"killerId":273}} 
 Player 2 22:01:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Lust<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 2 22:01:20 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":10,"creatorCardId":273,"monsterCardWithRewardId":235,"playerCardIdToReward":273,"stackEffectType":7}} 
 Player 2 22:01:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Lust<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 2 22:01:20 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":8,"creatorCardId":273,"monsterToDieCardId":235,"stackEffectType":5,"killerId":273}} 
 Player 2 22:01:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Lust<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 2 22:01:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Lust<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 2 22:01:20 $REPLACE_STACK:  

 {"currentStack":[{"entityId":10,"creatorCardId":273,"monsterCardWithRewardId":235,"playerCardIdToReward":273,"stackEffectType":7},{"entityId":8,"creatorCardId":273,"monsterToDieCardId":235,"stackEffectType":5,"killerId":273}]} 
 Player 2 22:01:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Lust<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 2 22:01:20 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":8,"creatorCardId":273,"monsterToDieCardId":235,"stackEffectType":5,"killerId":273}} 
 Player 2 22:01:20 $ACTION_MASSAGE_REMOVE:  

 {"id":64} 
 Player 2 22:01:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Lust<Monster> reward"} 
 Player 2 22:01:20 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":8,"creatorCardId":273,"monsterToDieCardId":235,"stackEffectType":5,"killerId":273}} 
 Player 2 22:01:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":66,"_text":"Remove After Resolve MonsterDeath 8  "}} 
 Player 2 22:01:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Lust<Monster> reward"} 
 Player 2 22:01:20 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":8,"creatorCardId":273,"monsterToDieCardId":235,"stackEffectType":5,"killerId":273}} 
 Player 2 22:01:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":67,"_text":"Response Remove After Resolve MonsterDeath 8"},"childOfId":66} 
 Player 2 22:01:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":68,"_text":"Wait For Response From Player 2 "},"childOfId":66} 
 Player 2 22:01:21 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 22:01:21 $ACTION_MASSAGE_REMOVE:  

 {"id":68} 
 Player 2 22:01:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":69,"_text":"Wait For Response From Player 1 "},"childOfId":66} 
 Player 2 22:01:21 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 22:01:21 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 22:01:21 $ACTION_MASSAGE_REMOVE:  

 {"id":69} 
 Player 2 22:01:21 $ACTION_MASSAGE_REMOVE:  

 {"id":67} 
 Player 2 22:01:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":70,"_text":"Resolve MonsterRewardStackEffect 10 "}} 
 Player 2 22:01:21 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 22:01:21 $MOVE_CARD:  

 {"moveIndex":11,"cardId":13,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 22:01:21 $ACTION_MASSAGE_REMOVE:  

 {"id":60} 
 Player 2 22:01:22 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":13} 
 Player 2 22:01:22 $FLIP_CARD:  

 {"cardId":13} 
 Player 2 22:01:22 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":13} 
 Player 2 22:01:22 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":235,"scopeIsPlayer":false,"index":9,"originStackId":10},"isAfterActivation":true,"index":9} 
 Player 2 22:01:22 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 22:01:22 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 2 22:01:22 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 2 22:01:22 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 2 22:01:22 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 2 22:01:22 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 2 22:01:22 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 2 22:01:22 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 2 22:01:22 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 2 22:01:22 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 2 22:01:22 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 2 22:01:22 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 2 22:01:22 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 2 22:01:22 $ACTION_MASSAGE_REMOVE:  

 {"id":24} 
 Player 2 22:01:22 $ACTION_MASSAGE_REMOVE:  

 {"id":28} 
 Player 2 22:01:22 $ACTION_MASSAGE_REMOVE:  

 {"id":29} 
 Player 2 22:01:22 $ACTION_MASSAGE_REMOVE:  

 {"id":33} 
 Player 2 22:01:22 $ACTION_MASSAGE_REMOVE:  

 {"id":34} 
 Player 2 22:01:22 $ACTION_MASSAGE_REMOVE:  

 {"id":38} 
 Player 2 22:01:22 $ACTION_MASSAGE_REMOVE:  

 {"id":39} 
 Player 2 22:01:22 $ACTION_MASSAGE_REMOVE:  

 {"id":43} 
 Player 2 22:01:22 $ACTION_MASSAGE_REMOVE:  

 {"id":44} 
 Player 2 22:01:22 $ACTION_MASSAGE_REMOVE:  

 {"id":48} 
 Player 2 22:01:22 $ACTION_MASSAGE_REMOVE:  

 {"id":49} 
 Player 2 22:01:22 $ACTION_MASSAGE_REMOVE:  

 {"id":50} 
 Player 2 22:01:22 $ACTION_MASSAGE_REMOVE:  

 {"id":54} 
 Player 2 22:01:22 $ACTION_MASSAGE_REMOVE:  

 {"id":55} 
 Player 2 22:01:22 $ACTION_MASSAGE_REMOVE:  

 {"id":59} 
 Player 2 22:01:22 $ACTION_MASSAGE_REMOVE:  

 {"id":60} 
 Player 2 22:01:22 $ACTION_MASSAGE_REMOVE:  

 {"id":64} 
 Player 2 22:01:22 $ACTION_MASSAGE_REMOVE:  

 {"id":65} 
 Player 2 22:01:22 $ACTION_MASSAGE_REMOVE:  

 {"id":66} 
 Player 2 22:01:22 $ACTION_MASSAGE_REMOVE:  

 {"id":70} 
 Player 2 22:01:22 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 22:01:22 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":10,"creatorCardId":273,"monsterCardWithRewardId":235,"playerCardIdToReward":273,"stackEffectType":7}} 
 Player 2 22:01:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":71,"_text":"Fizzle MonsterRewardStackEffect 10"}} 
 Player 2 22:01:23 $FIZZLE_STACK_EFFECT:  

 {"entityId":10} 
 Player 2 22:01:23 $MOVE_CARD:  

 {"moveIndex":12,"cardId":235,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"soulsLayout"} 
 Player 2 22:01:23 $ACTION_MASSAGE_REMOVE:  

 {"id":65} 
 Player 2 22:01:23 $ACTION_MASSAGE_REMOVE:  

 {"id":66} 
 Player 2 22:01:23 $GET_SOUL:  

 {"playerId":2,"cardId":235} 
 Player 2 22:01:23 $REMOVE_FROM_PASSIVE_MANAGER:  

 {"cardId":235} 
 Player 2 22:01:23 $REMOVE_MONSTER:  

 {"holderId":1,"monsterId":235} 
 Player 2 22:01:24 $NEXT_STACK_ID:  
 Player 2 22:01:24 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 22:01:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder1 slot"} 
 Player 2 22:01:24 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":11,"creatorCardId":273,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 
 Player 2 22:01:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder1 slot"} 
 Player 2 22:01:24 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":11,"creatorCardId":273,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 
 Player 2 22:01:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":72,"_text":"Add RefillEmptySlot 11 "}} 
 Player 2 22:01:24 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 22:01:24 $ACTION_MASSAGE_REMOVE:  

 {"id":72} 
 Player 2 22:01:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder1 slot"} 
 Player 2 22:01:24 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":11,"creatorCardId":273,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 
 Player 2 22:01:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":73,"_text":"Response Adding RefillEmptySlot 11"},"childOfId":72} 
 Player 2 22:01:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":74,"_text":"Wait For Response From Player 2 "},"childOfId":72} 
 Player 2 22:01:24 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 22:01:24 $ACTION_MASSAGE_REMOVE:  

 {"id":74} 
 Player 2 22:01:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":75,"_text":"Wait For Response From Player 1 "},"childOfId":72} 
 Player 2 22:01:24 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 22:01:24 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 22:01:25 $ACTION_MASSAGE_REMOVE:  

 {"id":71} 
 Player 2 22:01:29 $ACTION_MASSAGE_REMOVE:  

 {"id":75} 
 Player 2 22:01:29 $ACTION_MASSAGE_REMOVE:  

 {"id":73} 
 Player 2 22:01:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":76,"_text":"Resolve RefillEmptySlot 11 "}} 
 Player 2 22:01:29 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 22:01:29 $FLIP_CARD:  

 {"cardId":221} 
 Player 2 22:01:29 $ADD_MONSTER:  

 {"monsterPlaceId":1,"monsterId":221} 
 Player 2 22:01:29 $NEW_MONSTER_ON_PLACE:  

 {"cardId":221,"monsterPlaceId":1} 
 Player 2 22:01:29 $ACTION_MASSAGE_REMOVE:  

 {"id":76} 
 Player 2 22:01:29 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 22:01:29 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":11,"creatorCardId":273,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 
 Player 2 22:01:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":77,"_text":"Remove After Resolve RefillEmptySlot 11  "}} 
 Player 2 22:01:29 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 22:01:29 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":11,"creatorCardId":273,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 
 Player 2 22:01:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":78,"_text":"Response Remove After Resolve RefillEmptySlot 11"},"childOfId":77} 
 Player 2 22:01:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":79,"_text":"Wait For Response From Player 1 "},"childOfId":77} 
 Player 2 22:01:29 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 22:01:30 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 22:01:30 $ACTION_MASSAGE_REMOVE:  

 {"id":79} 
 Player 2 22:01:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":80,"_text":"Wait For Response From Player 2 "},"childOfId":77} 
 Player 2 22:01:30 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 22:01:30 $ACTION_MASSAGE_REMOVE:  

 {"id":80} 
 Player 2 22:01:30 $ACTION_MASSAGE_REMOVE:  

 {"id":78} 
 Player 2 22:01:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":81,"_text":"Stack Was Emptied "}} 
 Player 2 22:01:30 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 22:01:30 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 2 22:01:30 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 2 22:01:30 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 2 22:01:30 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 2 22:01:30 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 2 22:01:30 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 2 22:01:30 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 2 22:01:30 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 2 22:01:30 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 2 22:01:30 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 2 22:01:30 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 2 22:01:30 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 2 22:01:30 $ACTION_MASSAGE_REMOVE:  

 {"id":24} 
 Player 2 22:01:30 $ACTION_MASSAGE_REMOVE:  

 {"id":28} 
 Player 2 22:01:30 $ACTION_MASSAGE_REMOVE:  

 {"id":29} 
 Player 2 22:01:30 $ACTION_MASSAGE_REMOVE:  

 {"id":33} 
 Player 2 22:01:30 $ACTION_MASSAGE_REMOVE:  

 {"id":34} 
 Player 2 22:01:30 $ACTION_MASSAGE_REMOVE:  

 {"id":38} 
 Player 2 22:01:30 $ACTION_MASSAGE_REMOVE:  

 {"id":39} 
 Player 2 22:01:30 $ACTION_MASSAGE_REMOVE:  

 {"id":43} 
 Player 2 22:01:30 $ACTION_MASSAGE_REMOVE:  

 {"id":44} 
 Player 2 22:01:30 $ACTION_MASSAGE_REMOVE:  

 {"id":48} 
 Player 2 22:01:30 $ACTION_MASSAGE_REMOVE:  

 {"id":49} 
 Player 2 22:01:30 $ACTION_MASSAGE_REMOVE:  

 {"id":50} 
 Player 2 22:01:30 $ACTION_MASSAGE_REMOVE:  

 {"id":54} 
 Player 2 22:01:30 $ACTION_MASSAGE_REMOVE:  

 {"id":55} 
 Player 2 22:01:30 $ACTION_MASSAGE_REMOVE:  

 {"id":59} 
 Player 2 22:01:31 $ACTION_MASSAGE_REMOVE:  

 {"id":60} 
 Player 2 22:01:31 $ACTION_MASSAGE_REMOVE:  

 {"id":64} 
 Player 2 22:01:31 $ACTION_MASSAGE_REMOVE:  

 {"id":65} 
 Player 2 22:01:31 $ACTION_MASSAGE_REMOVE:  

 {"id":66} 
 Player 2 22:01:31 $ACTION_MASSAGE_REMOVE:  

 {"id":70} 
 Player 2 22:01:31 $ACTION_MASSAGE_REMOVE:  

 {"id":71} 
 Player 2 22:01:31 $ACTION_MASSAGE_REMOVE:  

 {"id":72} 
 Player 2 22:01:31 $ACTION_MASSAGE_REMOVE:  

 {"id":76} 
 Player 2 22:01:31 $ACTION_MASSAGE_REMOVE:  

 {"id":77} 
 Player 2 22:01:31 $ACTION_MASSAGE_REMOVE:  

 {"id":81} 
 Player 2 22:01:31 $ACTION_MASSAGE_REMOVE:  

 {"id":70} 
 Player 2 22:01:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":82,"_text":"Stack Was Emptied "}} 
 Player 2 22:01:31 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 22:01:31 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 2 22:01:31 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 2 22:01:31 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 2 22:01:31 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 2 22:01:31 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 2 22:01:31 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 2 22:01:31 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 2 22:01:31 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 2 22:01:31 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 2 22:01:31 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 2 22:01:31 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 2 22:01:31 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 2 22:01:31 $ACTION_MASSAGE_REMOVE:  

 {"id":24} 
 Player 2 22:01:31 $ACTION_MASSAGE_REMOVE:  

 {"id":28} 
 Player 2 22:01:31 $ACTION_MASSAGE_REMOVE:  

 {"id":29} 
 Player 2 22:01:31 $ACTION_MASSAGE_REMOVE:  

 {"id":33} 
 Player 2 22:01:31 $ACTION_MASSAGE_REMOVE:  

 {"id":34} 
 Player 2 22:01:31 $ACTION_MASSAGE_REMOVE:  

 {"id":38} 
 Player 2 22:01:31 $ACTION_MASSAGE_REMOVE:  

 {"id":39} 
 Player 2 22:01:31 $ACTION_MASSAGE_REMOVE:  

 {"id":43} 
 Player 2 22:01:31 $ACTION_MASSAGE_REMOVE:  

 {"id":44} 
 Player 2 22:01:31 $ACTION_MASSAGE_REMOVE:  

 {"id":48} 
 Player 2 22:01:31 $ACTION_MASSAGE_REMOVE:  

 {"id":49} 
 Player 2 22:01:31 $ACTION_MASSAGE_REMOVE:  

 {"id":50} 
 Player 2 22:01:31 $ACTION_MASSAGE_REMOVE:  

 {"id":54} 
 Player 2 22:01:31 $ACTION_MASSAGE_REMOVE:  

 {"id":55} 
 Player 2 22:01:31 $ACTION_MASSAGE_REMOVE:  

 {"id":59} 
 Player 2 22:01:31 $ACTION_MASSAGE_REMOVE:  

 {"id":60} 
 Player 2 22:01:31 $ACTION_MASSAGE_REMOVE:  

 {"id":64} 
 Player 2 22:01:31 $ACTION_MASSAGE_REMOVE:  

 {"id":65} 
 Player 2 22:01:31 $ACTION_MASSAGE_REMOVE:  

 {"id":66} 
 Player 2 22:01:31 $ACTION_MASSAGE_REMOVE:  

 {"id":70} 
 Player 2 22:01:31 $ACTION_MASSAGE_REMOVE:  

 {"id":71} 
 Player 2 22:01:31 $ACTION_MASSAGE_REMOVE:  

 {"id":72} 
 Player 2 22:01:31 $ACTION_MASSAGE_REMOVE:  

 {"id":76} 
 Player 2 22:01:31 $ACTION_MASSAGE_REMOVE:  

 {"id":77} 
 Player 2 22:01:32 $ACTION_MASSAGE_REMOVE:  

 {"id":81} 
 Player 2 22:01:32 $ACTION_MASSAGE_REMOVE:  

 {"id":82} 
 Player 2 22:01:32 $ACTION_MASSAGE_REMOVE:  

 {"id":54} 
 Player 2 22:01:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":83,"_text":"Stack Was Emptied "}} 
 Player 2 22:01:32 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 22:01:32 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 2 22:01:32 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 2 22:01:32 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 2 22:01:32 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 2 22:01:32 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 2 22:01:32 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 2 22:01:32 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 2 22:01:32 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 2 22:01:32 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 2 22:01:32 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 2 22:01:32 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 2 22:01:32 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 2 22:01:32 $ACTION_MASSAGE_REMOVE:  

 {"id":24} 
 Player 2 22:01:32 $ACTION_MASSAGE_REMOVE:  

 {"id":28} 
 Player 2 22:01:32 $ACTION_MASSAGE_REMOVE:  

 {"id":29} 
 Player 2 22:01:32 $ACTION_MASSAGE_REMOVE:  

 {"id":33} 
 Player 2 22:01:32 $ACTION_MASSAGE_REMOVE:  

 {"id":34} 
 Player 2 22:01:32 $ACTION_MASSAGE_REMOVE:  

 {"id":38} 
 Player 2 22:01:32 $ACTION_MASSAGE_REMOVE:  

 {"id":39} 
 Player 2 22:01:32 $ACTION_MASSAGE_REMOVE:  

 {"id":43} 
 Player 2 22:01:32 $ACTION_MASSAGE_REMOVE:  

 {"id":44} 
 Player 2 22:01:32 $ACTION_MASSAGE_REMOVE:  

 {"id":48} 
 Player 2 22:01:32 $ACTION_MASSAGE_REMOVE:  

 {"id":49} 
 Player 2 22:01:32 $ACTION_MASSAGE_REMOVE:  

 {"id":50} 
 Player 2 22:01:32 $ACTION_MASSAGE_REMOVE:  

 {"id":54} 
 Player 2 22:01:32 $ACTION_MASSAGE_REMOVE:  

 {"id":55} 
 Player 2 22:01:32 $ACTION_MASSAGE_REMOVE:  

 {"id":59} 
 Player 2 22:01:32 $ACTION_MASSAGE_REMOVE:  

 {"id":60} 
 Player 2 22:01:32 $ACTION_MASSAGE_REMOVE:  

 {"id":64} 
 Player 2 22:01:32 $ACTION_MASSAGE_REMOVE:  

 {"id":65} 
 Player 2 22:01:32 $ACTION_MASSAGE_REMOVE:  

 {"id":66} 
 Player 2 22:01:32 $ACTION_MASSAGE_REMOVE:  

 {"id":70} 
 Player 2 22:01:32 $ACTION_MASSAGE_REMOVE:  

 {"id":71} 
 Player 2 22:01:32 $ACTION_MASSAGE_REMOVE:  

 {"id":72} 
 Player 2 22:01:32 $ACTION_MASSAGE_REMOVE:  

 {"id":76} 
 Player 2 22:01:32 $ACTION_MASSAGE_REMOVE:  

 {"id":77} 
 Player 2 22:01:32 $ACTION_MASSAGE_REMOVE:  

 {"id":81} 
 Player 2 22:01:32 $ACTION_MASSAGE_REMOVE:  

 {"id":82} 
 Player 2 22:01:32 $ACTION_MASSAGE_REMOVE:  

 {"id":83} 
 Player 2 22:01:32 $ACTION_MASSAGE_REMOVE:  

 {"id":81} 
 Player 2 22:01:32 $ACTION_MASSAGE_REMOVE:  

 {"id":82} 
 Player 2 22:01:32 $ACTION_MASSAGE_REMOVE:  

 {"id":83} 
 Player 2 22:01:32 $ACTION_MASSAGE_REMOVE:  

 {"id":77} 
 Player 2 22:02:03 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 22:02:03 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 22:02:03 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 2 22:02:03 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 2 22:02:03 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 2 22:02:03 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 2 22:02:03 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 2 22:02:03 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 2 22:02:03 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 2 22:02:03 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 2 22:02:03 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 2 22:02:03 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 2 22:02:03 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 2 22:02:03 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 2 22:02:03 $ACTION_MASSAGE_REMOVE:  

 {"id":24} 
 Player 2 22:02:03 $ACTION_MASSAGE_REMOVE:  

 {"id":28} 
 Player 2 22:02:03 $ACTION_MASSAGE_REMOVE:  

 {"id":29} 
 Player 2 22:02:03 $ACTION_MASSAGE_REMOVE:  

 {"id":33} 
 Player 2 22:02:03 $ACTION_MASSAGE_REMOVE:  

 {"id":34} 
 Player 2 22:02:03 $ACTION_MASSAGE_REMOVE:  

 {"id":38} 
 Player 2 22:02:03 $ACTION_MASSAGE_REMOVE:  

 {"id":39} 
 Player 2 22:02:03 $ACTION_MASSAGE_REMOVE:  

 {"id":43} 
 Player 2 22:02:03 $ACTION_MASSAGE_REMOVE:  

 {"id":44} 
 Player 2 22:02:03 $ACTION_MASSAGE_REMOVE:  

 {"id":48} 
 Player 2 22:02:03 $ACTION_MASSAGE_REMOVE:  

 {"id":49} 
 Player 2 22:02:03 $ACTION_MASSAGE_REMOVE:  

 {"id":50} 
 Player 2 22:02:03 $ACTION_MASSAGE_REMOVE:  

 {"id":54} 
 Player 2 22:02:03 $ACTION_MASSAGE_REMOVE:  

 {"id":55} 
 Player 2 22:02:03 $ACTION_MASSAGE_REMOVE:  

 {"id":59} 
 Player 2 22:02:03 $ACTION_MASSAGE_REMOVE:  

 {"id":60} 
 Player 2 22:02:03 $ACTION_MASSAGE_REMOVE:  

 {"id":64} 
 Player 2 22:02:03 $ACTION_MASSAGE_REMOVE:  

 {"id":65} 
 Player 2 22:02:03 $ACTION_MASSAGE_REMOVE:  

 {"id":66} 
 Player 2 22:02:04 $ACTION_MASSAGE_REMOVE:  

 {"id":70} 
 Player 2 22:02:04 $ACTION_MASSAGE_REMOVE:  

 {"id":71} 
 Player 2 22:02:04 $ACTION_MASSAGE_REMOVE:  

 {"id":72} 
 Player 2 22:02:04 $ACTION_MASSAGE_REMOVE:  

 {"id":76} 
 Player 2 22:02:04 $ACTION_MASSAGE_REMOVE:  

 {"id":77} 
 Player 2 22:02:04 $ACTION_MASSAGE_REMOVE:  

 {"id":81} 
 Player 2 22:02:04 $ACTION_MASSAGE_REMOVE:  

 {"id":82} 
 Player 2 22:02:04 $ACTION_MASSAGE_REMOVE:  

 {"id":83} 
 Player 2 22:02:04 $REPLACE_STACK:  

 {"currentStack":[]} 
 Player 2 22:02:04 $END_TURN:  
 Player 2 22:02:04 $SET_TURN:  

 {"playerId":1} 
 Player 2 22:02:04 $START_TURN:  

 {"playerId":1} 
 Player 2 22:02:05 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 22:02:05 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 22:02:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 22:02:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 22:02:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 22:02:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 22:02:05 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 22:02:06 $MOVE_CARD_END:  

 {"moveIndex":13,"cardId":26,"flipIfFlipped":false,"playerId":1} 
 Player 2 22:02:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 22:02:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 22:02:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 22:02:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 22:02:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 22:02:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 22:02:07 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 22:02:40 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 22:02:40 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 22:02:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 4 Cents(1) "} 
 Player 2 22:02:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 4 Cents(1) "} 
 Player 2 22:02:40 $MOVE_CARD_END:  

 {"moveIndex":14,"cardId":61,"flipIfFlipped":true,"playerId":1} 
 Player 2 22:02:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 4 Cents(1) "} 
 Player 2 22:02:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 4 Cents(1) "} 
 Player 2 22:02:41 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 22:02:43 $MOVE_CARD_END:  

 {"moveIndex":15,"cardId":61,"flipIfFlipped":true,"playerId":1} 
 Player 2 22:02:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 4 Cents(1) "} 
 Player 2 22:02:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 4 Cents(1) "} 
 Player 2 22:02:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 4 Cents(1) "} 
 Player 2 22:02:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 4 Cents(1) "} 
 Player 2 22:02:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 4 Cents(1) "} 
 Player 2 22:02:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 4 Cents(1) "} 
 Player 2 22:02:44 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 22:03:26 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 22:03:26 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 22:03:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Little Horn"} 
 Player 2 22:03:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Little Horn"} 
 Player 2 22:03:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Little Horn"} 
 Player 2 22:03:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Little Horn"} 
 Player 2 22:03:27 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 22:03:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Little Horn"} 
 Player 2 22:03:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Little Horn"} 
 Player 2 22:03:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Little Horn"} 
 Player 2 22:03:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Little Horn"} 
 Player 2 22:03:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Little Horn"} 
 Player 2 22:03:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Little Horn"} 
 Player 2 22:03:27 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 22:03:32 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 22:03:32 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 22:03:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Little Horn<Monster>"} 
 Player 2 22:03:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Little Horn<Monster>"} 
 Player 2 22:03:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Little Horn<Monster>"} 
 Player 2 22:03:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Little Horn<Monster>"} 
 Player 2 22:03:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Little Horn<Monster>"} 
 Player 2 22:03:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Little Horn<Monster>"} 
 Player 2 22:03:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Little Horn<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 2 22:03:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Little Horn<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 2 22:03:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Little Horn<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 2 22:03:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Little Horn<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 2 22:03:56 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":true} 
 Player 2 22:03:56 $SHOW_DECISION:  

 {"startCardId":273,"endCardId":273} 
 Player 2 22:03:59 $NEXT_STACK_ID:  
 Player 2 22:03:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Little Horn<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 2 22:03:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Little Horn<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 activated Samson"} 
 Player 2 22:03:59 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":17,"creatorCardId":273,"hasLockingStackEffect":false,"itemToPlayCardId":273,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 22:03:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Little Horn<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 activated Samson"} 
 Player 2 22:03:59 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":17,"creatorCardId":273,"hasLockingStackEffect":false,"itemToPlayCardId":273,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 22:03:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":121,"_text":"Add ActivateItem 17 "}} 
 Player 2 22:04:01 $SHOW_DECISION:  

 {"startCardId":273,"endCardId":39} 
 Player 2 22:04:04 $USE_ITEM:  

 {"cardId":273} 
 Player 2 22:04:04 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 22:04:04 $ACTION_MASSAGE_REMOVE:  

 {"id":121} 
 Player 2 22:04:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Little Horn<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 activated Samson"} 
 Player 2 22:04:04 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":17,"creatorCardId":273,"hasLockingStackEffect":false,"itemToPlayCardId":273,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 22:04:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":122,"_text":"Response Adding ActivateItem 17"},"childOfId":121} 
 Player 2 22:04:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":123,"_text":"Wait For Response From Player 1 "},"childOfId":121} 
 Player 2 22:04:04 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 22:04:04 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 22:04:04 $RESPOND_TO:  

 {"playerId":-1,"stackEffectResponse":false} 
 Player 2 22:04:05 $ACTION_MASSAGE_REMOVE:  

 {"id":123} 
 Player 2 22:04:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":124,"_text":"Wait For Response From Player 2 "},"childOfId":121} 
 Player 2 22:04:05 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 22:04:05 $ACTION_MASSAGE_REMOVE:  

 {"id":124} 
 Player 2 22:04:05 $ACTION_MASSAGE_REMOVE:  

 {"id":122} 
 Player 2 22:04:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":125,"_text":"Resolve ActivateItem 17 "}} 
 Player 2 22:04:05 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":273,"particleType":6} 
 Player 2 22:04:07 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":273,"particleType":6} 
 Player 2 22:04:07 $NEXT_STACK_ID:  
 Player 2 22:04:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Little Horn<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 activated Samson"} 
 Player 2 22:04:07 $PLAYER_LOSE_LOOT:  

 {"playerId":2,"cardId":39} 
 Player 2 22:04:07 $MOVE_CARD:  

 {"moveIndex":16,"cardId":39,"placeID":277,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 22:04:07 $MOVE_CARD_TO_PILE:  

 {"type":7,"cardId":39} 
 Player 2 22:04:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Little Horn<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 3 Cents(1): addMoney \n4:Player 2 activated Samson"} 
 Player 2 22:04:07 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 22:04:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Little Horn<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 3 Cents(1): addMoney \n4:Player 2 activated Samson"} 
 Player 2 22:04:07 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":18,"creatorCardId":273,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":39,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":39,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 22:04:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Little Horn<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 3 Cents(1): addMoney \n4:Player 2 activated Samson"} 
 Player 2 22:04:07 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":15,"creatorCardId":275,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":234}} 
 Player 2 22:04:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Little Horn<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 3 Cents(1): addMoney \n4:Player 2 activated Samson"} 
 Player 2 22:04:07 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":17,"creatorCardId":273,"hasLockingStackEffect":false,"itemToPlayCardId":273,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 22:04:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Little Horn<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 3 Cents(1): addMoney \n4:Player 2 activated Samson"} 
 Player 2 22:04:07 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":15,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":234}} 
 Player 2 22:04:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Little Horn<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 3 Cents(1): addMoney \n4:Player 2 activated Samson"} 
 Player 2 22:04:07 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":16,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 22:04:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Little Horn<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 3 Cents(1): addMoney \n4:Player 2 activated Samson"} 
 Player 2 22:04:08 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":18,"creatorCardId":273,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":39,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":39,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 22:04:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Little Horn<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 3 Cents(1): addMoney \n4:Player 2 activated Samson"} 
 Player 2 22:04:08 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":17,"creatorCardId":273,"hasLockingStackEffect":false,"itemToPlayCardId":273,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 22:04:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Little Horn<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 3 Cents(1): addMoney \n4:Player 2 activated Samson"} 
 Player 2 22:04:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Little Horn<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 3 Cents(1): addMoney \n4:Player 2 activated Samson"} 
 Player 2 22:04:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Little Horn<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 3 Cents(1): addMoney \n4:Player 2 activated Samson"} 
 Player 2 22:04:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Little Horn<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 3 Cents(1): addMoney \n4:Player 2 activated Samson"} 
 Player 2 22:04:08 $REPLACE_STACK:  

 {"currentStack":[{"entityId":15,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":234},{"entityId":16,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1},{"entityId":18,"creatorCardId":273,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":39,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":39,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":17,"creatorCardId":273,"hasLockingStackEffect":false,"itemToPlayCardId":273,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 
 Player 2 22:04:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Little Horn<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 3 Cents(1): addMoney \n4:Player 2 activated Samson"} 
 Player 2 22:04:08 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":17,"creatorCardId":273,"hasLockingStackEffect":false,"itemToPlayCardId":273,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 22:04:08 $ACTION_MASSAGE_REMOVE:  

 {"id":125} 
 Player 2 22:04:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Little Horn<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 3 Cents(1): addMoney"} 
 Player 2 22:04:08 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":17,"creatorCardId":273,"hasLockingStackEffect":false,"itemToPlayCardId":273,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 22:04:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":126,"_text":"Remove After Resolve ActivateItem 17  "}} 
 Player 2 22:04:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Little Horn<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 3 Cents(1): addMoney"} 
 Player 2 22:04:08 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":17,"creatorCardId":273,"hasLockingStackEffect":false,"itemToPlayCardId":273,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 22:04:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":127,"_text":"Response Remove After Resolve ActivateItem 17"},"childOfId":126} 
 Player 2 22:04:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":128,"_text":"Wait For Response From Player 1 "},"childOfId":126} 
 Player 2 22:04:08 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 22:04:08 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 22:04:09 $ACTION_MASSAGE_REMOVE:  

 {"id":128} 
 Player 2 22:04:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":129,"_text":"Wait For Response From Player 2 "},"childOfId":126} 
 Player 2 22:04:09 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 22:04:09 $ACTION_MASSAGE_REMOVE:  

 {"id":129} 
 Player 2 22:04:09 $ACTION_MASSAGE_REMOVE:  

 {"id":127} 
 Player 2 22:04:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":130,"_text":"Resolve PlayLootCardStackEffect 18 "}} 
 Player 2 22:04:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Little Horn<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 3 Cents(1): addMoney"} 
 Player 2 22:04:09 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":39,"particleType":6} 
 Player 2 22:04:10 $ACTION_MASSAGE_REMOVE:  

 {"id":126} 
 Player 2 22:04:11 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":39,"particleType":6} 
 Player 2 22:04:11 $SET_MONEY:  

 {"playerId":2,"numOfCoins":6} 
 Player 2 22:04:11 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":273,"scopeIsPlayer":true,"index":10,"originStackId":-1},"isAfterActivation":true,"index":10} 
 Player 2 22:04:11 $REMOVE_FROM_PILE:  

 {"cardId":39} 
 Player 2 22:04:11 $MOVE_CARD:  

 {"moveIndex":17,"cardId":39,"placeID":278,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 22:04:11 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":39} 
 Player 2 22:04:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Little Horn<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 3 Cents(1): addMoney"} 
 Player 2 22:04:11 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":18,"creatorCardId":273,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":39,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 22:04:11 $ACTION_MASSAGE_REMOVE:  

 {"id":130} 
 Player 2 22:04:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Little Horn<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 2 22:04:11 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":18,"creatorCardId":273,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":39,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 22:04:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":131,"_text":"Remove After Resolve PlayLootCardStackEffect 18  "}} 
 Player 2 22:04:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Little Horn<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 2 22:04:11 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":18,"creatorCardId":273,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":39,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 22:04:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":132,"_text":"Response Remove After Resolve PlayLootCardStackEffect 18"},"childOfId":131} 
 Player 2 22:04:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":133,"_text":"Wait For Response From Player 2 "},"childOfId":131} 
 Player 2 22:04:11 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 22:04:11 $ACTION_MASSAGE_REMOVE:  

 {"id":133} 
 Player 2 22:04:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":134,"_text":"Wait For Response From Player 1 "},"childOfId":131} 
 Player 2 22:04:11 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 22:04:11 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 22:04:12 $ACTION_MASSAGE_REMOVE:  

 {"id":134} 
 Player 2 22:04:12 $ACTION_MASSAGE_REMOVE:  

 {"id":132} 
 Player 2 22:04:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":135,"_text":"Resolve ActivateItem 16 "}} 
 Player 2 22:04:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Little Horn<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 2 22:04:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Little Horn<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 2 22:04:12 $DO_STACK_EFFECT:  

 {"originPlayerId":2,"playerId":1,"currentStack":[{"entityId":15,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":234},{"entityId":16,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 
 Player 2 22:04:14 $ACTION_MASSAGE_REMOVE:  

 {"id":131} 
 Player 2 22:04:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Little Horn<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 2 22:04:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Little Horn<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 2 22:04:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Little Horn<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 2 22:04:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Little Horn<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 2 22:04:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Little Horn<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 2 22:04:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Little Horn<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 2 22:04:14 $ACTION_MASSAGE_REMOVE:  

 {"id":135} 
 Player 2 22:04:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Little Horn<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 2 22:04:14 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":15,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":234}} 
 Player 2 22:04:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Little Horn<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 2 22:04:14 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":15,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":234}} 
 Player 2 22:04:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Little Horn<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 2 22:04:14 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":16,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 22:04:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Little Horn<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 2 22:04:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Little Horn<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 2 22:04:15 $REPLACE_STACK:  

 {"currentStack":[{"entityId":15,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":234},{"entityId":16,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 
 Player 2 22:04:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Little Horn<Monster>"} 
 Player 2 22:04:15 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":16,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 22:04:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":136,"_text":"Remove After Resolve ActivateItem 16  "}} 
 Player 2 22:04:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Little Horn<Monster>"} 
 Player 2 22:04:15 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":16,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 22:04:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":137,"_text":"Response Remove After Resolve ActivateItem 16"},"childOfId":136} 
 Player 2 22:04:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":138,"_text":"Wait For Response From Player 1 "},"childOfId":136} 
 Player 2 22:04:15 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 22:04:15 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 22:04:15 $ACTION_MASSAGE_REMOVE:  

 {"id":138} 
 Player 2 22:04:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":139,"_text":"Wait For Response From Player 2 "},"childOfId":136} 
 Player 2 22:04:15 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 22:04:15 $ACTION_MASSAGE_REMOVE:  

 {"id":139} 
 Player 2 22:04:15 $ACTION_MASSAGE_REMOVE:  

 {"id":137} 
 Player 2 22:04:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":140,"_text":"Resolve AttackRoll 15 "}} 
 Player 2 22:04:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Little Horn<Monster>"} 
 Player 2 22:04:15 $DO_STACK_EFFECT:  

 {"originPlayerId":2,"playerId":1,"currentStack":[{"entityId":15,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":234}]} 
 Player 2 22:04:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Little Horn<Monster>"} 
 Player 2 22:04:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Little Horn<Monster>"} 
 Player 2 22:04:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Little Horn combat damage to The Lost"} 
 Player 2 22:04:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Little Horn combat damage to The Lost"} 
 Player 2 22:04:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Little Horn combat damage to The Lost"} 
 Player 2 22:04:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Little Horn combat damage to The Lost"} 
 Player 2 22:04:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Little Horn combat damage to The Lost"} 
 Player 2 22:04:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Little Horn combat damage to The Lost"} 
 Player 2 22:04:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Little Horn combat damage to The Lost"} 
 Player 2 22:04:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Little Horn combat damage to The Lost"} 
 Player 2 22:04:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Little Horn combat damage to The Lost"} 
 Player 2 22:04:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Little Horn combat damage to The Lost"} 
 Player 2 22:04:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Little Horn combat damage to The Lost \n2:Player 1 is rolling against Little Horn<Monster>"} 
 Player 2 22:04:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Little Horn combat damage to The Lost \n2:Player 1 is rolling against Little Horn<Monster>"} 
 Player 2 22:04:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Little Horn combat damage to The Lost \n2:Player 1 is rolling against Little Horn<Monster>"} 
 Player 2 22:04:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Little Horn combat damage to The Lost \n2:Player 1 is rolling against Little Horn<Monster>"} 
 Player 2 22:04:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Little Horn combat damage to The Lost \n2:Player 1 is rolling against Little Horn<Monster>"} 
 Player 2 22:04:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Little Horn combat damage to The Lost \n2:Player 1 is rolling against Little Horn<Monster>"} 
 Player 2 22:04:16 $ACTION_MASSAGE_REMOVE:  

 {"id":140} 
 Player 2 22:04:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Little Horn combat damage to The Lost \n2:Player 1 is rolling against Little Horn<Monster>"} 
 Player 2 22:04:16 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":19,"creatorCardId":275,"entityToDoDamageCardId":234,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 22:04:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Little Horn combat damage to The Lost \n2:Player 1 is rolling against Little Horn<Monster>"} 
 Player 2 22:04:16 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":19,"creatorCardId":275,"entityToDoDamageCardId":234,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 22:04:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Little Horn combat damage to The Lost \n2:Player 1 is rolling against Little Horn<Monster>"} 
 Player 2 22:04:16 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":15,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":234}} 
 Player 2 22:04:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Little Horn combat damage to The Lost \n2:Player 1 is rolling against Little Horn<Monster>"} 
 Player 2 22:04:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Little Horn combat damage to The Lost \n2:Player 1 is rolling against Little Horn<Monster>"} 
 Player 2 22:04:16 $REPLACE_STACK:  

 {"currentStack":[{"entityId":19,"creatorCardId":275,"entityToDoDamageCardId":234,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":15,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":234}]} 
 Player 2 22:04:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Little Horn combat damage to The Lost"} 
 Player 2 22:04:17 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":15,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":234}} 
 Player 2 22:04:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":142,"_text":"Remove After Resolve AttackRoll 15  "}} 
 Player 2 22:04:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Little Horn combat damage to The Lost"} 
 Player 2 22:04:17 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":15,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":234}} 
 Player 2 22:04:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":143,"_text":"Response Remove After Resolve AttackRoll 15"},"childOfId":142} 
 Player 2 22:04:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":144,"_text":"Wait For Response From Player 1 "},"childOfId":142} 
 Player 2 22:04:17 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 22:04:17 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 22:04:17 $ACTION_MASSAGE_REMOVE:  

 {"id":144} 
 Player 2 22:04:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":145,"_text":"Wait For Response From Player 2 "},"childOfId":142} 
 Player 2 22:04:17 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 22:04:17 $ACTION_MASSAGE_REMOVE:  

 {"id":145} 
 Player 2 22:04:17 $ACTION_MASSAGE_REMOVE:  

 {"id":143} 
 Player 2 22:04:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":146,"_text":"Resolve CombatDamage 19 "}} 
 Player 2 22:04:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Little Horn combat damage to The Lost"} 
 Player 2 22:04:17 $DO_STACK_EFFECT:  

 {"originPlayerId":2,"playerId":1,"currentStack":[{"entityId":19,"creatorCardId":275,"entityToDoDamageCardId":234,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}]} 
 Player 2 22:04:17 $ACTION_MASSAGE_REMOVE:  

 {"id":136} 
 Player 2 22:04:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Little Horn combat damage to The Lost"} 
 Player 2 22:04:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Little Horn combat damage to The Lost"} 
 Player 2 22:04:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 22:04:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 22:04:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 22:04:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 22:04:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 22:04:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 22:04:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 22:04:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 22:04:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 22:04:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 22:04:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Little Horn combat damage to The Lost \n2:Player 1 is about to die"} 
 Player 2 22:04:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Little Horn combat damage to The Lost \n2:Player 1 is about to die"} 
 Player 2 22:04:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Little Horn combat damage to The Lost \n2:Player 1 is about to die"} 
 Player 2 22:04:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Little Horn combat damage to The Lost \n2:Player 1 is about to die"} 
 Player 2 22:04:18 $ACTION_MASSAGE_REMOVE:  

 {"id":146} 
 Player 2 22:04:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Little Horn combat damage to The Lost \n2:Player 1 is about to die"} 
 Player 2 22:04:18 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":19,"creatorCardId":275,"entityToDoDamageCardId":234,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 22:04:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Little Horn combat damage to The Lost \n2:Player 1 is about to die"} 
 Player 2 22:04:18 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":19,"creatorCardId":275,"entityToDoDamageCardId":234,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 22:04:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Little Horn combat damage to The Lost \n2:Player 1 is about to die"} 
 Player 2 22:04:18 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":20,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":234}} 
 Player 2 22:04:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Little Horn combat damage to The Lost \n2:Player 1 is about to die"} 
 Player 2 22:04:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Little Horn combat damage to The Lost \n2:Player 1 is about to die"} 
 Player 2 22:04:18 $REPLACE_STACK:  

 {"currentStack":[{"entityId":19,"creatorCardId":275,"entityToDoDamageCardId":234,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":20,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":234}]} 
 Player 2 22:04:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 22:04:18 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":19,"creatorCardId":275,"entityToDoDamageCardId":234,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 22:04:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":147,"_text":"Remove After Resolve CombatDamage 19  "}} 
 Player 2 22:04:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 22:04:18 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":19,"creatorCardId":275,"entityToDoDamageCardId":234,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 22:04:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":148,"_text":"Response Remove After Resolve CombatDamage 19"},"childOfId":147} 
 Player 2 22:04:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":149,"_text":"Wait For Response From Player 1 "},"childOfId":147} 
 Player 2 22:04:18 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 22:04:19 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 22:04:19 $ACTION_MASSAGE_REMOVE:  

 {"id":149} 
 Player 2 22:04:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":150,"_text":"Wait For Response From Player 2 "},"childOfId":147} 
 Player 2 22:04:19 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 22:04:19 $ACTION_MASSAGE_REMOVE:  

 {"id":150} 
 Player 2 22:04:19 $ACTION_MASSAGE_REMOVE:  

 {"id":148} 
 Player 2 22:04:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":151,"_text":"Resolve PlayerDeath 20 "}} 
 Player 2 22:04:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 22:04:19 $DO_STACK_EFFECT:  

 {"originPlayerId":2,"playerId":1,"currentStack":[{"entityId":20,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":234}]} 
 Player 2 22:04:19 $ACTION_MASSAGE_REMOVE:  

 {"id":142} 
 Player 2 22:04:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 22:04:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 22:04:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Activate HolyMantle "} 
 Player 2 22:04:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Activate HolyMantle "} 
 Player 2 22:04:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Activate HolyMantle "} 
 Player 2 22:04:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Activate HolyMantle "} 
 Player 2 22:04:20 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 22:04:21 $ACTION_MASSAGE_REMOVE:  

 {"id":147} 
 Player 2 22:04:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Activate HolyMantle "} 
 Player 2 22:04:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Activate HolyMantle "} 
 Player 2 22:04:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Activate HolyMantle "} 
 Player 2 22:04:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Activate HolyMantle "} 
 Player 2 22:04:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Activate HolyMantle "} 
 Player 2 22:04:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Activate HolyMantle "} 
 Player 2 22:04:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Activate HolyMantle "} 
 Player 2 22:04:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Activate HolyMantle "} 
 Player 2 22:04:23 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 22:04:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 22:04:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 22:04:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 22:04:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 22:04:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 22:04:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 22:04:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 22:04:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 22:04:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 22:04:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 22:04:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 22:04:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 22:04:23 $ACTION_MASSAGE_REMOVE:  

 {"id":151} 
 Player 2 22:04:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 22:04:23 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":20,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":234}} 
 Player 2 22:04:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 22:04:23 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":20,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":234}} 
 Player 2 22:04:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 22:04:23 $REPLACE_STACK:  

 {"currentStack":[{"entityId":20,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":234}]} 
 Player 2 22:04:23 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 22:04:23 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":20,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":234}} 
 Player 2 22:04:23 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":163,"_text":"Remove After Resolve PlayerDeath 20  "}} 
 Player 2 22:04:23 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 22:04:23 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":20,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":234}} 
 Player 2 22:04:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":164,"_text":"Response Remove After Resolve PlayerDeath 20"},"childOfId":163} 
 Player 2 22:04:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":165,"_text":"Wait For Response From Player 2 "},"childOfId":163} 
 Player 2 22:04:24 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 22:04:24 $ACTION_MASSAGE_REMOVE:  

 {"id":165} 
 Player 2 22:04:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":166,"_text":"Wait For Response From Player 1 "},"childOfId":163} 
 Player 2 22:04:24 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 22:04:24 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 22:04:24 $ACTION_MASSAGE_REMOVE:  

 {"id":166} 
 Player 2 22:04:24 $ACTION_MASSAGE_REMOVE:  

 {"id":164} 
 Player 2 22:04:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":167,"_text":"Stack Was Emptied "}} 
 Player 2 22:04:24 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 22:04:24 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 2 22:04:24 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 2 22:04:24 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 2 22:04:24 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 2 22:04:24 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 2 22:04:24 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 2 22:04:24 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 2 22:04:24 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 2 22:04:24 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 2 22:04:24 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 2 22:04:24 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 2 22:04:24 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 2 22:04:24 $ACTION_MASSAGE_REMOVE:  

 {"id":24} 
 Player 2 22:04:24 $ACTION_MASSAGE_REMOVE:  

 {"id":28} 
 Player 2 22:04:24 $ACTION_MASSAGE_REMOVE:  

 {"id":29} 
 Player 2 22:04:24 $ACTION_MASSAGE_REMOVE:  

 {"id":33} 
 Player 2 22:04:24 $ACTION_MASSAGE_REMOVE:  

 {"id":34} 
 Player 2 22:04:24 $ACTION_MASSAGE_REMOVE:  

 {"id":38} 
 Player 2 22:04:24 $ACTION_MASSAGE_REMOVE:  

 {"id":39} 
 Player 2 22:04:24 $ACTION_MASSAGE_REMOVE:  

 {"id":43} 
 Player 2 22:04:24 $ACTION_MASSAGE_REMOVE:  

 {"id":44} 
 Player 2 22:04:24 $ACTION_MASSAGE_REMOVE:  

 {"id":48} 
 Player 2 22:04:24 $ACTION_MASSAGE_REMOVE:  

 {"id":49} 
 Player 2 22:04:24 $ACTION_MASSAGE_REMOVE:  

 {"id":50} 
 Player 2 22:04:24 $ACTION_MASSAGE_REMOVE:  

 {"id":54} 
 Player 2 22:04:25 $ACTION_MASSAGE_REMOVE:  

 {"id":55} 
 Player 2 22:04:25 $ACTION_MASSAGE_REMOVE:  

 {"id":59} 
 Player 2 22:04:25 $ACTION_MASSAGE_REMOVE:  

 {"id":60} 
 Player 2 22:04:25 $ACTION_MASSAGE_REMOVE:  

 {"id":64} 
 Player 2 22:04:25 $ACTION_MASSAGE_REMOVE:  

 {"id":65} 
 Player 2 22:04:25 $ACTION_MASSAGE_REMOVE:  

 {"id":66} 
 Player 2 22:04:25 $ACTION_MASSAGE_REMOVE:  

 {"id":70} 
 Player 2 22:04:25 $ACTION_MASSAGE_REMOVE:  

 {"id":71} 
 Player 2 22:04:25 $ACTION_MASSAGE_REMOVE:  

 {"id":72} 
 Player 2 22:04:25 $ACTION_MASSAGE_REMOVE:  

 {"id":76} 
 Player 2 22:04:25 $ACTION_MASSAGE_REMOVE:  

 {"id":77} 
 Player 2 22:04:25 $ACTION_MASSAGE_REMOVE:  

 {"id":81} 
 Player 2 22:04:25 $ACTION_MASSAGE_REMOVE:  

 {"id":82} 
 Player 2 22:04:25 $ACTION_MASSAGE_REMOVE:  

 {"id":83} 
 Player 2 22:04:25 $ACTION_MASSAGE_REMOVE:  

 {"id":84} 
 Player 2 22:04:25 $ACTION_MASSAGE_REMOVE:  

 {"id":88} 
 Player 2 22:04:25 $ACTION_MASSAGE_REMOVE:  

 {"id":89} 
 Player 2 22:04:25 $ACTION_MASSAGE_REMOVE:  

 {"id":93} 
 Player 2 22:04:25 $ACTION_MASSAGE_REMOVE:  

 {"id":94} 
 Player 2 22:04:25 $ACTION_MASSAGE_REMOVE:  

 {"id":98} 
 Player 2 22:04:25 $ACTION_MASSAGE_REMOVE:  

 {"id":99} 
 Player 2 22:04:25 $ACTION_MASSAGE_REMOVE:  

 {"id":103} 
 Player 2 22:04:25 $ACTION_MASSAGE_REMOVE:  

 {"id":104} 
 Player 2 22:04:25 $ACTION_MASSAGE_REMOVE:  

 {"id":108} 
 Player 2 22:04:25 $ACTION_MASSAGE_REMOVE:  

 {"id":109} 
 Player 2 22:04:25 $ACTION_MASSAGE_REMOVE:  

 {"id":113} 
 Player 2 22:04:25 $ACTION_MASSAGE_REMOVE:  

 {"id":114} 
 Player 2 22:04:25 $ACTION_MASSAGE_REMOVE:  

 {"id":117} 
 Player 2 22:04:25 $ACTION_MASSAGE_REMOVE:  

 {"id":121} 
 Player 2 22:04:25 $ACTION_MASSAGE_REMOVE:  

 {"id":125} 
 Player 2 22:04:25 $ACTION_MASSAGE_REMOVE:  

 {"id":126} 
 Player 2 22:04:25 $ACTION_MASSAGE_REMOVE:  

 {"id":130} 
 Player 2 22:04:25 $ACTION_MASSAGE_REMOVE:  

 {"id":131} 
 Player 2 22:04:25 $ACTION_MASSAGE_REMOVE:  

 {"id":135} 
 Player 2 22:04:25 $ACTION_MASSAGE_REMOVE:  

 {"id":136} 
 Player 2 22:04:25 $ACTION_MASSAGE_REMOVE:  

 {"id":140} 
 Player 2 22:04:25 $ACTION_MASSAGE_REMOVE:  

 {"id":141} 
 Player 2 22:04:25 $ACTION_MASSAGE_REMOVE:  

 {"id":142} 
 Player 2 22:04:25 $ACTION_MASSAGE_REMOVE:  

 {"id":146} 
 Player 2 22:04:25 $ACTION_MASSAGE_REMOVE:  

 {"id":147} 
 Player 2 22:04:25 $ACTION_MASSAGE_REMOVE:  

 {"id":151} 
 Player 2 22:04:25 $ACTION_MASSAGE_REMOVE:  

 {"id":152} 
 Player 2 22:04:25 $ACTION_MASSAGE_REMOVE:  

 {"id":156} 
 Player 2 22:04:25 $ACTION_MASSAGE_REMOVE:  

 {"id":157} 
 Player 2 22:04:25 $ACTION_MASSAGE_REMOVE:  

 {"id":158} 
 Player 2 22:04:25 $ACTION_MASSAGE_REMOVE:  

 {"id":162} 
 Player 2 22:04:25 $ACTION_MASSAGE_REMOVE:  

 {"id":163} 
 Player 2 22:04:25 $ACTION_MASSAGE_REMOVE:  

 {"id":167} 
 Player 2 22:04:26 $TURN_PLAYER_DO_STACK_EFFECT:  

 {"playerId":1} 
 Player 2 22:04:26 $ACTION_MASSAGE_REMOVE:  

 {"id":167} 
 Player 2 22:04:26 $ACTION_MASSAGE_REMOVE:  

 {"id":163} 
 Player 2 22:11:25 $MATCH: 