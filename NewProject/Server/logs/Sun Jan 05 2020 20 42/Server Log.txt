Start Log 

 Player 1 20:42:52 $MATCH:  

 Player 1 20:42:52 $START_GAME:  

 Player 1 20:42:52 $MOVE_TO_TABLE:  

 Player 2 20:42:52 $MOVE_TO_TABLE:  

 Player 2 20:43:00 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 1 20:43:01 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 20:43:01 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":264,"itemCardId":267} 

 Player 2 20:43:01 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":273}],"result":true,"preventMethod":false,"methodScopeId":272,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 20:43:01 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":272,"itemCardId":273} 

 Player 2 20:43:01 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[109,32,24,77,60,84,29,18,94,13,30,23,71,131,65,89,101,58,37,20,123,38,40,44,51,102,68,138,112,97,83,31,132,76,133,28,119,73,122,118,34,87,99,48,70,11,81,136,46,121,134,67,88,50,74,45,137,25,140,106,139,21,27,41,9,96,22,36,17,104,114,47,135,79,33,78,59,111,49,69,93,26,92,143,66,54,55,110,14,125,39,128,113,43,64,116,90,141,103,8,91,35,100,42,120,19,129,52,80,82,142,16,15,85,56,95,108,75,130,86,126,117,98,72,124,7,115,53,12,62,10,105,57,107,61,63,127]} 

 Player 2 20:43:01 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[219,230,206,243,235,211,246,218,255,251,244,252,223,239,222,212,217,248,226,233,215,227,253,207,250,234,257,225,220,210,237,231,238,256,245,228,240,216,254,229,213,221,242,224,236,249,214,247,259,258,209,241,208,232]} 

 Player 2 20:43:01 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[171,164,186,192,181,197,185,168,146,156,153,183,203,151,200,155,170,199,149,160,172,195,190,169,152,198,167,194,201,184,148,178,188,202,166,173,159,150,174,154,165,193,176,175,158,147,187,196,179,180,157,182,191,189,161,163,177,162]} 

 Player 2 20:43:01 $DRAW_CARD:  
{"deckType":5} 

 Player 2 20:43:01 $FLIP_CARD:  
{"cardId":162} 

 Player 2 20:43:01 $ADD_STORE_CARD:  
{"cardId":162} 

 Player 2 20:43:01 $DRAW_CARD:  
{"deckType":5} 

 Player 2 20:43:01 $FLIP_CARD:  
{"cardId":177} 

 Player 2 20:43:01 $ADD_STORE_CARD:  
{"cardId":177} 

 Player 2 20:43:01 $DRAW_CARD:  
{"deckType":2} 

 Player 2 20:43:01 $FLIP_CARD:  
{"cardId":232} 

 Player 2 20:43:01 $REGISTER_PASSIVE_ITEM:  
{"cardId":232} 

 Player 2 20:43:01 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":232} 

 Player 2 20:43:01 $NEW_MONSTER_ON_PLACE:  
{"cardId":232,"monsterPlaceId":1} 

 Player 2 20:43:01 $DRAW_CARD:  
{"deckType":2} 

 Player 2 20:43:01 $FLIP_CARD:  
{"cardId":208} 

 Player 2 20:43:01 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":208} 

 Player 2 20:43:01 $NEW_MONSTER_ON_PLACE:  
{"cardId":208,"monsterPlaceId":2} 

 Player 2 20:43:01 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 20:43:01 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":264,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 20:43:01 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:43:02 $MOVE_CARD:  
{"moveIndex":1,"cardId":127,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:43:02 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":267}],"result":true,"preventMethod":false,"methodScopeId":264,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 20:43:02 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":127,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:43:02 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":127} 

 Player 2 20:43:02 $FLIP_CARD:  
{"cardId":127} 

 Player 2 20:43:02 $FLIP_CARD:  
{"cardId":127} 

 Player 2 20:43:02 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":127} 

 Player 2 20:43:02 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:43:02 $MOVE_CARD:  
{"moveIndex":2,"cardId":63,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:43:02 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":63,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:43:02 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":63} 

 Player 2 20:43:02 $FLIP_CARD:  
{"cardId":63} 

 Player 2 20:43:02 $FLIP_CARD:  
{"cardId":63} 

 Player 2 20:43:03 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":63} 

 Player 2 20:43:03 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:43:03 $MOVE_CARD:  
{"moveIndex":3,"cardId":61,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:43:03 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":61,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:43:03 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":61} 

 Player 2 20:43:03 $FLIP_CARD:  
{"cardId":61} 

 Player 2 20:43:03 $FLIP_CARD:  
{"cardId":61} 

 Player 2 20:43:03 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":61} 

 Player 2 20:43:03 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 20:43:03 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":272,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 20:43:03 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:43:03 $MOVE_CARD:  
{"moveIndex":4,"cardId":107,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:43:04 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":107,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:43:04 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":107} 

 Player 2 20:43:04 $FLIP_CARD:  
{"cardId":107} 

 Player 2 20:43:04 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":107} 

 Player 2 20:43:04 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:43:04 $MOVE_CARD:  
{"moveIndex":5,"cardId":57,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:43:04 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":57,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:43:04 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":57} 

 Player 2 20:43:04 $FLIP_CARD:  
{"cardId":57} 

 Player 2 20:43:04 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":57} 

 Player 2 20:43:04 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:43:04 $MOVE_CARD:  
{"moveIndex":6,"cardId":105,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:43:05 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":105,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:43:05 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":105} 

 Player 2 20:43:05 $FLIP_CARD:  
{"cardId":105} 

 Player 2 20:43:05 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":105} 

 Player 2 20:43:05 $GAME_HAS_STARTED:  

 Player 2 20:43:05 $SET_TURN:  
{"playerId":1} 

 Player 2 20:43:05 $START_TURN:  
{"playerId":1} 

 Player 2 20:43:05 $UPDATE_ACTIONS:  

 Player 1 20:43:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:43:05 $NEXT_STACK_ID:  

 Player 1 20:43:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:43:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 20:43:05 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":264,"turnPlayerCardId":264,"stackEffectType":13}} 

 Player 1 20:43:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 20:43:05 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":264,"turnPlayerCardId":264,"stackEffectType":13}} 

 Player 1 20:43:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 1 20:43:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:43:05 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 20:43:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 20:43:05 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":264,"turnPlayerCardId":264,"stackEffectType":13}} 

 Player 1 20:43:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 1 20:43:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 1 20:43:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:43:05 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 20:43:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 1 20:43:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:43:05 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:43:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:43:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:43:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 20:43:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 20:43:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 20:43:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 20:43:05 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:43:05 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 20:43:05 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 20:43:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 1 20:43:05 $DRAW_CARD:  
{"deckType":1} 

 Player 1 20:43:05 $MOVE_CARD:  
{"moveIndex":7,"cardId":10,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 20:43:06 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":10,"flipIfFlipped":false,"playerId":1} 

 Player 1 20:43:06 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":10} 

 Player 1 20:43:06 $FLIP_CARD:  
{"cardId":10} 

 Player 1 20:43:06 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":10} 

 Player 1 20:43:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 20:43:06 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":264,"turnPlayerCardId":264,"stackEffectType":13}} 

 Player 1 20:43:06 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 20:43:06 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:43:06 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":264,"turnPlayerCardId":264,"stackEffectType":13}} 

 Player 1 20:43:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 1 20:43:06 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:43:06 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":264,"turnPlayerCardId":264,"stackEffectType":13}} 

 Player 1 20:43:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 1 20:43:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 1 20:43:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:43:06 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:43:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 20:43:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 20:43:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 20:43:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 20:43:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 20:43:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 20:43:06 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:43:06 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 1 20:43:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 1 20:43:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:43:06 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 1 20:43:07 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 1 20:43:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 1 20:43:07 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:43:07 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 20:43:07 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 20:43:07 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 20:43:07 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 20:43:07 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 20:43:07 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 20:43:07 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 20:43:08 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 20:43:09 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 20:43:27 $NEXT_STACK_ID:  

 Player 1 20:43:27 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:43:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 1 20:43:27 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":264,"attackingPlayerCardId":264,"idOfCardBeingAttacked":205,"stackEffectType":4}} 

 Player 1 20:43:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 1 20:43:49 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":264,"attackingPlayerCardId":264,"idOfCardBeingAttacked":205,"stackEffectType":4}} 

 Player 1 20:43:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add DeclareAttack 2 "}} 

 Player 1 20:43:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:43:49 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 20:43:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 1 20:43:50 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":264,"attackingPlayerCardId":264,"idOfCardBeingAttacked":205,"stackEffectType":4}} 

 Player 1 20:43:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding DeclareAttack 2"},"childOfId":10} 

 Player 1 20:43:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 1 20:43:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:43:50 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 1 20:43:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 1 20:43:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:43:50 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:43:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:43:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:43:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 2 20:43:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 2 20:43:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 2 20:43:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 2 20:43:50 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:43:50 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 1 20:43:50 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 1 20:43:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve DeclareAttack 2 "}} 

 Player 1 20:43:50 $DRAW_CARD:  
{"deckType":2} 

 Player 1 20:43:50 $SHOW_CARD_PREVIEW:  
{"cardToShowId":241,"playerId":1} 

 Player 1 20:44:09 $LOG_ERROR:  
"error while resolving stack effect 2" 
//////Error From Player 1////
  

 Player 1 20:44:09 $LOG_ERROR:  
//////Error From Player 1////
 [object Object]
////// 

 Player 1 20:44:10 $LOG_ERROR:  
{"message":"\"Cannot read property 'getComponent' of null\"","stack":"\"TypeError: Cannot read property 'getComponent' of null\\n    at Function.Card.getCardNodeByChild (http://localhost:7456/preview-scripts/assets/Script/Entites/GameEntities/Card.js:51:23)\\n    at ChooseCard.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/DataCollector/ChooseCard.js:288:102)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\\n    at fulfilled (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89787:28)\""} 
//////Error From Player 1////
  

 Player 1 20:44:10 $LOG_ERROR:  
//////Error From Player 1////

 "\"Cannot read property 'getComponent' of null\""

 + "\"TypeError: Cannot read property 'getComponent' of null\
    at Function.Card.getCardNodeByChild (http://localhost:7456/preview-scripts/assets/Script/Entites/GameEntities/Card.js:51:23)\
    at ChooseCard.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/DataCollector/ChooseCard.js:288:102)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at fulfilled (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89787:28)\""

////// 
//////Error From Player 1////

 "\"Cannot read property 'getComponent' of null\""

 + "\"TypeError: Cannot read property 'getComponent' of null\
    at Function.Card.getCardNodeByChild (http://localhost:7456/preview-scripts/assets/Script/Entites/GameEntities/Card.js:51:23)\
    at ChooseCard.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/DataCollector/ChooseCard.js:288:102)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at fulfilled (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89787:28)\""

////// 

 Player 1 20:44:10 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 20:44:10 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:44:10 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":264,"attackingPlayerCardId":264,"idOfCardBeingAttacked":205,"stackEffectType":4}} 

 Player 1 20:44:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve DeclareAttack 2  "}} 

 Player 1 20:44:10 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:44:10 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":264,"attackingPlayerCardId":264,"idOfCardBeingAttacked":205,"stackEffectType":4}} 

 Player 1 20:44:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve DeclareAttack 2"},"childOfId":15} 

 Player 1 20:44:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 1 20:44:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:44:10 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:44:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 2 20:44:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 2 20:44:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 2 20:44:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 2 20:44:10 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:44:10 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 1 20:44:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 1 20:44:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:44:10 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 1 20:44:10 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 1 20:44:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 1 20:44:10 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:44:10 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 20:44:10 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 20:44:11 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 20:44:11 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 20:44:11 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 20:44:11 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 20:44:11 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 20:44:11 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 20:44:11 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 20:44:11 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 20:44:11 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 20:44:12 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 20:44:12 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 20:47:26 $MATCH: 