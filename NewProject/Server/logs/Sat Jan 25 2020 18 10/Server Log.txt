Start Log 

 Player 1 18:10:44 $MATCH:  

 Player 1 18:10:44 $START_GAME:  

 Player 1 18:10:44 $MOVE_TO_TABLE:  

 Player 2 18:10:44 $MOVE_TO_TABLE:  

 Player 2 18:10:53 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 1 18:10:53 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 18:10:53 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":298,"itemCardId":299} 

 Player 2 18:10:53 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":295}],"result":true,"preventMethod":false,"methodScopeId":294,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 18:10:53 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":294,"itemCardId":295} 

 Player 2 18:10:53 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[90,22,75,12,79,33,84,83,102,13,32,38,122,125,86,142,53,64,28,96,104,95,101,81,141,47,93,72,115,76,37,124,120,21,71,31,140,44,60,55,48,58,74,106,63,130,116,127,42,34,57,131,35,111,110,109,24,69,43,88,117,20,56,87,14,133,65,77,46,129,100,113,119,8,118,19,99,80,68,15,103,11,27,98,66,112,135,134,41,89,62,9,138,78,97,45,128,16,70,61,51,73,108,50,114,52,123,29,105,121,126,136,94,107,132,137,92,40,49,23,17,30,85,39,59,26,82,7,18,36,67,25,10,54,139,91]} 

 Player 2 18:10:53 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[240,269,280,265,231,228,281,256,245,260,255,270,259,238,254,249,251,233,264,277,275,263,279,278,257,241,272,262,237,229,274,250,258,244,247,242,235,236,276,253,266,246,239,232,248,230,268,243,252,261,234,273,271,267]} 

 Player 2 18:10:53 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[195,189,202,152,208,191,213,174,165,156,205,201,150,210,193,199,160,176,207,149,175,223,177,183,211,215,154,214,172,166,219,203,224,148,190,216,198,146,180,200,145,173,204,170,197,161,220,157,218,186,181,158,184,169,187,188,151,147,162,171,194,168,222,185,196,209,217,225,153,178,167,212,155,164,163,221,182,179,159,206,192]} 

 Player 2 18:10:53 $DRAW_CARD:  
{"deckType":5} 

 Player 2 18:10:53 $FLIP_CARD:  
{"cardId":192} 

 Player 2 18:10:53 $ADD_STORE_CARD:  
{"cardId":192} 

 Player 2 18:10:53 $DRAW_CARD:  
{"deckType":5} 

 Player 2 18:10:53 $FLIP_CARD:  
{"cardId":206} 

 Player 2 18:10:53 $ADD_STORE_CARD:  
{"cardId":206} 

 Player 2 18:10:54 $DRAW_CARD:  
{"deckType":2} 

 Player 2 18:10:54 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":267} 

 Player 2 18:10:54 $DRAW_CARD:  
{"deckType":2} 

 Player 2 18:10:54 $FLIP_CARD:  
{"cardId":271} 

 Player 2 18:10:54 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":271} 

 Player 2 18:10:54 $NEW_MONSTER_ON_PLACE:  
{"cardId":271,"monsterPlaceId":1} 

 Player 2 18:10:54 $DRAW_CARD:  
{"deckType":2} 

 Player 2 18:10:54 $FLIP_CARD:  
{"cardId":273} 

 Player 2 18:10:54 $REGISTER_PASSIVE_ITEM:  
{"cardId":273} 

 Player 2 18:10:54 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":273} 

 Player 2 18:10:54 $NEW_MONSTER_ON_PLACE:  
{"cardId":273,"monsterPlaceId":2} 

 Player 2 18:10:54 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 18:10:54 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 18:10:54 $DRAW_CARD:  
{"deckType":1} 

 Player 2 18:10:54 $MOVE_CARD:  
{"moveIndex":1,"cardId":91,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 18:10:54 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":299}],"result":true,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 18:10:54 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":91,"flipIfFlipped":false,"playerId":2} 

 Player 2 18:10:54 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":91} 

 Player 2 18:10:55 $FLIP_CARD:  
{"cardId":91} 

 Player 2 18:10:55 $FLIP_CARD:  
{"cardId":91} 

 Player 2 18:10:55 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":91} 

 Player 2 18:10:55 $DRAW_CARD:  
{"deckType":1} 

 Player 2 18:10:55 $MOVE_CARD:  
{"moveIndex":2,"cardId":139,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 18:10:55 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":139,"flipIfFlipped":false,"playerId":2} 

 Player 2 18:10:55 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":139} 

 Player 2 18:10:55 $FLIP_CARD:  
{"cardId":139} 

 Player 2 18:10:55 $FLIP_CARD:  
{"cardId":139} 

 Player 2 18:10:55 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":139} 

 Player 2 18:10:55 $DRAW_CARD:  
{"deckType":1} 

 Player 2 18:10:55 $MOVE_CARD:  
{"moveIndex":3,"cardId":54,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 18:10:56 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":54,"flipIfFlipped":false,"playerId":2} 

 Player 2 18:10:56 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":54} 

 Player 2 18:10:56 $FLIP_CARD:  
{"cardId":54} 

 Player 2 18:10:56 $FLIP_CARD:  
{"cardId":54} 

 Player 2 18:10:56 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":54} 

 Player 2 18:10:56 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 18:10:56 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":294,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 18:10:56 $DRAW_CARD:  
{"deckType":1} 

 Player 2 18:10:56 $MOVE_CARD:  
{"moveIndex":4,"cardId":10,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 18:10:56 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":10,"flipIfFlipped":false,"playerId":2} 

 Player 2 18:10:56 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":10} 

 Player 2 18:10:56 $FLIP_CARD:  
{"cardId":10} 

 Player 2 18:10:56 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":10} 

 Player 2 18:10:56 $DRAW_CARD:  
{"deckType":1} 

 Player 2 18:10:56 $MOVE_CARD:  
{"moveIndex":5,"cardId":25,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 18:10:57 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":25,"flipIfFlipped":false,"playerId":2} 

 Player 2 18:10:57 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":25} 

 Player 2 18:10:57 $FLIP_CARD:  
{"cardId":25} 

 Player 2 18:10:57 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":25} 

 Player 2 18:10:57 $DRAW_CARD:  
{"deckType":1} 

 Player 2 18:10:57 $MOVE_CARD:  
{"moveIndex":6,"cardId":67,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 18:10:57 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":67,"flipIfFlipped":false,"playerId":2} 

 Player 2 18:10:57 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":67} 

 Player 2 18:10:57 $FLIP_CARD:  
{"cardId":67} 

 Player 2 18:10:57 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":67} 

 Player 2 18:10:57 $GAME_HAS_STARTED:  

 Player 2 18:10:57 $SET_TURN:  
{"playerId":2} 

 Player 2 18:10:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:10:57 $NEXT_STACK_ID:  

 Player 2 18:10:57 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:10:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 18:10:57 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":294,"turnPlayerCardId":294,"stackEffectType":13}} 

 Player 2 18:10:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 18:10:57 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":294,"turnPlayerCardId":294,"stackEffectType":13}} 

 Player 1 18:10:57 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:10:57 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:10:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 18:10:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 18:11:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 2 18:11:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:11:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 18:11:00 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":294,"turnPlayerCardId":294,"stackEffectType":13}} 

 Player 2 18:11:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 2 18:11:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 2 18:11:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:11:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 2 18:11:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 18:11:00 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 18:11:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 18:11:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 18:11:00 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 18:11:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 2 18:11:00 $DRAW_CARD:  
{"deckType":1} 

 Player 2 18:11:00 $MOVE_CARD:  
{"moveIndex":7,"cardId":36,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 18:11:01 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":36,"flipIfFlipped":false,"playerId":2} 

 Player 2 18:11:01 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":36} 

 Player 2 18:11:01 $FLIP_CARD:  
{"cardId":36} 

 Player 2 18:11:01 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":36} 

 Player 2 18:11:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 18:11:01 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":294,"turnPlayerCardId":294,"stackEffectType":13}} 

 Player 2 18:11:01 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:11:01 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":294,"turnPlayerCardId":294,"stackEffectType":13}} 

 Player 2 18:11:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 2 18:11:01 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:11:01 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":294,"turnPlayerCardId":294,"stackEffectType":13}} 

 Player 2 18:11:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 2 18:11:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 2 18:11:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 18:11:01 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 18:11:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 18:11:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 18:11:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 18:11:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 18:11:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 18:11:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 18:11:01 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 18:11:01 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 2 18:11:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 2 18:11:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:11:01 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 2 18:11:01 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 2 18:11:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 2 18:11:02 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:11:02 $UPDATE_ACTIONS:  

 Player 2 18:11:25 $MOVE_CARD:  
{"moveIndex":8,"cardId":135,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 

 Player 1 18:11:25 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":135,"flipIfFlipped":true,"playerId":2} 

 Player 2 18:11:25 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":135} 

 Player 2 18:11:30 $SET_MONEY:  
{"playerId":2,"numOfCoins":10} 

 Player 2 18:11:30 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":7}],"result":null,"preventMethod":false,"methodScopeId":294,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 2 18:11:33 $SHOW_DECISION:  
{"startCardId":135,"endCardId":135,"flipEndCard":true} 

 Player 2 18:11:36 $NEXT_STACK_ID:  

 Player 2 18:11:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:11:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Hermit "} 

 Player 2 18:11:36 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":294,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":135,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 18:11:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Hermit "} 

 Player 2 18:11:36 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":294,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":135,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 18:11:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:11:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:11:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Hermit "} 

 Player 1 18:11:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Hermit "} 

 Player 2 18:11:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add PlayLootCardStackEffect 2 "}} 

 Player 2 18:11:39 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":135} 

 Player 2 18:11:39 $MOVE_CARD:  
{"moveIndex":9,"cardId":135,"placeID":300,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 18:11:39 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":135,"flipIfFlipped":true,"playerId":2} 

 Player 2 18:11:39 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":135} 

 Player 2 18:11:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Hermit: LookAtTopDeckAndPutOnTop"} 

 Player 2 18:11:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:11:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Hermit: LookAtTopDeckAndPutOnTop"} 

 Player 2 18:11:39 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":294,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":135,"lootPlayerId":2,"effectToDo":{"effectName":"LookAtTopDeckAndPutOnTop","cardEffectNum":0,"cardPlayerId":2,"cardId":135,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 18:11:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding PlayLootCardStackEffect 2"},"childOfId":10} 

 Player 2 18:11:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 2 18:11:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:11:39 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 2 18:11:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 2 18:11:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 18:11:39 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 18:11:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Hermit "} 

 Player 1 18:11:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Hermit "} 

 Player 1 18:11:39 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 18:11:39 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 2 18:11:39 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 2 18:11:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve PlayLootCardStackEffect 2 "}} 

 Player 2 18:11:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Hermit: LookAtTopDeckAndPutOnTop"} 

 Player 2 18:11:39 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":135,"particleType":6} 

 Player 2 18:11:41 $DISABLE_PARTICLE_EFFECT:  
{"cardId":135,"particleType":6} 

 Player 2 18:12:01 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[195,189,202,152,208,191,213,174,165,156,205,201,150,210,193,199,160,176,207,149,175,223,177,183,211,215,154,214,172,166,219,203,224,148,190,216,198,146,180,200,145,173,204,170,197,161,220,157,218,186,181,158,184,169,187,188,151,147,162,171,194,168,222,185,196,209,217,225,153,178,167,212,155,164,163,221,179,159]} 

 Player 2 18:12:01 $DECK_ADD_TO_TOP:  
{"deckType":5,"cardId":182} 

 Player 2 18:12:01 $DECK_ADD_TO_BOTTOM:  
{"deckType":5,"cardId":159} 

 Player 2 18:12:01 $DECK_ADD_TO_BOTTOM:  
{"deckType":5,"cardId":179} 

 Player 2 18:12:01 $DECK_ADD_TO_BOTTOM:  
{"deckType":5,"cardId":221} 

 Player 2 18:12:01 $DECK_ADD_TO_BOTTOM:  
{"deckType":5,"cardId":163} 

 Player 2 18:12:01 $REMOVE_FROM_PILE:  
{"cardId":135} 

 Player 2 18:12:01 $MOVE_CARD:  
{"moveIndex":10,"cardId":135,"placeID":301,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 18:12:02 $MOVE_CARD_END:  
{"moveIndex":10,"cardId":135,"flipIfFlipped":true,"playerId":2} 

 Player 2 18:12:02 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":135} 

 Player 2 18:12:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Hermit: LookAtTopDeckAndPutOnTop"} 

 Player 2 18:12:02 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":294,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":135,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 18:12:02 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:12:02 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":294,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":135,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 18:12:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve PlayLootCardStackEffect 2  "}} 

 Player 2 18:12:02 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:12:02 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":294,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":135,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 18:12:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve PlayLootCardStackEffect 2"},"childOfId":15} 

 Player 2 18:12:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 2 18:12:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 18:12:02 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 18:12:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Hermit "} 

 Player 1 18:12:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Hermit "} 

 Player 1 18:12:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Hermit "} 

 Player 1 18:12:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Hermit "} 

 Player 1 18:12:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Hermit "} 

 Player 1 18:12:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Hermit "} 

 Player 1 18:12:02 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 18:12:02 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 18:12:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 2 18:12:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:12:02 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 2 18:12:02 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 2 18:12:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 2 18:12:02 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:17:02 $SHOW_DECISION:  
{"startCardId":294,"endCardId":144} 

 Player 2 18:17:05 $NEXT_STACK_ID:  

 Player 2 18:17:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:17:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 

 Player 2 18:17:05 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":294,"itemToPurchaseCardId":144,"playerWhoBuysCardId":294,"cost":10,"stackEffectType":9}} 

 Player 2 18:17:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 

 Player 2 18:17:05 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":294,"itemToPurchaseCardId":144,"playerWhoBuysCardId":294,"cost":10,"stackEffectType":9}} 

 Player 1 18:17:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:17:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:17:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 

 Player 1 18:17:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 

 Player 2 18:17:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add PurchaseItem 3 "}} 

 Player 2 18:17:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:17:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 

 Player 2 18:17:08 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":294,"itemToPurchaseCardId":144,"playerWhoBuysCardId":294,"cost":10,"stackEffectType":9}} 

 Player 2 18:17:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding PurchaseItem 3"},"childOfId":20} 

 Player 2 18:17:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 2 18:17:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:17:08 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 2 18:17:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 2 18:17:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 18:17:08 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 18:17:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 

 Player 1 18:17:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 

 Player 1 18:17:08 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 18:17:08 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 2 18:17:08 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 2 18:17:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve PurchaseItem 3 "}} 

 Player 2 18:17:08 $SET_MONEY:  
{"playerId":2,"numOfCoins":0} 

 Player 2 18:17:08 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-10}],"result":null,"preventMethod":false,"methodScopeId":294,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 2 18:17:08 $DRAW_CARD:  
{"deckType":5} 

 Player 2 18:17:08 $MOVE_CARD:  
{"moveIndex":11,"cardId":182,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 

 Player 1 18:17:09 $MOVE_CARD_END:  
{"moveIndex":11,"cardId":182,"flipIfFlipped":true,"playerId":2} 

 Player 2 18:17:09 $ADD_AN_ITEM:  
{"playerId":2,"cardId":182,"isReward":false} 

 Player 2 18:17:09 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":182}],"result":true,"preventMethod":false,"methodScopeId":294,"scopeIsPlayer":true,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 

 Player 2 18:17:09 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:17:09 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":294,"itemToPurchaseCardId":144,"playerWhoBuysCardId":294,"cost":10,"stackEffectType":9}} 

 Player 2 18:17:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Remove After Resolve PurchaseItem 3  "}} 

 Player 2 18:17:09 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:17:09 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":294,"itemToPurchaseCardId":144,"playerWhoBuysCardId":294,"cost":10,"stackEffectType":9}} 

 Player 2 18:17:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Response Remove After Resolve PurchaseItem 3"},"childOfId":25} 

 Player 2 18:17:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Wait For Response From Player 1 "},"childOfId":25} 

 Player 2 18:17:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 18:17:09 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 18:17:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 

 Player 1 18:17:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 

 Player 1 18:17:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 

 Player 1 18:17:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 

 Player 1 18:17:09 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 18:17:09 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 2 18:17:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":25} 

 Player 2 18:17:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:17:09 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 2 18:17:09 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 2 18:17:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Stack Was Emptied "}} 

 Player 2 18:17:09 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:17:16 $MATCH: 