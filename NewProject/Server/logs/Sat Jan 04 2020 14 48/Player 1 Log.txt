Start Log 
 Player 1 14:48:50 $START_GAME:  
 Player 1 14:48:50 $MOVE_TO_TABLE:  
 Player 1 14:48:57 $FINISH_LOAD:  

 {"id":1,"turnPlayerId":2} 
 Player 1 14:48:58 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":267}],"result":true,"preventMethod":false,"methodScopeId":264,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 1 14:48:59 $MOVE_CARD_END:  

 {"moveIndex":1,"cardId":62,"flipIfFlipped":false,"playerId":2} 
 Player 1 14:48:59 $MOVE_CARD_END:  

 {"moveIndex":2,"cardId":65,"flipIfFlipped":false,"playerId":2} 
 Player 1 14:49:00 $MOVE_CARD_END:  

 {"moveIndex":3,"cardId":48,"flipIfFlipped":false,"playerId":2} 
 Player 1 14:49:00 $MOVE_CARD_END:  

 {"moveIndex":4,"cardId":73,"flipIfFlipped":false,"playerId":2} 
 Player 1 14:49:01 $MOVE_CARD_END:  

 {"moveIndex":5,"cardId":131,"flipIfFlipped":false,"playerId":2} 
 Player 1 14:49:01 $MOVE_CARD_END:  

 {"moveIndex":6,"cardId":57,"flipIfFlipped":false,"playerId":2} 
 Player 1 14:49:01 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 14:49:01 $NEXT_STACK_ID:  
 Player 1 14:49:01 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 14:49:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 14:49:01 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":264,"turnPlayerCardId":264,"stackEffectType":13}} 
 Player 1 14:49:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 14:49:01 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":1,"creatorCardId":264,"turnPlayerCardId":264,"stackEffectType":13}} 
 Player 1 14:49:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 
 Player 1 14:49:01 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 14:49:02 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 1 14:49:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 14:49:02 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":264,"turnPlayerCardId":264,"stackEffectType":13}} 
 Player 1 14:49:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 
 Player 1 14:49:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 1 14:49:02 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 14:49:02 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 1 14:49:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 1 14:49:02 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 14:49:02 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 14:49:02 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 1 14:49:02 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 1 14:49:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 
 Player 1 14:49:02 $DRAW_CARD:  

 {"deckType":1} 
 Player 1 14:49:02 $MOVE_CARD:  

 {"moveIndex":7,"cardId":10,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 1 14:49:02 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":10} 
 Player 1 14:49:02 $FLIP_CARD:  

 {"cardId":10} 
 Player 1 14:49:02 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":10} 
 Player 1 14:49:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 14:49:02 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":264,"turnPlayerCardId":264,"stackEffectType":13}} 
 Player 1 14:49:02 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 1 14:49:02 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 14:49:03 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":1,"creatorCardId":264,"turnPlayerCardId":264,"stackEffectType":13}} 
 Player 1 14:49:03 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 
 Player 1 14:49:03 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 14:49:03 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":264,"turnPlayerCardId":264,"stackEffectType":13}} 
 Player 1 14:49:03 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 
 Player 1 14:49:03 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Player 1 14:49:03 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 14:49:03 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 14:49:03 $ACTION_MASSAGE_REMOVE:  

 {"id":7} 
 Player 1 14:49:03 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Player 1 14:49:03 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 14:49:03 $ACTION_MASSAGE_REMOVE:  

 {"id":8} 
 Player 1 14:49:03 $ACTION_MASSAGE_REMOVE:  

 {"id":6} 
 Player 1 14:49:03 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":9,"_text":"Stack Was Emptied "}} 
 Player 1 14:49:03 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 14:49:03 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 1 14:49:03 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 1 14:49:03 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 1 14:49:03 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 1 14:49:03 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 1 14:49:03 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 1 14:49:03 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 1 14:49:04 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 1 14:49:05 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 1 14:49:07 $NEXT_STACK_ID:  
 Player 1 14:49:07 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 14:49:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Cain"} 
 Player 1 14:49:07 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":264,"hasLockingStackEffect":false,"itemToPlayCardId":264,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 1 14:49:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Cain"} 
 Player 1 14:49:07 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":2,"creatorCardId":264,"hasLockingStackEffect":false,"itemToPlayCardId":264,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 1 14:49:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":10,"_text":"Add ActivateItem 2 "}} 
 Player 1 14:49:11 $USE_ITEM:  

 {"cardId":264} 
 Player 1 14:49:11 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 14:49:12 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 1 14:49:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Cain"} 
 Player 1 14:49:12 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":264,"hasLockingStackEffect":false,"itemToPlayCardId":264,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 14:49:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":11,"_text":"Response Adding ActivateItem 2"},"childOfId":10} 
 Player 1 14:49:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 
 Player 1 14:49:12 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 14:49:12 $ACTION_MASSAGE_REMOVE:  

 {"id":12} 
 Player 1 14:49:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 
 Player 1 14:49:12 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 14:49:12 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 14:49:12 $ACTION_MASSAGE_REMOVE:  

 {"id":13} 
 Player 1 14:49:12 $ACTION_MASSAGE_REMOVE:  

 {"id":11} 
 Player 1 14:49:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":14,"_text":"Resolve ActivateItem 2 "}} 
 Player 1 14:49:12 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":264,"particleType":6} 
 Player 1 14:49:14 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":264,"particleType":6} 
 Player 1 14:49:14 $NEXT_STACK_ID:  
 Player 1 14:49:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Cain"} 
 Player 1 14:49:14 $PLAYER_LOSE_LOOT:  

 {"playerId":1,"cardId":10} 
 Player 1 14:49:14 $MOVE_CARD:  

 {"moveIndex":8,"cardId":10,"placeID":278,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 14:49:14 $MOVE_CARD_TO_PILE:  

 {"type":7,"cardId":10} 
 Player 1 14:49:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 1 Penny(2): addMoney \n2:Player 1 activated Cain"} 
 Player 1 14:49:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 14:49:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 1 Penny(2): addMoney \n2:Player 1 activated Cain"} 
 Player 1 14:49:14 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":264,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":10,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":10,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 14:49:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 1 Penny(2): addMoney \n2:Player 1 activated Cain"} 
 Player 1 14:49:15 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":2,"creatorCardId":264,"hasLockingStackEffect":false,"itemToPlayCardId":264,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 14:49:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 1 Penny(2): addMoney \n2:Player 1 activated Cain"} 
 Player 1 14:49:15 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":264,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":10,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":10,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 14:49:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 1 Penny(2): addMoney \n2:Player 1 activated Cain"} 
 Player 1 14:49:15 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":2,"creatorCardId":264,"hasLockingStackEffect":false,"itemToPlayCardId":264,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 14:49:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 1 Penny(2): addMoney \n2:Player 1 activated Cain"} 
 Player 1 14:49:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 1 Penny(2): addMoney \n2:Player 1 activated Cain"} 
 Player 1 14:49:15 $REPLACE_STACK:  

 {"currentStack":[{"entityId":3,"creatorCardId":264,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":10,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":10,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":2,"creatorCardId":264,"hasLockingStackEffect":false,"itemToPlayCardId":264,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 
 Player 1 14:49:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 1 Penny(2): addMoney \n2:Player 1 activated Cain"} 
 Player 1 14:49:15 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":264,"hasLockingStackEffect":false,"itemToPlayCardId":264,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 14:49:15 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 1 14:49:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 1 Penny(2): addMoney"} 
 Player 1 14:49:15 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":2,"creatorCardId":264,"hasLockingStackEffect":false,"itemToPlayCardId":264,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 14:49:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":15,"_text":"Remove After Resolve ActivateItem 2  "}} 
 Player 1 14:49:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 1 Penny(2): addMoney"} 
 Player 1 14:49:15 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":264,"hasLockingStackEffect":false,"itemToPlayCardId":264,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 14:49:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":16,"_text":"Response Remove After Resolve ActivateItem 2"},"childOfId":15} 
 Player 1 14:49:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 
 Player 1 14:49:15 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 14:49:15 $ACTION_MASSAGE_REMOVE:  

 {"id":17} 
 Player 1 14:49:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 
 Player 1 14:49:15 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 14:49:15 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 14:49:16 $ACTION_MASSAGE_REMOVE:  

 {"id":18} 
 Player 1 14:49:16 $ACTION_MASSAGE_REMOVE:  

 {"id":16} 
 Player 1 14:49:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":19,"_text":"Resolve PlayLootCardStackEffect 3 "}} 
 Player 1 14:49:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 1 Penny(2): addMoney"} 
 Player 1 14:49:16 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":10,"particleType":6} 
 Player 1 14:49:17 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 1 14:49:18 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":10,"particleType":6} 
 Player 1 14:49:18 $SET_MONEY:  

 {"playerId":1,"numOfCoins":4} 
 Player 1 14:49:18 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":1}],"result":null,"preventMethod":false,"methodScopeId":264,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 1 14:49:18 $REMOVE_FROM_PILE:  

 {"cardId":10} 
 Player 1 14:49:18 $MOVE_CARD:  

 {"moveIndex":9,"cardId":10,"placeID":279,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 14:49:18 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":10} 
 Player 1 14:49:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 1 Penny(2): addMoney"} 
 Player 1 14:49:18 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":264,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":10,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 14:49:18 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 1 14:49:18 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 14:49:18 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":264,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":10,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 14:49:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":20,"_text":"Remove After Resolve PlayLootCardStackEffect 3  "}} 
 Player 1 14:49:18 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 14:49:18 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":264,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":10,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 14:49:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":21,"_text":"Response Remove After Resolve PlayLootCardStackEffect 3"},"childOfId":20} 
 Player 1 14:49:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 
 Player 1 14:49:18 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 14:49:18 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 14:49:19 $ACTION_MASSAGE_REMOVE:  

 {"id":22} 
 Player 1 14:49:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 
 Player 1 14:49:19 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 14:49:19 $ACTION_MASSAGE_REMOVE:  

 {"id":23} 
 Player 1 14:49:19 $ACTION_MASSAGE_REMOVE:  

 {"id":21} 
 Player 1 14:49:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":24,"_text":"Stack Was Emptied "}} 
 Player 1 14:49:19 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 14:49:19 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 1 14:49:19 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 1 14:49:19 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 1 14:49:19 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 1 14:49:19 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 1 14:49:19 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 1 14:49:19 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 1 14:49:19 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 1 14:49:19 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 1 14:49:19 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 1 14:49:19 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 1 14:49:19 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 1 14:49:19 $ACTION_MASSAGE_REMOVE:  

 {"id":24} 
 Player 1 14:49:20 $ACTION_MASSAGE_REMOVE:  

 {"id":24} 
 Player 1 14:49:20 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 14:49:20 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 14:49:21 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 1 14:49:21 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 1 14:49:21 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 1 14:49:21 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 1 14:49:21 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 1 14:49:21 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 1 14:49:21 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 1 14:49:21 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 1 14:49:21 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 1 14:49:21 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 1 14:49:21 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 1 14:49:21 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 1 14:49:21 $ACTION_MASSAGE_REMOVE:  

 {"id":24} 
 Player 1 14:49:21 $REPLACE_STACK:  

 {"currentStack":[]} 
 Player 1 14:49:21 $END_TURN:  
 Player 1 14:49:21 $SET_TURN:  

 {"playerId":2} 
 Player 1 14:49:21 $START_TURN:  

 {"playerId":2} 
 Player 1 14:49:22 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 1 14:49:22 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 14:49:22 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 14:49:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 14:49:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 14:49:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 14:49:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 14:49:22 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 14:49:22 $MOVE_CARD_END:  

 {"moveIndex":10,"cardId":9,"flipIfFlipped":false,"playerId":2} 
 Player 1 14:49:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 14:49:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 14:49:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 14:49:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 14:49:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 14:49:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 14:49:23 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 14:49:58 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 14:49:58 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 14:49:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated HolyMantle"} 
 Player 1 14:49:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated HolyMantle"} 
 Player 1 14:50:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated HolyMantle"} 
 Player 1 14:50:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated HolyMantle"} 
 Player 1 14:50:02 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 14:50:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated HolyMantle"} 
 Player 1 14:50:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated HolyMantle"} 
 Player 1 14:50:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated HolyMantle"} 
 Player 1 14:50:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated HolyMantle"} 
 Player 1 14:50:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated HolyMantle"} 
 Player 1 14:50:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated HolyMantle"} 
 Player 1 14:50:05 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false}