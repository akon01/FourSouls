Start Log 
 Player 2 02:25:22 $MOVE_TO_TABLE:  
 Player 2 02:25:30 $FINISH_LOAD:  

 {"id":2,"turnPlayerId":2} 
 Player 2 02:25:30 $ASSIGN_CHAR_TO_PLAYER:  

 {"playerId":1,"charCardId":287,"itemCardId":288} 
 Player 2 02:25:30 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":280}],"result":true,"preventMethod":false,"methodScopeId":279,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 02:25:30 $ASSIGN_CHAR_TO_PLAYER:  

 {"playerId":2,"charCardId":279,"itemCardId":280} 
 Player 2 02:25:30 $DECK_ARRAGMENT:  

 {"deckType":1,"arrangement":[100,59,77,25,104,12,21,130,70,113,140,134,33,82,90,38,79,94,81,37,18,43,11,93,46,99,91,87,42,109,64,97,13,106,125,76,92,44,34,30,22,110,124,57,105,63,36,80,102,9,78,62,117,15,119,65,116,32,19,95,53,68,123,60,31,8,129,56,58,7,83,142,10,35,132,86,141,115,72,137,107,16,88,20,139,108,75,47,73,28,55,69,50,112,26,24,54,45,29,118,103,67,127,84,48,41,138,101,133,52,85,128,39,120,49,66,111,23,40,96,17,98,61,89,51,27,131,126,114,71,136,135,74,14,121,122]} 
 Player 2 02:25:30 $DECK_ARRAGMENT:  

 {"deckType":2,"arrangement":[225,230,276,241,247,245,272,265,267,264,235,234,236,263,273,233,250,238,231,246,232,240,244,242,256,227,237,270,251,268,229,226,239,252,255,260,271,249,274,254,253,261,224,259,228,243,262,269,258,266,248,275,257,223]} 
 Player 2 02:25:30 $DECK_ARRAGMENT:  

 {"deckType":5,"arrangement":[171,177,148,216,176,213,188,193,197,203,169,182,195,209,157,163,217,161,150,206,162,155,172,186,154,181,191,210,166,204,218,146,190,152,160,202,147,165,156,208,184,192,201,183,214,185,174,173,194,198,212,158,211,207,199,205,151,215,145,159,170,220,168,178,180,189,153,219,187,167,179,149,164,175,200,196]} 
 Player 2 02:25:30 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 02:25:30 $FLIP_CARD:  

 {"cardId":196} 
 Player 2 02:25:30 $ADD_STORE_CARD:  

 {"cardId":196} 
 Player 2 02:25:30 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 02:25:30 $FLIP_CARD:  

 {"cardId":200} 
 Player 2 02:25:30 $ADD_STORE_CARD:  

 {"cardId":200} 
 Player 2 02:25:30 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 02:25:30 $DECK_ADD_TO_BOTTOM:  

 {"deckType":2,"cardId":223} 
 Player 2 02:25:30 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 02:25:30 $FLIP_CARD:  

 {"cardId":257} 
 Player 2 02:25:30 $ADD_MONSTER:  

 {"monsterPlaceId":1,"monsterId":257} 
 Player 2 02:25:30 $NEW_MONSTER_ON_PLACE:  

 {"cardId":257,"monsterPlaceId":1} 
 Player 2 02:25:30 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 02:25:30 $FLIP_CARD:  

 {"cardId":275} 
 Player 2 02:25:30 $ADD_MONSTER:  

 {"monsterPlaceId":2,"monsterId":275} 
 Player 2 02:25:31 $NEW_MONSTER_ON_PLACE:  

 {"cardId":275,"monsterPlaceId":2} 
 Player 2 02:25:31 $SET_MONEY:  

 {"playerId":1,"numOfCoins":3} 
 Player 2 02:25:31 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":287,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 2 02:25:31 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 02:25:31 $MOVE_CARD:  

 {"moveIndex":1,"cardId":122,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 02:25:31 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":122} 
 Player 2 02:25:31 $FLIP_CARD:  

 {"cardId":122} 
 Player 2 02:25:31 $FLIP_CARD:  

 {"cardId":122} 
 Player 2 02:25:31 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":122} 
 Player 2 02:25:31 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 02:25:31 $MOVE_CARD:  

 {"moveIndex":2,"cardId":121,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 02:25:32 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":121} 
 Player 2 02:25:32 $FLIP_CARD:  

 {"cardId":121} 
 Player 2 02:25:32 $FLIP_CARD:  

 {"cardId":121} 
 Player 2 02:25:32 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":121} 
 Player 2 02:25:32 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 02:25:32 $MOVE_CARD:  

 {"moveIndex":3,"cardId":14,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 02:25:32 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":14} 
 Player 2 02:25:32 $FLIP_CARD:  

 {"cardId":14} 
 Player 2 02:25:32 $FLIP_CARD:  

 {"cardId":14} 
 Player 2 02:25:32 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":14} 
 Player 2 02:25:32 $SET_MONEY:  

 {"playerId":2,"numOfCoins":3} 
 Player 2 02:25:32 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":279,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Player 2 02:25:32 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 02:25:32 $MOVE_CARD:  

 {"moveIndex":4,"cardId":74,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 02:25:33 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":74} 
 Player 2 02:25:33 $FLIP_CARD:  

 {"cardId":74} 
 Player 2 02:25:33 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":74} 
 Player 2 02:25:33 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 02:25:33 $MOVE_CARD:  

 {"moveIndex":5,"cardId":135,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 02:25:33 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":135} 
 Player 2 02:25:33 $FLIP_CARD:  

 {"cardId":135} 
 Player 2 02:25:33 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":135} 
 Player 2 02:25:33 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 02:25:33 $MOVE_CARD:  

 {"moveIndex":6,"cardId":136,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 02:25:34 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":136} 
 Player 2 02:25:34 $FLIP_CARD:  

 {"cardId":136} 
 Player 2 02:25:34 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":136} 
 Player 2 02:25:34 $GAME_HAS_STARTED:  
 Player 2 02:25:34 $SET_TURN:  

 {"playerId":2} 
 Player 2 02:25:34 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:25:34 $NEXT_STACK_ID:  
 Player 2 02:25:34 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:25:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 02:25:34 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":279,"turnPlayerCardId":279,"stackEffectType":13}} 
 Player 2 02:25:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 02:25:34 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":1,"creatorCardId":279,"turnPlayerCardId":279,"stackEffectType":13}} 
 Player 2 02:25:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 
 Player 2 02:25:34 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:25:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 02:25:34 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":279,"turnPlayerCardId":279,"stackEffectType":13}} 
 Player 2 02:25:34 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 2 02:25:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 
 Player 2 02:25:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 2 02:25:34 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:25:34 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 2 02:25:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 2 02:25:34 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:25:34 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:25:35 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 2 02:25:35 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 2 02:25:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 
 Player 2 02:25:35 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 02:25:35 $MOVE_CARD:  

 {"moveIndex":7,"cardId":71,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 02:25:35 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":71} 
 Player 2 02:25:35 $FLIP_CARD:  

 {"cardId":71} 
 Player 2 02:25:35 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":71} 
 Player 2 02:25:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 02:25:35 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":279,"turnPlayerCardId":279,"stackEffectType":13}} 
 Player 2 02:25:35 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 2 02:25:35 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:25:35 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":1,"creatorCardId":279,"turnPlayerCardId":279,"stackEffectType":13}} 
 Player 2 02:25:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 
 Player 2 02:25:35 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:25:35 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":279,"turnPlayerCardId":279,"stackEffectType":13}} 
 Player 2 02:25:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 
 Player 2 02:25:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Player 2 02:25:35 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:25:35 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:25:36 $ACTION_MASSAGE_REMOVE:  

 {"id":7} 
 Player 2 02:25:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Player 2 02:25:36 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:25:36 $ACTION_MASSAGE_REMOVE:  

 {"id":8} 
 Player 2 02:25:36 $ACTION_MASSAGE_REMOVE:  

 {"id":6} 
 Player 2 02:25:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":9,"_text":"Stack Was Emptied "}} 
 Player 2 02:25:36 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:25:36 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 2 02:25:36 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 2 02:25:36 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 2 02:25:36 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 2 02:25:36 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 2 02:25:36 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 2 02:25:36 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 2 02:25:36 $UPDATE_ACTIONS:  
 Player 2 02:25:36 $MOVE_CARD_END:  

 {"moveIndex":8,"cardId":161,"flipIfFlipped":true,"playerId":1} 
 Player 2 02:25:36 $MOVE_CARD_END:  

 {"moveIndex":9,"cardId":161,"flipIfFlipped":true,"playerId":1} 
 Player 2 02:25:37 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 2 02:25:38 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 2 02:25:42 $SHOW_DECISION:  

 {"startCardId":279,"endCardId":275} 
 Player 2 02:25:45 $NEXT_STACK_ID:  
 Player 2 02:25:45 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:25:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Widow"} 
 Player 2 02:25:45 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":279,"attackingPlayerCardId":279,"idOfCardBeingAttacked":275,"stackEffectType":4}} 
 Player 2 02:25:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Widow"} 
 Player 2 02:25:45 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":2,"creatorCardId":279,"attackingPlayerCardId":279,"idOfCardBeingAttacked":275,"stackEffectType":4}} 
 Player 2 02:25:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":10,"_text":"Add DeclareAttack 2 "}} 
 Player 2 02:25:45 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:25:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Widow"} 
 Player 2 02:25:45 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":279,"attackingPlayerCardId":279,"idOfCardBeingAttacked":275,"stackEffectType":4}} 
 Player 2 02:25:45 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 2 02:25:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":11,"_text":"Response Adding DeclareAttack 2"},"childOfId":10} 
 Player 2 02:25:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 
 Player 2 02:25:46 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:25:46 $ACTION_MASSAGE_REMOVE:  

 {"id":12} 
 Player 2 02:25:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 
 Player 2 02:25:46 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:25:46 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:25:46 $ACTION_MASSAGE_REMOVE:  

 {"id":13} 
 Player 2 02:25:46 $ACTION_MASSAGE_REMOVE:  

 {"id":11} 
 Player 2 02:25:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":14,"_text":"Resolve DeclareAttack 2 "}} 
 Player 2 02:25:46 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":275,"particleType":5} 
 Player 2 02:25:46 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":279,"scopeIsPlayer":true,"index":4,"originStackId":2},"isAfterActivation":true,"index":4} 
 Player 2 02:25:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Widow"} 
 Player 2 02:25:46 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":279,"attackingPlayerCardId":279,"idOfCardBeingAttacked":275,"stackEffectType":4}} 
 Player 2 02:25:46 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 2 02:25:46 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:25:46 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":2,"creatorCardId":279,"attackingPlayerCardId":279,"idOfCardBeingAttacked":275,"stackEffectType":4}} 
 Player 2 02:25:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":15,"_text":"Remove After Resolve DeclareAttack 2  "}} 
 Player 2 02:25:46 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:25:46 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":279,"attackingPlayerCardId":279,"idOfCardBeingAttacked":275,"stackEffectType":4}} 
 Player 2 02:25:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":16,"_text":"Response Remove After Resolve DeclareAttack 2"},"childOfId":15} 
 Player 2 02:25:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 
 Player 2 02:25:46 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:25:46 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:25:47 $ACTION_MASSAGE_REMOVE:  

 {"id":17} 
 Player 2 02:25:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 
 Player 2 02:25:47 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:25:47 $ACTION_MASSAGE_REMOVE:  

 {"id":18} 
 Player 2 02:25:47 $ACTION_MASSAGE_REMOVE:  

 {"id":16} 
 Player 2 02:25:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":19,"_text":"Stack Was Emptied "}} 
 Player 2 02:25:47 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:25:47 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 2 02:25:47 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 2 02:25:47 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 2 02:25:47 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 2 02:25:47 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 2 02:25:47 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 2 02:25:47 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 2 02:25:47 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 2 02:25:47 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 2 02:25:47 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 2 02:25:47 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 2 02:25:48 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 2 02:25:49 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 2 02:25:50 $NEXT_STACK_ID:  
 Player 2 02:25:50 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:25:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster>"} 
 Player 2 02:25:50 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":279,"rollingPlayerCardId":279,"stackEffectType":2,"attackedMonsterCardId":275}} 
 Player 2 02:25:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster>"} 
 Player 2 02:25:50 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":279,"rollingPlayerCardId":279,"stackEffectType":2,"attackedMonsterCardId":275}} 
 Player 2 02:25:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":20,"_text":"Add AttackRoll 3 "}} 
 Player 2 02:25:50 $ROLL_DICE:  

 {"playerId":2} 
 Player 2 02:25:52 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":2} 
 Player 2 02:25:52 $UPDATE_STACK_VIS:  

 {"stackId":3,"text":"player rolled 2 vs Widow<Monster>"} 
 Player 2 02:25:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 2 vs Widow<Monster>"} 
 Player 2 02:25:52 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:25:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 2 vs Widow<Monster>"} 
 Player 2 02:25:52 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":279,"numberRolled":2,"rollingPlayerCardId":279,"stackEffectType":2,"attackedMonsterCardId":275}} 
 Player 2 02:25:52 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 2 02:25:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":21,"_text":"Response Adding AttackRoll 3"},"childOfId":20} 
 Player 2 02:25:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 
 Player 2 02:25:52 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:25:52 $ACTION_MASSAGE_REMOVE:  

 {"id":22} 
 Player 2 02:25:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 
 Player 2 02:25:52 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:25:52 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:25:52 $ACTION_MASSAGE_REMOVE:  

 {"id":23} 
 Player 2 02:25:52 $ACTION_MASSAGE_REMOVE:  

 {"id":21} 
 Player 2 02:25:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":24,"_text":"Resolve AttackRoll 3 "}} 
 Player 2 02:25:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":25,"_text":"Added 0 to original roll"}} 
 Player 2 02:25:52 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":3},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":279,"scopeIsPlayer":true,"index":1,"originStackId":3},"isAfterActivation":false,"index":1} 
 Player 2 02:25:52 $NEXT_STACK_ID:  
 Player 2 02:25:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 2 vs Widow<Monster>"} 
 Player 2 02:25:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 2 vs Widow<Monster> \n2:Activate Dead Bird effect LookAtPlayerHand<LookAtPlayerHand>"} 
 Player 2 02:25:52 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":287,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":161,"effectToDo":{"effectName":"LookAtPlayerHand","cardEffectNum":0,"cardPlayerId":1,"cardId":161,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 02:25:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 2 vs Widow<Monster> \n2:Activate Dead Bird effect LookAtPlayerHand<LookAtPlayerHand>"} 
 Player 2 02:25:52 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":287,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":161,"effectToDo":{"effectName":"LookAtPlayerHand","cardEffectNum":0,"cardPlayerId":1,"cardId":161,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 02:25:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":26,"_text":"Add ActivatePassiveEffect 4 "}} 
 Player 2 02:25:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 2 vs Widow<Monster> \n2:Activate Dead Bird effect LookAtPlayerHand<LookAtPlayerHand>"} 
 Player 2 02:25:52 $PUT_ON_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":287,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":161,"effectToDo":{"effectName":"LookAtPlayerHand","cardEffectNum":0,"cardPlayerId":1,"cardId":161,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14},"playerId":1,"originPlayerId":2} 
 Player 2 02:25:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 2 vs Widow<Monster> \n2:Activate Dead Bird effect LookAtPlayerHand<LookAtPlayerHand>"} 
 Player 2 02:25:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 2 vs Widow<Monster> \n2:Activate Dead Bird effect LookAtPlayerHand<LookAtPlayerHand>"} 
 Player 2 02:25:53 $ACTION_MASSAGE_REMOVE:  

 {"id":26} 
 Player 2 02:25:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":27,"_text":"Response Adding ActivatePassiveEffect 4"},"childOfId":26} 
 Player 2 02:25:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":28,"_text":"Wait For Response From Player 1 "},"childOfId":26} 
 Player 2 02:25:53 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:25:53 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:25:53 $ACTION_MASSAGE_REMOVE:  

 {"id":28} 
 Player 2 02:25:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":29,"_text":"Wait For Response From Player 2 "},"childOfId":26} 
 Player 2 02:25:53 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:25:53 $ACTION_MASSAGE_REMOVE:  

 {"id":29} 
 Player 2 02:25:53 $ACTION_MASSAGE_REMOVE:  

 {"id":27} 
 Player 2 02:25:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":30,"_text":"Resolve ActivatePassiveEffect 4 "}} 
 Player 2 02:25:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 2 vs Widow<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:25:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 2 vs Widow<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:25:53 $DO_STACK_EFFECT:  

 {"originPlayerId":2,"playerId":1,"currentStack":[{"entityId":3,"creatorCardId":279,"numberRolled":2,"rollingPlayerCardId":279,"stackEffectType":2,"attackedMonsterCardId":275},{"effectCollectedData":{"effectTargets":[279],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":287,"effectCardPlayer":287},"entityId":4,"creatorCardId":287,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":161,"effectToDo":{"effectName":"LookAtPlayerHand","cardEffectNum":0,"cardPlayerId":1,"cardId":161,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}]} 
 Player 2 02:25:55 $ACTION_MASSAGE_REMOVE:  

 {"id":25} 
 Player 2 02:26:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 2 vs Widow<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:26:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 2 vs Widow<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:26:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 2 vs Widow<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:26:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 2 vs Widow<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:26:12 $ACTION_MASSAGE_REMOVE:  

 {"id":30} 
 Player 2 02:26:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:26:12 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":279,"numberRolled":2,"rollingPlayerCardId":279,"stackEffectType":2,"attackedMonsterCardId":275}} 
 Player 2 02:26:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:26:12 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":279,"numberRolled":2,"rollingPlayerCardId":279,"stackEffectType":2,"attackedMonsterCardId":275}} 
 Player 2 02:26:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:26:12 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[279],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":287,"effectCardPlayer":287},"entityId":4,"creatorCardId":287,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":161,"effectToDo":{"effectName":"LookAtPlayerHand","cardEffectNum":0,"cardPlayerId":1,"cardId":161,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":{"type":2,"number":{"type":2,"number":3}}},{"type":2,"number":{"type":2,"number":{"type":2,"number":2}}},{"type":2,"number":{"type":2,"number":{"type":2,"number":4}}}],"result":null,"preventMethod":false,"methodScopeId":279,"scopeIsPlayer":false,"index":null},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 02:26:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:26:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:26:12 $REPLACE_STACK:  

 {"currentStack":[{"entityId":3,"creatorCardId":279,"numberRolled":2,"rollingPlayerCardId":279,"stackEffectType":2,"attackedMonsterCardId":275},{"effectCollectedData":{"effectTargets":[279],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":287,"effectCardPlayer":287},"entityId":4,"creatorCardId":287,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":161,"effectToDo":{"effectName":"LookAtPlayerHand","cardEffectNum":0,"cardPlayerId":1,"cardId":161,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":{"type":2,"number":{"type":2,"number":3}}},{"type":2,"number":{"type":2,"number":{"type":2,"number":2}}},{"type":2,"number":{"type":2,"number":{"type":2,"number":4}}}],"result":null,"preventMethod":false,"methodScopeId":279,"scopeIsPlayer":false,"index":null},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}]} 
 Player 2 02:26:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster>"} 
 Player 2 02:26:12 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[279],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":287,"effectCardPlayer":287},"entityId":4,"creatorCardId":287,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":161,"effectToDo":{"effectName":"LookAtPlayerHand","cardEffectNum":0,"cardPlayerId":1,"cardId":161,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":{"type":2,"number":{"type":2,"number":3}}},{"type":2,"number":{"type":2,"number":{"type":2,"number":2}}},{"type":2,"number":{"type":2,"number":{"type":2,"number":4}}}],"result":null,"preventMethod":false,"methodScopeId":279,"scopeIsPlayer":false,"index":null},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 02:26:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":31,"_text":"Remove After Resolve ActivatePassiveEffect 4  "}} 
 Player 2 02:26:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster>"} 
 Player 2 02:26:13 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[279],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":287,"effectCardPlayer":287},"entityId":4,"creatorCardId":287,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":161,"effectToDo":{"effectName":"LookAtPlayerHand","cardEffectNum":0,"cardPlayerId":1,"cardId":161,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":{"type":2,"number":{"type":2,"number":3}}},{"type":2,"number":{"type":2,"number":{"type":2,"number":2}}},{"type":2,"number":{"type":2,"number":{"type":2,"number":4}}}],"result":null,"preventMethod":false,"methodScopeId":279,"scopeIsPlayer":false,"index":null},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 02:26:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":32,"_text":"Response Remove After Resolve ActivatePassiveEffect 4"},"childOfId":31} 
 Player 2 02:26:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":33,"_text":"Wait For Response From Player 2 "},"childOfId":31} 
 Player 2 02:26:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:26:13 $ACTION_MASSAGE_REMOVE:  

 {"id":33} 
 Player 2 02:26:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":34,"_text":"Wait For Response From Player 1 "},"childOfId":31} 
 Player 2 02:26:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:26:13 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:26:13 $ACTION_MASSAGE_REMOVE:  

 {"id":34} 
 Player 2 02:26:13 $ACTION_MASSAGE_REMOVE:  

 {"id":32} 
 Player 2 02:26:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":35,"_text":"Resolve AttackRoll 3 "}} 
 Player 2 02:26:13 $NEXT_STACK_ID:  
 Player 2 02:26:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster>"} 
 Player 2 02:26:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:26:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Blue Baby \n2:Player 2 is rolling against Widow<Monster>"} 
 Player 2 02:26:13 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":5,"creatorCardId":279,"entityToDoDamageCardId":275,"entityToTakeDamageCardId":279,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 02:26:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Blue Baby \n2:Player 2 is rolling against Widow<Monster>"} 
 Player 2 02:26:13 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":279,"numberRolled":2,"rollingPlayerCardId":279,"stackEffectType":2,"attackedMonsterCardId":275}} 
 Player 2 02:26:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Blue Baby \n2:Player 2 is rolling against Widow<Monster>"} 
 Player 2 02:26:13 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":5,"creatorCardId":279,"entityToDoDamageCardId":275,"entityToTakeDamageCardId":279,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 02:26:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Blue Baby \n2:Player 2 is rolling against Widow<Monster>"} 
 Player 2 02:26:14 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":279,"numberRolled":2,"rollingPlayerCardId":279,"stackEffectType":2,"attackedMonsterCardId":275}} 
 Player 2 02:26:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Blue Baby \n2:Player 2 is rolling against Widow<Monster>"} 
 Player 2 02:26:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Blue Baby \n2:Player 2 is rolling against Widow<Monster>"} 
 Player 2 02:26:14 $REPLACE_STACK:  

 {"currentStack":[{"entityId":5,"creatorCardId":279,"entityToDoDamageCardId":275,"entityToTakeDamageCardId":279,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":3,"creatorCardId":279,"numberRolled":2,"rollingPlayerCardId":279,"stackEffectType":2,"attackedMonsterCardId":275}]} 
 Player 2 02:26:14 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":3},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":279,"scopeIsPlayer":true,"index":1,"originStackId":3},"isAfterActivation":true,"index":1} 
 Player 2 02:26:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Blue Baby \n2:Player 2 is rolling against Widow<Monster>"} 
 Player 2 02:26:14 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":279,"numberRolled":2,"rollingPlayerCardId":279,"stackEffectType":2,"attackedMonsterCardId":275}} 
 Player 2 02:26:14 $ACTION_MASSAGE_REMOVE:  

 {"id":24} 
 Player 2 02:26:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Blue Baby"} 
 Player 2 02:26:14 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":279,"numberRolled":2,"rollingPlayerCardId":279,"stackEffectType":2,"attackedMonsterCardId":275}} 
 Player 2 02:26:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":36,"_text":"Remove After Resolve AttackRoll 3  "}} 
 Player 2 02:26:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Blue Baby"} 
 Player 2 02:26:14 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":279,"numberRolled":2,"rollingPlayerCardId":279,"stackEffectType":2,"attackedMonsterCardId":275}} 
 Player 2 02:26:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":37,"_text":"Response Remove After Resolve AttackRoll 3"},"childOfId":36} 
 Player 2 02:26:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":38,"_text":"Wait For Response From Player 2 "},"childOfId":36} 
 Player 2 02:26:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:26:14 $ACTION_MASSAGE_REMOVE:  

 {"id":38} 
 Player 2 02:26:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":39,"_text":"Wait For Response From Player 1 "},"childOfId":36} 
 Player 2 02:26:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:26:14 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:26:15 $ACTION_MASSAGE_REMOVE:  

 {"id":39} 
 Player 2 02:26:15 $ACTION_MASSAGE_REMOVE:  

 {"id":37} 
 Player 2 02:26:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":40,"_text":"Resolve CombatDamage 5 "}} 
 Player 2 02:26:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow 1 combat damage to Blue Baby"} 
 Player 2 02:26:15 $UPDATE_STACK_VIS:  

 {"stackId":5,"text":"Widow will deal 1 combat damage to Blue Baby"} 
 Player 2 02:26:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow 1 combat damage to Blue Baby"} 
 Player 2 02:26:15 $PLAYER_GET_HIT:  

 {"playerId":2,"damage":1,"damageDealerId":275} 
 Player 2 02:26:15 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":275}],"result":null,"preventMethod":false,"methodScopeId":279,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 
 Player 2 02:26:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow 1 combat damage to Blue Baby"} 
 Player 2 02:26:15 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":5,"creatorCardId":279,"entityToDoDamageCardId":275,"entityToTakeDamageCardId":279,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 02:26:15 $ACTION_MASSAGE_REMOVE:  

 {"id":40} 
 Player 2 02:26:15 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:26:15 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":5,"creatorCardId":279,"entityToDoDamageCardId":275,"entityToTakeDamageCardId":279,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 02:26:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":41,"_text":"Remove After Resolve CombatDamage 5  "}} 
 Player 2 02:26:15 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:26:15 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":5,"creatorCardId":279,"entityToDoDamageCardId":275,"entityToTakeDamageCardId":279,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 02:26:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":42,"_text":"Response Remove After Resolve CombatDamage 5"},"childOfId":41} 
 Player 2 02:26:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":43,"_text":"Wait For Response From Player 1 "},"childOfId":41} 
 Player 2 02:26:15 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:26:15 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:26:15 $ACTION_MASSAGE_REMOVE:  

 {"id":31} 
 Player 2 02:26:15 $ACTION_MASSAGE_REMOVE:  

 {"id":43} 
 Player 2 02:26:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":44,"_text":"Wait For Response From Player 2 "},"childOfId":41} 
 Player 2 02:26:15 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:26:15 $ACTION_MASSAGE_REMOVE:  

 {"id":44} 
 Player 2 02:26:16 $ACTION_MASSAGE_REMOVE:  

 {"id":42} 
 Player 2 02:26:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":45,"_text":"Stack Was Emptied "}} 
 Player 2 02:26:16 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:26:16 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 2 02:26:16 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 2 02:26:16 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 2 02:26:16 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 2 02:26:16 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 2 02:26:16 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 2 02:26:16 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 2 02:26:16 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 2 02:26:16 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 2 02:26:16 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 2 02:26:16 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 2 02:26:16 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 2 02:26:16 $ACTION_MASSAGE_REMOVE:  

 {"id":24} 
 Player 2 02:26:16 $ACTION_MASSAGE_REMOVE:  

 {"id":25} 
 Player 2 02:26:16 $ACTION_MASSAGE_REMOVE:  

 {"id":26} 
 Player 2 02:26:16 $ACTION_MASSAGE_REMOVE:  

 {"id":30} 
 Player 2 02:26:16 $ACTION_MASSAGE_REMOVE:  

 {"id":31} 
 Player 2 02:26:16 $ACTION_MASSAGE_REMOVE:  

 {"id":35} 
 Player 2 02:26:16 $ACTION_MASSAGE_REMOVE:  

 {"id":36} 
 Player 2 02:26:16 $ACTION_MASSAGE_REMOVE:  

 {"id":40} 
 Player 2 02:26:16 $ACTION_MASSAGE_REMOVE:  

 {"id":41} 
 Player 2 02:26:16 $ACTION_MASSAGE_REMOVE:  

 {"id":45} 
 Player 2 02:26:16 $ACTION_MASSAGE_REMOVE:  

 {"id":36} 
 Player 2 02:26:17 $ACTION_MASSAGE_REMOVE:  

 {"id":45} 
 Player 2 02:26:18 $ACTION_MASSAGE_REMOVE:  

 {"id":41} 
 Player 2 02:26:52 $MATCH: 