Start Log 

 Player 1 05:28:35 $MATCH:  

 Player 1 05:28:37 $START_GAME:  

 Player 1 05:28:37 $MOVE_TO_TABLE:  

 Player 2 05:28:37 $MOVE_TO_TABLE:  

 Player 2 05:28:44 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 1 05:28:45 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 05:28:45 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":272,"itemCardId":273} 

 Player 2 05:28:45 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":275}],"result":true,"preventMethod":false,"methodScopeId":274,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 05:28:45 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":274,"itemCardId":275} 

 Player 2 05:28:45 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[138,47,20,72,60,63,74,137,128,42,27,50,24,100,76,107,82,52,57,30,118,119,26,64,11,41,54,14,101,132,116,114,129,40,131,91,75,53,62,87,80,134,35,79,56,44,32,123,15,143,90,94,89,106,34,85,113,19,127,39,141,117,78,136,111,18,21,125,105,122,81,55,12,99,97,93,51,130,84,69,65,135,37,9,126,17,83,67,68,142,71,33,139,88,92,58,22,59,36,48,49,38,73,28,31,66,110,8,104,86,43,102,112,10,133,115,109,124,103,16,140,120,61,29,96,23,7,45,25,108,46,70,13,121,77,98,95]} 

 Player 2 05:28:45 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[238,241,212,232,240,255,236,227,242,215,214,252,247,245,216,228,233,206,208,258,251,217,250,219,231,249,209,211,235,237,253,226,259,224,222,243,230,210,207,225,257,246,221,223,218,239,229,213,254,248,234,256,244,220]} 

 Player 2 05:28:45 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[176,195,187,148,177,157,149,163,170,162,153,203,186,156,174,185,165,199,190,189,150,172,196,193,155,151,175,202,201,192,168,159,180,167,191,184,158,197,173,181,188,171,147,161,182,166,179,194,146,198,164,152,160,169,183,200,154,178]} 

 Player 2 05:28:45 $DRAW_CARD:  
{"deckType":5} 

 Player 2 05:28:45 $FLIP_CARD:  
{"cardId":178} 

 Player 2 05:28:45 $ADD_STORE_CARD:  
{"cardId":178} 

 Player 2 05:28:45 $DRAW_CARD:  
{"deckType":5} 

 Player 2 05:28:45 $FLIP_CARD:  
{"cardId":154} 

 Player 2 05:28:45 $ADD_STORE_CARD:  
{"cardId":154} 

 Player 2 05:28:45 $DRAW_CARD:  
{"deckType":2} 

 Player 2 05:28:45 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":220} 

 Player 2 05:28:45 $DRAW_CARD:  
{"deckType":2} 

 Player 2 05:28:45 $FLIP_CARD:  
{"cardId":244} 

 Player 2 05:28:45 $REGISTER_PASSIVE_ITEM:  
{"cardId":244} 

 Player 2 05:28:45 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":244} 

 Player 2 05:28:45 $NEW_MONSTER_ON_PLACE:  
{"cardId":244,"monsterPlaceId":1} 

 Player 2 05:28:45 $DRAW_CARD:  
{"deckType":2} 

 Player 2 05:28:45 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":256} 

 Player 2 05:28:45 $DRAW_CARD:  
{"deckType":2} 

 Player 2 05:28:45 $FLIP_CARD:  
{"cardId":234} 

 Player 2 05:28:45 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":234} 

 Player 2 05:28:45 $NEW_MONSTER_ON_PLACE:  
{"cardId":234,"monsterPlaceId":2} 

 Player 2 05:28:45 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 05:28:45 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":272,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 05:28:45 $DRAW_CARD:  
{"deckType":1} 

 Player 2 05:28:45 $MOVE_CARD:  
{"moveIndex":1,"cardId":95,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 05:28:45 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":273}],"result":true,"preventMethod":false,"methodScopeId":272,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 05:28:46 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":95,"flipIfFlipped":false,"playerId":2} 

 Player 2 05:28:46 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":95} 

 Player 2 05:28:46 $FLIP_CARD:  
{"cardId":95} 

 Player 2 05:28:46 $FLIP_CARD:  
{"cardId":95} 

 Player 2 05:28:46 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":95} 

 Player 2 05:28:46 $DRAW_CARD:  
{"deckType":1} 

 Player 2 05:28:46 $MOVE_CARD:  
{"moveIndex":2,"cardId":98,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 05:28:46 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":98,"flipIfFlipped":false,"playerId":2} 

 Player 2 05:28:46 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":98} 

 Player 2 05:28:46 $FLIP_CARD:  
{"cardId":98} 

 Player 2 05:28:46 $FLIP_CARD:  
{"cardId":98} 

 Player 2 05:28:46 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":98} 

 Player 2 05:28:46 $DRAW_CARD:  
{"deckType":1} 

 Player 2 05:28:46 $MOVE_CARD:  
{"moveIndex":3,"cardId":77,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 05:28:47 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":77,"flipIfFlipped":false,"playerId":2} 

 Player 2 05:28:47 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":77} 

 Player 2 05:28:47 $FLIP_CARD:  
{"cardId":77} 

 Player 2 05:28:47 $FLIP_CARD:  
{"cardId":77} 

 Player 2 05:28:47 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":77} 

 Player 2 05:28:47 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 05:28:47 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":274,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 05:28:47 $DRAW_CARD:  
{"deckType":1} 

 Player 2 05:28:47 $MOVE_CARD:  
{"moveIndex":4,"cardId":121,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 05:28:47 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":121,"flipIfFlipped":false,"playerId":2} 

 Player 2 05:28:47 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":121} 

 Player 2 05:28:47 $FLIP_CARD:  
{"cardId":121} 

 Player 2 05:28:47 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":121} 

 Player 2 05:28:47 $DRAW_CARD:  
{"deckType":1} 

 Player 2 05:28:47 $MOVE_CARD:  
{"moveIndex":5,"cardId":13,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 05:28:48 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":13,"flipIfFlipped":false,"playerId":2} 

 Player 2 05:28:48 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":13} 

 Player 2 05:28:48 $FLIP_CARD:  
{"cardId":13} 

 Player 2 05:28:48 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":13} 

 Player 2 05:28:48 $DRAW_CARD:  
{"deckType":1} 

 Player 2 05:28:48 $MOVE_CARD:  
{"moveIndex":6,"cardId":70,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 05:28:48 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":70,"flipIfFlipped":false,"playerId":2} 

 Player 2 05:28:48 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":70} 

 Player 2 05:28:48 $FLIP_CARD:  
{"cardId":70} 

 Player 2 05:28:48 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":70} 

 Player 2 05:28:48 $GAME_HAS_STARTED:  

 Player 2 05:28:48 $SET_TURN:  
{"playerId":2} 

 Player 2 05:28:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 05:28:49 $NEXT_STACK_ID:  

 Player 2 05:28:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 05:28:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 05:28:49 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":274,"turnPlayerCardId":274,"stackEffectType":13}} 

 Player 2 05:28:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 2 05:28:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 05:28:49 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 05:28:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 05:28:49 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":274,"turnPlayerCardId":274,"stackEffectType":13}} 

 Player 2 05:28:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 2 05:28:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 2 05:28:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 05:28:49 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 05:28:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 2 05:28:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 05:28:49 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 05:28:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 05:28:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 05:28:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 05:28:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 05:28:49 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 05:28:49 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 05:28:49 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 05:28:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 2 05:28:49 $DRAW_CARD:  
{"deckType":1} 

 Player 2 05:28:49 $MOVE_CARD:  
{"moveIndex":7,"cardId":46,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 05:28:49 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":46,"flipIfFlipped":false,"playerId":2} 

 Player 2 05:28:50 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":46} 

 Player 2 05:28:50 $FLIP_CARD:  
{"cardId":46} 

 Player 2 05:28:50 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":46} 

 Player 2 05:28:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 05:28:50 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":274,"turnPlayerCardId":274,"stackEffectType":13}} 

 Player 2 05:28:50 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 05:28:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 2 05:28:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 05:28:50 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":274,"turnPlayerCardId":274,"stackEffectType":13}} 

 Player 2 05:28:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 2 05:28:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 2 05:28:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 05:28:50 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 05:28:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 05:28:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 05:28:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 05:28:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 05:28:50 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 05:28:50 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 2 05:28:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 2 05:28:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 05:28:50 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 2 05:28:50 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 2 05:28:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 2 05:28:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 05:28:50 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 05:28:50 $UPDATE_ACTIONS:  

 Player 2 05:28:51 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 05:28:53 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 05:32:06 $MOVE_CARD:  
{"moveIndex":8,"cardId":115,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 

 Player 1 05:32:06 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":115,"flipIfFlipped":true,"playerId":2} 

 Player 2 05:32:06 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":115} 

 Player 2 05:32:10 $NEXT_STACK_ID:  

 Player 2 05:32:10 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 05:32:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Pill Black "} 

 Player 2 05:32:10 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":274,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"lootToPlayCardId":115,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 05:32:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add PlayLootCardStackEffect 2 "}} 

 Player 2 05:32:10 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":115} 

 Player 2 05:32:10 $MOVE_CARD:  
{"moveIndex":9,"cardId":115,"placeID":278,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 05:32:10 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 05:32:10 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 05:32:10 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":115,"flipIfFlipped":true,"playerId":2} 

 Player 2 05:32:10 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":115} 

 Player 2 05:32:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 05:32:10 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 05:32:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Pill Black "} 

 Player 2 05:32:10 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":274,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"lootToPlayCardId":115,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 05:32:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding PlayLootCardStackEffect 2"},"childOfId":10} 

 Player 2 05:32:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 2 05:32:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 05:32:10 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 2 05:32:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 2 05:32:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 05:32:10 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 05:32:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Pill Black "} 

 Player 1 05:32:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Pill Black "} 

 Player 1 05:32:11 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 05:32:11 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 2 05:32:11 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 2 05:32:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve PlayLootCardStackEffect 2 "}} 

 Player 2 05:32:11 $NEXT_STACK_ID:  

 Player 2 05:32:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Pill Black "} 

 Player 2 05:32:11 $NEXT_STACK_ID:  

 Player 2 05:32:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Pill Black "} 

 Player 2 05:32:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Pill Black  \n2:Player 2 roll a dice"} 

 Player 2 05:32:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Pill Black  \n2:Player 2 roll a dice"} 

 Player 2 05:32:11 $ADD_TO_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":274,"stackEffectToLock":{"entityId":2,"creatorCardId":274,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"lootToPlayCardId":115,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8},"hasLockingStackEffect":false,"stackEffectType":11}} 

 Player 2 05:32:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Add RollDiceStackEffect 4 "}} 

 Player 2 05:32:11 $ROLL_DICE:  
{"playerId":2} 

 Player 1 05:32:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Pill Black "} 

 Player 1 05:32:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Pill Black "} 

 Player 1 05:32:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Pill Black "} 

 Player 1 05:32:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Pill Black "} 

 Player 2 05:32:12 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":3} 

 Player 2 05:32:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Pill Black  \n2:Player 2 rolled 3"} 

 Player 2 05:32:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 05:32:12 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 05:32:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Pill Black  \n2:Player 2 rolled 3"} 

 Player 2 05:32:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Pill Black  \n2:Player 2 rolled 3"} 

 Player 2 05:32:12 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":274,"stackEffectToLock":{"entityId":2,"creatorCardId":274,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"lootToPlayCardId":115,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8},"hasLockingStackEffect":false,"numberRolled":3,"stackEffectType":11}} 

 Player 2 05:32:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Adding RollDiceStackEffect 4"},"childOfId":15} 

 Player 2 05:32:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 2 05:32:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 05:32:12 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 05:32:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 2 05:32:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 05:32:12 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 05:32:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Pill Black  \n2:Player 2 roll a dice"} 

 Player 1 05:32:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Pill Black  \n2:Player 2 roll a dice"} 

 Player 1 05:32:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Pill Black  \n2:Player 2 roll a dice"} 

 Player 1 05:32:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Pill Black  \n2:Player 2 roll a dice"} 

 Player 1 05:32:12 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 05:32:12 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 2 05:32:12 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 2 05:32:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Resolve RollDiceStackEffect 4 "}} 

 Player 2 05:32:12 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":3},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":274,"scopeIsPlayer":true,"index":4,"originStackId":4},"isAfterActivation":true,"index":4} 

 Player 2 05:32:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Pill Black  \n2:Player 2 rolled 3"} 

 Player 2 05:32:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Pill Black  \n2:Player 2 rolled 3"} 

 Player 2 05:32:12 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":274,"stackEffectToLock":{"entityId":2,"creatorCardId":274,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"lootToPlayCardId":115,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8},"hasLockingStackEffect":false,"numberRolled":3,"stackEffectType":11}} 

 Player 2 05:32:12 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 05:32:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Remove After Resolve RollDiceStackEffect 4  "}} 

 Player 2 05:32:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Pill Black "} 

 Player 2 05:32:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Pill Black "} 

 Player 2 05:32:13 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":274,"stackEffectToLock":{"entityId":2,"creatorCardId":274,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"lootToPlayCardId":115,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8},"hasLockingStackEffect":false,"numberRolled":3,"stackEffectType":11}} 

 Player 2 05:32:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Remove After Resolve RollDiceStackEffect 4"},"childOfId":20} 

 Player 2 05:32:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 2 05:32:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 05:32:13 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 05:32:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Pill Black  \n2:Player 2 roll a dice"} 

 Player 1 05:32:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Pill Black  \n2:Player 2 roll a dice"} 

 Player 1 05:32:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Pill Black  \n2:Player 2 roll a dice"} 

 Player 1 05:32:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Pill Black  \n2:Player 2 roll a dice"} 

 Player 1 05:32:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Pill Black  \n2:Player 2 roll a dice"} 

 Player 1 05:32:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Pill Black  \n2:Player 2 roll a dice"} 

 Player 1 05:32:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Pill Black  \n2:Player 2 roll a dice"} 

 Player 1 05:32:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Pill Black  \n2:Player 2 roll a dice"} 

 Player 1 05:32:13 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 05:32:13 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 2 05:32:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 2 05:32:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 05:32:13 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 2 05:32:13 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 2 05:32:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve PlayLootCardStackEffect 2 "}} 

 Player 2 05:32:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Pill Black: DealDamage"} 

 Player 2 05:32:15 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 05:32:20 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":115,"particleType":6} 

 Player 2 05:32:22 $DISABLE_PARTICLE_EFFECT:  
{"cardId":115,"particleType":6} 

 Player 2 05:32:22 $MONSTER_GET_DAMAGED:  
{"cardId":234,"hpLeft":0,"damageDealerId":274} 

 Player 2 05:32:22 $NEXT_STACK_ID:  

 Player 2 05:32:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Pill Black: DealDamage"} 

 Player 2 05:32:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 05:32:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Pill Black: DealDamage \n2:[object Object] killed by Samson"} 

 Player 2 05:32:22 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":274,"monsterToDieCardId":234,"stackEffectType":5,"killerId":274}} 

 Player 2 05:32:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Pill Black: DealDamage \n2:[object Object] killed by Samson"} 

 Player 2 05:32:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Pill Black: DealDamage \n2:[object Object] killed by Samson"} 

 Player 2 05:32:22 $REPLACE_STACK:  
{"currentStack":[{"entityId":2,"creatorCardId":274,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"lootToPlayCardId":115,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8},{"entityId":5,"creatorCardId":274,"monsterToDieCardId":234,"stackEffectType":5,"killerId":274}]} 

 Player 2 05:32:22 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":274}],"result":null,"preventMethod":false,"methodScopeId":234,"scopeIsPlayer":false,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 2 05:32:22 $REMOVE_FROM_PILE:  
{"cardId":115} 

 Player 2 05:32:22 $MOVE_CARD:  
{"moveIndex":10,"cardId":115,"placeID":279,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 05:32:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Pill Black "} 

 Player 1 05:32:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Pill Black "} 

 Player 1 05:32:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by undefined"} 

 Player 1 05:32:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by undefined"} 

 Player 1 05:32:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by undefined"} 

 Player 1 05:32:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by undefined"} 

 Player 1 05:32:22 $MOVE_CARD_END:  
{"moveIndex":10,"cardId":115,"flipIfFlipped":true,"playerId":2} 

 Player 2 05:32:22 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":115} 

 Player 2 05:32:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Pill Black: DealDamage \n2:[object Object] killed by Samson"} 

 Player 2 05:32:22 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":274,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"lootToPlayCardId":115,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 05:32:22 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 05:32:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Remove After Resolve PlayLootCardStackEffect 2  "}} 

 Player 2 05:32:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 05:32:22 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":274,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"lootToPlayCardId":115,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 05:32:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Response Remove After Resolve PlayLootCardStackEffect 2"},"childOfId":25} 

 Player 2 05:32:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Wait For Response From Player 2 "},"childOfId":25} 

 Player 2 05:32:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 05:32:23 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 2 05:32:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 1 "},"childOfId":25} 

 Player 2 05:32:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 05:32:23 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 05:32:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Pill Black  \n2:[object Object] killed by undefined"} 

 Player 1 05:32:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Pill Black  \n2:[object Object] killed by undefined"} 

 Player 1 05:32:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Pill Black  \n2:[object Object] killed by undefined"} 

 Player 1 05:32:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Pill Black  \n2:[object Object] killed by undefined"} 

 Player 1 05:32:23 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 05:32:23 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 2 05:32:23 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 2 05:32:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Resolve MonsterDeath 5 "}} 

 Player 2 05:32:23 $NEXT_STACK_ID:  

 Player 2 05:32:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 05:32:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 05:32:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Leech<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 2 05:32:23 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":274,"monsterCardWithRewardId":234,"playerCardIdToReward":274,"stackEffectType":7}} 

 Player 2 05:32:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Leech<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 2 05:32:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Leech<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 2 05:32:23 $REPLACE_STACK:  
{"currentStack":[{"entityId":6,"creatorCardId":274,"monsterCardWithRewardId":234,"playerCardIdToReward":274,"stackEffectType":7},{"entityId":5,"creatorCardId":274,"monsterToDieCardId":234,"stackEffectType":5,"killerId":274}]} 

 Player 2 05:32:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Leech<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 2 05:32:23 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":274,"monsterToDieCardId":234,"stackEffectType":5,"killerId":274}} 

 Player 2 05:32:23 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 05:32:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Remove After Resolve MonsterDeath 5  "}} 

 Player 2 05:32:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Leech<Monster> reward"} 

 Player 2 05:32:23 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":274,"monsterToDieCardId":234,"stackEffectType":5,"killerId":274}} 

 Player 2 05:32:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Response Remove After Resolve MonsterDeath 5"},"childOfId":30} 

 Player 2 05:32:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Wait For Response From Player 2 "},"childOfId":30} 

 Player 2 05:32:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 05:32:23 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 2 05:32:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":30} 

 Player 2 05:32:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 05:32:24 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 05:32:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by undefined"} 

 Player 1 05:32:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by undefined"} 

 Player 1 05:32:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Leech<Monster> reward"} 

 Player 1 05:32:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Leech<Monster> reward"} 

 Player 1 05:32:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Leech<Monster> reward"} 

 Player 1 05:32:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Leech<Monster> reward"} 

 Player 1 05:32:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Leech<Monster> reward \n2:[object Object] killed by undefined"} 

 Player 1 05:32:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Leech<Monster> reward \n2:[object Object] killed by undefined"} 

 Player 1 05:32:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Leech<Monster> reward \n2:[object Object] killed by undefined"} 

 Player 1 05:32:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Leech<Monster> reward \n2:[object Object] killed by undefined"} 

 Player 1 05:32:24 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 05:32:24 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 2 05:32:24 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 2 05:32:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Resolve MonsterRewardStackEffect 6 "}} 

 Player 2 05:32:24 $DRAW_CARD:  
{"deckType":1} 

 Player 2 05:32:24 $MOVE_CARD:  
{"moveIndex":11,"cardId":108,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 05:32:24 $MOVE_CARD_END:  
{"moveIndex":11,"cardId":108,"flipIfFlipped":false,"playerId":2} 

 Player 2 05:32:24 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":108} 

 Player 2 05:32:24 $FLIP_CARD:  
{"cardId":108} 

 Player 2 05:32:24 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":108} 

 Player 2 05:32:24 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":234,"scopeIsPlayer":false,"index":6,"originStackId":6},"isAfterActivation":true,"index":6} 

 Player 2 05:32:24 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 05:32:24 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 05:32:25 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 05:32:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Fizzle MonsterRewardStackEffect 6"}} 

 Player 2 05:32:25 $MOVE_CARD:  
{"moveIndex":12,"cardId":234,"placeID":281,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 05:32:25 $MOVE_CARD_END:  
{"moveIndex":12,"cardId":234,"flipIfFlipped":true,"playerId":2} 

 Player 2 05:32:25 $MOVE_CARD_TO_PILE:  
{"type":2,"cardId":234} 

 Player 2 05:32:25 $REMOVE_MONSTER:  
{"holderId":2,"monsterId":234} 

 Player 2 05:32:25 $NEXT_STACK_ID:  

 Player 2 05:32:25 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 05:32:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder2 slot"} 

 Player 2 05:32:25 $ADD_TO_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":274,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 

 Player 2 05:32:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Add RefillEmptySlot 7 "}} 

 Player 2 05:32:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 05:32:25 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 2 05:32:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder2 slot"} 

 Player 2 05:32:25 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":274,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 

 Player 2 05:32:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Response Adding RefillEmptySlot 7"},"childOfId":36} 

 Player 2 05:32:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 2 "},"childOfId":36} 

 Player 2 05:32:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 05:32:25 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 2 05:32:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Wait For Response From Player 1 "},"childOfId":36} 

 Player 2 05:32:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 05:32:25 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 2 05:32:25 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 05:32:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Leech<Monster> reward"} 

 Player 1 05:32:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Leech<Monster> reward"} 

 Player 1 05:32:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Leech<Monster> reward \n2:Refill holder2 slot"} 

 Player 1 05:32:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Leech<Monster> reward \n2:Refill holder2 slot"} 

 Player 1 05:32:26 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 05:32:26 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 05:32:26 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 2 05:32:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Resolve RefillEmptySlot 7 "}} 

 Player 2 05:32:26 $DRAW_CARD:  
{"deckType":2} 

 Player 2 05:32:26 $FLIP_CARD:  
{"cardId":248} 

 Player 2 05:32:26 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":248} 

 Player 2 05:32:26 $NEW_MONSTER_ON_PLACE:  
{"cardId":248,"monsterPlaceId":2} 

 Player 2 05:32:26 $NEXT_STACK_ID:  

 Player 2 05:32:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder2 slot"} 

 Player 2 05:32:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Spiked Chest"} 

 Player 2 05:32:26 $ADD_TO_STACK:  
{"stackEffect":{"entityId":8,"creatorCardId":274,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":248,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 05:32:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Add ActivateItem 8 "}} 

 Player 2 05:32:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 05:32:26 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 2 05:32:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Spiked Chest"} 

 Player 2 05:32:26 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":274,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":248,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 05:32:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Response Adding ActivateItem 8"},"childOfId":41} 

 Player 2 05:32:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 2 "},"childOfId":41} 

 Player 2 05:32:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 05:32:26 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 2 05:32:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Wait For Response From Player 1 "},"childOfId":41} 

 Player 2 05:32:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 05:32:26 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 2 05:32:26 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 05:32:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Leech<Monster> reward \n2:Refill holder2 slot"} 

 Player 1 05:32:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Leech<Monster> reward \n2:Refill holder2 slot"} 

 Player 1 05:32:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Leech<Monster> reward \n2:Refill holder2 slot \n3:Player 2 activated Spiked Chest"} 

 Player 1 05:32:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Leech<Monster> reward \n2:Refill holder2 slot \n3:Player 2 activated Spiked Chest"} 

 Player 1 05:32:26 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 05:32:26 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 05:32:26 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 2 05:32:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Resolve ActivateItem 8 "}} 

 Player 2 05:32:26 $NEXT_STACK_ID:  

 Player 2 05:32:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Spiked Chest"} 

 Player 2 05:32:27 $NEXT_STACK_ID:  

 Player 2 05:32:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Spiked Chest"} 

 Player 2 05:32:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 roll a dice"} 

 Player 2 05:32:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 roll a dice"} 

 Player 2 05:32:27 $ADD_TO_STACK:  
{"stackEffect":{"entityId":10,"creatorCardId":274,"stackEffectToLock":{"entityId":8,"creatorCardId":274,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":248,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"stackEffectType":11}} 

 Player 2 05:32:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Add RollDiceStackEffect 10 "}} 

 Player 2 05:32:27 $ROLL_DICE:  
{"playerId":2} 

 Player 1 05:32:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Leech<Monster> reward \n2:Refill holder2 slot \n3:Player 2 activated Spiked Chest"} 

 Player 1 05:32:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Leech<Monster> reward \n2:Refill holder2 slot \n3:Player 2 activated Spiked Chest"} 

 Player 1 05:32:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Leech<Monster> reward \n2:Refill holder2 slot \n3:Player 2 activated Spiked Chest"} 

 Player 1 05:32:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Leech<Monster> reward \n2:Refill holder2 slot \n3:Player 2 activated Spiked Chest"} 

 Player 2 05:32:27 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 05:32:29 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":2} 

 Player 2 05:32:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 rolled 2"} 

 Player 2 05:32:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 05:32:29 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 2 05:32:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 rolled 2"} 

 Player 2 05:32:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 rolled 2"} 

 Player 2 05:32:29 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":274,"stackEffectToLock":{"entityId":8,"creatorCardId":274,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":248,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"numberRolled":2,"stackEffectType":11}} 

 Player 2 05:32:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Response Adding RollDiceStackEffect 10"},"childOfId":46} 

 Player 2 05:32:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Wait For Response From Player 2 "},"childOfId":46} 

 Player 2 05:32:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 05:32:29 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 2 05:32:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Wait For Response From Player 1 "},"childOfId":46} 

 Player 2 05:32:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 05:32:29 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 05:32:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Leech<Monster> reward \n2:Refill holder2 slot \n3:Player 2 activated Spiked Chest \n4:Player 2 roll a dice"} 

 Player 1 05:32:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Leech<Monster> reward \n2:Refill holder2 slot \n3:Player 2 activated Spiked Chest \n4:Player 2 roll a dice"} 

 Player 1 05:32:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Leech<Monster> reward \n2:Refill holder2 slot \n3:Player 2 activated Spiked Chest \n4:Player 2 roll a dice"} 

 Player 1 05:32:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Leech<Monster> reward \n2:Refill holder2 slot \n3:Player 2 activated Spiked Chest \n4:Player 2 roll a dice"} 

 Player 1 05:32:29 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 05:32:29 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 2 05:32:29 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 2 05:32:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Resolve RollDiceStackEffect 10 "}} 

 Player 2 05:32:29 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":274,"scopeIsPlayer":true,"index":7,"originStackId":10},"isAfterActivation":true,"index":7} 

 Player 2 05:32:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 rolled 2"} 

 Player 2 05:32:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Spiked Chest \n3:Player 2 rolled 2"} 

 Player 2 05:32:30 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":274,"stackEffectToLock":{"entityId":8,"creatorCardId":274,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":248,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"numberRolled":2,"stackEffectType":11}} 

 Player 2 05:32:30 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 2 05:32:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Remove After Resolve RollDiceStackEffect 10  "}} 

 Player 2 05:32:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Spiked Chest"} 

 Player 2 05:32:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Spiked Chest"} 

 Player 2 05:32:30 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":10,"creatorCardId":274,"stackEffectToLock":{"entityId":8,"creatorCardId":274,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":248,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"numberRolled":2,"stackEffectType":11}} 

 Player 2 05:32:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Response Remove After Resolve RollDiceStackEffect 10"},"childOfId":51} 

 Player 2 05:32:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Wait For Response From Player 1 "},"childOfId":51} 

 Player 2 05:32:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 05:32:30 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 05:32:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Leech<Monster> reward \n2:Refill holder2 slot \n3:Player 2 activated Spiked Chest \n4:Player 2 roll a dice"} 

 Player 1 05:32:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Leech<Monster> reward \n2:Refill holder2 slot \n3:Player 2 activated Spiked Chest \n4:Player 2 roll a dice"} 

 Player 1 05:32:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Leech<Monster> reward \n2:Refill holder2 slot \n3:Player 2 activated Spiked Chest \n4:Player 2 roll a dice"} 

 Player 1 05:32:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Leech<Monster> reward \n2:Refill holder2 slot \n3:Player 2 activated Spiked Chest \n4:Player 2 roll a dice"} 

 Player 1 05:32:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Leech<Monster> reward \n2:Refill holder2 slot \n3:Player 2 activated Spiked Chest \n4:Player 2 roll a dice"} 

 Player 1 05:32:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Leech<Monster> reward \n2:Refill holder2 slot \n3:Player 2 activated Spiked Chest \n4:Player 2 roll a dice"} 

 Player 1 05:32:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Leech<Monster> reward \n2:Refill holder2 slot \n3:Player 2 activated Spiked Chest \n4:Player 2 roll a dice"} 

 Player 1 05:32:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Leech<Monster> reward \n2:Refill holder2 slot \n3:Player 2 activated Spiked Chest \n4:Player 2 roll a dice"} 

 Player 1 05:32:30 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 05:32:30 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 2 05:32:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Wait For Response From Player 2 "},"childOfId":51} 

 Player 2 05:32:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 05:32:30 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 2 05:32:30 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 2 05:32:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Resolve ActivateItem 8 "}} 

 Player 2 05:32:30 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":248,"particleType":6} 

 Player 2 05:32:32 $DISABLE_PARTICLE_EFFECT:  
{"cardId":248,"particleType":6} 

 Player 2 05:32:32 $PLAYER_GET_HIT:  
{"playerId":2,"damage":1,"damageDealerId":248} 

 Player 2 05:32:32 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":248}],"result":null,"preventMethod":false,"methodScopeId":274,"scopeIsPlayer":true,"index":8,"originStackId":-1},"isAfterActivation":true,"index":8} 

 Player 2 05:32:32 $MOVE_CARD:  
{"moveIndex":13,"cardId":248,"placeID":281,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 2 05:32:32 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 1 05:32:32 $MOVE_CARD_END:  
{"moveIndex":13,"cardId":248,"flipIfFlipped":true,"playerId":2} 

 Player 2 05:32:32 $MOVE_CARD_TO_PILE:  
{"type":2,"cardId":248} 

 Player 2 05:32:33 $REMOVE_MONSTER:  
{"holderId":2,"monsterId":248} 

 Player 2 05:32:33 $NEXT_STACK_ID:  

 Player 2 05:32:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Spiked Chest"} 

 Player 2 05:32:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Spiked Chest \n3:Refill holder2 slot"} 

 Player 2 05:32:33 $ADD_TO_STACK:  
{"stackEffect":{"entityId":11,"creatorCardId":274,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 

 Player 2 05:32:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":56,"_text":"Add RefillEmptySlot 11 "}} 

 Player 2 05:32:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 05:32:33 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 2 05:32:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Spiked Chest \n3:Refill holder2 slot"} 

 Player 2 05:32:33 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":11,"creatorCardId":274,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 

 Player 2 05:32:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":57,"_text":"Response Adding RefillEmptySlot 11"},"childOfId":56} 

 Player 2 05:32:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":58,"_text":"Wait For Response From Player 2 "},"childOfId":56} 

 Player 2 05:32:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 05:32:33 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 2 05:32:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":59,"_text":"Wait For Response From Player 1 "},"childOfId":56} 

 Player 2 05:32:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 05:32:33 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 05:32:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Leech<Monster> reward \n2:Refill holder2 slot \n3:Player 2 activated Spiked Chest"} 

 Player 1 05:32:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Leech<Monster> reward \n2:Refill holder2 slot \n3:Player 2 activated Spiked Chest"} 

 Player 1 05:32:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Leech<Monster> reward \n2:Refill holder2 slot \n3:Player 2 activated Spiked Chest \n4:Refill holder2 slot"} 

 Player 1 05:32:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Leech<Monster> reward \n2:Refill holder2 slot \n3:Player 2 activated Spiked Chest \n4:Refill holder2 slot"} 

 Player 1 05:32:33 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 05:32:33 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 2 05:32:33 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 2 05:32:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":60,"_text":"Resolve RefillEmptySlot 11 "}} 

 Player 2 05:32:33 $DRAW_CARD:  
{"deckType":2} 

 Player 2 05:32:33 $FLIP_CARD:  
{"cardId":254} 

 Player 2 05:32:33 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":254} 

 Player 2 05:32:33 $NEW_MONSTER_ON_PLACE:  
{"cardId":254,"monsterPlaceId":2} 

 Player 2 05:32:33 $ACTION_MASSAGE_REMOVE:  
{"id":60} 

 Player 2 05:32:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":61,"_text":"Remove After Resolve RefillEmptySlot 11  "}} 

 Player 2 05:32:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Spiked Chest"} 

 Player 2 05:32:33 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":11,"creatorCardId":274,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 

 Player 2 05:32:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":62,"_text":"Response Remove After Resolve RefillEmptySlot 11"},"childOfId":61} 

 Player 2 05:32:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":63,"_text":"Wait For Response From Player 1 "},"childOfId":61} 

 Player 2 05:32:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 05:32:34 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 05:32:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Leech<Monster> reward \n2:Refill holder2 slot \n3:Player 2 activated Spiked Chest \n4:Refill holder2 slot"} 

 Player 1 05:32:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Leech<Monster> reward \n2:Refill holder2 slot \n3:Player 2 activated Spiked Chest \n4:Refill holder2 slot"} 

 Player 1 05:32:34 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 05:32:34 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 2 05:32:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":64,"_text":"Wait For Response From Player 2 "},"childOfId":61} 

 Player 2 05:32:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 05:32:34 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 2 05:32:34 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 2 05:32:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":65,"_text":"Resolve ActivateItem 8 "}} 

 Player 2 05:32:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder2 slot \n2:Player 2 activated Spiked Chest"} 

 Player 2 05:32:34 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":274,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":248,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 05:32:34 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 2 05:32:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":66,"_text":"Remove After Resolve ActivateItem 8  "}} 

 Player 2 05:32:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder2 slot"} 

 Player 2 05:32:34 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":8,"creatorCardId":274,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":248,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 05:32:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":67,"_text":"Response Remove After Resolve ActivateItem 8"},"childOfId":66} 

 Player 2 05:32:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":68,"_text":"Wait For Response From Player 2 "},"childOfId":66} 

 Player 2 05:32:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 05:32:34 $ACTION_MASSAGE_REMOVE:  
{"id":68} 

 Player 2 05:32:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":69,"_text":"Wait For Response From Player 1 "},"childOfId":66} 

 Player 2 05:32:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 05:32:34 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 05:32:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Leech<Monster> reward \n2:Refill holder2 slot \n3:Player 2 activated Spiked Chest"} 

 Player 1 05:32:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Leech<Monster> reward \n2:Refill holder2 slot \n3:Player 2 activated Spiked Chest"} 

 Player 1 05:32:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Leech<Monster> reward \n2:Refill holder2 slot \n3:Player 2 activated Spiked Chest"} 

 Player 1 05:32:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Leech<Monster> reward \n2:Refill holder2 slot \n3:Player 2 activated Spiked Chest"} 

 Player 1 05:32:34 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 05:32:34 $ACTION_MASSAGE_REMOVE:  
{"id":69} 

 Player 2 05:32:34 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 2 05:32:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":70,"_text":"Resolve RefillEmptySlot 7 "}} 

 Player 2 05:32:34 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 05:32:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":71,"_text":"Remove After Resolve RefillEmptySlot 7  "}} 

 Player 2 05:32:34 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 05:32:35 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":274,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 

 Player 2 05:32:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":72,"_text":"Response Remove After Resolve RefillEmptySlot 7"},"childOfId":71} 

 Player 2 05:32:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":73,"_text":"Wait For Response From Player 1 "},"childOfId":71} 

 Player 2 05:32:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 05:32:35 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 05:32:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Leech<Monster> reward \n2:Refill holder2 slot"} 

 Player 1 05:32:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Leech<Monster> reward \n2:Refill holder2 slot"} 

 Player 1 05:32:35 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 05:32:35 $ACTION_MASSAGE_REMOVE:  
{"id":73} 

 Player 2 05:32:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":74,"_text":"Wait For Response From Player 2 "},"childOfId":71} 

 Player 2 05:32:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 05:32:35 $ACTION_MASSAGE_REMOVE:  
{"id":74} 

 Player 2 05:32:35 $ACTION_MASSAGE_REMOVE:  
{"id":72} 

 Player 2 05:32:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":75,"_text":"Stack Was Emptied "}} 

 Player 2 05:32:35 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 05:32:35 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 05:32:35 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 05:32:35 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 2 05:32:35 $ACTION_MASSAGE_REMOVE:  
{"id":61} 

 Player 2 05:32:35 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 05:32:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":76,"_text":"Stack Was Emptied "}} 

 Player 2 05:32:35 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 05:32:35 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 05:32:35 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 05:32:36 $ACTION_MASSAGE_REMOVE:  
{"id":61} 

 Player 2 05:32:36 $ACTION_MASSAGE_REMOVE:  
{"id":75} 

 Player 2 05:32:36 $ACTION_MASSAGE_REMOVE:  
{"id":76} 

 Player 2 05:32:37 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 2 05:32:37 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 2 21:05:10 $MATCH: 