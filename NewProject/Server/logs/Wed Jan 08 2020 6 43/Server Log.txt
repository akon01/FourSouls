Start Log 

 Player 1 06:43:01 $MATCH:  

 Player 1 06:43:04 $START_GAME:  

 Player 1 06:43:04 $MOVE_TO_TABLE:  

 Player 2 06:43:04 $MOVE_TO_TABLE:  

 Player 2 06:43:13 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 1 06:43:13 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 06:43:14 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":268,"itemCardId":269} 

 Player 2 06:43:14 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":261}],"result":true,"preventMethod":false,"methodScopeId":260,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 06:43:14 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":260,"itemCardId":261} 

 Player 2 06:43:14 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[12,58,140,62,11,13,22,41,70,75,112,79,123,19,15,83,81,21,23,143,60,16,35,89,108,91,63,31,96,95,40,32,97,76,105,136,109,85,38,128,130,132,138,125,44,73,129,47,111,139,87,8,30,103,25,64,24,106,100,104,52,88,48,102,29,28,49,59,14,72,101,69,119,50,26,84,80,66,10,86,78,121,9,107,120,71,114,142,42,7,124,110,55,37,51,122,36,45,53,90,33,54,134,77,118,141,93,126,133,127,137,18,39,46,115,43,113,135,68,117,34,82,65,56,74,57,116,27,17,98,94,61,20,67,92,131,99]} 

 Player 2 06:43:14 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[258,236,212,255,210,246,239,250,206,248,233,221,218,259,220,232,243,242,256,209,252,226,213,228,235,245,249,219,237,227,230,225,222,241,217,229,234,238,257,251,224,223,231,208,211,254,244,253,207,240,215,247,214,216]} 

 Player 2 06:43:14 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[188,174,178,180,158,147,170,149,173,179,182,184,201,167,183,197,162,200,161,199,191,185,198,172,177,157,175,148,165,194,192,150,154,171,153,166,203,152,169,190,151,176,187,193,160,156,196,159,181,189,163,186,155,164,146,168,202,195]} 

 Player 2 06:43:14 $DRAW_CARD:  
{"deckType":5} 

 Player 2 06:43:14 $FLIP_CARD:  
{"cardId":195} 

 Player 2 06:43:14 $ADD_STORE_CARD:  
{"cardId":195} 

 Player 2 06:43:14 $DRAW_CARD:  
{"deckType":5} 

 Player 2 06:43:14 $FLIP_CARD:  
{"cardId":202} 

 Player 2 06:43:14 $ADD_STORE_CARD:  
{"cardId":202} 

 Player 2 06:43:14 $DRAW_CARD:  
{"deckType":2} 

 Player 2 06:43:14 $FLIP_CARD:  
{"cardId":216} 

 Player 2 06:43:14 $REGISTER_PASSIVE_ITEM:  
{"cardId":216} 

 Player 2 06:43:14 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":216} 

 Player 2 06:43:14 $NEW_MONSTER_ON_PLACE:  
{"cardId":216,"monsterPlaceId":1} 

 Player 2 06:43:14 $DRAW_CARD:  
{"deckType":2} 

 Player 2 06:43:14 $FLIP_CARD:  
{"cardId":214} 

 Player 2 06:43:14 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":214} 

 Player 2 06:43:14 $NEW_MONSTER_ON_PLACE:  
{"cardId":214,"monsterPlaceId":2} 

 Player 2 06:43:14 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 06:43:14 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":268,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 06:43:14 $DRAW_CARD:  
{"deckType":1} 

 Player 2 06:43:14 $MOVE_CARD:  
{"moveIndex":1,"cardId":99,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 06:43:14 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":269}],"result":true,"preventMethod":false,"methodScopeId":268,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 06:43:15 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":99,"flipIfFlipped":false,"playerId":2} 

 Player 2 06:43:15 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":99} 

 Player 2 06:43:15 $FLIP_CARD:  
{"cardId":99} 

 Player 2 06:43:15 $FLIP_CARD:  
{"cardId":99} 

 Player 2 06:43:15 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":99} 

 Player 2 06:43:15 $DRAW_CARD:  
{"deckType":1} 

 Player 2 06:43:15 $MOVE_CARD:  
{"moveIndex":2,"cardId":131,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 06:43:15 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":131,"flipIfFlipped":false,"playerId":2} 

 Player 2 06:43:15 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":131} 

 Player 2 06:43:15 $FLIP_CARD:  
{"cardId":131} 

 Player 2 06:43:15 $FLIP_CARD:  
{"cardId":131} 

 Player 2 06:43:15 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":131} 

 Player 2 06:43:15 $DRAW_CARD:  
{"deckType":1} 

 Player 2 06:43:15 $MOVE_CARD:  
{"moveIndex":3,"cardId":92,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 06:43:16 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":92,"flipIfFlipped":false,"playerId":2} 

 Player 2 06:43:16 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":92} 

 Player 2 06:43:16 $FLIP_CARD:  
{"cardId":92} 

 Player 2 06:43:16 $FLIP_CARD:  
{"cardId":92} 

 Player 2 06:43:16 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":92} 

 Player 2 06:43:16 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 06:43:16 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":260,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 06:43:16 $DRAW_CARD:  
{"deckType":1} 

 Player 2 06:43:16 $MOVE_CARD:  
{"moveIndex":4,"cardId":67,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 06:43:16 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":67,"flipIfFlipped":false,"playerId":2} 

 Player 2 06:43:16 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":67} 

 Player 2 06:43:16 $FLIP_CARD:  
{"cardId":67} 

 Player 2 06:43:16 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":67} 

 Player 2 06:43:16 $DRAW_CARD:  
{"deckType":1} 

 Player 2 06:43:16 $MOVE_CARD:  
{"moveIndex":5,"cardId":20,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 06:43:17 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":20,"flipIfFlipped":false,"playerId":2} 

 Player 2 06:43:17 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":20} 

 Player 2 06:43:17 $FLIP_CARD:  
{"cardId":20} 

 Player 2 06:43:17 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":20} 

 Player 2 06:43:17 $DRAW_CARD:  
{"deckType":1} 

 Player 2 06:43:17 $MOVE_CARD:  
{"moveIndex":6,"cardId":61,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 06:43:17 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":61,"flipIfFlipped":false,"playerId":2} 

 Player 2 06:43:17 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":61} 

 Player 2 06:43:17 $FLIP_CARD:  
{"cardId":61} 

 Player 2 06:43:17 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":61} 

 Player 2 06:43:17 $GAME_HAS_STARTED:  

 Player 2 06:43:17 $SET_TURN:  
{"playerId":2} 

 Player 2 06:43:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 06:43:17 $NEXT_STACK_ID:  

 Player 2 06:43:17 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 06:43:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 06:43:18 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":260,"turnPlayerCardId":260,"stackEffectType":13}} 

 Player 2 06:43:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 06:43:18 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":260,"turnPlayerCardId":260,"stackEffectType":13}} 

 Player 2 06:43:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 2 06:43:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 06:43:18 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 06:43:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 06:43:18 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":260,"turnPlayerCardId":260,"stackEffectType":13}} 

 Player 2 06:43:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 2 06:43:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 2 06:43:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 06:43:18 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 06:43:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 2 06:43:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 06:43:18 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 06:43:18 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 06:43:18 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 06:43:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 06:43:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 06:43:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 06:43:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 06:43:18 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 06:43:18 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 06:43:18 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 06:43:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 2 06:43:18 $DRAW_CARD:  
{"deckType":1} 

 Player 2 06:43:18 $MOVE_CARD:  
{"moveIndex":7,"cardId":94,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 06:43:19 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":94,"flipIfFlipped":false,"playerId":2} 

 Player 2 06:43:19 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":94} 

 Player 2 06:43:19 $FLIP_CARD:  
{"cardId":94} 

 Player 2 06:43:19 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":94} 

 Player 2 06:43:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 06:43:19 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":260,"turnPlayerCardId":260,"stackEffectType":13}} 

 Player 2 06:43:19 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 06:43:19 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 06:43:19 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":260,"turnPlayerCardId":260,"stackEffectType":13}} 

 Player 2 06:43:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 2 06:43:19 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 06:43:19 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":260,"turnPlayerCardId":260,"stackEffectType":13}} 

 Player 2 06:43:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 2 06:43:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 2 06:43:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 06:43:19 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 06:43:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 06:43:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 06:43:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 06:43:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 06:43:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 06:43:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 06:43:19 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 06:43:19 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 2 06:43:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 2 06:43:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 06:43:19 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 2 06:43:19 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 2 06:43:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 2 06:43:19 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 06:43:19 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 06:43:19 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 06:43:19 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 06:43:19 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 06:43:19 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 06:43:20 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 06:43:20 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 06:43:20 $UPDATE_ACTIONS:  

 Player 2 06:43:21 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 06:43:22 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 06:43:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 06:43:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 06:43:23 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 06:43:23 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 06:43:23 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 06:43:23 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 06:43:23 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 06:43:23 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 06:43:23 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 06:43:23 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 2 06:43:23 $END_TURN:  

 Player 2 06:43:23 $SET_TURN:  
{"playerId":1} 

 Player 2 06:43:23 $START_TURN:  
{"playerId":1} 

 Player 1 06:43:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 06:43:23 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 06:43:23 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 06:43:23 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 06:43:23 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 06:43:23 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 06:43:23 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 06:43:23 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 06:43:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 06:43:23 $NEXT_STACK_ID:  

 Player 1 06:43:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 06:43:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 06:43:23 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":268,"turnPlayerCardId":268,"stackEffectType":13}} 

 Player 1 06:43:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 06:43:23 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":268,"turnPlayerCardId":268,"stackEffectType":13}} 

 Player 1 06:43:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add StartTurnLoot 2 "}} 

 Player 1 06:43:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 06:43:23 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 06:43:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 06:43:23 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":268,"turnPlayerCardId":268,"stackEffectType":13}} 

 Player 1 06:43:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding StartTurnLoot 2"},"childOfId":10} 

 Player 1 06:43:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 1 06:43:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 06:43:23 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 1 06:43:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 1 06:43:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 06:43:23 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 06:43:24 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 06:43:24 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 06:43:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 06:43:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 06:43:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 06:43:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 06:43:24 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 06:43:24 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 1 06:43:24 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 1 06:43:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve StartTurnLoot 2 "}} 

 Player 1 06:43:24 $DRAW_CARD:  
{"deckType":1} 

 Player 1 06:43:24 $MOVE_CARD:  
{"moveIndex":8,"cardId":98,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 06:43:24 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":98,"flipIfFlipped":false,"playerId":1} 

 Player 1 06:43:24 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":98} 

 Player 1 06:43:24 $FLIP_CARD:  
{"cardId":98} 

 Player 1 06:43:24 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":98} 

 Player 1 06:43:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 06:43:24 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":268,"turnPlayerCardId":268,"stackEffectType":13}} 

 Player 1 06:43:24 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 06:43:24 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 06:43:24 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":268,"turnPlayerCardId":268,"stackEffectType":13}} 

 Player 1 06:43:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve StartTurnLoot 2  "}} 

 Player 1 06:43:25 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 06:43:25 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":268,"turnPlayerCardId":268,"stackEffectType":13}} 

 Player 1 06:43:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve StartTurnLoot 2"},"childOfId":15} 

 Player 1 06:43:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 1 06:43:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 06:43:25 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 06:43:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 06:43:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 06:43:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 06:43:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 06:43:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 06:43:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 06:43:25 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 06:43:25 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 1 06:43:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 1 06:43:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 06:43:25 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 1 06:43:25 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 1 06:43:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 1 06:43:25 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 06:43:25 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 06:43:25 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 06:43:25 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 06:43:25 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 06:43:25 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 06:43:25 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 06:43:25 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 06:43:25 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 06:43:25 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 06:43:25 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 06:43:25 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 06:43:26 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 06:43:27 $SHOW_DECISION:  
{"startCardId":268,"endCardId":268} 

 Player 1 06:43:27 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 06:43:30 $NEXT_STACK_ID:  

 Player 1 06:43:30 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 06:43:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Isaac"} 

 Player 1 06:43:30 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":268,"hasLockingStackEffect":false,"itemToPlayCardId":268,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 06:43:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Isaac"} 

 Player 1 06:43:30 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":268,"hasLockingStackEffect":false,"itemToPlayCardId":268,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 06:43:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add ActivateItem 3 "}} 

 Player 2 06:43:30 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 06:43:30 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 06:43:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Isaac"} 

 Player 2 06:43:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Isaac"} 

 Player 1 06:43:35 $SHOW_DECISION:  
{"startCardId":268,"endCardId":92} 

 Player 1 06:43:38 $USE_ITEM:  
{"cardId":268} 

 Player 1 06:43:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 06:43:38 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 06:43:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Isaac"} 

 Player 1 06:43:38 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":268,"hasLockingStackEffect":false,"itemToPlayCardId":268,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 06:43:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding ActivateItem 3"},"childOfId":20} 

 Player 1 06:43:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 1 06:43:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 06:43:38 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 1 06:43:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 1 06:43:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 06:43:38 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 06:43:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Isaac"} 

 Player 2 06:43:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Isaac"} 

 Player 2 06:43:38 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 06:43:38 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 1 06:43:38 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 1 06:43:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve ActivateItem 3 "}} 

 Player 1 06:43:38 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":268,"particleType":6} 

 Player 1 06:43:40 $DISABLE_PARTICLE_EFFECT:  
{"cardId":268,"particleType":6} 

 Player 1 06:43:40 $NEXT_STACK_ID:  

 Player 1 06:43:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Isaac"} 

 Player 1 06:43:40 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":92} 

 Player 1 06:43:40 $MOVE_CARD:  
{"moveIndex":9,"cardId":92,"placeID":278,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 06:43:41 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":92,"flipIfFlipped":true,"playerId":1} 

 Player 1 06:43:41 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":92} 

 Player 1 06:43:41 $LOG_ERROR:  
{"message":"\"Cannot read property 'addSelectedEffectHighlight' of undefined\"","stack":"\"TypeError: Cannot read property 'addSelectedEffectHighlight' of undefined\\n    at PlayLootCardStackEffect.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/StackEffects/Play%20Loot%20Card.js:91:93)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\\n    at fulfilled (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89787:28)\""} 
//////Error From Player 1////
  

 Player 1 06:43:41 $LOG_ERROR:  
//////Error From Player 1////

 "\"Cannot read property 'addSelectedEffectHighlight' of undefined\""

 + "\"TypeError: Cannot read property 'addSelectedEffectHighlight' of undefined\
    at PlayLootCardStackEffect.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/StackEffects/Play%20Loot%20Card.js:91:93)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at fulfilled (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89787:28)\""

////// 
//////Error From Player 1////

 "\"Cannot read property 'addSelectedEffectHighlight' of undefined\""

 + "\"TypeError: Cannot read property 'addSelectedEffectHighlight' of undefined\
    at PlayLootCardStackEffect.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/StackEffects/Play%20Loot%20Card.js:91:93)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at fulfilled (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89787:28)\""

////// 

 Player 1 06:43:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Bomb(5)  \n2:Player 1 activated Isaac"} 

 Player 1 06:43:41 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":268,"hasLockingStackEffect":false,"itemToPlayCardId":268,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 06:43:41 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 06:43:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Bomb(5) "} 

 Player 1 06:43:41 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":268,"hasLockingStackEffect":false,"itemToPlayCardId":268,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 06:43:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Remove After Resolve ActivateItem 3  "}} 

 Player 1 06:43:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Bomb(5) "} 

 Player 1 06:43:41 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":268,"hasLockingStackEffect":false,"itemToPlayCardId":268,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 06:43:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Response Remove After Resolve ActivateItem 3"},"childOfId":25} 

 Player 1 06:43:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Wait For Response From Player 2 "},"childOfId":25} 

 Player 1 06:43:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 06:43:41 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 06:43:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Isaac"} 

 Player 2 06:43:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Isaac"} 

 Player 2 06:43:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Isaac"} 

 Player 2 06:43:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Isaac"} 

 Player 2 06:43:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Isaac"} 

 Player 2 06:43:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Isaac"} 

 Player 2 06:43:41 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 06:43:42 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 1 06:43:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 1 "},"childOfId":25} 

 Player 1 06:43:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 06:43:42 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 1 06:43:42 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 1 06:43:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Resolve PlayLootCardStackEffect 4 "}} 

 Player 1 06:43:42 $LOG_ERROR:  
"error while resolving stack effect 4" 
//////Error From Player 1////
  

 Player 1 06:43:42 $LOG_ERROR:  
//////Error From Player 1////
 [object Object]
////// 

 Player 1 06:43:42 $LOG_ERROR:  
{"message":"\"Cannot read property 'addSelectedEffectHighlight' of undefined\"","stack":"\"TypeError: Cannot read property 'addSelectedEffectHighlight' of undefined\\n    at PlayLootCardStackEffect.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/StackEffects/Play%20Loot%20Card.js:164:93)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\\n    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\\n    at new Promise (<anonymous>)\\n    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\\n    at PlayLootCardStackEffect.resolve (http://localhost:7456/preview-scripts/assets/Script/StackEffects/Play%20Loot%20Card.js:108:16)\\n    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/Stack.js:117:58)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\""} 
//////Error From Player 1////
  

 Player 1 06:43:42 $LOG_ERROR:  
//////Error From Player 1////

 "\"Cannot read property 'addSelectedEffectHighlight' of undefined\""

 + "\"TypeError: Cannot read property 'addSelectedEffectHighlight' of undefined\
    at PlayLootCardStackEffect.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/StackEffects/Play%20Loot%20Card.js:164:93)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\
    at new Promise (<anonymous>)\
    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\
    at PlayLootCardStackEffect.resolve (http://localhost:7456/preview-scripts/assets/Script/StackEffects/Play%20Loot%20Card.js:108:16)\
    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/Stack.js:117:58)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\""

////// 
//////Error From Player 1////

 "\"Cannot read property 'addSelectedEffectHighlight' of undefined\""

 + "\"TypeError: Cannot read property 'addSelectedEffectHighlight' of undefined\
    at PlayLootCardStackEffect.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/StackEffects/Play%20Loot%20Card.js:164:93)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\
    at new Promise (<anonymous>)\
    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\
    at PlayLootCardStackEffect.resolve (http://localhost:7456/preview-scripts/assets/Script/StackEffects/Play%20Loot%20Card.js:108:16)\
    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/Stack.js:117:58)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\""

////// 

 Player 1 06:43:42 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 1 06:43:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 06:43:42 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":268,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":92,"lootPlayerId":1,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":92,"effctType":1},"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 06:43:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Remove After Resolve PlayLootCardStackEffect 4  "}} 

 Player 1 06:43:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 06:43:42 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":268,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":92,"lootPlayerId":1,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":92,"effctType":1},"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 06:43:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Response Remove After Resolve PlayLootCardStackEffect 4"},"childOfId":30} 

 Player 1 06:43:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Wait For Response From Player 1 "},"childOfId":30} 

 Player 1 06:43:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 06:43:42 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 1 06:43:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 2 "},"childOfId":30} 

 Player 1 06:43:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 06:43:42 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 06:43:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 06:43:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 06:43:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 06:43:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 06:43:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Stack Was Emptied "}} 

 Player 2 06:43:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 06:43:43 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 06:43:43 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 06:43:43 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 06:43:43 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 06:43:43 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 06:43:43 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 06:43:43 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 06:43:43 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 06:43:43 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 06:43:43 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 06:43:43 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 06:43:43 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 06:43:43 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 06:43:43 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 06:43:43 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 06:43:43 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 06:43:43 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 2 06:43:43 $TURN_PLAYER_DO_STACK_EFFECT:  
{"playerId":1} 

 Player 2 06:43:43 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 06:43:43 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 1 06:43:43 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 1 06:43:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Stack Was Emptied "}} 

 Player 1 06:43:44 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 06:43:44 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 06:43:44 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 06:43:44 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 06:43:44 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 06:43:44 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 06:43:44 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 06:43:44 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 06:43:44 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 06:43:44 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 06:43:44 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 06:43:44 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 06:43:44 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 06:43:44 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 06:43:44 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 06:43:44 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 1 06:43:44 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 06:43:44 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 1 06:43:44 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 1 06:43:44 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 06:43:44 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 1 06:43:45 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 06:43:45 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 18:57:45 $MATCH: 