Start Log 

 Player 1 20:32:45 $MATCH:  

 Player 1 20:32:45 $START_GAME:  

 Player 1 20:32:45 $MOVE_TO_TABLE:  

 Player 2 20:32:45 $MOVE_TO_TABLE:  

 Player 1 20:32:53 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 20:32:53 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 2 20:32:53 $SET_CHAR:  
{"originPlayerId":2,"playerId":1,"charCardId":470,"itemCardId":471} 

 Player 1 20:32:53 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":470,"itemCardId":471} 

 Player 1 20:32:53 $SET_CHAR_END:  
{"playerId":2} 

 Player 2 20:32:53 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":482,"itemCardId":483} 

 Player 2 20:32:53 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[43,66,240,72,151,56,246,32,85,81,182,31,199,29,158,142,110,39,205,170,148,262,69,171,96,78,108,98,156,42,200,216,64,124,88,265,227,263,83,194,273,120,193,71,17,16,55,188,268,144,254,52,215,67,154,271,135,53,10,133,225,187,23,125,114,166,24,180,20,89,12,118,220,251,270,272,201,143,77,8,176,21,117,28,190,235,126,46,195,131,45,105,226,94,239,146,35,204,169,179,186,172,178,4,73,127,47,139,7,65,26,138,123,74,162,90,5,147,264,97,269,79,58,174,257,206,248,75,122,217,104,63,203,119,189,34,230,15,149,249,209,129,177,184,27,61,214,141,197,92,38,275,167,266,236,173,115,40,9,18,87,48,252,163,145,51,192,30,137,59,99,185,267,25,152,93,232,70,33,155,150,113,157,245,228,103,128,219,161,60,191,175,211,102,50,82,164,258,116,57,242,91,253,255,107,244,234,49,130,237,243,68,36,196,181,222,231,153,212,112,183,229,37,19,259,22,95,134,221,44,274,80,233,256,159,136,160,202,41,86,207,140,84,213,168,100,218,106,260,224,210,238,11,13,261,6,111,132,198,121,76,101,208,165,14,223,62,250,241,109,54,247]} 

 Player 2 20:32:53 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[394,434,447,392,363,411,451,418,459,458,461,405,435,401,374,391,424,412,428,387,378,399,455,422,454,427,417,457,398,384,386,430,446,436,429,407,444,431,408,364,462,402,426,366,419,439,389,370,368,369,395,373,438,388,423,448,463,403,433,400,413,449,367,414,452,456,377,440,365,443,437,432,420,385,397,406,453,421,375,396,372,380,460,425,441,379,442,450,445,416,404,410,390,465,415,371,376,393,409,382,383,381,464]} 

 Player 2 20:32:53 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[335,287,326,302,312,307,331,354,294,323,330,322,347,345,318,289,333,329,283,353,340,341,281,295,324,306,309,304,303,350,314,301,344,296,315,355,279,292,284,338,291,293,348,356,327,282,285,313,320,300,297,319,334,290,288,337,308,298,359,317,280,357,358,286,351,336,325,343,332,342,321,346,360,339,299,352,361,305,349,328,311,310,316,278,277]} 

 Player 2 20:32:53 $DRAW_CARD:  
{"deckType":5} 

 Player 2 20:32:53 $FLIP_CARD:  
{"cardId":277} 

 Player 2 20:32:54 $ADD_STORE_CARD:  
{"cardId":277} 

 Player 2 20:32:54 $DRAW_CARD:  
{"deckType":5} 

 Player 2 20:32:54 $FLIP_CARD:  
{"cardId":278} 

 Player 2 20:32:54 $ADD_STORE_CARD:  
{"cardId":278} 

 Player 2 20:32:54 $DRAW_CARD:  
{"deckType":2} 

 Player 2 20:32:54 $FLIP_CARD:  
{"cardId":464} 

 Player 2 20:32:54 $REGISTER_PASSIVE_ITEM:  
{"cardId":464} 

 Player 2 20:32:54 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"NEW_ACTIVE_MONSTER","args":[{"type":0,"number":464}],"result":null,"preventMethod":false,"methodScopeId":464,"scopeIsPlayer":false,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 20:32:54 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":464} 

 Player 2 20:32:54 $NEW_MONSTER_ON_PLACE:  
{"cardId":464,"monsterPlaceId":1} 

 Player 2 20:32:54 $DRAW_CARD:  
{"deckType":2} 

 Player 2 20:32:54 $FLIP_CARD:  
{"cardId":381} 

 Player 2 20:32:54 $REGISTER_PASSIVE_ITEM:  
{"cardId":381} 

 Player 2 20:32:54 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"NEW_ACTIVE_MONSTER","args":[{"type":0,"number":381}],"result":null,"preventMethod":false,"methodScopeId":381,"scopeIsPlayer":false,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 20:32:54 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":381} 

 Player 2 20:32:54 $NEW_MONSTER_ON_PLACE:  
{"cardId":381,"monsterPlaceId":2} 

 Player 2 20:32:54 $REGISTER_PASSIVE_ITEM:  
{"cardId":467} 

 Player 2 20:32:54 $REGISTER_PASSIVE_ITEM:  
{"cardId":468} 

 Player 2 20:32:54 $REGISTER_PASSIVE_ITEM:  
{"cardId":469} 

 Player 2 20:32:54 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 20:32:54 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":470,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 20:32:54 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:32:54 $MOVE_CARD:  
{"moveIndex":1,"cardId":247,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:32:54 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"NEW_ACTIVE_MONSTER","args":[{"type":0,"number":464}],"result":null,"preventMethod":false,"methodScopeId":464,"scopeIsPlayer":false,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 20:32:54 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"NEW_ACTIVE_MONSTER","args":[{"type":0,"number":381}],"result":null,"preventMethod":false,"methodScopeId":381,"scopeIsPlayer":false,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 1 20:32:54 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":247,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:32:54 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":247} 

 Player 2 20:32:54 $FLIP_CARD:  
{"cardId":247} 

 Player 2 20:32:55 $FLIP_CARD:  
{"cardId":247} 

 Player 2 20:32:55 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":247} 

 Player 2 20:32:55 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":247}],"result":null,"preventMethod":false,"methodScopeId":470,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 2 20:32:55 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:32:55 $MOVE_CARD:  
{"moveIndex":2,"cardId":54,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:32:55 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":54,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:32:55 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":54} 

 Player 2 20:32:55 $FLIP_CARD:  
{"cardId":54} 

 Player 2 20:32:55 $FLIP_CARD:  
{"cardId":54} 

 Player 2 20:32:55 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":54} 

 Player 2 20:32:55 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":54}],"result":null,"preventMethod":false,"methodScopeId":470,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 2 20:32:55 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:32:55 $MOVE_CARD:  
{"moveIndex":3,"cardId":109,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:32:55 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":109,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:32:56 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":109} 

 Player 2 20:32:56 $FLIP_CARD:  
{"cardId":109} 

 Player 2 20:32:56 $FLIP_CARD:  
{"cardId":109} 

 Player 2 20:32:56 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":109} 

 Player 2 20:32:56 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":109}],"result":null,"preventMethod":false,"methodScopeId":470,"scopeIsPlayer":true,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 

 Player 2 20:32:56 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 20:32:56 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":482,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 

 Player 2 20:32:56 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:32:56 $MOVE_CARD:  
{"moveIndex":4,"cardId":241,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:32:56 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":241,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:32:56 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":241} 

 Player 2 20:32:56 $FLIP_CARD:  
{"cardId":241} 

 Player 2 20:32:56 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":241} 

 Player 2 20:32:56 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":241}],"result":null,"preventMethod":false,"methodScopeId":482,"scopeIsPlayer":true,"index":8,"originStackId":-1},"isAfterActivation":true,"index":8} 

 Player 2 20:32:56 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:32:56 $MOVE_CARD:  
{"moveIndex":5,"cardId":250,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:32:57 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":250,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:32:57 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":250} 

 Player 2 20:32:57 $FLIP_CARD:  
{"cardId":250} 

 Player 2 20:32:57 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":250} 

 Player 2 20:32:57 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":250}],"result":null,"preventMethod":false,"methodScopeId":482,"scopeIsPlayer":true,"index":9,"originStackId":-1},"isAfterActivation":true,"index":9} 

 Player 2 20:32:57 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:32:57 $MOVE_CARD:  
{"moveIndex":6,"cardId":62,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:32:57 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":62,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:32:57 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":62} 

 Player 2 20:32:57 $FLIP_CARD:  
{"cardId":62} 

 Player 2 20:32:57 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":62} 

 Player 2 20:32:57 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":62}],"result":null,"preventMethod":false,"methodScopeId":482,"scopeIsPlayer":true,"index":10,"originStackId":-1},"isAfterActivation":true,"index":10} 

 Player 2 20:32:57 $GAME_HAS_STARTED:  

 Player 2 20:32:57 $SET_TURN:  
{"playerId":2} 

 Player 2 20:32:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:32:57 $NEXT_STACK_ID:  

 Player 2 20:32:57 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":482,"turnPlayerCardId":482,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}} 

 Player 2 20:32:57 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":482,"turnPlayerCardId":482,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}} 

 Player 2 20:32:57 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 20:32:57 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 2 20:33:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add Start Turn Loot Draw 1 "}} 

 Player 2 20:33:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:33:00 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":482,"turnPlayerCardId":482,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}} 

 Player 2 20:33:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding Start Turn Loot Draw 1"},"childOfId":0} 

 Player 2 20:33:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 2 20:33:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:33:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 2 20:33:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:33:00 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:33:00 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[470,471]} 

 Player 1 20:33:00 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:33:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve Start Turn Loot Draw 1 "}} 

 Player 2 20:33:00 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":1,"creatorCardId":482,"turnPlayerCardId":482,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}]} 

 Player 2 20:33:01 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:33:01 $MOVE_CARD:  
{"moveIndex":7,"cardId":223,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:33:01 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":223,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:33:01 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":223} 

 Player 2 20:33:01 $FLIP_CARD:  
{"cardId":223} 

 Player 2 20:33:01 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":223} 

 Player 2 20:33:01 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":223}],"result":null,"preventMethod":false,"methodScopeId":482,"scopeIsPlayer":true,"index":11,"originStackId":-1},"isAfterActivation":true,"index":11} 

 Player 2 20:33:01 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":1,"text":"Player 2 Has Drawn Loot For Start Turn"} 

 Player 2 20:33:01 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":482,"turnPlayerCardId":482,"stackEffectType":13,"lable":"Player 2 Has Drawn Loot For Start Turn"}} 

 Player 2 20:33:01 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 20:33:01 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 20:33:01 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 2 20:33:04 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":1} 

 Player 2 20:33:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve Start Turn Loot Draw 1  "}} 

 Player 2 20:33:04 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":482,"turnPlayerCardId":482,"stackEffectType":13,"lable":"Player 2 Has Drawn Loot For Start Turn"}} 

 Player 2 20:33:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve Start Turn Loot Draw 1"},"childOfId":5} 

 Player 2 20:33:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 2 20:33:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:33:04 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:33:04 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[470,471]} 

 Player 1 20:33:04 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:33:04 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 2 20:33:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 2 20:33:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:33:04 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 2 20:33:04 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 2 20:33:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 2 20:33:04 $CLEAR_SE_VIS:  

 Player 2 20:33:04 $UPDATE_ACTIONS:  

 Player 2 20:42:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:42:43 $CLEAR_SE_VIS:  

 Player 2 20:42:43 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 2 20:42:43 $CLEAR_SE_VIS:  

 Player 2 20:42:43 $END_TURN:  

 Player 2 20:42:43 $SET_TURN:  
{"playerId":1} 

 Player 2 20:42:43 $START_TURN:  
{"playerId":1} 

 Player 1 20:42:43 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 20:42:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:42:43 $NEXT_STACK_ID:  

 Player 1 20:42:43 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":470,"turnPlayerCardId":470,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"}} 

 Player 1 20:42:43 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":470,"turnPlayerCardId":470,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"}} 

 Player 1 20:42:43 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 20:42:43 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 2 20:42:43 $STACK_EMPTIED:  
{"playerId":1} 

 Player 1 20:42:43 $CLEAR_SE_VIS:  

 Player 1 20:42:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add Start Turn Loot Draw 2 "}} 

 Player 1 20:42:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:42:46 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":470,"turnPlayerCardId":470,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"}} 

 Player 1 20:42:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding Start Turn Loot Draw 2"},"childOfId":10} 

 Player 1 20:42:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 1 20:42:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:42:46 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 1 20:42:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 1 20:42:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:42:46 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:42:46 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[482,483]} 

 Player 2 20:42:46 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:42:46 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 1 20:42:46 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 1 20:42:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve Start Turn Loot Draw 2 "}} 

 Player 1 20:42:46 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":2,"creatorCardId":470,"turnPlayerCardId":470,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"}]} 

 Player 1 20:42:46 $DRAW_CARD:  
{"deckType":1} 

 Player 1 20:42:46 $MOVE_CARD:  
{"moveIndex":8,"cardId":14,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 20:42:47 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":14,"flipIfFlipped":false,"playerId":1} 

 Player 1 20:42:47 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":14} 

 Player 1 20:42:47 $FLIP_CARD:  
{"cardId":14} 

 Player 1 20:42:47 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":14} 

 Player 1 20:42:47 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":14}],"result":null,"preventMethod":false,"methodScopeId":470,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 1 20:42:47 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":2,"text":"Player 1 Has Drawn Loot For Start Turn"} 

 Player 1 20:42:47 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":470,"turnPlayerCardId":470,"stackEffectType":13,"lable":"Player 1 Has Drawn Loot For Start Turn"}} 

 Player 1 20:42:47 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 1 20:42:47 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 20:42:47 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 1 20:42:50 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":2} 

 Player 1 20:42:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve Start Turn Loot Draw 2  "}} 

 Player 1 20:42:50 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":470,"turnPlayerCardId":470,"stackEffectType":13,"lable":"Player 1 Has Drawn Loot For Start Turn"}} 

 Player 1 20:42:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve Start Turn Loot Draw 2"},"childOfId":15} 

 Player 1 20:42:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 1 20:42:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:42:50 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:42:50 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[482,483]} 

 Player 2 20:42:50 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:42:50 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 1 20:42:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 1 20:42:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:42:50 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 1 20:42:50 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 1 20:42:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 1 20:42:50 $CLEAR_SE_VIS:  

 Player 1 20:43:00 $NEXT_STACK_ID:  

 Player 1 20:43:00 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":470,"attackingPlayerCardId":470,"idOfCardBeingAttacked":464,"stackEffectType":4,"lable":"Player 1 declared attack on Wrath"}} 

 Player 1 20:43:01 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":470,"attackingPlayerCardId":470,"idOfCardBeingAttacked":464,"stackEffectType":4,"lable":"Player 1 declared attack on Wrath"}} 

 Player 1 20:43:01 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 20:43:01 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 1 20:43:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add Player Declare Attack On Monster 3 "}} 

 Player 1 20:43:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:43:04 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":470,"attackingPlayerCardId":470,"idOfCardBeingAttacked":464,"stackEffectType":4,"lable":"Player 1 declared attack on Wrath"}} 

 Player 1 20:43:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding Player Declare Attack On Monster 3"},"childOfId":20} 

 Player 1 20:43:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 1 20:43:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:43:04 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 1 20:43:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 1 20:43:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:43:04 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:43:04 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[482,483]} 

 Player 2 20:43:04 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:43:04 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 1 20:43:04 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 1 20:43:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve Player Declare Attack On Monster 3 "}} 

 Player 1 20:43:04 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":3,"creatorCardId":470,"attackingPlayerCardId":470,"idOfCardBeingAttacked":464,"stackEffectType":4,"lable":"Player 1 declared attack on Wrath"}]} 

 Player 1 20:43:04 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":464,"particleType":5} 

 Player 1 20:43:05 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":3,"text":"Player 1 Has Entered Battle with Wrath"} 

 Player 1 20:43:05 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":470,"scopeIsPlayer":true,"index":4,"originStackId":3},"isAfterActivation":true,"index":4} 

 Player 1 20:43:05 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":470,"attackingPlayerCardId":470,"idOfCardBeingAttacked":464,"stackEffectType":4,"lable":"Player 1 Has Entered Battle with Wrath"}} 

 Player 1 20:43:05 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 1 20:43:05 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 20:43:05 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 1 20:43:07 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":3} 

 Player 1 20:43:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Remove After Resolve Player Declare Attack On Monster 3  "}} 

 Player 1 20:43:07 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":470,"attackingPlayerCardId":470,"idOfCardBeingAttacked":464,"stackEffectType":4,"lable":"Player 1 Has Entered Battle with Wrath"}} 

 Player 1 20:43:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Response Remove After Resolve Player Declare Attack On Monster 3"},"childOfId":25} 

 Player 1 20:43:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Wait For Response From Player 2 "},"childOfId":25} 

 Player 1 20:43:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:43:08 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:43:08 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[482,483]} 

 Player 2 20:43:08 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:43:08 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 1 20:43:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 1 "},"childOfId":25} 

 Player 1 20:43:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:43:08 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 1 20:43:08 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 1 20:43:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Stack Was Emptied "}} 

 Player 1 20:43:08 $CLEAR_SE_VIS:  

 Player 1 20:43:09 $NEXT_STACK_ID:  

 Player 1 20:43:09 $ADD_TO_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":470,"rollingPlayerCardId":470,"stackEffectType":2,"attackedMonsterCardId":464,"lable":"Player 1 is rolling against Wrath<Monster>"}} 

 Player 1 20:43:09 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":470,"rollingPlayerCardId":470,"stackEffectType":2,"attackedMonsterCardId":464,"lable":"Player 1 is rolling against Wrath<Monster>"}} 

 Player 1 20:43:09 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 20:43:09 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 1 20:43:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Add Player Attack Roll On Monster 4 "}} 

 Player 1 20:43:12 $ROLL_DICE:  
{"playerId":1} 

 Player 1 20:43:14 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":5} 

 Player 1 20:43:14 $UPDATE_STACK_VIS:  
{"stackId":4,"text":"player rolled 5 vs Wrath<Monster>"} 

 Player 1 20:43:14 $SHOW_DICE_ROLL:  
{"stackId":4} 

 Player 1 20:43:17 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":4,"text":"Player 1 rolled 5 vs Wrath<Monster>"} 

 Player 1 20:43:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:43:17 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":470,"numberRolled":5,"rollingPlayerCardId":470,"stackEffectType":2,"attackedMonsterCardId":464,"lable":"Player 1 rolled 5 vs Wrath<Monster>"}} 

 Player 1 20:43:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Response Adding Player Attack Roll On Monster 4"},"childOfId":30} 

 Player 1 20:43:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Wait For Response From Player 1 "},"childOfId":30} 

 Player 1 20:43:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:43:18 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 1 20:43:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 2 "},"childOfId":30} 

 Player 1 20:43:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:43:18 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:43:18 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[482,483]} 

 Player 2 20:43:18 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:43:18 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 1 20:43:18 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 1 20:43:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Resolve Player Attack Roll On Monster 4 "}} 

 Player 1 20:43:18 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":4,"creatorCardId":470,"numberRolled":5,"rollingPlayerCardId":470,"stackEffectType":2,"attackedMonsterCardId":464,"lable":"Player 1 rolled 5 vs Wrath<Monster>"}]} 

 Player 1 20:43:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Added 0 to original roll"}} 

 Player 1 20:43:18 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":4,"text":"Player 1 Rolled 5 Against Wrath<Monster> 3"} 

 Player 1 20:43:18 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":4,"text":"Player 1 Roll Hit"} 

 Player 1 20:43:18 $NEXT_STACK_ID:  

 Player 1 20:43:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:43:18 $CLEAR_SE_VIS:  

 Player 1 20:43:18 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":470,"entityToDoDamageCardId":470,"entityToTakeDamageCardId":464,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5,"lable":"Azazel is going to hurt Wrath"}} 

 Player 1 20:43:18 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":470,"numberRolled":5,"rollingPlayerCardId":470,"stackEffectType":2,"attackedMonsterCardId":464,"lable":"Player 1 Roll Hit"}} 

 Player 1 20:43:18 $REPLACE_STACK:  
{"currentStack":[{"entityId":5,"creatorCardId":470,"entityToDoDamageCardId":470,"entityToTakeDamageCardId":464,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5,"lable":"Azazel is going to hurt Wrath"},{"entityId":4,"creatorCardId":470,"numberRolled":5,"rollingPlayerCardId":470,"stackEffectType":2,"attackedMonsterCardId":464,"lable":"Player 1 Roll Hit"}]} 

 Player 1 20:43:19 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 20:43:19 $LOG_ERROR:  
"error while resolving stack effect Player Attack Roll On Monster 4" 
//////Error From Player 1////
  

 Player 1 20:43:19 $LOG_ERROR:  
//////Error From Player 1////
 [object Object]
////// 

 Player 1 20:43:19 $SHOW_ANNOUNCEMENT:  
{"text":"error while resolving stack effect Player Attack Roll On Monster 4"} 

 Player 1 20:43:19 $LOG_ERROR:  
{"message":"\"Converting circular structure to JSON\\n    --> starting at object with constructor 'cc_Scene'\\n    |     property '_children' -> object with constructor 'Array'\\n    |     index 0 -> object with constructor 'cc_Node'\\n    --- property '_parent' closes the circle\"","stack":"\"TypeError: Converting circular structure to JSON\\n    --> starting at object with constructor 'cc_Scene'\\n    |     property '_children' -> object with constructor 'Array'\\n    |     index 0 -> object with constructor 'cc_Node'\\n    --- property '_parent' closes the circle\\n    at JSON.stringify (<anonymous>)\\n    at ServerClient.send (http://localhost:7456/preview-scripts/assets/ServerClient/ServerClient.js:318:32)\\n    at Function.PassiveManager.updatePassiveMethodData (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:116:38)\\n    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:566:38)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\\n    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113284:71\\n    at new Promise (<anonymous>)\\n    at 486.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113264:14)\\n    at Function.PassiveManager.testForPassiveAfter (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:560:16)\""} 
//////Error From Player 1////
  

 Player 1 20:43:19 $LOG_ERROR:  
//////Error From Player 1////

 "\"Converting circular structure to JSON\
    --> starting at object with constructor 'cc_Scene'\
    |     property '_children' -> object with constructor 'Array'\
    |     index 0 -> object with constructor 'cc_Node'\
    --- property '_parent' closes the circle\""

 + "\"TypeError: Converting circular structure to JSON\
    --> starting at object with constructor 'cc_Scene'\
    |     property '_children' -> object with constructor 'Array'\
    |     index 0 -> object with constructor 'cc_Node'\
    --- property '_parent' closes the circle\
    at JSON.stringify (<anonymous>)\
    at ServerClient.send (http://localhost:7456/preview-scripts/assets/ServerClient/ServerClient.js:318:32)\
    at Function.PassiveManager.updatePassiveMethodData (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:116:38)\
    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:566:38)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113284:71\
    at new Promise (<anonymous>)\
    at 486.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113264:14)\
    at Function.PassiveManager.testForPassiveAfter (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:560:16)\""

////// 
//////Error From Player 1////

 "\"Converting circular structure to JSON\
    --> starting at object with constructor 'cc_Scene'\
    |     property '_children' -> object with constructor 'Array'\
    |     index 0 -> object with constructor 'cc_Node'\
    --- property '_parent' closes the circle\""

 + "\"TypeError: Converting circular structure to JSON\
    --> starting at object with constructor 'cc_Scene'\
    |     property '_children' -> object with constructor 'Array'\
    |     index 0 -> object with constructor 'cc_Node'\
    --- property '_parent' closes the circle\
    at JSON.stringify (<anonymous>)\
    at ServerClient.send (http://localhost:7456/preview-scripts/assets/ServerClient/ServerClient.js:318:32)\
    at Function.PassiveManager.updatePassiveMethodData (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:116:38)\
    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:566:38)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113284:71\
    at new Promise (<anonymous>)\
    at 486.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113264:14)\
    at Function.PassiveManager.testForPassiveAfter (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:560:16)\""

////// 

 Player 1 20:43:19 $SHOW_ANNOUNCEMENT:  
{"text":"\"Converting circular structure to JSON\\n    --> starting at object with constructor 'cc_Scene'\\n    |     property '_children' -> object with constructor 'Array'\\n    |     index 0 -> object with constructor 'cc_Node'\\n    --- property '_parent' closes the circle\""} 

 Player 1 20:43:19 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 1 20:43:19 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 20:43:20 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 1 20:43:21 $HIDE_ANNOUNCEMENT:  

 Player 1 20:43:21 $HIDE_ANNOUNCEMENT:  

 Player 1 20:43:21 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":4} 

 Player 1 20:43:21 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 1 20:43:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Remove After Resolve Player Attack Roll On Monster 4  "}} 

 Player 1 20:43:24 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":470,"numberRolled":5,"rollingPlayerCardId":470,"stackEffectType":2,"attackedMonsterCardId":464,"lable":"Player 1 Roll Hit"}} 

 Player 1 20:43:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Response Remove After Resolve Player Attack Roll On Monster 4"},"childOfId":36} 

 Player 1 20:43:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 1 "},"childOfId":36} 

 Player 1 20:43:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:43:25 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 1 20:43:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Wait For Response From Player 2 "},"childOfId":36} 

 Player 1 20:43:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:43:25 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:43:25 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[482,483]} 

 Player 2 20:43:25 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:43:25 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 1 20:43:26 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 1 20:43:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Resolve Monster Combat Damage To A Player 5 "}} 

 Player 1 20:43:26 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":5,"creatorCardId":470,"entityToDoDamageCardId":470,"entityToTakeDamageCardId":464,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5,"lable":"Azazel is going to hurt Wrath"}]} 

 Player 1 20:43:26 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":5,"text":"Azazel will deal 1 combat damage to Wrath "} 

 Player 1 20:43:26 $UPDATE_STACK_VIS:  
{"stackId":5,"text":"Azazel will deal 1 combat damage to Wrath"} 

 Player 1 20:43:26 $MONSTER_GET_DAMAGED:  
{"cardId":464,"hpLeft":2,"damageDealerId":470} 

 Player 1 20:43:26 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":470},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":464,"scopeIsPlayer":false,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 

 Player 1 20:43:26 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":5},{"type":0,"number":470},{"type":0,"number":464}],"result":null,"preventMethod":false,"methodScopeId":470,"scopeIsPlayer":true,"index":7,"originStackId":5},"isAfterActivation":true,"index":7} 

 Player 1 20:43:26 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":470,"entityToDoDamageCardId":470,"entityToTakeDamageCardId":464,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5,"lable":"Azazel will deal 1 combat damage to Wrath "}} 

 Player 1 20:43:26 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 1 20:43:26 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 20:43:26 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 1 20:43:28 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":5} 

 Player 1 20:43:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Remove After Resolve Monster Combat Damage To A Player 5  "}} 

 Player 1 20:43:29 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":470,"entityToDoDamageCardId":470,"entityToTakeDamageCardId":464,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5,"lable":"Azazel will deal 1 combat damage to Wrath "}} 

 Player 1 20:43:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Response Remove After Resolve Monster Combat Damage To A Player 5"},"childOfId":41} 

 Player 1 20:43:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 2 "},"childOfId":41} 

 Player 1 20:43:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:43:29 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:43:29 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[482,483]} 

 Player 2 20:43:29 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:43:29 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 1 20:43:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Wait For Response From Player 1 "},"childOfId":41} 

 Player 1 20:43:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:43:29 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 1 20:43:29 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 1 20:43:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Stack Was Emptied "}} 

 Player 1 20:43:29 $CLEAR_SE_VIS:  

 Player 2 20:46:20 $MATCH: 