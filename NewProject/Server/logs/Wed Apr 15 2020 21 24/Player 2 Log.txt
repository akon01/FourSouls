Start Log 
 Player 2 21:24:19 $MOVE_TO_TABLE:  
 Player 2 21:24:28 $FINISH_LOAD:  

 {"id":2,"turnPlayerId":2} 
 Player 2 21:24:28 $SET_CHAR:  

 {"originPlayerId":2,"playerId":1,"charCardId":315,"itemCardId":318} 
 Player 2 21:24:28 $ASSIGN_CHAR_TO_PLAYER:  

 {"playerId":2,"charCardId":325,"itemCardId":326} 
 Player 2 21:24:28 $DECK_ARRAGMENT:  

 {"deckType":1,"arrangement":[105,4,79,93,84,44,73,57,69,37,34,134,49,81,54,17,23,25,63,133,12,52,123,36,9,100,7,6,8,103,13,10,62,74,101,27,41,60,90,95,110,50,65,82,66,67,117,94,106,71,64,111,112,47,19,87,38,51,118,119,32,104,99,22,130,42,135,102,139,11,98,92,5,16,97,113,114,80,20,21,131,138,48,46,83,29,58,31,61,43,88,122,125,86,107,91,24,89,77,116,127,136,15,55,26,70,96,33,109,120,59,132,75,53,78,35,137,30,14,28,129,128,121,45,126,108,68,18,40,115,76,124,72,39,85,56]} 
 Player 2 21:24:28 $DECK_ARRAGMENT:  

 {"deckType":2,"arrangement":[277,292,259,235,238,276,255,248,226,291,224,237,308,307,253,257,309,245,242,265,299,288,223,270,266,278,233,287,231,303,232,298,260,244,302,281,304,282,294,273,285,234,228,225,272,240,275,239,264,300,230,284,306,310,262,263,280,274,301,271,305,258,279,247,251,289,250,267,243,295,290,254,269,246,293,268,256,286,236,296,227,283,241,261,229,297,252,249]} 
 Player 2 21:24:28 $DECK_ARRAGMENT:  

 {"deckType":5,"arrangement":[145,180,156,177,189,163,194,166,154,212,221,219,201,169,198,147,218,153,144,190,185,220,162,217,191,187,149,175,206,164,143,193,141,146,173,158,209,211,159,192,148,210,207,160,172,186,184,151,168,204,195,197,213,167,178,203,216,205,142,157,171,161,155,181,199,215,165,152,176,174,214,179,202,182,200,150,208,196,188,183,170]} 
 Player 2 21:24:28 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 21:24:28 $FLIP_CARD:  

 {"cardId":170} 
 Player 2 21:24:28 $ADD_STORE_CARD:  

 {"cardId":170} 
 Player 2 21:24:28 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 21:24:28 $FLIP_CARD:  

 {"cardId":183} 
 Player 2 21:24:28 $ADD_STORE_CARD:  

 {"cardId":183} 
 Player 2 21:24:28 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 21:24:28 $DECK_ADD_TO_BOTTOM:  

 {"deckType":2,"cardId":249} 
 Player 2 21:24:28 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 21:24:28 $FLIP_CARD:  

 {"cardId":252} 
 Player 2 21:24:28 $REGISTER_PASSIVE_ITEM:  

 {"cardId":252} 
 Player 2 21:24:28 $ADD_MONSTER:  

 {"monsterPlaceId":1,"monsterId":252} 
 Player 2 21:24:28 $NEW_MONSTER_ON_PLACE:  

 {"cardId":252,"monsterPlaceId":1} 
 Player 2 21:24:28 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 21:24:28 $DECK_ADD_TO_BOTTOM:  

 {"deckType":2,"cardId":297} 
 Player 2 21:24:28 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 21:24:28 $FLIP_CARD:  

 {"cardId":229} 
 Player 2 21:24:28 $REGISTER_PASSIVE_ITEM:  

 {"cardId":229} 
 Player 2 21:24:28 $ADD_MONSTER:  

 {"monsterPlaceId":2,"monsterId":229} 
 Player 2 21:24:28 $NEW_MONSTER_ON_PLACE:  

 {"cardId":229,"monsterPlaceId":2} 
 Player 2 21:24:28 $SET_MONEY:  

 {"playerId":1,"numOfCoins":3} 
 Player 2 21:24:29 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 21:24:29 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 21:24:29 $MOVE_CARD:  

 {"moveIndex":1,"cardId":56,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 21:24:29 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":56} 
 Player 2 21:24:29 $FLIP_CARD:  

 {"cardId":56} 
 Player 2 21:24:29 $FLIP_CARD:  

 {"cardId":56} 
 Player 2 21:24:29 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":56} 
 Player 2 21:24:29 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 21:24:29 $MOVE_CARD:  

 {"moveIndex":2,"cardId":85,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 21:24:29 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":85} 
 Player 2 21:24:29 $FLIP_CARD:  

 {"cardId":85} 
 Player 2 21:24:30 $FLIP_CARD:  

 {"cardId":85} 
 Player 2 21:24:30 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":85} 
 Player 2 21:24:30 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 21:24:30 $MOVE_CARD:  

 {"moveIndex":3,"cardId":39,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 21:24:30 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":39} 
 Player 2 21:24:30 $FLIP_CARD:  

 {"cardId":39} 
 Player 2 21:24:30 $FLIP_CARD:  

 {"cardId":39} 
 Player 2 21:24:30 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":39} 
 Player 2 21:24:30 $SET_MONEY:  

 {"playerId":2,"numOfCoins":3} 
 Player 2 21:24:30 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 2 21:24:30 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 21:24:30 $MOVE_CARD:  

 {"moveIndex":4,"cardId":72,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 21:24:31 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":72} 
 Player 2 21:24:31 $FLIP_CARD:  

 {"cardId":72} 
 Player 2 21:24:31 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":72} 
 Player 2 21:24:31 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 21:24:31 $MOVE_CARD:  

 {"moveIndex":5,"cardId":124,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 21:24:31 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":124} 
 Player 2 21:24:31 $FLIP_CARD:  

 {"cardId":124} 
 Player 2 21:24:31 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":124} 
 Player 2 21:24:31 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 21:24:31 $MOVE_CARD:  

 {"moveIndex":6,"cardId":76,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 21:24:32 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":76} 
 Player 2 21:24:32 $FLIP_CARD:  

 {"cardId":76} 
 Player 2 21:24:32 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":76} 
 Player 2 21:24:32 $GAME_HAS_STARTED:  
 Player 2 21:24:32 $SET_TURN:  

 {"playerId":1} 
 Player 2 21:24:32 $START_TURN:  

 {"playerId":1} 
 Player 2 21:24:32 $UPDATE_ACTIONS:  
 Player 2 21:24:32 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 21:24:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 
 Player 2 21:24:35 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[325,326]} 
 Player 2 21:24:35 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 21:24:36 $MOVE_CARD_END:  

 {"moveIndex":7,"cardId":115,"flipIfFlipped":false,"playerId":1} 
 Player 2 21:24:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 
 Player 2 21:24:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 
 Player 2 21:24:39 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[325,326]} 
 Player 2 21:24:39 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 21:25:12 $MOVE_CARD_END:  

 {"moveIndex":8,"cardId":281,"flipIfFlipped":true,"playerId":1} 
 Player 2 21:25:18 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 21:25:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 declared attack on Isaac!"} 
 Player 2 21:25:21 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[325,326]} 
 Player 2 21:25:21 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 21:25:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 declared attack on Isaac!"} 
 Player 2 21:25:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 declared attack on Isaac!"} 
 Player 2 21:25:24 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[325,326]} 
 Player 2 21:25:24 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 21:25:27 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 21:25:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Isaac!<Monster>"} 
 Player 2 21:25:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Isaac!<Monster>"} 
 Player 2 21:25:35 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[325,326]} 
 Player 2 21:25:35 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 21:25:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Isaac!<Monster>"} 
 Player 2 21:25:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Isaac!<Monster>"} 
 Player 2 21:25:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 1 is rolling against Isaac!<Monster>"} 
 Player 2 21:25:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 1 is rolling against Isaac!<Monster>"} 
 Player 2 21:25:42 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[325,326]} 
 Player 2 21:25:42 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 21:25:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac!"} 
 Player 2 21:25:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Activate Isaac! "} 
 Player 2 21:26:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Activate Isaac! "} 
 Player 2 21:26:01 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[325,326]} 
 Player 2 21:26:01 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 21:26:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Activate Isaac! "} 
 Player 2 21:26:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Activate Isaac! "} 
 Player 2 21:26:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Activate Isaac! "} 
 Player 2 21:26:06 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[325,326]} 
 Player 2 21:26:06 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 21:26:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac!"} 
 Player 2 21:26:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac!"} 
 Player 2 21:26:09 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[325,326]} 
 Player 2 21:26:10 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 21:26:12 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 21:26:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Isaac!<Monster>"} 
 Player 2 21:26:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Isaac!<Monster>"} 
 Player 2 21:26:19 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[325,326]} 
 Player 2 21:26:19 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 21:26:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Isaac!<Monster>"} 
 Player 2 21:26:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Isaac!<Monster>"} 
 Player 2 21:26:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 1 is rolling against Isaac!<Monster>"} 
 Player 2 21:26:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 1 is rolling against Isaac!<Monster>"} 
 Player 2 21:26:26 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[325,326]} 
 Player 2 21:26:26 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 21:26:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac!"} 
 Player 2 21:26:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Activate Isaac! "} 
 Player 2 21:26:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Activate Isaac! "} 
 Player 2 21:26:37 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[325,326]} 
 Player 2 21:26:37 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 21:26:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Activate Isaac! "} 
 Player 2 21:26:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Activate Isaac! "} 
 Player 2 21:26:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Activate Isaac!  \n3:Player 2 Is About To Die"} 
 Player 2 21:26:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Activate Isaac!  \n3:Player 2 Is About To Die"} 
 Player 2 21:26:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Activate Isaac!  \n3:Player 2 Is About To Die"} 
 Player 2 21:26:52 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[325,326]} 
 Player 2 21:26:52 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 21:26:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Activate Isaac! "} 
 Player 2 21:26:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 2 Has Died"} 
 Player 2 21:26:52 $NEXT_STACK_ID:  
 Player 2 21:26:52 $CLEAR_SE_VIS:  
 Player 2 21:26:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 2 Has Died \n3:Player 2 Is About To Pay Death Penalties"} 
 Player 2 21:26:52 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 
 Player 2 21:26:52 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":9,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":281}} 
 Player 2 21:26:52 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":10,"creatorCardId":325,"playerToPayCardId":325,"stackEffectType":16}} 
 Player 2 21:26:52 $REPLACE_STACK:  

 {"currentStack":[{"entityId":7,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3},{"entityId":9,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":281},{"entityId":10,"creatorCardId":325,"playerToPayCardId":325,"stackEffectType":16}]} 
 Player 2 21:26:52 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":10,"creatorCardId":325,"playerToPayCardId":325,"stackEffectType":16}} 
 Player 2 21:26:52 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 21:26:52 $SHOW_STACK_EFFECT:  

 {"effectId":10} 
 Player 2 21:26:55 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 21:26:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 2 Has Died \n3:Player 2 Is About To Pay Death Penalties"} 
 Player 2 21:26:55 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":9,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":281}} 
 Player 2 21:26:55 $FINISH_DO_STACK_EFFECT:  

 {"playerId":1,"newStack":[{"entityId":7,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3},{"entityId":9,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":281},{"entityId":10,"creatorCardId":325,"playerToPayCardId":325,"stackEffectType":16}]} 
 Player 2 21:26:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 2 Has Died \n3:Player 2 Is About To Pay Death Penalties"} 
 Player 2 21:26:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 2 Is About To Die \n3:Player 2 Is About To Pay Death Penalties"} 
 Player 2 21:27:12 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[325,326]} 
 Player 2 21:27:12 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 21:27:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 2 Is About To Die"} 
 Player 2 21:27:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":72,"_text":"Player 2 pays Penalties"}} 
 Player 2 21:27:12 $SET_MONEY:  

 {"playerId":2,"numOfCoins":2} 
 Player 2 21:27:12 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-1}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Player 2 21:27:16 $PLAYER_LOSE_LOOT:  

 {"playerId":2,"cardId":76} 
 Player 2 21:27:16 $MOVE_CARD:  

 {"moveIndex":9,"cardId":76,"placeID":330,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 21:27:16 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":76} 
 Player 2 21:27:16 $USE_ITEM:  

 {"cardId":325} 
 Player 2 21:27:17 $USE_ITEM:  

 {"cardId":326} 
 Player 2 21:27:17 $PLAYER_DIED:  

 {"playerId":2} 
 Player 2 21:27:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 2 Paid Death Penalties"} 
 Player 2 21:27:17 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":10,"creatorCardId":325,"playerToPayCardId":325,"stackEffectType":16}} 
 Player 2 21:27:17 $FINISH_DO_STACK_EFFECT:  

 {"playerId":1,"newStack":[{"entityId":7,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3},{"entityId":10,"creatorCardId":325,"playerToPayCardId":325,"stackEffectType":16}]} 
 Player 2 21:27:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 2 Paid Death Penalties"} 
 Player 2 21:27:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 2 Is About To Pay Death Penalties"} 
 Player 2 21:27:20 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 21:27:20 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 21:27:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac!"} 
 Player 2 21:27:37 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 21:27:37 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 21:27:43 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 21:27:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Isaac!<Monster>"} 
 Player 2 21:27:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Isaac!<Monster>"} 
 Player 2 21:27:51 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 21:27:51 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 21:27:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Isaac!<Monster>"} 
 Player 2 21:27:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Isaac!<Monster>"} 
 Player 2 21:27:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 1 is rolling against Isaac!<Monster>"} 
 Player 2 21:27:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 1 is rolling against Isaac!<Monster>"} 
 Player 2 21:27:58 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 21:27:58 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 21:27:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac!"} 
 Player 2 21:27:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Activate Isaac! "} 
 Player 2 21:28:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Activate Isaac! "} 
 Player 2 21:28:04 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 21:28:04 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 21:28:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Activate Isaac! "} 
 Player 2 21:28:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Activate Isaac! "} 
 Player 2 21:28:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Activate Isaac! "} 
 Player 2 21:28:10 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 21:28:10 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 21:28:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac!"} 
 Player 2 21:28:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac!"} 
 Player 2 21:28:13 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 21:28:13 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 21:28:15 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 21:28:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Isaac!<Monster>"} 
 Player 2 21:28:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Isaac!<Monster>"} 
 Player 2 21:28:24 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 21:28:24 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 21:28:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Isaac!<Monster>"} 
 Player 2 21:28:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Isaac!<Monster>"} 
 Player 2 21:28:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 1 is rolling against Isaac!<Monster>"} 
 Player 2 21:28:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 1 is rolling against Isaac!<Monster>"} 
 Player 2 21:28:30 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 21:28:30 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 21:28:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac!"} 
 Player 2 21:28:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Activate Isaac! "} 
 Player 2 21:28:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Activate Isaac! "} 
 Player 2 21:28:37 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 21:28:37 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 21:28:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Activate Isaac! "} 
 Player 2 21:28:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Activate Isaac! "} 
 Player 2 21:28:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Activate Isaac!  \n3:Player 1 Is About To Die"} 
 Player 2 21:28:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Activate Isaac!  \n3:Player 1 Is About To Die"} 
 Player 2 21:28:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Activate Isaac!  \n3:Player 1 Is About To Die"} 
 Player 2 21:28:45 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 21:28:45 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 21:28:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Activate Isaac! "} 
 Player 2 21:28:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Isaac! "} 
 Player 2 21:28:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Die \n2:Player 1 Is About To Pay Death Penalties"} 
 Player 2 21:28:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Die \n2:Player 1 Is About To Pay Death Penalties"} 
 Player 2 21:28:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Die \n2:Player 1 Is About To Pay Death Penalties"} 
 Player 2 21:28:52 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 21:28:52 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 21:28:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Die"} 
 Player 2 21:30:41 $MOVE_CARD_END:  

 {"moveIndex":10,"cardId":39,"flipIfFlipped":true,"playerId":1} 
 Player 2 21:30:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Die"} 
 Player 2 21:30:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Pay Death Penalties"} 
 Player 2 21:30:44 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 21:30:44 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 21:30:45 $STACK_EMPTIED:  

 {"playerId":1} 
 Player 2 21:30:45 $RECHARGE_ITEM:  

 {"cardId":325} 
 Player 2 21:30:45 $PLAYER_RECHARGE_ITEM:  

 {"playerId":2,"cardId":325} 
 Player 2 21:30:45 $RECHARGE_ITEM:  

 {"cardId":326} 
 Player 2 21:30:45 $PLAYER_RECHARGE_ITEM:  

 {"playerId":2,"cardId":326} 
 Player 2 21:30:45 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:30:45 $NEXT_STACK_ID:  
 Player 2 21:30:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 
 Player 2 21:30:45 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":19,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 
 Player 2 21:30:45 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":19,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 
 Player 2 21:30:45 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 21:30:45 $SHOW_STACK_EFFECT:  

 {"effectId":19} 
 Player 2 21:30:45 $CLEAR_SE_VIS:  
 Player 2 21:30:45 $CLEAR_SE_VIS:  
 Player 2 21:30:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":143,"_text":"Add StartTurnLoot 19 "}} 
 Player 2 21:30:48 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:30:48 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":19,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 
 Player 2 21:30:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":144,"_text":"Response Adding StartTurnLoot 19"},"childOfId":143} 
 Player 2 21:30:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":145,"_text":"Wait For Response From Player 2 "},"childOfId":143} 
 Player 2 21:30:48 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:30:48 $ACTION_MASSAGE_REMOVE:  

 {"id":145} 
 Player 2 21:30:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":146,"_text":"Wait For Response From Player 1 "},"childOfId":143} 
 Player 2 21:30:48 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 21:30:48 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 21:30:48 $ACTION_MASSAGE_REMOVE:  

 {"id":146} 
 Player 2 21:30:48 $ACTION_MASSAGE_REMOVE:  

 {"id":144} 
 Player 2 21:30:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":147,"_text":"Resolve StartTurnLoot 19 "}} 
 Player 2 21:30:48 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":19,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 
 Player 2 21:30:48 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 21:30:48 $MOVE_CARD:  

 {"moveIndex":11,"cardId":40,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 21:30:48 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":40} 
 Player 2 21:30:48 $FLIP_CARD:  

 {"cardId":40} 
 Player 2 21:30:49 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":40} 
 Player 2 21:30:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Has Drawen Loot For Start Turn"} 
 Player 2 21:30:49 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":19,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 
 Player 2 21:30:49 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":19} 
 Player 2 21:30:49 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 21:30:49 $SHOW_STACK_EFFECT:  

 {"effectId":19} 
 Player 2 21:30:51 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":19} 
 Player 2 21:30:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":148,"_text":"Remove After Resolve StartTurnLoot 19  "}} 
 Player 2 21:30:52 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 21:30:52 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":19,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 
 Player 2 21:30:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":149,"_text":"Response Remove After Resolve StartTurnLoot 19"},"childOfId":148} 
 Player 2 21:30:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":150,"_text":"Wait For Response From Player 1 "},"childOfId":148} 
 Player 2 21:30:52 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 21:30:52 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 21:30:52 $ACTION_MASSAGE_REMOVE:  

 {"id":150} 
 Player 2 21:30:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":151,"_text":"Wait For Response From Player 2 "},"childOfId":148} 
 Player 2 21:30:52 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:30:52 $ACTION_MASSAGE_REMOVE:  

 {"id":151} 
 Player 2 21:30:52 $ACTION_MASSAGE_REMOVE:  

 {"id":149} 
 Player 2 21:30:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":152,"_text":"Stack Was Emptied "}} 
 Player 2 21:30:52 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 21:30:52 $CLEAR_SE_VIS:  
 Player 2 21:31:03 $NEXT_STACK_ID:  
 Player 2 21:31:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 declared attack on Isaac!"} 
 Player 2 21:31:03 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":20,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":281,"stackEffectType":4}} 
 Player 2 21:31:03 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":20,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":281,"stackEffectType":4}} 
 Player 2 21:31:03 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 21:31:03 $SHOW_STACK_EFFECT:  

 {"effectId":20} 
 Player 2 21:31:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":153,"_text":"Add DeclareAttack 20 "}} 
 Player 2 21:31:06 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:31:06 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":20,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":281,"stackEffectType":4}} 
 Player 2 21:31:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":154,"_text":"Response Adding DeclareAttack 20"},"childOfId":153} 
 Player 2 21:31:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":155,"_text":"Wait For Response From Player 2 "},"childOfId":153} 
 Player 2 21:31:06 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:31:06 $ACTION_MASSAGE_REMOVE:  

 {"id":155} 
 Player 2 21:31:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":156,"_text":"Wait For Response From Player 1 "},"childOfId":153} 
 Player 2 21:31:06 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 21:31:06 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 21:31:06 $ACTION_MASSAGE_REMOVE:  

 {"id":156} 
 Player 2 21:31:06 $ACTION_MASSAGE_REMOVE:  

 {"id":154} 
 Player 2 21:31:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":157,"_text":"Resolve DeclareAttack 20 "}} 
 Player 2 21:31:07 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":20,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":281,"stackEffectType":4}} 
 Player 2 21:31:07 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":281,"particleType":5} 
 Player 2 21:31:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Has Entered Battle with Isaac!"} 
 Player 2 21:31:07 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":4,"originStackId":20},"isAfterActivation":true,"index":4} 
 Player 2 21:31:07 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":20,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":281,"stackEffectType":4}} 
 Player 2 21:31:07 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":20} 
 Player 2 21:31:07 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 21:31:07 $SHOW_STACK_EFFECT:  

 {"effectId":20} 
 Player 2 21:31:09 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":20} 
 Player 2 21:31:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":158,"_text":"Remove After Resolve DeclareAttack 20  "}} 
 Player 2 21:31:10 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 21:31:10 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":20,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":281,"stackEffectType":4}} 
 Player 2 21:31:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":159,"_text":"Response Remove After Resolve DeclareAttack 20"},"childOfId":158} 
 Player 2 21:31:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":160,"_text":"Wait For Response From Player 1 "},"childOfId":158} 
 Player 2 21:31:10 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 21:31:10 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 21:31:10 $ACTION_MASSAGE_REMOVE:  

 {"id":160} 
 Player 2 21:31:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":161,"_text":"Wait For Response From Player 2 "},"childOfId":158} 
 Player 2 21:31:10 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:31:10 $ACTION_MASSAGE_REMOVE:  

 {"id":161} 
 Player 2 21:31:10 $ACTION_MASSAGE_REMOVE:  

 {"id":159} 
 Player 2 21:31:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":162,"_text":"Stack Was Emptied "}} 
 Player 2 21:31:10 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 21:31:10 $CLEAR_SE_VIS:  
 Player 2 21:31:12 $NEXT_STACK_ID:  
 Player 2 21:31:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 
 Player 2 21:31:12 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":21,"creatorCardId":325,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 2 21:31:12 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":21,"creatorCardId":325,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 2 21:31:12 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 21:31:12 $SHOW_STACK_EFFECT:  

 {"effectId":21} 
 Player 2 21:31:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":163,"_text":"Add AttackRoll 21 "}} 
 Player 2 21:31:15 $ROLL_DICE:  

 {"playerId":2} 
 Player 2 21:31:17 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":6} 
 Player 2 21:31:17 $UPDATE_STACK_VIS:  

 {"stackId":21,"text":"player rolled 6 vs Isaac!<Monster>"} 
 Player 2 21:31:17 $SHOW_DICE_ROLL:  

 {"stackId":21} 
 Player 2 21:31:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Isaac!<Monster>"} 
 Player 2 21:31:20 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:31:20 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":21,"creatorCardId":325,"numberRolled":6,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 2 21:31:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":164,"_text":"Response Adding AttackRoll 21"},"childOfId":163} 
 Player 2 21:31:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":165,"_text":"Wait For Response From Player 2 "},"childOfId":163} 
 Player 2 21:31:20 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:31:20 $ACTION_MASSAGE_REMOVE:  

 {"id":165} 
 Player 2 21:31:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":166,"_text":"Wait For Response From Player 1 "},"childOfId":163} 
 Player 2 21:31:20 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 21:31:20 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 21:31:20 $ACTION_MASSAGE_REMOVE:  

 {"id":166} 
 Player 2 21:31:20 $ACTION_MASSAGE_REMOVE:  

 {"id":164} 
 Player 2 21:31:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":167,"_text":"Resolve AttackRoll 21 "}} 
 Player 2 21:31:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Isaac!<Monster>"} 
 Player 2 21:31:20 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":21,"creatorCardId":325,"numberRolled":6,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 2 21:31:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":168,"_text":"Added 0 to original roll"}} 
 Player 2 21:31:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Rolled 3 Against Isaac!<Monster> 3"} 
 Player 2 21:31:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Roll Hit"} 
 Player 2 21:31:20 $NEXT_STACK_ID:  
 Player 2 21:31:20 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:31:20 $CLEAR_SE_VIS:  
 Player 2 21:31:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac! \n2:Player 2 Roll Hit"} 
 Player 2 21:31:20 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":22,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 
 Player 2 21:31:20 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":21,"creatorCardId":325,"numberRolled":6,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 2 21:31:21 $REPLACE_STACK:  

 {"currentStack":[{"entityId":22,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3},{"entityId":21,"creatorCardId":325,"numberRolled":6,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":281}]} 
 Player 2 21:31:21 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 21:31:21 $SHOW_STACK_EFFECT:  

 {"effectId":22} 
 Player 2 21:31:23 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":3},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":5,"originStackId":21},"isAfterActivation":true,"index":5} 
 Player 2 21:31:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac! \n2:Player 2 Roll Hit"} 
 Player 2 21:31:23 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":21,"creatorCardId":325,"numberRolled":6,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 2 21:31:23 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":21} 
 Player 2 21:31:23 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 21:31:23 $SHOW_STACK_EFFECT:  

 {"effectId":21} 
 Player 2 21:31:26 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":21} 
 Player 2 21:31:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":169,"_text":"Remove After Resolve AttackRoll 21  "}} 
 Player 2 21:31:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac!"} 
 Player 2 21:31:26 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":21,"creatorCardId":325,"numberRolled":6,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 2 21:31:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":170,"_text":"Response Remove After Resolve AttackRoll 21"},"childOfId":169} 
 Player 2 21:31:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":171,"_text":"Wait For Response From Player 2 "},"childOfId":169} 
 Player 2 21:31:26 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:31:26 $ACTION_MASSAGE_REMOVE:  

 {"id":171} 
 Player 2 21:31:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":172,"_text":"Wait For Response From Player 1 "},"childOfId":169} 
 Player 2 21:31:26 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 21:31:27 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 21:31:27 $ACTION_MASSAGE_REMOVE:  

 {"id":172} 
 Player 2 21:31:27 $ACTION_MASSAGE_REMOVE:  

 {"id":170} 
 Player 2 21:31:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":173,"_text":"Resolve CombatDamage 22 "}} 
 Player 2 21:31:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac!"} 
 Player 2 21:31:27 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":22,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 
 Player 2 21:31:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson will deal 1 combat damage to Isaac! "} 
 Player 2 21:31:27 $UPDATE_STACK_VIS:  

 {"stackId":22,"text":"Samson will deal 1 combat damage to Isaac!"} 
 Player 2 21:31:27 $MONSTER_GET_DAMAGED:  

 {"cardId":281,"hpLeft":6,"damageDealerId":325} 
 Player 2 21:31:27 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":325},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 
 Player 2 21:31:27 $NEXT_STACK_ID:  
 Player 2 21:31:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson will deal 1 combat damage to Isaac!  \n2:Activate Isaac! Effect DealDamage<DealDamage>"} 
 Player 2 21:31:27 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":23,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":true,"index":6,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 21:31:27 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":23,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":true,"index":6,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 21:31:27 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 21:31:27 $SHOW_STACK_EFFECT:  

 {"effectId":23} 
 Player 2 21:31:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":174,"_text":"Add ActivatePassiveEffect 23 "}} 
 Player 2 21:32:11 $SHOW_DECISION:  

 {"startCardId":281,"endCardId":315} 
 Player 2 21:32:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson will deal 1 combat damage to Isaac!  \n2:Activate Isaac! effect DealDamage<DealDamage>"} 
 Player 2 21:32:14 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[315],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":23,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":true,"index":6,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 21:32:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":175,"_text":"Response Adding ActivatePassiveEffect 23"},"childOfId":174} 
 Player 2 21:32:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":176,"_text":"Wait For Response From Player 1 "},"childOfId":174} 
 Player 2 21:32:15 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 21:32:15 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 21:32:15 $ACTION_MASSAGE_REMOVE:  

 {"id":176} 
 Player 2 21:32:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":177,"_text":"Wait For Response From Player 2 "},"childOfId":174} 
 Player 2 21:32:15 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:32:15 $ACTION_MASSAGE_REMOVE:  

 {"id":177} 
 Player 2 21:32:15 $ACTION_MASSAGE_REMOVE:  

 {"id":175} 
 Player 2 21:32:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":178,"_text":"Resolve ActivatePassiveEffect 23 "}} 
 Player 2 21:32:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson will deal 1 combat damage to Isaac!  \n2:Activate Isaac! effect DealDamage<DealDamage>"} 
 Player 2 21:32:15 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[315],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":23,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":true,"index":6,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 21:32:15 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":281,"particleType":6} 
 Player 2 21:32:17 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":281,"particleType":6} 
 Player 2 21:32:17 $PLAYER_GET_HIT:  

 {"playerId":1,"damage":1,"damageDealerId":281} 
 Player 2 21:32:17 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":281}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 
 Player 2 21:32:17 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":325},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 
 Player 2 21:32:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson will deal 1 combat damage to Isaac!  \n2:Activated Isaac! Effect"} 
 Player 2 21:32:17 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[315],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":23,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"isAfterActivation":true,"index":6,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 21:32:17 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":23} 
 Player 2 21:32:17 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 21:32:17 $SHOW_STACK_EFFECT:  

 {"effectId":23} 
 Player 2 21:32:20 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":23} 
 Player 2 21:32:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":179,"_text":"Remove After Resolve ActivatePassiveEffect 23  "}} 
 Player 2 21:32:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson will deal 1 combat damage to Isaac! "} 
 Player 2 21:32:20 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[315],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":23,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"isAfterActivation":true,"index":6,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 21:32:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":180,"_text":"Response Remove After Resolve ActivatePassiveEffect 23"},"childOfId":179} 
 Player 2 21:32:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":181,"_text":"Wait For Response From Player 2 "},"childOfId":179} 
 Player 2 21:32:20 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:32:20 $ACTION_MASSAGE_REMOVE:  

 {"id":181} 
 Player 2 21:32:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":182,"_text":"Wait For Response From Player 1 "},"childOfId":179} 
 Player 2 21:32:20 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 21:32:20 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 21:32:20 $ACTION_MASSAGE_REMOVE:  

 {"id":182} 
 Player 2 21:32:20 $ACTION_MASSAGE_REMOVE:  

 {"id":180} 
 Player 2 21:32:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":183,"_text":"Resolve CombatDamage 22 "}} 
 Player 2 21:32:20 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":3},{"type":0,"number":325},{"type":0,"number":281}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":8,"originStackId":22},"isAfterActivation":true,"index":8} 
 Player 2 21:32:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson will deal 1 combat damage to Isaac! "} 
 Player 2 21:32:20 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":22,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 
 Player 2 21:32:20 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":22} 
 Player 2 21:32:20 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 21:32:20 $SHOW_STACK_EFFECT:  

 {"effectId":22} 
 Player 2 21:32:23 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":22} 
 Player 2 21:32:23 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":184,"_text":"Remove After Resolve CombatDamage 22  "}} 
 Player 2 21:32:23 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 21:32:23 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":22,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 
 Player 2 21:32:23 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":185,"_text":"Response Remove After Resolve CombatDamage 22"},"childOfId":184} 
 Player 2 21:32:23 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":186,"_text":"Wait For Response From Player 1 "},"childOfId":184} 
 Player 2 21:32:23 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 21:32:23 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 21:32:24 $ACTION_MASSAGE_REMOVE:  

 {"id":186} 
 Player 2 21:32:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":187,"_text":"Wait For Response From Player 2 "},"childOfId":184} 
 Player 2 21:32:24 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:32:24 $ACTION_MASSAGE_REMOVE:  

 {"id":187} 
 Player 2 21:32:24 $ACTION_MASSAGE_REMOVE:  

 {"id":185} 
 Player 2 21:32:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":188,"_text":"Stack Was Emptied "}} 
 Player 2 21:32:24 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 21:32:24 $CLEAR_SE_VIS:  
 Player 2 21:32:26 $NEXT_STACK_ID:  
 Player 2 21:32:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 
 Player 2 21:32:26 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":24,"creatorCardId":325,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 2 21:32:26 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":24,"creatorCardId":325,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 2 21:32:26 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 21:32:26 $SHOW_STACK_EFFECT:  

 {"effectId":24} 
 Player 2 21:32:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":189,"_text":"Add AttackRoll 24 "}} 
 Player 2 21:32:29 $ROLL_DICE:  

 {"playerId":2} 
 Player 2 21:32:31 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":5} 
 Player 2 21:32:31 $UPDATE_STACK_VIS:  

 {"stackId":24,"text":"player rolled 5 vs Isaac!<Monster>"} 
 Player 2 21:32:32 $SHOW_DICE_ROLL:  

 {"stackId":24} 
 Player 2 21:32:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 5 vs Isaac!<Monster>"} 
 Player 2 21:32:34 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:32:34 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":24,"creatorCardId":325,"numberRolled":5,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 2 21:32:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":190,"_text":"Response Adding AttackRoll 24"},"childOfId":189} 
 Player 2 21:32:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":191,"_text":"Wait For Response From Player 2 "},"childOfId":189} 
 Player 2 21:32:35 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:32:35 $ACTION_MASSAGE_REMOVE:  

 {"id":191} 
 Player 2 21:32:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":192,"_text":"Wait For Response From Player 1 "},"childOfId":189} 
 Player 2 21:32:35 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 21:32:35 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 21:32:35 $ACTION_MASSAGE_REMOVE:  

 {"id":192} 
 Player 2 21:32:35 $ACTION_MASSAGE_REMOVE:  

 {"id":190} 
 Player 2 21:32:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":193,"_text":"Resolve AttackRoll 24 "}} 
 Player 2 21:32:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 5 vs Isaac!<Monster>"} 
 Player 2 21:32:35 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":24,"creatorCardId":325,"numberRolled":5,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 2 21:32:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":194,"_text":"Added 0 to original roll"}} 
 Player 2 21:32:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Rolled 3 Against Isaac!<Monster> 3"} 
 Player 2 21:32:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Roll Hit"} 
 Player 2 21:32:35 $NEXT_STACK_ID:  
 Player 2 21:32:35 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:32:35 $CLEAR_SE_VIS:  
 Player 2 21:32:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac! \n2:Player 2 Roll Hit"} 
 Player 2 21:32:35 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":25,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 
 Player 2 21:32:35 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":24,"creatorCardId":325,"numberRolled":5,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 2 21:32:35 $REPLACE_STACK:  

 {"currentStack":[{"entityId":25,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3},{"entityId":24,"creatorCardId":325,"numberRolled":5,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":281}]} 
 Player 2 21:32:35 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 21:32:35 $SHOW_STACK_EFFECT:  

 {"effectId":25} 
 Player 2 21:32:38 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":3},{"type":2,"number":1},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":9,"originStackId":24},"isAfterActivation":true,"index":9} 
 Player 2 21:32:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac! \n2:Player 2 Roll Hit"} 
 Player 2 21:32:38 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":24,"creatorCardId":325,"numberRolled":5,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 2 21:32:38 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":24} 
 Player 2 21:32:38 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 21:32:38 $SHOW_STACK_EFFECT:  

 {"effectId":24} 
 Player 2 21:32:41 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":24} 
 Player 2 21:32:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":195,"_text":"Remove After Resolve AttackRoll 24  "}} 
 Player 2 21:32:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac!"} 
 Player 2 21:32:41 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":24,"creatorCardId":325,"numberRolled":5,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 2 21:32:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":196,"_text":"Response Remove After Resolve AttackRoll 24"},"childOfId":195} 
 Player 2 21:32:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":197,"_text":"Wait For Response From Player 2 "},"childOfId":195} 
 Player 2 21:32:41 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:32:41 $ACTION_MASSAGE_REMOVE:  

 {"id":197} 
 Player 2 21:32:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":198,"_text":"Wait For Response From Player 1 "},"childOfId":195} 
 Player 2 21:32:41 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 21:32:41 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 21:32:41 $ACTION_MASSAGE_REMOVE:  

 {"id":198} 
 Player 2 21:32:41 $ACTION_MASSAGE_REMOVE:  

 {"id":196} 
 Player 2 21:32:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":199,"_text":"Resolve CombatDamage 25 "}} 
 Player 2 21:32:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac!"} 
 Player 2 21:32:41 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":25,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 
 Player 2 21:32:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson will deal 1 combat damage to Isaac! "} 
 Player 2 21:32:41 $UPDATE_STACK_VIS:  

 {"stackId":25,"text":"Samson will deal 1 combat damage to Isaac!"} 
 Player 2 21:32:41 $MONSTER_GET_DAMAGED:  

 {"cardId":281,"hpLeft":5,"damageDealerId":325} 
 Player 2 21:32:42 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":325},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":10,"originStackId":-1},"isAfterActivation":true,"index":10} 
 Player 2 21:32:42 $NEXT_STACK_ID:  
 Player 2 21:32:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson will deal 1 combat damage to Isaac!  \n2:Activate Isaac! Effect DealDamage<DealDamage>"} 
 Player 2 21:32:42 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":26,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":true,"index":10,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 21:32:42 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":26,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":true,"index":10,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 21:32:42 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 21:32:42 $SHOW_STACK_EFFECT:  

 {"effectId":26} 
 Player 2 21:32:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":200,"_text":"Add ActivatePassiveEffect 26 "}} 
 Player 2 21:32:48 $SHOW_DECISION:  

 {"startCardId":281,"endCardId":315} 
 Player 2 21:32:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson will deal 1 combat damage to Isaac!  \n2:Activate Isaac! effect DealDamage<DealDamage>"} 
 Player 2 21:32:51 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[315],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":26,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":true,"index":10,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 21:32:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":201,"_text":"Response Adding ActivatePassiveEffect 26"},"childOfId":200} 
 Player 2 21:32:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":202,"_text":"Wait For Response From Player 1 "},"childOfId":200} 
 Player 2 21:32:51 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 21:32:51 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 21:32:51 $ACTION_MASSAGE_REMOVE:  

 {"id":202} 
 Player 2 21:32:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":203,"_text":"Wait For Response From Player 2 "},"childOfId":200} 
 Player 2 21:32:51 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:32:51 $ACTION_MASSAGE_REMOVE:  

 {"id":203} 
 Player 2 21:32:51 $ACTION_MASSAGE_REMOVE:  

 {"id":201} 
 Player 2 21:32:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":204,"_text":"Resolve ActivatePassiveEffect 26 "}} 
 Player 2 21:32:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson will deal 1 combat damage to Isaac!  \n2:Activate Isaac! effect DealDamage<DealDamage>"} 
 Player 2 21:32:51 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[315],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":26,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":true,"index":10,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 21:32:51 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":281,"particleType":6} 
 Player 2 21:32:53 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":281,"particleType":6} 
 Player 2 21:32:53 $PLAYER_GET_HIT:  

 {"playerId":1,"damage":1,"damageDealerId":281} 
 Player 2 21:32:53 $NEXT_STACK_ID:  
 Player 2 21:32:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson will deal 1 combat damage to Isaac!  \n2:Activate Isaac! effect DealDamage<DealDamage>"} 
 Player 2 21:32:53 $CLEAR_SE_VIS:  
 Player 2 21:32:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson will deal 1 combat damage to Isaac!  \n2:Activate Isaac! effect DealDamage<DealDamage> \n3:Player 1 Is About To Die"} 
 Player 2 21:32:53 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":25,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 
 Player 2 21:32:53 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[315],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":26,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"effectPassiveMeta":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":325},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":10,"originStackId":-1},"isAfterActivation":true,"index":10,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 21:32:53 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":27,"creatorCardId":315,"playerToDieCardId":315,"stackEffectType":15,"killerId":281}} 
 Player 2 21:32:53 $REPLACE_STACK:  

 {"currentStack":[{"entityId":25,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3},{"effectCollectedData":{"effectTargets":[315],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":26,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"effectPassiveMeta":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":325},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":10,"originStackId":-1},"isAfterActivation":true,"index":10,"hasDataBeenCollectedYet":true,"stackEffectType":14},{"entityId":27,"creatorCardId":315,"playerToDieCardId":315,"stackEffectType":15,"killerId":281}]} 
 Player 2 21:32:53 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":27,"creatorCardId":315,"playerToDieCardId":315,"stackEffectType":15,"killerId":281}} 
 Player 2 21:32:53 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 21:32:53 $SHOW_STACK_EFFECT:  

 {"effectId":27} 
 Player 2 21:32:56 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:32:56 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":281}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":11,"originStackId":-1},"isAfterActivation":true,"index":11} 
 Player 2 21:32:56 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":325},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":10,"originStackId":-1},"isAfterActivation":true,"index":10} 
 Player 2 21:32:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson will deal 1 combat damage to Isaac!  \n2:Activated Isaac! Effect \n3:Player 1 Is About To Die"} 
 Player 2 21:32:56 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[315],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":26,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"isAfterActivation":true,"index":10,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 21:32:56 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 21:32:56 $SHOW_STACK_EFFECT:  

 {"effectId":26} 
 Player 2 21:32:59 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":26} 
 Player 2 21:32:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":205,"_text":"Remove After Resolve ActivatePassiveEffect 26  "}} 
 Player 2 21:32:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson will deal 1 combat damage to Isaac!  \n2:Player 1 Is About To Die"} 
 Player 2 21:32:59 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[315],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":26,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"isAfterActivation":true,"index":10,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 21:32:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":206,"_text":"Response Remove After Resolve ActivatePassiveEffect 26"},"childOfId":205} 
 Player 2 21:32:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":207,"_text":"Wait For Response From Player 2 "},"childOfId":205} 
 Player 2 21:32:59 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:32:59 $ACTION_MASSAGE_REMOVE:  

 {"id":207} 
 Player 2 21:32:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":208,"_text":"Wait For Response From Player 1 "},"childOfId":205} 
 Player 2 21:32:59 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 21:32:59 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 21:32:59 $ACTION_MASSAGE_REMOVE:  

 {"id":208} 
 Player 2 21:32:59 $ACTION_MASSAGE_REMOVE:  

 {"id":206} 
 Player 2 21:32:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":209,"_text":"Resolve PlayerDeath 27 "}} 
 Player 2 21:32:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson will deal 1 combat damage to Isaac!  \n2:Player 1 Is About To Die"} 
 Player 2 21:33:00 $DO_STACK_EFFECT:  

 {"originPlayerId":2,"playerId":1,"currentStack":[{"entityId":25,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3},{"entityId":27,"creatorCardId":315,"playerToDieCardId":315,"stackEffectType":15,"killerId":281}]} 
 Player 2 21:33:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson will deal 1 combat damage to Isaac!  \n2:Player 1 Is About To Die"} 
 Player 2 21:33:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac! \n2:Player 1 Is About To Die \n3:Player 1 Is About To Pay Death Penalties"} 
 Player 2 21:33:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac! \n2:Player 1 Is About To Die \n3:Player 1 Is About To Pay Death Penalties"} 
 Player 2 21:33:03 $CLEAR_SE_VIS:  
 Player 2 21:33:03 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":25,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 
 Player 2 21:33:03 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":27,"creatorCardId":315,"playerToDieCardId":315,"stackEffectType":15,"killerId":281}} 
 Player 2 21:33:03 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":28,"creatorCardId":315,"playerToPayCardId":315,"stackEffectType":16}} 
 Player 2 21:33:03 $REPLACE_STACK:  

 {"currentStack":[{"entityId":25,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3},{"entityId":27,"creatorCardId":315,"playerToDieCardId":315,"stackEffectType":15,"killerId":281},{"entityId":28,"creatorCardId":315,"playerToPayCardId":315,"stackEffectType":16}]} 
 Player 2 21:33:03 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 21:33:03 $SHOW_STACK_EFFECT:  

 {"effectId":27} 
 Player 2 21:33:06 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":27} 
 Player 2 21:33:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":210,"_text":"Remove After Resolve PlayerDeath 27  "}} 
 Player 2 21:33:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac! \n2:Player 1 Is About To Pay Death Penalties"} 
 Player 2 21:33:06 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":27,"creatorCardId":315,"playerToDieCardId":315,"stackEffectType":15,"killerId":281}} 
 Player 2 21:33:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":211,"_text":"Response Remove After Resolve PlayerDeath 27"},"childOfId":210} 
 Player 2 21:33:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":212,"_text":"Wait For Response From Player 2 "},"childOfId":210} 
 Player 2 21:33:06 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:33:06 $ACTION_MASSAGE_REMOVE:  

 {"id":212} 
 Player 2 21:33:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":213,"_text":"Wait For Response From Player 1 "},"childOfId":210} 
 Player 2 21:33:06 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 21:33:06 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 21:33:06 $ACTION_MASSAGE_REMOVE:  

 {"id":213} 
 Player 2 21:33:06 $ACTION_MASSAGE_REMOVE:  

 {"id":211} 
 Player 2 21:33:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":214,"_text":"Resolve PlayerDeathPenalties 28 "}} 
 Player 2 21:33:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac! \n2:Player 1 Is About To Pay Death Penalties"} 
 Player 2 21:33:06 $DO_STACK_EFFECT:  

 {"originPlayerId":2,"playerId":1,"currentStack":[{"entityId":25,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3},{"entityId":28,"creatorCardId":315,"playerToPayCardId":315,"stackEffectType":16}]} 
 Player 2 21:33:11 $MOVE_CARD_END:  

 {"moveIndex":12,"cardId":115,"flipIfFlipped":true,"playerId":1} 
 Player 2 21:33:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac! \n2:Player 1 Is About To Pay Death Penalties"} 
 Player 2 21:33:11 $CLEAR_SE_VIS:  
 Player 2 21:33:11 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":25,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 
 Player 2 21:33:11 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":28,"creatorCardId":315,"playerToPayCardId":315,"stackEffectType":16}} 
 Player 2 21:33:11 $REPLACE_STACK:  

 {"currentStack":[{"entityId":25,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3},{"entityId":28,"creatorCardId":315,"playerToPayCardId":315,"stackEffectType":16}]} 
 Player 2 21:33:11 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 21:33:11 $SHOW_STACK_EFFECT:  

 {"effectId":28} 
 Player 2 21:33:14 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":28} 
 Player 2 21:33:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":216,"_text":"Remove After Resolve PlayerDeathPenalties 28  "}} 
 Player 2 21:33:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac!"} 
 Player 2 21:33:14 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":28,"creatorCardId":315,"playerToPayCardId":315,"stackEffectType":16}} 
 Player 2 21:33:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":217,"_text":"Response Remove After Resolve PlayerDeathPenalties 28"},"childOfId":216} 
 Player 2 21:33:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":218,"_text":"Wait For Response From Player 1 "},"childOfId":216} 
 Player 2 21:33:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 21:33:14 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 21:33:14 $ACTION_MASSAGE_REMOVE:  

 {"id":218} 
 Player 2 21:33:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":219,"_text":"Wait For Response From Player 2 "},"childOfId":216} 
 Player 2 21:33:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:33:14 $ACTION_MASSAGE_REMOVE:  

 {"id":219} 
 Player 2 21:33:14 $ACTION_MASSAGE_REMOVE:  

 {"id":217} 
 Player 2 21:33:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":220,"_text":"Resolve CombatDamage 25 "}} 
 Player 2 21:33:14 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":3},{"type":0,"number":325},{"type":0,"number":281}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":12,"originStackId":25},"isAfterActivation":true,"index":12} 
 Player 2 21:33:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac!"} 
 Player 2 21:33:15 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":25,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 
 Player 2 21:33:15 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":25} 
 Player 2 21:33:15 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 21:33:15 $SHOW_STACK_EFFECT:  

 {"effectId":25} 
 Player 2 21:33:17 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":25} 
 Player 2 21:33:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":221,"_text":"Remove After Resolve CombatDamage 25  "}} 
 Player 2 21:33:17 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 21:33:17 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":25,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 
 Player 2 21:33:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":222,"_text":"Response Remove After Resolve CombatDamage 25"},"childOfId":221} 
 Player 2 21:33:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":223,"_text":"Wait For Response From Player 2 "},"childOfId":221} 
 Player 2 21:33:17 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:33:17 $ACTION_MASSAGE_REMOVE:  

 {"id":223} 
 Player 2 21:33:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":224,"_text":"Wait For Response From Player 1 "},"childOfId":221} 
 Player 2 21:33:18 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 21:33:18 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 21:33:18 $ACTION_MASSAGE_REMOVE:  

 {"id":224} 
 Player 2 21:33:18 $ACTION_MASSAGE_REMOVE:  

 {"id":222} 
 Player 2 21:33:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":225,"_text":"Stack Was Emptied "}} 
 Player 2 21:33:18 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 21:33:18 $CLEAR_SE_VIS:  
 Player 2 21:33:24 $NEXT_STACK_ID:  
 Player 2 21:33:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 
 Player 2 21:33:24 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":29,"creatorCardId":325,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 2 21:33:24 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":29,"creatorCardId":325,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 2 21:33:24 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 21:33:24 $SHOW_STACK_EFFECT:  

 {"effectId":29} 
 Player 2 21:33:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":226,"_text":"Add AttackRoll 29 "}} 
 Player 2 21:33:27 $ROLL_DICE:  

 {"playerId":2} 
 Player 2 21:33:29 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":6} 
 Player 2 21:33:29 $UPDATE_STACK_VIS:  

 {"stackId":29,"text":"player rolled 6 vs Isaac!<Monster>"} 
 Player 2 21:33:29 $SHOW_DICE_ROLL:  

 {"stackId":29} 
 Player 2 21:33:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Isaac!<Monster>"} 
 Player 2 21:33:32 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:33:32 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":29,"creatorCardId":325,"numberRolled":6,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 2 21:33:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":227,"_text":"Response Adding AttackRoll 29"},"childOfId":226} 
 Player 2 21:33:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":228,"_text":"Wait For Response From Player 2 "},"childOfId":226} 
 Player 2 21:33:32 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:33:32 $ACTION_MASSAGE_REMOVE:  

 {"id":228} 
 Player 2 21:33:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":229,"_text":"Wait For Response From Player 1 "},"childOfId":226} 
 Player 2 21:33:32 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 21:33:32 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 21:33:32 $ACTION_MASSAGE_REMOVE:  

 {"id":229} 
 Player 2 21:33:32 $ACTION_MASSAGE_REMOVE:  

 {"id":227} 
 Player 2 21:33:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":230,"_text":"Resolve AttackRoll 29 "}} 
 Player 2 21:33:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Isaac!<Monster>"} 
 Player 2 21:33:32 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":29,"creatorCardId":325,"numberRolled":6,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 2 21:33:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":231,"_text":"Added 0 to original roll"}} 
 Player 2 21:33:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Rolled 3 Against Isaac!<Monster> 3"} 
 Player 2 21:33:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Roll Hit"} 
 Player 2 21:33:33 $NEXT_STACK_ID:  
 Player 2 21:33:33 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:33:33 $CLEAR_SE_VIS:  
 Player 2 21:33:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac! \n2:Player 2 Roll Hit"} 
 Player 2 21:33:33 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":30,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 
 Player 2 21:33:33 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":29,"creatorCardId":325,"numberRolled":6,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 2 21:33:33 $REPLACE_STACK:  

 {"currentStack":[{"entityId":30,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3},{"entityId":29,"creatorCardId":325,"numberRolled":6,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":281}]} 
 Player 2 21:33:33 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 21:33:33 $SHOW_STACK_EFFECT:  

 {"effectId":30} 
 Player 2 21:33:35 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":3},{"type":2,"number":1},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":13,"originStackId":29},"isAfterActivation":true,"index":13} 
 Player 2 21:33:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac! \n2:Player 2 Roll Hit"} 
 Player 2 21:33:35 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":29,"creatorCardId":325,"numberRolled":6,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 2 21:33:35 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":29} 
 Player 2 21:33:36 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 21:33:36 $SHOW_STACK_EFFECT:  

 {"effectId":29} 
 Player 2 21:33:38 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":29} 
 Player 2 21:33:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":232,"_text":"Remove After Resolve AttackRoll 29  "}} 
 Player 2 21:33:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac!"} 
 Player 2 21:33:38 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":29,"creatorCardId":325,"numberRolled":6,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 2 21:33:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":233,"_text":"Response Remove After Resolve AttackRoll 29"},"childOfId":232} 
 Player 2 21:33:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":234,"_text":"Wait For Response From Player 2 "},"childOfId":232} 
 Player 2 21:33:39 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:33:39 $ACTION_MASSAGE_REMOVE:  

 {"id":234} 
 Player 2 21:33:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":235,"_text":"Wait For Response From Player 1 "},"childOfId":232} 
 Player 2 21:33:39 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 21:33:39 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 21:33:39 $ACTION_MASSAGE_REMOVE:  

 {"id":235} 
 Player 2 21:33:39 $ACTION_MASSAGE_REMOVE:  

 {"id":233} 
 Player 2 21:33:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":236,"_text":"Resolve CombatDamage 30 "}} 
 Player 2 21:33:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac!"} 
 Player 2 21:33:39 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":30,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 
 Player 2 21:33:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson will deal 1 combat damage to Isaac! "} 
 Player 2 21:33:39 $UPDATE_STACK_VIS:  

 {"stackId":30,"text":"Samson will deal 1 combat damage to Isaac!"} 
 Player 2 21:33:39 $MONSTER_GET_DAMAGED:  

 {"cardId":281,"hpLeft":4,"damageDealerId":325} 
 Player 2 21:33:39 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":325},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":14,"originStackId":-1},"isAfterActivation":true,"index":14} 
 Player 2 21:33:39 $NEXT_STACK_ID:  
 Player 2 21:33:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson will deal 1 combat damage to Isaac!  \n2:Activate Isaac! Effect DealDamage<DealDamage>"} 
 Player 2 21:33:39 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":31,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":true,"index":14,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 21:33:39 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":31,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":true,"index":14,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 21:33:39 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 21:33:39 $SHOW_STACK_EFFECT:  

 {"effectId":31} 
 Player 2 21:33:42 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":237,"_text":"Add ActivatePassiveEffect 31 "}} 
 Player 2 21:33:42 $SHOW_DECISION:  

 {"startCardId":281,"endCardId":325} 
 Player 2 21:33:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson will deal 1 combat damage to Isaac!  \n2:Activate Isaac! effect DealDamage<DealDamage>"} 
 Player 2 21:33:45 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[325],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":31,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":true,"index":14,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 21:33:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":238,"_text":"Response Adding ActivatePassiveEffect 31"},"childOfId":237} 
 Player 2 21:33:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":239,"_text":"Wait For Response From Player 1 "},"childOfId":237} 
 Player 2 21:33:45 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 21:33:45 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 21:33:45 $ACTION_MASSAGE_REMOVE:  

 {"id":239} 
 Player 2 21:33:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":240,"_text":"Wait For Response From Player 2 "},"childOfId":237} 
 Player 2 21:33:45 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:33:45 $ACTION_MASSAGE_REMOVE:  

 {"id":240} 
 Player 2 21:33:45 $ACTION_MASSAGE_REMOVE:  

 {"id":238} 
 Player 2 21:33:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":241,"_text":"Resolve ActivatePassiveEffect 31 "}} 
 Player 2 21:33:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson will deal 1 combat damage to Isaac!  \n2:Activate Isaac! effect DealDamage<DealDamage>"} 
 Player 2 21:33:45 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[325],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":31,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":true,"index":14,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 21:33:45 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":281,"particleType":6} 
 Player 2 21:33:47 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":281,"particleType":6} 
 Player 2 21:33:47 $PLAYER_GET_HIT:  

 {"playerId":2,"damage":1,"damageDealerId":281} 
 Player 2 21:33:47 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":281}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":15,"originStackId":-1},"isAfterActivation":true,"index":15} 
 Player 2 21:33:47 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":325},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":14,"originStackId":-1},"isAfterActivation":true,"index":14} 
 Player 2 21:33:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson will deal 1 combat damage to Isaac!  \n2:Activated Isaac! Effect"} 
 Player 2 21:33:47 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[325],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":31,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"isAfterActivation":true,"index":14,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 21:33:47 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":31} 
 Player 2 21:33:47 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 21:33:47 $SHOW_STACK_EFFECT:  

 {"effectId":31} 
 Player 2 21:33:50 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":31} 
 Player 2 21:33:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":242,"_text":"Remove After Resolve ActivatePassiveEffect 31  "}} 
 Player 2 21:33:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson will deal 1 combat damage to Isaac! "} 
 Player 2 21:33:50 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[325],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":31,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"isAfterActivation":true,"index":14,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 21:33:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":243,"_text":"Response Remove After Resolve ActivatePassiveEffect 31"},"childOfId":242} 
 Player 2 21:33:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":244,"_text":"Wait For Response From Player 2 "},"childOfId":242} 
 Player 2 21:33:50 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:33:50 $ACTION_MASSAGE_REMOVE:  

 {"id":244} 
 Player 2 21:33:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":245,"_text":"Wait For Response From Player 1 "},"childOfId":242} 
 Player 2 21:33:50 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 21:33:50 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 21:33:51 $ACTION_MASSAGE_REMOVE:  

 {"id":245} 
 Player 2 21:33:51 $ACTION_MASSAGE_REMOVE:  

 {"id":243} 
 Player 2 21:33:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":246,"_text":"Resolve CombatDamage 30 "}} 
 Player 2 21:33:51 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":3},{"type":0,"number":325},{"type":0,"number":281}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":16,"originStackId":30},"isAfterActivation":true,"index":16} 
 Player 2 21:33:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson will deal 1 combat damage to Isaac! "} 
 Player 2 21:33:51 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":30,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 
 Player 2 21:33:51 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":30} 
 Player 2 21:33:51 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 21:33:51 $SHOW_STACK_EFFECT:  

 {"effectId":30} 
 Player 2 21:33:54 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":30} 
 Player 2 21:33:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":247,"_text":"Remove After Resolve CombatDamage 30  "}} 
 Player 2 21:33:54 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 21:33:54 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":30,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 
 Player 2 21:33:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":248,"_text":"Response Remove After Resolve CombatDamage 30"},"childOfId":247} 
 Player 2 21:33:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":249,"_text":"Wait For Response From Player 1 "},"childOfId":247} 
 Player 2 21:33:54 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 21:33:54 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 21:33:54 $ACTION_MASSAGE_REMOVE:  

 {"id":249} 
 Player 2 21:33:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":250,"_text":"Wait For Response From Player 2 "},"childOfId":247} 
 Player 2 21:33:54 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:33:54 $ACTION_MASSAGE_REMOVE:  

 {"id":250} 
 Player 2 21:33:54 $ACTION_MASSAGE_REMOVE:  

 {"id":248} 
 Player 2 21:33:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":251,"_text":"Stack Was Emptied "}} 
 Player 2 21:33:54 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 21:33:54 $CLEAR_SE_VIS:  
 Player 2 21:33:57 $PLAYER_GAIN_DMG:  

 {"playerId":2,"DMGToGain":3,"isTemp":true} 
 Player 2 21:33:59 $NEXT_STACK_ID:  
 Player 2 21:33:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 
 Player 2 21:34:00 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":32,"creatorCardId":325,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 2 21:34:00 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":32,"creatorCardId":325,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 2 21:34:00 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 21:34:00 $SHOW_STACK_EFFECT:  

 {"effectId":32} 
 Player 2 21:34:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":252,"_text":"Add AttackRoll 32 "}} 
 Player 2 21:34:03 $ROLL_DICE:  

 {"playerId":2} 
 Player 2 21:34:04 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":1} 
 Player 2 21:34:04 $UPDATE_STACK_VIS:  

 {"stackId":32,"text":"player rolled 1 vs Isaac!<Monster>"} 
 Player 2 21:34:04 $SHOW_DICE_ROLL:  

 {"stackId":32} 
 Player 2 21:34:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs Isaac!<Monster>"} 
 Player 2 21:34:07 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:34:07 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":32,"creatorCardId":325,"numberRolled":1,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 2 21:34:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":253,"_text":"Response Adding AttackRoll 32"},"childOfId":252} 
 Player 2 21:34:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":254,"_text":"Wait For Response From Player 2 "},"childOfId":252} 
 Player 2 21:34:07 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:34:07 $ACTION_MASSAGE_REMOVE:  

 {"id":254} 
 Player 2 21:34:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":255,"_text":"Wait For Response From Player 1 "},"childOfId":252} 
 Player 2 21:34:08 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 21:34:08 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 21:34:08 $ACTION_MASSAGE_REMOVE:  

 {"id":255} 
 Player 2 21:34:08 $ACTION_MASSAGE_REMOVE:  

 {"id":253} 
 Player 2 21:34:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":256,"_text":"Resolve AttackRoll 32 "}} 
 Player 2 21:34:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs Isaac!<Monster>"} 
 Player 2 21:34:08 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":32,"creatorCardId":325,"numberRolled":1,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 2 21:34:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":257,"_text":"Added 0 to original roll"}} 
 Player 2 21:34:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Rolled 3 Against Isaac!<Monster> 3"} 
 Player 2 21:34:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Roll Hit"} 
 Player 2 21:34:08 $NEXT_STACK_ID:  
 Player 2 21:34:08 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:34:08 $CLEAR_SE_VIS:  
 Player 2 21:34:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac! \n2:Player 2 Roll Hit"} 
 Player 2 21:34:08 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":33,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 
 Player 2 21:34:08 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":32,"creatorCardId":325,"numberRolled":1,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 2 21:34:08 $REPLACE_STACK:  

 {"currentStack":[{"entityId":33,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3},{"entityId":32,"creatorCardId":325,"numberRolled":1,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":281}]} 
 Player 2 21:34:08 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 21:34:08 $SHOW_STACK_EFFECT:  

 {"effectId":33} 
 Player 2 21:34:11 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":3},{"type":2,"number":1},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":17,"originStackId":32},"isAfterActivation":true,"index":17} 
 Player 2 21:34:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac! \n2:Player 2 Roll Hit"} 
 Player 2 21:34:11 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":32,"creatorCardId":325,"numberRolled":1,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 2 21:34:11 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":32} 
 Player 2 21:34:11 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 21:34:11 $SHOW_STACK_EFFECT:  

 {"effectId":32} 
 Player 2 21:34:14 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":32} 
 Player 2 21:34:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":258,"_text":"Remove After Resolve AttackRoll 32  "}} 
 Player 2 21:34:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac!"} 
 Player 2 21:34:14 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":32,"creatorCardId":325,"numberRolled":1,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 2 21:34:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":259,"_text":"Response Remove After Resolve AttackRoll 32"},"childOfId":258} 
 Player 2 21:34:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":260,"_text":"Wait For Response From Player 2 "},"childOfId":258} 
 Player 2 21:34:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:34:14 $ACTION_MASSAGE_REMOVE:  

 {"id":260} 
 Player 2 21:34:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":261,"_text":"Wait For Response From Player 1 "},"childOfId":258} 
 Player 2 21:34:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 21:34:14 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 21:34:14 $ACTION_MASSAGE_REMOVE:  

 {"id":261} 
 Player 2 21:34:14 $ACTION_MASSAGE_REMOVE:  

 {"id":259} 
 Player 2 21:34:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":262,"_text":"Resolve CombatDamage 33 "}} 
 Player 2 21:34:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson is going to hurt Isaac!"} 
 Player 2 21:34:14 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":33,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 
 Player 2 21:34:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson will deal 4 combat damage to Isaac! "} 
 Player 2 21:34:14 $UPDATE_STACK_VIS:  

 {"stackId":33,"text":"Samson will deal 4 combat damage to Isaac!"} 
 Player 2 21:34:14 $MONSTER_GET_DAMAGED:  

 {"cardId":281,"hpLeft":0,"damageDealerId":325} 
 Player 2 21:34:14 $NEXT_STACK_ID:  
 Player 2 21:34:14 $CLEAR_SE_VIS:  
 Player 2 21:34:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson will deal 4 combat damage to Isaac!  \n2:[object Object] Is Going To Be Killed by Samson"} 
 Player 2 21:34:14 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":33,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 
 Player 2 21:34:15 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":34,"creatorCardId":325,"monsterToDieCardId":281,"stackEffectType":5,"killerId":325}} 
 Player 2 21:34:15 $REPLACE_STACK:  

 {"currentStack":[{"entityId":33,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3},{"entityId":34,"creatorCardId":325,"monsterToDieCardId":281,"stackEffectType":5,"killerId":325}]} 
 Player 2 21:34:15 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":34,"creatorCardId":325,"monsterToDieCardId":281,"stackEffectType":5,"killerId":325}} 
 Player 2 21:34:15 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 21:34:15 $SHOW_STACK_EFFECT:  

 {"effectId":34} 
 Player 2 21:34:17 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:34:17 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":4},{"type":0,"number":325},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":18,"originStackId":-1},"isAfterActivation":true,"index":18} 
 Player 2 21:34:17 $NEXT_STACK_ID:  
 Player 2 21:34:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson will deal 4 combat damage to Isaac!  \n2:[object Object] Is Going To Be Killed by Samson"} 
 Player 2 21:34:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson will deal 4 combat damage to Isaac!  \n2:[object Object] Is Going To Be Killed by Samson \n3:Activate Isaac! Effect DealDamage<DealDamage>"} 
 Player 2 21:34:17 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":35,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":true,"index":18,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 21:34:17 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":35,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":true,"index":18,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 21:34:17 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 21:34:17 $SHOW_STACK_EFFECT:  

 {"effectId":35} 
 Player 2 21:34:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":263,"_text":"Add ActivatePassiveEffect 35 "}} 
 Player 2 21:34:20 $SHOW_DECISION:  

 {"startCardId":281,"endCardId":325} 
 Player 2 21:34:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson will deal 4 combat damage to Isaac!  \n2:[object Object] Is Going To Be Killed by Samson \n3:Activate Isaac! effect DealDamage<DealDamage>"} 
 Player 2 21:34:23 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[325],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":35,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":true,"index":18,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 21:34:23 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":264,"_text":"Response Adding ActivatePassiveEffect 35"},"childOfId":263} 
 Player 2 21:34:23 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":265,"_text":"Wait For Response From Player 2 "},"childOfId":263} 
 Player 2 21:34:23 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:34:23 $ACTION_MASSAGE_REMOVE:  

 {"id":265} 
 Player 2 21:34:23 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":266,"_text":"Wait For Response From Player 1 "},"childOfId":263} 
 Player 2 21:34:23 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 21:34:23 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 21:34:24 $ACTION_MASSAGE_REMOVE:  

 {"id":266} 
 Player 2 21:34:24 $ACTION_MASSAGE_REMOVE:  

 {"id":264} 
 Player 2 21:34:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":267,"_text":"Resolve ActivatePassiveEffect 35 "}} 
 Player 2 21:34:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson will deal 4 combat damage to Isaac!  \n2:[object Object] Is Going To Be Killed by Samson \n3:Activate Isaac! effect DealDamage<DealDamage>"} 
 Player 2 21:34:24 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[325],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":35,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":true,"index":18,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 21:34:24 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":281,"particleType":6} 
 Player 2 21:34:26 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":281,"particleType":6} 
 Player 2 21:34:26 $PLAYER_GET_HIT:  

 {"playerId":2,"damage":1,"damageDealerId":281} 
 Player 2 21:34:26 $NEXT_STACK_ID:  
 Player 2 21:34:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson will deal 4 combat damage to Isaac!  \n2:[object Object] Is Going To Be Killed by Samson \n3:Activate Isaac! effect DealDamage<DealDamage>"} 
 Player 2 21:34:26 $CLEAR_SE_VIS:  
 Player 2 21:34:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson will deal 4 combat damage to Isaac!  \n2:[object Object] Is Going To Be Killed by Samson \n3:Activate Isaac! effect DealDamage<DealDamage> \n4:Player 2 Is About To Die"} 
 Player 2 21:34:26 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":33,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 
 Player 2 21:34:26 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":34,"creatorCardId":325,"monsterToDieCardId":281,"stackEffectType":5,"killerId":325}} 
 Player 2 21:34:26 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[325],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":35,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"effectPassiveMeta":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":4},{"type":0,"number":325},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":18,"originStackId":-1},"isAfterActivation":true,"index":18,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 21:34:26 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":36,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":281}} 
 Player 2 21:34:26 $REPLACE_STACK:  

 {"currentStack":[{"entityId":33,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3},{"entityId":34,"creatorCardId":325,"monsterToDieCardId":281,"stackEffectType":5,"killerId":325},{"effectCollectedData":{"effectTargets":[325],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":35,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"effectPassiveMeta":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":4},{"type":0,"number":325},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":18,"originStackId":-1},"isAfterActivation":true,"index":18,"hasDataBeenCollectedYet":true,"stackEffectType":14},{"entityId":36,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":281}]} 
 Player 2 21:34:26 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":36,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":281}} 
 Player 2 21:34:26 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 21:34:26 $SHOW_STACK_EFFECT:  

 {"effectId":36} 
 Player 2 21:34:29 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:34:29 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":281}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":19,"originStackId":-1},"isAfterActivation":true,"index":19} 
 Player 2 21:34:29 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":4},{"type":0,"number":325},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":18,"originStackId":-1},"isAfterActivation":true,"index":18} 
 Player 2 21:34:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson will deal 4 combat damage to Isaac!  \n2:[object Object] Is Going To Be Killed by Samson \n3:Activated Isaac! Effect \n4:Player 2 Is About To Die"} 
 Player 2 21:34:29 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[325],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":35,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"isAfterActivation":true,"index":18,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 21:34:29 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 21:34:29 $SHOW_STACK_EFFECT:  

 {"effectId":35} 
 Player 2 21:34:32 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":35} 
 Player 2 21:34:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":268,"_text":"Remove After Resolve ActivatePassiveEffect 35  "}} 
 Player 2 21:34:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson will deal 4 combat damage to Isaac!  \n2:[object Object] Is Going To Be Killed by Samson \n3:Player 2 Is About To Die"} 
 Player 2 21:34:32 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[325],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":35,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"isAfterActivation":true,"index":18,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 21:34:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":269,"_text":"Response Remove After Resolve ActivatePassiveEffect 35"},"childOfId":268} 
 Player 2 21:34:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":270,"_text":"Wait For Response From Player 2 "},"childOfId":268} 
 Player 2 21:34:32 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:34:32 $ACTION_MASSAGE_REMOVE:  

 {"id":270} 
 Player 2 21:34:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":271,"_text":"Wait For Response From Player 1 "},"childOfId":268} 
 Player 2 21:34:32 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 21:34:32 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 21:34:32 $ACTION_MASSAGE_REMOVE:  

 {"id":271} 
 Player 2 21:34:32 $ACTION_MASSAGE_REMOVE:  

 {"id":269} 
 Player 2 21:34:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":272,"_text":"Resolve PlayerDeath 36 "}} 
 Player 2 21:34:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson will deal 4 combat damage to Isaac!  \n2:[object Object] Is Going To Be Killed by Samson \n3:Player 2 Is About To Die"} 
 Player 2 21:34:32 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":36,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":281}} 
 Player 2 21:34:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson will deal 4 combat damage to Isaac!  \n2:[object Object] Is Going To Be Killed by Samson \n3:Player 2 Has Died"} 
 Player 2 21:34:32 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":281,"particleType":5} 
 Player 2 21:34:32 $CANCEL_ATTACK:  
 Player 2 21:34:32 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":33} 
 Player 2 21:34:32 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":33} 
 Player 2 21:34:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":273,"_text":"Fizzle CombatDamage 33"}} 
 Player 2 21:34:32 $FIZZLE_STACK_EFFECT:  

 {"entityId":33} 
 Player 2 21:34:32 $NEXT_STACK_ID:  
 Player 2 21:34:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] Is Going To Be Killed by Samson \n2:Player 2 Has Died"} 
 Player 2 21:34:32 $CLEAR_SE_VIS:  
 Player 2 21:34:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] Is Going To Be Killed by Samson \n2:Player 2 Has Died \n3:Player 2 Is About To Pay Death Penalties"} 
 Player 2 21:34:32 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":34,"creatorCardId":325,"monsterToDieCardId":281,"stackEffectType":5,"killerId":325}} 
 Player 2 21:34:32 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":36,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":281}} 
 Player 2 21:34:32 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":37,"creatorCardId":325,"playerToPayCardId":325,"stackEffectType":16}} 
 Player 2 21:34:32 $REPLACE_STACK:  

 {"currentStack":[{"entityId":34,"creatorCardId":325,"monsterToDieCardId":281,"stackEffectType":5,"killerId":325},{"entityId":36,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":281},{"entityId":37,"creatorCardId":325,"playerToPayCardId":325,"stackEffectType":16}]} 
 Player 2 21:34:33 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":37,"creatorCardId":325,"playerToPayCardId":325,"stackEffectType":16}} 
 Player 2 21:34:33 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 21:34:33 $SHOW_STACK_EFFECT:  

 {"effectId":37} 
 Player 2 21:34:35 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:34:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] Is Going To Be Killed by Samson \n2:Player 2 Has Died \n3:Player 2 Is About To Pay Death Penalties"} 
 Player 2 21:34:35 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":36,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":281}} 
 Player 2 21:34:35 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 21:34:35 $SHOW_STACK_EFFECT:  

 {"effectId":36} 
 Player 2 21:34:38 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":36} 
 Player 2 21:34:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":274,"_text":"Remove After Resolve PlayerDeath 36  "}} 
 Player 2 21:34:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] Is Going To Be Killed by Samson \n2:Player 2 Is About To Pay Death Penalties"} 
 Player 2 21:34:38 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":36,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":281}} 
 Player 2 21:34:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":275,"_text":"Response Remove After Resolve PlayerDeath 36"},"childOfId":274} 
 Player 2 21:34:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":276,"_text":"Wait For Response From Player 2 "},"childOfId":274} 
 Player 2 21:34:38 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:34:38 $ACTION_MASSAGE_REMOVE:  

 {"id":276} 
 Player 2 21:34:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":277,"_text":"Wait For Response From Player 1 "},"childOfId":274} 
 Player 2 21:34:38 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 21:34:38 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 21:34:38 $ACTION_MASSAGE_REMOVE:  

 {"id":277} 
 Player 2 21:34:38 $ACTION_MASSAGE_REMOVE:  

 {"id":275} 
 Player 2 21:34:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":278,"_text":"Resolve PlayerDeathPenalties 37 "}} 
 Player 2 21:34:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] Is Going To Be Killed by Samson \n2:Player 2 Is About To Pay Death Penalties"} 
 Player 2 21:34:39 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":37,"creatorCardId":325,"playerToPayCardId":325,"stackEffectType":16}} 
 Player 2 21:34:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":279,"_text":"Player 2 pays Penalties"}} 
 Player 2 21:34:39 $SET_MONEY:  

 {"playerId":2,"numOfCoins":1} 
 Player 2 21:34:39 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-1}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":20,"originStackId":-1},"isAfterActivation":true,"index":20} 
 Player 2 21:34:43 $PLAYER_LOSE_LOOT:  

 {"playerId":2,"cardId":40} 
 Player 2 21:34:43 $MOVE_CARD:  

 {"moveIndex":13,"cardId":40,"placeID":330,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 21:34:43 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":40} 
 Player 2 21:34:43 $USE_ITEM:  

 {"cardId":325} 
 Player 2 21:34:43 $USE_ITEM:  

 {"cardId":326} 
 Player 2 21:34:43 $PLAYER_DIED:  

 {"playerId":2} 
 Player 2 21:34:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] Is Going To Be Killed by Samson \n2:Player 2 Paid Death Penalties"} 
 Player 2 21:34:43 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":37,"creatorCardId":325,"playerToPayCardId":325,"stackEffectType":16}} 
 Player 2 21:34:43 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":37} 
 Player 2 21:34:43 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 21:34:43 $SHOW_STACK_EFFECT:  

 {"effectId":37} 
 Player 2 21:34:46 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":37} 
 Player 2 21:34:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":280,"_text":"Remove After Resolve PlayerDeathPenalties 37  "}} 
 Player 2 21:34:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] Is Going To Be Killed by Samson"} 
 Player 2 21:34:46 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":37,"creatorCardId":325,"playerToPayCardId":325,"stackEffectType":16}} 
 Player 2 21:34:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":281,"_text":"Response Remove After Resolve PlayerDeathPenalties 37"},"childOfId":280} 
 Player 2 21:34:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":282,"_text":"Wait For Response From Player 1 "},"childOfId":280} 
 Player 2 21:34:46 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 21:34:46 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 21:34:46 $ACTION_MASSAGE_REMOVE:  

 {"id":282} 
 Player 2 21:34:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":283,"_text":"Wait For Response From Player 2 "},"childOfId":280} 
 Player 2 21:34:47 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:34:47 $ACTION_MASSAGE_REMOVE:  

 {"id":283} 
 Player 2 21:34:47 $ACTION_MASSAGE_REMOVE:  

 {"id":281} 
 Player 2 21:34:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":284,"_text":"Resolve MonsterDeath 34 "}} 
 Player 2 21:34:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] Is Going To Be Killed by Samson"} 
 Player 2 21:34:47 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":34,"creatorCardId":325,"monsterToDieCardId":281,"stackEffectType":5,"killerId":325}} 
 Player 2 21:34:47 $NEXT_STACK_ID:  
 Player 2 21:34:47 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:34:47 $CLEAR_SE_VIS:  
 Player 2 21:34:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Get Isaac!<Monster>'s Reward \n2:[object Object] Is Going To Be Killed by Samson"} 
 Player 2 21:34:47 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":38,"creatorCardId":325,"monsterCardWithRewardId":281,"playerCardIdToReward":325,"stackEffectType":7}} 
 Player 2 21:34:47 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":34,"creatorCardId":325,"monsterToDieCardId":281,"stackEffectType":5,"killerId":325}} 
 Player 2 21:34:47 $REPLACE_STACK:  

 {"currentStack":[{"entityId":38,"creatorCardId":325,"monsterCardWithRewardId":281,"playerCardIdToReward":325,"stackEffectType":7},{"entityId":34,"creatorCardId":325,"monsterToDieCardId":281,"stackEffectType":5,"killerId":325}]} 
 Player 2 21:34:47 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 21:34:47 $SHOW_STACK_EFFECT:  

 {"effectId":38} 
 Player 2 21:34:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Get Isaac!<Monster>'s Reward \n2:[object Object] Is Going To Be Killed by Samson"} 
 Player 2 21:34:50 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":34,"creatorCardId":325,"monsterToDieCardId":281,"stackEffectType":5,"killerId":325}} 
 Player 2 21:34:50 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":34} 
 Player 2 21:34:50 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 21:34:50 $SHOW_STACK_EFFECT:  

 {"effectId":34} 
 Player 2 21:34:52 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":34} 
 Player 2 21:34:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":285,"_text":"Remove After Resolve MonsterDeath 34  "}} 
 Player 2 21:34:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Get Isaac!<Monster>'s Reward"} 
 Player 2 21:34:53 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":34,"creatorCardId":325,"monsterToDieCardId":281,"stackEffectType":5,"killerId":325}} 
 Player 2 21:34:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":286,"_text":"Response Remove After Resolve MonsterDeath 34"},"childOfId":285} 
 Player 2 21:34:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":287,"_text":"Wait For Response From Player 2 "},"childOfId":285} 
 Player 2 21:34:53 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:34:53 $ACTION_MASSAGE_REMOVE:  

 {"id":287} 
 Player 2 21:34:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":288,"_text":"Wait For Response From Player 1 "},"childOfId":285} 
 Player 2 21:34:53 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 21:34:53 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 21:34:53 $ACTION_MASSAGE_REMOVE:  

 {"id":288} 
 Player 2 21:34:53 $ACTION_MASSAGE_REMOVE:  

 {"id":286} 
 Player 2 21:34:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":289,"_text":"Resolve MonsterRewardStackEffect 38 "}} 
 Player 2 21:34:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Get Isaac!<Monster>'s Reward"} 
 Player 2 21:34:53 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":38,"creatorCardId":325,"monsterCardWithRewardId":281,"playerCardIdToReward":325,"stackEffectType":7}} 
 Player 2 21:34:53 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 21:34:53 $REGISTER_PASSIVE_ITEM:  

 {"cardId":188} 
 Player 2 21:34:53 $MOVE_CARD:  

 {"moveIndex":14,"cardId":188,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 
 Player 2 21:34:53 $ADD_AN_ITEM:  

 {"playerId":2,"cardId":188,"isReward":true} 
 Player 2 21:34:54 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":188}],"result":true,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":21,"originStackId":-1},"isAfterActivation":true,"index":21} 
 Player 2 21:34:54 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":22,"originStackId":38},"isAfterActivation":true,"index":22} 
 Player 2 21:34:54 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 21:34:54 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":38} 
 Player 2 21:34:54 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":38} 
 Player 2 21:34:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":290,"_text":"Fizzle MonsterRewardStackEffect 38"}} 
 Player 2 21:34:54 $FIZZLE_STACK_EFFECT:  

 {"entityId":38} 
 Player 2 21:34:54 $CLEAR_SE_VIS:  
 Player 2 21:34:54 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:34:54 $CLEAR_SE_VIS:  
 Player 2 21:34:54 $REPLACE_STACK:  

 {"currentStack":[]} 
 Player 2 21:34:54 $LOG_ERROR:  

 "error while resolving stack effect 38" 
//////Error From Player 2////
 [object Object]
////// 
 Player 2 21:34:54 $SHOW_ANNOUNCEMENT:  

 {"text":"error while resolving stack effect 38"} 
 Player 2 21:34:54 $LOG_ERROR:  

 {"message":"\"Cannot read property '_playerId' of null\"","stack":"\"TypeError: Cannot read property '_playerId' of null\\n    at Function.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:230:32), <anonymous>:731:92)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\\n    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113284:71\\n    at new Promise (<anonymous>)\\n    at 486.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113264:14)\\n    at Function.CardManager.moveCardTo (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:230:32), <anonymous>:693:16)\\n    at Player.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:230:32), <anonymous>:1312:68)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\""} 
 Player 2 21:34:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":291,"_text":"Stack Was Emptied "}} 
 Player 2 21:34:55 $CLEAR_SE_VIS:  
 Player 2 21:34:55 $CLEAR_SE_VIS:  
 Player 2 21:34:55 $END_TURN:  
 Player 2 21:34:55 $SET_TURN:  

 {"playerId":1} 
 Player 2 21:34:55 $START_TURN:  

 {"playerId":1} 
 Player 2 21:34:55 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":4},{"type":2,"number":3},{"type":0,"number":325},{"type":0,"number":281}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":23,"originStackId":33},"isAfterActivation":true,"index":23} 
 Player 2 21:34:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":292,"_text":"Stack Was Emptied "}} 
 Player 2 21:34:55 $TURN_PLAYER_DO_STACK_EFFECT:  

 {"playerId":1} 
 Player 2 21:34:55 $STACK_EMPTIED:  

 {"playerId":1} 
 Player 2 21:34:57 $STACK_EMPTIED:  

 {"playerId":1} 
 Player 2 21:34:57 $STACK_EMPTIED:  

 {"playerId":1} 
 Player 2 21:34:57 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 21:34:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 
 Player 2 21:34:59 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 21:34:59 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 21:35:00 $MOVE_CARD_END:  

 {"moveIndex":15,"cardId":18,"flipIfFlipped":false,"playerId":1} 
 Player 2 21:35:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 
 Player 2 21:35:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 
 Player 2 21:35:03 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 21:35:03 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 21:43:00 $MATCH: 