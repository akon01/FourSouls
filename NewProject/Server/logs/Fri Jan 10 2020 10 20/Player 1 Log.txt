Start Log 
 Player 1 10:20:34 $START_GAME:  
 Player 1 10:20:34 $MOVE_TO_TABLE:  
 Player 1 10:20:42 $FINISH_LOAD:  

 {"id":1,"turnPlayerId":2} 
 Player 1 10:20:42 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":276}],"result":true,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 1 10:20:48 $MOVE_CARD_END:  

 {"moveIndex":1,"cardId":58,"flipIfFlipped":false,"playerId":2} 
 Player 1 10:20:48 $MOVE_CARD_END:  

 {"moveIndex":2,"cardId":24,"flipIfFlipped":false,"playerId":2} 
 Player 1 10:20:49 $MOVE_CARD_END:  

 {"moveIndex":3,"cardId":44,"flipIfFlipped":false,"playerId":2} 
 Player 1 10:20:49 $MOVE_CARD_END:  

 {"moveIndex":4,"cardId":102,"flipIfFlipped":false,"playerId":2} 
 Player 1 10:20:50 $MOVE_CARD_END:  

 {"moveIndex":5,"cardId":98,"flipIfFlipped":false,"playerId":2} 
 Player 1 10:20:50 $MOVE_CARD_END:  

 {"moveIndex":6,"cardId":87,"flipIfFlipped":false,"playerId":2} 
 Player 1 10:20:51 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 10:20:51 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 10:20:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 10:20:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 10:20:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 10:20:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 10:20:51 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 10:20:52 $MOVE_CARD_END:  

 {"moveIndex":7,"cardId":15,"flipIfFlipped":false,"playerId":2} 
 Player 1 10:20:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 10:20:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 10:20:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 10:20:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 10:20:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 10:20:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 10:20:52 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 10:21:02 $MOVE_CARD:  

 {"moveIndex":8,"cardId":184,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Hand"} 
 Player 1 10:21:03 $REGISTER_PASSIVE_ITEM:  

 {"cardId":184} 
 Player 1 10:21:03 $MOVE_CARD:  

 {"moveIndex":9,"cardId":184,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 
 Player 1 10:21:03 $ADD_AN_ITEM:  

 {"playerId":1,"cardId":184,"isReward":true} 
 Player 1 10:21:03 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":184}],"result":true,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 1 10:21:03 $NEXT_STACK_ID:  
 Player 1 10:21:03 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 10:21:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 
 Player 1 10:21:03 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":2,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"effectToDo":{"effectName":"AddPlayLootOpportunity","cardEffectNum":0,"cardPlayerId":1,"cardId":184,"effctType":0},"isAfterActivation":true,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 10:21:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 
 Player 1 10:21:03 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":2,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"effectToDo":{"effectName":"AddPlayLootOpportunity","cardEffectNum":0,"cardPlayerId":1,"cardId":184,"effctType":0},"isAfterActivation":true,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 10:21:03 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":10,"_text":"Add ActivatePassiveEffect 2 "}} 
 Player 1 10:21:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 
 Player 1 10:21:04 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 1 10:21:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 
 Player 1 10:21:04 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":2,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"effectToDo":{"effectName":"AddPlayLootOpportunity","cardEffectNum":0,"cardPlayerId":1,"cardId":184,"effctType":0},"isAfterActivation":true,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 10:21:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":11,"_text":"Response Adding ActivatePassiveEffect 2"},"childOfId":10} 
 Player 1 10:21:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 
 Player 1 10:21:04 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 10:21:04 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 10:21:04 $ACTION_MASSAGE_REMOVE:  

 {"id":12} 
 Player 1 10:21:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 
 Player 1 10:21:04 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 10:21:04 $ACTION_MASSAGE_REMOVE:  

 {"id":13} 
 Player 1 10:21:04 $ACTION_MASSAGE_REMOVE:  

 {"id":11} 
 Player 1 10:21:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":14,"_text":"Resolve ActivatePassiveEffect 2 "}} 
 Player 1 10:21:04 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":184,"particleType":6} 
 Player 1 10:21:06 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":184,"particleType":6} 
 Player 1 10:21:06 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":184}],"result":true,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 1 10:21:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 
 Player 1 10:21:06 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":2,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"isAfterActivation":true,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 10:21:06 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 1 10:21:06 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 10:21:06 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":2,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"isAfterActivation":true,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 10:21:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":15,"_text":"Remove After Resolve ActivatePassiveEffect 2  "}} 
 Player 1 10:21:06 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 10:21:06 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":2,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"isAfterActivation":true,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 10:21:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":16,"_text":"Response Remove After Resolve ActivatePassiveEffect 2"},"childOfId":15} 
 Player 1 10:21:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 
 Player 1 10:21:06 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 10:21:06 $ACTION_MASSAGE_REMOVE:  

 {"id":17} 
 Player 1 10:21:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 
 Player 1 10:21:06 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 10:21:06 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 10:21:07 $ACTION_MASSAGE_REMOVE:  

 {"id":18} 
 Player 1 10:21:07 $ACTION_MASSAGE_REMOVE:  

 {"id":16} 
 Player 1 10:21:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":19,"_text":"Stack Was Emptied "}} 
 Player 1 10:21:07 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 10:21:07 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 1 10:21:07 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 1 10:21:07 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 1 10:21:07 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 1 10:21:07 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 1 10:21:07 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 1 10:21:07 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 1 10:21:07 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 1 10:21:07 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 1 10:21:07 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 1 10:21:07 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 1 10:21:07 $TURN_PLAYER_DO_STACK_EFFECT:  

 {"playerId":2} 
 Player 1 10:21:08 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 1 10:21:09 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 1 10:21:12 $MOVE_CARD_END:  

 {"moveIndex":10,"cardId":131,"flipIfFlipped":true,"playerId":2} 
 Player 1 10:21:20 $MOVE_CARD_END:  

 {"moveIndex":11,"cardId":194,"flipIfFlipped":true,"playerId":2} 
 Player 1 10:21:20 $MOVE_CARD_END:  

 {"moveIndex":12,"cardId":194,"flipIfFlipped":true,"playerId":2} 
 Player 1 10:21:24 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 10:21:24 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 10:21:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil "} 
 Player 1 10:21:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil "} 
 Player 1 10:21:24 $MOVE_CARD_END:  

 {"moveIndex":13,"cardId":131,"flipIfFlipped":true,"playerId":2} 
 Player 1 10:21:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil "} 
 Player 1 10:21:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil "} 
 Player 1 10:21:42 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 10:21:45 $MOVE_CARD_END:  

 {"moveIndex":14,"cardId":194,"flipIfFlipped":true,"playerId":2} 
 Player 1 10:21:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil "} 
 Player 1 10:21:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil "} 
 Player 1 10:21:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 10:21:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 10:21:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 10:21:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 10:21:45 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 10:21:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 10:21:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 10:21:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 10:21:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 10:21:53 $LOG_ERROR:  

 "error while resolving stack effect 4" 
//////Error From Player 1////
 [object Object]
////// 
 Player 1 10:21:53 $LOG_ERROR:  

 {"message":"\"Cannot read property 'node' of null\"","stack":"\"TypeError: Cannot read property 'node' of null\\n    at ActivatePassiveEffect.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/StackEffects/Activate%20Passive%20Effect.js:220:77)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\\n    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\\n    at new Promise (<anonymous>)\\n    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\\n    at ActivatePassiveEffect.resolve (http://localhost:7456/preview-scripts/assets/Script/StackEffects/Activate%20Passive%20Effect.js:175:16)\\n    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/Stack.js:117:58)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\""} 
 Player 1 10:21:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 10:21:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 10:21:53 $FINISH_DO_STACK_EFFECT:  

 {"playerId":2,"newStack":[{"entityId":3,"creatorCardId":265,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":2,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":131,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"effectCollectedData":null,"entityId":4,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"effectPassiveMeta":{"passiveEvent":"PLAYER_LOSE_ITEM","args":[{"type":0,"number":184}],"result":null,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":1},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}]} 
 Player 1 10:21:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 10:21:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 10:21:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 10:21:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 10:21:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 10:21:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 10:21:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 10:21:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 10:21:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 10:21:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 10:21:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 10:21:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 10:21:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 10:21:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 10:22:02 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 10:22:02 $MOVE_CARD_END:  

 {"moveIndex":15,"cardId":184,"flipIfFlipped":true,"playerId":2} 
 Player 1 10:22:03 $MOVE_CARD_END:  

 {"moveIndex":16,"cardId":131,"flipIfFlipped":true,"playerId":2} 
 Player 1 10:22:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil "} 
 Player 1 10:22:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil "} 
 Player 1 10:22:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil "} 
 Player 1 10:22:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil "} 
 Player 1 10:22:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil "} 
 Player 1 10:22:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil "} 
 Player 1 10:22:04 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 10:23:51 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 10:23:52 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 1 10:23:52 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 1 10:23:52 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 1 10:23:52 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 1 10:23:52 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 1 10:23:52 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 1 10:23:52 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 1 10:23:52 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 1 10:23:52 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 1 10:23:52 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 1 10:23:52 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 1 10:23:52 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 1 10:23:52 $ACTION_MASSAGE_REMOVE:  

 {"id":24} 
 Player 1 10:23:52 $ACTION_MASSAGE_REMOVE:  

 {"id":25} 
 Player 1 10:23:52 $ACTION_MASSAGE_REMOVE:  

 {"id":29} 
 Player 1 10:23:52 $ACTION_MASSAGE_REMOVE:  

 {"id":30} 
 Player 1 10:23:52 $ACTION_MASSAGE_REMOVE:  

 {"id":34} 
 Player 1 10:23:52 $ACTION_MASSAGE_REMOVE:  

 {"id":35} 
 Player 1 10:23:52 $ACTION_MASSAGE_REMOVE:  

 {"id":39} 
 Player 1 10:23:52 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 10:23:52 $NEXT_STACK_ID:  
 Player 1 10:23:52 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 10:23:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 10:23:52 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":5,"creatorCardId":275,"turnPlayerCardId":275,"stackEffectType":13}} 
 Player 1 10:23:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 10:23:52 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":5,"creatorCardId":275,"turnPlayerCardId":275,"stackEffectType":13}} 
 Player 1 10:23:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":40,"_text":"Add StartTurnLoot 5 "}} 
 Player 1 10:23:52 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 10:23:52 $ACTION_MASSAGE_REMOVE:  

 {"id":40} 
 Player 1 10:23:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 10:23:52 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":5,"creatorCardId":275,"turnPlayerCardId":275,"stackEffectType":13}} 
 Player 1 10:23:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":41,"_text":"Response Adding StartTurnLoot 5"},"childOfId":40} 
 Player 1 10:23:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":42,"_text":"Wait For Response From Player 1 "},"childOfId":40} 
 Player 1 10:23:52 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 10:23:52 $ACTION_MASSAGE_REMOVE:  

 {"id":42} 
 Player 1 10:23:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":43,"_text":"Wait For Response From Player 2 "},"childOfId":40} 
 Player 1 10:23:52 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 10:23:53 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 10:23:54 $ACTION_MASSAGE_REMOVE:  

 {"id":43} 
 Player 1 10:23:54 $ACTION_MASSAGE_REMOVE:  

 {"id":41} 
 Player 1 10:23:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":44,"_text":"Resolve StartTurnLoot 5 "}} 
 Player 1 10:23:54 $DRAW_CARD:  

 {"deckType":1} 
 Player 1 10:23:54 $MOVE_CARD:  

 {"moveIndex":17,"cardId":25,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 1 10:23:54 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":25} 
 Player 1 10:23:54 $FLIP_CARD:  

 {"cardId":25} 
 Player 1 10:23:54 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":25} 
 Player 1 10:23:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 10:23:54 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":5,"creatorCardId":275,"turnPlayerCardId":275,"stackEffectType":13}} 
 Player 1 10:23:54 $ACTION_MASSAGE_REMOVE:  

 {"id":44} 
 Player 1 10:23:54 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 10:23:54 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":5,"creatorCardId":275,"turnPlayerCardId":275,"stackEffectType":13}} 
 Player 1 10:23:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":45,"_text":"Remove After Resolve StartTurnLoot 5  "}} 
 Player 1 10:23:54 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 10:23:54 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":5,"creatorCardId":275,"turnPlayerCardId":275,"stackEffectType":13}} 
 Player 1 10:23:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":46,"_text":"Response Remove After Resolve StartTurnLoot 5"},"childOfId":45} 
 Player 1 10:23:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":47,"_text":"Wait For Response From Player 2 "},"childOfId":45} 
 Player 1 10:23:55 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 10:23:55 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 10:23:55 $ACTION_MASSAGE_REMOVE:  

 {"id":47} 
 Player 1 10:23:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":48,"_text":"Wait For Response From Player 1 "},"childOfId":45} 
 Player 1 10:23:55 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 10:23:55 $ACTION_MASSAGE_REMOVE:  

 {"id":48} 
 Player 1 10:23:55 $ACTION_MASSAGE_REMOVE:  

 {"id":46} 
 Player 1 10:23:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":49,"_text":"Stack Was Emptied "}} 
 Player 1 10:23:55 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 10:23:55 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 1 10:23:55 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 1 10:23:55 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 1 10:23:55 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 1 10:23:55 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 1 10:23:55 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 1 10:23:55 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 1 10:23:55 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 1 10:23:55 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 1 10:23:55 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 1 10:23:55 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 1 10:23:55 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 1 10:23:55 $ACTION_MASSAGE_REMOVE:  

 {"id":24} 
 Player 1 10:23:55 $ACTION_MASSAGE_REMOVE:  

 {"id":25} 
 Player 1 10:23:55 $ACTION_MASSAGE_REMOVE:  

 {"id":29} 
 Player 1 10:23:55 $ACTION_MASSAGE_REMOVE:  

 {"id":30} 
 Player 1 10:23:55 $ACTION_MASSAGE_REMOVE:  

 {"id":34} 
 Player 1 10:23:55 $ACTION_MASSAGE_REMOVE:  

 {"id":35} 
 Player 1 10:23:55 $ACTION_MASSAGE_REMOVE:  

 {"id":39} 
 Player 1 10:23:56 $ACTION_MASSAGE_REMOVE:  

 {"id":40} 
 Player 1 10:23:56 $ACTION_MASSAGE_REMOVE:  

 {"id":44} 
 Player 1 10:23:56 $ACTION_MASSAGE_REMOVE:  

 {"id":45} 
 Player 1 10:23:56 $ACTION_MASSAGE_REMOVE:  

 {"id":49} 
 Player 1 10:23:56 $ACTION_MASSAGE_REMOVE:  

 {"id":49} 
 Player 1 10:23:57 $ACTION_MASSAGE_REMOVE:  

 {"id":45} 
 Player 1 10:24:03 $SHOW_DECISION:  

 {"startCardId":275,"endCardId":214} 
 Player 1 10:24:06 $NEXT_STACK_ID:  
 Player 1 10:24:06 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 10:24:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Conjoined Fatty"} 
 Player 1 10:24:06 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":6,"creatorCardId":275,"attackingPlayerCardId":275,"idOfCardBeingAttacked":214,"stackEffectType":4}} 
 Player 1 10:24:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Conjoined Fatty"} 
 Player 1 10:24:06 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":6,"creatorCardId":275,"attackingPlayerCardId":275,"idOfCardBeingAttacked":214,"stackEffectType":4}} 
 Player 1 10:24:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":50,"_text":"Add DeclareAttack 6 "}} 
 Player 1 10:24:06 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 10:24:06 $ACTION_MASSAGE_REMOVE:  

 {"id":50} 
 Player 1 10:24:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Conjoined Fatty"} 
 Player 1 10:24:06 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":6,"creatorCardId":275,"attackingPlayerCardId":275,"idOfCardBeingAttacked":214,"stackEffectType":4}} 
 Player 1 10:24:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":51,"_text":"Response Adding DeclareAttack 6"},"childOfId":50} 
 Player 1 10:24:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":52,"_text":"Wait For Response From Player 1 "},"childOfId":50} 
 Player 1 10:24:06 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 10:24:07 $ACTION_MASSAGE_REMOVE:  

 {"id":52} 
 Player 1 10:24:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":53,"_text":"Wait For Response From Player 2 "},"childOfId":50} 
 Player 1 10:24:07 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 10:24:07 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 10:24:07 $ACTION_MASSAGE_REMOVE:  

 {"id":53} 
 Player 1 10:24:07 $ACTION_MASSAGE_REMOVE:  

 {"id":51} 
 Player 1 10:24:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":54,"_text":"Resolve DeclareAttack 6 "}} 
 Player 1 10:24:07 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":214,"particleType":5} 
 Player 1 10:24:07 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":3,"originStackId":6},"isAfterActivation":true,"index":3} 
 Player 1 10:24:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Conjoined Fatty"} 
 Player 1 10:24:07 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":6,"creatorCardId":275,"attackingPlayerCardId":275,"idOfCardBeingAttacked":214,"stackEffectType":4}} 
 Player 1 10:24:07 $ACTION_MASSAGE_REMOVE:  

 {"id":54} 
 Player 1 10:24:07 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 10:24:07 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":6,"creatorCardId":275,"attackingPlayerCardId":275,"idOfCardBeingAttacked":214,"stackEffectType":4}} 
 Player 1 10:24:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":55,"_text":"Remove After Resolve DeclareAttack 6  "}} 
 Player 1 10:24:07 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 10:24:07 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":6,"creatorCardId":275,"attackingPlayerCardId":275,"idOfCardBeingAttacked":214,"stackEffectType":4}} 
 Player 1 10:24:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":56,"_text":"Response Remove After Resolve DeclareAttack 6"},"childOfId":55} 
 Player 1 10:24:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":57,"_text":"Wait For Response From Player 2 "},"childOfId":55} 
 Player 1 10:24:08 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 10:24:08 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 10:24:08 $ACTION_MASSAGE_REMOVE:  

 {"id":57} 
 Player 1 10:24:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":58,"_text":"Wait For Response From Player 1 "},"childOfId":55} 
 Player 1 10:24:08 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 10:24:08 $ACTION_MASSAGE_REMOVE:  

 {"id":58} 
 Player 1 10:24:08 $ACTION_MASSAGE_REMOVE:  

 {"id":56} 
 Player 1 10:24:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":59,"_text":"Stack Was Emptied "}} 
 Player 1 10:24:08 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 10:24:08 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 1 10:24:08 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 1 10:24:08 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 1 10:24:09 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 1 10:24:09 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 1 10:24:09 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 1 10:24:09 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 1 10:24:09 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 1 10:24:09 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 1 10:24:09 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 1 10:24:09 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 1 10:24:09 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 1 10:24:09 $ACTION_MASSAGE_REMOVE:  

 {"id":24} 
 Player 1 10:24:09 $ACTION_MASSAGE_REMOVE:  

 {"id":25} 
 Player 1 10:24:09 $ACTION_MASSAGE_REMOVE:  

 {"id":29} 
 Player 1 10:24:09 $ACTION_MASSAGE_REMOVE:  

 {"id":30} 
 Player 1 10:24:09 $ACTION_MASSAGE_REMOVE:  

 {"id":34} 
 Player 1 10:24:09 $ACTION_MASSAGE_REMOVE:  

 {"id":35} 
 Player 1 10:24:09 $ACTION_MASSAGE_REMOVE:  

 {"id":39} 
 Player 1 10:24:09 $ACTION_MASSAGE_REMOVE:  

 {"id":40} 
 Player 1 10:24:09 $ACTION_MASSAGE_REMOVE:  

 {"id":44} 
 Player 1 10:24:09 $ACTION_MASSAGE_REMOVE:  

 {"id":45} 
 Player 1 10:24:09 $ACTION_MASSAGE_REMOVE:  

 {"id":49} 
 Player 1 10:24:09 $ACTION_MASSAGE_REMOVE:  

 {"id":50} 
 Player 1 10:24:09 $ACTION_MASSAGE_REMOVE:  

 {"id":54} 
 Player 1 10:24:09 $ACTION_MASSAGE_REMOVE:  

 {"id":55} 
 Player 1 10:24:09 $ACTION_MASSAGE_REMOVE:  

 {"id":59} 
 Player 1 10:24:10 $ACTION_MASSAGE_REMOVE:  

 {"id":59} 
 Player 1 10:24:10 $ACTION_MASSAGE_REMOVE:  

 {"id":55} 
 Player 1 10:24:11 $NEXT_STACK_ID:  
 Player 1 10:24:11 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 10:24:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 10:24:11 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":7,"creatorCardId":275,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":214}} 
 Player 1 10:24:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 10:24:11 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":275,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":214}} 
 Player 1 10:24:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":60,"_text":"Add AttackRoll 7 "}} 
 Player 1 10:24:11 $ROLL_DICE:  

 {"playerId":1} 
 Player 1 10:24:13 $ROLL_DICE_ENDED:  

 {"playerId":1,"numberRolled":2} 
 Player 1 10:24:13 $UPDATE_STACK_VIS:  

 {"stackId":7,"text":"player rolled 2 vs Conjoined Fatty<Monster>"} 
 Player 1 10:24:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Conjoined Fatty<Monster>"} 
 Player 1 10:24:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 10:24:14 $ACTION_MASSAGE_REMOVE:  

 {"id":60} 
 Player 1 10:24:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Conjoined Fatty<Monster>"} 
 Player 1 10:24:14 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":7,"creatorCardId":275,"numberRolled":2,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":214}} 
 Player 1 10:24:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":61,"_text":"Response Adding AttackRoll 7"},"childOfId":60} 
 Player 1 10:24:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":62,"_text":"Wait For Response From Player 1 "},"childOfId":60} 
 Player 1 10:24:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 10:24:16 $SHOW_DECISION:  

 {"startCardId":275,"endCardId":276} 
 Player 1 10:24:19 $NEXT_STACK_ID:  
 Player 1 10:24:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Conjoined Fatty<Monster>"} 
 Player 1 10:24:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 1 10:24:19 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":8,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 1 10:24:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 1 10:24:19 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":8,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 1 10:24:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":63,"_text":"Add ActivateItem 8 "}} 
 Player 1 10:24:33 $SHOW_DECISION:  

 {"startCardId":276,"endCardId":275} 
 Player 1 10:24:36 $USE_ITEM:  

 {"cardId":276} 
 Player 1 10:24:36 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 10:24:36 $ACTION_MASSAGE_REMOVE:  

 {"id":63} 
 Player 1 10:24:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 1 10:24:36 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":8,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 10:24:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":64,"_text":"Response Adding ActivateItem 8"},"childOfId":63} 
 Player 1 10:24:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":65,"_text":"Wait For Response From Player 1 "},"childOfId":63} 
 Player 1 10:24:36 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 10:24:40 $ACTION_MASSAGE_REMOVE:  

 {"id":65} 
 Player 1 10:24:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":66,"_text":"Wait For Response From Player 2 "},"childOfId":63} 
 Player 1 10:24:40 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 10:24:40 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 10:24:43 $ACTION_MASSAGE_REMOVE:  

 {"id":66} 
 Player 1 10:24:43 $ACTION_MASSAGE_REMOVE:  

 {"id":64} 
 Player 1 10:24:43 $ACTION_MASSAGE_REMOVE:  

 {"id":62} 
 Player 1 10:24:43 $ACTION_MASSAGE_REMOVE:  

 {"id":61} 
 Player 1 10:24:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 1 10:24:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 1 10:24:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 activated Eden"} 
 Player 1 10:24:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 activated Eden"} 
 Player 1 10:24:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 activated Eden"} 
 Player 1 10:24:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 activated Eden"} 
 Player 1 10:24:52 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 10:24:56 $MOVE_CARD_END:  

 {"moveIndex":18,"cardId":15,"flipIfFlipped":true,"playerId":2} 
 Player 1 10:24:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 activated Eden"} 
 Player 1 10:24:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 activated Eden"} 
 Player 1 10:24:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 1 Penny(7) "} 
 Player 1 10:24:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 1 Penny(7) "} 
 Player 1 10:24:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 1 Penny(7) "} 
 Player 1 10:24:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 1 Penny(7) "} 
 Player 1 10:24:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 1 Penny(7) "} 
 Player 1 10:24:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 1 Penny(7) "} 
 Player 1 10:24:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 1 Penny(7) "} 
 Player 1 10:24:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 1 Penny(7) "} 
 Player 1 10:24:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 1 Penny(7) "} 
 Player 1 10:24:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 1 Penny(7) "} 
 Player 1 10:24:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 1 Penny(7) "} 
 Player 1 10:24:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 1 Penny(7) "} 
 Player 1 10:24:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 1 Penny(7) "} 
 Player 1 10:24:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 1 Penny(7) "} 
 Player 1 10:24:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 1 Penny(7) "} 
 Player 1 10:24:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 1 Penny(7) "} 
 Player 1 10:24:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 1 Penny(7) "} 
 Player 1 10:24:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 1 Penny(7) "} 
 Player 1 10:24:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 1 Penny(7) "} 
 Player 1 10:24:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 1 Penny(7) "} 
 Player 1 10:24:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 1 Penny(7)  \n4:Player 2 activated Eden"} 
 Player 1 10:24:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 1 Penny(7)  \n4:Player 2 activated Eden"} 
 Player 1 10:24:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 1 Penny(7)  \n4:Player 2 activated Eden"} 
 Player 1 10:24:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 1 Penny(7)  \n4:Player 2 activated Eden"} 
 Player 1 10:24:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 1 Penny(7)  \n4:Player 2 activated Eden"} 
 Player 1 10:24:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 1 Penny(7)  \n4:Player 2 activated Eden"} 
 Player 1 10:24:58 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 10:25:01 $MOVE_CARD_END:  

 {"moveIndex":19,"cardId":15,"flipIfFlipped":true,"playerId":2} 
 Player 1 10:25:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 1 Penny(7) "} 
 Player 1 10:25:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 1 Penny(7) "} 
 Player 1 10:25:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 1 Penny(7) "} 
 Player 1 10:25:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 1 Penny(7) "} 
 Player 1 10:25:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 1 Penny(7) "} 
 Player 1 10:25:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 1 Penny(7) "} 
 Player 1 10:25:01 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 10:25:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 1 10:25:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 1 10:25:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 1 10:25:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 1 10:25:02 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":276,"particleType":6} 
 Player 1 10:25:04 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":276,"particleType":6} 
 Player 1 10:25:04 $REGISTER_ONE_TURN_PASSIVE_EFFECT:  

 {"cardId":276,"effectIndex":{"type":3,"index":0},"conditionData":[{"effectTargets":[275],"chainEffectsData":[],"methodArgs":[],"isPassive":false,"effectCard":276,"effectCardOwner":275,"effectCardPlayer":275}]} 
 Player 1 10:25:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 1 10:25:04 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":8,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 10:25:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 1 10:25:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 1 10:25:04 $FINISH_DO_STACK_EFFECT:  

 {"playerId":2,"newStack":[{"entityId":7,"creatorCardId":275,"numberRolled":2,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":214},{"entityId":8,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 
 Player 1 10:25:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 1 10:25:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 1 10:25:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 1 10:25:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 1 10:25:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 1 10:25:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 1 10:25:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 1 10:25:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 1 10:25:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 1 10:25:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 1 10:25:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 1 10:25:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 1 10:25:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 1 10:25:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 1 10:25:05 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 10:25:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 10:25:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 10:25:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":87,"_text":"Added 0 to original roll"}} 
 Player 1 10:25:05 $NEXT_STACK_ID:  
 Player 1 10:25:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 10:25:05 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 10:25:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 1 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 10:25:05 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":11,"creatorCardId":275,"entityToDoDamageCardId":214,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 10:25:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 1 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 10:25:06 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":275,"numberRolled":2,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":214}} 
 Player 1 10:25:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 1 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 10:25:06 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":11,"creatorCardId":275,"entityToDoDamageCardId":214,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 10:25:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 1 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 10:25:06 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":275,"numberRolled":2,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":214}} 
 Player 1 10:25:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 1 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 10:25:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 1 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 10:25:06 $REPLACE_STACK:  

 {"currentStack":[{"entityId":11,"creatorCardId":275,"entityToDoDamageCardId":214,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":7,"creatorCardId":275,"numberRolled":2,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":214}]} 
 Player 1 10:25:06 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":4,"originStackId":7},"isAfterActivation":true,"index":4} 
 Player 1 10:25:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 1 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 10:25:06 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":7,"creatorCardId":275,"numberRolled":2,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":214}} 
 Player 1 10:25:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 1 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 10:25:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 1 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 10:25:06 $FINISH_DO_STACK_EFFECT:  

 {"playerId":2,"newStack":[{"entityId":11,"creatorCardId":275,"entityToDoDamageCardId":214,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":7,"creatorCardId":275,"numberRolled":2,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":214}]} 
 Player 1 10:25:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 1 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 10:25:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 1 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 10:25:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 1 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 10:25:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 1 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 10:25:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 1 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 10:25:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 1 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 10:25:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 1 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 10:25:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 1 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 10:25:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 1 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 10:25:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 1 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 10:25:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 1 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 10:25:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 1 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 10:25:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 1 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 10:25:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 1 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 10:25:07 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 10:25:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost"} 
 Player 1 10:25:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost"} 
 Player 1 10:25:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty 2 combat damage to The Lost"} 
 Player 1 10:25:08 $UPDATE_STACK_VIS:  

 {"stackId":11,"text":"Conjoined Fatty will deal 2 combat damage to The Lost"} 
 Player 1 10:25:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty 2 combat damage to The Lost"} 
 Player 1 10:25:08 $PLAYER_GET_HIT:  

 {"playerId":1,"damage":2,"damageDealerId":214} 
 Player 1 10:25:08 $NEXT_STACK_ID:  
 Player 1 10:25:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty 2 combat damage to The Lost"} 
 Player 1 10:25:08 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 10:25:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty 2 combat damage to The Lost \n2:Player 1 is about to die"} 
 Player 1 10:25:08 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":12,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":214}} 
 Player 1 10:25:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty 2 combat damage to The Lost \n2:Player 1 is about to die"} 
 Player 1 10:25:08 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":11,"creatorCardId":275,"entityToDoDamageCardId":214,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 10:25:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty 2 combat damage to The Lost \n2:Player 1 is about to die"} 
 Player 1 10:25:08 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":11,"creatorCardId":275,"entityToDoDamageCardId":214,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 10:25:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty 2 combat damage to The Lost \n2:Player 1 is about to die"} 
 Player 1 10:25:08 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":12,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":214}} 
 Player 1 10:25:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty 2 combat damage to The Lost \n2:Player 1 is about to die"} 
 Player 1 10:25:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty 2 combat damage to The Lost \n2:Player 1 is about to die"} 
 Player 1 10:25:08 $REPLACE_STACK:  

 {"currentStack":[{"entityId":11,"creatorCardId":275,"entityToDoDamageCardId":214,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":12,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":214}]} 
 Player 1 10:25:08 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":214}],"result":null,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 
 Player 1 10:25:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty 2 combat damage to The Lost \n2:Player 1 is about to die"} 
 Player 1 10:25:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty 2 combat damage to The Lost \n2:Player 1 is about to die"} 
 Player 1 10:25:08 $FINISH_DO_STACK_EFFECT:  

 {"playerId":2,"newStack":[{"entityId":11,"creatorCardId":275,"entityToDoDamageCardId":214,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":12,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":214}]} 
 Player 1 10:25:08 $ACTION_MASSAGE_REMOVE:  

 {"id":87} 
 Player 1 10:25:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty 2 combat damage to The Lost \n2:Player 1 is about to die"} 
 Player 1 10:25:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty 2 combat damage to The Lost \n2:Player 1 is about to die"} 
 Player 1 10:25:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty 2 combat damage to The Lost \n2:Player 1 is about to die"} 
 Player 1 10:25:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty 2 combat damage to The Lost \n2:Player 1 is about to die"} 
 Player 1 10:25:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty 2 combat damage to The Lost \n2:Player 1 is about to die"} 
 Player 1 10:25:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty 2 combat damage to The Lost \n2:Player 1 is about to die"} 
 Player 1 10:25:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty 2 combat damage to The Lost \n2:Player 1 is about to die"} 
 Player 1 10:25:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty 2 combat damage to The Lost \n2:Player 1 is about to die"} 
 Player 1 10:25:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty 2 combat damage to The Lost \n2:Player 1 is about to die"} 
 Player 1 10:25:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty 2 combat damage to The Lost \n2:Player 1 is about to die"} 
 Player 1 10:25:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 1 is about to die"} 
 Player 1 10:25:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 1 is about to die"} 
 Player 1 10:25:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 1 is about to die"} 
 Player 1 10:25:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 1 is about to die"} 
 Player 1 10:25:10 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 10:25:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 1 10:25:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 1 10:25:10 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":214,"particleType":5} 
 Player 1 10:25:10 $CANCEL_ATTACK:  
 Player 1 10:25:10 $NEXT_STACK_ID:  
 Player 1 10:25:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 1 10:25:10 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_PAY_DEATH_PANELTIES","args":[],"result":null,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":1,"originStackId":13},"isAfterActivation":false,"index":1} 
 Player 1 10:25:10 $NEXT_STACK_ID:  
 Player 1 10:25:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 
 Player 1 10:25:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 1 10:25:10 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":14,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":276,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":1,"cardId":276,"effctType":3},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 10:25:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 1 10:25:10 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":14,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":276,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":1,"cardId":276,"effctType":3},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 10:25:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":98,"_text":"Add ActivatePassiveEffect 14 "}} 
 Player 1 10:25:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 1 10:25:10 $ACTION_MASSAGE_REMOVE:  

 {"id":98} 
 Player 1 10:25:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 1 10:25:10 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":14,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":276,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":1,"cardId":276,"effctType":3},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 10:25:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":99,"_text":"Response Adding ActivatePassiveEffect 14"},"childOfId":98} 
 Player 1 10:25:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":100,"_text":"Wait For Response From Player 2 "},"childOfId":98} 
 Player 1 10:25:10 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 10:25:10 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 10:25:11 $ACTION_MASSAGE_REMOVE:  

 {"id":100} 
 Player 1 10:25:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":101,"_text":"Wait For Response From Player 1 "},"childOfId":98} 
 Player 1 10:25:11 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 10:25:11 $ACTION_MASSAGE_REMOVE:  

 {"id":101} 
 Player 1 10:25:11 $ACTION_MASSAGE_REMOVE:  

 {"id":99} 
 Player 1 10:25:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":102,"_text":"Resolve ActivatePassiveEffect 14 "}} 
 Player 1 10:25:11 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":276,"particleType":6} 
 Player 1 10:25:13 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":276,"particleType":6} 
 Player 1 10:25:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 1 10:25:13 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":13,"creatorCardId":275,"playerToPayCardId":275,"stackEffectType":16}} 
 Player 1 10:25:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":103,"_text":"Fizzle PlayerDeathPenalties 13"}} 
 Player 1 10:25:13 $FIZZLE_STACK_EFFECT:  

 {"entityId":13} 
 Player 1 10:25:16 $ACTION_MASSAGE_REMOVE:  

 {"id":103}