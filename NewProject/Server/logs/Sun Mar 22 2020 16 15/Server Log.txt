Start Log 

 Player 1 16:15:49 $MATCH:  

 Player 1 16:15:50 $START_GAME:  

 Player 1 16:15:50 $MOVE_TO_TABLE:  

 Player 2 16:15:50 $MOVE_TO_TABLE:  

 Player 1 16:16:01 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 16:16:02 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 2 16:16:02 $SET_CHAR:  
{"originPlayerId":2,"playerId":1,"charCardId":317,"itemCardId":320} 

 Player 1 16:16:02 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":317,"itemCardId":320} 

 Player 1 16:16:02 $SET_CHAR_END:  
{"playerId":2} 

 Player 2 16:16:02 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":329,"itemCardId":330} 

 Player 2 16:16:02 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[31,47,40,61,141,132,28,60,129,89,109,33,115,14,53,52,51,36,56,9,120,62,78,10,113,123,116,82,131,124,74,98,25,110,63,22,76,30,77,43,64,142,96,75,12,136,87,71,130,19,134,20,111,97,39,54,118,46,105,101,126,37,84,45,86,138,44,18,72,26,106,17,133,119,137,91,81,70,58,42,90,114,108,125,112,7,121,65,13,102,135,99,122,107,140,127,50,59,79,8,104,67,103,139,117,68,128,73,93,55,83,11,49,57,92,66,85,88,69,29,16,100,32,15,24,21,35,38,95,34,27,80,48,23,94,41]} 

 Player 2 16:16:02 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[302,288,247,246,236,286,285,303,271,304,233,238,232,276,277,244,270,289,264,294,248,284,242,257,309,245,291,266,258,273,298,262,299,297,280,254,296,293,305,255,295,231,261,263,290,251,275,227,267,249,269,312,239,274,252,237,287,243,240,292,308,282,311,306,228,283,241,250,272,256,281,235,268,279,278,301,265,260,234,253,230,259,307,300,310,229]} 

 Player 2 16:16:02 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[205,155,150,172,182,184,221,146,157,222,211,212,196,152,192,219,215,174,177,208,168,223,159,195,165,145,183,160,185,188,178,164,213,151,199,175,200,158,187,197,204,224,202,203,154,218,217,193,209,210,176,198,169,167,191,148,190,207,194,171,186,201,181,189,161,163,147,173,156,170,166,153,216,179,220,214,206,149,180,162]} 

 Player 2 16:16:02 $DRAW_CARD:  
{"deckType":5} 

 Player 2 16:16:02 $FLIP_CARD:  
{"cardId":162} 

 Player 2 16:16:02 $ADD_STORE_CARD:  
{"cardId":162} 

 Player 2 16:16:02 $DRAW_CARD:  
{"deckType":5} 

 Player 2 16:16:02 $FLIP_CARD:  
{"cardId":180} 

 Player 2 16:16:02 $ADD_STORE_CARD:  
{"cardId":180} 

 Player 2 16:16:02 $DRAW_CARD:  
{"deckType":2} 

 Player 2 16:16:02 $FLIP_CARD:  
{"cardId":229} 

 Player 2 16:16:02 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":229} 

 Player 2 16:16:02 $NEW_MONSTER_ON_PLACE:  
{"cardId":229,"monsterPlaceId":1} 

 Player 2 16:16:02 $DRAW_CARD:  
{"deckType":2} 

 Player 2 16:16:03 $FLIP_CARD:  
{"cardId":310} 

 Player 2 16:16:03 $REGISTER_PASSIVE_ITEM:  
{"cardId":310} 

 Player 2 16:16:03 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":310} 

 Player 2 16:16:03 $NEW_MONSTER_ON_PLACE:  
{"cardId":310,"monsterPlaceId":2} 

 Player 2 16:16:03 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 16:16:03 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":317,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 16:16:03 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:16:03 $MOVE_CARD:  
{"moveIndex":1,"cardId":41,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:16:03 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":41,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:16:03 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":41} 

 Player 2 16:16:03 $FLIP_CARD:  
{"cardId":41} 

 Player 2 16:16:03 $FLIP_CARD:  
{"cardId":41} 

 Player 2 16:16:03 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":41} 

 Player 2 16:16:04 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:16:04 $MOVE_CARD:  
{"moveIndex":2,"cardId":94,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:16:04 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":94,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:16:04 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":94} 

 Player 2 16:16:04 $FLIP_CARD:  
{"cardId":94} 

 Player 2 16:16:04 $FLIP_CARD:  
{"cardId":94} 

 Player 2 16:16:04 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":94} 

 Player 2 16:16:04 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:16:04 $MOVE_CARD:  
{"moveIndex":3,"cardId":23,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:16:05 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":23,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:16:05 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":23} 

 Player 2 16:16:05 $FLIP_CARD:  
{"cardId":23} 

 Player 2 16:16:05 $FLIP_CARD:  
{"cardId":23} 

 Player 2 16:16:05 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":23} 

 Player 2 16:16:05 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 16:16:05 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":329,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 16:16:05 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:16:05 $MOVE_CARD:  
{"moveIndex":4,"cardId":48,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:16:06 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":48,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:16:06 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":48} 

 Player 2 16:16:06 $FLIP_CARD:  
{"cardId":48} 

 Player 2 16:16:06 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":48} 

 Player 2 16:16:06 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:16:06 $MOVE_CARD:  
{"moveIndex":5,"cardId":80,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:16:06 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":80,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:16:06 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":80} 

 Player 2 16:16:06 $FLIP_CARD:  
{"cardId":80} 

 Player 2 16:16:07 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":80} 

 Player 2 16:16:07 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:16:07 $MOVE_CARD:  
{"moveIndex":6,"cardId":27,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:16:07 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":27,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:16:07 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":27} 

 Player 2 16:16:07 $FLIP_CARD:  
{"cardId":27} 

 Player 2 16:16:07 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":27} 

 Player 2 16:16:07 $GAME_HAS_STARTED:  

 Player 2 16:16:07 $SET_TURN:  
{"playerId":1} 

 Player 2 16:16:07 $START_TURN:  
{"playerId":1} 

 Player 2 16:16:07 $UPDATE_ACTIONS:  

 Player 1 16:16:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:16:07 $NEXT_STACK_ID:  

 Player 1 16:16:07 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:16:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 16:16:08 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":317,"turnPlayerCardId":317,"stackEffectType":13}} 

 Player 1 16:16:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 16:16:08 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":317,"turnPlayerCardId":317,"stackEffectType":13}} 

 Player 1 16:16:08 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 16:16:08 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 2 16:16:08 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:16:08 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:16:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 16:16:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 16:16:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 1 16:16:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:16:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 16:16:10 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":317,"turnPlayerCardId":317,"stackEffectType":13}} 

 Player 1 16:16:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 1 16:16:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 1 16:16:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:16:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 1 16:16:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 16:16:11 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 16:16:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 16:16:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 16:16:11 $HIDE_REACTIONS:  
{"cardsIds":[329,330]} 

 Player 2 16:16:11 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 16:16:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 1 16:16:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 16:16:11 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":317,"turnPlayerCardId":317,"stackEffectType":13}} 

 Player 1 16:16:11 $DRAW_CARD:  
{"deckType":1} 

 Player 1 16:16:11 $MOVE_CARD:  
{"moveIndex":7,"cardId":34,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 16:16:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 16:16:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 16:16:12 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":34,"flipIfFlipped":false,"playerId":1} 

 Player 1 16:16:12 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":34} 

 Player 1 16:16:12 $FLIP_CARD:  
{"cardId":34} 

 Player 1 16:16:12 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":34} 

 Player 1 16:16:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 16:16:12 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":317,"turnPlayerCardId":317,"stackEffectType":13}} 

 Player 1 16:16:12 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":1} 

 Player 1 16:16:12 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 16:16:12 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 2 16:16:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 16:16:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 16:16:15 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":1} 

 Player 1 16:16:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 1 16:16:15 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:16:15 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":317,"turnPlayerCardId":317,"stackEffectType":13}} 

 Player 1 16:16:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 1 16:16:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 1 16:16:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 16:16:15 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 16:16:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 16:16:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 16:16:15 $HIDE_REACTIONS:  
{"cardsIds":[329,330]} 

 Player 2 16:16:15 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 16:16:15 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 1 16:16:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 1 16:16:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:16:15 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 1 16:16:15 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 1 16:16:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 1 16:16:15 $CLEAR_SE_VIS:  

 Player 1 16:16:15 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:16:30 $NEXT_STACK_ID:  

 Player 1 16:16:30 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:16:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 2 Cents(3) "} 

 Player 1 16:16:30 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":317,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":23,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 16:16:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 2 Cents(3) "} 

 Player 1 16:16:30 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":317,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":23,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 16:16:30 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 16:16:30 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 2 16:16:30 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:16:30 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:16:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 2 Cents(3) "} 

 Player 2 16:16:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 2 Cents(3) "} 

 Player 1 16:16:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add PlayLootCardStackEffect 2 "}} 

 Player 1 16:16:33 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":23} 

 Player 1 16:16:33 $MOVE_CARD:  
{"moveIndex":8,"cardId":23,"placeID":331,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 16:16:33 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":23,"flipIfFlipped":true,"playerId":1} 

 Player 1 16:16:33 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":23} 

 Player 1 16:16:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 2 Cents(3): addMoney"} 

 Player 1 16:16:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:16:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 2 Cents(3): addMoney"} 

 Player 1 16:16:33 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":317,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":23,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":23,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 16:16:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding PlayLootCardStackEffect 2"},"childOfId":10} 

 Player 1 16:16:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 1 16:16:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:16:34 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 1 16:16:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 1 16:16:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 16:16:34 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 16:16:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 2 Cents(3) "} 

 Player 2 16:16:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 2 Cents(3) "} 

 Player 2 16:16:34 $HIDE_REACTIONS:  
{"cardsIds":[329,330]} 

 Player 2 16:16:34 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 16:16:34 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 1 16:16:34 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 1 16:16:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve PlayLootCardStackEffect 2 "}} 

 Player 1 16:16:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 2 Cents(3): addMoney"} 

 Player 1 16:16:34 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":317,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":23,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":23,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 16:16:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 2 Cents(3): addMoney"} 

 Player 1 16:16:34 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":23,"particleType":6} 

 Player 2 16:16:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 2 Cents(3) "} 

 Player 2 16:16:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 2 Cents(3) "} 

 Player 1 16:16:36 $DISABLE_PARTICLE_EFFECT:  
{"cardId":23,"particleType":6} 

 Player 1 16:16:36 $SET_MONEY:  
{"playerId":1,"numOfCoins":5} 

 Player 1 16:16:36 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":2}],"result":null,"preventMethod":false,"methodScopeId":317,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 16:16:36 $REMOVE_FROM_PILE:  
{"cardId":23} 

 Player 1 16:16:36 $MOVE_CARD:  
{"moveIndex":9,"cardId":23,"placeID":332,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 16:16:37 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":23,"flipIfFlipped":true,"playerId":1} 

 Player 1 16:16:37 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":23} 

 Player 1 16:16:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 2 Cents(3): addMoney"} 

 Player 1 16:16:37 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":317,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":23,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 16:16:37 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":2} 

 Player 1 16:16:37 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 16:16:37 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 2 16:16:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 2 Cents(3) "} 

 Player 2 16:16:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 2 Cents(3) "} 

 Player 1 16:16:40 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":2} 

 Player 1 16:16:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve PlayLootCardStackEffect 2  "}} 

 Player 1 16:16:40 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:16:40 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":317,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":23,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 16:16:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve PlayLootCardStackEffect 2"},"childOfId":15} 

 Player 1 16:16:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 1 16:16:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 16:16:40 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 16:16:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 2 Cents(3) "} 

 Player 2 16:16:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 2 Cents(3) "} 

 Player 2 16:16:40 $HIDE_REACTIONS:  
{"cardsIds":[329,330]} 

 Player 2 16:16:40 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 16:16:40 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 1 16:16:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 1 16:16:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:16:40 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 1 16:16:40 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 1 16:16:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 1 16:16:40 $CLEAR_SE_VIS:  

 Player 1 16:16:40 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:16:59 $NEXT_STACK_ID:  

 Player 1 16:16:59 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:16:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 1 16:16:59 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":317,"hasLockingStackEffect":false,"itemToPlayCardId":320,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 16:16:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 1 16:16:59 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":317,"hasLockingStackEffect":false,"itemToPlayCardId":320,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 16:16:59 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 16:16:59 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 2 16:16:59 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:16:59 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:16:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 16:16:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 1 16:17:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add ActivateItem 3 "}} 

 Player 1 16:17:05 $SHOW_DECISION:  
{"startCardId":320,"endCardId":226} 

 Player 1 16:17:08 $USE_ITEM:  
{"cardId":320} 

 Player 1 16:17:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:17:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 1 16:17:08 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":317,"hasLockingStackEffect":false,"itemToPlayCardId":320,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 16:17:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding ActivateItem 3"},"childOfId":20} 

 Player 1 16:17:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 1 16:17:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:17:09 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 1 16:17:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 1 16:17:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 16:17:09 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 16:17:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 16:17:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 16:17:09 $HIDE_REACTIONS:  
{"cardsIds":[329,330]} 

 Player 2 16:17:09 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 16:17:09 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 1 16:17:09 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 1 16:17:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve ActivateItem 3 "}} 

 Player 1 16:17:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 1 16:17:09 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":317,"hasLockingStackEffect":false,"itemToPlayCardId":320,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 16:17:09 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":320,"particleType":6} 

 Player 2 16:17:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 16:17:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 1 16:17:11 $DISABLE_PARTICLE_EFFECT:  
{"cardId":320,"particleType":6} 

 Player 1 16:17:25 $DECK_ADD_TO_TOP:  
{"deckType":2,"cardId":300} 

 Player 1 16:17:25 $DECK_ADD_TO_TOP:  
{"deckType":2,"cardId":307} 

 Player 1 16:17:25 $DECK_ADD_TO_TOP:  
{"deckType":2,"cardId":259} 

 Player 1 16:17:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 1 16:17:25 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":317,"hasLockingStackEffect":false,"itemToPlayCardId":320,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 16:17:25 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":3} 

 Player 1 16:17:25 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 16:17:25 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 2 16:17:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 16:17:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 1 16:17:28 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":3} 

 Player 1 16:17:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Remove After Resolve ActivateItem 3  "}} 

 Player 1 16:17:28 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:17:28 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":317,"hasLockingStackEffect":false,"itemToPlayCardId":320,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 16:17:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Response Remove After Resolve ActivateItem 3"},"childOfId":25} 

 Player 1 16:17:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Wait For Response From Player 2 "},"childOfId":25} 

 Player 1 16:17:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 16:17:28 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 16:17:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 16:17:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 16:17:28 $HIDE_REACTIONS:  
{"cardsIds":[329,330]} 

 Player 2 16:17:28 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 16:17:28 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 1 16:17:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 1 "},"childOfId":25} 

 Player 1 16:17:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:17:29 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 1 16:17:29 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 1 16:17:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Stack Was Emptied "}} 

 Player 1 16:17:29 $CLEAR_SE_VIS:  

 Player 1 16:17:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:18:12 $NEXT_STACK_ID:  

 Player 1 16:18:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:18:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 1 16:18:12 $ADD_TO_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":317,"attackingPlayerCardId":317,"idOfCardBeingAttacked":226,"stackEffectType":4}} 

 Player 1 16:18:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 1 16:18:12 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":317,"attackingPlayerCardId":317,"idOfCardBeingAttacked":226,"stackEffectType":4}} 

 Player 1 16:18:12 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 16:18:12 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 2 16:18:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:18:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:18:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 2 16:18:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 1 16:18:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Add DeclareAttack 4 "}} 

 Player 1 16:18:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:18:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 1 16:18:15 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":317,"attackingPlayerCardId":317,"idOfCardBeingAttacked":226,"stackEffectType":4}} 

 Player 1 16:18:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Response Adding DeclareAttack 4"},"childOfId":30} 

 Player 1 16:18:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Wait For Response From Player 1 "},"childOfId":30} 

 Player 1 16:18:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:18:15 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 1 16:18:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 2 "},"childOfId":30} 

 Player 1 16:18:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 16:18:15 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 16:18:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 2 16:18:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 2 16:18:16 $HIDE_REACTIONS:  
{"cardsIds":[329,330]} 

 Player 2 16:18:16 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 16:18:16 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 1 16:18:16 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 1 16:18:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Resolve DeclareAttack 4 "}} 

 Player 1 16:18:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 1 16:18:16 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":317,"attackingPlayerCardId":317,"idOfCardBeingAttacked":226,"stackEffectType":4}} 

 Player 1 16:18:16 $DRAW_CARD:  
{"deckType":2} 

 Player 1 16:18:16 $SHOW_CARD_PREVIEW:  
{"cardToShowId":259,"playerId":1} 

 Player 2 16:18:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 2 16:18:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 1 16:18:53 $FLIP_CARD:  
{"cardId":259} 

 Player 1 16:18:53 $REGISTER_PASSIVE_ITEM:  
{"cardId":259} 

 Player 1 16:18:53 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":259} 

 Player 1 16:18:53 $NEW_MONSTER_ON_PLACE:  
{"cardId":259,"monsterPlaceId":1} 

 Player 1 16:18:53 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":259,"particleType":5} 

 Player 1 16:18:53 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":317,"scopeIsPlayer":true,"index":2,"originStackId":4},"isAfterActivation":true,"index":2} 

 Player 1 16:18:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 1 16:18:53 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":317,"attackingPlayerCardId":317,"idOfCardBeingAttacked":259,"stackEffectType":4}} 

 Player 1 16:18:54 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":4} 

 Player 1 16:18:54 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 16:18:54 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 2 16:18:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 2 16:18:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 1 16:18:56 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":4} 

 Player 1 16:18:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Remove After Resolve DeclareAttack 4  "}} 

 Player 1 16:18:56 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:18:56 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":317,"attackingPlayerCardId":317,"idOfCardBeingAttacked":259,"stackEffectType":4}} 

 Player 1 16:18:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Response Remove After Resolve DeclareAttack 4"},"childOfId":35} 

 Player 1 16:18:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Wait For Response From Player 2 "},"childOfId":35} 

 Player 1 16:18:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 16:18:56 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 16:18:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Famine"} 

 Player 2 16:18:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Famine"} 

 Player 2 16:18:57 $HIDE_REACTIONS:  
{"cardsIds":[329,330]} 

 Player 2 16:18:57 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 16:18:57 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 1 16:18:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 1 "},"childOfId":35} 

 Player 1 16:18:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:18:57 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 1 16:18:57 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 1 16:18:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Stack Was Emptied "}} 

 Player 1 16:18:57 $CLEAR_SE_VIS:  

 Player 1 16:18:57 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:19:19 $NEXT_STACK_ID:  

 Player 1 16:19:19 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:19:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Famine<Monster>"} 

 Player 1 16:19:19 $ADD_TO_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":317,"rollingPlayerCardId":317,"stackEffectType":2,"attackedMonsterCardId":259}} 

 Player 1 16:19:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Famine<Monster>"} 

 Player 1 16:19:19 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":317,"rollingPlayerCardId":317,"stackEffectType":2,"attackedMonsterCardId":259}} 

 Player 1 16:19:19 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 16:19:19 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 2 16:19:19 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:19:19 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:19:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Famine<Monster>"} 

 Player 2 16:19:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Famine<Monster>"} 

 Player 1 16:19:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Add AttackRoll 5 "}} 

 Player 1 16:19:22 $ROLL_DICE:  
{"playerId":1} 

 Player 1 16:19:24 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":6} 

 Player 1 16:19:24 $UPDATE_STACK_VIS:  
{"stackId":5,"text":"player rolled 6 vs Famine<Monster>"} 

 Player 1 16:19:24 $SHOW_DICE_ROLL:  
{"stackId":5} 

 Player 1 16:19:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Famine<Monster>"} 

 Player 1 16:19:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:19:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Famine<Monster>"} 

 Player 1 16:19:27 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":317,"numberRolled":6,"rollingPlayerCardId":317,"stackEffectType":2,"attackedMonsterCardId":259}} 

 Player 1 16:19:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Response Adding AttackRoll 5"},"childOfId":40} 

 Player 1 16:19:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Wait For Response From Player 1 "},"childOfId":40} 

 Player 1 16:19:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:19:27 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 1 16:19:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 2 "},"childOfId":40} 

 Player 1 16:19:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 16:19:27 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 16:19:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Famine<Monster>"} 

 Player 2 16:19:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Famine<Monster>"} 

 Player 2 16:19:27 $HIDE_REACTIONS:  
{"cardsIds":[329,330]} 

 Player 2 16:19:27 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 16:19:27 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 1 16:19:27 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 1 16:19:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Resolve AttackRoll 5 "}} 

 Player 1 16:19:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Famine<Monster>"} 

 Player 1 16:19:27 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":317,"numberRolled":6,"rollingPlayerCardId":317,"stackEffectType":2,"attackedMonsterCardId":259}} 

 Player 1 16:19:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Added 0 to original roll"}} 

 Player 1 16:19:27 $NEXT_STACK_ID:  

 Player 1 16:19:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Famine<Monster>"} 

 Player 1 16:19:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:19:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Famine \n2:Player 1 rolled 6 vs Famine<Monster>"} 

 Player 1 16:19:28 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":317,"entityToDoDamageCardId":317,"entityToTakeDamageCardId":259,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6}} 

 Player 1 16:19:28 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 16:19:28 $SHOW_STACK_EFFECT:  
{"effectId":6} 

 Player 2 16:19:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Famine<Monster>"} 

 Player 2 16:19:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Famine<Monster>"} 

 Player 2 16:19:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Famine<Monster>"} 

 Player 2 16:19:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Famine<Monster>"} 

 Player 1 16:19:30 $CLEAR_SE_VIS:  

 Player 1 16:19:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Famine \n2:Player 1 rolled 6 vs Famine<Monster>"} 

 Player 1 16:19:30 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":317,"entityToDoDamageCardId":317,"entityToTakeDamageCardId":259,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6}} 

 Player 1 16:19:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Famine \n2:Player 1 rolled 6 vs Famine<Monster>"} 

 Player 1 16:19:30 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":317,"numberRolled":6,"rollingPlayerCardId":317,"stackEffectType":2,"attackedMonsterCardId":259}} 

 Player 1 16:19:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Famine \n2:Player 1 rolled 6 vs Famine<Monster>"} 

 Player 1 16:19:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Famine \n2:Player 1 rolled 6 vs Famine<Monster>"} 

 Player 1 16:19:31 $REPLACE_STACK:  
{"currentStack":[{"entityId":6,"creatorCardId":317,"entityToDoDamageCardId":317,"entityToTakeDamageCardId":259,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6},{"entityId":5,"creatorCardId":317,"numberRolled":6,"rollingPlayerCardId":317,"stackEffectType":2,"attackedMonsterCardId":259}]} 

 Player 1 16:19:31 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":6},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":317,"scopeIsPlayer":true,"index":3,"originStackId":5},"isAfterActivation":true,"index":3} 

 Player 1 16:19:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Famine \n2:Player 1 rolled 6 vs Famine<Monster>"} 

 Player 1 16:19:31 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":317,"numberRolled":6,"rollingPlayerCardId":317,"stackEffectType":2,"attackedMonsterCardId":259}} 

 Player 1 16:19:31 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":5} 

 Player 1 16:19:31 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 16:19:31 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 2 16:19:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Famine<Monster>"} 

 Player 2 16:19:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Famine<Monster>"} 

 Player 2 16:19:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Famine<Monster>"} 

 Player 2 16:19:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Famine<Monster>"} 

 Player 2 16:19:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Famine<Monster>"} 

 Player 2 16:19:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Famine<Monster>"} 

 Player 2 16:19:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Famine<Monster>"} 

 Player 2 16:19:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Famine<Monster>"} 

 Player 2 16:19:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Famine \n2:Player 1 is rolling against Famine<Monster>"} 

 Player 2 16:19:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Famine \n2:Player 1 is rolling against Famine<Monster>"} 

 Player 1 16:19:33 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":5} 

 Player 1 16:19:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Remove After Resolve AttackRoll 5  "}} 

 Player 1 16:19:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Famine"} 

 Player 1 16:19:33 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":317,"numberRolled":6,"rollingPlayerCardId":317,"stackEffectType":2,"attackedMonsterCardId":259}} 

 Player 1 16:19:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Response Remove After Resolve AttackRoll 5"},"childOfId":46} 

 Player 1 16:19:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Wait For Response From Player 1 "},"childOfId":46} 

 Player 1 16:19:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:19:34 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 1 16:19:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Wait For Response From Player 2 "},"childOfId":46} 

 Player 1 16:19:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 16:19:34 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 16:19:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Famine \n2:Player 1 is rolling against Famine<Monster>"} 

 Player 2 16:19:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Famine \n2:Player 1 is rolling against Famine<Monster>"} 

 Player 2 16:19:34 $HIDE_REACTIONS:  
{"cardsIds":[329,330]} 

 Player 2 16:19:34 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 16:19:34 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 1 16:19:34 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 1 16:19:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Resolve CombatDamage 6 "}} 

 Player 1 16:19:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Famine"} 

 Player 1 16:19:34 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":317,"entityToDoDamageCardId":317,"entityToTakeDamageCardId":259,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6}} 

 Player 1 16:19:34 $UPDATE_STACK_VIS:  
{"stackId":6,"text":"Cain will deal 1 combat damage to Famine"} 

 Player 1 16:19:34 $MONSTER_GET_DAMAGED:  
{"cardId":259,"hpLeft":1,"damageDealerId":317} 

 Player 1 16:19:34 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":317},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":259,"scopeIsPlayer":false,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 1 16:19:34 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":6},{"type":0,"number":317},{"type":0,"number":259}],"result":null,"preventMethod":false,"methodScopeId":317,"scopeIsPlayer":true,"index":5,"originStackId":6},"isAfterActivation":true,"index":5} 

 Player 1 16:19:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Famine"} 

 Player 1 16:19:34 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":317,"entityToDoDamageCardId":317,"entityToTakeDamageCardId":259,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6}} 

 Player 1 16:19:34 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":6} 

 Player 1 16:19:34 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 16:19:34 $SHOW_STACK_EFFECT:  
{"effectId":6} 

 Player 2 16:19:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Famine"} 

 Player 2 16:19:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Famine"} 

 Player 2 16:19:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Famine"} 

 Player 2 16:19:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Famine"} 

 Player 1 16:19:37 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":6} 

 Player 1 16:19:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Remove After Resolve CombatDamage 6  "}} 

 Player 1 16:19:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:19:37 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":317,"entityToDoDamageCardId":317,"entityToTakeDamageCardId":259,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6}} 

 Player 1 16:19:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Response Remove After Resolve CombatDamage 6"},"childOfId":51} 

 Player 1 16:19:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Wait For Response From Player 2 "},"childOfId":51} 

 Player 1 16:19:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 16:19:37 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 16:19:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Famine"} 

 Player 2 16:19:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Famine"} 

 Player 2 16:19:37 $HIDE_REACTIONS:  
{"cardsIds":[329,330]} 

 Player 2 16:19:37 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 16:19:37 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 1 16:19:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Wait For Response From Player 1 "},"childOfId":51} 

 Player 1 16:19:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:19:38 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 1 16:19:38 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 1 16:19:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Stack Was Emptied "}} 

 Player 1 16:19:38 $CLEAR_SE_VIS:  

 Player 1 16:19:38 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"}