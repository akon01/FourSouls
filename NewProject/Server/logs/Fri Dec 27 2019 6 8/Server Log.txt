Start Log 

 Player 1 06:08:59 $MATCH:  

 Player 1 06:08:59 $START_GAME:  

 Player 2 06:08:59 $MOVE_TO_TABLE:  

 Player 1 06:08:59 $MOVE_TO_TABLE:  

 Player 1 06:09:08 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 06:09:08 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 2 06:09:08 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":274,"itemCardId":275} 

 Player 2 06:09:08 $CHOOSE_FOR_EDEN:  
{"playerId":2,"originPlayerId":2} 

 Player 1 06:09:08 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":275}],"result":true,"preventMethod":false,"methodScopeId":274,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 06:09:08 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[202,177,173,175,185,178,199,179,150,166,171,167,196,195,192,153,151,147,161,148,193,155,201,159,200,165,172,194,183,198,164,174,168,158,149,197,156,181,152,189,176,170,188,180,169,154,182,186,162,160,163,203,157,146,187,190,184,191]} 

 Player 2 06:09:38 $EDEN_CHOSEN:  
{"cardId":173,"playerId":2} 

 Player 2 06:09:38 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[202,177,175,185,178,199,179,150,166,171,167,196,195,192,153,151,147,161,148,193,155,201,159,200,165,172,194,183,198,164,174,168,158,149,197,156,181,152,189,176,170,188,180,169,154,182,186,162,160,163,203,157,146,187,190,184,191]} 

 Player 2 06:09:38 $FLIP_CARD:  
{"cardId":173} 

 Player 2 06:09:38 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":173}],"result":true,"preventMethod":false,"methodScopeId":266,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 06:09:38 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":266,"itemCardId":173} 

 Player 2 06:09:38 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[136,16,124,106,66,41,92,107,43,128,114,39,78,14,84,57,127,37,82,93,95,42,62,118,120,68,104,21,98,112,117,105,56,139,119,29,18,47,134,24,140,22,75,63,125,53,10,52,65,115,59,27,7,77,26,17,58,121,15,138,11,40,79,116,69,130,71,132,32,19,89,44,87,142,33,91,74,103,100,28,96,133,97,54,110,9,123,102,51,76,20,70,48,36,35,55,31,143,129,8,81,101,23,99,90,126,34,94,111,85,13,45,25,131,46,30,12,141,61,60,38,50,64,122,49,86,73,109,80,88,135,137,108,72,83,113,67]} 

 Player 2 06:09:38 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[258,246,228,231,247,244,207,255,230,220,214,238,209,248,225,208,234,226,243,217,221,250,216,254,213,240,259,245,212,232,236,257,223,219,229,227,224,256,206,252,242,210,233,237,211,222,218,249,253,235,251,239,241,215]} 

 Player 2 06:09:38 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[149,187,163,151,155,184,177,178,200,203,185,148,172,201,196,182,191,181,174,169,189,159,161,165,198,153,194,188,170,164,154,176,183,168,160,152,158,167,166,156,186,146,157,195,150,199,162,197,171,175,180,190,192,179,202,147,193]} 

 Player 2 06:09:38 $DRAW_CARD:  
{"deckType":5} 

 Player 2 06:09:38 $FLIP_CARD:  
{"cardId":193} 

 Player 2 06:09:38 $ADD_STORE_CARD:  
{"cardId":193} 

 Player 2 06:09:38 $DRAW_CARD:  
{"deckType":5} 

 Player 2 06:09:38 $FLIP_CARD:  
{"cardId":147} 

 Player 2 06:09:38 $ADD_STORE_CARD:  
{"cardId":147} 

 Player 2 06:09:38 $DRAW_CARD:  
{"deckType":2} 

 Player 2 06:09:38 $FLIP_CARD:  
{"cardId":215} 

 Player 2 06:09:38 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":215} 

 Player 2 06:09:38 $NEW_MONSTER_ON_PLACE:  
{"cardId":215,"monsterPlaceId":1} 

 Player 2 06:09:38 $DRAW_CARD:  
{"deckType":2} 

 Player 2 06:09:38 $FLIP_CARD:  
{"cardId":241} 

 Player 2 06:09:38 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":241} 

 Player 2 06:09:38 $NEW_MONSTER_ON_PLACE:  
{"cardId":241,"monsterPlaceId":2} 

 Player 2 06:09:38 $CHANGE_MONEY:  
{"playerId":1,"numOfCoins":3,"isStartGame":true} 

 Player 2 06:09:38 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":274,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 06:09:38 $DRAW_CARD:  
{"deckType":1} 

 Player 2 06:09:38 $MOVE_CARD:  
{"moveIndex":1,"cardId":67,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 06:09:39 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":67,"flipIfFlipped":false,"playerId":2} 

 Player 2 06:09:39 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":67} 

 Player 2 06:09:39 $FLIP_CARD:  
{"cardId":67} 

 Player 2 06:09:39 $FLIP_CARD:  
{"cardId":67} 

 Player 2 06:09:39 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":67} 

 Player 2 06:09:39 $DRAW_CARD:  
{"deckType":1} 

 Player 2 06:09:39 $MOVE_CARD:  
{"moveIndex":2,"cardId":113,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 06:09:39 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":113,"flipIfFlipped":false,"playerId":2} 

 Player 2 06:09:39 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":113} 

 Player 2 06:09:39 $FLIP_CARD:  
{"cardId":113} 

 Player 2 06:09:39 $FLIP_CARD:  
{"cardId":113} 

 Player 2 06:09:39 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":113} 

 Player 2 06:09:39 $DRAW_CARD:  
{"deckType":1} 

 Player 2 06:09:39 $MOVE_CARD:  
{"moveIndex":3,"cardId":83,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 06:09:40 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":83,"flipIfFlipped":false,"playerId":2} 

 Player 2 06:09:40 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":83} 

 Player 2 06:09:40 $FLIP_CARD:  
{"cardId":83} 

 Player 2 06:09:40 $FLIP_CARD:  
{"cardId":83} 

 Player 2 06:09:40 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":83} 

 Player 2 06:09:40 $CHANGE_MONEY:  
{"playerId":2,"numOfCoins":3,"isStartGame":true} 

 Player 2 06:09:40 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":266,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 06:09:40 $DRAW_CARD:  
{"deckType":1} 

 Player 2 06:09:40 $MOVE_CARD:  
{"moveIndex":4,"cardId":72,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 06:09:40 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":72,"flipIfFlipped":false,"playerId":2} 

 Player 2 06:09:40 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":72} 

 Player 2 06:09:40 $FLIP_CARD:  
{"cardId":72} 

 Player 2 06:09:40 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":72} 

 Player 2 06:09:41 $DRAW_CARD:  
{"deckType":1} 

 Player 2 06:09:41 $MOVE_CARD:  
{"moveIndex":5,"cardId":108,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 06:09:41 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":108,"flipIfFlipped":false,"playerId":2} 

 Player 2 06:09:41 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":108} 

 Player 2 06:09:41 $FLIP_CARD:  
{"cardId":108} 

 Player 2 06:09:41 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":108} 

 Player 2 06:09:41 $DRAW_CARD:  
{"deckType":1} 

 Player 2 06:09:41 $MOVE_CARD:  
{"moveIndex":6,"cardId":137,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 06:09:41 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":137,"flipIfFlipped":false,"playerId":2} 

 Player 2 06:09:41 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":137} 

 Player 2 06:09:41 $FLIP_CARD:  
{"cardId":137} 

 Player 2 06:09:42 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":137} 

 Player 2 06:09:42 $GAME_HAS_STARTED:  

 Player 2 06:09:42 $SET_TURN:  
{"playerId":2} 

 Player 2 06:09:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 06:09:42 $NEXT_STACK_ID:  

 Player 2 06:09:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 06:09:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 06:09:42 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":266,"turnPlayerCardId":266,"stackEffectType":13}} 

 Player 2 06:09:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 2 06:09:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 06:09:42 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 06:09:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 06:09:42 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":266,"turnPlayerCardId":266,"stackEffectType":13}} 

 Player 2 06:09:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 2 06:09:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 2 06:09:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 06:09:42 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 06:09:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 2 06:09:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 06:09:42 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 06:09:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 06:09:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 06:09:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 06:09:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 06:09:42 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 06:09:42 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 06:09:42 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 06:09:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 2 06:09:42 $DRAW_CARD:  
{"deckType":1} 

 Player 2 06:09:42 $MOVE_CARD:  
{"moveIndex":7,"cardId":135,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 06:09:43 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":135,"flipIfFlipped":false,"playerId":2} 

 Player 2 06:09:43 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":135} 

 Player 2 06:09:43 $FLIP_CARD:  
{"cardId":135} 

 Player 2 06:09:43 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":135} 

 Player 2 06:09:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 06:09:43 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":266,"turnPlayerCardId":266,"stackEffectType":13}} 

 Player 2 06:09:43 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 06:09:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 2 06:09:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 06:09:43 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":266,"turnPlayerCardId":266,"stackEffectType":13}} 

 Player 2 06:09:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 2 06:09:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 2 06:09:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 06:09:43 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 06:09:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 06:09:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 06:09:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 06:09:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 06:09:43 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 06:09:43 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 2 06:09:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 2 06:09:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 06:09:43 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 2 06:09:43 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 2 06:09:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 2 06:09:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 06:09:44 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 06:09:44 $UPDATE_ACTIONS:  

 Player 2 06:09:45 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 06:09:46 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 06:09:50 $MOVE_CARD:  
{"moveIndex":8,"cardId":148,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 

 Player 1 06:09:50 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":148,"flipIfFlipped":true,"playerId":2} 

 Player 2 06:09:50 $MOVE_CARD:  
{"moveIndex":9,"cardId":148,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 

 Player 1 06:09:50 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":148,"flipIfFlipped":true,"playerId":2} 

 Player 2 06:09:50 $ADD_AN_ITEM:  
{"playerId":2,"cardId":148,"isReward":true} 

 Player 2 06:09:50 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":148}],"result":true,"preventMethod":false,"methodScopeId":266,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 2 06:09:55 $MOVE_CARD:  
{"moveIndex":10,"cardId":175,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 

 Player 1 06:09:55 $MOVE_CARD_END:  
{"moveIndex":10,"cardId":175,"flipIfFlipped":true,"playerId":2} 

 Player 2 06:09:55 $REGISTER_PASSIVE_ITEM:  
{"cardId":175} 

 Player 2 06:09:56 $MOVE_CARD:  
{"moveIndex":11,"cardId":175,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 

 Player 1 06:09:56 $MOVE_CARD_END:  
{"moveIndex":11,"cardId":175,"flipIfFlipped":true,"playerId":2} 

 Player 2 06:09:56 $ADD_AN_ITEM:  
{"playerId":2,"cardId":175,"isReward":true} 

 Player 2 06:09:56 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":175}],"result":true,"preventMethod":false,"methodScopeId":266,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 2 06:10:00 $PLAYER_GAIN_DMG:  
{"playerId":2,"DMGToGain":4,"isTemp":true} 

 Player 2 06:10:09 $PLAYER_HEAL:  
{"playerId":2,"hpToHeal":0} 

 Player 2 06:10:10 $MOVE_CARD:  
{"moveIndex":12,"cardId":156,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 

 Player 1 06:10:11 $MOVE_CARD_END:  
{"moveIndex":12,"cardId":156,"flipIfFlipped":true,"playerId":2} 

 Player 2 06:10:11 $MOVE_CARD:  
{"moveIndex":13,"cardId":156,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 

 Player 1 06:10:11 $MOVE_CARD_END:  
{"moveIndex":13,"cardId":156,"flipIfFlipped":true,"playerId":2} 

 Player 2 06:10:11 $ADD_AN_ITEM:  
{"playerId":2,"cardId":156,"isReward":true} 

 Player 2 06:10:11 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":156}],"result":true,"preventMethod":false,"methodScopeId":266,"scopeIsPlayer":true,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 

 Player 2 06:10:19 $NEXT_STACK_ID:  

 Player 2 06:10:19 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 06:10:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Boomerang"} 

 Player 2 06:10:19 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":266,"hasLockingStackEffect":false,"itemToPlayCardId":148,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 06:10:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add ActivateItem 2 "}} 

 Player 1 06:10:19 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 06:10:19 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 06:10:22 $LOG_ERROR:  
{} 
//////Error From Player 2////
  

 Player 2 06:10:22 $LOG_ERROR:  
//////Error From Player 2////
 {}
////// 

 Player 2 06:10:22 $USE_ITEM:  
{"cardId":148} 

 Player 2 06:10:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 06:10:22 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 06:10:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Boomerang"} 

 Player 2 06:10:22 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":266,"hasLockingStackEffect":false,"itemToPlayCardId":148,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 06:10:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding ActivateItem 2"},"childOfId":10} 

 Player 2 06:10:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 2 06:10:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 06:10:23 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 2 06:10:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 2 06:10:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 06:10:23 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 06:10:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Boomerang"} 

 Player 1 06:10:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Boomerang"} 

 Player 1 06:10:23 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 06:10:23 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 2 06:10:23 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 2 06:10:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve ActivateItem 2 "}} 

 Player 2 06:10:23 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":148,"particleType":6} 

 Player 2 06:10:25 $DISABLE_PARTICLE_EFFECT:  
{"cardId":148,"particleType":6} 

 Player 2 06:10:25 $LOG_ERROR:  
{} 
//////Error From Player 2////
  

 Player 2 06:10:25 $LOG_ERROR:  
//////Error From Player 2////
 {}
////// 

 Player 2 06:10:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Boomerang"} 

 Player 2 06:10:25 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":266,"hasLockingStackEffect":false,"itemToPlayCardId":148,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 06:10:25 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 06:10:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve ActivateItem 2  "}} 

 Player 2 06:10:25 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 06:10:25 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":266,"hasLockingStackEffect":false,"itemToPlayCardId":148,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 06:10:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve ActivateItem 2"},"childOfId":15} 

 Player 2 06:10:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 2 06:10:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 06:10:25 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 06:10:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Boomerang"} 

 Player 1 06:10:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Boomerang"} 

 Player 1 06:10:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Boomerang"} 

 Player 1 06:10:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Boomerang"} 

 Player 1 06:10:26 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 06:10:26 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 06:10:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 2 06:10:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 06:10:26 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 2 06:10:26 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 2 06:10:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 2 06:10:26 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 06:10:26 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 06:10:27 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 06:10:28 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 06:13:47 $NEXT_STACK_ID:  

 Player 2 06:13:47 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 06:13:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Dads Key"} 

 Player 2 06:13:47 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":266,"hasLockingStackEffect":false,"itemToPlayCardId":156,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 06:13:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add ActivateItem 3 "}} 

 Player 1 06:13:47 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 06:13:47 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 06:14:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 06:14:02 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 06:14:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Dads Key"} 

 Player 2 06:14:02 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":266,"hasLockingStackEffect":false,"itemToPlayCardId":156,"itemPlayerId":2,"effectToDoData":{"type":4,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 06:14:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding ActivateItem 3"},"childOfId":20} 

 Player 2 06:14:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 2 06:14:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 06:14:02 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 2 06:14:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 2 06:14:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 06:14:03 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 06:14:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Dads Key"} 

 Player 1 06:14:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Dads Key"} 

 Player 1 06:14:03 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 06:14:03 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 2 06:14:03 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 2 06:14:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve ActivateItem 3 "}} 

 Player 2 06:14:08 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":72} 

 Player 2 06:14:08 $MOVE_CARD:  
{"moveIndex":14,"cardId":72,"placeID":279,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 06:14:08 $MOVE_CARD_END:  
{"moveIndex":14,"cardId":72,"flipIfFlipped":true,"playerId":2} 

 Player 2 06:14:08 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":72} 

 Player 2 06:14:08 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":156,"particleType":6} 

 Player 2 06:14:10 $DISABLE_PARTICLE_EFFECT:  
{"cardId":156,"particleType":6} 

 Player 2 06:14:10 $DRAW_CARD:  
{"deckType":2} 

 Player 2 06:14:10 $FLIP_CARD:  
{"cardId":239} 

 Player 2 06:14:10 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":239} 

 Player 2 06:14:10 $NEW_MONSTER_ON_PLACE:  
{"cardId":239,"monsterPlaceId":2} 

 Player 2 06:14:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Dads Key"} 

 Player 2 06:14:10 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":266,"hasLockingStackEffect":false,"itemToPlayCardId":156,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 06:14:10 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 06:14:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Remove After Resolve ActivateItem 3  "}} 

 Player 2 06:14:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 06:14:11 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":266,"hasLockingStackEffect":false,"itemToPlayCardId":156,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 06:14:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Response Remove After Resolve ActivateItem 3"},"childOfId":25} 

 Player 2 06:14:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Wait For Response From Player 1 "},"childOfId":25} 

 Player 2 06:14:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 06:14:11 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 06:14:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Dads Key"} 

 Player 1 06:14:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Dads Key"} 

 Player 1 06:14:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Dads Key"} 

 Player 1 06:14:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Dads Key"} 

 Player 1 06:14:11 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 06:14:11 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 2 06:14:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":25} 

 Player 2 06:14:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 06:14:11 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 2 06:14:11 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 2 06:14:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Stack Was Emptied "}} 

 Player 2 06:14:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 06:14:11 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 06:14:12 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 06:14:13 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 06:14:20 $NEXT_STACK_ID:  

 Player 2 06:14:20 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 06:14:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monstro"} 

 Player 2 06:14:20 $ADD_TO_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":266,"attackingPlayerCardId":266,"idOfCardBeingAttacked":239,"stackEffectType":4}} 

 Player 2 06:14:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Add DeclareAttack 4 "}} 

 Player 2 06:14:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 06:14:20 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 06:14:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monstro"} 

 Player 2 06:14:20 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":266,"attackingPlayerCardId":266,"idOfCardBeingAttacked":239,"stackEffectType":4}} 

 Player 2 06:14:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Response Adding DeclareAttack 4"},"childOfId":30} 

 Player 2 06:14:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Wait For Response From Player 2 "},"childOfId":30} 

 Player 2 06:14:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 06:14:21 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 2 06:14:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":30} 

 Player 2 06:14:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 06:14:21 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 06:14:21 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 06:14:21 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 06:14:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monstro"} 

 Player 1 06:14:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monstro"} 

 Player 1 06:14:21 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 06:14:21 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 2 06:14:21 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 2 06:14:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Resolve DeclareAttack 4 "}} 

 Player 2 06:14:21 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":239,"particleType":5} 

 Player 2 06:14:21 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":266,"scopeIsPlayer":true,"index":7,"originStackId":4},"isAfterActivation":true,"index":7} 

 Player 2 06:14:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monstro"} 

 Player 2 06:14:21 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":266,"attackingPlayerCardId":266,"idOfCardBeingAttacked":239,"stackEffectType":4}} 

 Player 2 06:14:21 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 06:14:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Remove After Resolve DeclareAttack 4  "}} 

 Player 2 06:14:21 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 06:14:21 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":266,"attackingPlayerCardId":266,"idOfCardBeingAttacked":239,"stackEffectType":4}} 

 Player 2 06:14:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Response Remove After Resolve DeclareAttack 4"},"childOfId":35} 

 Player 2 06:14:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Wait For Response From Player 1 "},"childOfId":35} 

 Player 2 06:14:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 06:14:21 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 06:14:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monstro"} 

 Player 1 06:14:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monstro"} 

 Player 1 06:14:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monstro"} 

 Player 1 06:14:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monstro"} 

 Player 1 06:14:21 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 06:14:21 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 2 06:14:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 2 "},"childOfId":35} 

 Player 2 06:14:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 06:14:22 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 2 06:14:22 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 2 06:14:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Stack Was Emptied "}} 

 Player 2 06:14:22 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 06:14:22 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 06:14:23 $NEXT_STACK_ID:  

 Player 2 06:14:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 06:14:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Monstro<Monster>"} 

 Player 2 06:14:23 $ADD_TO_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":266,"rollingPlayerCardId":266,"stackEffectType":2,"attackedMonsterCardId":239}} 

 Player 2 06:14:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Add AttackRoll 5 "}} 

 Player 2 06:14:23 $ROLL_DICE:  
{"playerId":2} 

 Player 1 06:14:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 06:14:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 06:14:23 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 06:14:24 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 06:14:25 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":1} 

 Player 2 06:14:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Monstro<Monster>"} 

 Player 2 06:14:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 06:14:25 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 06:14:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Monstro<Monster>"} 

 Player 2 06:14:25 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":266,"numberRolled":1,"rollingPlayerCardId":266,"stackEffectType":2,"attackedMonsterCardId":239}} 

 Player 2 06:14:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Response Adding AttackRoll 5"},"childOfId":40} 

 Player 2 06:14:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Wait For Response From Player 2 "},"childOfId":40} 

 Player 2 06:14:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 06:14:25 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 2 06:14:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 1 "},"childOfId":40} 

 Player 2 06:14:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 06:14:26 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 06:14:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Monstro<Monster>"} 

 Player 1 06:14:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Monstro<Monster>"} 

 Player 1 06:14:26 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 06:14:26 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 2 06:14:26 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 2 06:14:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Resolve AttackRoll 5 "}} 

 Player 2 06:14:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Added 0 to original roll"}} 

 Player 2 06:14:26 $NEXT_STACK_ID:  

 Player 2 06:14:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Monstro<Monster>"} 

 Player 2 06:14:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 06:14:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden combat damage to Monstro \n2:Player 2 rolled 1 vs Monstro<Monster>"} 

 Player 2 06:14:26 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":266,"entityToDoDamageCardId":266,"entityToTakeDamageCardId":239,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 06:14:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden combat damage to Monstro \n2:Player 2 rolled 1 vs Monstro<Monster>"} 

 Player 2 06:14:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden combat damage to Monstro \n2:Player 2 rolled 1 vs Monstro<Monster>"} 

 Player 2 06:14:26 $REPLACE_STACK:  
{"currentStack":[{"entityId":6,"creatorCardId":266,"entityToDoDamageCardId":266,"entityToTakeDamageCardId":239,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":5,"creatorCardId":266,"numberRolled":1,"rollingPlayerCardId":266,"stackEffectType":2,"attackedMonsterCardId":239}]} 

 Player 2 06:14:26 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":266,"scopeIsPlayer":true,"index":8,"originStackId":5},"isAfterActivation":true,"index":8} 

 Player 2 06:14:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden combat damage to Monstro \n2:Player 2 rolled 1 vs Monstro<Monster>"} 

 Player 2 06:14:26 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":266,"numberRolled":1,"rollingPlayerCardId":266,"stackEffectType":2,"attackedMonsterCardId":239}} 

 Player 2 06:14:26 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 06:14:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Remove After Resolve AttackRoll 5  "}} 

 Player 2 06:14:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden combat damage to Monstro"} 

 Player 2 06:14:26 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":266,"numberRolled":1,"rollingPlayerCardId":266,"stackEffectType":2,"attackedMonsterCardId":239}} 

 Player 2 06:14:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Response Remove After Resolve AttackRoll 5"},"childOfId":46} 

 Player 2 06:14:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Wait For Response From Player 2 "},"childOfId":46} 

 Player 2 06:14:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 06:14:26 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 2 06:14:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Wait For Response From Player 1 "},"childOfId":46} 

 Player 2 06:14:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 06:14:27 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 06:14:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Monstro<Monster>"} 

 Player 1 06:14:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Monstro<Monster>"} 

 Player 1 06:14:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden combat damage to Monstro"} 

 Player 1 06:14:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden combat damage to Monstro"} 

 Player 1 06:14:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden combat damage to Monstro"} 

 Player 1 06:14:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden combat damage to Monstro"} 

 Player 1 06:14:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden combat damage to Monstro \n2:Player 2 is rolling against Monstro<Monster>"} 

 Player 1 06:14:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden combat damage to Monstro \n2:Player 2 is rolling against Monstro<Monster>"} 

 Player 1 06:14:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden combat damage to Monstro \n2:Player 2 is rolling against Monstro<Monster>"} 

 Player 1 06:14:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden combat damage to Monstro \n2:Player 2 is rolling against Monstro<Monster>"} 

 Player 1 06:14:27 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 06:14:27 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 2 06:14:27 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 2 06:14:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Resolve CombatDamage 6 "}} 

 Player 2 06:14:27 $MONSTER_GET_DAMAGED:  
{"cardId":239,"hpLeft":0,"damageDealerId":266} 

 Player 2 06:14:27 $NEXT_STACK_ID:  

 Player 2 06:14:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden combat damage to Monstro"} 

 Player 2 06:14:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 06:14:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden combat damage to Monstro \n2:[object Object] killed by Eden"} 

 Player 2 06:14:27 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":266,"monsterToDieCardId":239,"stackEffectType":5,"killerId":266}} 

 Player 2 06:14:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden combat damage to Monstro \n2:[object Object] killed by Eden"} 

 Player 2 06:14:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden combat damage to Monstro \n2:[object Object] killed by Eden"} 

 Player 2 06:14:27 $REPLACE_STACK:  
{"currentStack":[{"entityId":6,"creatorCardId":266,"entityToDoDamageCardId":266,"entityToTakeDamageCardId":239,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":7,"creatorCardId":266,"monsterToDieCardId":239,"stackEffectType":5,"killerId":266}]} 

 Player 2 06:14:27 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":5},{"type":0,"number":266}],"result":null,"preventMethod":false,"methodScopeId":239,"scopeIsPlayer":false,"index":9,"originStackId":-1},"isAfterActivation":true,"index":9} 

 Player 2 06:14:27 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":5},{"type":2,"number":5},{"type":0,"number":266},{"type":0,"number":239}],"result":null,"preventMethod":false,"methodScopeId":266,"scopeIsPlayer":true,"index":10,"originStackId":6},"isAfterActivation":true,"index":10} 

 Player 2 06:14:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden combat damage to Monstro \n2:[object Object] killed by Eden"} 

 Player 2 06:14:27 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":266,"entityToDoDamageCardId":266,"entityToTakeDamageCardId":239,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 06:14:27 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 2 06:14:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Remove After Resolve CombatDamage 6  "}} 

 Player 2 06:14:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Eden"} 

 Player 2 06:14:28 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":266,"entityToDoDamageCardId":266,"entityToTakeDamageCardId":239,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 06:14:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Response Remove After Resolve CombatDamage 6"},"childOfId":51} 

 Player 2 06:14:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Wait For Response From Player 2 "},"childOfId":51} 

 Player 2 06:14:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 06:14:28 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 2 06:14:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Wait For Response From Player 1 "},"childOfId":51} 

 Player 2 06:14:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 06:14:28 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 06:14:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden combat damage to Monstro"} 

 Player 1 06:14:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden combat damage to Monstro"} 

 Player 1 06:14:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by undefined"} 

 Player 1 06:14:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by undefined"} 

 Player 1 06:14:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by undefined"} 

 Player 1 06:14:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by undefined"} 

 Player 1 06:14:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden combat damage to Monstro \n2:[object Object] killed by undefined"} 

 Player 1 06:14:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden combat damage to Monstro \n2:[object Object] killed by undefined"} 

 Player 1 06:14:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden combat damage to Monstro \n2:[object Object] killed by undefined"} 

 Player 1 06:14:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Eden combat damage to Monstro \n2:[object Object] killed by undefined"} 

 Player 1 06:14:28 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 06:14:28 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 2 06:14:28 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 2 06:14:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Resolve MonsterDeath 7 "}} 

 Player 2 06:14:28 $DISABLE_PARTICLE_EFFECT:  
{"cardId":239,"particleType":5} 

 Player 2 06:14:28 $CANCEL_ATTACK:  

 Player 2 06:14:28 $NEXT_STACK_ID:  

 Player 2 06:14:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Eden"} 

 Player 2 06:14:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 06:14:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Monstro<Monster> reward \n2:[object Object] killed by Eden"} 

 Player 2 06:14:28 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":266,"monsterCardWithRewardId":239,"playerCardIdToReward":266,"stackEffectType":7}} 

 Player 2 06:14:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Monstro<Monster> reward \n2:[object Object] killed by Eden"} 

 Player 2 06:14:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Monstro<Monster> reward \n2:[object Object] killed by Eden"} 

 Player 2 06:14:29 $REPLACE_STACK:  
{"currentStack":[{"entityId":8,"creatorCardId":266,"monsterCardWithRewardId":239,"playerCardIdToReward":266,"stackEffectType":7},{"entityId":7,"creatorCardId":266,"monsterToDieCardId":239,"stackEffectType":5,"killerId":266}]} 

 Player 2 06:14:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Monstro<Monster> reward \n2:[object Object] killed by Eden"} 

 Player 2 06:14:29 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":266,"monsterToDieCardId":239,"stackEffectType":5,"killerId":266}} 

 Player 2 06:14:29 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 2 06:14:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":56,"_text":"Remove After Resolve MonsterDeath 7  "}} 

 Player 2 06:14:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Monstro<Monster> reward"} 

 Player 2 06:14:29 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":266,"monsterToDieCardId":239,"stackEffectType":5,"killerId":266}} 

 Player 2 06:14:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":57,"_text":"Response Remove After Resolve MonsterDeath 7"},"childOfId":56} 

 Player 2 06:14:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":58,"_text":"Wait For Response From Player 2 "},"childOfId":56} 

 Player 2 06:14:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 06:14:29 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 2 06:14:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":59,"_text":"Wait For Response From Player 1 "},"childOfId":56} 

 Player 2 06:14:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 06:14:29 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 2 06:14:29 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 2 06:14:29 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 1 06:14:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by undefined"} 

 Player 1 06:14:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by undefined"} 

 Player 1 06:14:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Monstro<Monster> reward"} 

 Player 1 06:14:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Monstro<Monster> reward"} 

 Player 1 06:14:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Monstro<Monster> reward"} 

 Player 1 06:14:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Monstro<Monster> reward"} 

 Player 1 06:14:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Monstro<Monster> reward \n2:[object Object] killed by undefined"} 

 Player 1 06:14:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Monstro<Monster> reward \n2:[object Object] killed by undefined"} 

 Player 1 06:14:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Monstro<Monster> reward \n2:[object Object] killed by undefined"} 

 Player 1 06:14:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Monstro<Monster> reward \n2:[object Object] killed by undefined"} 

 Player 1 06:14:29 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 06:14:29 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 2 06:14:29 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 2 06:14:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":60,"_text":"Resolve MonsterRewardStackEffect 8 "}} 

 Player 2 06:14:29 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":239,"scopeIsPlayer":false,"index":11,"originStackId":8},"isAfterActivation":true,"index":11} 

 Player 2 06:14:30 $CHANGE_MONEY:  
{"playerId":2,"numOfCoins":6} 

 Player 2 06:14:30 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":6}],"result":null,"preventMethod":false,"methodScopeId":266,"scopeIsPlayer":true,"index":12,"originStackId":-1},"isAfterActivation":true,"index":12} 

 Player 2 06:14:30 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 06:14:30 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 06:14:30 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 2 06:14:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":61,"_text":"Fizzle MonsterRewardStackEffect 8"}} 

 Player 2 06:14:30 $MOVE_CARD:  
{"moveIndex":15,"cardId":239,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"soulsLayout"} 

 Player 2 06:14:30 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 1 06:14:30 $MOVE_CARD_END:  
{"moveIndex":15,"cardId":239,"flipIfFlipped":true,"playerId":2} 

 Player 2 06:14:30 $GET_SOUL:  
{"playerId":2,"cardId":239} 

 Player 2 06:14:30 $REMOVE_MONSTER:  
{"holderId":2,"monsterId":239} 

 Player 2 06:14:30 $GET_NEXT_MONSTER:  
{"monsterPlaceId":2} 

 Player 2 06:14:30 $ACTION_MASSAGE_REMOVE:  
{"id":60} 

 Player 2 06:14:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":62,"_text":"Stack Was Emptied "}} 

 Player 2 06:14:30 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 06:14:30 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 2 06:14:31 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 2 06:14:32 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 2 06:14:32 $ACTION_MASSAGE_REMOVE:  
{"id":61} 

 Player 2 06:17:47 $MATCH: 