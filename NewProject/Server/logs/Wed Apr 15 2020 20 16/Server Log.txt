Start Log 

 Player 1 20:16:14 $MATCH:  

 Player 1 20:16:15 $START_GAME:  

 Player 1 20:16:15 $MOVE_TO_TABLE:  

 Player 2 20:16:15 $MOVE_TO_TABLE:  

 Player 1 20:16:24 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 20:16:24 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 2 20:16:24 $SET_CHAR:  
{"originPlayerId":2,"playerId":1,"charCardId":321,"itemCardId":322} 

 Player 1 20:16:24 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":321,"itemCardId":322} 

 Player 1 20:16:24 $SET_CHAR_END:  
{"playerId":2} 

 Player 2 20:16:24 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":311,"itemCardId":312} 

 Player 2 20:16:24 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[77,12,43,27,62,55,68,132,21,139,73,14,47,26,91,8,34,104,98,90,22,15,48,86,96,89,116,127,117,128,63,114,83,80,75,108,125,18,137,10,79,31,121,123,9,106,17,76,44,102,19,60,129,58,109,38,103,33,7,87,45,52,28,119,95,84,82,99,35,13,74,42,57,94,29,46,4,107,6,97,50,138,134,39,78,40,124,101,25,92,30,105,24,65,133,88,126,16,20,23,64,54,69,70,53,36,110,135,113,11,61,111,136,5,37,49,41,122,72,85,66,130,115,81,32,51,120,71,56,112,118,93,100,131,59,67]} 

 Player 2 20:16:24 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[226,258,290,228,268,301,287,254,309,294,278,246,266,259,280,300,297,283,267,227,242,285,308,275,303,252,271,241,295,299,224,264,282,284,306,240,296,272,230,231,289,279,244,304,286,293,234,302,265,255,292,288,229,236,237,261,273,276,269,307,233,270,247,235,262,239,291,253,256,245,238,305,250,260,263,274,243,277,248,225,223,310,257,232,298,249,251,281]} 

 Player 2 20:16:25 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[143,210,198,148,151,174,165,154,176,168,167,166,200,156,215,157,145,141,193,172,163,190,217,195,171,170,185,144,149,191,153,216,212,161,183,205,199,169,188,197,203,177,160,208,175,219,180,173,192,182,207,179,155,159,211,142,164,220,146,152,201,194,202,158,184,162,214,209,206,181,218,204,186,189,187,178,213,147,196,150,221]} 

 Player 2 20:16:25 $DRAW_CARD:  
{"deckType":5} 

 Player 2 20:16:25 $FLIP_CARD:  
{"cardId":221} 

 Player 2 20:16:25 $ADD_STORE_CARD:  
{"cardId":221} 

 Player 2 20:16:25 $DRAW_CARD:  
{"deckType":5} 

 Player 2 20:16:25 $FLIP_CARD:  
{"cardId":150} 

 Player 2 20:16:25 $ADD_STORE_CARD:  
{"cardId":150} 

 Player 2 20:16:25 $DRAW_CARD:  
{"deckType":2} 

 Player 2 20:16:25 $FLIP_CARD:  
{"cardId":281} 

 Player 2 20:16:25 $REGISTER_PASSIVE_ITEM:  
{"cardId":281} 

 Player 2 20:16:25 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":281} 

 Player 2 20:16:25 $NEW_MONSTER_ON_PLACE:  
{"cardId":281,"monsterPlaceId":1} 

 Player 2 20:16:25 $DRAW_CARD:  
{"deckType":2} 

 Player 2 20:16:25 $FLIP_CARD:  
{"cardId":251} 

 Player 2 20:16:25 $REGISTER_PASSIVE_ITEM:  
{"cardId":251} 

 Player 2 20:16:25 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":251} 

 Player 2 20:16:25 $NEW_MONSTER_ON_PLACE:  
{"cardId":251,"monsterPlaceId":2} 

 Player 2 20:16:25 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 20:16:25 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 20:16:25 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:16:25 $MOVE_CARD:  
{"moveIndex":1,"cardId":67,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:16:25 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":67,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:16:25 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":67} 

 Player 2 20:16:25 $FLIP_CARD:  
{"cardId":67} 

 Player 2 20:16:26 $FLIP_CARD:  
{"cardId":67} 

 Player 2 20:16:26 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":67} 

 Player 2 20:16:26 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:16:26 $MOVE_CARD:  
{"moveIndex":2,"cardId":59,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:16:26 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":59,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:16:26 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":59} 

 Player 2 20:16:26 $FLIP_CARD:  
{"cardId":59} 

 Player 2 20:16:26 $FLIP_CARD:  
{"cardId":59} 

 Player 2 20:16:26 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":59} 

 Player 2 20:16:26 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:16:26 $MOVE_CARD:  
{"moveIndex":3,"cardId":131,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:16:26 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":131,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:16:26 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":131} 

 Player 2 20:16:27 $FLIP_CARD:  
{"cardId":131} 

 Player 2 20:16:27 $FLIP_CARD:  
{"cardId":131} 

 Player 2 20:16:27 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":131} 

 Player 2 20:16:27 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 20:16:27 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 20:16:27 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:16:27 $MOVE_CARD:  
{"moveIndex":4,"cardId":100,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:16:27 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":100,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:16:27 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":100} 

 Player 2 20:16:27 $FLIP_CARD:  
{"cardId":100} 

 Player 2 20:16:27 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":100} 

 Player 2 20:16:27 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:16:27 $MOVE_CARD:  
{"moveIndex":5,"cardId":93,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:16:27 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":93,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:16:28 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":93} 

 Player 2 20:16:28 $FLIP_CARD:  
{"cardId":93} 

 Player 2 20:16:28 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":93} 

 Player 2 20:16:28 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:16:28 $MOVE_CARD:  
{"moveIndex":6,"cardId":118,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:16:28 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":118,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:16:28 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":118} 

 Player 2 20:16:28 $FLIP_CARD:  
{"cardId":118} 

 Player 2 20:16:28 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":118} 

 Player 2 20:16:28 $GAME_HAS_STARTED:  

 Player 2 20:16:28 $SET_TURN:  
{"playerId":2} 

 Player 2 20:16:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:16:28 $NEXT_STACK_ID:  

 Player 2 20:16:28 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:16:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 

 Player 2 20:16:28 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":311,"turnPlayerCardId":311,"stackEffectType":13}} 

 Player 2 20:16:28 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":311,"turnPlayerCardId":311,"stackEffectType":13}} 

 Player 2 20:16:28 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 20:16:28 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 1 20:16:28 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:16:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 

 Player 2 20:16:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 2 20:16:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:16:31 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":311,"turnPlayerCardId":311,"stackEffectType":13}} 

 Player 2 20:16:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 2 20:16:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 2 20:16:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:16:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 2 20:16:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:16:31 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:16:31 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[321,322]} 

 Player 1 20:16:31 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:16:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 2 20:16:31 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":311,"turnPlayerCardId":311,"stackEffectType":13}} 

 Player 2 20:16:31 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:16:31 $MOVE_CARD:  
{"moveIndex":7,"cardId":112,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:16:32 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":112,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:16:32 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":112} 

 Player 2 20:16:32 $FLIP_CARD:  
{"cardId":112} 

 Player 2 20:16:32 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":112} 

 Player 2 20:16:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Has Drawen Loot For Start Turn"} 

 Player 2 20:16:32 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":311,"turnPlayerCardId":311,"stackEffectType":13}} 

 Player 2 20:16:32 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":1} 

 Player 2 20:16:32 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 20:16:32 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 1 20:16:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 

 Player 2 20:16:35 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":1} 

 Player 2 20:16:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 2 20:16:35 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:16:35 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":311,"turnPlayerCardId":311,"stackEffectType":13}} 

 Player 2 20:16:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 2 20:16:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 2 20:16:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:16:35 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:16:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 

 Player 1 20:16:35 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[321,322]} 

 Player 1 20:16:35 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:16:35 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 2 20:16:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 2 20:16:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:16:35 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 2 20:16:35 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 2 20:16:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 2 20:16:35 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:16:35 $CLEAR_SE_VIS:  

 Player 2 20:16:35 $UPDATE_ACTIONS:  

 Player 2 20:17:01 $NEXT_STACK_ID:  

 Player 2 20:17:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 declared attack on Isaac!"} 

 Player 2 20:17:01 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":311,"attackingPlayerCardId":311,"idOfCardBeingAttacked":281,"stackEffectType":4}} 

 Player 2 20:17:01 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":311,"attackingPlayerCardId":311,"idOfCardBeingAttacked":281,"stackEffectType":4}} 

 Player 2 20:17:01 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 20:17:01 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 1 20:17:01 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:17:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 declared attack on Isaac!"} 

 Player 2 20:17:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add DeclareAttack 2 "}} 

 Player 2 20:17:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:17:04 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":311,"attackingPlayerCardId":311,"idOfCardBeingAttacked":281,"stackEffectType":4}} 

 Player 2 20:17:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding DeclareAttack 2"},"childOfId":10} 

 Player 2 20:17:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 2 20:17:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:17:04 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 2 20:17:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 2 20:17:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:17:04 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:17:04 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[321,322]} 

 Player 1 20:17:04 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:17:04 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 2 20:17:04 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 2 20:17:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve DeclareAttack 2 "}} 

 Player 2 20:17:04 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":311,"attackingPlayerCardId":311,"idOfCardBeingAttacked":281,"stackEffectType":4}} 

 Player 2 20:17:05 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":281,"particleType":5} 

 Player 2 20:17:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Has Entered Battle with Isaac!"} 

 Player 2 20:17:05 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":3,"originStackId":2},"isAfterActivation":true,"index":3} 

 Player 2 20:17:05 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":311,"attackingPlayerCardId":311,"idOfCardBeingAttacked":281,"stackEffectType":4}} 

 Player 2 20:17:05 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":2} 

 Player 2 20:17:05 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 20:17:05 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 1 20:17:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 declared attack on Isaac!"} 

 Player 2 20:17:07 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":2} 

 Player 2 20:17:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve DeclareAttack 2  "}} 

 Player 2 20:17:07 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:17:07 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":311,"attackingPlayerCardId":311,"idOfCardBeingAttacked":281,"stackEffectType":4}} 

 Player 2 20:17:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve DeclareAttack 2"},"childOfId":15} 

 Player 2 20:17:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 2 20:17:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:17:08 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:17:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 declared attack on Isaac!"} 

 Player 1 20:17:08 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[321,322]} 

 Player 1 20:17:08 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:17:08 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 20:17:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 2 20:17:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:17:08 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 2 20:17:08 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 2 20:17:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 2 20:17:08 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:17:08 $CLEAR_SE_VIS:  

 Player 2 20:17:15 $NEXT_STACK_ID:  

 Player 2 20:17:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 

 Player 2 20:17:15 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":311,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 20:17:15 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":311,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 20:17:16 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 20:17:16 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 1 20:17:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:17:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 

 Player 2 20:17:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add AttackRoll 3 "}} 

 Player 2 20:17:18 $ROLL_DICE:  
{"playerId":2} 

 Player 2 20:17:21 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":4} 

 Player 2 20:17:21 $UPDATE_STACK_VIS:  
{"stackId":3,"text":"player rolled 4 vs Isaac!<Monster>"} 

 Player 2 20:17:21 $SHOW_DICE_ROLL:  
{"stackId":3} 

 Player 2 20:17:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Isaac!<Monster>"} 

 Player 2 20:17:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:17:24 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":311,"numberRolled":4,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 20:17:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding AttackRoll 3"},"childOfId":20} 

 Player 2 20:17:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 2 20:17:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:17:24 $SHOW_REACTIONS:  
{"playerId":2,"cardsIds":[311,312,100,93,118,112]} 

 Player 1 20:17:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 

 Player 2 20:17:39 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[311,312,100,93,118,112]} 

 Player 2 20:17:39 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 2 20:17:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 2 20:17:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:17:40 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:17:40 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[321,322]} 

 Player 1 20:17:40 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:17:40 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 2 20:17:40 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 2 20:17:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve AttackRoll 3 "}} 

 Player 2 20:17:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Isaac!<Monster>"} 

 Player 2 20:17:40 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":311,"numberRolled":4,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 20:17:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Added 0 to original roll"}} 

 Player 2 20:17:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Rolled 4 Against Isaac!<Monster> 3"} 

 Player 2 20:17:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Roll Hit"} 

 Player 2 20:17:40 $NEXT_STACK_ID:  

 Player 2 20:17:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:17:40 $CLEAR_SE_VIS:  

 Player 2 20:17:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel is going to hurt Isaac! \n2:Player 2 Roll Hit"} 

 Player 2 20:17:40 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":311,"entityToDoDamageCardId":311,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 2 20:17:40 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":311,"numberRolled":4,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 20:17:40 $REPLACE_STACK:  
{"currentStack":[{"entityId":4,"creatorCardId":311,"entityToDoDamageCardId":311,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":3,"creatorCardId":311,"numberRolled":4,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":281}]} 

 Player 2 20:17:40 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 20:17:40 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 1 20:17:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 

 Player 1 20:17:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 

 Player 2 20:17:43 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":4,"originStackId":3},"isAfterActivation":true,"index":4} 

 Player 2 20:17:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel is going to hurt Isaac! \n2:Player 2 Roll Hit"} 

 Player 2 20:17:43 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":311,"numberRolled":4,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 20:17:43 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":3} 

 Player 2 20:17:43 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 20:17:43 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 1 20:17:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel is going to hurt Isaac! \n2:Player 2 is rolling against Isaac!<Monster>"} 

 Player 2 20:17:46 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":3} 

 Player 2 20:17:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Remove After Resolve AttackRoll 3  "}} 

 Player 2 20:17:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel is going to hurt Isaac!"} 

 Player 2 20:17:46 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":311,"numberRolled":4,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 20:17:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Response Remove After Resolve AttackRoll 3"},"childOfId":26} 

 Player 2 20:17:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":26} 

 Player 2 20:17:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:17:46 $SHOW_REACTIONS:  
{"playerId":2,"cardsIds":[311,312,100,93,118,112]} 

 Player 1 20:17:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel is going to hurt Isaac! \n2:Player 2 is rolling against Isaac!<Monster>"} 

 Player 2 20:17:59 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[311,312,100,93,118,112]} 

 Player 2 20:17:59 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 2 20:17:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Wait For Response From Player 1 "},"childOfId":26} 

 Player 2 20:17:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:17:59 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:18:00 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[321,322]} 

 Player 1 20:18:00 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:18:00 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 20:18:00 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 2 20:18:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Resolve CombatDamage 4 "}} 

 Player 2 20:18:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel is going to hurt Isaac!"} 

 Player 2 20:18:00 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":311,"entityToDoDamageCardId":311,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 2 20:18:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel will deal 1 combat damage to Isaac! "} 

 Player 2 20:18:00 $UPDATE_STACK_VIS:  
{"stackId":4,"text":"Azazel will deal 1 combat damage to Isaac!"} 

 Player 2 20:18:00 $LOG_ERROR:  
{"message":"\"Cannot read property 'getTarget' of undefined\"","stack":"\"TypeError: Cannot read property 'getTarget' of undefined\\n    at EntityTakeDamage.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:102:46)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\\n    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113284:71\\n    at new Promise (<anonymous>)\\n    at 486.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113264:14)\\n    at EntityTakeDamage.testCondition (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:93:16)\\n    at Function.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:230:32), <anonymous>:367:56)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\""} 
//////Error From Player 2////
  

 Player 2 20:18:00 $LOG_ERROR:  
//////Error From Player 2////

 "\"Cannot read property 'getTarget' of undefined\""

 + "\"TypeError: Cannot read property 'getTarget' of undefined\
    at EntityTakeDamage.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:102:46)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113284:71\
    at new Promise (<anonymous>)\
    at 486.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113264:14)\
    at EntityTakeDamage.testCondition (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:93:16)\
    at Function.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:230:32), <anonymous>:367:56)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\""

////// 
//////Error From Player 2////

 "\"Cannot read property 'getTarget' of undefined\""

 + "\"TypeError: Cannot read property 'getTarget' of undefined\
    at EntityTakeDamage.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:102:46)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113284:71\
    at new Promise (<anonymous>)\
    at 486.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113264:14)\
    at EntityTakeDamage.testCondition (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:93:16)\
    at Function.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:230:32), <anonymous>:367:56)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\""

////// 

 Player 2 20:18:00 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":311},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1} 

 Player 2 20:18:00 $NEXT_STACK_ID:  

 Player 2 20:18:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel will deal 1 combat damage to Isaac!  \n2:Activate Isaac! Effect DealDamage<DealDamage>"} 

 Player 2 20:18:00 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":5,"creatorCardId":311,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 20:18:00 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":5,"creatorCardId":311,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 20:18:00 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 20:18:00 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 1 20:18:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel is going to hurt Isaac!"} 

 Player 1 20:18:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel is going to hurt Isaac! \n2:Activate Isaac! "} 

 Player 2 20:18:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Add ActivatePassiveEffect 5 "}} 

 Player 2 20:26:17 $MATCH: 