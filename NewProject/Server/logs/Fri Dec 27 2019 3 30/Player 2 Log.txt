Start Log 
 Player 2 03:30:57 $MOVE_TO_TABLE:  
 Player 2 03:31:03 $FINISH_LOAD:  
 {"id":2,"turnPlayerId":2} 
 Player 2 03:31:03 $ASSIGN_CHAR_TO_PLAYER:  
 {"playerId":1,"charCardId":260,"itemCardId":261} 
 Player 2 03:31:03 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":277}],"result":true,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 03:31:03 $ASSIGN_CHAR_TO_PLAYER:  
 {"playerId":2,"charCardId":276,"itemCardId":277} 
 Player 2 03:31:03 $DECK_ARRAGMENT:  
 {"deckType":1,"arrangement":[116,140,51,88,109,45,55,25,143,22,142,77,124,27,64,127,86,105,129,29,125,131,63,32,101,132,43,53,68,104,58,119,17,49,114,112,110,136,85,113,8,62,134,65,117,34,71,107,83,9,115,75,96,38,48,42,93,24,61,67,80,40,102,135,52,97,72,46,76,37,14,79,66,91,26,133,33,56,7,130,70,90,28,89,11,138,98,12,20,94,139,123,19,103,50,44,82,100,108,106,73,84,23,21,118,120,122,59,18,111,41,87,81,95,31,16,47,13,36,137,35,15,121,128,60,92,99,141,54,126,69,10,39,78,74,30,57]} 
 Player 2 03:31:03 $DECK_ARRAGMENT:  
 {"deckType":2,"arrangement":[241,215,255,226,249,213,208,227,246,250,243,225,244,239,217,237,256,234,252,210,220,231,216,230,258,211,257,223,214,248,259,251,240,222,238,221,207,235,232,236,206,245,253,233,218,219,209,254,228,224,247,212,229,242]} 
 Player 2 03:31:03 $DECK_ARRAGMENT:  
 {"deckType":5,"arrangement":[188,152,163,162,192,167,160,171,200,196,147,154,164,186,179,169,198,165,146,194,174,172,168,170,158,202,195,161,153,155,199,182,178,193,191,184,185,176,150,177,189,180,197,201,159,151,173,190,187,181,149,148,183,156,175,157,203,166]} 
 Player 2 03:31:03 $DRAW_CARD:  
 {"deckType":5} 
 Player 2 03:31:03 $FLIP_CARD:  
 {"cardId":166} 
 Player 2 03:31:03 $ADD_STORE_CARD:  
 {"cardId":166} 
 Player 2 03:31:03 $DRAW_CARD:  
 {"deckType":5} 
 Player 2 03:31:03 $FLIP_CARD:  
 {"cardId":203} 
 Player 2 03:31:03 $ADD_STORE_CARD:  
 {"cardId":203} 
 Player 2 03:31:03 $DRAW_CARD:  
 {"deckType":2} 
 Player 2 03:31:03 $FLIP_CARD:  
 {"cardId":242} 
 Player 2 03:31:03 $ADD_MONSTER:  
 {"monsterPlaceId":1,"monsterId":242} 
 Player 2 03:31:03 $NEW_MONSTER_ON_PLACE:  
 {"cardId":242,"monsterPlaceId":1} 
 Player 2 03:31:03 $DRAW_CARD:  
 {"deckType":2} 
 Player 2 03:31:03 $FLIP_CARD:  
 {"cardId":229} 
 Player 2 03:31:03 $REGISTER_PASSIVE_ITEM:  
 {"cardId":229} 
 Player 2 03:31:03 $ADD_MONSTER:  
 {"monsterPlaceId":2,"monsterId":229} 
 Player 2 03:31:03 $NEW_MONSTER_ON_PLACE:  
 {"cardId":229,"monsterPlaceId":2} 
 Player 2 03:31:03 $CHANGE_MONEY:  
 {"playerId":1,"numOfCoins":3,"isStartGame":true} 
 Player 2 03:31:03 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":260,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 2 03:31:03 $DRAW_CARD:  
 {"deckType":1} 
 Player 2 03:31:03 $MOVE_CARD:  
 {"moveIndex":1,"cardId":57,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 03:31:04 $CARD_DRAWN:  
 {"playerId":1,"deckType":1,"drawnCardId":57} 
 Player 2 03:31:04 $FLIP_CARD:  
 {"cardId":57} 
 Player 2 03:31:04 $FLIP_CARD:  
 {"cardId":57} 
 Player 2 03:31:04 $PLAYER_GET_LOOT:  
 {"playerId":1,"cardId":57} 
 Player 2 03:31:04 $DRAW_CARD:  
 {"deckType":1} 
 Player 2 03:31:04 $MOVE_CARD:  
 {"moveIndex":2,"cardId":30,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 03:31:04 $CARD_DRAWN:  
 {"playerId":1,"deckType":1,"drawnCardId":30} 
 Player 2 03:31:04 $FLIP_CARD:  
 {"cardId":30} 
 Player 2 03:31:04 $FLIP_CARD:  
 {"cardId":30} 
 Player 2 03:31:04 $PLAYER_GET_LOOT:  
 {"playerId":1,"cardId":30} 
 Player 2 03:31:04 $DRAW_CARD:  
 {"deckType":1} 
 Player 2 03:31:04 $MOVE_CARD:  
 {"moveIndex":3,"cardId":74,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 03:31:05 $CARD_DRAWN:  
 {"playerId":1,"deckType":1,"drawnCardId":74} 
 Player 2 03:31:05 $FLIP_CARD:  
 {"cardId":74} 
 Player 2 03:31:05 $FLIP_CARD:  
 {"cardId":74} 
 Player 2 03:31:05 $PLAYER_GET_LOOT:  
 {"playerId":1,"cardId":74} 
 Player 2 03:31:05 $CHANGE_MONEY:  
 {"playerId":2,"numOfCoins":3,"isStartGame":true} 
 Player 2 03:31:05 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Player 2 03:31:05 $DRAW_CARD:  
 {"deckType":1} 
 Player 2 03:31:05 $MOVE_CARD:  
 {"moveIndex":4,"cardId":78,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 03:31:05 $CARD_DRAWN:  
 {"playerId":2,"deckType":1,"drawnCardId":78} 
 Player 2 03:31:05 $FLIP_CARD:  
 {"cardId":78} 
 Player 2 03:31:05 $PLAYER_GET_LOOT:  
 {"playerId":2,"cardId":78} 
 Player 2 03:31:05 $DRAW_CARD:  
 {"deckType":1} 
 Player 2 03:31:05 $MOVE_CARD:  
 {"moveIndex":5,"cardId":39,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 03:31:06 $CARD_DRAWN:  
 {"playerId":2,"deckType":1,"drawnCardId":39} 
 Player 2 03:31:06 $FLIP_CARD:  
 {"cardId":39} 
 Player 2 03:31:06 $PLAYER_GET_LOOT:  
 {"playerId":2,"cardId":39} 
 Player 2 03:31:06 $DRAW_CARD:  
 {"deckType":1} 
 Player 2 03:31:06 $MOVE_CARD:  
 {"moveIndex":6,"cardId":10,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 03:31:06 $CARD_DRAWN:  
 {"playerId":2,"deckType":1,"drawnCardId":10} 
 Player 2 03:31:06 $FLIP_CARD:  
 {"cardId":10} 
 Player 2 03:31:06 $PLAYER_GET_LOOT:  
 {"playerId":2,"cardId":10} 
 Player 2 03:31:06 $GAME_HAS_STARTED:  
 Player 2 03:31:06 $SET_TURN:  
 {"playerId":1} 
 Player 2 03:31:06 $START_TURN:  
 {"playerId":1} 
 Player 2 03:31:06 $UPDATE_ACTIONS:  
 Player 2 03:31:07 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:31:07 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:31:07 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 03:31:07 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 03:31:07 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:31:07 $MOVE_CARD_END:  
 {"moveIndex":7,"cardId":69,"flipIfFlipped":false,"playerId":1} 
 Player 2 03:31:08 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 03:31:08 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 03:31:08 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 03:31:08 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 03:31:08 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:31:21 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:31:21 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:31:22 $MOVE_CARD_END:  
 {"moveIndex":8,"cardId":69,"flipIfFlipped":true,"playerId":1} 
 Player 2 03:31:22 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play 4 Cents(9) "} 
 Player 2 03:31:22 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play 4 Cents(9) "} 
 Player 2 03:31:22 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:31:25 $MOVE_CARD_END:  
 {"moveIndex":9,"cardId":69,"flipIfFlipped":true,"playerId":1} 
 Player 2 03:31:25 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play 4 Cents(9) "} 
 Player 2 03:31:25 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play 4 Cents(9) "} 
 Player 2 03:31:25 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play 4 Cents(9) "} 
 Player 2 03:31:25 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play 4 Cents(9) "} 
 Player 2 03:31:27 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":true} 
 Player 2 03:31:27 $NEXT_STACK_ID:  
 Player 2 03:31:27 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:31:27 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated The Lost"} 
 Player 2 03:31:27 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":3,"creatorCardId":276,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 03:31:27 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":0,"_text":"Add ActivateItem 3 "}} 
 Player 2 03:31:29 $USE_ITEM:  
 {"cardId":276} 
 Player 2 03:31:29 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:31:29 $ACTION_MASSAGE_REMOVE:  
 {"id":0} 
 Player 2 03:31:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated The Lost"} 
 Player 2 03:31:29 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":3,"creatorCardId":276,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 03:31:29 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":1,"_text":"Response Adding ActivateItem 3"},"childOfId":0} 
 Player 2 03:31:29 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 2 03:31:29 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:31:29 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:31:29 $ACTION_MASSAGE_REMOVE:  
 {"id":2} 
 Player 2 03:31:29 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 2 03:31:29 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:31:32 $ACTION_MASSAGE_REMOVE:  
 {"id":3} 
 Player 2 03:31:32 $ACTION_MASSAGE_REMOVE:  
 {"id":1} 
 Player 2 03:31:32 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":4,"_text":"Resolve ActivateItem 3 "}} 
 Player 2 03:31:32 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":276,"particleType":6} 
 Player 2 03:31:34 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":276,"particleType":6} 
 Player 2 03:31:34 $NEXT_STACK_ID:  
 Player 2 03:31:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated The Lost"} 
 Player 2 03:31:34 $PLAYER_LOSE_LOOT:  
 {"playerId":2,"cardId":78} 
 Player 2 03:31:34 $MOVE_CARD:  
 {"moveIndex":10,"cardId":78,"placeID":278,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 03:31:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play A Dime(4): addMoney \n2:Player 2 activated The Lost"} 
 Player 2 03:31:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play A Dime(4): addMoney \n2:Player 2 activated The Lost"} 
 Player 2 03:31:35 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:31:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play A Dime(4): addMoney \n2:Player 2 activated The Lost"} 
 Player 2 03:31:35 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":4,"creatorCardId":276,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":78,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":78,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 03:31:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play A Dime(4): addMoney \n2:Player 2 activated The Lost"} 
 Player 2 03:31:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play A Dime(4): addMoney \n2:Player 2 activated The Lost"} 
 Player 2 03:31:35 $REPLACE_STACK:  
 {"currentStack":[{"entityId":4,"creatorCardId":276,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":78,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":78,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":3,"creatorCardId":276,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 
 Player 2 03:31:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play A Dime(4): addMoney \n2:Player 2 activated The Lost"} 
 Player 2 03:31:35 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":3,"creatorCardId":276,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 03:31:35 $ACTION_MASSAGE_REMOVE:  
 {"id":4} 
 Player 2 03:31:35 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":5,"_text":"Remove After Resolve ActivateItem 3  "}} 
 Player 2 03:31:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play A Dime(4): addMoney"} 
 Player 2 03:31:35 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":3,"creatorCardId":276,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 03:31:35 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":6,"_text":"Response Remove After Resolve ActivateItem 3"},"childOfId":5} 
 Player 2 03:31:35 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Player 2 03:31:35 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:31:35 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:31:36 $ACTION_MASSAGE_REMOVE:  
 {"id":7} 
 Player 2 03:31:36 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Player 2 03:31:36 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:31:36 $ACTION_MASSAGE_REMOVE:  
 {"id":8} 
 Player 2 03:31:36 $ACTION_MASSAGE_REMOVE:  
 {"id":6} 
 Player 2 03:31:36 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":9,"_text":"Resolve PlayLootCardStackEffect 4 "}} 
 Player 2 03:31:36 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play A Dime(4): addMoney"} 
 Player 2 03:31:36 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":78,"particleType":6} 
 Player 2 03:31:38 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":78,"particleType":6} 
 Player 2 03:31:38 $CHANGE_MONEY:  
 {"playerId":2,"numOfCoins":10} 
 Player 2 03:31:38 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":10}],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 
 Player 2 03:31:38 $MOVE_CARD:  
 {"moveIndex":11,"cardId":78,"placeID":279,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 03:31:38 $ACTION_MASSAGE_REMOVE:  
 {"id":5} 
 Player 2 03:31:38 $MOVE_CARD_TO_PILE:  
 {"type":1,"cardId":78} 
 Player 2 03:31:38 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play A Dime(4): addMoney"} 
 Player 2 03:31:38 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":4,"creatorCardId":276,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":78,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 03:31:38 $ACTION_MASSAGE_REMOVE:  
 {"id":9} 
 Player 2 03:31:38 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":10,"_text":"Remove After Resolve PlayLootCardStackEffect 4  "}} 
 Player 2 03:31:38 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:31:38 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":4,"creatorCardId":276,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":78,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 03:31:38 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":11,"_text":"Response Remove After Resolve PlayLootCardStackEffect 4"},"childOfId":10} 
 Player 2 03:31:38 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 
 Player 2 03:31:38 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:31:38 $ACTION_MASSAGE_REMOVE:  
 {"id":12} 
 Player 2 03:31:38 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 
 Player 2 03:31:39 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:31:39 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:31:39 $ACTION_MASSAGE_REMOVE:  
 {"id":13} 
 Player 2 03:31:39 $ACTION_MASSAGE_REMOVE:  
 {"id":11} 
 Player 2 03:31:39 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":14,"_text":"Stack Was Emptied "}} 
 Player 2 03:31:39 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:31:39 $ACTION_MASSAGE_REMOVE:  
 {"id":10} 
 Player 2 03:31:39 $TURN_PLAYER_DO_STACK_EFFECT:  
 {"playerId":1} 
 Player 2 03:31:40 $ACTION_MASSAGE_REMOVE:  
 {"id":14} 
 Player 2 03:31:41 $ACTION_MASSAGE_REMOVE:  
 {"id":10} 
 Player 2 03:31:50 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:31:50 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:31:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1  declared attack on Pooter"} 
 Player 2 03:31:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1  declared attack on Pooter"} 
 Player 2 03:31:50 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:31:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1  declared attack on Pooter"} 
 Player 2 03:31:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1  declared attack on Pooter"} 
 Player 2 03:31:51 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1  declared attack on Pooter"} 
 Player 2 03:31:51 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1  declared attack on Pooter"} 
 Player 2 03:31:51 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:31:55 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:31:55 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:31:56 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Pooter<Monster>"} 
 Player 2 03:31:56 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Pooter<Monster>"} 
 Player 2 03:32:07 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:32:08 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Pooter<Monster>"} 
 Player 2 03:32:08 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Pooter<Monster>"} 
 Player 2 03:32:08 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Pooter"} 
 Player 2 03:32:08 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Pooter"} 
 Player 2 03:32:08 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Pooter"} 
 Player 2 03:32:08 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Pooter"} 
 Player 2 03:32:08 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Pooter \n2:Player 1 is rolling against Pooter<Monster>"} 
 Player 2 03:32:08 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Pooter \n2:Player 1 is rolling against Pooter<Monster>"} 
 Player 2 03:32:08 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Pooter \n2:Player 1 is rolling against Pooter<Monster>"} 
 Player 2 03:32:08 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Pooter \n2:Player 1 is rolling against Pooter<Monster>"} 
 Player 2 03:32:11 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:32:11 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Pooter"} 
 Player 2 03:32:11 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Pooter"} 
 Player 2 03:32:11 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Pooter"} 
 Player 2 03:32:11 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Pooter"} 
 Player 2 03:32:11 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:32:12 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:32:12 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:32:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Pooter<Monster>"} 
 Player 2 03:32:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Pooter<Monster>"} 
 Player 2 03:32:15 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:32:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Pooter<Monster>"} 
 Player 2 03:32:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Pooter<Monster>"} 
 Player 2 03:32:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Pooter"} 
 Player 2 03:32:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Pooter"} 
 Player 2 03:32:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Pooter"} 
 Player 2 03:32:16 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Pooter"} 
 Player 2 03:32:16 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Pooter \n2:Player 1 is rolling against Pooter<Monster>"} 
 Player 2 03:32:16 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Pooter \n2:Player 1 is rolling against Pooter<Monster>"} 
 Player 2 03:32:16 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Pooter \n2:Player 1 is rolling against Pooter<Monster>"} 
 Player 2 03:32:16 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Pooter \n2:Player 1 is rolling against Pooter<Monster>"} 
 Player 2 03:32:16 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:32:17 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Pooter"} 
 Player 2 03:32:17 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Pooter"} 
 Player 2 03:32:17 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by undefined"} 
 Player 2 03:32:17 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by undefined"} 
 Player 2 03:32:17 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by undefined"} 
 Player 2 03:32:17 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by undefined"} 
 Player 2 03:32:17 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Pooter \n2:[object Object] killed by undefined"} 
 Player 2 03:32:17 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Pooter \n2:[object Object] killed by undefined"} 
 Player 2 03:32:17 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Pooter \n2:[object Object] killed by undefined"} 
 Player 2 03:32:17 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Pooter \n2:[object Object] killed by undefined"} 
 Player 2 03:32:17 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:32:18 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by undefined"} 
 Player 2 03:32:18 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by undefined"} 
 Player 2 03:32:18 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Pooter<Monster> reward"} 
 Player 2 03:32:18 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Pooter<Monster> reward"} 
 Player 2 03:32:18 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Pooter<Monster> reward"} 
 Player 2 03:32:18 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Pooter<Monster> reward"} 
 Player 2 03:32:18 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Pooter<Monster> reward \n2:[object Object] killed by undefined"} 
 Player 2 03:32:18 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Pooter<Monster> reward \n2:[object Object] killed by undefined"} 
 Player 2 03:32:18 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Pooter<Monster> reward \n2:[object Object] killed by undefined"} 
 Player 2 03:32:18 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Pooter<Monster> reward \n2:[object Object] killed by undefined"} 
 Player 2 03:32:18 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:32:19 $MOVE_CARD_END:  
 {"moveIndex":12,"cardId":126,"flipIfFlipped":false,"playerId":1} 
 Player 2 03:32:19 $MOVE_CARD_END:  
 {"moveIndex":13,"cardId":242,"flipIfFlipped":true,"playerId":1} 
 Player 2 03:32:20 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Pooter<Monster> reward"} 
 Player 2 03:32:20 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Pooter<Monster> reward"} 
 Player 2 03:32:20 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Pooter<Monster> reward \n2:Refill holder1 slot"} 
 Player 2 03:32:20 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Pooter<Monster> reward \n2:Refill holder1 slot"} 
 Player 2 03:32:20 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:32:21 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Pooter<Monster> reward \n2:Refill holder1 slot"} 
 Player 2 03:32:21 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Pooter<Monster> reward \n2:Refill holder1 slot"} 
 Player 2 03:32:21 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:32:53 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:32:53 $RECHARGE_ITEM:  
 {"cardId":276} 
 Player 2 03:32:53 $PLAYER_RECHARGE_ITEM:  
 {"playerId":2,"cardId":276} 
 Player 2 03:32:53 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:32:53 $NEXT_STACK_ID:  
 Player 2 03:32:53 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:32:53 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 03:32:53 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":13,"creatorCardId":276,"turnPlayerCardId":276,"stackEffectType":13}} 
 Player 2 03:32:53 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":15,"_text":"Add StartTurnLoot 13 "}} 
 Player 2 03:32:53 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:32:53 $ACTION_MASSAGE_REMOVE:  
 {"id":15} 
 Player 2 03:32:53 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 03:32:53 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":13,"creatorCardId":276,"turnPlayerCardId":276,"stackEffectType":13}} 
 Player 2 03:32:53 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":16,"_text":"Response Adding StartTurnLoot 13"},"childOfId":15} 
 Player 2 03:32:53 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 
 Player 2 03:32:53 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:32:53 $ACTION_MASSAGE_REMOVE:  
 {"id":17} 
 Player 2 03:32:53 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 
 Player 2 03:32:53 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:32:53 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:32:53 $ACTION_MASSAGE_REMOVE:  
 {"id":18} 
 Player 2 03:32:53 $ACTION_MASSAGE_REMOVE:  
 {"id":16} 
 Player 2 03:32:53 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":19,"_text":"Resolve StartTurnLoot 13 "}} 
 Player 2 03:32:53 $DRAW_CARD:  
 {"deckType":1} 
 Player 2 03:32:53 $MOVE_CARD:  
 {"moveIndex":14,"cardId":54,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 03:32:54 $CARD_DRAWN:  
 {"playerId":2,"deckType":1,"drawnCardId":54} 
 Player 2 03:32:54 $FLIP_CARD:  
 {"cardId":54} 
 Player 2 03:32:54 $PLAYER_GET_LOOT:  
 {"playerId":2,"cardId":54} 
 Player 2 03:32:54 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 03:32:54 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":13,"creatorCardId":276,"turnPlayerCardId":276,"stackEffectType":13}} 
 Player 2 03:32:54 $ACTION_MASSAGE_REMOVE:  
 {"id":19} 
 Player 2 03:32:54 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":20,"_text":"Remove After Resolve StartTurnLoot 13  "}} 
 Player 2 03:32:54 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:32:54 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":13,"creatorCardId":276,"turnPlayerCardId":276,"stackEffectType":13}} 
 Player 2 03:32:54 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":21,"_text":"Response Remove After Resolve StartTurnLoot 13"},"childOfId":20} 
 Player 2 03:32:54 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":22,"_text":"Wait For Response From Player 1 "},"childOfId":20} 
 Player 2 03:32:54 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:32:54 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:32:54 $ACTION_MASSAGE_REMOVE:  
 {"id":22} 
 Player 2 03:32:54 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":23,"_text":"Wait For Response From Player 2 "},"childOfId":20} 
 Player 2 03:32:54 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:32:54 $ACTION_MASSAGE_REMOVE:  
 {"id":23} 
 Player 2 03:32:54 $ACTION_MASSAGE_REMOVE:  
 {"id":21} 
 Player 2 03:32:54 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":24,"_text":"Stack Was Emptied "}} 
 Player 2 03:32:54 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:32:54 $ACTION_MASSAGE_REMOVE:  
 {"id":20} 
 Player 2 03:32:56 $ACTION_MASSAGE_REMOVE:  
 {"id":24} 
 Player 2 03:32:57 $ACTION_MASSAGE_REMOVE:  
 {"id":20} 
 Player 2 03:33:15 $NEXT_STACK_ID:  
 Player 2 03:33:15 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:33:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to buy TopBlankCard for 10"} 
 Player 2 03:33:15 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":14,"creatorCardId":276,"itemToPurchaseCardId":0,"playerWhoBuysCardId":276,"cost":10,"stackEffectType":9}} 
 Player 2 03:33:15 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":25,"_text":"Add PurchaseItem 14 "}} 
 Player 2 03:33:15 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:33:15 $ACTION_MASSAGE_REMOVE:  
 {"id":25} 
 Player 2 03:33:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to buy TopBlankCard for 10"} 
 Player 2 03:33:15 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":14,"creatorCardId":276,"itemToPurchaseCardId":0,"playerWhoBuysCardId":276,"cost":10,"stackEffectType":9}} 
 Player 2 03:33:15 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":26,"_text":"Response Adding PurchaseItem 14"},"childOfId":25} 
 Player 2 03:33:15 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":27,"_text":"Wait For Response From Player 2 "},"childOfId":25} 
 Player 2 03:33:15 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:33:15 $ACTION_MASSAGE_REMOVE:  
 {"id":27} 
 Player 2 03:33:15 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":28,"_text":"Wait For Response From Player 1 "},"childOfId":25} 
 Player 2 03:33:15 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:33:15 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:33:16 $ACTION_MASSAGE_REMOVE:  
 {"id":28} 
 Player 2 03:33:16 $ACTION_MASSAGE_REMOVE:  
 {"id":26} 
 Player 2 03:33:16 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":29,"_text":"Resolve PurchaseItem 14 "}} 
 Player 2 03:33:16 $CHANGE_MONEY:  
 {"playerId":2,"numOfCoins":-10} 
 Player 2 03:33:16 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-10}],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 
 Player 2 03:33:16 $DRAW_CARD:  
 {"deckType":5} 
 Player 2 03:33:16 $REGISTER_PASSIVE_ITEM:  
 {"cardId":157} 
 Player 2 03:33:16 $MOVE_CARD:  
 {"moveIndex":15,"cardId":157,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 
 Player 2 03:33:16 $ADD_AN_ITEM:  
 {"playerId":2,"cardId":157,"isReward":false} 
 Player 2 03:33:16 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":157}],"result":true,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 
 Player 2 03:33:16 $ACTION_MASSAGE_REMOVE:  
 {"id":29} 
 Player 2 03:33:16 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":30,"_text":"Remove After Resolve PurchaseItem 14  "}} 
 Player 2 03:33:16 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:33:16 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":14,"creatorCardId":276,"itemToPurchaseCardId":0,"playerWhoBuysCardId":276,"cost":10,"stackEffectType":9}} 
 Player 2 03:33:16 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":31,"_text":"Response Remove After Resolve PurchaseItem 14"},"childOfId":30} 
 Player 2 03:33:16 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":32,"_text":"Wait For Response From Player 1 "},"childOfId":30} 
 Player 2 03:33:16 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:33:16 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:33:17 $ACTION_MASSAGE_REMOVE:  
 {"id":32} 
 Player 2 03:33:17 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":33,"_text":"Wait For Response From Player 2 "},"childOfId":30} 
 Player 2 03:33:17 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:33:17 $ACTION_MASSAGE_REMOVE:  
 {"id":33} 
 Player 2 03:33:17 $ACTION_MASSAGE_REMOVE:  
 {"id":31} 
 Player 2 03:33:17 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":34,"_text":"Stack Was Emptied "}} 
 Player 2 03:33:17 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:33:17 $ACTION_MASSAGE_REMOVE:  
 {"id":30} 
 Player 2 03:33:18 $ACTION_MASSAGE_REMOVE:  
 {"id":34} 
 Player 2 03:33:19 $ACTION_MASSAGE_REMOVE:  
 {"id":30} 
 Player 2 03:33:32 $NEXT_STACK_ID:  
 Player 2 03:33:32 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:33:32 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on Greed"} 
 Player 2 03:33:32 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":15,"creatorCardId":276,"attackingPlayerCardId":276,"idOfCardBeingAttacked":229,"stackEffectType":4}} 
 Player 2 03:33:32 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":35,"_text":"Add DeclareAttack 15 "}} 
 Player 2 03:33:32 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:33:32 $ACTION_MASSAGE_REMOVE:  
 {"id":35} 
 Player 2 03:33:32 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on Greed"} 
 Player 2 03:33:32 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":15,"creatorCardId":276,"attackingPlayerCardId":276,"idOfCardBeingAttacked":229,"stackEffectType":4}} 
 Player 2 03:33:32 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":36,"_text":"Response Adding DeclareAttack 15"},"childOfId":35} 
 Player 2 03:33:32 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":37,"_text":"Wait For Response From Player 2 "},"childOfId":35} 
 Player 2 03:33:32 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:33:32 $ACTION_MASSAGE_REMOVE:  
 {"id":37} 
 Player 2 03:33:32 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":38,"_text":"Wait For Response From Player 1 "},"childOfId":35} 
 Player 2 03:33:32 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:33:32 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:33:33 $ACTION_MASSAGE_REMOVE:  
 {"id":38} 
 Player 2 03:33:33 $ACTION_MASSAGE_REMOVE:  
 {"id":36} 
 Player 2 03:33:33 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":39,"_text":"Resolve DeclareAttack 15 "}} 
 Player 2 03:33:33 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":229,"particleType":5} 
 Player 2 03:33:33 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":7,"originStackId":15},"isAfterActivation":true,"index":7} 
 Player 2 03:33:33 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on Greed"} 
 Player 2 03:33:33 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":15,"creatorCardId":276,"attackingPlayerCardId":276,"idOfCardBeingAttacked":229,"stackEffectType":4}} 
 Player 2 03:33:33 $ACTION_MASSAGE_REMOVE:  
 {"id":39} 
 Player 2 03:33:33 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":40,"_text":"Remove After Resolve DeclareAttack 15  "}} 
 Player 2 03:33:33 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:33:33 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":15,"creatorCardId":276,"attackingPlayerCardId":276,"idOfCardBeingAttacked":229,"stackEffectType":4}} 
 Player 2 03:33:33 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":41,"_text":"Response Remove After Resolve DeclareAttack 15"},"childOfId":40} 
 Player 2 03:33:33 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":42,"_text":"Wait For Response From Player 1 "},"childOfId":40} 
 Player 2 03:33:33 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:33:33 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:33:33 $ACTION_MASSAGE_REMOVE:  
 {"id":42} 
 Player 2 03:33:33 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":43,"_text":"Wait For Response From Player 2 "},"childOfId":40} 
 Player 2 03:33:33 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:33:33 $ACTION_MASSAGE_REMOVE:  
 {"id":43} 
 Player 2 03:33:33 $ACTION_MASSAGE_REMOVE:  
 {"id":41} 
 Player 2 03:33:33 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":44,"_text":"Stack Was Emptied "}} 
 Player 2 03:33:33 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:33:34 $ACTION_MASSAGE_REMOVE:  
 {"id":40} 
 Player 2 03:33:35 $ACTION_MASSAGE_REMOVE:  
 {"id":44} 
 Player 2 03:33:36 $ACTION_MASSAGE_REMOVE:  
 {"id":40} 
 Player 2 03:33:38 $NEXT_STACK_ID:  
 Player 2 03:33:39 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:33:39 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 
 Player 2 03:33:39 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":16,"creatorCardId":276,"rollingPlayerCardId":276,"stackEffectType":2,"attackedMonsterCardId":229}} 
 Player 2 03:33:39 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":45,"_text":"Add AttackRoll 16 "}} 
 Player 2 03:33:39 $ROLL_DICE:  
 {"playerId":2} 
 Player 2 03:33:40 $ROLL_DICE_ENDED:  
 {"playerId":2,"numberRolled":6} 
 Player 2 03:33:40 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 6 vs Greed<Monster>"} 
 Player 2 03:33:40 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:33:40 $ACTION_MASSAGE_REMOVE:  
 {"id":45} 
 Player 2 03:33:40 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 6 vs Greed<Monster>"} 
 Player 2 03:33:40 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":16,"creatorCardId":276,"numberRolled":6,"rollingPlayerCardId":276,"stackEffectType":2,"attackedMonsterCardId":229}} 
 Player 2 03:33:40 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":46,"_text":"Response Adding AttackRoll 16"},"childOfId":45} 
 Player 2 03:33:40 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":47,"_text":"Wait For Response From Player 2 "},"childOfId":45} 
 Player 2 03:33:40 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:33:44 $ACTION_MASSAGE_REMOVE:  
 {"id":47} 
 Player 2 03:33:44 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":48,"_text":"Wait For Response From Player 1 "},"childOfId":45} 
 Player 2 03:33:44 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:33:44 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:33:44 $ACTION_MASSAGE_REMOVE:  
 {"id":48} 
 Player 2 03:33:44 $ACTION_MASSAGE_REMOVE:  
 {"id":46} 
 Player 2 03:33:45 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":49,"_text":"Resolve AttackRoll 16 "}} 
 Player 2 03:33:45 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":50,"_text":"Added 0 to original roll"}} 
 Player 2 03:33:45 $NEXT_STACK_ID:  
 Player 2 03:33:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 6 vs Greed<Monster>"} 
 Player 2 03:33:45 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:33:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed \n2:Player 2 rolled 6 vs Greed<Monster>"} 
 Player 2 03:33:45 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":17,"creatorCardId":276,"entityToDoDamageCardId":276,"entityToTakeDamageCardId":229,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 03:33:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed \n2:Player 2 rolled 6 vs Greed<Monster>"} 
 Player 2 03:33:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed \n2:Player 2 rolled 6 vs Greed<Monster>"} 
 Player 2 03:33:45 $REPLACE_STACK:  
 {"currentStack":[{"entityId":17,"creatorCardId":276,"entityToDoDamageCardId":276,"entityToTakeDamageCardId":229,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":16,"creatorCardId":276,"numberRolled":6,"rollingPlayerCardId":276,"stackEffectType":2,"attackedMonsterCardId":229}]} 
 Player 2 03:33:45 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":6},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":8,"originStackId":16},"isAfterActivation":true,"index":8} 
 Player 2 03:33:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed \n2:Player 2 rolled 6 vs Greed<Monster>"} 
 Player 2 03:33:45 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":16,"creatorCardId":276,"numberRolled":6,"rollingPlayerCardId":276,"stackEffectType":2,"attackedMonsterCardId":229}} 
 Player 2 03:33:45 $ACTION_MASSAGE_REMOVE:  
 {"id":49} 
 Player 2 03:33:45 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":51,"_text":"Remove After Resolve AttackRoll 16  "}} 
 Player 2 03:33:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed"} 
 Player 2 03:33:45 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":16,"creatorCardId":276,"numberRolled":6,"rollingPlayerCardId":276,"stackEffectType":2,"attackedMonsterCardId":229}} 
 Player 2 03:33:45 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":52,"_text":"Response Remove After Resolve AttackRoll 16"},"childOfId":51} 
 Player 2 03:33:45 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":53,"_text":"Wait For Response From Player 2 "},"childOfId":51} 
 Player 2 03:33:45 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:33:45 $ACTION_MASSAGE_REMOVE:  
 {"id":53} 
 Player 2 03:33:45 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":54,"_text":"Wait For Response From Player 1 "},"childOfId":51} 
 Player 2 03:33:45 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:33:45 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:33:45 $ACTION_MASSAGE_REMOVE:  
 {"id":54} 
 Player 2 03:33:45 $ACTION_MASSAGE_REMOVE:  
 {"id":52} 
 Player 2 03:33:45 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":55,"_text":"Resolve CombatDamage 17 "}} 
 Player 2 03:33:45 $MONSTER_GET_DAMAGED:  
 {"cardId":229,"hpLeft":2,"damageDealerId":276} 
 Player 2 03:33:45 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":276}],"result":null,"preventMethod":false,"methodScopeId":229,"scopeIsPlayer":false,"index":9,"originStackId":-1},"isAfterActivation":true,"index":9} 
 Player 2 03:33:45 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":6},{"type":0,"number":276},{"type":0,"number":229}],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":10,"originStackId":17},"isAfterActivation":true,"index":10} 
 Player 2 03:33:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed"} 
 Player 2 03:33:45 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":17,"creatorCardId":276,"entityToDoDamageCardId":276,"entityToTakeDamageCardId":229,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 03:33:45 $ACTION_MASSAGE_REMOVE:  
 {"id":55} 
 Player 2 03:33:46 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":56,"_text":"Remove After Resolve CombatDamage 17  "}} 
 Player 2 03:33:46 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:33:46 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":17,"creatorCardId":276,"entityToDoDamageCardId":276,"entityToTakeDamageCardId":229,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 03:33:46 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":57,"_text":"Response Remove After Resolve CombatDamage 17"},"childOfId":56} 
 Player 2 03:33:46 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":58,"_text":"Wait For Response From Player 1 "},"childOfId":56} 
 Player 2 03:33:46 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:33:46 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:33:46 $ACTION_MASSAGE_REMOVE:  
 {"id":58} 
 Player 2 03:33:46 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":59,"_text":"Wait For Response From Player 2 "},"childOfId":56} 
 Player 2 03:33:46 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:33:46 $ACTION_MASSAGE_REMOVE:  
 {"id":59} 
 Player 2 03:33:46 $ACTION_MASSAGE_REMOVE:  
 {"id":57} 
 Player 2 03:33:46 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":60,"_text":"Stack Was Emptied "}} 
 Player 2 03:33:46 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:33:46 $ACTION_MASSAGE_REMOVE:  
 {"id":49} 
 Player 2 03:33:46 $ACTION_MASSAGE_REMOVE:  
 {"id":51} 
 Player 2 03:33:47 $ACTION_MASSAGE_REMOVE:  
 {"id":60} 
 Player 2 03:33:47 $ACTION_MASSAGE_REMOVE:  
 {"id":50} 
 Player 2 03:33:47 $ACTION_MASSAGE_REMOVE:  
 {"id":51} 
 Player 2 03:33:48 $NEXT_STACK_ID:  
 Player 2 03:33:48 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:33:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 
 Player 2 03:33:48 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":18,"creatorCardId":276,"rollingPlayerCardId":276,"stackEffectType":2,"attackedMonsterCardId":229}} 
 Player 2 03:33:48 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":61,"_text":"Add AttackRoll 18 "}} 
 Player 2 03:33:48 $ROLL_DICE:  
 {"playerId":2} 
 Player 2 03:33:48 $ACTION_MASSAGE_REMOVE:  
 {"id":56} 
 Player 2 03:33:50 $ROLL_DICE_ENDED:  
 {"playerId":2,"numberRolled":4} 
 Player 2 03:33:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 4 vs Greed<Monster>"} 
 Player 2 03:33:50 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:33:50 $ACTION_MASSAGE_REMOVE:  
 {"id":61} 
 Player 2 03:33:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 4 vs Greed<Monster>"} 
 Player 2 03:33:50 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":18,"creatorCardId":276,"numberRolled":4,"rollingPlayerCardId":276,"stackEffectType":2,"attackedMonsterCardId":229}} 
 Player 2 03:33:50 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":62,"_text":"Response Adding AttackRoll 18"},"childOfId":61} 
 Player 2 03:33:50 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":63,"_text":"Wait For Response From Player 2 "},"childOfId":61} 
 Player 2 03:33:50 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:33:55 $ACTION_MASSAGE_REMOVE:  
 {"id":63} 
 Player 2 03:33:55 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":64,"_text":"Wait For Response From Player 1 "},"childOfId":61} 
 Player 2 03:33:55 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:33:55 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:33:55 $ACTION_MASSAGE_REMOVE:  
 {"id":64} 
 Player 2 03:33:55 $ACTION_MASSAGE_REMOVE:  
 {"id":62} 
 Player 2 03:33:55 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":65,"_text":"Resolve AttackRoll 18 "}} 
 Player 2 03:33:55 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":66,"_text":"Added 0 to original roll"}} 
 Player 2 03:33:55 $NEXT_STACK_ID:  
 Player 2 03:33:55 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 4 vs Greed<Monster>"} 
 Player 2 03:33:55 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:33:55 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed \n2:Player 2 rolled 4 vs Greed<Monster>"} 
 Player 2 03:33:55 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":19,"creatorCardId":276,"entityToDoDamageCardId":276,"entityToTakeDamageCardId":229,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 03:33:55 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed \n2:Player 2 rolled 4 vs Greed<Monster>"} 
 Player 2 03:33:55 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed \n2:Player 2 rolled 4 vs Greed<Monster>"} 
 Player 2 03:33:55 $REPLACE_STACK:  
 {"currentStack":[{"entityId":19,"creatorCardId":276,"entityToDoDamageCardId":276,"entityToTakeDamageCardId":229,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":18,"creatorCardId":276,"numberRolled":4,"rollingPlayerCardId":276,"stackEffectType":2,"attackedMonsterCardId":229}]} 
 Player 2 03:33:55 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":1},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":11,"originStackId":18},"isAfterActivation":true,"index":11} 
 Player 2 03:33:55 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed \n2:Player 2 rolled 4 vs Greed<Monster>"} 
 Player 2 03:33:55 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":18,"creatorCardId":276,"numberRolled":4,"rollingPlayerCardId":276,"stackEffectType":2,"attackedMonsterCardId":229}} 
 Player 2 03:33:55 $ACTION_MASSAGE_REMOVE:  
 {"id":65} 
 Player 2 03:33:55 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":67,"_text":"Remove After Resolve AttackRoll 18  "}} 
 Player 2 03:33:55 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed"} 
 Player 2 03:33:56 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":18,"creatorCardId":276,"numberRolled":4,"rollingPlayerCardId":276,"stackEffectType":2,"attackedMonsterCardId":229}} 
 Player 2 03:33:56 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":68,"_text":"Response Remove After Resolve AttackRoll 18"},"childOfId":67} 
 Player 2 03:33:56 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":69,"_text":"Wait For Response From Player 2 "},"childOfId":67} 
 Player 2 03:33:56 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:33:56 $ACTION_MASSAGE_REMOVE:  
 {"id":69} 
 Player 2 03:33:56 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":70,"_text":"Wait For Response From Player 1 "},"childOfId":67} 
 Player 2 03:33:56 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:33:56 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:33:56 $ACTION_MASSAGE_REMOVE:  
 {"id":70} 
 Player 2 03:33:56 $ACTION_MASSAGE_REMOVE:  
 {"id":68} 
 Player 2 03:33:56 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":71,"_text":"Resolve CombatDamage 19 "}} 
 Player 2 03:33:56 $MONSTER_GET_DAMAGED:  
 {"cardId":229,"hpLeft":1,"damageDealerId":276} 
 Player 2 03:33:56 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":276}],"result":null,"preventMethod":false,"methodScopeId":229,"scopeIsPlayer":false,"index":12,"originStackId":-1},"isAfterActivation":true,"index":12} 
 Player 2 03:33:56 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":4},{"type":0,"number":276},{"type":0,"number":229}],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":13,"originStackId":19},"isAfterActivation":true,"index":13} 
 Player 2 03:33:56 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed"} 
 Player 2 03:33:56 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":19,"creatorCardId":276,"entityToDoDamageCardId":276,"entityToTakeDamageCardId":229,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 03:33:56 $ACTION_MASSAGE_REMOVE:  
 {"id":71} 
 Player 2 03:33:56 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":72,"_text":"Remove After Resolve CombatDamage 19  "}} 
 Player 2 03:33:56 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:33:56 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":19,"creatorCardId":276,"entityToDoDamageCardId":276,"entityToTakeDamageCardId":229,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 03:33:56 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":73,"_text":"Response Remove After Resolve CombatDamage 19"},"childOfId":72} 
 Player 2 03:33:56 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":74,"_text":"Wait For Response From Player 1 "},"childOfId":72} 
 Player 2 03:33:56 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:33:56 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:33:57 $ACTION_MASSAGE_REMOVE:  
 {"id":74} 
 Player 2 03:33:57 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":75,"_text":"Wait For Response From Player 2 "},"childOfId":72} 
 Player 2 03:33:57 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:33:57 $ACTION_MASSAGE_REMOVE:  
 {"id":75} 
 Player 2 03:33:57 $ACTION_MASSAGE_REMOVE:  
 {"id":73} 
 Player 2 03:33:57 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":76,"_text":"Stack Was Emptied "}} 
 Player 2 03:33:57 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:33:57 $ACTION_MASSAGE_REMOVE:  
 {"id":65} 
 Player 2 03:33:57 $ACTION_MASSAGE_REMOVE:  
 {"id":67} 
 Player 2 03:33:58 $ACTION_MASSAGE_REMOVE:  
 {"id":66} 
 Player 2 03:33:58 $ACTION_MASSAGE_REMOVE:  
 {"id":67} 
 Player 2 03:33:59 $ACTION_MASSAGE_REMOVE:  
 {"id":76} 
 Player 2 03:33:59 $ACTION_MASSAGE_REMOVE:  
 {"id":72} 
 Player 2 03:34:00 $NEXT_STACK_ID:  
 Player 2 03:34:00 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:34:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 
 Player 2 03:34:00 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":20,"creatorCardId":276,"rollingPlayerCardId":276,"stackEffectType":2,"attackedMonsterCardId":229}} 
 Player 2 03:34:00 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":77,"_text":"Add AttackRoll 20 "}} 
 Player 2 03:34:00 $ROLL_DICE:  
 {"playerId":2} 
 Player 2 03:34:01 $ROLL_DICE_ENDED:  
 {"playerId":2,"numberRolled":2} 
 Player 2 03:34:01 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 2 vs Greed<Monster>"} 
 Player 2 03:34:01 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:34:01 $ACTION_MASSAGE_REMOVE:  
 {"id":77} 
 Player 2 03:34:01 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 2 vs Greed<Monster>"} 
 Player 2 03:34:01 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":20,"creatorCardId":276,"numberRolled":2,"rollingPlayerCardId":276,"stackEffectType":2,"attackedMonsterCardId":229}} 
 Player 2 03:34:02 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":78,"_text":"Response Adding AttackRoll 20"},"childOfId":77} 
 Player 2 03:34:02 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":79,"_text":"Wait For Response From Player 2 "},"childOfId":77} 
 Player 2 03:34:02 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:34:06 $NEXT_STACK_ID:  
 Player 2 03:34:06 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 2 vs Greed<Monster>"} 
 Player 2 03:34:06 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 2 vs Greed<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 2 03:34:06 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":21,"creatorCardId":276,"hasLockingStackEffect":false,"itemToPlayCardId":277,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 03:34:06 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":80,"_text":"Add ActivateItem 21 "}} 
 Player 2 03:34:09 $USE_ITEM:  
 {"cardId":277} 
 Player 2 03:34:10 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:34:10 $ACTION_MASSAGE_REMOVE:  
 {"id":80} 
 Player 2 03:34:10 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 2 vs Greed<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 2 03:34:10 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":21,"creatorCardId":276,"hasLockingStackEffect":false,"itemToPlayCardId":277,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 03:34:10 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":81,"_text":"Response Adding ActivateItem 21"},"childOfId":80} 
 Player 2 03:34:10 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":82,"_text":"Wait For Response From Player 2 "},"childOfId":80} 
 Player 2 03:34:10 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:34:13 $NEXT_STACK_ID:  
 Player 2 03:34:13 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 2 vs Greed<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 2 03:34:13 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 2 vs Greed<Monster> \n2:Player 2 activated HolyMantle \n3:Player 2 play 3 Cents(16) "} 
 Player 2 03:34:13 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":22,"creatorCardId":276,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":54,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 2 03:34:13 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":83,"_text":"Add PlayLootCardStackEffect 22 "}} 
 Player 2 03:34:13 $PLAYER_LOSE_LOOT:  
 {"playerId":2,"cardId":54} 
 Player 2 03:34:13 $MOVE_CARD:  
 {"moveIndex":16,"cardId":54,"placeID":278,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 03:34:13 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 2 vs Greed<Monster> \n2:Player 2 activated HolyMantle \n3:Player 2 play 3 Cents(16): addMoney"} 
 Player 2 03:34:13 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 2 vs Greed<Monster> \n2:Player 2 activated HolyMantle \n3:Player 2 play 3 Cents(16): addMoney"} 
 Player 2 03:34:14 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:34:14 $ACTION_MASSAGE_REMOVE:  
 {"id":83} 
 Player 2 03:34:14 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 2 vs Greed<Monster> \n2:Player 2 activated HolyMantle \n3:Player 2 play 3 Cents(16): addMoney"} 
 Player 2 03:34:14 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":22,"creatorCardId":276,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":54,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":54,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 03:34:14 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":84,"_text":"Response Adding PlayLootCardStackEffect 22"},"childOfId":83} 
 Player 2 03:34:14 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":85,"_text":"Wait For Response From Player 2 "},"childOfId":83} 
 Player 2 03:34:14 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:34:20 $NEXT_STACK_ID:  
 Player 2 03:34:20 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 2 vs Greed<Monster> \n2:Player 2 activated HolyMantle \n3:Player 2 play 3 Cents(16): addMoney"} 
 Player 2 03:34:20 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 2 vs Greed<Monster> \n2:Player 2 activated HolyMantle \n3:Player 2 play 3 Cents(16): addMoney \n4:Player 2 activated The Lost"} 
 Player 2 03:34:20 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":23,"creatorCardId":276,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 03:34:20 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":86,"_text":"Add ActivateItem 23 "}} 
 Player 2 03:34:22 $USE_ITEM:  
 {"cardId":276} 
 Player 2 03:34:22 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:34:22 $ACTION_MASSAGE_REMOVE:  
 {"id":86} 
 Player 2 03:34:22 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 2 vs Greed<Monster> \n2:Player 2 activated HolyMantle \n3:Player 2 play 3 Cents(16): addMoney \n4:Player 2 activated The Lost"} 
 Player 2 03:34:22 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":23,"creatorCardId":276,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 03:34:22 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":87,"_text":"Response Adding ActivateItem 23"},"childOfId":86} 
 Player 2 03:34:22 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":88,"_text":"Wait For Response From Player 2 "},"childOfId":86} 
 Player 2 03:34:22 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:34:22 $ACTION_MASSAGE_REMOVE:  
 {"id":88} 
 Player 2 03:34:22 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":89,"_text":"Wait For Response From Player 1 "},"childOfId":86} 
 Player 2 03:34:22 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:34:22 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:34:22 $ACTION_MASSAGE_REMOVE:  
 {"id":89} 
 Player 2 03:34:22 $ACTION_MASSAGE_REMOVE:  
 {"id":87} 
 Player 2 03:34:22 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":90,"_text":"Resolve ActivateItem 23 "}} 
 Player 2 03:34:22 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":276,"particleType":6} 
 Player 2 03:34:24 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":276,"particleType":6} 
 Player 2 03:34:24 $NEXT_STACK_ID:  
 Player 2 03:34:24 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 2 vs Greed<Monster> \n2:Player 2 activated HolyMantle \n3:Player 2 play 3 Cents(16): addMoney \n4:Player 2 activated The Lost"} 
 Player 2 03:34:24 $PLAYER_LOSE_LOOT:  
 {"playerId":2,"cardId":39} 
 Player 2 03:34:24 $MOVE_CARD:  
 {"moveIndex":17,"cardId":39,"placeID":278,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 03:34:25 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 2 vs Greed<Monster> \n2:Player 2 activated HolyMantle \n3:Player 2 play 3 Cents(16): addMoney \n4:Player 2 play 3 Cents(1): addMoney \n5:Player 2 activated The Lost"} 
 Player 2 03:34:25 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 2 vs Greed<Monster> \n2:Player 2 activated HolyMantle \n3:Player 2 play 3 Cents(16): addMoney \n4:Player 2 play 3 Cents(1): addMoney \n5:Player 2 activated The Lost"} 
 Player 2 03:34:25 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:34:25 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 2 vs Greed<Monster> \n2:Player 2 activated HolyMantle \n3:Player 2 play 3 Cents(16): addMoney \n4:Player 2 play 3 Cents(1): addMoney \n5:Player 2 activated The Lost"} 
 Player 2 03:34:25 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":24,"creatorCardId":276,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":39,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":39,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 03:34:25 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 2 vs Greed<Monster> \n2:Player 2 activated HolyMantle \n3:Player 2 play 3 Cents(16): addMoney \n4:Player 2 play 3 Cents(1): addMoney \n5:Player 2 activated The Lost"} 
 Player 2 03:34:25 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 2 vs Greed<Monster> \n2:Player 2 activated HolyMantle \n3:Player 2 play 3 Cents(16): addMoney \n4:Player 2 play 3 Cents(1): addMoney \n5:Player 2 activated The Lost"} 
 Player 2 03:34:25 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 2 vs Greed<Monster> \n2:Player 2 activated HolyMantle \n3:Player 2 play 3 Cents(16): addMoney \n4:Player 2 play 3 Cents(1): addMoney \n5:Player 2 activated The Lost"} 
 Player 2 03:34:25 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 2 vs Greed<Monster> \n2:Player 2 activated HolyMantle \n3:Player 2 play 3 Cents(16): addMoney \n4:Player 2 play 3 Cents(1): addMoney \n5:Player 2 activated The Lost"} 
 Player 2 03:34:25 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 2 vs Greed<Monster> \n2:Player 2 activated HolyMantle \n3:Player 2 play 3 Cents(16): addMoney \n4:Player 2 play 3 Cents(1): addMoney \n5:Player 2 activated The Lost"} 
 Player 2 03:34:25 $REPLACE_STACK:  
 {"currentStack":[{"entityId":20,"creatorCardId":276,"numberRolled":2,"rollingPlayerCardId":276,"stackEffectType":2,"attackedMonsterCardId":229},{"entityId":21,"creatorCardId":276,"hasLockingStackEffect":false,"itemToPlayCardId":277,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1},{"entityId":22,"creatorCardId":276,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":54,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":54,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":24,"creatorCardId":276,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":39,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":39,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":23,"creatorCardId":276,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 
 Player 2 03:34:25 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 2 vs Greed<Monster> \n2:Player 2 activated HolyMantle \n3:Player 2 play 3 Cents(16): addMoney \n4:Player 2 play 3 Cents(1): addMoney \n5:Player 2 activated The Lost"} 
 Player 2 03:34:25 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":23,"creatorCardId":276,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 03:34:25 $ACTION_MASSAGE_REMOVE:  
 {"id":90} 
 Player 2 03:34:25 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":91,"_text":"Remove After Resolve ActivateItem 23  "}} 
 Player 2 03:34:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 2 vs Greed<Monster> \n2:Player 2 activated HolyMantle \n3:Player 2 play 3 Cents(16): addMoney \n4:Player 2 play 3 Cents(1): addMoney"} 
 Player 2 03:34:26 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":23,"creatorCardId":276,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 03:34:26 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":92,"_text":"Response Remove After Resolve ActivateItem 23"},"childOfId":91} 
 Player 2 03:34:26 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":93,"_text":"Wait For Response From Player 2 "},"childOfId":91} 
 Player 2 03:34:26 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:34:26 $ACTION_MASSAGE_REMOVE:  
 {"id":93} 
 Player 2 03:34:26 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":94,"_text":"Wait For Response From Player 1 "},"childOfId":91} 
 Player 2 03:34:26 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:34:26 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:34:27 $ACTION_MASSAGE_REMOVE:  
 {"id":94} 
 Player 2 03:34:27 $ACTION_MASSAGE_REMOVE:  
 {"id":92} 
 Player 2 03:34:27 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":95,"_text":"Resolve PlayLootCardStackEffect 24 "}} 
 Player 2 03:34:27 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 2 vs Greed<Monster> \n2:Player 2 activated HolyMantle \n3:Player 2 play 3 Cents(16): addMoney \n4:Player 2 play 3 Cents(1): addMoney"} 
 Player 2 03:34:27 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":39,"particleType":6} 
 Player 2 03:34:28 $ACTION_MASSAGE_REMOVE:  
 {"id":91} 
 Player 2 03:34:29 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":39,"particleType":6} 
 Player 2 03:34:29 $CHANGE_MONEY:  
 {"playerId":2,"numOfCoins":3} 
 Player 2 03:34:29 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":14,"originStackId":-1},"isAfterActivation":true,"index":14} 
 Player 2 03:34:29 $MOVE_CARD:  
 {"moveIndex":18,"cardId":39,"placeID":279,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 03:34:30 $MOVE_CARD_TO_PILE:  
 {"type":1,"cardId":39} 
 Player 2 03:34:30 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 2 vs Greed<Monster> \n2:Player 2 activated HolyMantle \n3:Player 2 play 3 Cents(16): addMoney \n4:Player 2 play 3 Cents(1): addMoney"} 
 Player 2 03:34:30 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":24,"creatorCardId":276,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":39,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 03:34:30 $ACTION_MASSAGE_REMOVE:  
 {"id":95} 
 Player 2 03:34:30 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":96,"_text":"Remove After Resolve PlayLootCardStackEffect 24  "}} 
 Player 2 03:34:30 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 2 vs Greed<Monster> \n2:Player 2 activated HolyMantle \n3:Player 2 play 3 Cents(16): addMoney"} 
 Player 2 03:34:30 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":24,"creatorCardId":276,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":39,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 03:34:30 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":97,"_text":"Response Remove After Resolve PlayLootCardStackEffect 24"},"childOfId":96} 
 Player 2 03:34:30 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":98,"_text":"Wait For Response From Player 1 "},"childOfId":96} 
 Player 2 03:34:30 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:34:30 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:34:30 $ACTION_MASSAGE_REMOVE:  
 {"id":98} 
 Player 2 03:34:30 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":99,"_text":"Wait For Response From Player 2 "},"childOfId":96} 
 Player 2 03:34:30 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:34:31 $ACTION_MASSAGE_REMOVE:  
 {"id":99} 
 Player 2 03:34:31 $ACTION_MASSAGE_REMOVE:  
 {"id":97} 
 Player 2 03:34:31 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":100,"_text":"Resolve PlayLootCardStackEffect 22 "}} 
 Player 2 03:34:31 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 2 vs Greed<Monster> \n2:Player 2 activated HolyMantle \n3:Player 2 play 3 Cents(16): addMoney"} 
 Player 2 03:34:31 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":54,"particleType":6} 
 Player 2 03:34:32 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":54,"particleType":6} 
 Player 2 03:34:32 $CHANGE_MONEY:  
 {"playerId":2,"numOfCoins":3} 
 Player 2 03:34:33 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":15,"originStackId":-1},"isAfterActivation":true,"index":15} 
 Player 2 03:34:33 $MOVE_CARD:  
 {"moveIndex":19,"cardId":54,"placeID":279,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 03:34:33 $ACTION_MASSAGE_REMOVE:  
 {"id":96} 
 Player 2 03:34:34 $MOVE_CARD_TO_PILE:  
 {"type":1,"cardId":54} 
 Player 2 03:34:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 2 vs Greed<Monster> \n2:Player 2 activated HolyMantle \n3:Player 2 play 3 Cents(16): addMoney"} 
 Player 2 03:34:34 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":22,"creatorCardId":276,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":54,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 03:34:34 $ACTION_MASSAGE_REMOVE:  
 {"id":100} 
 Player 2 03:34:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":101,"_text":"Remove After Resolve PlayLootCardStackEffect 22  "}} 
 Player 2 03:34:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 2 vs Greed<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 2 03:34:34 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":22,"creatorCardId":276,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":54,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 03:34:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":102,"_text":"Response Remove After Resolve PlayLootCardStackEffect 22"},"childOfId":101} 
 Player 2 03:34:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":103,"_text":"Wait For Response From Player 2 "},"childOfId":101} 
 Player 2 03:34:34 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:34:34 $ACTION_MASSAGE_REMOVE:  
 {"id":103} 
 Player 2 03:34:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":104,"_text":"Wait For Response From Player 1 "},"childOfId":101} 
 Player 2 03:34:34 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:34:34 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:34:34 $ACTION_MASSAGE_REMOVE:  
 {"id":104} 
 Player 2 03:34:34 $ACTION_MASSAGE_REMOVE:  
 {"id":102} 
 Player 2 03:34:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":105,"_text":"Resolve ActivateItem 21 "}} 
 Player 2 03:34:34 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":277,"particleType":6} 
 Player 2 03:34:36 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":277,"particleType":6} 
 Player 2 03:34:36 $REGISTER_ONE_TURN_PASSIVE_EFFECT:  
 {"cardId":277,"effectIndex":{"type":3,"index":0},"conditionData":[{"effectTargets":[276],"chainEffectsData":[],"methodArgs":[],"isPassive":false,"effectCard":277,"effectCardOwner":276,"effectCardPlayer":276}]} 
 Player 2 03:34:36 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 2 vs Greed<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 2 03:34:36 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":21,"creatorCardId":276,"hasLockingStackEffect":false,"itemToPlayCardId":277,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 03:34:36 $ACTION_MASSAGE_REMOVE:  
 {"id":105} 
 Player 2 03:34:36 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":106,"_text":"Remove After Resolve ActivateItem 21  "}} 
 Player 2 03:34:36 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 2 vs Greed<Monster>"} 
 Player 2 03:34:36 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":21,"creatorCardId":276,"hasLockingStackEffect":false,"itemToPlayCardId":277,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 03:34:36 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":107,"_text":"Response Remove After Resolve ActivateItem 21"},"childOfId":106} 
 Player 2 03:34:36 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":108,"_text":"Wait For Response From Player 1 "},"childOfId":106} 
 Player 2 03:34:36 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:34:36 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:34:37 $ACTION_MASSAGE_REMOVE:  
 {"id":101} 
 Player 2 03:34:38 $ACTION_MASSAGE_REMOVE:  
 {"id":108} 
 Player 2 03:34:38 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":109,"_text":"Wait For Response From Player 2 "},"childOfId":106} 
 Player 2 03:34:38 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:34:38 $ACTION_MASSAGE_REMOVE:  
 {"id":109} 
 Player 2 03:34:38 $ACTION_MASSAGE_REMOVE:  
 {"id":107} 
 Player 2 03:34:38 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":110,"_text":"Resolve AttackRoll 20 "}} 
 Player 2 03:34:38 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":111,"_text":"Added 0 to original roll"}} 
 Player 2 03:34:38 $NEXT_STACK_ID:  
 Player 2 03:34:38 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 2 vs Greed<Monster>"} 
 Player 2 03:34:38 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:34:38 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Greed combat damage to The Lost \n2:Player 2 rolled 2 vs Greed<Monster>"} 
 Player 2 03:34:38 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":25,"creatorCardId":276,"entityToDoDamageCardId":229,"entityToTakeDamageCardId":276,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 03:34:38 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Greed combat damage to The Lost \n2:Player 2 rolled 2 vs Greed<Monster>"} 
 Player 2 03:34:38 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Greed combat damage to The Lost \n2:Player 2 rolled 2 vs Greed<Monster>"} 
 Player 2 03:34:38 $REPLACE_STACK:  
 {"currentStack":[{"entityId":25,"creatorCardId":276,"entityToDoDamageCardId":229,"entityToTakeDamageCardId":276,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":20,"creatorCardId":276,"numberRolled":2,"rollingPlayerCardId":276,"stackEffectType":2,"attackedMonsterCardId":229}]} 
 Player 2 03:34:38 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":2},{"type":2,"number":1},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":16,"originStackId":20},"isAfterActivation":true,"index":16} 
 Player 2 03:34:38 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Greed combat damage to The Lost \n2:Player 2 rolled 2 vs Greed<Monster>"} 
 Player 2 03:34:38 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":20,"creatorCardId":276,"numberRolled":2,"rollingPlayerCardId":276,"stackEffectType":2,"attackedMonsterCardId":229}} 
 Player 2 03:34:38 $ACTION_MASSAGE_REMOVE:  
 {"id":110} 
 Player 2 03:34:38 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":112,"_text":"Remove After Resolve AttackRoll 20  "}} 
 Player 2 03:34:38 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Greed combat damage to The Lost"} 
 Player 2 03:34:39 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":20,"creatorCardId":276,"numberRolled":2,"rollingPlayerCardId":276,"stackEffectType":2,"attackedMonsterCardId":229}} 
 Player 2 03:34:39 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":113,"_text":"Response Remove After Resolve AttackRoll 20"},"childOfId":112} 
 Player 2 03:34:39 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":114,"_text":"Wait For Response From Player 2 "},"childOfId":112} 
 Player 2 03:34:39 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:34:39 $ACTION_MASSAGE_REMOVE:  
 {"id":114} 
 Player 2 03:34:39 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":115,"_text":"Wait For Response From Player 1 "},"childOfId":112} 
 Player 2 03:34:39 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:34:39 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:34:39 $ACTION_MASSAGE_REMOVE:  
 {"id":106} 
 Player 2 03:34:40 $ACTION_MASSAGE_REMOVE:  
 {"id":115} 
 Player 2 03:34:40 $ACTION_MASSAGE_REMOVE:  
 {"id":113} 
 Player 2 03:34:40 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":116,"_text":"Resolve CombatDamage 25 "}} 
 Player 2 03:34:40 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Greed 1 combat damage to The Lost"} 
 Player 2 03:34:40 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_TAKEN","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":0,"number":229}],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":1,"originStackId":25},"isAfterActivation":false,"index":1} 
 Player 2 03:34:40 $NEXT_STACK_ID:  
 Player 2 03:34:40 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Greed 1 combat damage to The Lost"} 
 Player 2 03:34:40 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Greed 1 combat damage to The Lost \n2:Activate Greed effect AddMoney<AddMoney>"} 
 Player 2 03:34:40 $ADD_TO_STACK:  
 {"stackEffect":{"effectCollectedData":null,"entityId":26,"creatorCardId":229,"hasLockingStackEffect":false,"cardActivatorId":229,"cardWithEffectId":229,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":229,"cardId":229,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 03:34:40 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":117,"_text":"Add ActivatePassiveEffect 26 "}} 
 Player 2 03:34:40 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Greed 1 combat damage to The Lost \n2:Activate Greed effect AddMoney<AddMoney>"} 
 Player 2 03:34:40 $ACTION_MASSAGE_REMOVE:  
 {"id":117} 
 Player 2 03:34:40 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Greed 1 combat damage to The Lost \n2:Activate Greed effect AddMoney<AddMoney>"} 
 Player 2 03:34:40 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"effectCollectedData":{"effectTargets":[260,276],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":229,"effectCardPlayer":229},"entityId":26,"creatorCardId":229,"hasLockingStackEffect":false,"cardActivatorId":229,"cardWithEffectId":229,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":229,"cardId":229,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 03:34:40 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":118,"_text":"Response Adding ActivatePassiveEffect 26"},"childOfId":117} 
 Player 2 03:34:40 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":119,"_text":"Wait For Response From Player 1 "},"childOfId":117} 
 Player 2 03:34:40 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:34:40 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:34:41 $ACTION_MASSAGE_REMOVE:  
 {"id":119} 
 Player 2 03:34:41 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":120,"_text":"Wait For Response From Player 2 "},"childOfId":117} 
 Player 2 03:34:41 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:34:41 $ACTION_MASSAGE_REMOVE:  
 {"id":120} 
 Player 2 03:34:41 $ACTION_MASSAGE_REMOVE:  
 {"id":118} 
 Player 2 03:34:41 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":121,"_text":"Resolve ActivatePassiveEffect 26 "}} 
 Player 2 03:34:41 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":229,"particleType":6} 
 Player 2 03:34:41 $ACTION_MASSAGE_REMOVE:  
 {"id":111} 
 Player 2 03:34:41 $ACTION_MASSAGE_REMOVE:  
 {"id":112} 
 Player 2 03:34:43 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":229,"particleType":6} 
 Player 2 03:34:43 $CHANGE_MONEY:  
 {"playerId":1,"numOfCoins":-4} 
 Player 2 03:34:43 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-4}],"result":null,"preventMethod":false,"methodScopeId":260,"scopeIsPlayer":true,"index":17,"originStackId":-1},"isAfterActivation":true,"index":17} 
 Player 2 03:34:43 $CHANGE_MONEY:  
 {"playerId":2,"numOfCoins":-4} 
 Player 2 03:34:43 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-4}],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":18,"originStackId":-1},"isAfterActivation":true,"index":18} 
 Player 2 03:34:43 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_TAKEN","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":0,"number":229}],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":1,"originStackId":25},"isAfterActivation":false,"index":1} 
 Player 2 03:34:43 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Greed 1 combat damage to The Lost \n2:Activate Greed effect AddMoney<AddMoney>"} 
 Player 2 03:34:43 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"effectCollectedData":{"effectTargets":[260,276],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":229,"effectCardPlayer":229},"entityId":26,"creatorCardId":229,"hasLockingStackEffect":false,"cardActivatorId":229,"cardWithEffectId":229,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 03:34:43 $ACTION_MASSAGE_REMOVE:  
 {"id":121} 
 Player 2 03:34:43 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":122,"_text":"Remove After Resolve ActivatePassiveEffect 26  "}} 
 Player 2 03:34:43 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Greed 1 combat damage to The Lost"} 
 Player 2 03:34:43 $REMOVE_FROM_STACK:  
 {"stackEffect":{"effectCollectedData":{"effectTargets":[260,276],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":229,"effectCardPlayer":229},"entityId":26,"creatorCardId":229,"hasLockingStackEffect":false,"cardActivatorId":229,"cardWithEffectId":229,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 03:34:43 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":123,"_text":"Response Remove After Resolve ActivatePassiveEffect 26"},"childOfId":122} 
 Player 2 03:34:43 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":124,"_text":"Wait For Response From Player 2 "},"childOfId":122} 
 Player 2 03:34:43 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:34:43 $ACTION_MASSAGE_REMOVE:  
 {"id":124} 
 Player 2 03:34:43 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":125,"_text":"Wait For Response From Player 1 "},"childOfId":122} 
 Player 2 03:34:43 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:34:43 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:34:45 $ACTION_MASSAGE_REMOVE:  
 {"id":125} 
 Player 2 03:34:45 $ACTION_MASSAGE_REMOVE:  
 {"id":123} 
 Player 2 03:34:45 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":126,"_text":"Resolve CombatDamage 25 "}} 
 Player 2 03:34:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Greed 1 combat damage to The Lost"} 
 Player 2 03:34:45 $PLAYER_GET_HIT:  
 {"playerId":2,"damage":1,"damageDealerId":229} 
 Player 2 03:34:45 $NEXT_STACK_ID:  
 Player 2 03:34:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Greed 1 combat damage to The Lost"} 
 Player 2 03:34:45 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:34:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Greed 1 combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 2 03:34:45 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":27,"creatorCardId":276,"playerToDieCardId":276,"stackEffectType":15,"killerId":229}} 
 Player 2 03:34:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Greed 1 combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 2 03:34:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Greed 1 combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 2 03:34:45 $REPLACE_STACK:  
 {"currentStack":[{"entityId":25,"creatorCardId":276,"entityToDoDamageCardId":229,"entityToTakeDamageCardId":276,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":27,"creatorCardId":276,"playerToDieCardId":276,"stackEffectType":15,"killerId":229}]} 
 Player 2 03:34:45 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":229}],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":19,"originStackId":-1},"isAfterActivation":true,"index":19} 
 Player 2 03:34:45 $ACTION_MASSAGE_REMOVE:  
 {"id":116} 
 Player 2 03:34:45 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":127,"_text":"Remove After Resolve CombatDamage 25  "}} 
 Player 2 03:34:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 03:34:45 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":25,"creatorCardId":276,"entityToDoDamageCardId":229,"entityToTakeDamageCardId":276,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 03:34:45 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":128,"_text":"Response Remove After Resolve CombatDamage 25"},"childOfId":127} 
 Player 2 03:34:45 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":129,"_text":"Wait For Response From Player 2 "},"childOfId":127} 
 Player 2 03:34:45 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:34:45 $ACTION_MASSAGE_REMOVE:  
 {"id":129} 
 Player 2 03:34:46 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":130,"_text":"Wait For Response From Player 1 "},"childOfId":127} 
 Player 2 03:34:46 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:34:46 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:34:46 $ACTION_MASSAGE_REMOVE:  
 {"id":122} 
 Player 2 03:34:46 $ACTION_MASSAGE_REMOVE:  
 {"id":130} 
 Player 2 03:34:46 $ACTION_MASSAGE_REMOVE:  
 {"id":128} 
 Player 2 03:34:46 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":131,"_text":"Resolve PlayerDeath 27 "}} 
 Player 2 03:34:46 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":229,"particleType":5} 
 Player 2 03:34:47 $CANCEL_ATTACK:  
 Player 2 03:34:47 $NEXT_STACK_ID:  
 Player 2 03:34:47 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 03:34:47 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_PAY_DEATH_PANELTIES","args":[],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":2,"originStackId":28},"isAfterActivation":false,"index":2} 
 Player 2 03:34:47 $NEXT_STACK_ID:  
 Player 2 03:34:47 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 2 03:34:47 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 2 03:34:47 $ADD_TO_STACK:  
 {"stackEffect":{"effectCollectedData":null,"entityId":29,"creatorCardId":276,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":277,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":277,"effctType":3},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 03:34:47 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":132,"_text":"Add ActivatePassiveEffect 29 "}} 
 Player 2 03:34:47 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 2 03:34:47 $ACTION_MASSAGE_REMOVE:  
 {"id":132} 
 Player 2 03:34:47 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 2 03:34:47 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"effectCollectedData":null,"entityId":29,"creatorCardId":276,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":277,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":277,"effctType":3},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 03:34:47 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":133,"_text":"Response Adding ActivatePassiveEffect 29"},"childOfId":132} 
 Player 2 03:34:47 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":134,"_text":"Wait For Response From Player 1 "},"childOfId":132} 
 Player 2 03:34:47 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:34:47 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:34:48 $ACTION_MASSAGE_REMOVE:  
 {"id":134} 
 Player 2 03:34:48 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":135,"_text":"Wait For Response From Player 2 "},"childOfId":132} 
 Player 2 03:34:48 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:34:48 $ACTION_MASSAGE_REMOVE:  
 {"id":135} 
 Player 2 03:34:48 $ACTION_MASSAGE_REMOVE:  
 {"id":133} 
 Player 2 03:34:48 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":136,"_text":"Resolve ActivatePassiveEffect 29 "}} 
 Player 2 03:34:48 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":277,"particleType":6} 
 Player 2 03:34:48 $ACTION_MASSAGE_REMOVE:  
 {"id":127} 
 Player 2 03:34:50 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":277,"particleType":6} 
 Player 2 03:34:50 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":137,"_text":"Fizzle PlayerDeathPenalties 28"}} 
 Player 2 03:34:50 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_PAY_DEATH_PANELTIES","args":[],"result":null,"preventMethod":true,"methodScopeId":276,"scopeIsPlayer":true,"index":2,"originStackId":28},"isAfterActivation":false,"index":2} 
 Player 2 03:34:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 2 03:34:50 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"effectCollectedData":null,"entityId":29,"creatorCardId":276,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":277,"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 03:34:50 $ACTION_MASSAGE_REMOVE:  
 {"id":136} 
 Player 2 03:34:50 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":138,"_text":"Remove After Resolve ActivatePassiveEffect 29  "}} 
 Player 2 03:34:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 03:34:50 $REMOVE_FROM_STACK:  
 {"stackEffect":{"effectCollectedData":null,"entityId":29,"creatorCardId":276,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":277,"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 03:34:50 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":139,"_text":"Response Remove After Resolve ActivatePassiveEffect 29"},"childOfId":138} 
 Player 2 03:34:50 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":140,"_text":"Wait For Response From Player 2 "},"childOfId":138} 
 Player 2 03:34:50 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:34:50 $ACTION_MASSAGE_REMOVE:  
 {"id":140} 
 Player 2 03:34:50 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":141,"_text":"Wait For Response From Player 1 "},"childOfId":138} 
 Player 2 03:34:50 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:34:50 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:34:51 $ACTION_MASSAGE_REMOVE:  
 {"id":141} 
 Player 2 03:34:51 $ACTION_MASSAGE_REMOVE:  
 {"id":139} 
 Player 2 03:34:51 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":142,"_text":"Resolve PlayerDeath 27 "}} 
 Player 2 03:34:51 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 03:34:51 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":28,"creatorCardId":276,"playerToPayCardId":276,"stackEffectType":16}} 
 Player 2 03:34:51 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 03:34:51 $REPLACE_STACK:  
 {"currentStack":[{"entityId":27,"creatorCardId":276,"playerToDieCardId":276,"stackEffectType":15,"killerId":229}]} 
 Player 2 03:34:51 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 03:34:51 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":27,"creatorCardId":276,"playerToDieCardId":276,"stackEffectType":15,"killerId":229}} 
 Player 2 03:34:51 $ACTION_MASSAGE_REMOVE:  
 {"id":131} 
 Player 2 03:34:51 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":143,"_text":"Remove After Resolve PlayerDeath 27  "}} 
 Player 2 03:34:51 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:34:51 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":27,"creatorCardId":276,"playerToDieCardId":276,"stackEffectType":15,"killerId":229}} 
 Player 2 03:34:51 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":144,"_text":"Response Remove After Resolve PlayerDeath 27"},"childOfId":143} 
 Player 2 03:34:51 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":145,"_text":"Wait For Response From Player 1 "},"childOfId":143} 
 Player 2 03:34:51 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:34:51 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:34:53 $ACTION_MASSAGE_REMOVE:  
 {"id":145} 
 Player 2 03:34:53 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":146,"_text":"Wait For Response From Player 2 "},"childOfId":143} 
 Player 2 03:34:53 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:34:53 $ACTION_MASSAGE_REMOVE:  
 {"id":146} 
 Player 2 03:34:53 $ACTION_MASSAGE_REMOVE:  
 {"id":144} 
 Player 2 03:34:53 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":147,"_text":"Stack Was Emptied "}} 
 Player 2 03:34:53 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:34:53 $ACTION_MASSAGE_REMOVE:  
 {"id":78} 
 Player 2 03:34:53 $ACTION_MASSAGE_REMOVE:  
 {"id":79} 
 Player 2 03:34:53 $ACTION_MASSAGE_REMOVE:  
 {"id":81} 
 Player 2 03:34:53 $ACTION_MASSAGE_REMOVE:  
 {"id":82} 
 Player 2 03:34:53 $ACTION_MASSAGE_REMOVE:  
 {"id":84} 
 Player 2 03:34:53 $ACTION_MASSAGE_REMOVE:  
 {"id":85} 
 Player 2 03:34:53 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:34:53 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:34:53 $ACTION_MASSAGE_REMOVE:  
 {"id":78} 
 Player 2 03:34:53 $ACTION_MASSAGE_REMOVE:  
 {"id":79} 
 Player 2 03:34:53 $ACTION_MASSAGE_REMOVE:  
 {"id":81} 
 Player 2 03:34:53 $REPLACE_STACK:  
 {"currentStack":[]} 
 Player 2 03:34:53 $END_TURN:  
 Player 2 03:34:53 $SET_TURN:  
 {"playerId":1} 
 Player 2 03:34:53 $START_TURN:  
 {"playerId":1} 
 Player 2 03:34:53 $ACTION_MASSAGE_REMOVE:  
 {"id":85} 
 Player 2 03:34:53 $ACTION_MASSAGE_REMOVE:  
 {"id":84} 
 Player 2 03:34:53 $ACTION_MASSAGE_REMOVE:  
 {"id":82} 
 Player 2 03:34:53 $ACTION_MASSAGE_REMOVE:  
 {"id":81} 
 Player 2 03:34:53 $ACTION_MASSAGE_REMOVE:  
 {"id":79} 
 Player 2 03:34:53 $ACTION_MASSAGE_REMOVE:  
 {"id":78} 
 Player 2 03:34:53 $ACTION_MASSAGE_REMOVE:  
 {"id":137} 
 Player 2 03:34:53 $ACTION_MASSAGE_REMOVE:  
 {"id":138} 
 Player 2 03:34:54 $ACTION_MASSAGE_REMOVE:  
 {"id":143} 
 Player 2 03:34:54 $ACTION_MASSAGE_REMOVE:  
 {"id":147} 
 Player 2 03:34:55 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:34:55 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:34:55 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 03:34:55 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 03:34:55 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:34:56 $MOVE_CARD_END:  
 {"moveIndex":20,"cardId":141,"flipIfFlipped":false,"playerId":1} 
 Player 2 03:34:56 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 03:34:56 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 03:34:56 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 03:34:56 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 03:34:56 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:35:32 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:35:32 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:35:32 $MOVE_CARD_END:  
 {"moveIndex":21,"cardId":57,"flipIfFlipped":true,"playerId":1} 
 Player 2 03:35:32 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play 3 Cents(19) "} 
 Player 2 03:35:32 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play 3 Cents(19) "} 
 Player 2 03:35:32 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:35:35 $MOVE_CARD_END:  
 {"moveIndex":22,"cardId":57,"flipIfFlipped":true,"playerId":1} 
 Player 2 03:35:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play 3 Cents(19) "} 
 Player 2 03:35:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play 3 Cents(19) "} 
 Player 2 03:35:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play 3 Cents(19) "} 
 Player 2 03:35:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play 3 Cents(19) "} 
 Player 2 03:35:36 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:35:36 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:35:36 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:35:36 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1  declared attack on TopBlankCard"} 
 Player 2 03:35:36 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1  declared attack on TopBlankCard"} 
 Player 2 03:35:36 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:35:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1  declared attack on TopBlankCard"} 
 Player 2 03:35:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1  declared attack on TopBlankCard"} 
 Player 2 03:35:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1  declared attack on Spider"} 
 Player 2 03:35:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1  declared attack on Spider"} 
 Player 2 03:35:48 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:35:54 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:35:54 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:35:56 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Spider<Monster>"} 
 Player 2 03:35:56 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Spider<Monster>"} 
 Player 2 03:35:56 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:35:57 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Spider<Monster>"} 
 Player 2 03:35:57 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Spider<Monster>"} 
 Player 2 03:35:57 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Spider combat damage to Azazel"} 
 Player 2 03:35:57 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Spider combat damage to Azazel"} 
 Player 2 03:35:57 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Spider combat damage to Azazel"} 
 Player 2 03:35:57 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Spider combat damage to Azazel"} 
 Player 2 03:35:57 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Spider combat damage to Azazel \n2:Player 1 is rolling against Spider<Monster>"} 
 Player 2 03:35:57 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Spider combat damage to Azazel \n2:Player 1 is rolling against Spider<Monster>"} 
 Player 2 03:35:57 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Spider combat damage to Azazel \n2:Player 1 is rolling against Spider<Monster>"} 
 Player 2 03:35:57 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Spider combat damage to Azazel \n2:Player 1 is rolling against Spider<Monster>"} 
 Player 2 03:35:57 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:35:57 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Spider combat damage to Azazel"} 
 Player 2 03:35:57 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Spider combat damage to Azazel"} 
 Player 2 03:35:57 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Spider combat damage to Azazel"} 
 Player 2 03:35:57 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Spider combat damage to Azazel"} 
 Player 2 03:35:58 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:36:00 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:36:01 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:36:02 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Spider<Monster>"} 
 Player 2 03:36:02 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Spider<Monster>"} 
 Player 2 03:36:04 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:36:04 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Spider<Monster>"} 
 Player 2 03:36:04 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Spider<Monster>"} 
 Player 2 03:36:04 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Spider"} 
 Player 2 03:36:04 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Spider"} 
 Player 2 03:36:04 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Spider"} 
 Player 2 03:36:04 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Spider"} 
 Player 2 03:36:04 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Spider \n2:Player 1 is rolling against Spider<Monster>"} 
 Player 2 03:36:04 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Spider \n2:Player 1 is rolling against Spider<Monster>"} 
 Player 2 03:36:04 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Spider \n2:Player 1 is rolling against Spider<Monster>"} 
 Player 2 03:36:04 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Spider \n2:Player 1 is rolling against Spider<Monster>"} 
 Player 2 03:36:05 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:36:06 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Spider"} 
 Player 2 03:36:06 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Spider"} 
 Player 2 03:36:06 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by undefined"} 
 Player 2 03:36:06 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by undefined"} 
 Player 2 03:36:06 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by undefined"} 
 Player 2 03:36:06 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by undefined"} 
 Player 2 03:36:06 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Spider \n2:[object Object] killed by undefined"} 
 Player 2 03:36:06 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Spider \n2:[object Object] killed by undefined"} 
 Player 2 03:36:06 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Spider \n2:[object Object] killed by undefined"} 
 Player 2 03:36:06 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Spider \n2:[object Object] killed by undefined"} 
 Player 2 03:36:09 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:36:10 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by undefined"} 
 Player 2 03:36:10 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by undefined"} 
 Player 2 03:36:10 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Spider<Monster> reward"} 
 Player 2 03:36:10 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Spider<Monster> reward"} 
 Player 2 03:36:10 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Spider<Monster> reward"} 
 Player 2 03:36:10 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Spider<Monster> reward"} 
 Player 2 03:36:10 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Spider<Monster> reward \n2:[object Object] killed by undefined"} 
 Player 2 03:36:10 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Spider<Monster> reward \n2:[object Object] killed by undefined"} 
 Player 2 03:36:10 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Spider<Monster> reward \n2:[object Object] killed by undefined"} 
 Player 2 03:36:10 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Spider<Monster> reward \n2:[object Object] killed by undefined"} 
 Player 2 03:36:14 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:36:15 $MOVE_CARD_END:  
 {"moveIndex":23,"cardId":99,"flipIfFlipped":false,"playerId":1} 
 Player 2 03:36:16 $MOVE_CARD_END:  
 {"moveIndex":24,"cardId":247,"flipIfFlipped":true,"playerId":1} 
 Player 2 03:36:36 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Spider<Monster> reward"} 
 Player 2 03:36:36 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Spider<Monster> reward"} 
 Player 2 03:36:39 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Spider<Monster> reward \n2:Player 1 activated Azazel"} 
 Player 2 03:36:39 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Spider<Monster> reward \n2:Player 1 activated Azazel"} 
 Player 2 03:37:32 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:37:35 $MOVE_CARD_END:  
 {"moveIndex":25,"cardId":74,"flipIfFlipped":true,"playerId":1} 
 Player 2 03:37:36 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Spider<Monster> reward \n2:Player 1 activated Azazel"} 
 Player 2 03:37:36 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Spider<Monster> reward \n2:Player 1 activated Azazel"} 
 Player 2 03:37:36 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Spider<Monster> reward \n2:Player 1 play A Dime(0) "} 
 Player 2 03:37:36 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Spider<Monster> reward \n2:Player 1 play A Dime(0) "} 
 Player 2 03:37:36 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Spider<Monster> reward \n2:Player 1 play A Dime(0) "} 
 Player 2 03:37:36 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Spider<Monster> reward \n2:Player 1 play A Dime(0) "} 
 Player 2 03:37:36 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play A Dime(0)  \n2:Player 1 activated Azazel"} 
 Player 2 03:37:36 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play A Dime(0)  \n2:Player 1 activated Azazel"} 
 Player 2 03:37:36 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play A Dime(0)  \n2:Player 1 activated Azazel"} 
 Player 2 03:37:36 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play A Dime(0)  \n2:Player 1 activated Azazel"} 
 Player 2 03:37:36 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:37:38 $MOVE_CARD_END:  
 {"moveIndex":26,"cardId":74,"flipIfFlipped":true,"playerId":1} 
 Player 2 03:37:39 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play A Dime(0) "} 
 Player 2 03:37:39 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play A Dime(0) "} 
 Player 2 03:37:39 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play A Dime(0) "} 
 Player 2 03:37:39 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play A Dime(0) "} 
 Player 2 03:37:39 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:37:49 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:37:49 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:37:49 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to buy TopBlankCard for 10"} 
 Player 2 03:37:49 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to buy TopBlankCard for 10"} 
 Player 2 03:37:49 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:37:50 $MOVE_CARD_END:  
 {"moveIndex":27,"cardId":175,"flipIfFlipped":true,"playerId":1} 
 Player 2 03:37:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to buy TopBlankCard for 10"} 
 Player 2 03:37:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to buy TopBlankCard for 10"} 
 Player 2 03:37:50 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:38:06 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:38:06 $RECHARGE_ITEM:  
 {"cardId":276} 
 Player 2 03:38:06 $PLAYER_RECHARGE_ITEM:  
 {"playerId":2,"cardId":276} 
 Player 2 03:38:06 $RECHARGE_ITEM:  
 {"cardId":277} 
 Player 2 03:38:06 $PLAYER_RECHARGE_ITEM:  
 {"playerId":2,"cardId":277} 
 Player 2 03:38:06 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:38:06 $NEXT_STACK_ID:  
 Player 2 03:38:06 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:38:06 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 03:38:06 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":42,"creatorCardId":276,"turnPlayerCardId":276,"stackEffectType":13}} 
 Player 2 03:38:06 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":148,"_text":"Add StartTurnLoot 42 "}} 
 Player 2 03:38:06 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:38:06 $ACTION_MASSAGE_REMOVE:  
 {"id":148} 
 Player 2 03:38:06 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 03:38:06 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":42,"creatorCardId":276,"turnPlayerCardId":276,"stackEffectType":13}} 
 Player 2 03:38:06 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":149,"_text":"Response Adding StartTurnLoot 42"},"childOfId":148} 
 Player 2 03:38:06 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":150,"_text":"Wait For Response From Player 2 "},"childOfId":148} 
 Player 2 03:38:06 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:38:06 $ACTION_MASSAGE_REMOVE:  
 {"id":150} 
 Player 2 03:38:06 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":151,"_text":"Wait For Response From Player 1 "},"childOfId":148} 
 Player 2 03:38:06 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:38:06 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:38:06 $ACTION_MASSAGE_REMOVE:  
 {"id":151} 
 Player 2 03:38:06 $ACTION_MASSAGE_REMOVE:  
 {"id":149} 
 Player 2 03:38:06 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":152,"_text":"Resolve StartTurnLoot 42 "}} 
 Player 2 03:38:06 $DRAW_CARD:  
 {"deckType":1} 
 Player 2 03:38:06 $MOVE_CARD:  
 {"moveIndex":28,"cardId":92,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 03:38:07 $CARD_DRAWN:  
 {"playerId":2,"deckType":1,"drawnCardId":92} 
 Player 2 03:38:07 $FLIP_CARD:  
 {"cardId":92} 
 Player 2 03:38:07 $PLAYER_GET_LOOT:  
 {"playerId":2,"cardId":92} 
 Player 2 03:38:07 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 03:38:07 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":42,"creatorCardId":276,"turnPlayerCardId":276,"stackEffectType":13}} 
 Player 2 03:38:07 $ACTION_MASSAGE_REMOVE:  
 {"id":152} 
 Player 2 03:38:07 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":153,"_text":"Remove After Resolve StartTurnLoot 42  "}} 
 Player 2 03:38:07 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:38:07 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":42,"creatorCardId":276,"turnPlayerCardId":276,"stackEffectType":13}} 
 Player 2 03:38:07 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":154,"_text":"Response Remove After Resolve StartTurnLoot 42"},"childOfId":153} 
 Player 2 03:38:07 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":155,"_text":"Wait For Response From Player 1 "},"childOfId":153} 
 Player 2 03:38:07 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:38:07 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:38:07 $ACTION_MASSAGE_REMOVE:  
 {"id":155} 
 Player 2 03:38:07 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":156,"_text":"Wait For Response From Player 2 "},"childOfId":153} 
 Player 2 03:38:07 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:38:07 $ACTION_MASSAGE_REMOVE:  
 {"id":156} 
 Player 2 03:38:07 $ACTION_MASSAGE_REMOVE:  
 {"id":154} 
 Player 2 03:38:07 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":157,"_text":"Stack Was Emptied "}} 
 Player 2 03:38:08 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:38:08 $ACTION_MASSAGE_REMOVE:  
 {"id":153} 
 Player 2 03:38:09 $ACTION_MASSAGE_REMOVE:  
 {"id":157} 
 Player 2 03:38:10 $ACTION_MASSAGE_REMOVE:  
 {"id":153} 
 Player 2 03:38:19 $NEXT_STACK_ID:  
 Player 2 03:38:19 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:38:19 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on Greed"} 
 Player 2 03:38:19 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":43,"creatorCardId":276,"attackingPlayerCardId":276,"idOfCardBeingAttacked":229,"stackEffectType":4}} 
 Player 2 03:38:19 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":158,"_text":"Add DeclareAttack 43 "}} 
 Player 2 03:38:19 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:38:19 $ACTION_MASSAGE_REMOVE:  
 {"id":158} 
 Player 2 03:38:19 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on Greed"} 
 Player 2 03:38:19 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":43,"creatorCardId":276,"attackingPlayerCardId":276,"idOfCardBeingAttacked":229,"stackEffectType":4}} 
 Player 2 03:38:19 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":159,"_text":"Response Adding DeclareAttack 43"},"childOfId":158} 
 Player 2 03:38:19 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":160,"_text":"Wait For Response From Player 2 "},"childOfId":158} 
 Player 2 03:38:19 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:38:19 $ACTION_MASSAGE_REMOVE:  
 {"id":160} 
 Player 2 03:38:19 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":161,"_text":"Wait For Response From Player 1 "},"childOfId":158} 
 Player 2 03:38:19 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:38:19 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:38:19 $ACTION_MASSAGE_REMOVE:  
 {"id":161} 
 Player 2 03:38:19 $ACTION_MASSAGE_REMOVE:  
 {"id":159} 
 Player 2 03:38:19 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":162,"_text":"Resolve DeclareAttack 43 "}} 
 Player 2 03:38:19 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":229,"particleType":5} 
 Player 2 03:38:19 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":20,"originStackId":43},"isAfterActivation":true,"index":20} 
 Player 2 03:38:19 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on Greed"} 
 Player 2 03:38:19 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":43,"creatorCardId":276,"attackingPlayerCardId":276,"idOfCardBeingAttacked":229,"stackEffectType":4}} 
 Player 2 03:38:19 $ACTION_MASSAGE_REMOVE:  
 {"id":162} 
 Player 2 03:38:19 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":163,"_text":"Remove After Resolve DeclareAttack 43  "}} 
 Player 2 03:38:19 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:38:19 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":43,"creatorCardId":276,"attackingPlayerCardId":276,"idOfCardBeingAttacked":229,"stackEffectType":4}} 
 Player 2 03:38:19 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":164,"_text":"Response Remove After Resolve DeclareAttack 43"},"childOfId":163} 
 Player 2 03:38:19 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":165,"_text":"Wait For Response From Player 1 "},"childOfId":163} 
 Player 2 03:38:20 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:38:20 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:38:20 $ACTION_MASSAGE_REMOVE:  
 {"id":165} 
 Player 2 03:38:20 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":166,"_text":"Wait For Response From Player 2 "},"childOfId":163} 
 Player 2 03:38:20 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:38:20 $ACTION_MASSAGE_REMOVE:  
 {"id":166} 
 Player 2 03:38:20 $ACTION_MASSAGE_REMOVE:  
 {"id":164} 
 Player 2 03:38:20 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":167,"_text":"Stack Was Emptied "}} 
 Player 2 03:38:20 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:38:20 $ACTION_MASSAGE_REMOVE:  
 {"id":163} 
 Player 2 03:38:21 $ACTION_MASSAGE_REMOVE:  
 {"id":167} 
 Player 2 03:38:22 $NEXT_STACK_ID:  
 Player 2 03:38:22 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:38:22 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 
 Player 2 03:38:22 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":44,"creatorCardId":276,"rollingPlayerCardId":276,"stackEffectType":2,"attackedMonsterCardId":229}} 
 Player 2 03:38:22 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":168,"_text":"Add AttackRoll 44 "}} 
 Player 2 03:38:22 $ROLL_DICE:  
 {"playerId":2} 
 Player 2 03:38:22 $ACTION_MASSAGE_REMOVE:  
 {"id":163} 
 Player 2 03:38:23 $ROLL_DICE_ENDED:  
 {"playerId":2,"numberRolled":4} 
 Player 2 03:38:23 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 4 vs Greed<Monster>"} 
 Player 2 03:38:23 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:38:23 $ACTION_MASSAGE_REMOVE:  
 {"id":168} 
 Player 2 03:38:23 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 4 vs Greed<Monster>"} 
 Player 2 03:38:23 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":44,"creatorCardId":276,"numberRolled":4,"rollingPlayerCardId":276,"stackEffectType":2,"attackedMonsterCardId":229}} 
 Player 2 03:38:23 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":169,"_text":"Response Adding AttackRoll 44"},"childOfId":168} 
 Player 2 03:38:23 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":170,"_text":"Wait For Response From Player 2 "},"childOfId":168} 
 Player 2 03:38:23 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:38:25 $ACTION_MASSAGE_REMOVE:  
 {"id":170} 
 Player 2 03:38:25 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":171,"_text":"Wait For Response From Player 1 "},"childOfId":168} 
 Player 2 03:38:25 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:38:25 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:38:25 $ACTION_MASSAGE_REMOVE:  
 {"id":171} 
 Player 2 03:38:25 $ACTION_MASSAGE_REMOVE:  
 {"id":169} 
 Player 2 03:38:25 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":172,"_text":"Resolve AttackRoll 44 "}} 
 Player 2 03:38:25 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":173,"_text":"Added 0 to original roll"}} 
 Player 2 03:38:25 $NEXT_STACK_ID:  
 Player 2 03:38:25 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 4 vs Greed<Monster>"} 
 Player 2 03:38:25 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:38:25 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed \n2:Player 2 rolled 4 vs Greed<Monster>"} 
 Player 2 03:38:26 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":45,"creatorCardId":276,"entityToDoDamageCardId":276,"entityToTakeDamageCardId":229,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 03:38:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed \n2:Player 2 rolled 4 vs Greed<Monster>"} 
 Player 2 03:38:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed \n2:Player 2 rolled 4 vs Greed<Monster>"} 
 Player 2 03:38:26 $REPLACE_STACK:  
 {"currentStack":[{"entityId":45,"creatorCardId":276,"entityToDoDamageCardId":276,"entityToTakeDamageCardId":229,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":44,"creatorCardId":276,"numberRolled":4,"rollingPlayerCardId":276,"stackEffectType":2,"attackedMonsterCardId":229}]} 
 Player 2 03:38:26 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":21,"originStackId":44},"isAfterActivation":true,"index":21} 
 Player 2 03:38:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed \n2:Player 2 rolled 4 vs Greed<Monster>"} 
 Player 2 03:38:26 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":44,"creatorCardId":276,"numberRolled":4,"rollingPlayerCardId":276,"stackEffectType":2,"attackedMonsterCardId":229}} 
 Player 2 03:38:26 $ACTION_MASSAGE_REMOVE:  
 {"id":172} 
 Player 2 03:38:26 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":174,"_text":"Remove After Resolve AttackRoll 44  "}} 
 Player 2 03:38:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed"} 
 Player 2 03:38:26 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":44,"creatorCardId":276,"numberRolled":4,"rollingPlayerCardId":276,"stackEffectType":2,"attackedMonsterCardId":229}} 
 Player 2 03:38:26 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":175,"_text":"Response Remove After Resolve AttackRoll 44"},"childOfId":174} 
 Player 2 03:38:26 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":176,"_text":"Wait For Response From Player 2 "},"childOfId":174} 
 Player 2 03:38:26 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:38:26 $ACTION_MASSAGE_REMOVE:  
 {"id":176} 
 Player 2 03:38:26 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":177,"_text":"Wait For Response From Player 1 "},"childOfId":174} 
 Player 2 03:38:26 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:38:26 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:38:26 $ACTION_MASSAGE_REMOVE:  
 {"id":177} 
 Player 2 03:38:26 $ACTION_MASSAGE_REMOVE:  
 {"id":175} 
 Player 2 03:38:26 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":178,"_text":"Resolve CombatDamage 45 "}} 
 Player 2 03:38:26 $MONSTER_GET_DAMAGED:  
 {"cardId":229,"hpLeft":2,"damageDealerId":276} 
 Player 2 03:38:26 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":276}],"result":null,"preventMethod":false,"methodScopeId":229,"scopeIsPlayer":false,"index":22,"originStackId":-1},"isAfterActivation":true,"index":22} 
 Player 2 03:38:26 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":4},{"type":0,"number":276},{"type":0,"number":229}],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":23,"originStackId":45},"isAfterActivation":true,"index":23} 
 Player 2 03:38:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed"} 
 Player 2 03:38:26 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":45,"creatorCardId":276,"entityToDoDamageCardId":276,"entityToTakeDamageCardId":229,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 03:38:26 $ACTION_MASSAGE_REMOVE:  
 {"id":178} 
 Player 2 03:38:26 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":179,"_text":"Remove After Resolve CombatDamage 45  "}} 
 Player 2 03:38:26 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:38:26 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":45,"creatorCardId":276,"entityToDoDamageCardId":276,"entityToTakeDamageCardId":229,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 03:38:26 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":180,"_text":"Response Remove After Resolve CombatDamage 45"},"childOfId":179} 
 Player 2 03:38:26 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":181,"_text":"Wait For Response From Player 1 "},"childOfId":179} 
 Player 2 03:38:26 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:38:27 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:38:27 $ACTION_MASSAGE_REMOVE:  
 {"id":181} 
 Player 2 03:38:27 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":182,"_text":"Wait For Response From Player 2 "},"childOfId":179} 
 Player 2 03:38:27 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:38:27 $ACTION_MASSAGE_REMOVE:  
 {"id":182} 
 Player 2 03:38:27 $ACTION_MASSAGE_REMOVE:  
 {"id":180} 
 Player 2 03:38:27 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":183,"_text":"Stack Was Emptied "}} 
 Player 2 03:38:27 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:38:27 $ACTION_MASSAGE_REMOVE:  
 {"id":172} 
 Player 2 03:38:27 $ACTION_MASSAGE_REMOVE:  
 {"id":174} 
 Player 2 03:38:28 $ACTION_MASSAGE_REMOVE:  
 {"id":173} 
 Player 2 03:38:28 $ACTION_MASSAGE_REMOVE:  
 {"id":174} 
 Player 2 03:38:28 $ACTION_MASSAGE_REMOVE:  
 {"id":183} 
 Player 2 03:38:29 $ACTION_MASSAGE_REMOVE:  
 {"id":179} 
 Player 2 03:38:29 $NEXT_STACK_ID:  
 Player 2 03:38:29 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:38:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 
 Player 2 03:38:29 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":46,"creatorCardId":276,"rollingPlayerCardId":276,"stackEffectType":2,"attackedMonsterCardId":229}} 
 Player 2 03:38:29 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":184,"_text":"Add AttackRoll 46 "}} 
 Player 2 03:38:29 $ROLL_DICE:  
 {"playerId":2} 
 Player 2 03:38:31 $ROLL_DICE_ENDED:  
 {"playerId":2,"numberRolled":4} 
 Player 2 03:38:31 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 4 vs Greed<Monster>"} 
 Player 2 03:38:31 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:38:31 $ACTION_MASSAGE_REMOVE:  
 {"id":184} 
 Player 2 03:38:31 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 4 vs Greed<Monster>"} 
 Player 2 03:38:31 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":46,"creatorCardId":276,"numberRolled":4,"rollingPlayerCardId":276,"stackEffectType":2,"attackedMonsterCardId":229}} 
 Player 2 03:38:32 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":185,"_text":"Response Adding AttackRoll 46"},"childOfId":184} 
 Player 2 03:38:32 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":186,"_text":"Wait For Response From Player 2 "},"childOfId":184} 
 Player 2 03:38:32 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:38:32 $ACTION_MASSAGE_REMOVE:  
 {"id":186} 
 Player 2 03:38:32 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":187,"_text":"Wait For Response From Player 1 "},"childOfId":184} 
 Player 2 03:38:32 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:38:32 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:38:33 $ACTION_MASSAGE_REMOVE:  
 {"id":187} 
 Player 2 03:38:33 $ACTION_MASSAGE_REMOVE:  
 {"id":185} 
 Player 2 03:38:33 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":188,"_text":"Resolve AttackRoll 46 "}} 
 Player 2 03:38:33 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":189,"_text":"Added 0 to original roll"}} 
 Player 2 03:38:33 $NEXT_STACK_ID:  
 Player 2 03:38:33 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 4 vs Greed<Monster>"} 
 Player 2 03:38:33 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:38:33 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed \n2:Player 2 rolled 4 vs Greed<Monster>"} 
 Player 2 03:38:33 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":47,"creatorCardId":276,"entityToDoDamageCardId":276,"entityToTakeDamageCardId":229,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 03:38:33 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed \n2:Player 2 rolled 4 vs Greed<Monster>"} 
 Player 2 03:38:33 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed \n2:Player 2 rolled 4 vs Greed<Monster>"} 
 Player 2 03:38:33 $REPLACE_STACK:  
 {"currentStack":[{"entityId":47,"creatorCardId":276,"entityToDoDamageCardId":276,"entityToTakeDamageCardId":229,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":46,"creatorCardId":276,"numberRolled":4,"rollingPlayerCardId":276,"stackEffectType":2,"attackedMonsterCardId":229}]} 
 Player 2 03:38:33 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":1},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":24,"originStackId":46},"isAfterActivation":true,"index":24} 
 Player 2 03:38:33 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed \n2:Player 2 rolled 4 vs Greed<Monster>"} 
 Player 2 03:38:33 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":46,"creatorCardId":276,"numberRolled":4,"rollingPlayerCardId":276,"stackEffectType":2,"attackedMonsterCardId":229}} 
 Player 2 03:38:33 $ACTION_MASSAGE_REMOVE:  
 {"id":188} 
 Player 2 03:38:33 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":190,"_text":"Remove After Resolve AttackRoll 46  "}} 
 Player 2 03:38:33 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed"} 
 Player 2 03:38:33 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":46,"creatorCardId":276,"numberRolled":4,"rollingPlayerCardId":276,"stackEffectType":2,"attackedMonsterCardId":229}} 
 Player 2 03:38:33 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":191,"_text":"Response Remove After Resolve AttackRoll 46"},"childOfId":190} 
 Player 2 03:38:33 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":192,"_text":"Wait For Response From Player 2 "},"childOfId":190} 
 Player 2 03:38:33 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:38:33 $ACTION_MASSAGE_REMOVE:  
 {"id":192} 
 Player 2 03:38:33 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":193,"_text":"Wait For Response From Player 1 "},"childOfId":190} 
 Player 2 03:38:33 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:38:33 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:38:34 $ACTION_MASSAGE_REMOVE:  
 {"id":193} 
 Player 2 03:38:34 $ACTION_MASSAGE_REMOVE:  
 {"id":191} 
 Player 2 03:38:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":194,"_text":"Resolve CombatDamage 47 "}} 
 Player 2 03:38:34 $MONSTER_GET_DAMAGED:  
 {"cardId":229,"hpLeft":1,"damageDealerId":276} 
 Player 2 03:38:34 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":276}],"result":null,"preventMethod":false,"methodScopeId":229,"scopeIsPlayer":false,"index":25,"originStackId":-1},"isAfterActivation":true,"index":25} 
 Player 2 03:38:34 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":4},{"type":0,"number":276},{"type":0,"number":229}],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":26,"originStackId":47},"isAfterActivation":true,"index":26} 
 Player 2 03:38:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed"} 
 Player 2 03:38:34 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":47,"creatorCardId":276,"entityToDoDamageCardId":276,"entityToTakeDamageCardId":229,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 03:38:34 $ACTION_MASSAGE_REMOVE:  
 {"id":194} 
 Player 2 03:38:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":195,"_text":"Remove After Resolve CombatDamage 47  "}} 
 Player 2 03:38:34 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:38:34 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":47,"creatorCardId":276,"entityToDoDamageCardId":276,"entityToTakeDamageCardId":229,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 03:38:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":196,"_text":"Response Remove After Resolve CombatDamage 47"},"childOfId":195} 
 Player 2 03:38:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":197,"_text":"Wait For Response From Player 1 "},"childOfId":195} 
 Player 2 03:38:34 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:38:34 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:38:34 $ACTION_MASSAGE_REMOVE:  
 {"id":197} 
 Player 2 03:38:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":198,"_text":"Wait For Response From Player 2 "},"childOfId":195} 
 Player 2 03:38:34 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:38:34 $ACTION_MASSAGE_REMOVE:  
 {"id":198} 
 Player 2 03:38:34 $ACTION_MASSAGE_REMOVE:  
 {"id":196} 
 Player 2 03:38:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":199,"_text":"Stack Was Emptied "}} 
 Player 2 03:38:34 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:38:34 $ACTION_MASSAGE_REMOVE:  
 {"id":188} 
 Player 2 03:38:34 $ACTION_MASSAGE_REMOVE:  
 {"id":190} 
 Player 2 03:38:36 $ACTION_MASSAGE_REMOVE:  
 {"id":189} 
 Player 2 03:38:36 $ACTION_MASSAGE_REMOVE:  
 {"id":190} 
 Player 2 03:38:36 $ACTION_MASSAGE_REMOVE:  
 {"id":199} 
 Player 2 03:38:37 $ACTION_MASSAGE_REMOVE:  
 {"id":195} 
 Player 2 03:38:37 $NEXT_STACK_ID:  
 Player 2 03:38:37 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:38:37 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 
 Player 2 03:38:37 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":48,"creatorCardId":276,"rollingPlayerCardId":276,"stackEffectType":2,"attackedMonsterCardId":229}} 
 Player 2 03:38:37 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":200,"_text":"Add AttackRoll 48 "}} 
 Player 2 03:38:37 $ROLL_DICE:  
 {"playerId":2} 
 Player 2 03:38:38 $ROLL_DICE_ENDED:  
 {"playerId":2,"numberRolled":5} 
 Player 2 03:38:38 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 5 vs Greed<Monster>"} 
 Player 2 03:38:38 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:38:38 $ACTION_MASSAGE_REMOVE:  
 {"id":200} 
 Player 2 03:38:38 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 5 vs Greed<Monster>"} 
 Player 2 03:38:38 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":48,"creatorCardId":276,"numberRolled":5,"rollingPlayerCardId":276,"stackEffectType":2,"attackedMonsterCardId":229}} 
 Player 2 03:38:38 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":201,"_text":"Response Adding AttackRoll 48"},"childOfId":200} 
 Player 2 03:38:38 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":202,"_text":"Wait For Response From Player 2 "},"childOfId":200} 
 Player 2 03:38:38 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:38:39 $ACTION_MASSAGE_REMOVE:  
 {"id":202} 
 Player 2 03:38:39 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":203,"_text":"Wait For Response From Player 1 "},"childOfId":200} 
 Player 2 03:38:39 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:38:39 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:38:39 $ACTION_MASSAGE_REMOVE:  
 {"id":203} 
 Player 2 03:38:39 $ACTION_MASSAGE_REMOVE:  
 {"id":201} 
 Player 2 03:38:40 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":204,"_text":"Resolve AttackRoll 48 "}} 
 Player 2 03:38:40 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":205,"_text":"Added 0 to original roll"}} 
 Player 2 03:38:40 $NEXT_STACK_ID:  
 Player 2 03:38:40 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 5 vs Greed<Monster>"} 
 Player 2 03:38:40 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:38:40 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed \n2:Player 2 rolled 5 vs Greed<Monster>"} 
 Player 2 03:38:40 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":49,"creatorCardId":276,"entityToDoDamageCardId":276,"entityToTakeDamageCardId":229,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 03:38:40 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed \n2:Player 2 rolled 5 vs Greed<Monster>"} 
 Player 2 03:38:40 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed \n2:Player 2 rolled 5 vs Greed<Monster>"} 
 Player 2 03:38:40 $REPLACE_STACK:  
 {"currentStack":[{"entityId":49,"creatorCardId":276,"entityToDoDamageCardId":276,"entityToTakeDamageCardId":229,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":48,"creatorCardId":276,"numberRolled":5,"rollingPlayerCardId":276,"stackEffectType":2,"attackedMonsterCardId":229}]} 
 Player 2 03:38:40 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":1},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":27,"originStackId":48},"isAfterActivation":true,"index":27} 
 Player 2 03:38:40 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed \n2:Player 2 rolled 5 vs Greed<Monster>"} 
 Player 2 03:38:40 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":48,"creatorCardId":276,"numberRolled":5,"rollingPlayerCardId":276,"stackEffectType":2,"attackedMonsterCardId":229}} 
 Player 2 03:38:40 $ACTION_MASSAGE_REMOVE:  
 {"id":204} 
 Player 2 03:38:40 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":206,"_text":"Remove After Resolve AttackRoll 48  "}} 
 Player 2 03:38:40 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed"} 
 Player 2 03:38:40 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":48,"creatorCardId":276,"numberRolled":5,"rollingPlayerCardId":276,"stackEffectType":2,"attackedMonsterCardId":229}} 
 Player 2 03:38:40 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":207,"_text":"Response Remove After Resolve AttackRoll 48"},"childOfId":206} 
 Player 2 03:38:40 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":208,"_text":"Wait For Response From Player 2 "},"childOfId":206} 
 Player 2 03:38:40 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:38:40 $ACTION_MASSAGE_REMOVE:  
 {"id":208} 
 Player 2 03:38:40 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":209,"_text":"Wait For Response From Player 1 "},"childOfId":206} 
 Player 2 03:38:40 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:38:40 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:38:40 $ACTION_MASSAGE_REMOVE:  
 {"id":209} 
 Player 2 03:38:40 $ACTION_MASSAGE_REMOVE:  
 {"id":207} 
 Player 2 03:38:40 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":210,"_text":"Resolve CombatDamage 49 "}} 
 Player 2 03:38:40 $MONSTER_GET_DAMAGED:  
 {"cardId":229,"hpLeft":0,"damageDealerId":276} 
 Player 2 03:38:40 $NEXT_STACK_ID:  
 Player 2 03:38:40 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed"} 
 Player 2 03:38:40 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:38:40 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed \n2:[object Object] killed by The Lost"} 
 Player 2 03:38:40 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":50,"creatorCardId":276,"monsterToDieCardId":229,"stackEffectType":5,"killerId":276}} 
 Player 2 03:38:41 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed \n2:[object Object] killed by The Lost"} 
 Player 2 03:38:41 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed \n2:[object Object] killed by The Lost"} 
 Player 2 03:38:41 $REPLACE_STACK:  
 {"currentStack":[{"entityId":49,"creatorCardId":276,"entityToDoDamageCardId":276,"entityToTakeDamageCardId":229,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":50,"creatorCardId":276,"monsterToDieCardId":229,"stackEffectType":5,"killerId":276}]} 
 Player 2 03:38:41 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":276}],"result":null,"preventMethod":false,"methodScopeId":229,"scopeIsPlayer":false,"index":28,"originStackId":-1},"isAfterActivation":true,"index":28} 
 Player 2 03:38:41 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":5},{"type":0,"number":276},{"type":0,"number":229}],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":29,"originStackId":49},"isAfterActivation":true,"index":29} 
 Player 2 03:38:41 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed \n2:[object Object] killed by The Lost"} 
 Player 2 03:38:41 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":49,"creatorCardId":276,"entityToDoDamageCardId":276,"entityToTakeDamageCardId":229,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 03:38:41 $ACTION_MASSAGE_REMOVE:  
 {"id":210} 
 Player 2 03:38:41 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":211,"_text":"Remove After Resolve CombatDamage 49  "}} 
 Player 2 03:38:41 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by The Lost"} 
 Player 2 03:38:41 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":49,"creatorCardId":276,"entityToDoDamageCardId":276,"entityToTakeDamageCardId":229,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 03:38:41 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":212,"_text":"Response Remove After Resolve CombatDamage 49"},"childOfId":211} 
 Player 2 03:38:41 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":213,"_text":"Wait For Response From Player 2 "},"childOfId":211} 
 Player 2 03:38:41 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:38:41 $ACTION_MASSAGE_REMOVE:  
 {"id":213} 
 Player 2 03:38:41 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":214,"_text":"Wait For Response From Player 1 "},"childOfId":211} 
 Player 2 03:38:41 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:38:41 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:38:41 $ACTION_MASSAGE_REMOVE:  
 {"id":214} 
 Player 2 03:38:41 $ACTION_MASSAGE_REMOVE:  
 {"id":212} 
 Player 2 03:38:41 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":215,"_text":"Resolve MonsterDeath 50 "}} 
 Player 2 03:38:41 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":229,"particleType":5} 
 Player 2 03:38:41 $CANCEL_ATTACK:  
 Player 2 03:38:41 $NEXT_STACK_ID:  
 Player 2 03:38:41 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by The Lost"} 
 Player 2 03:38:41 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:38:41 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Greed<Monster> reward \n2:[object Object] killed by The Lost"} 
 Player 2 03:38:41 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":51,"creatorCardId":276,"monsterCardWithRewardId":229,"playerCardIdToReward":276,"stackEffectType":7}} 
 Player 2 03:38:41 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Greed<Monster> reward \n2:[object Object] killed by The Lost"} 
 Player 2 03:38:41 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Greed<Monster> reward \n2:[object Object] killed by The Lost"} 
 Player 2 03:38:41 $REPLACE_STACK:  
 {"currentStack":[{"entityId":51,"creatorCardId":276,"monsterCardWithRewardId":229,"playerCardIdToReward":276,"stackEffectType":7},{"entityId":50,"creatorCardId":276,"monsterToDieCardId":229,"stackEffectType":5,"killerId":276}]} 
 Player 2 03:38:41 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Greed<Monster> reward \n2:[object Object] killed by The Lost"} 
 Player 2 03:38:41 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":50,"creatorCardId":276,"monsterToDieCardId":229,"stackEffectType":5,"killerId":276}} 
 Player 2 03:38:42 $ACTION_MASSAGE_REMOVE:  
 {"id":215} 
 Player 2 03:38:42 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":216,"_text":"Remove After Resolve MonsterDeath 50  "}} 
 Player 2 03:38:42 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Greed<Monster> reward"} 
 Player 2 03:38:42 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":50,"creatorCardId":276,"monsterToDieCardId":229,"stackEffectType":5,"killerId":276}} 
 Player 2 03:38:42 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":217,"_text":"Response Remove After Resolve MonsterDeath 50"},"childOfId":216} 
 Player 2 03:38:42 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":218,"_text":"Wait For Response From Player 2 "},"childOfId":216} 
 Player 2 03:38:42 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:38:42 $ACTION_MASSAGE_REMOVE:  
 {"id":218} 
 Player 2 03:38:42 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":219,"_text":"Wait For Response From Player 1 "},"childOfId":216} 
 Player 2 03:38:42 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:38:42 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:38:42 $ACTION_MASSAGE_REMOVE:  
 {"id":219} 
 Player 2 03:38:42 $ACTION_MASSAGE_REMOVE:  
 {"id":217} 
 Player 2 03:38:42 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":220,"_text":"Resolve MonsterRewardStackEffect 51 "}} 
 Player 2 03:38:42 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:38:42 $ACTION_MASSAGE_REMOVE:  
 {"id":204} 
 Player 2 03:38:42 $ACTION_MASSAGE_REMOVE:  
 {"id":206} 
 Player 2 03:38:42 $ACTION_MASSAGE_REMOVE:  
 {"id":211} 
 Player 2 03:38:42 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":221,"_text":"Fizzle MonsterRewardStackEffect 51"}} 
 Player 2 03:38:42 $CHANGE_MONEY:  
 {"playerId":2,"numOfCoins":9} 
 Player 2 03:38:42 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":9}],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":30,"originStackId":-1},"isAfterActivation":true,"index":30} 
 Player 2 03:38:42 $MOVE_CARD:  
 {"moveIndex":29,"cardId":229,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"soulsLayout"} 
 Player 2 03:38:43 $ACTION_MASSAGE_REMOVE:  
 {"id":205} 
 Player 2 03:38:43 $ACTION_MASSAGE_REMOVE:  
 {"id":206} 
 Player 2 03:38:43 $GET_SOUL:  
 {"playerId":2,"cardId":229} 
 Player 2 03:38:43 $REMOVE_FROM_PASSIVE_MANAGER:  
 {"cardId":229} 
 Player 2 03:38:43 $REMOVE_MONSTER:  
 {"holderId":2,"monsterId":229} 
 Player 2 03:38:43 $NEXT_STACK_ID:  
 Player 2 03:38:43 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:38:43 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Refill holder2 slot"} 
 Player 2 03:38:43 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":52,"creatorCardId":276,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 
 Player 2 03:38:43 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":222,"_text":"Add RefillEmptySlot 52 "}} 
 Player 2 03:38:43 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:38:43 $ACTION_MASSAGE_REMOVE:  
 {"id":222} 
 Player 2 03:38:43 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Refill holder2 slot"} 
 Player 2 03:38:43 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":52,"creatorCardId":276,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 
 Player 2 03:38:43 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":223,"_text":"Response Adding RefillEmptySlot 52"},"childOfId":222} 
 Player 2 03:38:43 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":224,"_text":"Wait For Response From Player 2 "},"childOfId":222} 
 Player 2 03:38:43 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:38:43 $ACTION_MASSAGE_REMOVE:  
 {"id":224} 
 Player 2 03:38:44 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":225,"_text":"Wait For Response From Player 1 "},"childOfId":222} 
 Player 2 03:38:44 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:38:44 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:38:44 $ACTION_MASSAGE_REMOVE:  
 {"id":211} 
 Player 2 03:38:44 $ACTION_MASSAGE_REMOVE:  
 {"id":225} 
 Player 2 03:38:44 $ACTION_MASSAGE_REMOVE:  
 {"id":223} 
 Player 2 03:38:44 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":226,"_text":"Resolve RefillEmptySlot 52 "}} 
 Player 2 03:38:44 $DRAW_CARD:  
 {"deckType":2} 
 Player 2 03:38:44 $FLIP_CARD:  
 {"cardId":224} 
 Player 2 03:38:44 $ADD_MONSTER:  
 {"monsterPlaceId":2,"monsterId":224} 
 Player 2 03:38:44 $NEW_MONSTER_ON_PLACE:  
 {"cardId":224,"monsterPlaceId":2} 
 Player 2 03:38:44 $ACTION_MASSAGE_REMOVE:  
 {"id":226} 
 Player 2 03:38:44 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":227,"_text":"Remove After Resolve RefillEmptySlot 52  "}} 
 Player 2 03:38:44 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:38:44 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":52,"creatorCardId":276,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 
 Player 2 03:38:44 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":228,"_text":"Response Remove After Resolve RefillEmptySlot 52"},"childOfId":227} 
 Player 2 03:38:44 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":229,"_text":"Wait For Response From Player 1 "},"childOfId":227} 
 Player 2 03:38:44 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:38:44 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:38:44 $ACTION_MASSAGE_REMOVE:  
 {"id":216} 
 Player 2 03:38:44 $ACTION_MASSAGE_REMOVE:  
 {"id":229} 
 Player 2 03:38:44 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":230,"_text":"Wait For Response From Player 2 "},"childOfId":227} 
 Player 2 03:38:44 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:38:44 $ACTION_MASSAGE_REMOVE:  
 {"id":230} 
 Player 2 03:38:44 $ACTION_MASSAGE_REMOVE:  
 {"id":228} 
 Player 2 03:38:44 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":231,"_text":"Stack Was Emptied "}} 
 Player 2 03:38:44 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:38:44 $ACTION_MASSAGE_REMOVE:  
 {"id":231} 
 Player 2 03:38:44 $ACTION_MASSAGE_REMOVE:  
 {"id":220} 
 Player 2 03:38:44 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":232,"_text":"Stack Was Emptied "}} 
 Player 2 03:38:45 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:38:45 $ACTION_MASSAGE_REMOVE:  
 {"id":232} 
 Player 2 03:38:45 $ACTION_MASSAGE_REMOVE:  
 {"id":221} 
 Player 2 03:38:46 $ACTION_MASSAGE_REMOVE:  
 {"id":231} 
 Player 2 03:38:46 $ACTION_MASSAGE_REMOVE:  
 {"id":232} 
 Player 2 03:38:47 $ACTION_MASSAGE_REMOVE:  
 {"id":227} 
 Player 2 03:38:50 $NEXT_STACK_ID:  
 Player 2 03:38:50 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:38:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to buy TopBlankCard for 10"} 
 Player 2 03:38:50 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":53,"creatorCardId":276,"itemToPurchaseCardId":0,"playerWhoBuysCardId":276,"cost":10,"stackEffectType":9}} 
 Player 2 03:38:50 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":233,"_text":"Add PurchaseItem 53 "}} 
 Player 2 03:38:50 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:38:50 $ACTION_MASSAGE_REMOVE:  
 {"id":233} 
 Player 2 03:38:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to buy TopBlankCard for 10"} 
 Player 2 03:38:50 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":53,"creatorCardId":276,"itemToPurchaseCardId":0,"playerWhoBuysCardId":276,"cost":10,"stackEffectType":9}} 
 Player 2 03:38:50 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":234,"_text":"Response Adding PurchaseItem 53"},"childOfId":233} 
 Player 2 03:38:50 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":235,"_text":"Wait For Response From Player 2 "},"childOfId":233} 
 Player 2 03:38:50 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:38:50 $ACTION_MASSAGE_REMOVE:  
 {"id":235} 
 Player 2 03:38:50 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":236,"_text":"Wait For Response From Player 1 "},"childOfId":233} 
 Player 2 03:38:50 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:38:50 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:38:50 $ACTION_MASSAGE_REMOVE:  
 {"id":236} 
 Player 2 03:38:50 $ACTION_MASSAGE_REMOVE:  
 {"id":234} 
 Player 2 03:38:50 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":237,"_text":"Resolve PurchaseItem 53 "}} 
 Player 2 03:38:50 $CHANGE_MONEY:  
 {"playerId":2,"numOfCoins":-10} 
 Player 2 03:38:50 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-10}],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":31,"originStackId":-1},"isAfterActivation":true,"index":31} 
 Player 2 03:38:51 $DRAW_CARD:  
 {"deckType":5} 
 Player 2 03:38:51 $MOVE_CARD:  
 {"moveIndex":30,"cardId":156,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 
 Player 2 03:38:51 $ADD_AN_ITEM:  
 {"playerId":2,"cardId":156,"isReward":false} 
 Player 2 03:38:51 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":156}],"result":true,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":32,"originStackId":-1},"isAfterActivation":true,"index":32} 
 Player 2 03:38:51 $ACTION_MASSAGE_REMOVE:  
 {"id":237} 
 Player 2 03:38:51 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":238,"_text":"Remove After Resolve PurchaseItem 53  "}} 
 Player 2 03:38:51 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:38:51 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":53,"creatorCardId":276,"itemToPurchaseCardId":0,"playerWhoBuysCardId":276,"cost":10,"stackEffectType":9}} 
 Player 2 03:38:51 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":239,"_text":"Response Remove After Resolve PurchaseItem 53"},"childOfId":238} 
 Player 2 03:38:51 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":240,"_text":"Wait For Response From Player 1 "},"childOfId":238} 
 Player 2 03:38:51 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:38:51 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:38:52 $ACTION_MASSAGE_REMOVE:  
 {"id":240} 
 Player 2 03:38:52 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":241,"_text":"Wait For Response From Player 2 "},"childOfId":238} 
 Player 2 03:38:52 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:38:52 $ACTION_MASSAGE_REMOVE:  
 {"id":241} 
 Player 2 03:38:52 $ACTION_MASSAGE_REMOVE:  
 {"id":239} 
 Player 2 03:38:52 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":242,"_text":"Stack Was Emptied "}} 
 Player 2 03:38:52 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:38:52 $ACTION_MASSAGE_REMOVE:  
 {"id":238} 
 Player 2 03:38:53 $ACTION_MASSAGE_REMOVE:  
 {"id":242} 
 Player 2 03:38:54 $ACTION_MASSAGE_REMOVE:  
 {"id":238} 
 Player 2 03:39:09 $NEXT_STACK_ID:  
 Player 2 03:39:09 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:39:09 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 1 Penny(2) "} 
 Player 2 03:39:09 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":54,"creatorCardId":276,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":10,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 2 03:39:09 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":243,"_text":"Add PlayLootCardStackEffect 54 "}} 
 Player 2 03:39:09 $PLAYER_LOSE_LOOT:  
 {"playerId":2,"cardId":10} 
 Player 2 03:39:09 $MOVE_CARD:  
 {"moveIndex":31,"cardId":10,"placeID":278,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 03:39:10 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 1 Penny(2): addMoney"} 
 Player 2 03:39:10 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 1 Penny(2): addMoney"} 
 Player 2 03:39:10 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:39:10 $ACTION_MASSAGE_REMOVE:  
 {"id":243} 
 Player 2 03:39:10 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 1 Penny(2): addMoney"} 
 Player 2 03:39:11 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":54,"creatorCardId":276,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":10,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":10,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 03:39:11 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":244,"_text":"Response Adding PlayLootCardStackEffect 54"},"childOfId":243} 
 Player 2 03:39:11 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":245,"_text":"Wait For Response From Player 2 "},"childOfId":243} 
 Player 2 03:39:11 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:39:11 $ACTION_MASSAGE_REMOVE:  
 {"id":245} 
 Player 2 03:39:11 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":246,"_text":"Wait For Response From Player 1 "},"childOfId":243} 
 Player 2 03:39:11 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:39:11 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:39:11 $ACTION_MASSAGE_REMOVE:  
 {"id":246} 
 Player 2 03:39:11 $ACTION_MASSAGE_REMOVE:  
 {"id":244} 
 Player 2 03:39:11 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":247,"_text":"Resolve PlayLootCardStackEffect 54 "}} 
 Player 2 03:39:11 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 1 Penny(2): addMoney"} 
 Player 2 03:39:11 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":10,"particleType":6} 
 Player 2 03:39:13 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":10,"particleType":6} 
 Player 2 03:39:13 $CHANGE_MONEY:  
 {"playerId":2,"numOfCoins":1} 
 Player 2 03:39:13 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":1}],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":33,"originStackId":-1},"isAfterActivation":true,"index":33} 
 Player 2 03:39:13 $MOVE_CARD:  
 {"moveIndex":32,"cardId":10,"placeID":279,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 03:39:13 $MOVE_CARD_TO_PILE:  
 {"type":1,"cardId":10} 
 Player 2 03:39:13 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 1 Penny(2): addMoney"} 
 Player 2 03:39:13 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":54,"creatorCardId":276,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":10,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 03:39:13 $ACTION_MASSAGE_REMOVE:  
 {"id":247} 
 Player 2 03:39:14 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":248,"_text":"Remove After Resolve PlayLootCardStackEffect 54  "}} 
 Player 2 03:39:14 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:39:14 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":54,"creatorCardId":276,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":10,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 03:39:14 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":249,"_text":"Response Remove After Resolve PlayLootCardStackEffect 54"},"childOfId":248} 
 Player 2 03:39:14 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":250,"_text":"Wait For Response From Player 1 "},"childOfId":248} 
 Player 2 03:39:14 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:39:14 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:39:14 $ACTION_MASSAGE_REMOVE:  
 {"id":250} 
 Player 2 03:39:14 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":251,"_text":"Wait For Response From Player 2 "},"childOfId":248} 
 Player 2 03:39:14 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:39:14 $ACTION_MASSAGE_REMOVE:  
 {"id":251} 
 Player 2 03:39:14 $ACTION_MASSAGE_REMOVE:  
 {"id":249} 
 Player 2 03:39:14 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":252,"_text":"Stack Was Emptied "}} 
 Player 2 03:39:14 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:39:14 $ACTION_MASSAGE_REMOVE:  
 {"id":248} 
 Player 2 03:39:15 $ACTION_MASSAGE_REMOVE:  
 {"id":252} 
 Player 2 03:39:16 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:39:16 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:39:16 $REPLACE_STACK:  
 {"currentStack":[]} 
 Player 2 03:39:16 $END_TURN:  
 Player 2 03:39:16 $SET_TURN:  
 {"playerId":1} 
 Player 2 03:39:16 $START_TURN:  
 {"playerId":1} 
 Player 2 03:39:17 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:39:17 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:39:17 $ACTION_MASSAGE_REMOVE:  
 {"id":248} 
 Player 2 03:39:17 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 03:39:17 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 03:39:17 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:39:18 $MOVE_CARD_END:  
 {"moveIndex":33,"cardId":60,"flipIfFlipped":false,"playerId":1} 
 Player 2 03:39:18 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 03:39:18 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 03:39:18 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 03:39:18 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 03:39:18 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:40:26 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:40:26 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:40:26 $MOVE_CARD_END:  
 {"moveIndex":34,"cardId":60,"flipIfFlipped":true,"playerId":1} 
 Player 2 03:40:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play 4 Cents(0) "} 
 Player 2 03:40:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play 4 Cents(0) "} 
 Player 2 03:40:27 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:40:29 $MOVE_CARD_END:  
 {"moveIndex":35,"cardId":60,"flipIfFlipped":true,"playerId":1} 
 Player 2 03:40:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play 4 Cents(0) "} 
 Player 2 03:40:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play 4 Cents(0) "} 
 Player 2 03:40:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play 4 Cents(0) "} 
 Player 2 03:40:30 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play 4 Cents(0) "} 
 Player 2 03:40:30 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:40:34 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:40:34 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:40:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to buy TopBlankCard for 10"} 
 Player 2 03:40:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to buy TopBlankCard for 10"} 
 Player 2 03:40:34 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:40:34 $MOVE_CARD_END:  
 {"moveIndex":36,"cardId":183,"flipIfFlipped":true,"playerId":1} 
 Player 2 03:40:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to buy TopBlankCard for 10"} 
 Player 2 03:40:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to buy TopBlankCard for 10"} 
 Player 2 03:40:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to buy TopBlankCard for 10 \n2:Activate Placenta "} 
 Player 2 03:40:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to buy TopBlankCard for 10 \n2:Activate Placenta "} 
 Player 2 03:40:35 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:40:37 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to buy TopBlankCard for 10 \n2:Activate Placenta "} 
 Player 2 03:40:37 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to buy TopBlankCard for 10 \n2:Activate Placenta "} 
 Player 2 03:40:37 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to buy TopBlankCard for 10 \n2:Activate Placenta "} 
 Player 2 03:40:37 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to buy TopBlankCard for 10 \n2:Activate Placenta "} 
 Player 2 03:40:37 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:40:38 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to buy TopBlankCard for 10"} 
 Player 2 03:40:38 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to buy TopBlankCard for 10"} 
 Player 2 03:40:38 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:41:09 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:41:09 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:41:12 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 activated Azazel"} 
 Player 2 03:41:12 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 activated Azazel"} 
 Player 2 03:41:12 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:41:14 $MOVE_CARD_END:  
 {"moveIndex":37,"cardId":126,"flipIfFlipped":true,"playerId":1} 
 Player 2 03:41:23 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 activated Azazel"} 
 Player 2 03:41:23 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 activated Azazel"} 
 Player 2 03:41:23 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Strength "} 
 Player 2 03:41:23 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Strength "} 
 Player 2 03:41:23 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Strength "} 
 Player 2 03:41:23 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Strength "} 
 Player 2 03:41:24 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Strength  \n2:Player 1 activated Azazel"} 
 Player 2 03:41:24 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Strength  \n2:Player 1 activated Azazel"} 
 Player 2 03:41:24 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Strength  \n2:Player 1 activated Azazel"} 
 Player 2 03:41:24 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Strength  \n2:Player 1 activated Azazel"} 
 Player 2 03:41:24 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:41:26 $MOVE_CARD_END:  
 {"moveIndex":38,"cardId":126,"flipIfFlipped":true,"playerId":1} 
 Player 2 03:41:27 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Strength "} 
 Player 2 03:41:27 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Strength "} 
 Player 2 03:41:27 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Strength "} 
 Player 2 03:41:27 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Strength "} 
 Player 2 03:41:27 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:41:28 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:41:28 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:41:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1  declared attack on Chub"} 
 Player 2 03:41:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1  declared attack on Chub"} 
 Player 2 03:41:28 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:41:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1  declared attack on Chub"} 
 Player 2 03:41:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1  declared attack on Chub"} 
 Player 2 03:41:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1  declared attack on Chub"} 
 Player 2 03:41:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1  declared attack on Chub"} 
 Player 2 03:41:29 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:41:32 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:41:32 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:41:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Chub<Monster>"} 
 Player 2 03:41:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Chub<Monster>"} 
 Player 2 03:41:34 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:41:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Chub<Monster>"} 
 Player 2 03:41:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Chub<Monster>"} 
 Player 2 03:41:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Chub"} 
 Player 2 03:41:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Chub"} 
 Player 2 03:41:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Chub"} 
 Player 2 03:41:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Chub"} 
 Player 2 03:41:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Chub \n2:Player 1 is rolling against Chub<Monster>"} 
 Player 2 03:41:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Chub \n2:Player 1 is rolling against Chub<Monster>"} 
 Player 2 03:41:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Chub \n2:Player 1 is rolling against Chub<Monster>"} 
 Player 2 03:41:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Chub \n2:Player 1 is rolling against Chub<Monster>"} 
 Player 2 03:41:35 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:41:36 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Chub"} 
 Player 2 03:41:36 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Chub"} 
 Player 2 03:41:36 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Chub"} 
 Player 2 03:41:36 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Chub"} 
 Player 2 03:41:36 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:41:40 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:41:40 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:41:41 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Chub<Monster>"} 
 Player 2 03:41:41 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Chub<Monster>"} 
 Player 2 03:41:41 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:41:42 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Chub<Monster>"} 
 Player 2 03:41:42 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Chub<Monster>"} 
 Player 2 03:41:42 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Chub"} 
 Player 2 03:41:42 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Chub"} 
 Player 2 03:41:42 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Chub"} 
 Player 2 03:41:42 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Chub"} 
 Player 2 03:41:42 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Chub \n2:Player 1 is rolling against Chub<Monster>"} 
 Player 2 03:41:42 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Chub \n2:Player 1 is rolling against Chub<Monster>"} 
 Player 2 03:41:42 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Chub \n2:Player 1 is rolling against Chub<Monster>"} 
 Player 2 03:41:42 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Chub \n2:Player 1 is rolling against Chub<Monster>"} 
 Player 2 03:41:42 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:41:43 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Chub"} 
 Player 2 03:41:43 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Chub"} 
 Player 2 03:41:43 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by undefined"} 
 Player 2 03:41:43 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by undefined"} 
 Player 2 03:41:43 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by undefined"} 
 Player 2 03:41:43 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by undefined"} 
 Player 2 03:41:43 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Chub \n2:[object Object] killed by undefined"} 
 Player 2 03:41:44 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Chub \n2:[object Object] killed by undefined"} 
 Player 2 03:41:44 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Chub \n2:[object Object] killed by undefined"} 
 Player 2 03:41:44 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Chub \n2:[object Object] killed by undefined"} 
 Player 2 03:41:44 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:41:44 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by undefined"} 
 Player 2 03:41:44 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by undefined"} 
 Player 2 03:41:44 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward"} 
 Player 2 03:41:44 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward"} 
 Player 2 03:41:44 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward"} 
 Player 2 03:41:44 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward"} 
 Player 2 03:41:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward \n2:[object Object] killed by undefined"} 
 Player 2 03:41:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward \n2:[object Object] killed by undefined"} 
 Player 2 03:41:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward \n2:[object Object] killed by undefined"} 
 Player 2 03:41:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward \n2:[object Object] killed by undefined"} 
 Player 2 03:41:45 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:41:46 $MOVE_CARD_END:  
 {"moveIndex":39,"cardId":212,"flipIfFlipped":true,"playerId":1} 
 Player 2 03:41:46 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward"} 
 Player 2 03:41:46 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward"} 
 Player 2 03:41:46 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward \n2:Refill holder1 slot"} 
 Player 2 03:41:46 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward \n2:Refill holder1 slot"} 
 Player 2 03:41:46 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:41:47 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward \n2:Refill holder1 slot"} 
 Player 2 03:41:47 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward \n2:Refill holder1 slot"} 
 Player 2 03:41:47 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward \n2:Refill holder1 slot \n3:Player 1 activated Gold Chest (2)"} 
 Player 2 03:41:47 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward \n2:Refill holder1 slot \n3:Player 1 activated Gold Chest (2)"} 
 Player 2 03:41:47 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:41:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward \n2:Refill holder1 slot \n3:Player 1 activated Gold Chest (2)"} 
 Player 2 03:41:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward \n2:Refill holder1 slot \n3:Player 1 activated Gold Chest (2)"} 
 Player 2 03:41:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward \n2:Refill holder1 slot \n3:Player 1 activated Gold Chest (2)"} 
 Player 2 03:41:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward \n2:Refill holder1 slot \n3:Player 1 activated Gold Chest (2)"} 
 Player 2 03:41:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward \n2:Refill holder1 slot \n3:Player 1 activated Gold Chest (2) \n4:Player 1 roll a dice"} 
 Player 2 03:41:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward \n2:Refill holder1 slot \n3:Player 1 activated Gold Chest (2) \n4:Player 1 roll a dice"} 
 Player 2 03:41:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward \n2:Refill holder1 slot \n3:Player 1 activated Gold Chest (2) \n4:Player 1 roll a dice"} 
 Player 2 03:41:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward \n2:Refill holder1 slot \n3:Player 1 activated Gold Chest (2) \n4:Player 1 roll a dice"} 
 Player 2 03:41:50 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:41:51 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward \n2:Refill holder1 slot \n3:Player 1 activated Gold Chest (2) \n4:Player 1 roll a dice"} 
 Player 2 03:41:51 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward \n2:Refill holder1 slot \n3:Player 1 activated Gold Chest (2) \n4:Player 1 roll a dice"} 
 Player 2 03:41:51 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward \n2:Refill holder1 slot \n3:Player 1 activated Gold Chest (2) \n4:Player 1 roll a dice"} 
 Player 2 03:41:51 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward \n2:Refill holder1 slot \n3:Player 1 activated Gold Chest (2) \n4:Player 1 roll a dice"} 
 Player 2 03:41:51 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward \n2:Refill holder1 slot \n3:Player 1 activated Gold Chest (2) \n4:Player 1 roll a dice"} 
 Player 2 03:41:51 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward \n2:Refill holder1 slot \n3:Player 1 activated Gold Chest (2) \n4:Player 1 roll a dice"} 
 Player 2 03:41:51 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward \n2:Refill holder1 slot \n3:Player 1 activated Gold Chest (2) \n4:Player 1 roll a dice"} 
 Player 2 03:41:51 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward \n2:Refill holder1 slot \n3:Player 1 activated Gold Chest (2) \n4:Player 1 roll a dice"} 
 Player 2 03:41:51 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:41:54 $MOVE_CARD_END:  
 {"moveIndex":40,"cardId":128,"flipIfFlipped":false,"playerId":1} 
 Player 2 03:41:54 $MOVE_CARD_END:  
 {"moveIndex":41,"cardId":121,"flipIfFlipped":false,"playerId":1} 
 Player 2 03:41:55 $MOVE_CARD_END:  
 {"moveIndex":42,"cardId":228,"flipIfFlipped":true,"playerId":1} 
 Player 2 03:41:55 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward \n2:Refill holder1 slot \n3:Player 1 activated Gold Chest (2)"} 
 Player 2 03:41:55 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward \n2:Refill holder1 slot \n3:Player 1 activated Gold Chest (2)"} 
 Player 2 03:41:55 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward \n2:Refill holder1 slot \n3:Player 1 activated Gold Chest (2) \n4:Refill holder1 slot"} 
 Player 2 03:41:55 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward \n2:Refill holder1 slot \n3:Player 1 activated Gold Chest (2) \n4:Refill holder1 slot"} 
 Player 2 03:41:55 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:41:56 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward \n2:Refill holder1 slot \n3:Player 1 activated Gold Chest (2) \n4:Refill holder1 slot"} 
 Player 2 03:41:56 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward \n2:Refill holder1 slot \n3:Player 1 activated Gold Chest (2) \n4:Refill holder1 slot"} 
 Player 2 03:41:56 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:41:57 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward \n2:Refill holder1 slot \n3:Player 1 activated Gold Chest (2)"} 
 Player 2 03:41:57 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward \n2:Refill holder1 slot \n3:Player 1 activated Gold Chest (2)"} 
 Player 2 03:41:57 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward \n2:Refill holder1 slot \n3:Player 1 activated Gold Chest (2)"} 
 Player 2 03:41:57 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward \n2:Refill holder1 slot \n3:Player 1 activated Gold Chest (2)"} 
 Player 2 03:41:57 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:41:57 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward \n2:Refill holder1 slot"} 
 Player 2 03:41:57 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward \n2:Refill holder1 slot"} 
 Player 2 03:41:57 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:44:47 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward"} 
 Player 2 03:44:47 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward"} 
 Player 2 03:44:47 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward \n2:Player 1  declared attack on TopBlankCard"} 
 Player 2 03:44:47 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward \n2:Player 1  declared attack on TopBlankCard"} 
 Player 2 03:44:47 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:44:55 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward \n2:Player 1  declared attack on TopBlankCard"} 
 Player 2 03:44:55 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward \n2:Player 1  declared attack on TopBlankCard"} 
 Player 2 03:44:55 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward \n2:Player 1  declared attack on Charger"} 
 Player 2 03:44:55 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward \n2:Player 1  declared attack on Charger"} 
 Player 2 03:44:56 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:44:57 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward"} 
 Player 2 03:44:57 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward"} 
 Player 2 03:44:59 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward \n2:Player 1 is rolling against Charger<Monster>"} 
 Player 2 03:44:59 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward \n2:Player 1 is rolling against Charger<Monster>"} 
 Player 2 03:44:59 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:45:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward \n2:Player 1 is rolling against Charger<Monster>"} 
 Player 2 03:45:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward \n2:Player 1 is rolling against Charger<Monster>"} 
 Player 2 03:45:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward \n2:Azazel combat damage to Charger"} 
 Player 2 03:45:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward \n2:Azazel combat damage to Charger"} 
 Player 2 03:45:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward \n2:Azazel combat damage to Charger"} 
 Player 2 03:45:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward \n2:Azazel combat damage to Charger"} 
 Player 2 03:45:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Charger \n2:Player 1 is rolling against Charger<Monster>"} 
 Player 2 03:45:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Charger \n2:Player 1 is rolling against Charger<Monster>"} 
 Player 2 03:45:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Charger \n2:Player 1 is rolling against Charger<Monster>"} 
 Player 2 03:45:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Charger \n2:Player 1 is rolling against Charger<Monster>"} 
 Player 2 03:45:00 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:45:01 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Charger"} 
 Player 2 03:45:01 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Charger"} 
 Player 2 03:45:01 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by undefined"} 
 Player 2 03:45:01 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by undefined"} 
 Player 2 03:45:01 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by undefined"} 
 Player 2 03:45:01 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by undefined"} 
 Player 2 03:45:01 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Charger \n2:[object Object] killed by undefined"} 
 Player 2 03:45:01 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Charger \n2:[object Object] killed by undefined"} 
 Player 2 03:45:01 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Charger \n2:[object Object] killed by undefined"} 
 Player 2 03:45:01 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Charger \n2:[object Object] killed by undefined"} 
 Player 2 03:45:01 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:45:02 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by undefined"} 
 Player 2 03:45:02 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by undefined"} 
 Player 2 03:45:02 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Charger<Monster> reward"} 
 Player 2 03:45:02 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Charger<Monster> reward"} 
 Player 2 03:45:02 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Charger<Monster> reward"} 
 Player 2 03:45:02 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Charger<Monster> reward"} 
 Player 2 03:45:02 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Charger<Monster> reward \n2:[object Object] killed by undefined"} 
 Player 2 03:45:02 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Charger<Monster> reward \n2:[object Object] killed by undefined"} 
 Player 2 03:45:02 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Charger<Monster> reward \n2:[object Object] killed by undefined"} 
 Player 2 03:45:02 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Charger<Monster> reward \n2:[object Object] killed by undefined"} 
 Player 2 03:45:02 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 03:45:03 $MOVE_CARD_END:  
 {"moveIndex":43,"cardId":209,"flipIfFlipped":true,"playerId":1} 
 Player 2 03:45:17 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:45:17 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:45:17 $NEXT_STACK_ID:  
 Player 2 03:45:17 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:45:17 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 03:45:17 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":78,"creatorCardId":276,"turnPlayerCardId":276,"stackEffectType":13}} 
 Player 2 03:45:17 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":253,"_text":"Add StartTurnLoot 78 "}} 
 Player 2 03:45:17 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:45:17 $ACTION_MASSAGE_REMOVE:  
 {"id":253} 
 Player 2 03:45:17 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 03:45:18 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":78,"creatorCardId":276,"turnPlayerCardId":276,"stackEffectType":13}} 
 Player 2 03:45:18 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":254,"_text":"Response Adding StartTurnLoot 78"},"childOfId":253} 
 Player 2 03:45:18 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":255,"_text":"Wait For Response From Player 2 "},"childOfId":253} 
 Player 2 03:45:18 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:45:18 $ACTION_MASSAGE_REMOVE:  
 {"id":255} 
 Player 2 03:45:18 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":256,"_text":"Wait For Response From Player 1 "},"childOfId":253} 
 Player 2 03:45:18 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:45:18 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:45:18 $ACTION_MASSAGE_REMOVE:  
 {"id":256} 
 Player 2 03:45:18 $ACTION_MASSAGE_REMOVE:  
 {"id":254} 
 Player 2 03:45:18 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":257,"_text":"Resolve StartTurnLoot 78 "}} 
 Player 2 03:45:18 $DRAW_CARD:  
 {"deckType":1} 
 Player 2 03:45:18 $MOVE_CARD:  
 {"moveIndex":44,"cardId":15,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 03:45:18 $CARD_DRAWN:  
 {"playerId":2,"deckType":1,"drawnCardId":15} 
 Player 2 03:45:18 $FLIP_CARD:  
 {"cardId":15} 
 Player 2 03:45:18 $PLAYER_GET_LOOT:  
 {"playerId":2,"cardId":15} 
 Player 2 03:45:18 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 03:45:18 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":78,"creatorCardId":276,"turnPlayerCardId":276,"stackEffectType":13}} 
 Player 2 03:45:18 $ACTION_MASSAGE_REMOVE:  
 {"id":257} 
 Player 2 03:45:18 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":258,"_text":"Remove After Resolve StartTurnLoot 78  "}} 
 Player 2 03:45:19 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:45:19 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":78,"creatorCardId":276,"turnPlayerCardId":276,"stackEffectType":13}} 
 Player 2 03:45:19 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":259,"_text":"Response Remove After Resolve StartTurnLoot 78"},"childOfId":258} 
 Player 2 03:45:19 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":260,"_text":"Wait For Response From Player 1 "},"childOfId":258} 
 Player 2 03:45:19 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:45:19 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:45:19 $ACTION_MASSAGE_REMOVE:  
 {"id":260} 
 Player 2 03:45:19 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":261,"_text":"Wait For Response From Player 2 "},"childOfId":258} 
 Player 2 03:45:19 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:45:19 $ACTION_MASSAGE_REMOVE:  
 {"id":261} 
 Player 2 03:45:19 $ACTION_MASSAGE_REMOVE:  
 {"id":259} 
 Player 2 03:45:19 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":262,"_text":"Stack Was Emptied "}} 
 Player 2 03:45:19 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:45:19 $ACTION_MASSAGE_REMOVE:  
 {"id":258} 
 Player 2 03:45:20 $ACTION_MASSAGE_REMOVE:  
 {"id":262} 
 Player 2 03:45:21 $ACTION_MASSAGE_REMOVE:  
 {"id":258} 
 Player 2 03:46:23 $NEXT_STACK_ID:  
 Player 2 03:46:23 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:46:23 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard"} 
 Player 2 03:46:23 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":79,"creatorCardId":276,"attackingPlayerCardId":276,"idOfCardBeingAttacked":0,"stackEffectType":4}} 
 Player 2 03:46:23 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":263,"_text":"Add DeclareAttack 79 "}} 
 Player 2 03:46:23 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:46:23 $ACTION_MASSAGE_REMOVE:  
 {"id":263} 
 Player 2 03:46:23 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard"} 
 Player 2 03:46:23 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":79,"creatorCardId":276,"attackingPlayerCardId":276,"idOfCardBeingAttacked":0,"stackEffectType":4}} 
 Player 2 03:46:23 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":264,"_text":"Response Adding DeclareAttack 79"},"childOfId":263} 
 Player 2 03:46:23 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":265,"_text":"Wait For Response From Player 2 "},"childOfId":263} 
 Player 2 03:46:23 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:46:23 $ACTION_MASSAGE_REMOVE:  
 {"id":265} 
 Player 2 03:46:23 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":266,"_text":"Wait For Response From Player 1 "},"childOfId":263} 
 Player 2 03:46:23 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:46:23 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:46:24 $ACTION_MASSAGE_REMOVE:  
 {"id":266} 
 Player 2 03:46:24 $ACTION_MASSAGE_REMOVE:  
 {"id":264} 
 Player 2 03:46:24 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":267,"_text":"Resolve DeclareAttack 79 "}} 
 Player 2 03:46:24 $DRAW_CARD:  
 {"deckType":2} 
 Player 2 03:46:24 $SHOW_CARD_PREVIEW:  
 {"cardToShowId":219,"playerId":2} 
 Player 2 03:46:30 $FLIP_CARD:  
 {"cardId":219} 
 Player 2 03:46:30 $ADD_MONSTER:  
 {"monsterPlaceId":2,"monsterId":219} 
 Player 2 03:46:30 $NEW_MONSTER_ON_PLACE:  
 {"cardId":219,"monsterPlaceId":2} 
 Player 2 03:46:30 $NEXT_STACK_ID:  
 Player 2 03:46:30 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard"} 
 Player 2 03:46:30 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard \n2:Player 2 activated Dark Chest (1)"} 
 Player 2 03:46:30 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":80,"creatorCardId":276,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":219,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 03:46:30 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":268,"_text":"Add ActivateItem 80 "}} 
 Player 2 03:46:30 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:46:30 $ACTION_MASSAGE_REMOVE:  
 {"id":268} 
 Player 2 03:46:30 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard \n2:Player 2 activated Dark Chest (1)"} 
 Player 2 03:46:30 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":80,"creatorCardId":276,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":219,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 03:46:30 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":269,"_text":"Response Adding ActivateItem 80"},"childOfId":268} 
 Player 2 03:46:30 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":270,"_text":"Wait For Response From Player 2 "},"childOfId":268} 
 Player 2 03:46:30 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:46:30 $ACTION_MASSAGE_REMOVE:  
 {"id":270} 
 Player 2 03:46:30 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":271,"_text":"Wait For Response From Player 1 "},"childOfId":268} 
 Player 2 03:46:30 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:46:30 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:46:31 $ACTION_MASSAGE_REMOVE:  
 {"id":271} 
 Player 2 03:46:31 $ACTION_MASSAGE_REMOVE:  
 {"id":269} 
 Player 2 03:46:31 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":272,"_text":"Resolve ActivateItem 80 "}} 
 Player 2 03:46:31 $NEXT_STACK_ID:  
 Player 2 03:46:31 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard \n2:Player 2 activated Dark Chest (1)"} 
 Player 2 03:46:31 $NEXT_STACK_ID:  
 Player 2 03:46:31 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard \n2:Player 2 activated Dark Chest (1)"} 
 Player 2 03:46:31 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard \n2:Player 2 activated Dark Chest (1) \n3:Player 2 roll a dice"} 
 Player 2 03:46:31 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard \n2:Player 2 activated Dark Chest (1) \n3:Player 2 roll a dice"} 
 Player 2 03:46:31 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":82,"creatorCardId":276,"stackEffectToLock":{"entityId":80,"creatorCardId":276,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":219,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"stackEffectType":11}} 
 Player 2 03:46:31 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":273,"_text":"Add RollDiceStackEffect 82 "}} 
 Player 2 03:46:31 $ROLL_DICE:  
 {"playerId":2} 
 Player 2 03:46:32 $ROLL_DICE_ENDED:  
 {"playerId":2,"numberRolled":3} 
 Player 2 03:46:32 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard \n2:Player 2 activated Dark Chest (1) \n3:Player 2 rolled 3"} 
 Player 2 03:46:32 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:46:32 $ACTION_MASSAGE_REMOVE:  
 {"id":273} 
 Player 2 03:46:32 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard \n2:Player 2 activated Dark Chest (1) \n3:Player 2 rolled 3"} 
 Player 2 03:46:32 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard \n2:Player 2 activated Dark Chest (1) \n3:Player 2 rolled 3"} 
 Player 2 03:46:32 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":82,"creatorCardId":276,"stackEffectToLock":{"entityId":80,"creatorCardId":276,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":219,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"numberRolled":3,"stackEffectType":11}} 
 Player 2 03:46:32 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":274,"_text":"Response Adding RollDiceStackEffect 82"},"childOfId":273} 
 Player 2 03:46:32 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":275,"_text":"Wait For Response From Player 2 "},"childOfId":273} 
 Player 2 03:46:32 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:46:37 $ACTION_MASSAGE_REMOVE:  
 {"id":275} 
 Player 2 03:46:37 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":276,"_text":"Wait For Response From Player 1 "},"childOfId":273} 
 Player 2 03:46:37 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:46:37 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:46:48 $ACTION_MASSAGE_REMOVE:  
 {"id":276} 
 Player 2 03:46:48 $ACTION_MASSAGE_REMOVE:  
 {"id":274} 
 Player 2 03:46:48 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":277,"_text":"Resolve RollDiceStackEffect 82 "}} 
 Player 2 03:46:48 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":3},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":34,"originStackId":82},"isAfterActivation":true,"index":34} 
 Player 2 03:46:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard \n2:Player 2 activated Dark Chest (1) \n3:Player 2 rolled 3"} 
 Player 2 03:46:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard \n2:Player 2 activated Dark Chest (1) \n3:Player 2 rolled 3"} 
 Player 2 03:46:48 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":82,"creatorCardId":276,"stackEffectToLock":{"entityId":80,"creatorCardId":276,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":219,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"numberRolled":3,"stackEffectType":11}} 
 Player 2 03:46:48 $ACTION_MASSAGE_REMOVE:  
 {"id":277} 
 Player 2 03:46:48 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":278,"_text":"Remove After Resolve RollDiceStackEffect 82  "}} 
 Player 2 03:46:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard \n2:Player 2 activated Dark Chest (1)"} 
 Player 2 03:46:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard \n2:Player 2 activated Dark Chest (1)"} 
 Player 2 03:46:48 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":82,"creatorCardId":276,"stackEffectToLock":{"entityId":80,"creatorCardId":276,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":219,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"numberRolled":3,"stackEffectType":11}} 
 Player 2 03:46:48 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":279,"_text":"Response Remove After Resolve RollDiceStackEffect 82"},"childOfId":278} 
 Player 2 03:46:48 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":280,"_text":"Wait For Response From Player 1 "},"childOfId":278} 
 Player 2 03:46:48 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:46:48 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:46:48 $ACTION_MASSAGE_REMOVE:  
 {"id":280} 
 Player 2 03:46:48 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":281,"_text":"Wait For Response From Player 2 "},"childOfId":278} 
 Player 2 03:46:48 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:46:49 $ACTION_MASSAGE_REMOVE:  
 {"id":281} 
 Player 2 03:46:49 $ACTION_MASSAGE_REMOVE:  
 {"id":279} 
 Player 2 03:46:49 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":282,"_text":"Resolve ActivateItem 80 "}} 
 Player 2 03:46:49 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":219,"particleType":6} 
 Player 2 03:46:50 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":219,"particleType":6} 
 Player 2 03:46:50 $CHANGE_MONEY:  
 {"playerId":2,"numOfCoins":3} 
 Player 2 03:46:51 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":35,"originStackId":-1},"isAfterActivation":true,"index":35} 
 Player 2 03:46:51 $MOVE_CARD:  
 {"moveIndex":45,"cardId":219,"placeID":281,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 03:46:51 $ACTION_MASSAGE_REMOVE:  
 {"id":278} 
 Player 2 03:46:51 $MOVE_CARD_TO_PILE:  
 {"type":2,"cardId":219} 
 Player 2 03:46:51 $REMOVE_MONSTER:  
 {"holderId":2,"monsterId":219} 
 Player 2 03:46:51 $GET_NEXT_MONSTER:  
 {"monsterPlaceId":2} 
 Player 2 03:46:51 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard \n2:Player 2 activated Dark Chest (1)"} 
 Player 2 03:46:51 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":80,"creatorCardId":276,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":219,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 03:46:51 $ACTION_MASSAGE_REMOVE:  
 {"id":272} 
 Player 2 03:46:51 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":283,"_text":"Remove After Resolve ActivateItem 80  "}} 
 Player 2 03:46:51 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard"} 
 Player 2 03:46:51 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":80,"creatorCardId":276,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":219,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 03:46:51 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":284,"_text":"Response Remove After Resolve ActivateItem 80"},"childOfId":283} 
 Player 2 03:46:51 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":285,"_text":"Wait For Response From Player 2 "},"childOfId":283} 
 Player 2 03:46:51 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:46:51 $ACTION_MASSAGE_REMOVE:  
 {"id":285} 
 Player 2 03:46:51 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":286,"_text":"Wait For Response From Player 1 "},"childOfId":283} 
 Player 2 03:46:51 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:46:51 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:46:52 $ACTION_MASSAGE_REMOVE:  
 {"id":286} 
 Player 2 03:46:52 $ACTION_MASSAGE_REMOVE:  
 {"id":284} 
 Player 2 03:46:52 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":287,"_text":"Resolve DeclareAttack 79 "}} 
 Player 2 03:46:52 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":36,"originStackId":79},"isAfterActivation":true,"index":36} 
 Player 2 03:46:52 $ACTION_MASSAGE_REMOVE:  
 {"id":267} 
 Player 2 03:46:52 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":288,"_text":"Remove After Resolve DeclareAttack 79  "}} 
 Player 2 03:46:52 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:46:52 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":79,"creatorCardId":276,"attackingPlayerCardId":276,"idOfCardBeingAttacked":219,"stackEffectType":4}} 
 Player 2 03:46:52 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":289,"_text":"Response Remove After Resolve DeclareAttack 79"},"childOfId":288} 
 Player 2 03:46:52 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":290,"_text":"Wait For Response From Player 1 "},"childOfId":288} 
 Player 2 03:46:52 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:46:52 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:46:53 $ACTION_MASSAGE_REMOVE:  
 {"id":290} 
 Player 2 03:46:53 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":291,"_text":"Wait For Response From Player 2 "},"childOfId":288} 
 Player 2 03:46:53 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:46:53 $ACTION_MASSAGE_REMOVE:  
 {"id":291} 
 Player 2 03:46:53 $ACTION_MASSAGE_REMOVE:  
 {"id":289} 
 Player 2 03:46:53 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":292,"_text":"Stack Was Emptied "}} 
 Player 2 03:46:53 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:46:53 $ACTION_MASSAGE_REMOVE:  
 {"id":267} 
 Player 2 03:46:53 $ACTION_MASSAGE_REMOVE:  
 {"id":272} 
 Player 2 03:46:53 $ACTION_MASSAGE_REMOVE:  
 {"id":283} 
 Player 2 03:46:54 $ACTION_MASSAGE_REMOVE:  
 {"id":283} 
 Player 2 03:46:54 $ACTION_MASSAGE_REMOVE:  
 {"id":292} 
 Player 2 03:46:55 $ACTION_MASSAGE_REMOVE:  
 {"id":288} 
 Player 2 03:47:05 $NEXT_STACK_ID:  
 Player 2 03:47:05 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:47:05 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play Bomb(5) "} 
 Player 2 03:47:05 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":83,"creatorCardId":276,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":92,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 2 03:47:05 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":293,"_text":"Add PlayLootCardStackEffect 83 "}} 
 Player 2 03:47:05 $PLAYER_LOSE_LOOT:  
 {"playerId":2,"cardId":92} 
 Player 2 03:47:05 $MOVE_CARD:  
 {"moveIndex":46,"cardId":92,"placeID":278,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 03:47:05 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play Bomb(5): DealDamage"} 
 Player 2 03:47:05 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play Bomb(5): DealDamage"} 
 Player 2 03:47:08 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:47:08 $ACTION_MASSAGE_REMOVE:  
 {"id":293} 
 Player 2 03:47:08 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play Bomb(5): DealDamage"} 
 Player 2 03:47:08 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":83,"creatorCardId":276,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":92,"lootPlayerId":2,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":92,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 03:47:08 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":294,"_text":"Response Adding PlayLootCardStackEffect 83"},"childOfId":293} 
 Player 2 03:47:08 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":295,"_text":"Wait For Response From Player 2 "},"childOfId":293} 
 Player 2 03:47:08 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:47:08 $ACTION_MASSAGE_REMOVE:  
 {"id":295} 
 Player 2 03:47:08 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":296,"_text":"Wait For Response From Player 1 "},"childOfId":293} 
 Player 2 03:47:08 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:47:08 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:47:08 $ACTION_MASSAGE_REMOVE:  
 {"id":296} 
 Player 2 03:47:08 $ACTION_MASSAGE_REMOVE:  
 {"id":294} 
 Player 2 03:47:08 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":297,"_text":"Resolve PlayLootCardStackEffect 83 "}} 
 Player 2 03:47:08 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play Bomb(5): DealDamage"} 
 Player 2 03:47:08 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":92,"particleType":6} 
 Player 2 03:47:10 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":92,"particleType":6} 
 Player 2 03:47:10 $MONSTER_GET_DAMAGED:  
 {"cardId":254,"hpLeft":0,"damageDealerId":276} 
 Player 2 03:47:10 $NEXT_STACK_ID:  
 Player 2 03:47:10 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play Bomb(5): DealDamage"} 
 Player 2 03:47:10 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:47:10 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play Bomb(5): DealDamage \n2:[object Object] killed by The Lost"} 
 Player 2 03:47:10 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":84,"creatorCardId":276,"monsterToDieCardId":254,"stackEffectType":5,"killerId":276}} 
 Player 2 03:47:10 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play Bomb(5): DealDamage \n2:[object Object] killed by The Lost"} 
 Player 2 03:47:10 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play Bomb(5): DealDamage \n2:[object Object] killed by The Lost"} 
 Player 2 03:47:10 $REPLACE_STACK:  
 {"currentStack":[{"entityId":83,"creatorCardId":276,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":92,"lootPlayerId":2,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":92,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":84,"creatorCardId":276,"monsterToDieCardId":254,"stackEffectType":5,"killerId":276}]} 
 Player 2 03:47:10 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":276}],"result":null,"preventMethod":false,"methodScopeId":254,"scopeIsPlayer":false,"index":37,"originStackId":-1},"isAfterActivation":true,"index":37} 
 Player 2 03:47:10 $MOVE_CARD:  
 {"moveIndex":47,"cardId":92,"placeID":279,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 03:47:11 $MOVE_CARD_TO_PILE:  
 {"type":1,"cardId":92} 
 Player 2 03:47:11 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play Bomb(5): DealDamage \n2:[object Object] killed by The Lost"} 
 Player 2 03:47:11 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":83,"creatorCardId":276,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":92,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 03:47:11 $ACTION_MASSAGE_REMOVE:  
 {"id":297} 
 Player 2 03:47:11 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":298,"_text":"Remove After Resolve PlayLootCardStackEffect 83  "}} 
 Player 2 03:47:11 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by The Lost"} 
 Player 2 03:47:11 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":83,"creatorCardId":276,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":92,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 03:47:11 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":299,"_text":"Response Remove After Resolve PlayLootCardStackEffect 83"},"childOfId":298} 
 Player 2 03:47:11 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":300,"_text":"Wait For Response From Player 2 "},"childOfId":298} 
 Player 2 03:47:11 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:47:11 $ACTION_MASSAGE_REMOVE:  
 {"id":300} 
 Player 2 03:47:11 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":301,"_text":"Wait For Response From Player 1 "},"childOfId":298} 
 Player 2 03:47:11 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:47:11 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:47:12 $ACTION_MASSAGE_REMOVE:  
 {"id":301} 
 Player 2 03:47:12 $ACTION_MASSAGE_REMOVE:  
 {"id":299} 
 Player 2 03:47:12 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":302,"_text":"Resolve MonsterDeath 84 "}} 
 Player 2 03:47:12 $NEXT_STACK_ID:  
 Player 2 03:47:12 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by The Lost"} 
 Player 2 03:47:12 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:47:12 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Trite<Monster> reward \n2:[object Object] killed by The Lost"} 
 Player 2 03:47:12 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":85,"creatorCardId":276,"monsterCardWithRewardId":254,"playerCardIdToReward":276,"stackEffectType":7}} 
 Player 2 03:47:12 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Trite<Monster> reward \n2:[object Object] killed by The Lost"} 
 Player 2 03:47:12 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Trite<Monster> reward \n2:[object Object] killed by The Lost"} 
 Player 2 03:47:12 $REPLACE_STACK:  
 {"currentStack":[{"entityId":85,"creatorCardId":276,"monsterCardWithRewardId":254,"playerCardIdToReward":276,"stackEffectType":7},{"entityId":84,"creatorCardId":276,"monsterToDieCardId":254,"stackEffectType":5,"killerId":276}]} 
 Player 2 03:47:12 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Trite<Monster> reward \n2:[object Object] killed by The Lost"} 
 Player 2 03:47:12 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":84,"creatorCardId":276,"monsterToDieCardId":254,"stackEffectType":5,"killerId":276}} 
 Player 2 03:47:12 $ACTION_MASSAGE_REMOVE:  
 {"id":302} 
 Player 2 03:47:12 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":303,"_text":"Remove After Resolve MonsterDeath 84  "}} 
 Player 2 03:47:12 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Trite<Monster> reward"} 
 Player 2 03:47:12 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":84,"creatorCardId":276,"monsterToDieCardId":254,"stackEffectType":5,"killerId":276}} 
 Player 2 03:47:12 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":304,"_text":"Response Remove After Resolve MonsterDeath 84"},"childOfId":303} 
 Player 2 03:47:12 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":305,"_text":"Wait For Response From Player 2 "},"childOfId":303} 
 Player 2 03:47:12 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:47:12 $ACTION_MASSAGE_REMOVE:  
 {"id":305} 
 Player 2 03:47:12 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":306,"_text":"Wait For Response From Player 1 "},"childOfId":303} 
 Player 2 03:47:12 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:47:12 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:47:13 $ACTION_MASSAGE_REMOVE:  
 {"id":306} 
 Player 2 03:47:13 $ACTION_MASSAGE_REMOVE:  
 {"id":304} 
 Player 2 03:47:13 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":307,"_text":"Resolve MonsterRewardStackEffect 85 "}} 
 Player 2 03:47:13 $DRAW_CARD:  
 {"deckType":1} 
 Player 2 03:47:13 $MOVE_CARD:  
 {"moveIndex":48,"cardId":35,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 03:47:13 $CARD_DRAWN:  
 {"playerId":2,"deckType":1,"drawnCardId":35} 
 Player 2 03:47:13 $FLIP_CARD:  
 {"cardId":35} 
 Player 2 03:47:13 $PLAYER_GET_LOOT:  
 {"playerId":2,"cardId":35} 
 Player 2 03:47:13 $DRAW_CARD:  
 {"deckType":1} 
 Player 2 03:47:13 $MOVE_CARD:  
 {"moveIndex":49,"cardId":137,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 03:47:14 $CARD_DRAWN:  
 {"playerId":2,"deckType":1,"drawnCardId":137} 
 Player 2 03:47:14 $FLIP_CARD:  
 {"cardId":137} 
 Player 2 03:47:14 $PLAYER_GET_LOOT:  
 {"playerId":2,"cardId":137} 
 Player 2 03:47:14 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:47:14 $ACTION_MASSAGE_REMOVE:  
 {"id":298} 
 Player 2 03:47:14 $ACTION_MASSAGE_REMOVE:  
 {"id":303} 
 Player 2 03:47:14 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":308,"_text":"Fizzle MonsterRewardStackEffect 85"}} 
 Player 2 03:47:14 $MOVE_CARD:  
 {"moveIndex":50,"cardId":254,"placeID":281,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 03:47:14 $ACTION_MASSAGE_REMOVE:  
 {"id":298} 
 Player 2 03:47:14 $MOVE_CARD_TO_PILE:  
 {"type":2,"cardId":254} 
 Player 2 03:47:15 $REMOVE_MONSTER:  
 {"holderId":1,"monsterId":254} 
 Player 2 03:47:15 $NEXT_STACK_ID:  
 Player 2 03:47:15 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:47:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Refill holder1 slot"} 
 Player 2 03:47:15 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":86,"creatorCardId":276,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 
 Player 2 03:47:15 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":309,"_text":"Add RefillEmptySlot 86 "}} 
 Player 2 03:47:15 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:47:15 $ACTION_MASSAGE_REMOVE:  
 {"id":309} 
 Player 2 03:47:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Refill holder1 slot"} 
 Player 2 03:47:15 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":86,"creatorCardId":276,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 
 Player 2 03:47:15 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":310,"_text":"Response Adding RefillEmptySlot 86"},"childOfId":309} 
 Player 2 03:47:15 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":311,"_text":"Wait For Response From Player 2 "},"childOfId":309} 
 Player 2 03:47:15 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:47:15 $ACTION_MASSAGE_REMOVE:  
 {"id":311} 
 Player 2 03:47:15 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":312,"_text":"Wait For Response From Player 1 "},"childOfId":309} 
 Player 2 03:47:15 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:47:15 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:47:15 $ACTION_MASSAGE_REMOVE:  
 {"id":303} 
 Player 2 03:47:15 $ACTION_MASSAGE_REMOVE:  
 {"id":312} 
 Player 2 03:47:15 $ACTION_MASSAGE_REMOVE:  
 {"id":310} 
 Player 2 03:47:15 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":313,"_text":"Resolve RefillEmptySlot 86 "}} 
 Player 2 03:47:15 $DRAW_CARD:  
 {"deckType":2} 
 Player 2 03:47:15 $FLIP_CARD:  
 {"cardId":218} 
 Player 2 03:47:15 $REGISTER_PASSIVE_ITEM:  
 {"cardId":218} 
 Player 2 03:47:15 $ADD_MONSTER:  
 {"monsterPlaceId":1,"monsterId":218} 
 Player 2 03:47:15 $NEW_MONSTER_ON_PLACE:  
 {"cardId":218,"monsterPlaceId":1} 
 Player 2 03:47:15 $ACTION_MASSAGE_REMOVE:  
 {"id":313} 
 Player 2 03:47:15 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":314,"_text":"Remove After Resolve RefillEmptySlot 86  "}} 
 Player 2 03:47:15 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:47:15 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":86,"creatorCardId":276,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 
 Player 2 03:47:15 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":315,"_text":"Response Remove After Resolve RefillEmptySlot 86"},"childOfId":314} 
 Player 2 03:47:15 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":316,"_text":"Wait For Response From Player 1 "},"childOfId":314} 
 Player 2 03:47:15 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:47:15 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:47:16 $ACTION_MASSAGE_REMOVE:  
 {"id":316} 
 Player 2 03:47:16 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":317,"_text":"Wait For Response From Player 2 "},"childOfId":314} 
 Player 2 03:47:16 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:47:16 $ACTION_MASSAGE_REMOVE:  
 {"id":317} 
 Player 2 03:47:16 $ACTION_MASSAGE_REMOVE:  
 {"id":315} 
 Player 2 03:47:16 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":318,"_text":"Stack Was Emptied "}} 
 Player 2 03:47:16 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:47:16 $ACTION_MASSAGE_REMOVE:  
 {"id":314} 
 Player 2 03:47:16 $ACTION_MASSAGE_REMOVE:  
 {"id":307} 
 Player 2 03:47:16 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":319,"_text":"Stack Was Emptied "}} 
 Player 2 03:47:16 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:47:16 $ACTION_MASSAGE_REMOVE:  
 {"id":319} 
 Player 2 03:47:17 $ACTION_MASSAGE_REMOVE:  
 {"id":308} 
 Player 2 03:47:17 $ACTION_MASSAGE_REMOVE:  
 {"id":318} 
 Player 2 03:47:17 $ACTION_MASSAGE_REMOVE:  
 {"id":319} 
 Player 2 03:47:18 $ACTION_MASSAGE_REMOVE:  
 {"id":314} 
 Player 2 03:47:22 $NEXT_STACK_ID:  
 Player 2 03:47:22 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:47:22 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated The Lost"} 
 Player 2 03:47:22 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":87,"creatorCardId":276,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 03:47:22 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":320,"_text":"Add ActivateItem 87 "}} 
 Player 2 03:47:24 $USE_ITEM:  
 {"cardId":276} 
 Player 2 03:47:24 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:47:24 $ACTION_MASSAGE_REMOVE:  
 {"id":320} 
 Player 2 03:47:25 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated The Lost"} 
 Player 2 03:47:25 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":87,"creatorCardId":276,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 03:47:25 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":321,"_text":"Response Adding ActivateItem 87"},"childOfId":320} 
 Player 2 03:47:25 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":322,"_text":"Wait For Response From Player 2 "},"childOfId":320} 
 Player 2 03:47:25 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:47:25 $ACTION_MASSAGE_REMOVE:  
 {"id":322} 
 Player 2 03:47:25 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":323,"_text":"Wait For Response From Player 1 "},"childOfId":320} 
 Player 2 03:47:25 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:47:25 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:47:25 $ACTION_MASSAGE_REMOVE:  
 {"id":323} 
 Player 2 03:47:25 $ACTION_MASSAGE_REMOVE:  
 {"id":321} 
 Player 2 03:47:25 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":324,"_text":"Resolve ActivateItem 87 "}} 
 Player 2 03:47:25 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":276,"particleType":6} 
 Player 2 03:47:27 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":276,"particleType":6} 
 Player 2 03:47:27 $NEXT_STACK_ID:  
 Player 2 03:47:27 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated The Lost"} 
 Player 2 03:47:27 $PLAYER_LOSE_LOOT:  
 {"playerId":2,"cardId":35} 
 Player 2 03:47:27 $MOVE_CARD:  
 {"moveIndex":51,"cardId":35,"placeID":278,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 03:47:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 2 Cents(15): addMoney \n2:Player 2 activated The Lost"} 
 Player 2 03:47:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 2 Cents(15): addMoney \n2:Player 2 activated The Lost"} 
 Player 2 03:47:28 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:47:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 2 Cents(15): addMoney \n2:Player 2 activated The Lost"} 
 Player 2 03:47:28 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":88,"creatorCardId":276,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":35,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":35,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 03:47:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 2 Cents(15): addMoney \n2:Player 2 activated The Lost"} 
 Player 2 03:47:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 2 Cents(15): addMoney \n2:Player 2 activated The Lost"} 
 Player 2 03:47:28 $REPLACE_STACK:  
 {"currentStack":[{"entityId":88,"creatorCardId":276,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":35,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":35,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":87,"creatorCardId":276,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 
 Player 2 03:47:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 2 Cents(15): addMoney \n2:Player 2 activated The Lost"} 
 Player 2 03:47:28 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":87,"creatorCardId":276,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 03:47:28 $ACTION_MASSAGE_REMOVE:  
 {"id":324} 
 Player 2 03:47:28 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":325,"_text":"Remove After Resolve ActivateItem 87  "}} 
 Player 2 03:47:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 2 Cents(15): addMoney"} 
 Player 2 03:47:28 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":87,"creatorCardId":276,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 03:47:28 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":326,"_text":"Response Remove After Resolve ActivateItem 87"},"childOfId":325} 
 Player 2 03:47:28 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":327,"_text":"Wait For Response From Player 2 "},"childOfId":325} 
 Player 2 03:47:28 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:47:28 $ACTION_MASSAGE_REMOVE:  
 {"id":327} 
 Player 2 03:47:28 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":328,"_text":"Wait For Response From Player 1 "},"childOfId":325} 
 Player 2 03:47:28 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:47:28 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:47:28 $ACTION_MASSAGE_REMOVE:  
 {"id":328} 
 Player 2 03:47:28 $ACTION_MASSAGE_REMOVE:  
 {"id":326} 
 Player 2 03:47:29 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":329,"_text":"Resolve PlayLootCardStackEffect 88 "}} 
 Player 2 03:47:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 2 Cents(15): addMoney"} 
 Player 2 03:47:29 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":35,"particleType":6} 
 Player 2 03:47:30 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":35,"particleType":6} 
 Player 2 03:47:30 $CHANGE_MONEY:  
 {"playerId":2,"numOfCoins":2} 
 Player 2 03:47:31 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":2}],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":38,"originStackId":-1},"isAfterActivation":true,"index":38} 
 Player 2 03:47:31 $MOVE_CARD:  
 {"moveIndex":52,"cardId":35,"placeID":279,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 03:47:31 $ACTION_MASSAGE_REMOVE:  
 {"id":325} 
 Player 2 03:47:31 $MOVE_CARD_TO_PILE:  
 {"type":1,"cardId":35} 
 Player 2 03:47:31 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 2 Cents(15): addMoney"} 
 Player 2 03:47:31 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":88,"creatorCardId":276,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":35,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 03:47:31 $ACTION_MASSAGE_REMOVE:  
 {"id":329} 
 Player 2 03:47:31 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":330,"_text":"Remove After Resolve PlayLootCardStackEffect 88  "}} 
 Player 2 03:47:31 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:47:31 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":88,"creatorCardId":276,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":35,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 03:47:31 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":331,"_text":"Response Remove After Resolve PlayLootCardStackEffect 88"},"childOfId":330} 
 Player 2 03:47:31 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":332,"_text":"Wait For Response From Player 1 "},"childOfId":330} 
 Player 2 03:47:31 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:47:31 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:47:31 $ACTION_MASSAGE_REMOVE:  
 {"id":332} 
 Player 2 03:47:31 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":333,"_text":"Wait For Response From Player 2 "},"childOfId":330} 
 Player 2 03:47:32 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:47:32 $ACTION_MASSAGE_REMOVE:  
 {"id":333} 
 Player 2 03:47:32 $ACTION_MASSAGE_REMOVE:  
 {"id":331} 
 Player 2 03:47:32 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":334,"_text":"Stack Was Emptied "}} 
 Player 2 03:47:32 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:47:32 $ACTION_MASSAGE_REMOVE:  
 {"id":330} 
 Player 2 03:47:33 $ACTION_MASSAGE_REMOVE:  
 {"id":334} 
 Player 2 03:47:34 $ACTION_MASSAGE_REMOVE:  
 {"id":330} 
 Player 2 03:47:35 $NEXT_STACK_ID:  
 Player 2 03:47:35 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:47:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to buy TopBlankCard for 10"} 
 Player 2 03:47:35 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":89,"creatorCardId":276,"itemToPurchaseCardId":0,"playerWhoBuysCardId":276,"cost":10,"stackEffectType":9}} 
 Player 2 03:47:35 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":335,"_text":"Add PurchaseItem 89 "}} 
 Player 2 03:47:35 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:47:35 $ACTION_MASSAGE_REMOVE:  
 {"id":335} 
 Player 2 03:47:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to buy TopBlankCard for 10"} 
 Player 2 03:47:35 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":89,"creatorCardId":276,"itemToPurchaseCardId":0,"playerWhoBuysCardId":276,"cost":10,"stackEffectType":9}} 
 Player 2 03:47:35 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":336,"_text":"Response Adding PurchaseItem 89"},"childOfId":335} 
 Player 2 03:47:35 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":337,"_text":"Wait For Response From Player 2 "},"childOfId":335} 
 Player 2 03:47:35 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:47:35 $ACTION_MASSAGE_REMOVE:  
 {"id":337} 
 Player 2 03:47:35 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":338,"_text":"Wait For Response From Player 1 "},"childOfId":335} 
 Player 2 03:47:35 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:47:35 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:47:35 $ACTION_MASSAGE_REMOVE:  
 {"id":338} 
 Player 2 03:47:35 $ACTION_MASSAGE_REMOVE:  
 {"id":336} 
 Player 2 03:47:35 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":339,"_text":"Resolve PurchaseItem 89 "}} 
 Player 2 03:47:35 $CHANGE_MONEY:  
 {"playerId":2,"numOfCoins":-10} 
 Player 2 03:47:35 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-10}],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":39,"originStackId":-1},"isAfterActivation":true,"index":39} 
 Player 2 03:47:35 $DRAW_CARD:  
 {"deckType":5} 
 Player 2 03:47:35 $MOVE_CARD:  
 {"moveIndex":53,"cardId":148,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 
 Player 2 03:47:36 $ADD_AN_ITEM:  
 {"playerId":2,"cardId":148,"isReward":false} 
 Player 2 03:47:36 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":148}],"result":true,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":40,"originStackId":-1},"isAfterActivation":true,"index":40} 
 Player 2 03:47:36 $ACTION_MASSAGE_REMOVE:  
 {"id":339} 
 Player 2 03:47:36 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":340,"_text":"Remove After Resolve PurchaseItem 89  "}} 
 Player 2 03:47:36 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:47:36 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":89,"creatorCardId":276,"itemToPurchaseCardId":0,"playerWhoBuysCardId":276,"cost":10,"stackEffectType":9}} 
 Player 2 03:47:36 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":341,"_text":"Response Remove After Resolve PurchaseItem 89"},"childOfId":340} 
 Player 2 03:47:36 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":342,"_text":"Wait For Response From Player 1 "},"childOfId":340} 
 Player 2 03:47:36 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 03:47:36 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 03:47:36 $ACTION_MASSAGE_REMOVE:  
 {"id":342} 
 Player 2 03:47:36 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":343,"_text":"Wait For Response From Player 2 "},"childOfId":340} 
 Player 2 03:47:36 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 03:47:36 $ACTION_MASSAGE_REMOVE:  
 {"id":343} 
 Player 2 03:47:36 $ACTION_MASSAGE_REMOVE:  
 {"id":341} 
 Player 2 03:47:36 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":344,"_text":"Stack Was Emptied "}} 
 Player 2 03:47:36 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:47:36 $ACTION_MASSAGE_REMOVE:  
 {"id":340} 
 Player 2 03:47:38 $ACTION_MASSAGE_REMOVE:  
 {"id":344} 
 Player 2 03:47:39 $ACTION_MASSAGE_REMOVE:  
 {"id":340} 
 Player 2 03:47:42 $NEXT_STACK_ID:  
 Player 2 03:47:42 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 03:47:42 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated Boomerang"} 
 Player 2 03:47:42 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":90,"creatorCardId":276,"hasLockingStackEffect":false,"itemToPlayCardId":148,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 03:47:42 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":345,"_text":"Add ActivateItem 90 "}} 
 Player 2 04:43:24 $MATCH: 