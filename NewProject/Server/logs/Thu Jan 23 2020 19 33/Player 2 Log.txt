Start Log 
 Player 2 19:36:29 $MOVE_TO_TABLE:  
 Player 2 19:36:35 $FINISH_LOAD:  

 {"id":2,"turnPlayerId":2} 
 Player 2 19:36:35 $ASSIGN_CHAR_TO_PLAYER:  

 {"playerId":1,"charCardId":296,"itemCardId":297} 
 Player 2 19:36:35 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":291}],"result":true,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 19:36:35 $ASSIGN_CHAR_TO_PLAYER:  

 {"playerId":2,"charCardId":290,"itemCardId":291} 
 Player 2 19:36:35 $DECK_ARRAGMENT:  

 {"deckType":1,"arrangement":[128,113,8,117,42,61,80,18,136,84,23,27,34,111,17,110,19,94,21,112,104,29,139,49,64,57,77,53,30,38,86,131,127,73,26,62,33,65,74,41,138,142,47,66,132,108,51,107,35,36,98,56,31,129,37,10,89,126,63,134,9,22,92,32,125,79,39,103,14,46,50,44,115,13,91,52,97,99,133,69,105,88,141,40,124,87,25,119,75,78,101,11,85,130,118,48,43,137,121,58,140,59,12,96,81,45,7,109,20,120,123,90,70,24,60,15,122,54,55,116,16,67,76,100,82,114,28,93,102,106,95,68,72,83,135,71]} 
 Player 2 19:36:35 $DECK_ARRAGMENT:  

 {"deckType":2,"arrangement":[264,247,248,263,277,271,244,275,270,231,238,253,260,254,252,268,269,276,255,233,259,273,262,241,267,239,242,280,230,261,249,240,237,278,266,257,246,265,274,236,256,258,234,245,250,272,251,228,243,281,279,235,229,232]} 
 Player 2 19:36:35 $DECK_ARRAGMENT:  

 {"deckType":5,"arrangement":[145,166,163,173,146,208,178,190,188,170,185,194,218,214,207,169,223,154,162,202,167,215,195,157,193,203,204,187,176,158,171,161,168,224,155,182,212,186,172,211,209,174,198,192,177,189,205,156,152,147,183,221,153,184,175,225,149,197,206,191,222,179,217,201,180,150,151,219,148,160,196,210,164,213,199,159,220,216,165,200,181]} 
 Player 2 19:36:35 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 19:36:35 $FLIP_CARD:  

 {"cardId":181} 
 Player 2 19:36:35 $ADD_STORE_CARD:  

 {"cardId":181} 
 Player 2 19:36:35 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 19:36:35 $FLIP_CARD:  

 {"cardId":200} 
 Player 2 19:36:35 $ADD_STORE_CARD:  

 {"cardId":200} 
 Player 2 19:36:35 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 19:36:35 $DECK_ADD_TO_BOTTOM:  

 {"deckType":2,"cardId":232} 
 Player 2 19:36:35 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 19:36:35 $FLIP_CARD:  

 {"cardId":229} 
 Player 2 19:36:35 $REGISTER_PASSIVE_ITEM:  

 {"cardId":229} 
 Player 2 19:36:35 $ADD_MONSTER:  

 {"monsterPlaceId":1,"monsterId":229} 
 Player 2 19:36:35 $NEW_MONSTER_ON_PLACE:  

 {"cardId":229,"monsterPlaceId":1} 
 Player 2 19:36:35 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 19:36:35 $FLIP_CARD:  

 {"cardId":235} 
 Player 2 19:36:35 $ADD_MONSTER:  

 {"monsterPlaceId":2,"monsterId":235} 
 Player 2 19:36:35 $NEW_MONSTER_ON_PLACE:  

 {"cardId":235,"monsterPlaceId":2} 
 Player 2 19:36:35 $SET_MONEY:  

 {"playerId":1,"numOfCoins":3} 
 Player 2 19:36:35 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 2 19:36:35 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 19:36:35 $MOVE_CARD:  

 {"moveIndex":1,"cardId":71,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 19:36:36 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":71} 
 Player 2 19:36:36 $FLIP_CARD:  

 {"cardId":71} 
 Player 2 19:36:36 $FLIP_CARD:  

 {"cardId":71} 
 Player 2 19:36:36 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":71} 
 Player 2 19:36:36 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 19:36:36 $MOVE_CARD:  

 {"moveIndex":2,"cardId":135,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 19:36:36 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":135} 
 Player 2 19:36:36 $FLIP_CARD:  

 {"cardId":135} 
 Player 2 19:36:36 $FLIP_CARD:  

 {"cardId":135} 
 Player 2 19:36:36 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":135} 
 Player 2 19:36:36 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 19:36:36 $MOVE_CARD:  

 {"moveIndex":3,"cardId":83,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 19:36:37 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":83} 
 Player 2 19:36:37 $FLIP_CARD:  

 {"cardId":83} 
 Player 2 19:36:37 $FLIP_CARD:  

 {"cardId":83} 
 Player 2 19:36:37 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":83} 
 Player 2 19:36:37 $SET_MONEY:  

 {"playerId":2,"numOfCoins":3} 
 Player 2 19:36:37 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Player 2 19:36:37 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 19:36:37 $MOVE_CARD:  

 {"moveIndex":4,"cardId":72,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 19:36:37 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":72} 
 Player 2 19:36:37 $FLIP_CARD:  

 {"cardId":72} 
 Player 2 19:36:37 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":72} 
 Player 2 19:36:37 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 19:36:37 $MOVE_CARD:  

 {"moveIndex":5,"cardId":68,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 19:36:38 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":68} 
 Player 2 19:36:38 $FLIP_CARD:  

 {"cardId":68} 
 Player 2 19:36:38 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":68} 
 Player 2 19:36:38 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 19:36:38 $MOVE_CARD:  

 {"moveIndex":6,"cardId":95,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 19:36:38 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":95} 
 Player 2 19:36:38 $FLIP_CARD:  

 {"cardId":95} 
 Player 2 19:36:38 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":95} 
 Player 2 19:36:38 $GAME_HAS_STARTED:  
 Player 2 19:36:38 $SET_TURN:  

 {"playerId":2} 
 Player 2 19:36:39 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:36:39 $NEXT_STACK_ID:  
 Player 2 19:36:39 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:36:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 19:36:39 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 
 Player 2 19:36:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 19:36:39 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":1,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 
 Player 2 19:36:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 
 Player 2 19:36:39 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:36:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 19:36:39 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 
 Player 2 19:36:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 
 Player 2 19:36:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 2 19:36:39 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:36:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 2 19:36:39 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:36:39 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:36:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 
 Player 2 19:36:39 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 19:36:39 $MOVE_CARD:  

 {"moveIndex":7,"cardId":106,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 19:36:39 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":106} 
 Player 2 19:36:40 $FLIP_CARD:  

 {"cardId":106} 
 Player 2 19:36:40 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":106} 
 Player 2 19:36:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 19:36:40 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 
 Player 2 19:36:40 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:36:40 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":1,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 
 Player 2 19:36:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 
 Player 2 19:36:40 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:36:40 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 
 Player 2 19:36:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 
 Player 2 19:36:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Player 2 19:36:40 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:36:40 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:36:40 $ACTION_MASSAGE_REMOVE:  

 {"id":7} 
 Player 2 19:36:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Player 2 19:36:40 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:36:40 $ACTION_MASSAGE_REMOVE:  

 {"id":8} 
 Player 2 19:36:40 $ACTION_MASSAGE_REMOVE:  

 {"id":6} 
 Player 2 19:36:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":9,"_text":"Stack Was Emptied "}} 
 Player 2 19:36:40 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:36:40 $UPDATE_ACTIONS:  
 Player 2 19:36:46 $SHOW_DECISION:  

 {"startCardId":106,"endCardId":106,"flipEndCard":true} 
 Player 2 19:36:49 $NEXT_STACK_ID:  
 Player 2 19:36:49 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:36:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Guppys Hairball "} 
 Player 2 19:36:49 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":106,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 2 19:36:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Guppys Hairball "} 
 Player 2 19:36:49 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":2,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":106,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 2 19:36:49 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":10,"_text":"Add PlayLootCardStackEffect 2 "}} 
 Player 2 19:36:49 $PLAYER_LOSE_LOOT:  

 {"playerId":2,"cardId":106} 
 Player 2 19:36:49 $MOVE_CARD:  

 {"moveIndex":8,"cardId":106,"placeID":300,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 19:36:50 $MOVE_CARD_TO_PILE:  

 {"type":7,"cardId":106} 
 Player 2 19:36:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Guppys Hairball: AddTrinket"} 
 Player 2 19:36:50 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:36:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Guppys Hairball: AddTrinket"} 
 Player 2 19:36:50 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":106,"lootPlayerId":2,"effectToDo":{"effectName":"AddTrinket","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 19:36:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":11,"_text":"Response Adding PlayLootCardStackEffect 2"},"childOfId":10} 
 Player 2 19:36:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 
 Player 2 19:36:50 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:36:50 $ACTION_MASSAGE_REMOVE:  

 {"id":12} 
 Player 2 19:36:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 
 Player 2 19:36:50 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:36:50 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:36:51 $ACTION_MASSAGE_REMOVE:  

 {"id":13} 
 Player 2 19:36:51 $ACTION_MASSAGE_REMOVE:  

 {"id":11} 
 Player 2 19:36:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":14,"_text":"Resolve PlayLootCardStackEffect 2 "}} 
 Player 2 19:36:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Guppys Hairball: AddTrinket"} 
 Player 2 19:36:51 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":106,"particleType":6} 
 Player 2 19:36:53 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":106,"particleType":6} 
 Player 2 19:36:53 $CARD_ADD_TRINKET:  

 {"cardId":106,"playerId":2,"addMuiliEffect":true} 
 Player 2 19:36:53 $REMOVE_FROM_PILE:  

 {"cardId":106} 
 Player 2 19:36:53 $REGISTER_PASSIVE_ITEM:  

 {"cardId":106} 
 Player 2 19:36:53 $MOVE_CARD:  

 {"moveIndex":9,"cardId":106,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 
 Player 2 19:36:53 $ADD_AN_ITEM:  

 {"playerId":2,"cardId":106,"isReward":true} 
 Player 2 19:36:53 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":106}],"result":true,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 
 Player 2 19:36:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Guppys Hairball: AddTrinket"} 
 Player 2 19:36:53 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":106,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 19:36:53 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:36:53 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":2,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":106,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 19:36:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":15,"_text":"Remove After Resolve PlayLootCardStackEffect 2  "}} 
 Player 2 19:36:53 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:36:53 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":106,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 19:36:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":16,"_text":"Response Remove After Resolve PlayLootCardStackEffect 2"},"childOfId":15} 
 Player 2 19:36:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 
 Player 2 19:36:53 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:36:53 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:36:54 $ACTION_MASSAGE_REMOVE:  

 {"id":17} 
 Player 2 19:36:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 
 Player 2 19:36:54 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:36:54 $ACTION_MASSAGE_REMOVE:  

 {"id":18} 
 Player 2 19:36:54 $ACTION_MASSAGE_REMOVE:  

 {"id":16} 
 Player 2 19:36:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":19,"_text":"Stack Was Emptied "}} 
 Player 2 19:36:54 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:37:02 $SHOW_DECISION:  

 {"startCardId":290,"endCardId":235} 
 Player 2 19:37:05 $NEXT_STACK_ID:  
 Player 2 19:37:05 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:37:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Clotty"} 
 Player 2 19:37:05 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":235,"stackEffectType":4}} 
 Player 2 19:37:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Clotty"} 
 Player 2 19:37:05 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":235,"stackEffectType":4}} 
 Player 2 19:37:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":20,"_text":"Add DeclareAttack 3 "}} 
 Player 2 19:37:05 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:37:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Clotty"} 
 Player 2 19:37:05 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":235,"stackEffectType":4}} 
 Player 2 19:37:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":21,"_text":"Response Adding DeclareAttack 3"},"childOfId":20} 
 Player 2 19:37:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 
 Player 2 19:37:05 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:37:05 $ACTION_MASSAGE_REMOVE:  

 {"id":22} 
 Player 2 19:37:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 
 Player 2 19:37:05 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:37:05 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:37:05 $ACTION_MASSAGE_REMOVE:  

 {"id":23} 
 Player 2 19:37:05 $ACTION_MASSAGE_REMOVE:  

 {"id":21} 
 Player 2 19:37:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":24,"_text":"Resolve DeclareAttack 3 "}} 
 Player 2 19:37:05 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":235,"particleType":5} 
 Player 2 19:37:05 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":5,"originStackId":3},"isAfterActivation":true,"index":5} 
 Player 2 19:37:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Clotty"} 
 Player 2 19:37:05 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":235,"stackEffectType":4}} 
 Player 2 19:37:05 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:37:05 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":235,"stackEffectType":4}} 
 Player 2 19:37:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":25,"_text":"Remove After Resolve DeclareAttack 3  "}} 
 Player 2 19:37:05 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:37:05 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":235,"stackEffectType":4}} 
 Player 2 19:37:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":26,"_text":"Response Remove After Resolve DeclareAttack 3"},"childOfId":25} 
 Player 2 19:37:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":27,"_text":"Wait For Response From Player 1 "},"childOfId":25} 
 Player 2 19:37:06 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:37:06 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:37:06 $ACTION_MASSAGE_REMOVE:  

 {"id":27} 
 Player 2 19:37:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":25} 
 Player 2 19:37:06 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:37:06 $ACTION_MASSAGE_REMOVE:  

 {"id":28} 
 Player 2 19:37:06 $ACTION_MASSAGE_REMOVE:  

 {"id":26} 
 Player 2 19:37:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":29,"_text":"Stack Was Emptied "}} 
 Player 2 19:37:06 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:37:14 $NEXT_STACK_ID:  
 Player 2 19:37:14 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:37:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Clotty<Monster>"} 
 Player 2 19:37:14 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":4,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":235}} 
 Player 2 19:37:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Clotty<Monster>"} 
 Player 2 19:37:14 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":4,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":235}} 
 Player 2 19:37:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":30,"_text":"Add AttackRoll 4 "}} 
 Player 2 19:37:14 $ROLL_DICE:  

 {"playerId":2} 
 Player 2 19:37:15 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":4} 
 Player 2 19:37:16 $UPDATE_STACK_VIS:  

 {"stackId":4,"text":"player rolled 4 vs Clotty<Monster>"} 
 Player 2 19:37:16 $SHOW_DICE_ROLL:  

 {"stackId":4} 
 Player 2 19:37:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 4 vs Clotty<Monster>"} 
 Player 2 19:37:19 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:37:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 4 vs Clotty<Monster>"} 
 Player 2 19:37:19 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":4,"creatorCardId":290,"numberRolled":4,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":235}} 
 Player 2 19:37:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":31,"_text":"Response Adding AttackRoll 4"},"childOfId":30} 
 Player 2 19:37:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":32,"_text":"Wait For Response From Player 2 "},"childOfId":30} 
 Player 2 19:37:19 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:37:19 $ACTION_MASSAGE_REMOVE:  

 {"id":32} 
 Player 2 19:37:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":30} 
 Player 2 19:37:19 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:37:19 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:37:19 $ACTION_MASSAGE_REMOVE:  

 {"id":33} 
 Player 2 19:37:19 $ACTION_MASSAGE_REMOVE:  

 {"id":31} 
 Player 2 19:37:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":34,"_text":"Resolve AttackRoll 4 "}} 
 Player 2 19:37:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":35,"_text":"Added 0 to original roll"}} 
 Player 2 19:37:19 $NEXT_STACK_ID:  
 Player 2 19:37:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 4 vs Clotty<Monster>"} 
 Player 2 19:37:19 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:37:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Clotty \n2:Player 2 rolled 4 vs Clotty<Monster>"} 
 Player 2 19:37:19 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":5,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":235,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 19:37:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Clotty \n2:Player 2 rolled 4 vs Clotty<Monster>"} 
 Player 2 19:37:19 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":4,"creatorCardId":290,"numberRolled":4,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":235}} 
 Player 2 19:37:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Clotty \n2:Player 2 rolled 4 vs Clotty<Monster>"} 
 Player 2 19:37:19 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":5,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":235,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 19:37:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Clotty \n2:Player 2 rolled 4 vs Clotty<Monster>"} 
 Player 2 19:37:19 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":4,"creatorCardId":290,"numberRolled":4,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":235}} 
 Player 2 19:37:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Clotty \n2:Player 2 rolled 4 vs Clotty<Monster>"} 
 Player 2 19:37:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Clotty \n2:Player 2 rolled 4 vs Clotty<Monster>"} 
 Player 2 19:37:19 $REPLACE_STACK:  

 {"currentStack":[{"entityId":5,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":235,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":4,"creatorCardId":290,"numberRolled":4,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":235}]} 
 Player 2 19:37:19 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":6,"originStackId":4},"isAfterActivation":true,"index":6} 
 Player 2 19:37:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Clotty \n2:Player 2 rolled 4 vs Clotty<Monster>"} 
 Player 2 19:37:20 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":4,"creatorCardId":290,"numberRolled":4,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":235}} 
 Player 2 19:37:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Clotty"} 
 Player 2 19:37:20 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":4,"creatorCardId":290,"numberRolled":4,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":235}} 
 Player 2 19:37:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":36,"_text":"Remove After Resolve AttackRoll 4  "}} 
 Player 2 19:37:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Clotty"} 
 Player 2 19:37:20 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":4,"creatorCardId":290,"numberRolled":4,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":235}} 
 Player 2 19:37:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":37,"_text":"Response Remove After Resolve AttackRoll 4"},"childOfId":36} 
 Player 2 19:37:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":38,"_text":"Wait For Response From Player 2 "},"childOfId":36} 
 Player 2 19:37:20 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:37:20 $ACTION_MASSAGE_REMOVE:  

 {"id":38} 
 Player 2 19:37:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":39,"_text":"Wait For Response From Player 1 "},"childOfId":36} 
 Player 2 19:37:20 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:37:20 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:37:20 $ACTION_MASSAGE_REMOVE:  

 {"id":39} 
 Player 2 19:37:20 $ACTION_MASSAGE_REMOVE:  

 {"id":37} 
 Player 2 19:37:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":40,"_text":"Resolve CombatDamage 5 "}} 
 Player 2 19:37:20 $UPDATE_STACK_VIS:  

 {"stackId":5,"text":"Isaac will deal 1 combat damage to Clotty"} 
 Player 2 19:37:20 $MONSTER_GET_DAMAGED:  

 {"cardId":235,"hpLeft":1,"damageDealerId":290} 
 Player 2 19:37:20 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":290}],"result":null,"preventMethod":false,"methodScopeId":235,"scopeIsPlayer":false,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 
 Player 2 19:37:20 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":4},{"type":0,"number":290},{"type":0,"number":235}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":8,"originStackId":5},"isAfterActivation":true,"index":8} 
 Player 2 19:37:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Clotty"} 
 Player 2 19:37:20 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":5,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":235,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 19:37:21 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:37:21 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":5,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":235,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 19:37:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":41,"_text":"Remove After Resolve CombatDamage 5  "}} 
 Player 2 19:37:21 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:37:21 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":5,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":235,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 19:37:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":42,"_text":"Response Remove After Resolve CombatDamage 5"},"childOfId":41} 
 Player 2 19:37:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":43,"_text":"Wait For Response From Player 1 "},"childOfId":41} 
 Player 2 19:37:21 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:37:21 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:37:21 $ACTION_MASSAGE_REMOVE:  

 {"id":43} 
 Player 2 19:37:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":44,"_text":"Wait For Response From Player 2 "},"childOfId":41} 
 Player 2 19:37:21 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:37:21 $ACTION_MASSAGE_REMOVE:  

 {"id":44} 
 Player 2 19:37:21 $ACTION_MASSAGE_REMOVE:  

 {"id":42} 
 Player 2 19:37:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":45,"_text":"Stack Was Emptied "}} 
 Player 2 19:37:21 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:37:23 $NEXT_STACK_ID:  
 Player 2 19:37:23 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:37:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Clotty<Monster>"} 
 Player 2 19:37:24 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":6,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":235}} 
 Player 2 19:37:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Clotty<Monster>"} 
 Player 2 19:37:24 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":6,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":235}} 
 Player 2 19:37:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":46,"_text":"Add AttackRoll 6 "}} 
 Player 2 19:37:24 $ROLL_DICE:  

 {"playerId":2} 
 Player 2 19:37:25 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":3} 
 Player 2 19:37:25 $UPDATE_STACK_VIS:  

 {"stackId":6,"text":"player rolled 3 vs Clotty<Monster>"} 
 Player 2 19:37:25 $SHOW_DICE_ROLL:  

 {"stackId":6} 
 Player 2 19:37:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 3 vs Clotty<Monster>"} 
 Player 2 19:37:28 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:37:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 3 vs Clotty<Monster>"} 
 Player 2 19:37:28 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":6,"creatorCardId":290,"numberRolled":3,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":235}} 
 Player 2 19:37:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":47,"_text":"Response Adding AttackRoll 6"},"childOfId":46} 
 Player 2 19:37:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":48,"_text":"Wait For Response From Player 2 "},"childOfId":46} 
 Player 2 19:37:28 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:37:28 $ACTION_MASSAGE_REMOVE:  

 {"id":48} 
 Player 2 19:37:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":49,"_text":"Wait For Response From Player 1 "},"childOfId":46} 
 Player 2 19:37:28 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:37:28 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:37:28 $ACTION_MASSAGE_REMOVE:  

 {"id":49} 
 Player 2 19:37:28 $ACTION_MASSAGE_REMOVE:  

 {"id":47} 
 Player 2 19:37:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":50,"_text":"Resolve AttackRoll 6 "}} 
 Player 2 19:37:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":51,"_text":"Added 0 to original roll"}} 
 Player 2 19:37:28 $NEXT_STACK_ID:  
 Player 2 19:37:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 3 vs Clotty<Monster>"} 
 Player 2 19:37:28 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:37:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Clotty \n2:Player 2 rolled 3 vs Clotty<Monster>"} 
 Player 2 19:37:28 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":7,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":235,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 19:37:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Clotty \n2:Player 2 rolled 3 vs Clotty<Monster>"} 
 Player 2 19:37:28 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":6,"creatorCardId":290,"numberRolled":3,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":235}} 
 Player 2 19:37:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Clotty \n2:Player 2 rolled 3 vs Clotty<Monster>"} 
 Player 2 19:37:28 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":235,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 19:37:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Clotty \n2:Player 2 rolled 3 vs Clotty<Monster>"} 
 Player 2 19:37:29 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":6,"creatorCardId":290,"numberRolled":3,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":235}} 
 Player 2 19:37:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Clotty \n2:Player 2 rolled 3 vs Clotty<Monster>"} 
 Player 2 19:37:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Clotty \n2:Player 2 rolled 3 vs Clotty<Monster>"} 
 Player 2 19:37:29 $REPLACE_STACK:  

 {"currentStack":[{"entityId":7,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":235,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":6,"creatorCardId":290,"numberRolled":3,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":235}]} 
 Player 2 19:37:29 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":3},{"type":2,"number":1},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":9,"originStackId":6},"isAfterActivation":true,"index":9} 
 Player 2 19:37:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Clotty \n2:Player 2 rolled 3 vs Clotty<Monster>"} 
 Player 2 19:37:29 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":6,"creatorCardId":290,"numberRolled":3,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":235}} 
 Player 2 19:37:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Clotty"} 
 Player 2 19:37:29 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":6,"creatorCardId":290,"numberRolled":3,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":235}} 
 Player 2 19:37:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":52,"_text":"Remove After Resolve AttackRoll 6  "}} 
 Player 2 19:37:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Clotty"} 
 Player 2 19:37:29 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":6,"creatorCardId":290,"numberRolled":3,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":235}} 
 Player 2 19:37:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":53,"_text":"Response Remove After Resolve AttackRoll 6"},"childOfId":52} 
 Player 2 19:37:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":54,"_text":"Wait For Response From Player 2 "},"childOfId":52} 
 Player 2 19:37:29 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:37:29 $ACTION_MASSAGE_REMOVE:  

 {"id":54} 
 Player 2 19:37:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":55,"_text":"Wait For Response From Player 1 "},"childOfId":52} 
 Player 2 19:37:29 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:37:29 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:37:29 $ACTION_MASSAGE_REMOVE:  

 {"id":55} 
 Player 2 19:37:29 $ACTION_MASSAGE_REMOVE:  

 {"id":53} 
 Player 2 19:37:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":56,"_text":"Resolve CombatDamage 7 "}} 
 Player 2 19:37:30 $UPDATE_STACK_VIS:  

 {"stackId":7,"text":"Isaac will deal 1 combat damage to Clotty"} 
 Player 2 19:37:30 $MONSTER_GET_DAMAGED:  

 {"cardId":235,"hpLeft":0,"damageDealerId":290} 
 Player 2 19:37:30 $NEXT_STACK_ID:  
 Player 2 19:37:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Clotty"} 
 Player 2 19:37:30 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:37:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Clotty \n2:[object Object] killed by Isaac"} 
 Player 2 19:37:30 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":8,"creatorCardId":290,"monsterToDieCardId":235,"stackEffectType":5,"killerId":290}} 
 Player 2 19:37:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Clotty \n2:[object Object] killed by Isaac"} 
 Player 2 19:37:30 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":235,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 19:37:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Clotty \n2:[object Object] killed by Isaac"} 
 Player 2 19:37:30 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":235,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 19:37:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Clotty \n2:[object Object] killed by Isaac"} 
 Player 2 19:37:30 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":8,"creatorCardId":290,"monsterToDieCardId":235,"stackEffectType":5,"killerId":290}} 
 Player 2 19:37:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Clotty \n2:[object Object] killed by Isaac"} 
 Player 2 19:37:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Clotty \n2:[object Object] killed by Isaac"} 
 Player 2 19:37:30 $REPLACE_STACK:  

 {"currentStack":[{"entityId":7,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":235,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":8,"creatorCardId":290,"monsterToDieCardId":235,"stackEffectType":5,"killerId":290}]} 
 Player 2 19:37:30 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":290}],"result":null,"preventMethod":false,"methodScopeId":235,"scopeIsPlayer":false,"index":10,"originStackId":-1},"isAfterActivation":true,"index":10} 
 Player 2 19:37:30 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":3},{"type":0,"number":290},{"type":0,"number":235}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":11,"originStackId":7},"isAfterActivation":true,"index":11} 
 Player 2 19:37:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Clotty \n2:[object Object] killed by Isaac"} 
 Player 2 19:37:30 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":7,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":235,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 19:37:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Isaac"} 
 Player 2 19:37:30 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":235,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 19:37:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":57,"_text":"Remove After Resolve CombatDamage 7  "}} 
 Player 2 19:37:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Isaac"} 
 Player 2 19:37:30 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":7,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":235,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 19:37:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":58,"_text":"Response Remove After Resolve CombatDamage 7"},"childOfId":57} 
 Player 2 19:37:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":59,"_text":"Wait For Response From Player 2 "},"childOfId":57} 
 Player 2 19:37:30 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:37:30 $ACTION_MASSAGE_REMOVE:  

 {"id":59} 
 Player 2 19:37:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":60,"_text":"Wait For Response From Player 1 "},"childOfId":57} 
 Player 2 19:37:30 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:37:30 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:37:31 $ACTION_MASSAGE_REMOVE:  

 {"id":60} 
 Player 2 19:37:31 $ACTION_MASSAGE_REMOVE:  

 {"id":58} 
 Player 2 19:37:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":61,"_text":"Resolve MonsterDeath 8 "}} 
 Player 2 19:37:31 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":235,"particleType":5} 
 Player 2 19:37:31 $CANCEL_ATTACK:  
 Player 2 19:37:31 $NEXT_STACK_ID:  
 Player 2 19:37:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Isaac"} 
 Player 2 19:37:31 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:37:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Clotty<Monster> reward \n2:[object Object] killed by Isaac"} 
 Player 2 19:37:31 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":9,"creatorCardId":290,"monsterCardWithRewardId":235,"playerCardIdToReward":290,"stackEffectType":7}} 
 Player 2 19:37:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Clotty<Monster> reward \n2:[object Object] killed by Isaac"} 
 Player 2 19:37:31 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":8,"creatorCardId":290,"monsterToDieCardId":235,"stackEffectType":5,"killerId":290}} 
 Player 2 19:37:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Clotty<Monster> reward \n2:[object Object] killed by Isaac"} 
 Player 2 19:37:31 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":9,"creatorCardId":290,"monsterCardWithRewardId":235,"playerCardIdToReward":290,"stackEffectType":7}} 
 Player 2 19:37:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Clotty<Monster> reward \n2:[object Object] killed by Isaac"} 
 Player 2 19:37:31 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":8,"creatorCardId":290,"monsterToDieCardId":235,"stackEffectType":5,"killerId":290}} 
 Player 2 19:37:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Clotty<Monster> reward \n2:[object Object] killed by Isaac"} 
 Player 2 19:37:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Clotty<Monster> reward \n2:[object Object] killed by Isaac"} 
 Player 2 19:37:31 $REPLACE_STACK:  

 {"currentStack":[{"entityId":9,"creatorCardId":290,"monsterCardWithRewardId":235,"playerCardIdToReward":290,"stackEffectType":7},{"entityId":8,"creatorCardId":290,"monsterToDieCardId":235,"stackEffectType":5,"killerId":290}]} 
 Player 2 19:37:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Clotty<Monster> reward \n2:[object Object] killed by Isaac"} 
 Player 2 19:37:31 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":8,"creatorCardId":290,"monsterToDieCardId":235,"stackEffectType":5,"killerId":290}} 
 Player 2 19:37:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Clotty<Monster> reward"} 
 Player 2 19:37:31 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":8,"creatorCardId":290,"monsterToDieCardId":235,"stackEffectType":5,"killerId":290}} 
 Player 2 19:37:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":62,"_text":"Remove After Resolve MonsterDeath 8  "}} 
 Player 2 19:37:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Clotty<Monster> reward"} 
 Player 2 19:37:32 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":8,"creatorCardId":290,"monsterToDieCardId":235,"stackEffectType":5,"killerId":290}} 
 Player 2 19:37:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":63,"_text":"Response Remove After Resolve MonsterDeath 8"},"childOfId":62} 
 Player 2 19:37:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":64,"_text":"Wait For Response From Player 2 "},"childOfId":62} 
 Player 2 19:37:32 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:37:32 $ACTION_MASSAGE_REMOVE:  

 {"id":64} 
 Player 2 19:37:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":65,"_text":"Wait For Response From Player 1 "},"childOfId":62} 
 Player 2 19:37:32 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:37:32 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:37:32 $ACTION_MASSAGE_REMOVE:  

 {"id":65} 
 Player 2 19:37:32 $ACTION_MASSAGE_REMOVE:  

 {"id":63} 
 Player 2 19:37:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":66,"_text":"Resolve MonsterRewardStackEffect 9 "}} 
 Player 2 19:37:32 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":235,"scopeIsPlayer":false,"index":12,"originStackId":9},"isAfterActivation":true,"index":12} 
 Player 2 19:37:32 $SET_MONEY:  

 {"playerId":2,"numOfCoins":7} 
 Player 2 19:37:32 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":13,"originStackId":-1},"isAfterActivation":true,"index":13} 
 Player 2 19:37:32 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:37:32 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:37:32 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":9,"creatorCardId":290,"monsterCardWithRewardId":235,"playerCardIdToReward":290,"stackEffectType":7}} 
 Player 2 19:37:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":67,"_text":"Fizzle MonsterRewardStackEffect 9"}} 
 Player 2 19:37:32 $FIZZLE_STACK_EFFECT:  

 {"entityId":9} 
 Player 2 19:37:32 $MOVE_CARD:  

 {"moveIndex":10,"cardId":235,"placeID":303,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 19:37:33 $MOVE_CARD_TO_PILE:  

 {"type":2,"cardId":235} 
 Player 2 19:37:33 $REMOVE_MONSTER:  

 {"holderId":2,"monsterId":235} 
 Player 2 19:37:33 $NEXT_STACK_ID:  
 Player 2 19:37:33 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:37:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot"} 
 Player 2 19:37:33 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":10,"creatorCardId":290,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 
 Player 2 19:37:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot"} 
 Player 2 19:37:33 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":10,"creatorCardId":290,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 
 Player 2 19:37:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":68,"_text":"Add RefillEmptySlot 10 "}} 
 Player 2 19:37:33 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:37:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot"} 
 Player 2 19:37:33 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":10,"creatorCardId":290,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 
 Player 2 19:37:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":69,"_text":"Response Adding RefillEmptySlot 10"},"childOfId":68} 
 Player 2 19:37:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":70,"_text":"Wait For Response From Player 2 "},"childOfId":68} 
 Player 2 19:37:33 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:37:33 $ACTION_MASSAGE_REMOVE:  

 {"id":70} 
 Player 2 19:37:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":71,"_text":"Wait For Response From Player 1 "},"childOfId":68} 
 Player 2 19:37:33 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:37:33 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:37:34 $ACTION_MASSAGE_REMOVE:  

 {"id":71} 
 Player 2 19:37:34 $ACTION_MASSAGE_REMOVE:  

 {"id":69} 
 Player 2 19:37:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":72,"_text":"Resolve RefillEmptySlot 10 "}} 
 Player 2 19:37:34 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 19:37:34 $FLIP_CARD:  

 {"cardId":279} 
 Player 2 19:37:34 $REGISTER_PASSIVE_ITEM:  

 {"cardId":279} 
 Player 2 19:37:34 $ADD_MONSTER:  

 {"monsterPlaceId":2,"monsterId":279} 
 Player 2 19:37:34 $NEW_MONSTER_ON_PLACE:  

 {"cardId":279,"monsterPlaceId":2} 
 Player 2 19:37:34 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:37:34 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":10,"creatorCardId":290,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 
 Player 2 19:37:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":73,"_text":"Remove After Resolve RefillEmptySlot 10  "}} 
 Player 2 19:37:34 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:37:34 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":10,"creatorCardId":290,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 
 Player 2 19:37:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":74,"_text":"Response Remove After Resolve RefillEmptySlot 10"},"childOfId":73} 
 Player 2 19:37:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":75,"_text":"Wait For Response From Player 1 "},"childOfId":73} 
 Player 2 19:37:34 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:37:34 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:37:34 $ACTION_MASSAGE_REMOVE:  

 {"id":75} 
 Player 2 19:37:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":76,"_text":"Wait For Response From Player 2 "},"childOfId":73} 
 Player 2 19:37:34 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:37:34 $ACTION_MASSAGE_REMOVE:  

 {"id":76} 
 Player 2 19:37:34 $ACTION_MASSAGE_REMOVE:  

 {"id":74} 
 Player 2 19:37:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":77,"_text":"Stack Was Emptied "}} 
 Player 2 19:37:35 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:37:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":78,"_text":"Stack Was Emptied "}} 
 Player 2 19:37:35 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:37:39 $SHOW_DECISION:  

 {"startCardId":290,"endCardId":290} 
 Player 2 19:37:42 $NEXT_STACK_ID:  
 Player 2 19:37:42 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:37:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Isaac"} 
 Player 2 19:37:42 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":11,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 19:37:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Isaac"} 
 Player 2 19:37:42 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":11,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 19:37:42 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":79,"_text":"Add ActivateItem 11 "}} 
 Player 2 19:37:46 $SHOW_DECISION:  

 {"startCardId":290,"endCardId":72,"flipEndCard":true} 
 Player 2 19:37:49 $USE_ITEM:  

 {"cardId":290} 
 Player 2 19:37:49 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:37:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Isaac"} 
 Player 2 19:37:49 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":11,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 19:37:49 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":80,"_text":"Response Adding ActivateItem 11"},"childOfId":79} 
 Player 2 19:37:49 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":81,"_text":"Wait For Response From Player 2 "},"childOfId":79} 
 Player 2 19:37:49 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:37:49 $ACTION_MASSAGE_REMOVE:  

 {"id":81} 
 Player 2 19:37:49 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":82,"_text":"Wait For Response From Player 1 "},"childOfId":79} 
 Player 2 19:37:49 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:37:49 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:37:49 $ACTION_MASSAGE_REMOVE:  

 {"id":82} 
 Player 2 19:37:49 $ACTION_MASSAGE_REMOVE:  

 {"id":80} 
 Player 2 19:37:49 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":83,"_text":"Resolve ActivateItem 11 "}} 
 Player 2 19:37:49 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":290,"particleType":6} 
 Player 2 19:37:51 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":290,"particleType":6} 
 Player 2 19:37:51 $NEXT_STACK_ID:  
 Player 2 19:37:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Isaac"} 
 Player 2 19:37:51 $PLAYER_LOSE_LOOT:  

 {"playerId":2,"cardId":72} 
 Player 2 19:37:51 $MOVE_CARD:  

 {"moveIndex":11,"cardId":72,"placeID":300,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 19:37:52 $MOVE_CARD_TO_PILE:  

 {"type":7,"cardId":72} 
 Player 2 19:37:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 4 Cents(12): addMoney \n2:Player 2 activated Isaac"} 
 Player 2 19:37:52 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:37:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 4 Cents(12): addMoney \n2:Player 2 activated Isaac"} 
 Player 2 19:37:52 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":12,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":72,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":72,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 19:37:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 4 Cents(12): addMoney \n2:Player 2 activated Isaac"} 
 Player 2 19:37:52 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":11,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 19:37:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 4 Cents(12): addMoney \n2:Player 2 activated Isaac"} 
 Player 2 19:37:52 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":12,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":72,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":72,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 19:37:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 4 Cents(12): addMoney \n2:Player 2 activated Isaac"} 
 Player 2 19:37:52 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":11,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 19:37:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 4 Cents(12): addMoney \n2:Player 2 activated Isaac"} 
 Player 2 19:37:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 4 Cents(12): addMoney \n2:Player 2 activated Isaac"} 
 Player 2 19:37:52 $REPLACE_STACK:  

 {"currentStack":[{"entityId":12,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":72,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":72,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":11,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 
 Player 2 19:37:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 4 Cents(12): addMoney \n2:Player 2 activated Isaac"} 
 Player 2 19:37:52 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":11,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 19:37:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 4 Cents(12): addMoney"} 
 Player 2 19:37:52 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":11,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 19:37:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":84,"_text":"Remove After Resolve ActivateItem 11  "}} 
 Player 2 19:37:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 4 Cents(12): addMoney"} 
 Player 2 19:37:52 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":11,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 19:37:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":85,"_text":"Response Remove After Resolve ActivateItem 11"},"childOfId":84} 
 Player 2 19:37:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":86,"_text":"Wait For Response From Player 2 "},"childOfId":84} 
 Player 2 19:37:52 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:37:52 $ACTION_MASSAGE_REMOVE:  

 {"id":86} 
 Player 2 19:37:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":87,"_text":"Wait For Response From Player 1 "},"childOfId":84} 
 Player 2 19:37:53 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:37:53 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:37:53 $ACTION_MASSAGE_REMOVE:  

 {"id":87} 
 Player 2 19:37:53 $ACTION_MASSAGE_REMOVE:  

 {"id":85} 
 Player 2 19:37:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":88,"_text":"Resolve PlayLootCardStackEffect 12 "}} 
 Player 2 19:37:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 4 Cents(12): addMoney"} 
 Player 2 19:37:53 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":72,"particleType":6} 
 Player 2 19:37:55 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":72,"particleType":6} 
 Player 2 19:37:55 $SET_MONEY:  

 {"playerId":2,"numOfCoins":11} 
 Player 2 19:37:55 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":14,"originStackId":-1},"isAfterActivation":true,"index":14} 
 Player 2 19:37:55 $REMOVE_FROM_PILE:  

 {"cardId":72} 
 Player 2 19:37:55 $MOVE_CARD:  

 {"moveIndex":12,"cardId":72,"placeID":301,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 19:37:56 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":72} 
 Player 2 19:37:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 4 Cents(12): addMoney"} 
 Player 2 19:37:56 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":12,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":72,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 19:37:56 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:37:56 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":12,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":72,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 19:37:56 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":89,"_text":"Remove After Resolve PlayLootCardStackEffect 12  "}} 
 Player 2 19:37:56 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:37:56 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":12,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":72,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 19:37:56 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":90,"_text":"Response Remove After Resolve PlayLootCardStackEffect 12"},"childOfId":89} 
 Player 2 19:37:56 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":91,"_text":"Wait For Response From Player 1 "},"childOfId":89} 
 Player 2 19:37:56 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:37:56 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:37:56 $ACTION_MASSAGE_REMOVE:  

 {"id":91} 
 Player 2 19:37:56 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":92,"_text":"Wait For Response From Player 2 "},"childOfId":89} 
 Player 2 19:37:56 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:37:56 $ACTION_MASSAGE_REMOVE:  

 {"id":92} 
 Player 2 19:37:56 $ACTION_MASSAGE_REMOVE:  

 {"id":90} 
 Player 2 19:37:56 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":93,"_text":"Stack Was Emptied "}} 
 Player 2 19:37:56 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:38:08 $SHOW_DECISION:  

 {"startCardId":290,"endCardId":181} 
 Player 2 19:38:11 $NEXT_STACK_ID:  
 Player 2 19:38:11 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:38:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Ipecac for 10"} 
 Player 2 19:38:11 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":13,"creatorCardId":290,"itemToPurchaseCardId":181,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 
 Player 2 19:38:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Ipecac for 10"} 
 Player 2 19:38:11 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":13,"creatorCardId":290,"itemToPurchaseCardId":181,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 
 Player 2 19:38:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":94,"_text":"Add PurchaseItem 13 "}} 
 Player 2 19:38:11 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:38:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Ipecac for 10"} 
 Player 2 19:38:11 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":13,"creatorCardId":290,"itemToPurchaseCardId":181,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 
 Player 2 19:38:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":95,"_text":"Response Adding PurchaseItem 13"},"childOfId":94} 
 Player 2 19:38:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":96,"_text":"Wait For Response From Player 2 "},"childOfId":94} 
 Player 2 19:38:11 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:38:11 $ACTION_MASSAGE_REMOVE:  

 {"id":96} 
 Player 2 19:38:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":97,"_text":"Wait For Response From Player 1 "},"childOfId":94} 
 Player 2 19:38:11 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:38:11 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:38:12 $ACTION_MASSAGE_REMOVE:  

 {"id":97} 
 Player 2 19:38:12 $ACTION_MASSAGE_REMOVE:  

 {"id":95} 
 Player 2 19:38:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":98,"_text":"Resolve PurchaseItem 13 "}} 
 Player 2 19:38:12 $SET_MONEY:  

 {"playerId":2,"numOfCoins":1} 
 Player 2 19:38:12 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-10}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":15,"originStackId":-1},"isAfterActivation":true,"index":15} 
 Player 2 19:38:12 $REMOVE_ITEM_FROM_SHOP:  

 {"cardId":181} 
 Player 2 19:38:12 $NEXT_STACK_ID:  
 Player 2 19:38:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Ipecac for 10"} 
 Player 2 19:38:12 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:38:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Ipecac for 10 \n2:Refill Store slot"} 
 Player 2 19:38:12 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":14,"creatorCardId":290,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 
 Player 2 19:38:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Ipecac for 10 \n2:Refill Store slot"} 
 Player 2 19:38:12 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":13,"creatorCardId":290,"itemToPurchaseCardId":181,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 
 Player 2 19:38:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Ipecac for 10 \n2:Refill Store slot"} 
 Player 2 19:38:12 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":13,"creatorCardId":290,"itemToPurchaseCardId":181,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 
 Player 2 19:38:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Ipecac for 10 \n2:Refill Store slot"} 
 Player 2 19:38:12 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":14,"creatorCardId":290,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 
 Player 2 19:38:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Ipecac for 10 \n2:Refill Store slot"} 
 Player 2 19:38:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Ipecac for 10 \n2:Refill Store slot"} 
 Player 2 19:38:12 $REPLACE_STACK:  

 {"currentStack":[{"entityId":13,"creatorCardId":290,"itemToPurchaseCardId":181,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9},{"entityId":14,"creatorCardId":290,"slotType":5,"slotToFillId":0,"stackEffectType":10}]} 
 Player 2 19:38:12 $REGISTER_PASSIVE_ITEM:  

 {"cardId":181} 
 Player 2 19:38:12 $MOVE_CARD:  

 {"moveIndex":13,"cardId":181,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 
 Player 2 19:38:13 $ADD_AN_ITEM:  

 {"playerId":2,"cardId":181,"isReward":false} 
 Player 2 19:38:13 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":181}],"result":true,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":16,"originStackId":-1},"isAfterActivation":true,"index":16} 
 Player 2 19:38:13 $NEXT_STACK_ID:  
 Player 2 19:38:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Ipecac for 10 \n2:Refill Store slot"} 
 Player 2 19:38:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Ipecac for 10 \n2:Refill Store slot \n3:Activate Ipecac effect GainStats<GainStats>"} 
 Player 2 19:38:13 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":15,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":2,"cardId":181,"effctType":0},"isAfterActivation":true,"index":16,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 19:38:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Ipecac for 10 \n2:Refill Store slot \n3:Activate Ipecac effect GainStats<GainStats>"} 
 Player 2 19:38:13 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":15,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":2,"cardId":181,"effctType":0},"isAfterActivation":true,"index":16,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 19:38:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":99,"_text":"Add ActivatePassiveEffect 15 "}} 
 Player 2 19:38:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Ipecac for 10 \n2:Refill Store slot \n3:Activate Ipecac effect GainStats<GainStats>"} 
 Player 2 19:38:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Ipecac for 10 \n2:Refill Store slot \n3:Activate Ipecac effect GainStats<GainStats>"} 
 Player 2 19:38:13 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[290],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":15,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":2,"cardId":181,"effctType":0},"isAfterActivation":true,"index":16,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 19:38:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":100,"_text":"Response Adding ActivatePassiveEffect 15"},"childOfId":99} 
 Player 2 19:38:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":101,"_text":"Wait For Response From Player 2 "},"childOfId":99} 
 Player 2 19:38:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:38:13 $ACTION_MASSAGE_REMOVE:  

 {"id":101} 
 Player 2 19:38:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":102,"_text":"Wait For Response From Player 1 "},"childOfId":99} 
 Player 2 19:38:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:38:13 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:38:13 $ACTION_MASSAGE_REMOVE:  

 {"id":102} 
 Player 2 19:38:13 $ACTION_MASSAGE_REMOVE:  

 {"id":100} 
 Player 2 19:38:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":103,"_text":"Resolve ActivatePassiveEffect 15 "}} 
 Player 2 19:38:13 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":181,"particleType":6} 
 Player 2 19:38:15 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":181,"particleType":6} 
 Player 2 19:38:15 $PLAYER_GAIN_DMG:  

 {"playerId":2,"DMGToGain":1,"isTemp":false} 
 Player 2 19:38:15 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":181}],"result":true,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":16,"originStackId":-1},"isAfterActivation":true,"index":16} 
 Player 2 19:38:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Ipecac for 10 \n2:Refill Store slot \n3:Activate Ipecac effect GainStats<GainStats>"} 
 Player 2 19:38:15 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[290],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":15,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"isAfterActivation":true,"index":16,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 19:38:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Ipecac for 10 \n2:Refill Store slot"} 
 Player 2 19:38:15 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[290],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":15,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"isAfterActivation":true,"index":16,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 19:38:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":104,"_text":"Remove After Resolve ActivatePassiveEffect 15  "}} 
 Player 2 19:38:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Ipecac for 10 \n2:Refill Store slot"} 
 Player 2 19:38:16 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[290],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":15,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"isAfterActivation":true,"index":16,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 19:38:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":105,"_text":"Response Remove After Resolve ActivatePassiveEffect 15"},"childOfId":104} 
 Player 2 19:38:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":106,"_text":"Wait For Response From Player 1 "},"childOfId":104} 
 Player 2 19:38:16 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:38:16 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:38:16 $ACTION_MASSAGE_REMOVE:  

 {"id":106} 
 Player 2 19:38:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":107,"_text":"Wait For Response From Player 2 "},"childOfId":104} 
 Player 2 19:38:16 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:38:16 $ACTION_MASSAGE_REMOVE:  

 {"id":107} 
 Player 2 19:38:16 $ACTION_MASSAGE_REMOVE:  

 {"id":105} 
 Player 2 19:38:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":108,"_text":"Resolve RefillEmptySlot 14 "}} 
 Player 2 19:38:16 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 19:38:16 $FLIP_CARD:  

 {"cardId":165} 
 Player 2 19:38:16 $ADD_STORE_CARD:  

 {"cardId":165} 
 Player 2 19:38:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Ipecac for 10"} 
 Player 2 19:38:16 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":14,"creatorCardId":290,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 
 Player 2 19:38:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":109,"_text":"Remove After Resolve RefillEmptySlot 14  "}} 
 Player 2 19:38:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Ipecac for 10"} 
 Player 2 19:38:16 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":14,"creatorCardId":290,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 
 Player 2 19:38:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":110,"_text":"Response Remove After Resolve RefillEmptySlot 14"},"childOfId":109} 
 Player 2 19:38:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":111,"_text":"Wait For Response From Player 2 "},"childOfId":109} 
 Player 2 19:38:16 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:38:16 $ACTION_MASSAGE_REMOVE:  

 {"id":111} 
 Player 2 19:38:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":112,"_text":"Wait For Response From Player 1 "},"childOfId":109} 
 Player 2 19:38:16 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:38:16 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:38:17 $ACTION_MASSAGE_REMOVE:  

 {"id":112} 
 Player 2 19:38:17 $ACTION_MASSAGE_REMOVE:  

 {"id":110} 
 Player 2 19:38:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":113,"_text":"Resolve PurchaseItem 13 "}} 
 Player 2 19:38:17 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:38:17 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":13,"creatorCardId":290,"itemToPurchaseCardId":181,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 
 Player 2 19:38:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":114,"_text":"Remove After Resolve PurchaseItem 13  "}} 
 Player 2 19:38:17 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:38:17 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":13,"creatorCardId":290,"itemToPurchaseCardId":181,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 
 Player 2 19:38:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":115,"_text":"Response Remove After Resolve PurchaseItem 13"},"childOfId":114} 
 Player 2 19:38:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":116,"_text":"Wait For Response From Player 1 "},"childOfId":114} 
 Player 2 19:38:17 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:38:17 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:38:17 $ACTION_MASSAGE_REMOVE:  

 {"id":116} 
 Player 2 19:38:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":117,"_text":"Wait For Response From Player 2 "},"childOfId":114} 
 Player 2 19:38:17 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:38:17 $ACTION_MASSAGE_REMOVE:  

 {"id":117} 
 Player 2 19:38:18 $ACTION_MASSAGE_REMOVE:  

 {"id":115} 
 Player 2 19:38:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":118,"_text":"Stack Was Emptied "}} 
 Player 2 19:38:18 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:38:19 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:38:19 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:38:19 $REPLACE_STACK:  

 {"currentStack":[]} 
 Player 2 19:38:19 $END_TURN:  
 Player 2 19:38:19 $SET_TURN:  

 {"playerId":1} 
 Player 2 19:38:19 $START_TURN:  

 {"playerId":1} 
 Player 2 19:38:19 $STACK_EMPTIED:  

 {"playerId":1} 
 Player 2 19:38:20 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:38:20 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:38:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 19:38:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 19:38:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 19:38:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 19:38:20 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:38:20 $MOVE_CARD_END:  

 {"moveIndex":14,"cardId":102,"flipIfFlipped":false,"playerId":1} 
 Player 2 19:38:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 19:38:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 19:38:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 19:38:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 19:38:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 19:38:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 19:38:21 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:38:48 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:38:48 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:38:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz "} 
 Player 2 19:38:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz "} 
 Player 2 19:38:48 $MOVE_CARD_END:  

 {"moveIndex":15,"cardId":102,"flipIfFlipped":true,"playerId":1} 
 Player 2 19:38:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz "} 
 Player 2 19:38:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz "} 
 Player 2 19:38:49 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:38:51 $MOVE_CARD_END:  

 {"moveIndex":16,"cardId":229,"flipIfFlipped":true,"playerId":1} 
 Player 2 19:38:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz "} 
 Player 2 19:38:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz "} 
 Player 2 19:38:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot"} 
 Player 2 19:38:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot"} 
 Player 2 19:38:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot"} 
 Player 2 19:38:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot"} 
 Player 2 19:38:52 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:38:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot"} 
 Player 2 19:38:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot"} 
 Player 2 19:38:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor!"} 
 Player 2 19:38:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor!"} 
 Player 2 19:38:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor!"} 
 Player 2 19:38:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor!"} 
 Player 2 19:38:56 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:38:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor!"} 
 Player 2 19:38:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor!"} 
 Player 2 19:38:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder3 slot"} 
 Player 2 19:38:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder3 slot"} 
 Player 2 19:38:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder3 slot"} 
 Player 2 19:38:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder3 slot"} 
 Player 2 19:38:58 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:38:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder3 slot"} 
 Player 2 19:38:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder3 slot"} 
 Player 2 19:38:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder3 slot"} 
 Player 2 19:38:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder3 slot"} 
 Player 2 19:38:59 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:39:00 $MOVE_CARD_END:  

 {"moveIndex":17,"cardId":281,"flipIfFlipped":true,"playerId":1} 
 Player 2 19:39:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor!"} 
 Player 2 19:39:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor!"} 
 Player 2 19:39:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot"} 
 Player 2 19:39:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot"} 
 Player 2 19:39:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot"} 
 Player 2 19:39:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot"} 
 Player 2 19:39:01 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:39:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot"} 
 Player 2 19:39:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot"} 
 Player 2 19:39:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room"} 
 Player 2 19:39:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room"} 
 Player 2 19:39:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room"} 
 Player 2 19:39:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room"} 
 Player 2 19:39:04 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:39:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room"} 
 Player 2 19:39:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room"} 
 Player 2 19:39:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room"} 
 Player 2 19:39:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room"} 
 Player 2 19:39:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Player 1 roll a dice"} 
 Player 2 19:39:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Player 1 roll a dice"} 
 Player 2 19:39:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Player 1 roll a dice"} 
 Player 2 19:39:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Player 1 roll a dice"} 
 Player 2 19:39:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Player 1 roll a dice"} 
 Player 2 19:39:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Player 1 roll a dice"} 
 Player 2 19:39:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Player 1 roll a dice"} 
 Player 2 19:39:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Player 1 roll a dice"} 
 Player 2 19:39:14 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:39:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Player 1 roll a dice"} 
 Player 2 19:39:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Player 1 roll a dice"} 
 Player 2 19:39:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Player 1 roll a dice"} 
 Player 2 19:39:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Player 1 roll a dice"} 
 Player 2 19:39:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Player 1 roll a dice"} 
 Player 2 19:39:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Player 1 roll a dice"} 
 Player 2 19:39:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Player 1 roll a dice"} 
 Player 2 19:39:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Player 1 roll a dice"} 
 Player 2 19:39:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Player 1 roll a dice"} 
 Player 2 19:39:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Player 1 roll a dice"} 
 Player 2 19:39:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Player 1 roll a dice"} 
 Player 2 19:39:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Player 1 roll a dice"} 
 Player 2 19:39:15 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:39:17 $MOVE_CARD_END:  

 {"moveIndex":18,"cardId":93,"flipIfFlipped":false,"playerId":1} 
 Player 2 19:39:18 $MOVE_CARD_END:  

 {"moveIndex":19,"cardId":28,"flipIfFlipped":false,"playerId":1} 
 Player 2 19:39:18 $MOVE_CARD_END:  

 {"moveIndex":20,"cardId":228,"flipIfFlipped":true,"playerId":1} 
 Player 2 19:39:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room"} 
 Player 2 19:39:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room"} 
 Player 2 19:39:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Refill holder1 slot"} 
 Player 2 19:39:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Refill holder1 slot"} 
 Player 2 19:39:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Refill holder1 slot"} 
 Player 2 19:39:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Refill holder1 slot"} 
 Player 2 19:39:19 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:39:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Refill holder1 slot"} 
 Player 2 19:39:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Refill holder1 slot"} 
 Player 2 19:39:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Refill holder1 slot"} 
 Player 2 19:39:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Refill holder1 slot"} 
 Player 2 19:39:20 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:39:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room"} 
 Player 2 19:39:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room"} 
 Player 2 19:39:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room"} 
 Player 2 19:39:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room"} 
 Player 2 19:39:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room"} 
 Player 2 19:39:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room"} 
 Player 2 19:39:21 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:39:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot"} 
 Player 2 19:39:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot"} 
 Player 2 19:39:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot"} 
 Player 2 19:39:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot"} 
 Player 2 19:39:21 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:39:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor!"} 
 Player 2 19:39:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor!"} 
 Player 2 19:39:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor!"} 
 Player 2 19:39:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor!"} 
 Player 2 19:39:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor!"} 
 Player 2 19:39:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor!"} 
 Player 2 19:39:22 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:39:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot"} 
 Player 2 19:39:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot"} 
 Player 2 19:39:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot"} 
 Player 2 19:39:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot"} 
 Player 2 19:39:23 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:39:24 $MOVE_CARD_END:  

 {"moveIndex":21,"cardId":279,"flipIfFlipped":true,"playerId":1} 
 Player 2 19:39:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz "} 
 Player 2 19:39:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz "} 
 Player 2 19:39:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder2 slot"} 
 Player 2 19:39:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder2 slot"} 
 Player 2 19:39:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder2 slot"} 
 Player 2 19:39:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder2 slot"} 
 Player 2 19:39:24 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:39:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder2 slot"} 
 Player 2 19:39:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder2 slot"} 
 Player 2 19:39:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder2 slot"} 
 Player 2 19:39:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder2 slot"} 
 Player 2 19:39:25 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:39:26 $MOVE_CARD_END:  

 {"moveIndex":22,"cardId":243,"flipIfFlipped":true,"playerId":1} 
 Player 2 19:39:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz "} 
 Player 2 19:39:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz "} 
 Player 2 19:39:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot"} 
 Player 2 19:39:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot"} 
 Player 2 19:39:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot"} 
 Player 2 19:39:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot"} 
 Player 2 19:39:27 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:39:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot"} 
 Player 2 19:39:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot"} 
 Player 2 19:39:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2)"} 
 Player 2 19:39:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2)"} 
 Player 2 19:39:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2)"} 
 Player 2 19:39:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2)"} 
 Player 2 19:39:30 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:39:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2)"} 
 Player 2 19:39:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2)"} 
 Player 2 19:39:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2)"} 
 Player 2 19:39:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2)"} 
 Player 2 19:39:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Player 1 roll a dice"} 
 Player 2 19:39:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Player 1 roll a dice"} 
 Player 2 19:39:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Player 1 roll a dice"} 
 Player 2 19:39:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Player 1 roll a dice"} 
 Player 2 19:39:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Player 1 roll a dice"} 
 Player 2 19:39:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Player 1 roll a dice"} 
 Player 2 19:39:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Player 1 roll a dice"} 
 Player 2 19:39:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Player 1 roll a dice"} 
 Player 2 19:39:36 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:39:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Player 1 roll a dice"} 
 Player 2 19:39:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Player 1 roll a dice"} 
 Player 2 19:39:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Player 1 roll a dice"} 
 Player 2 19:39:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Player 1 roll a dice"} 
 Player 2 19:39:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Player 1 roll a dice"} 
 Player 2 19:39:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Player 1 roll a dice"} 
 Player 2 19:39:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Player 1 roll a dice"} 
 Player 2 19:39:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Player 1 roll a dice"} 
 Player 2 19:39:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Player 1 roll a dice"} 
 Player 2 19:39:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Player 1 roll a dice"} 
 Player 2 19:39:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Player 1 roll a dice"} 
 Player 2 19:39:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Player 1 roll a dice"} 
 Player 2 19:39:37 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:39:39 $MOVE_CARD_END:  

 {"moveIndex":23,"cardId":114,"flipIfFlipped":false,"playerId":1} 
 Player 2 19:39:40 $MOVE_CARD_END:  

 {"moveIndex":24,"cardId":82,"flipIfFlipped":false,"playerId":1} 
 Player 2 19:39:41 $MOVE_CARD_END:  

 {"moveIndex":25,"cardId":250,"flipIfFlipped":true,"playerId":1} 
 Player 2 19:39:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2)"} 
 Player 2 19:39:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2)"} 
 Player 2 19:39:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Refill holder3 slot"} 
 Player 2 19:39:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Refill holder3 slot"} 
 Player 2 19:39:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Refill holder3 slot"} 
 Player 2 19:39:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Refill holder3 slot"} 
 Player 2 19:39:41 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:39:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Refill holder3 slot"} 
 Player 2 19:39:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Refill holder3 slot"} 
 Player 2 19:39:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Refill holder3 slot"} 
 Player 2 19:39:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Refill holder3 slot"} 
 Player 2 19:39:42 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:39:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2)"} 
 Player 2 19:39:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2)"} 
 Player 2 19:39:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2)"} 
 Player 2 19:39:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2)"} 
 Player 2 19:39:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2)"} 
 Player 2 19:39:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2)"} 
 Player 2 19:39:43 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:39:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot"} 
 Player 2 19:39:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot"} 
 Player 2 19:39:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot"} 
 Player 2 19:39:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot"} 
 Player 2 19:39:44 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:39:44 $MOVE_CARD_END:  

 {"moveIndex":26,"cardId":102,"flipIfFlipped":true,"playerId":1} 
 Player 2 19:39:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz "} 
 Player 2 19:39:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz "} 
 Player 2 19:39:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz "} 
 Player 2 19:39:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz "} 
 Player 2 19:39:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz "} 
 Player 2 19:39:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Ehwaz "} 
 Player 2 19:39:45 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:40:12 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:40:13 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:40:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 19:40:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 19:40:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 19:40:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 19:40:18 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:40:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 19:40:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 19:40:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 19:40:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 19:40:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 19:40:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 19:40:21 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:40:30 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:40:30 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:40:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Monster Deck"} 
 Player 2 19:40:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Monster Deck"} 
 Player 2 19:40:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Monster Deck"} 
 Player 2 19:40:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Monster Deck"} 
 Player 2 19:40:30 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:40:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Monster Deck"} 
 Player 2 19:40:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Monster Deck"} 
 Player 2 19:40:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Chub"} 
 Player 2 19:40:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Chub"} 
 Player 2 19:40:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Chub"} 
 Player 2 19:40:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Chub"} 
 Player 2 19:40:46 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:40:53 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:40:53 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:40:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Chub<Monster>"} 
 Player 2 19:40:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Chub<Monster>"} 
 Player 2 19:40:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Chub<Monster>"} 
 Player 2 19:40:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Chub<Monster>"} 
 Player 2 19:40:59 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:41:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Chub<Monster>"} 
 Player 2 19:41:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Chub<Monster>"} 
 Player 2 19:41:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Chub combat damage to Samson"} 
 Player 2 19:41:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Chub combat damage to Samson"} 
 Player 2 19:41:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Chub combat damage to Samson"} 
 Player 2 19:41:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Chub combat damage to Samson"} 
 Player 2 19:41:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Chub combat damage to Samson"} 
 Player 2 19:41:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Chub combat damage to Samson"} 
 Player 2 19:41:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Chub combat damage to Samson"} 
 Player 2 19:41:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Chub combat damage to Samson"} 
 Player 2 19:41:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Chub combat damage to Samson"} 
 Player 2 19:41:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Chub combat damage to Samson"} 
 Player 2 19:41:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Chub combat damage to Samson \n2:Player 1 is rolling against Chub<Monster>"} 
 Player 2 19:41:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Chub combat damage to Samson \n2:Player 1 is rolling against Chub<Monster>"} 
 Player 2 19:41:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Chub combat damage to Samson \n2:Player 1 is rolling against Chub<Monster>"} 
 Player 2 19:41:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Chub combat damage to Samson \n2:Player 1 is rolling against Chub<Monster>"} 
 Player 2 19:41:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Chub combat damage to Samson \n2:Player 1 is rolling against Chub<Monster>"} 
 Player 2 19:41:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Chub combat damage to Samson \n2:Player 1 is rolling against Chub<Monster>"} 
 Player 2 19:41:00 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:41:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Chub combat damage to Samson"} 
 Player 2 19:41:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Chub combat damage to Samson"} 
 Player 2 19:41:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Chub combat damage to Samson"} 
 Player 2 19:41:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Chub combat damage to Samson"} 
 Player 2 19:41:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Chub combat damage to Samson"} 
 Player 2 19:41:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Chub combat damage to Samson"} 
 Player 2 19:41:01 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:41:04 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:41:04 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:41:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Chub<Monster>"} 
 Player 2 19:41:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Chub<Monster>"} 
 Player 2 19:41:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Chub<Monster>"} 
 Player 2 19:41:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Chub<Monster>"} 
 Player 2 19:41:13 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":true} 
 Player 2 19:41:13 $SHOW_DECISION:  

 {"startCardId":290,"endCardId":291} 
 Player 2 19:41:16 $NEXT_STACK_ID:  
 Player 2 19:41:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Chub<Monster>"} 
 Player 2 19:41:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Chub<Monster> \n2:Player 2 activated The D6"} 
 Player 2 19:41:16 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":37,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 19:41:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Chub<Monster> \n2:Player 2 activated The D6"} 
 Player 2 19:41:16 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":37,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 19:41:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":299,"_text":"Add ActivateItem 37 "}} 
 Player 2 19:41:16 $USE_ITEM:  

 {"cardId":291} 
 Player 2 19:41:16 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:41:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Chub<Monster> \n2:Player 2 activated The D6"} 
 Player 2 19:41:16 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":37,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 19:41:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":300,"_text":"Response Adding ActivateItem 37"},"childOfId":299} 
 Player 2 19:41:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":301,"_text":"Wait For Response From Player 1 "},"childOfId":299} 
 Player 2 19:41:16 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:41:16 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:41:16 $ACTION_MASSAGE_REMOVE:  

 {"id":301} 
 Player 2 19:41:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":302,"_text":"Wait For Response From Player 2 "},"childOfId":299} 
 Player 2 19:41:16 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:41:16 $ACTION_MASSAGE_REMOVE:  

 {"id":302} 
 Player 2 19:41:17 $ACTION_MASSAGE_REMOVE:  

 {"id":300} 
 Player 2 19:41:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":303,"_text":"Resolve ActivateItem 37 "}} 
 Player 2 19:41:17 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":291,"particleType":6} 
 Player 2 19:41:18 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":291,"particleType":6} 
 Player 2 19:41:18 $ROLL_DICE:  

 {"playerId":1} 
 Player 2 19:41:21 $ROLL_DICE_ENDED:  

 {"playerId":1,"numberRolled":5} 
 Player 2 19:41:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Chub<Monster> \n2:Player 2 activated The D6"} 
 Player 2 19:41:21 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":37,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 19:41:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Chub<Monster>"} 
 Player 2 19:41:21 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":37,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 19:41:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":304,"_text":"Remove After Resolve ActivateItem 37  "}} 
 Player 2 19:41:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Chub<Monster>"} 
 Player 2 19:41:21 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":37,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 19:41:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":305,"_text":"Response Remove After Resolve ActivateItem 37"},"childOfId":304} 
 Player 2 19:41:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":306,"_text":"Wait For Response From Player 2 "},"childOfId":304} 
 Player 2 19:41:21 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:41:21 $ACTION_MASSAGE_REMOVE:  

 {"id":306} 
 Player 2 19:41:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":307,"_text":"Wait For Response From Player 1 "},"childOfId":304} 
 Player 2 19:41:21 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:41:21 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:41:22 $ACTION_MASSAGE_REMOVE:  

 {"id":307} 
 Player 2 19:41:22 $ACTION_MASSAGE_REMOVE:  

 {"id":305} 
 Player 2 19:41:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":308,"_text":"Resolve AttackRoll 36 "}} 
 Player 2 19:41:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Chub<Monster>"} 
 Player 2 19:41:22 $DO_STACK_EFFECT:  

 {"originPlayerId":2,"playerId":1,"currentStack":[{"entityId":36,"creatorCardId":296,"numberRolled":5,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":234}]} 
 Player 2 19:41:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Chub<Monster>"} 
 Player 2 19:41:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Chub<Monster>"} 
 Player 2 19:41:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Chub"} 
 Player 2 19:41:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Chub"} 
 Player 2 19:41:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Chub"} 
 Player 2 19:41:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Chub"} 
 Player 2 19:41:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Chub"} 
 Player 2 19:41:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Chub"} 
 Player 2 19:41:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Chub"} 
 Player 2 19:41:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Chub"} 
 Player 2 19:41:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Chub"} 
 Player 2 19:41:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Chub"} 
 Player 2 19:41:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster>"} 
 Player 2 19:41:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster>"} 
 Player 2 19:41:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Activate Swarm of Flies "} 
 Player 2 19:41:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Activate Swarm of Flies "} 
 Player 2 19:41:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Activate Swarm of Flies "} 
 Player 2 19:41:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Activate Swarm of Flies "} 
 Player 2 19:41:23 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:41:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Activate Swarm of Flies "} 
 Player 2 19:41:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Activate Swarm of Flies "} 
 Player 2 19:41:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Player 1 is about to die"} 
 Player 2 19:41:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Player 1 is about to die"} 
 Player 2 19:41:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Player 1 is about to die"} 
 Player 2 19:41:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Player 1 is about to die"} 
 Player 2 19:41:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Player 1 is about to die"} 
 Player 2 19:41:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Player 1 is about to die"} 
 Player 2 19:41:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Player 1 is about to die"} 
 Player 2 19:41:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Player 1 is about to die"} 
 Player 2 19:41:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Player 1 is about to die"} 
 Player 2 19:41:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Player 1 is about to die"} 
 Player 2 19:41:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Player 1 is about to die"} 
 Player 2 19:41:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Player 1 is about to die"} 
 Player 2 19:41:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Player 1 is about to die"} 
 Player 2 19:41:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Player 1 is about to die"} 
 Player 2 19:41:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Player 1 is about to die"} 
 Player 2 19:41:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Player 1 is about to die"} 
 Player 2 19:41:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Player 1 is about to die"} 
 Player 2 19:41:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Player 1 is about to die"} 
 Player 2 19:41:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Player 1 is about to die"} 
 Player 2 19:41:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Player 1 is about to die"} 
 Player 2 19:41:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Activate Swarm of Flies  \n4:Player 1 is about to die"} 
 Player 2 19:41:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Activate Swarm of Flies  \n4:Player 1 is about to die"} 
 Player 2 19:41:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Activate Swarm of Flies  \n4:Player 1 is about to die"} 
 Player 2 19:41:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Activate Swarm of Flies  \n4:Player 1 is about to die"} 
 Player 2 19:41:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Activate Swarm of Flies  \n4:Player 1 is about to die"} 
 Player 2 19:41:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Activate Swarm of Flies  \n4:Player 1 is about to die"} 
 Player 2 19:41:27 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:41:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Player 1 is about to die"} 
 Player 2 19:41:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Player 1 is about to die"} 
 Player 2 19:41:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Chub<Monster> \n2:Player 1 is about to die"} 
 Player 2 19:41:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Chub<Monster> \n2:Player 1 is about to die"} 
 Player 2 19:41:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 19:41:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 19:41:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 19:41:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 19:41:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 19:41:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 19:41:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 19:41:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 19:41:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 19:41:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 19:41:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 19:41:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 19:41:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 
 Player 2 19:41:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 
 Player 2 19:41:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 
 Player 2 19:41:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 
 Player 2 19:41:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 
 Player 2 19:41:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 
 Player 2 19:41:29 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:42:15 $MOVE_CARD_END:  

 {"moveIndex":27,"cardId":28,"flipIfFlipped":true,"playerId":1} 
 Player 2 19:42:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 19:42:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 19:42:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 19:42:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 19:42:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 19:42:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 19:42:15 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:42:16 $STACK_EMPTIED:  

 {"playerId":1} 
 Player 2 19:42:16 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:42:16 $RECHARGE_ITEM:  

 {"cardId":290} 
 Player 2 19:42:16 $PLAYER_RECHARGE_ITEM:  

 {"playerId":2,"cardId":290} 
 Player 2 19:42:16 $RECHARGE_ITEM:  

 {"cardId":291} 
 Player 2 19:42:16 $PLAYER_RECHARGE_ITEM:  

 {"playerId":2,"cardId":291} 
 Player 2 19:42:16 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:42:16 $NEXT_STACK_ID:  
 Player 2 19:42:16 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:42:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 19:42:16 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":42,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 
 Player 2 19:42:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 19:42:16 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":42,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 
 Player 2 19:42:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":333,"_text":"Add StartTurnLoot 42 "}} 
 Player 2 19:42:16 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:42:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 19:42:16 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":42,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 
 Player 2 19:42:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":334,"_text":"Response Adding StartTurnLoot 42"},"childOfId":333} 
 Player 2 19:42:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":335,"_text":"Wait For Response From Player 2 "},"childOfId":333} 
 Player 2 19:42:16 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:42:16 $ACTION_MASSAGE_REMOVE:  

 {"id":335} 
 Player 2 19:42:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":336,"_text":"Wait For Response From Player 1 "},"childOfId":333} 
 Player 2 19:42:16 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:42:16 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:42:16 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:42:16 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:42:16 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":42,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 
 Player 2 19:42:16 $REPLACE_STACK:  

 {"currentStack":[]} 
 Player 2 19:42:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":337,"_text":"Stack Was Emptied "}} 
 Player 2 19:42:17 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:42:17 $ACTION_MASSAGE_REMOVE:  

 {"id":336} 
 Player 2 19:42:17 $ACTION_MASSAGE_REMOVE:  

 {"id":334} 
 Player 2 19:43:33 $SHOW_DECISION:  

 {"startCardId":68,"endCardId":68,"flipEndCard":true} 
 Player 2 19:43:36 $NEXT_STACK_ID:  
 Player 2 19:43:36 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:43:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 4 Cents(8) "} 
 Player 2 19:43:36 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":43,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":68,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 2 19:43:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 4 Cents(8) "} 
 Player 2 19:43:36 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":43,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":68,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 2 19:43:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":338,"_text":"Add PlayLootCardStackEffect 43 "}} 
 Player 2 19:43:36 $PLAYER_LOSE_LOOT:  

 {"playerId":2,"cardId":68} 
 Player 2 19:43:36 $MOVE_CARD:  

 {"moveIndex":28,"cardId":68,"placeID":300,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 19:43:37 $MOVE_CARD_TO_PILE:  

 {"type":7,"cardId":68} 
 Player 2 19:43:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 4 Cents(8): addMoney"} 
 Player 2 19:43:37 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:43:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 4 Cents(8): addMoney"} 
 Player 2 19:43:37 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":43,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":68,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":68,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 19:43:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":339,"_text":"Response Adding PlayLootCardStackEffect 43"},"childOfId":338} 
 Player 2 19:43:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":340,"_text":"Wait For Response From Player 2 "},"childOfId":338} 
 Player 2 19:43:37 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:43:37 $ACTION_MASSAGE_REMOVE:  

 {"id":340} 
 Player 2 19:43:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":341,"_text":"Wait For Response From Player 1 "},"childOfId":338} 
 Player 2 19:43:37 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:43:37 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:43:37 $ACTION_MASSAGE_REMOVE:  

 {"id":341} 
 Player 2 19:43:37 $ACTION_MASSAGE_REMOVE:  

 {"id":339} 
 Player 2 19:43:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":342,"_text":"Resolve PlayLootCardStackEffect 43 "}} 
 Player 2 19:43:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 4 Cents(8): addMoney"} 
 Player 2 19:43:38 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":68,"particleType":6} 
 Player 2 19:43:39 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":68,"particleType":6} 
 Player 2 19:43:39 $SET_MONEY:  

 {"playerId":2,"numOfCoins":5} 
 Player 2 19:43:39 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":17,"originStackId":-1},"isAfterActivation":true,"index":17} 
 Player 2 19:43:39 $REMOVE_FROM_PILE:  

 {"cardId":68} 
 Player 2 19:43:40 $MOVE_CARD:  

 {"moveIndex":29,"cardId":68,"placeID":301,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 19:43:40 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":68} 
 Player 2 19:43:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 4 Cents(8): addMoney"} 
 Player 2 19:43:40 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":43,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":68,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 19:43:40 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:43:40 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":43,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":68,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 19:43:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":343,"_text":"Remove After Resolve PlayLootCardStackEffect 43  "}} 
 Player 2 19:43:40 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:43:40 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":43,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":68,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 19:43:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":344,"_text":"Response Remove After Resolve PlayLootCardStackEffect 43"},"childOfId":343} 
 Player 2 19:43:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":345,"_text":"Wait For Response From Player 1 "},"childOfId":343} 
 Player 2 19:43:40 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:43:40 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:43:41 $ACTION_MASSAGE_REMOVE:  

 {"id":345} 
 Player 2 19:43:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":346,"_text":"Wait For Response From Player 2 "},"childOfId":343} 
 Player 2 19:43:41 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:43:41 $ACTION_MASSAGE_REMOVE:  

 {"id":346} 
 Player 2 19:43:41 $ACTION_MASSAGE_REMOVE:  

 {"id":344} 
 Player 2 19:43:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":347,"_text":"Stack Was Emptied "}} 
 Player 2 19:43:41 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:43:48 $SHOW_DECISION:  

 {"startCardId":290,"endCardId":227} 
 Player 2 19:43:51 $NEXT_STACK_ID:  
 Player 2 19:43:51 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:43:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck"} 
 Player 2 19:43:51 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":44,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":227,"stackEffectType":4}} 
 Player 2 19:43:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck"} 
 Player 2 19:43:51 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":44,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":227,"stackEffectType":4}} 
 Player 2 19:43:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":348,"_text":"Add DeclareAttack 44 "}} 
 Player 2 19:43:51 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:43:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck"} 
 Player 2 19:43:51 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":44,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":227,"stackEffectType":4}} 
 Player 2 19:43:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":349,"_text":"Response Adding DeclareAttack 44"},"childOfId":348} 
 Player 2 19:43:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":350,"_text":"Wait For Response From Player 2 "},"childOfId":348} 
 Player 2 19:43:51 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:43:51 $ACTION_MASSAGE_REMOVE:  

 {"id":350} 
 Player 2 19:43:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":351,"_text":"Wait For Response From Player 1 "},"childOfId":348} 
 Player 2 19:43:51 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:43:51 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:43:52 $ACTION_MASSAGE_REMOVE:  

 {"id":351} 
 Player 2 19:43:52 $ACTION_MASSAGE_REMOVE:  

 {"id":349} 
 Player 2 19:43:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":352,"_text":"Resolve DeclareAttack 44 "}} 
 Player 2 19:43:52 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 19:43:52 $SHOW_CARD_PREVIEW:  

 {"cardToShowId":258,"playerId":2} 
 Player 2 19:43:57 $FLIP_CARD:  

 {"cardId":258} 
 Player 2 19:43:57 $REGISTER_PASSIVE_ITEM:  

 {"cardId":258} 
 Player 2 19:43:57 $ADD_MONSTER:  

 {"monsterPlaceId":2,"monsterId":258} 
 Player 2 19:43:57 $NEW_MONSTER_ON_PLACE:  

 {"cardId":258,"monsterPlaceId":2} 
 Player 2 19:43:57 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":258,"particleType":5} 
 Player 2 19:43:57 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":18,"originStackId":44},"isAfterActivation":true,"index":18} 
 Player 2 19:43:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck"} 
 Player 2 19:43:57 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":44,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":258,"stackEffectType":4}} 
 Player 2 19:43:57 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:43:57 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":44,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":258,"stackEffectType":4}} 
 Player 2 19:43:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":353,"_text":"Remove After Resolve DeclareAttack 44  "}} 
 Player 2 19:43:57 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:43:57 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":44,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":258,"stackEffectType":4}} 
 Player 2 19:43:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":354,"_text":"Response Remove After Resolve DeclareAttack 44"},"childOfId":353} 
 Player 2 19:43:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":355,"_text":"Wait For Response From Player 1 "},"childOfId":353} 
 Player 2 19:43:57 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:43:57 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:43:57 $ACTION_MASSAGE_REMOVE:  

 {"id":355} 
 Player 2 19:43:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":356,"_text":"Wait For Response From Player 2 "},"childOfId":353} 
 Player 2 19:43:58 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:43:58 $ACTION_MASSAGE_REMOVE:  

 {"id":356} 
 Player 2 19:43:58 $ACTION_MASSAGE_REMOVE:  

 {"id":354} 
 Player 2 19:43:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":357,"_text":"Stack Was Emptied "}} 
 Player 2 19:43:58 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:44:09 $NEXT_STACK_ID:  
 Player 2 19:44:09 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:44:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Lust<Monster>"} 
 Player 2 19:44:09 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":45,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":258}} 
 Player 2 19:44:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Lust<Monster>"} 
 Player 2 19:44:09 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":45,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":258}} 
 Player 2 19:44:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":358,"_text":"Add AttackRoll 45 "}} 
 Player 2 19:44:09 $ROLL_DICE:  

 {"playerId":2} 
 Player 2 19:44:11 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":6} 
 Player 2 19:44:11 $UPDATE_STACK_VIS:  

 {"stackId":45,"text":"player rolled 6 vs Lust<Monster>"} 
 Player 2 19:44:11 $SHOW_DICE_ROLL:  

 {"stackId":45} 
 Player 2 19:44:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Lust<Monster>"} 
 Player 2 19:44:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:44:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Lust<Monster>"} 
 Player 2 19:44:14 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":45,"creatorCardId":290,"numberRolled":6,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":258}} 
 Player 2 19:44:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":359,"_text":"Response Adding AttackRoll 45"},"childOfId":358} 
 Player 2 19:44:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":360,"_text":"Wait For Response From Player 2 "},"childOfId":358} 
 Player 2 19:44:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:44:14 $ACTION_MASSAGE_REMOVE:  

 {"id":360} 
 Player 2 19:44:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":361,"_text":"Wait For Response From Player 1 "},"childOfId":358} 
 Player 2 19:44:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:44:14 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:44:14 $ACTION_MASSAGE_REMOVE:  

 {"id":361} 
 Player 2 19:44:14 $ACTION_MASSAGE_REMOVE:  

 {"id":359} 
 Player 2 19:44:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":362,"_text":"Resolve AttackRoll 45 "}} 
 Player 2 19:44:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":363,"_text":"Added 0 to original roll"}} 
 Player 2 19:44:14 $NEXT_STACK_ID:  
 Player 2 19:44:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Lust<Monster>"} 
 Player 2 19:44:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:44:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Lust \n2:Player 2 rolled 6 vs Lust<Monster>"} 
 Player 2 19:44:14 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":46,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 19:44:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Lust \n2:Player 2 rolled 6 vs Lust<Monster>"} 
 Player 2 19:44:14 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":45,"creatorCardId":290,"numberRolled":6,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":258}} 
 Player 2 19:44:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Lust \n2:Player 2 rolled 6 vs Lust<Monster>"} 
 Player 2 19:44:14 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":46,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 19:44:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Lust \n2:Player 2 rolled 6 vs Lust<Monster>"} 
 Player 2 19:44:15 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":45,"creatorCardId":290,"numberRolled":6,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":258}} 
 Player 2 19:44:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Lust \n2:Player 2 rolled 6 vs Lust<Monster>"} 
 Player 2 19:44:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Lust \n2:Player 2 rolled 6 vs Lust<Monster>"} 
 Player 2 19:44:15 $REPLACE_STACK:  

 {"currentStack":[{"entityId":46,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":45,"creatorCardId":290,"numberRolled":6,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":258}]} 
 Player 2 19:44:15 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":6},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":19,"originStackId":45},"isAfterActivation":true,"index":19} 
 Player 2 19:44:15 $NEXT_STACK_ID:  
 Player 2 19:44:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Lust \n2:Player 2 rolled 6 vs Lust<Monster>"} 
 Player 2 19:44:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Lust \n2:Player 2 rolled 6 vs Lust<Monster> \n3:Activate Ipecac effect DealDamage<DealDamage>"} 
 Player 2 19:44:15 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":47,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"effectToDo":{"effectName":"DealDamage","cardEffectNum":2,"cardPlayerId":2,"cardId":181,"effctType":0},"isAfterActivation":true,"index":19,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 19:44:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Lust \n2:Player 2 rolled 6 vs Lust<Monster> \n3:Activate Ipecac effect DealDamage<DealDamage>"} 
 Player 2 19:44:15 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":47,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"effectToDo":{"effectName":"DealDamage","cardEffectNum":2,"cardPlayerId":2,"cardId":181,"effctType":0},"isAfterActivation":true,"index":19,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 19:44:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":364,"_text":"Add ActivatePassiveEffect 47 "}} 
 Player 2 19:44:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Lust \n2:Player 2 rolled 6 vs Lust<Monster> \n3:Activate Ipecac effect DealDamage<DealDamage>"} 
 Player 2 19:44:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Lust \n2:Player 2 rolled 6 vs Lust<Monster> \n3:Activate Ipecac effect DealDamage<DealDamage>"} 
 Player 2 19:44:15 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":47,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"effectToDo":{"effectName":"DealDamage","cardEffectNum":2,"cardPlayerId":2,"cardId":181,"effctType":0},"isAfterActivation":true,"index":19,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 19:44:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":365,"_text":"Response Adding ActivatePassiveEffect 47"},"childOfId":364} 
 Player 2 19:44:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":366,"_text":"Wait For Response From Player 2 "},"childOfId":364} 
 Player 2 19:44:15 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:44:15 $ACTION_MASSAGE_REMOVE:  

 {"id":366} 
 Player 2 19:44:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":367,"_text":"Wait For Response From Player 1 "},"childOfId":364} 
 Player 2 19:44:15 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:44:15 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:44:15 $ACTION_MASSAGE_REMOVE:  

 {"id":367} 
 Player 2 19:44:16 $ACTION_MASSAGE_REMOVE:  

 {"id":365} 
 Player 2 19:44:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":368,"_text":"Resolve ActivatePassiveEffect 47 "}} 
 Player 2 19:44:16 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":181,"particleType":6} 
 Player 2 19:44:18 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":181,"particleType":6} 
 Player 2 19:44:18 $PLAYER_GET_HIT:  

 {"playerId":1,"damage":1,"damageDealerId":290} 
 Player 2 19:44:18 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":290}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":20,"originStackId":-1},"isAfterActivation":true,"index":20} 
 Player 2 19:44:18 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":6},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":19,"originStackId":45},"isAfterActivation":true,"index":19} 
 Player 2 19:44:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Lust \n2:Player 2 rolled 6 vs Lust<Monster> \n3:Activate Ipecac effect DealDamage<DealDamage>"} 
 Player 2 19:44:18 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":47,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"isAfterActivation":true,"index":19,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 19:44:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Lust \n2:Player 2 rolled 6 vs Lust<Monster>"} 
 Player 2 19:44:18 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":47,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"isAfterActivation":true,"index":19,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 19:44:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":369,"_text":"Remove After Resolve ActivatePassiveEffect 47  "}} 
 Player 2 19:44:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Lust \n2:Player 2 rolled 6 vs Lust<Monster>"} 
 Player 2 19:44:18 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":47,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"isAfterActivation":true,"index":19,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 19:44:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":370,"_text":"Response Remove After Resolve ActivatePassiveEffect 47"},"childOfId":369} 
 Player 2 19:44:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":371,"_text":"Wait For Response From Player 1 "},"childOfId":369} 
 Player 2 19:44:18 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:44:18 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:44:18 $ACTION_MASSAGE_REMOVE:  

 {"id":371} 
 Player 2 19:44:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":372,"_text":"Wait For Response From Player 2 "},"childOfId":369} 
 Player 2 19:44:18 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:44:18 $ACTION_MASSAGE_REMOVE:  

 {"id":372} 
 Player 2 19:44:18 $ACTION_MASSAGE_REMOVE:  

 {"id":370} 
 Player 2 19:44:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":373,"_text":"Resolve AttackRoll 45 "}} 
 Player 2 19:44:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Lust \n2:Player 2 rolled 6 vs Lust<Monster>"} 
 Player 2 19:44:18 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":45,"creatorCardId":290,"numberRolled":6,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":258}} 
 Player 2 19:44:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Lust"} 
 Player 2 19:44:18 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":45,"creatorCardId":290,"numberRolled":6,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":258}} 
 Player 2 19:44:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":374,"_text":"Remove After Resolve AttackRoll 45  "}} 
 Player 2 19:44:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Lust"} 
 Player 2 19:44:19 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":45,"creatorCardId":290,"numberRolled":6,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":258}} 
 Player 2 19:44:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":375,"_text":"Response Remove After Resolve AttackRoll 45"},"childOfId":374} 
 Player 2 19:44:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":376,"_text":"Wait For Response From Player 2 "},"childOfId":374} 
 Player 2 19:44:19 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:44:19 $ACTION_MASSAGE_REMOVE:  

 {"id":376} 
 Player 2 19:44:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":377,"_text":"Wait For Response From Player 1 "},"childOfId":374} 
 Player 2 19:44:19 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:44:19 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:44:19 $ACTION_MASSAGE_REMOVE:  

 {"id":377} 
 Player 2 19:44:19 $ACTION_MASSAGE_REMOVE:  

 {"id":375} 
 Player 2 19:44:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":378,"_text":"Resolve CombatDamage 46 "}} 
 Player 2 19:44:19 $UPDATE_STACK_VIS:  

 {"stackId":46,"text":"Isaac will deal 2 combat damage to Lust"} 
 Player 2 19:44:19 $MONSTER_GET_DAMAGED:  

 {"cardId":258,"hpLeft":0,"damageDealerId":290} 
 Player 2 19:44:19 $NEXT_STACK_ID:  
 Player 2 19:44:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Lust"} 
 Player 2 19:44:19 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:44:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac"} 
 Player 2 19:44:20 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":48,"creatorCardId":290,"monsterToDieCardId":258,"stackEffectType":5,"killerId":290}} 
 Player 2 19:44:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac"} 
 Player 2 19:44:20 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":46,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 19:44:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac"} 
 Player 2 19:44:20 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":46,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 19:44:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac"} 
 Player 2 19:44:20 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":48,"creatorCardId":290,"monsterToDieCardId":258,"stackEffectType":5,"killerId":290}} 
 Player 2 19:44:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac"} 
 Player 2 19:44:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac"} 
 Player 2 19:44:20 $REPLACE_STACK:  

 {"currentStack":[{"entityId":46,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":48,"creatorCardId":290,"monsterToDieCardId":258,"stackEffectType":5,"killerId":290}]} 
 Player 2 19:44:20 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":290}],"result":null,"preventMethod":false,"methodScopeId":258,"scopeIsPlayer":false,"index":21,"originStackId":-1},"isAfterActivation":true,"index":21} 
 Player 2 19:44:20 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":2},{"type":2,"number":6},{"type":0,"number":290},{"type":0,"number":258}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":22,"originStackId":46},"isAfterActivation":true,"index":22} 
 Player 2 19:44:20 $NEXT_STACK_ID:  
 Player 2 19:44:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac"} 
 Player 2 19:44:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust effect DealDamage<DealDamage>"} 
 Player 2 19:44:20 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":49,"creatorCardId":258,"hasLockingStackEffect":false,"cardActivatorId":258,"cardWithEffectId":258,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":258,"cardId":258,"effctType":0},"isAfterActivation":true,"index":22,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 19:44:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust effect DealDamage<DealDamage>"} 
 Player 2 19:44:20 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":49,"creatorCardId":258,"hasLockingStackEffect":false,"cardActivatorId":258,"cardWithEffectId":258,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":258,"cardId":258,"effctType":0},"isAfterActivation":true,"index":22,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 19:44:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":379,"_text":"Add ActivatePassiveEffect 49 "}} 
 Player 2 19:44:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust effect DealDamage<DealDamage>"} 
 Player 2 19:44:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust effect DealDamage<DealDamage>"} 
 Player 2 19:44:20 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[290],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":258,"effectCardPlayer":258},"entityId":49,"creatorCardId":258,"hasLockingStackEffect":false,"cardActivatorId":258,"cardWithEffectId":258,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":258,"cardId":258,"effctType":0},"isAfterActivation":true,"index":22,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 19:44:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":380,"_text":"Response Adding ActivatePassiveEffect 49"},"childOfId":379} 
 Player 2 19:44:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":381,"_text":"Wait For Response From Player 2 "},"childOfId":379} 
 Player 2 19:44:20 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:44:20 $ACTION_MASSAGE_REMOVE:  

 {"id":381} 
 Player 2 19:44:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":382,"_text":"Wait For Response From Player 1 "},"childOfId":379} 
 Player 2 19:44:20 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:44:20 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:44:21 $ACTION_MASSAGE_REMOVE:  

 {"id":382} 
 Player 2 19:44:21 $ACTION_MASSAGE_REMOVE:  

 {"id":380} 
 Player 2 19:44:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":383,"_text":"Resolve ActivatePassiveEffect 49 "}} 
 Player 2 19:44:21 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":258,"particleType":6} 
 Player 2 19:44:23 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":258,"particleType":6} 
 Player 2 19:44:23 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":258}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1} 
 Player 2 19:44:23 $NEXT_STACK_ID:  
 Player 2 19:44:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust effect DealDamage<DealDamage>"} 
 Player 2 19:44:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust effect DealDamage<DealDamage> \n4:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 
 Player 2 19:44:23 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":50,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 19:44:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust effect DealDamage<DealDamage> \n4:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 
 Player 2 19:44:23 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":50,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 19:44:23 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":384,"_text":"Add ActivatePassiveEffect 50 "}} 
 Player 2 19:44:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust effect DealDamage<DealDamage> \n4:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 
 Player 2 19:44:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust effect DealDamage<DealDamage> \n4:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 
 Player 2 19:44:23 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":50,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 19:44:23 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":385,"_text":"Response Adding ActivatePassiveEffect 50"},"childOfId":384} 
 Player 2 19:44:23 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":386,"_text":"Wait For Response From Player 1 "},"childOfId":384} 
 Player 2 19:44:23 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:44:23 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:44:24 $ACTION_MASSAGE_REMOVE:  

 {"id":386} 
 Player 2 19:44:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":387,"_text":"Wait For Response From Player 2 "},"childOfId":384} 
 Player 2 19:44:24 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:44:24 $ACTION_MASSAGE_REMOVE:  

 {"id":387} 
 Player 2 19:44:24 $ACTION_MASSAGE_REMOVE:  

 {"id":385} 
 Player 2 19:44:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":388,"_text":"Resolve ActivatePassiveEffect 50 "}} 
 Player 2 19:44:24 $NEXT_STACK_ID:  
 Player 2 19:44:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust effect DealDamage<DealDamage> \n4:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 
 Player 2 19:44:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust effect DealDamage<DealDamage> \n4:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n5:Player 2 roll a dice"} 
 Player 2 19:44:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust effect DealDamage<DealDamage> \n4:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n5:Player 2 roll a dice"} 
 Player 2 19:44:24 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":51,"creatorCardId":290,"stackEffectToLock":{"effectCollectedData":null,"entityId":50,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":258}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14},"hasLockingStackEffect":false,"stackEffectType":11}} 
 Player 2 19:44:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust effect DealDamage<DealDamage> \n4:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n5:Player 2 roll a dice"} 
 Player 2 19:44:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust effect DealDamage<DealDamage> \n4:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n5:Player 2 roll a dice"} 
 Player 2 19:44:24 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":51,"creatorCardId":290,"stackEffectToLock":{"effectCollectedData":null,"entityId":50,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":258}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14},"hasLockingStackEffect":false,"stackEffectType":11}} 
 Player 2 19:44:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":389,"_text":"Add RollDiceStackEffect 51 "}} 
 Player 2 19:44:24 $ROLL_DICE:  

 {"playerId":2} 
 Player 2 19:44:25 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":2} 
 Player 2 19:44:25 $UPDATE_STACK_VIS:  

 {"stackId":51,"text":"player 2 rolled 2"} 
 Player 2 19:44:25 $SHOW_DICE_ROLL:  

 {"stackId":51} 
 Player 2 19:44:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust effect DealDamage<DealDamage> \n4:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n5:Player 2 rolled 2"} 
 Player 2 19:44:28 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:44:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust effect DealDamage<DealDamage> \n4:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n5:Player 2 rolled 2"} 
 Player 2 19:44:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust effect DealDamage<DealDamage> \n4:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n5:Player 2 rolled 2"} 
 Player 2 19:44:28 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":51,"creatorCardId":290,"stackEffectToLock":{"effectCollectedData":null,"entityId":50,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":258}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14},"hasLockingStackEffect":false,"numberRolled":2,"stackEffectType":11}} 
 Player 2 19:44:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":390,"_text":"Response Adding RollDiceStackEffect 51"},"childOfId":389} 
 Player 2 19:44:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":391,"_text":"Wait For Response From Player 2 "},"childOfId":389} 
 Player 2 19:44:28 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:44:28 $ACTION_MASSAGE_REMOVE:  

 {"id":391} 
 Player 2 19:44:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":392,"_text":"Wait For Response From Player 1 "},"childOfId":389} 
 Player 2 19:44:28 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:44:28 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:44:29 $ACTION_MASSAGE_REMOVE:  

 {"id":392} 
 Player 2 19:44:29 $ACTION_MASSAGE_REMOVE:  

 {"id":390} 
 Player 2 19:44:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":393,"_text":"Resolve RollDiceStackEffect 51 "}} 
 Player 2 19:44:29 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":23,"originStackId":51},"isAfterActivation":true,"index":23} 
 Player 2 19:44:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust effect DealDamage<DealDamage> \n4:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n5:Player 2 rolled 2"} 
 Player 2 19:44:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust effect DealDamage<DealDamage> \n4:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n5:Player 2 rolled 2"} 
 Player 2 19:44:29 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":51,"creatorCardId":290,"stackEffectToLock":{"effectCollectedData":null,"entityId":50,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":258}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14},"hasLockingStackEffect":false,"numberRolled":2,"stackEffectType":11}} 
 Player 2 19:44:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust effect DealDamage<DealDamage> \n4:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 
 Player 2 19:44:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust effect DealDamage<DealDamage> \n4:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 
 Player 2 19:44:29 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":51,"creatorCardId":290,"stackEffectToLock":{"effectCollectedData":null,"entityId":50,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":258}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14},"hasLockingStackEffect":false,"numberRolled":2,"stackEffectType":11}} 
 Player 2 19:44:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":394,"_text":"Remove After Resolve RollDiceStackEffect 51  "}} 
 Player 2 19:44:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust effect DealDamage<DealDamage> \n4:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 
 Player 2 19:44:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust effect DealDamage<DealDamage> \n4:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 
 Player 2 19:44:29 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":51,"creatorCardId":290,"stackEffectToLock":{"effectCollectedData":null,"entityId":50,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":258}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14},"hasLockingStackEffect":false,"numberRolled":2,"stackEffectType":11}} 
 Player 2 19:44:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":395,"_text":"Response Remove After Resolve RollDiceStackEffect 51"},"childOfId":394} 
 Player 2 19:44:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":396,"_text":"Wait For Response From Player 1 "},"childOfId":394} 
 Player 2 19:44:29 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:44:29 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:44:30 $ACTION_MASSAGE_REMOVE:  

 {"id":396} 
 Player 2 19:44:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":397,"_text":"Wait For Response From Player 2 "},"childOfId":394} 
 Player 2 19:44:30 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:44:30 $ACTION_MASSAGE_REMOVE:  

 {"id":397} 
 Player 2 19:44:30 $ACTION_MASSAGE_REMOVE:  

 {"id":395} 
 Player 2 19:44:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":398,"_text":"Resolve ActivatePassiveEffect 50 "}} 
 Player 2 19:44:30 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":106,"particleType":6} 
 Player 2 19:44:32 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":106,"particleType":6} 
 Player 2 19:44:32 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":258}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1} 
 Player 2 19:44:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust effect DealDamage<DealDamage> \n4:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 
 Player 2 19:44:32 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":50,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":2,"cardWithEffectId":106,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 19:44:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust effect DealDamage<DealDamage>"} 
 Player 2 19:44:32 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":50,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":2,"cardWithEffectId":106,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 19:44:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":399,"_text":"Remove After Resolve ActivatePassiveEffect 50  "}} 
 Player 2 19:44:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust effect DealDamage<DealDamage>"} 
 Player 2 19:44:32 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":50,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":2,"cardWithEffectId":106,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 19:44:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":400,"_text":"Response Remove After Resolve ActivatePassiveEffect 50"},"childOfId":399} 
 Player 2 19:44:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":401,"_text":"Wait For Response From Player 2 "},"childOfId":399} 
 Player 2 19:44:32 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:44:32 $ACTION_MASSAGE_REMOVE:  

 {"id":401} 
 Player 2 19:44:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":402,"_text":"Wait For Response From Player 1 "},"childOfId":399} 
 Player 2 19:44:32 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:44:32 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:44:32 $ACTION_MASSAGE_REMOVE:  

 {"id":402} 
 Player 2 19:44:32 $ACTION_MASSAGE_REMOVE:  

 {"id":400} 
 Player 2 19:44:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":403,"_text":"Resolve ActivatePassiveEffect 49 "}} 
 Player 2 19:44:32 $PLAYER_GET_HIT:  

 {"playerId":2,"damage":1,"damageDealerId":258} 
 Player 2 19:44:33 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":258}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 19:44:33 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":2},{"type":2,"number":6},{"type":0,"number":290},{"type":0,"number":258}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":false,"index":22,"originStackId":46},"isAfterActivation":true,"index":22} 
 Player 2 19:44:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust effect DealDamage<DealDamage>"} 
 Player 2 19:44:33 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[290],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":258,"effectCardPlayer":258},"entityId":49,"creatorCardId":258,"hasLockingStackEffect":false,"cardActivatorId":258,"cardWithEffectId":258,"isAfterActivation":true,"index":22,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 19:44:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac"} 
 Player 2 19:44:33 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[290],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":258,"effectCardPlayer":258},"entityId":49,"creatorCardId":258,"hasLockingStackEffect":false,"cardActivatorId":258,"cardWithEffectId":258,"isAfterActivation":true,"index":22,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 19:44:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":404,"_text":"Remove After Resolve ActivatePassiveEffect 49  "}} 
 Player 2 19:44:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac"} 
 Player 2 19:44:33 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[290],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":258,"effectCardPlayer":258},"entityId":49,"creatorCardId":258,"hasLockingStackEffect":false,"cardActivatorId":258,"cardWithEffectId":258,"isAfterActivation":true,"index":22,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 19:44:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":405,"_text":"Response Remove After Resolve ActivatePassiveEffect 49"},"childOfId":404} 
 Player 2 19:44:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":406,"_text":"Wait For Response From Player 1 "},"childOfId":404} 
 Player 2 19:44:33 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:44:33 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:44:33 $ACTION_MASSAGE_REMOVE:  

 {"id":406} 
 Player 2 19:44:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":407,"_text":"Wait For Response From Player 2 "},"childOfId":404} 
 Player 2 19:44:33 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:44:33 $ACTION_MASSAGE_REMOVE:  

 {"id":407} 
 Player 2 19:44:33 $ACTION_MASSAGE_REMOVE:  

 {"id":405} 
 Player 2 19:44:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":408,"_text":"Resolve MonsterDeath 48 "}} 
 Player 2 19:44:33 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":258,"particleType":5} 
 Player 2 19:44:33 $CANCEL_ATTACK:  
 Player 2 19:44:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Isaac"} 
 Player 2 19:44:33 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":46,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 19:44:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":409,"_text":"Fizzle CombatDamage 46"}} 
 Player 2 19:44:33 $FIZZLE_STACK_EFFECT:  

 {"entityId":46} 
 Player 2 19:44:34 $NEXT_STACK_ID:  
 Player 2 19:44:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Isaac"} 
 Player 2 19:44:34 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:44:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Lust<Monster> reward \n2:[object Object] killed by Isaac"} 
 Player 2 19:44:34 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":52,"creatorCardId":290,"monsterCardWithRewardId":258,"playerCardIdToReward":290,"stackEffectType":7}} 
 Player 2 19:44:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Lust<Monster> reward \n2:[object Object] killed by Isaac"} 
 Player 2 19:44:34 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":48,"creatorCardId":290,"monsterToDieCardId":258,"stackEffectType":5,"killerId":290}} 
 Player 2 19:44:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Lust<Monster> reward \n2:[object Object] killed by Isaac"} 
 Player 2 19:44:34 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":52,"creatorCardId":290,"monsterCardWithRewardId":258,"playerCardIdToReward":290,"stackEffectType":7}} 
 Player 2 19:44:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Lust<Monster> reward \n2:[object Object] killed by Isaac"} 
 Player 2 19:44:34 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":48,"creatorCardId":290,"monsterToDieCardId":258,"stackEffectType":5,"killerId":290}} 
 Player 2 19:44:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Lust<Monster> reward \n2:[object Object] killed by Isaac"} 
 Player 2 19:44:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Lust<Monster> reward \n2:[object Object] killed by Isaac"} 
 Player 2 19:44:34 $REPLACE_STACK:  

 {"currentStack":[{"entityId":52,"creatorCardId":290,"monsterCardWithRewardId":258,"playerCardIdToReward":290,"stackEffectType":7},{"entityId":48,"creatorCardId":290,"monsterToDieCardId":258,"stackEffectType":5,"killerId":290}]} 
 Player 2 19:44:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Lust<Monster> reward \n2:[object Object] killed by Isaac"} 
 Player 2 19:44:34 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":48,"creatorCardId":290,"monsterToDieCardId":258,"stackEffectType":5,"killerId":290}} 
 Player 2 19:44:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Lust<Monster> reward"} 
 Player 2 19:44:34 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":48,"creatorCardId":290,"monsterToDieCardId":258,"stackEffectType":5,"killerId":290}} 
 Player 2 19:44:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":410,"_text":"Remove After Resolve MonsterDeath 48  "}} 
 Player 2 19:44:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Lust<Monster> reward"} 
 Player 2 19:44:34 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":48,"creatorCardId":290,"monsterToDieCardId":258,"stackEffectType":5,"killerId":290}} 
 Player 2 19:44:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":411,"_text":"Response Remove After Resolve MonsterDeath 48"},"childOfId":410} 
 Player 2 19:44:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":412,"_text":"Wait For Response From Player 2 "},"childOfId":410} 
 Player 2 19:44:34 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:44:34 $ACTION_MASSAGE_REMOVE:  

 {"id":412} 
 Player 2 19:44:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":413,"_text":"Wait For Response From Player 1 "},"childOfId":410} 
 Player 2 19:44:34 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:44:34 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:44:35 $ACTION_MASSAGE_REMOVE:  

 {"id":413} 
 Player 2 19:44:35 $ACTION_MASSAGE_REMOVE:  

 {"id":411} 
 Player 2 19:44:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":414,"_text":"Resolve MonsterRewardStackEffect 52 "}} 
 Player 2 19:44:35 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 19:44:35 $MOVE_CARD:  

 {"moveIndex":30,"cardId":100,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 19:44:35 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":100} 
 Player 2 19:44:35 $FLIP_CARD:  

 {"cardId":100} 
 Player 2 19:44:35 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":100} 
 Player 2 19:44:35 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 19:44:35 $MOVE_CARD:  

 {"moveIndex":31,"cardId":76,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 19:44:36 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":76} 
 Player 2 19:44:36 $FLIP_CARD:  

 {"cardId":76} 
 Player 2 19:44:36 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":76} 
 Player 2 19:44:36 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":258,"scopeIsPlayer":false,"index":24,"originStackId":52},"isAfterActivation":true,"index":24} 
 Player 2 19:44:36 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:44:36 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:44:36 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":52,"creatorCardId":290,"monsterCardWithRewardId":258,"playerCardIdToReward":290,"stackEffectType":7}} 
 Player 2 19:44:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":415,"_text":"Fizzle MonsterRewardStackEffect 52"}} 
 Player 2 19:44:36 $FIZZLE_STACK_EFFECT:  

 {"entityId":52} 
 Player 2 19:44:36 $MOVE_CARD:  

 {"moveIndex":32,"cardId":258,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"soulsLayout"} 
 Player 2 19:44:37 $GET_SOUL:  

 {"playerId":2,"cardId":258} 
 Player 2 19:44:37 $REMOVE_FROM_PASSIVE_MANAGER:  

 {"cardId":258} 
 Player 2 19:44:37 $REMOVE_MONSTER:  

 {"holderId":2,"monsterId":258} 
 Player 2 19:44:37 $GET_NEXT_MONSTER:  

 {"monsterPlaceId":2} 
 Player 2 19:44:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":416,"_text":"Stack Was Emptied "}} 
 Player 2 19:44:37 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:44:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":417,"_text":"Stack Was Emptied "}} 
 Player 2 19:44:37 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:44:46 $SHOW_DECISION:  

 {"startCardId":290,"endCardId":290} 
 Player 2 19:44:49 $NEXT_STACK_ID:  
 Player 2 19:44:49 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:44:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Isaac"} 
 Player 2 19:44:50 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":53,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 19:44:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Isaac"} 
 Player 2 19:44:50 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":53,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 19:44:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":418,"_text":"Add ActivateItem 53 "}} 
 Player 2 19:44:52 $SHOW_DECISION:  

 {"startCardId":290,"endCardId":76,"flipEndCard":true} 
 Player 2 19:44:55 $USE_ITEM:  

 {"cardId":290} 
 Player 2 19:44:55 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:44:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Isaac"} 
 Player 2 19:44:55 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":53,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 19:44:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":419,"_text":"Response Adding ActivateItem 53"},"childOfId":418} 
 Player 2 19:44:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":420,"_text":"Wait For Response From Player 2 "},"childOfId":418} 
 Player 2 19:44:55 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:44:55 $ACTION_MASSAGE_REMOVE:  

 {"id":420} 
 Player 2 19:44:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":421,"_text":"Wait For Response From Player 1 "},"childOfId":418} 
 Player 2 19:44:55 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:44:55 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:44:55 $ACTION_MASSAGE_REMOVE:  

 {"id":421} 
 Player 2 19:44:55 $ACTION_MASSAGE_REMOVE:  

 {"id":419} 
 Player 2 19:44:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":422,"_text":"Resolve ActivateItem 53 "}} 
 Player 2 19:44:55 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":290,"particleType":6} 
 Player 2 19:44:57 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":290,"particleType":6} 
 Player 2 19:44:57 $NEXT_STACK_ID:  
 Player 2 19:44:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Isaac"} 
 Player 2 19:44:57 $PLAYER_LOSE_LOOT:  

 {"playerId":2,"cardId":76} 
 Player 2 19:44:57 $MOVE_CARD:  

 {"moveIndex":33,"cardId":76,"placeID":300,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 19:44:58 $MOVE_CARD_TO_PILE:  

 {"type":7,"cardId":76} 
 Player 2 19:44:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play A Dime(2): addMoney \n2:Player 2 activated Isaac"} 
 Player 2 19:44:58 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:44:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play A Dime(2): addMoney \n2:Player 2 activated Isaac"} 
 Player 2 19:44:58 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":54,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":76,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":76,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 19:44:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play A Dime(2): addMoney \n2:Player 2 activated Isaac"} 
 Player 2 19:44:58 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":53,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 19:44:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play A Dime(2): addMoney \n2:Player 2 activated Isaac"} 
 Player 2 19:44:58 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":54,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":76,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":76,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 19:44:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play A Dime(2): addMoney \n2:Player 2 activated Isaac"} 
 Player 2 19:44:58 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":53,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 19:44:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play A Dime(2): addMoney \n2:Player 2 activated Isaac"} 
 Player 2 19:44:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play A Dime(2): addMoney \n2:Player 2 activated Isaac"} 
 Player 2 19:44:58 $REPLACE_STACK:  

 {"currentStack":[{"entityId":54,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":76,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":76,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":53,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 
 Player 2 19:44:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play A Dime(2): addMoney \n2:Player 2 activated Isaac"} 
 Player 2 19:44:58 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":53,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 19:44:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play A Dime(2): addMoney"} 
 Player 2 19:44:58 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":53,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 19:44:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":423,"_text":"Remove After Resolve ActivateItem 53  "}} 
 Player 2 19:44:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play A Dime(2): addMoney"} 
 Player 2 19:44:58 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":53,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 19:44:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":424,"_text":"Response Remove After Resolve ActivateItem 53"},"childOfId":423} 
 Player 2 19:44:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":425,"_text":"Wait For Response From Player 2 "},"childOfId":423} 
 Player 2 19:44:58 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:44:58 $ACTION_MASSAGE_REMOVE:  

 {"id":425} 
 Player 2 19:44:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":426,"_text":"Wait For Response From Player 1 "},"childOfId":423} 
 Player 2 19:44:58 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:44:58 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:44:59 $ACTION_MASSAGE_REMOVE:  

 {"id":426} 
 Player 2 19:44:59 $ACTION_MASSAGE_REMOVE:  

 {"id":424} 
 Player 2 19:44:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":427,"_text":"Resolve PlayLootCardStackEffect 54 "}} 
 Player 2 19:44:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play A Dime(2): addMoney"} 
 Player 2 19:44:59 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":76,"particleType":6} 
 Player 2 19:45:01 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":76,"particleType":6} 
 Player 2 19:45:01 $SET_MONEY:  

 {"playerId":2,"numOfCoins":15} 
 Player 2 19:45:01 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":10}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":25,"originStackId":-1},"isAfterActivation":true,"index":25} 
 Player 2 19:45:01 $REMOVE_FROM_PILE:  

 {"cardId":76} 
 Player 2 19:45:01 $MOVE_CARD:  

 {"moveIndex":34,"cardId":76,"placeID":301,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 19:45:01 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":76} 
 Player 2 19:45:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play A Dime(2): addMoney"} 
 Player 2 19:45:01 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":54,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":76,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 19:45:01 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:45:01 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":54,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":76,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 19:45:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":428,"_text":"Remove After Resolve PlayLootCardStackEffect 54  "}} 
 Player 2 19:45:01 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:45:01 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":54,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":76,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 19:45:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":429,"_text":"Response Remove After Resolve PlayLootCardStackEffect 54"},"childOfId":428} 
 Player 2 19:45:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":430,"_text":"Wait For Response From Player 1 "},"childOfId":428} 
 Player 2 19:45:01 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:45:01 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:45:02 $ACTION_MASSAGE_REMOVE:  

 {"id":430} 
 Player 2 19:45:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":431,"_text":"Wait For Response From Player 2 "},"childOfId":428} 
 Player 2 19:45:02 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:45:02 $ACTION_MASSAGE_REMOVE:  

 {"id":431} 
 Player 2 19:45:02 $ACTION_MASSAGE_REMOVE:  

 {"id":429} 
 Player 2 19:45:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":432,"_text":"Stack Was Emptied "}} 
 Player 2 19:45:02 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:45:04 $SHOW_DECISION:  

 {"startCardId":290,"endCardId":200} 
 Player 2 19:45:07 $NEXT_STACK_ID:  
 Player 2 19:45:07 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:45:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Polyphemus for 10"} 
 Player 2 19:45:07 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":55,"creatorCardId":290,"itemToPurchaseCardId":200,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 
 Player 2 19:45:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Polyphemus for 10"} 
 Player 2 19:45:07 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":55,"creatorCardId":290,"itemToPurchaseCardId":200,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 
 Player 2 19:45:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":433,"_text":"Add PurchaseItem 55 "}} 
 Player 2 19:45:07 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:45:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Polyphemus for 10"} 
 Player 2 19:45:07 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":55,"creatorCardId":290,"itemToPurchaseCardId":200,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 
 Player 2 19:45:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":434,"_text":"Response Adding PurchaseItem 55"},"childOfId":433} 
 Player 2 19:45:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":435,"_text":"Wait For Response From Player 2 "},"childOfId":433} 
 Player 2 19:45:07 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:45:07 $ACTION_MASSAGE_REMOVE:  

 {"id":435} 
 Player 2 19:45:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":436,"_text":"Wait For Response From Player 1 "},"childOfId":433} 
 Player 2 19:45:07 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:45:07 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:45:07 $ACTION_MASSAGE_REMOVE:  

 {"id":436} 
 Player 2 19:45:07 $ACTION_MASSAGE_REMOVE:  

 {"id":434} 
 Player 2 19:45:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":437,"_text":"Resolve PurchaseItem 55 "}} 
 Player 2 19:45:07 $SET_MONEY:  

 {"playerId":2,"numOfCoins":5} 
 Player 2 19:45:07 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-10}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":26,"originStackId":-1},"isAfterActivation":true,"index":26} 
 Player 2 19:45:07 $REMOVE_ITEM_FROM_SHOP:  

 {"cardId":200} 
 Player 2 19:45:08 $NEXT_STACK_ID:  
 Player 2 19:45:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Polyphemus for 10"} 
 Player 2 19:45:08 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:45:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot"} 
 Player 2 19:45:08 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":56,"creatorCardId":290,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 
 Player 2 19:45:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot"} 
 Player 2 19:45:08 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":55,"creatorCardId":290,"itemToPurchaseCardId":200,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 
 Player 2 19:45:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot"} 
 Player 2 19:45:08 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":55,"creatorCardId":290,"itemToPurchaseCardId":200,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 
 Player 2 19:45:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot"} 
 Player 2 19:45:08 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":56,"creatorCardId":290,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 
 Player 2 19:45:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot"} 
 Player 2 19:45:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot"} 
 Player 2 19:45:08 $REPLACE_STACK:  

 {"currentStack":[{"entityId":55,"creatorCardId":290,"itemToPurchaseCardId":200,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9},{"entityId":56,"creatorCardId":290,"slotType":5,"slotToFillId":0,"stackEffectType":10}]} 
 Player 2 19:45:08 $REGISTER_PASSIVE_ITEM:  

 {"cardId":200} 
 Player 2 19:45:08 $MOVE_CARD:  

 {"moveIndex":35,"cardId":200,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 
 Player 2 19:45:08 $ADD_AN_ITEM:  

 {"playerId":2,"cardId":200,"isReward":false} 
 Player 2 19:45:09 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":200}],"result":true,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":27,"originStackId":-1},"isAfterActivation":true,"index":27} 
 Player 2 19:45:09 $NEXT_STACK_ID:  
 Player 2 19:45:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot"} 
 Player 2 19:45:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus effect GainStats<GainStats>"} 
 Player 2 19:45:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus effect GainStats<GainStats>"} 
 Player 2 19:45:09 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[290],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":57,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":200,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":2,"cardId":200,"effctType":0},"isAfterActivation":true,"index":27,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 19:45:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus effect GainStats<GainStats>"} 
 Player 2 19:45:09 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":55,"creatorCardId":290,"itemToPurchaseCardId":200,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 
 Player 2 19:45:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus effect GainStats<GainStats>"} 
 Player 2 19:45:09 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":55,"creatorCardId":290,"itemToPurchaseCardId":200,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 
 Player 2 19:45:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus effect GainStats<GainStats>"} 
 Player 2 19:45:09 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":56,"creatorCardId":290,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 
 Player 2 19:45:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus effect GainStats<GainStats>"} 
 Player 2 19:45:09 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[290],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":57,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":200,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":2,"cardId":200,"effctType":0},"isAfterActivation":true,"index":27,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 19:45:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus effect GainStats<GainStats>"} 
 Player 2 19:45:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus effect GainStats<GainStats>"} 
 Player 2 19:45:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus effect GainStats<GainStats>"} 
 Player 2 19:45:09 $REPLACE_STACK:  

 {"currentStack":[{"entityId":55,"creatorCardId":290,"itemToPurchaseCardId":200,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9},{"entityId":56,"creatorCardId":290,"slotType":5,"slotToFillId":0,"stackEffectType":10},{"effectCollectedData":{"effectTargets":[290],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":57,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":200,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":2,"cardId":200,"effctType":0},"isAfterActivation":true,"index":27,"hasDataBeenCollectedYet":true,"stackEffectType":14}]} 
 Player 2 19:45:09 $NEXT_STACK_ID:  
 Player 2 19:45:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus effect GainStats<GainStats>"} 
 Player 2 19:45:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus effect GainStats<GainStats> \n4:Activate Polyphemus effect GainStats<GainStats>"} 
 Player 2 19:45:09 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":58,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":200,"effectToDo":{"effectName":"GainStats","cardEffectNum":1,"cardPlayerId":2,"cardId":200,"effctType":0},"isAfterActivation":true,"index":27,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 19:45:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus effect GainStats<GainStats> \n4:Activate Polyphemus effect GainStats<GainStats>"} 
 Player 2 19:45:09 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":58,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":200,"effectToDo":{"effectName":"GainStats","cardEffectNum":1,"cardPlayerId":2,"cardId":200,"effctType":0},"isAfterActivation":true,"index":27,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 19:45:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":438,"_text":"Add ActivatePassiveEffect 58 "}} 
 Player 2 19:45:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus effect GainStats<GainStats> \n4:Activate Polyphemus effect GainStats<GainStats>"} 
 Player 2 19:45:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus effect GainStats<GainStats> \n4:Activate Polyphemus effect GainStats<GainStats>"} 
 Player 2 19:45:09 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[290],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":58,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":200,"effectToDo":{"effectName":"GainStats","cardEffectNum":1,"cardPlayerId":2,"cardId":200,"effctType":0},"isAfterActivation":true,"index":27,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 19:45:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":439,"_text":"Response Adding ActivatePassiveEffect 58"},"childOfId":438} 
 Player 2 19:45:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":440,"_text":"Wait For Response From Player 2 "},"childOfId":438} 
 Player 2 19:45:09 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:45:09 $ACTION_MASSAGE_REMOVE:  

 {"id":440} 
 Player 2 19:45:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":441,"_text":"Wait For Response From Player 1 "},"childOfId":438} 
 Player 2 19:45:09 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:45:09 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:45:10 $ACTION_MASSAGE_REMOVE:  

 {"id":441} 
 Player 2 19:45:10 $ACTION_MASSAGE_REMOVE:  

 {"id":439} 
 Player 2 19:45:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":442,"_text":"Resolve ActivatePassiveEffect 58 "}} 
 Player 2 19:45:10 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":200,"particleType":6} 
 Player 2 19:45:12 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":200,"particleType":6} 
 Player 2 19:45:12 $PLAYER_GAIN_ATTACK_ROLL_BONUS:  

 {"playerId":2,"bonusToGain":-1,"isTemp":false} 
 Player 2 19:45:12 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":200}],"result":true,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":27,"originStackId":-1},"isAfterActivation":true,"index":27} 
 Player 2 19:45:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus effect GainStats<GainStats> \n4:Activate Polyphemus effect GainStats<GainStats>"} 
 Player 2 19:45:12 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[290],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":58,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":200,"isAfterActivation":true,"index":27,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 19:45:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus effect GainStats<GainStats>"} 
 Player 2 19:45:12 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[290],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":58,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":200,"isAfterActivation":true,"index":27,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 19:45:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":443,"_text":"Remove After Resolve ActivatePassiveEffect 58  "}} 
 Player 2 19:45:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus effect GainStats<GainStats>"} 
 Player 2 19:45:12 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[290],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":58,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":200,"isAfterActivation":true,"index":27,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 19:45:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":444,"_text":"Response Remove After Resolve ActivatePassiveEffect 58"},"childOfId":443} 
 Player 2 19:45:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":445,"_text":"Wait For Response From Player 1 "},"childOfId":443} 
 Player 2 19:45:12 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:45:12 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:45:13 $ACTION_MASSAGE_REMOVE:  

 {"id":445} 
 Player 2 19:45:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":446,"_text":"Wait For Response From Player 2 "},"childOfId":443} 
 Player 2 19:45:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:45:13 $ACTION_MASSAGE_REMOVE:  

 {"id":446} 
 Player 2 19:45:13 $ACTION_MASSAGE_REMOVE:  

 {"id":444} 
 Player 2 19:45:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":447,"_text":"Resolve ActivatePassiveEffect 57 "}} 
 Player 2 19:45:13 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":200,"particleType":6} 
 Player 2 19:45:15 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":200,"particleType":6} 
 Player 2 19:45:15 $PLAYER_GAIN_DMG:  

 {"playerId":2,"DMGToGain":2,"isTemp":false} 
 Player 2 19:45:15 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":200}],"result":true,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":27,"originStackId":-1},"isAfterActivation":true,"index":27} 
 Player 2 19:45:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus effect GainStats<GainStats>"} 
 Player 2 19:45:15 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[290],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":57,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":200,"isAfterActivation":true,"index":27,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 19:45:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot"} 
 Player 2 19:45:15 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[290],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":57,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":200,"isAfterActivation":true,"index":27,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 19:45:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":448,"_text":"Remove After Resolve ActivatePassiveEffect 57  "}} 
 Player 2 19:45:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot"} 
 Player 2 19:45:15 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[290],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":57,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":200,"isAfterActivation":true,"index":27,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 19:45:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":449,"_text":"Response Remove After Resolve ActivatePassiveEffect 57"},"childOfId":448} 
 Player 2 19:45:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":450,"_text":"Wait For Response From Player 2 "},"childOfId":448} 
 Player 2 19:45:15 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:45:15 $ACTION_MASSAGE_REMOVE:  

 {"id":450} 
 Player 2 19:45:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":451,"_text":"Wait For Response From Player 1 "},"childOfId":448} 
 Player 2 19:45:15 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:45:15 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:45:16 $ACTION_MASSAGE_REMOVE:  

 {"id":451} 
 Player 2 19:45:16 $ACTION_MASSAGE_REMOVE:  

 {"id":449} 
 Player 2 19:45:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":452,"_text":"Resolve RefillEmptySlot 56 "}} 
 Player 2 19:45:16 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 19:45:16 $FLIP_CARD:  

 {"cardId":216} 
 Player 2 19:45:16 $ADD_STORE_CARD:  

 {"cardId":216} 
 Player 2 19:45:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Polyphemus for 10"} 
 Player 2 19:45:16 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":56,"creatorCardId":290,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 
 Player 2 19:45:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":453,"_text":"Remove After Resolve RefillEmptySlot 56  "}} 
 Player 2 19:45:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Polyphemus for 10"} 
 Player 2 19:45:16 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":56,"creatorCardId":290,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 
 Player 2 19:45:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":454,"_text":"Response Remove After Resolve RefillEmptySlot 56"},"childOfId":453} 
 Player 2 19:45:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":455,"_text":"Wait For Response From Player 1 "},"childOfId":453} 
 Player 2 19:45:16 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:45:16 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:45:16 $ACTION_MASSAGE_REMOVE:  

 {"id":455} 
 Player 2 19:45:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":456,"_text":"Wait For Response From Player 2 "},"childOfId":453} 
 Player 2 19:45:16 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:45:16 $ACTION_MASSAGE_REMOVE:  

 {"id":456} 
 Player 2 19:45:16 $ACTION_MASSAGE_REMOVE:  

 {"id":454} 
 Player 2 19:45:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":457,"_text":"Resolve PurchaseItem 55 "}} 
 Player 2 19:45:16 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:45:16 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":55,"creatorCardId":290,"itemToPurchaseCardId":200,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 
 Player 2 19:45:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":458,"_text":"Remove After Resolve PurchaseItem 55  "}} 
 Player 2 19:45:17 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:45:17 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":55,"creatorCardId":290,"itemToPurchaseCardId":200,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 
 Player 2 19:45:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":459,"_text":"Response Remove After Resolve PurchaseItem 55"},"childOfId":458} 
 Player 2 19:45:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":460,"_text":"Wait For Response From Player 2 "},"childOfId":458} 
 Player 2 19:45:17 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:45:17 $ACTION_MASSAGE_REMOVE:  

 {"id":460} 
 Player 2 19:45:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":461,"_text":"Wait For Response From Player 1 "},"childOfId":458} 
 Player 2 19:45:17 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:45:17 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:45:17 $ACTION_MASSAGE_REMOVE:  

 {"id":461} 
 Player 2 19:45:17 $ACTION_MASSAGE_REMOVE:  

 {"id":459} 
 Player 2 19:45:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":462,"_text":"Stack Was Emptied "}} 
 Player 2 19:45:17 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:45:21 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:45:21 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:45:21 $REPLACE_STACK:  

 {"currentStack":[]} 
 Player 2 19:45:21 $END_TURN:  
 Player 2 19:45:21 $SET_TURN:  

 {"playerId":1} 
 Player 2 19:45:21 $START_TURN:  

 {"playerId":1} 
 Player 2 19:45:21 $STACK_EMPTIED:  

 {"playerId":1} 
 Player 2 19:45:22 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:45:22 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:45:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 19:45:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 19:45:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 19:45:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 19:45:22 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:45:22 $MOVE_CARD_END:  

 {"moveIndex":36,"cardId":67,"flipIfFlipped":false,"playerId":1} 
 Player 2 19:45:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 19:45:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 19:45:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 19:45:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 19:45:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 19:45:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 19:45:23 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:45:48 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:45:48 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:45:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Black Rune "} 
 Player 2 19:45:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Black Rune "} 
 Player 2 19:45:49 $MOVE_CARD_END:  

 {"moveIndex":37,"cardId":83,"flipIfFlipped":true,"playerId":1} 
 Player 2 19:45:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Black Rune "} 
 Player 2 19:45:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Black Rune "} 
 Player 2 19:45:49 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:45:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Black Rune "} 
 Player 2 19:45:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Black Rune "} 
 Player 2 19:45:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Black Rune "} 
 Player 2 19:45:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Black Rune "} 
 Player 2 19:45:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Black Rune  \n2:Player 1 roll a dice"} 
 Player 2 19:45:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Black Rune  \n2:Player 1 roll a dice"} 
 Player 2 19:45:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Black Rune  \n2:Player 1 roll a dice"} 
 Player 2 19:45:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Black Rune  \n2:Player 1 roll a dice"} 
 Player 2 19:45:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Black Rune  \n2:Player 1 roll a dice"} 
 Player 2 19:45:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Black Rune  \n2:Player 1 roll a dice"} 
 Player 2 19:45:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Black Rune  \n2:Player 1 roll a dice"} 
 Player 2 19:45:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Black Rune  \n2:Player 1 roll a dice"} 
 Player 2 19:45:54 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:45:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Black Rune  \n2:Player 1 roll a dice"} 
 Player 2 19:45:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Black Rune  \n2:Player 1 roll a dice"} 
 Player 2 19:45:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Black Rune  \n2:Player 1 roll a dice"} 
 Player 2 19:45:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Black Rune  \n2:Player 1 roll a dice"} 
 Player 2 19:45:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Black Rune  \n2:Player 1 roll a dice"} 
 Player 2 19:45:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Black Rune  \n2:Player 1 roll a dice"} 
 Player 2 19:45:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Black Rune  \n2:Player 1 roll a dice"} 
 Player 2 19:45:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Black Rune  \n2:Player 1 roll a dice"} 
 Player 2 19:45:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Black Rune  \n2:Player 1 roll a dice"} 
 Player 2 19:45:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Black Rune  \n2:Player 1 roll a dice"} 
 Player 2 19:45:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Black Rune  \n2:Player 1 roll a dice"} 
 Player 2 19:45:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Black Rune  \n2:Player 1 roll a dice"} 
 Player 2 19:45:55 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:45:58 $MOVE_CARD_END:  

 {"moveIndex":38,"cardId":71,"flipIfFlipped":true,"playerId":1} 
 Player 2 19:45:58 $MOVE_CARD_END:  

 {"moveIndex":39,"cardId":135,"flipIfFlipped":true,"playerId":1} 
 Player 2 19:45:59 $MOVE_CARD_END:  

 {"moveIndex":40,"cardId":93,"flipIfFlipped":true,"playerId":1} 
 Player 2 19:45:59 $MOVE_CARD_END:  

 {"moveIndex":41,"cardId":114,"flipIfFlipped":true,"playerId":1} 
 Player 2 19:46:00 $MOVE_CARD_END:  

 {"moveIndex":42,"cardId":82,"flipIfFlipped":true,"playerId":1} 
 Player 2 19:46:01 $MOVE_CARD_END:  

 {"moveIndex":43,"cardId":67,"flipIfFlipped":true,"playerId":1} 
 Player 2 19:46:01 $MOVE_CARD_END:  

 {"moveIndex":44,"cardId":16,"flipIfFlipped":false,"playerId":1} 
 Player 2 19:46:02 $MOVE_CARD_END:  

 {"moveIndex":45,"cardId":116,"flipIfFlipped":false,"playerId":1} 
 Player 2 19:46:02 $MOVE_CARD_END:  

 {"moveIndex":46,"cardId":55,"flipIfFlipped":false,"playerId":1} 
 Player 2 19:46:03 $MOVE_CARD_END:  

 {"moveIndex":47,"cardId":83,"flipIfFlipped":true,"playerId":1} 
 Player 2 19:46:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Black Rune "} 
 Player 2 19:46:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Black Rune "} 
 Player 2 19:46:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Black Rune "} 
 Player 2 19:46:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Black Rune "} 
 Player 2 19:46:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Black Rune "} 
 Player 2 19:46:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Black Rune "} 
 Player 2 19:46:03 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:46:27 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:46:27 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:46:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Monster Deck"} 
 Player 2 19:46:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Monster Deck"} 
 Player 2 19:46:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Monster Deck"} 
 Player 2 19:46:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Monster Deck"} 
 Player 2 19:46:27 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:46:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Monster Deck"} 
 Player 2 19:46:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Monster Deck"} 
 Player 2 19:46:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Leech"} 
 Player 2 19:46:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Leech"} 
 Player 2 19:46:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Leech"} 
 Player 2 19:46:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Leech"} 
 Player 2 19:46:52 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:46:54 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:46:54 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:46:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Leech<Monster>"} 
 Player 2 19:46:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Leech<Monster>"} 
 Player 2 19:46:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Leech<Monster>"} 
 Player 2 19:46:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Leech<Monster>"} 
 Player 2 19:47:00 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:47:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Leech<Monster>"} 
 Player 2 19:47:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Leech<Monster>"} 
 Player 2 19:47:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Leech combat damage to Samson"} 
 Player 2 19:47:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Leech combat damage to Samson"} 
 Player 2 19:47:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Leech combat damage to Samson"} 
 Player 2 19:47:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Leech combat damage to Samson"} 
 Player 2 19:47:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Leech combat damage to Samson"} 
 Player 2 19:47:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Leech combat damage to Samson"} 
 Player 2 19:47:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Leech combat damage to Samson"} 
 Player 2 19:47:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Leech combat damage to Samson"} 
 Player 2 19:47:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Leech combat damage to Samson"} 
 Player 2 19:47:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Leech combat damage to Samson"} 
 Player 2 19:47:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Leech combat damage to Samson \n2:Player 1 is rolling against Leech<Monster>"} 
 Player 2 19:47:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Leech combat damage to Samson \n2:Player 1 is rolling against Leech<Monster>"} 
 Player 2 19:47:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Leech combat damage to Samson \n2:Player 1 is rolling against Leech<Monster>"} 
 Player 2 19:47:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Leech combat damage to Samson \n2:Player 1 is rolling against Leech<Monster>"} 
 Player 2 19:47:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Leech combat damage to Samson \n2:Player 1 is rolling against Leech<Monster>"} 
 Player 2 19:47:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Leech combat damage to Samson \n2:Player 1 is rolling against Leech<Monster>"} 
 Player 2 19:47:01 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:47:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Leech combat damage to Samson"} 
 Player 2 19:47:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Leech combat damage to Samson"} 
 Player 2 19:47:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 19:47:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 19:47:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 19:47:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 19:47:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 19:47:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 19:47:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 19:47:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 19:47:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 19:47:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 19:47:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Leech combat damage to Samson \n2:Player 1 is about to die"} 
 Player 2 19:47:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Leech combat damage to Samson \n2:Player 1 is about to die"} 
 Player 2 19:47:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Leech combat damage to Samson \n2:Player 1 is about to die"} 
 Player 2 19:47:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Leech combat damage to Samson \n2:Player 1 is about to die"} 
 Player 2 19:47:02 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:47:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 19:47:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 19:47:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 19:47:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 19:47:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 19:47:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 19:47:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 19:47:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 19:47:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 19:47:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 19:47:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 19:47:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 19:47:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 
 Player 2 19:47:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 
 Player 2 19:47:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 
 Player 2 19:47:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 
 Player 2 19:47:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 
 Player 2 19:47:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 
 Player 2 19:47:04 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:47:08 $MOVE_CARD_END:  

 {"moveIndex":48,"cardId":16,"flipIfFlipped":true,"playerId":1} 
 Player 2 19:47:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 19:47:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 19:47:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 19:47:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 19:47:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 19:47:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 19:47:08 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:47:09 $STACK_EMPTIED:  

 {"playerId":1} 
 Player 2 19:47:09 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:47:09 $RECHARGE_ITEM:  

 {"cardId":290} 
 Player 2 19:47:09 $PLAYER_RECHARGE_ITEM:  

 {"playerId":2,"cardId":290} 
 Player 2 19:47:09 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:47:09 $NEXT_STACK_ID:  
 Player 2 19:47:09 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:47:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 19:47:09 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":68,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 
 Player 2 19:47:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 19:47:09 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":68,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 
 Player 2 19:47:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":530,"_text":"Add StartTurnLoot 68 "}} 
 Player 2 19:47:09 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:47:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 19:47:09 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":68,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 
 Player 2 19:47:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":531,"_text":"Response Adding StartTurnLoot 68"},"childOfId":530} 
 Player 2 19:47:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":532,"_text":"Wait For Response From Player 2 "},"childOfId":530} 
 Player 2 19:47:09 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:47:09 $ACTION_MASSAGE_REMOVE:  

 {"id":532} 
 Player 2 19:47:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":533,"_text":"Wait For Response From Player 1 "},"childOfId":530} 
 Player 2 19:47:09 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:47:09 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:47:10 $ACTION_MASSAGE_REMOVE:  

 {"id":533} 
 Player 2 19:47:10 $ACTION_MASSAGE_REMOVE:  

 {"id":531} 
 Player 2 19:47:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":534,"_text":"Resolve StartTurnLoot 68 "}} 
 Player 2 19:47:10 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 19:47:10 $MOVE_CARD:  

 {"moveIndex":49,"cardId":54,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 19:47:10 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":54} 
 Player 2 19:47:10 $FLIP_CARD:  

 {"cardId":54} 
 Player 2 19:47:10 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":54} 
 Player 2 19:47:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 19:47:10 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":68,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 
 Player 2 19:47:10 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:47:10 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":68,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 
 Player 2 19:47:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":535,"_text":"Remove After Resolve StartTurnLoot 68  "}} 
 Player 2 19:47:10 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:47:10 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":68,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 
 Player 2 19:47:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":536,"_text":"Response Remove After Resolve StartTurnLoot 68"},"childOfId":535} 
 Player 2 19:47:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":537,"_text":"Wait For Response From Player 1 "},"childOfId":535} 
 Player 2 19:47:10 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:47:10 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:47:11 $ACTION_MASSAGE_REMOVE:  

 {"id":537} 
 Player 2 19:47:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":538,"_text":"Wait For Response From Player 2 "},"childOfId":535} 
 Player 2 19:47:11 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:47:11 $ACTION_MASSAGE_REMOVE:  

 {"id":538} 
 Player 2 19:47:11 $ACTION_MASSAGE_REMOVE:  

 {"id":536} 
 Player 2 19:47:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":539,"_text":"Stack Was Emptied "}} 
 Player 2 19:47:11 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:47:42 $SHOW_DECISION:  

 {"startCardId":290,"endCardId":234} 
 Player 2 19:47:45 $NEXT_STACK_ID:  
 Player 2 19:47:45 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:47:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Chub"} 
 Player 2 19:47:45 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":69,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":234,"stackEffectType":4}} 
 Player 2 19:47:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Chub"} 
 Player 2 19:47:45 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":69,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":234,"stackEffectType":4}} 
 Player 2 19:47:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":540,"_text":"Add DeclareAttack 69 "}} 
 Player 2 19:47:45 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:47:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Chub"} 
 Player 2 19:47:45 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":69,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":234,"stackEffectType":4}} 
 Player 2 19:47:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":541,"_text":"Response Adding DeclareAttack 69"},"childOfId":540} 
 Player 2 19:47:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":542,"_text":"Wait For Response From Player 2 "},"childOfId":540} 
 Player 2 19:47:45 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:47:45 $ACTION_MASSAGE_REMOVE:  

 {"id":542} 
 Player 2 19:47:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":543,"_text":"Wait For Response From Player 1 "},"childOfId":540} 
 Player 2 19:47:45 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:47:45 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:47:45 $ACTION_MASSAGE_REMOVE:  

 {"id":543} 
 Player 2 19:47:45 $ACTION_MASSAGE_REMOVE:  

 {"id":541} 
 Player 2 19:47:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":544,"_text":"Resolve DeclareAttack 69 "}} 
 Player 2 19:47:46 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":234,"particleType":5} 
 Player 2 19:47:46 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":28,"originStackId":69},"isAfterActivation":true,"index":28} 
 Player 2 19:47:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Chub"} 
 Player 2 19:47:46 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":69,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":234,"stackEffectType":4}} 
 Player 2 19:47:46 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:47:46 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":69,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":234,"stackEffectType":4}} 
 Player 2 19:47:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":545,"_text":"Remove After Resolve DeclareAttack 69  "}} 
 Player 2 19:47:46 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:47:46 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":69,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":234,"stackEffectType":4}} 
 Player 2 19:47:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":546,"_text":"Response Remove After Resolve DeclareAttack 69"},"childOfId":545} 
 Player 2 19:47:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":547,"_text":"Wait For Response From Player 1 "},"childOfId":545} 
 Player 2 19:47:46 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:47:46 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:47:46 $ACTION_MASSAGE_REMOVE:  

 {"id":547} 
 Player 2 19:47:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":548,"_text":"Wait For Response From Player 2 "},"childOfId":545} 
 Player 2 19:47:46 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:47:46 $ACTION_MASSAGE_REMOVE:  

 {"id":548} 
 Player 2 19:47:46 $ACTION_MASSAGE_REMOVE:  

 {"id":546} 
 Player 2 19:47:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":549,"_text":"Stack Was Emptied "}} 
 Player 2 19:47:46 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:47:50 $NEXT_STACK_ID:  
 Player 2 19:47:50 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:47:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Chub<Monster>"} 
 Player 2 19:47:50 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":70,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":234}} 
 Player 2 19:47:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Chub<Monster>"} 
 Player 2 19:47:50 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":70,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":234}} 
 Player 2 19:47:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":550,"_text":"Add AttackRoll 70 "}} 
 Player 2 19:47:51 $ROLL_DICE:  

 {"playerId":2} 
 Player 2 19:47:53 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":1} 
 Player 2 19:47:53 $UPDATE_STACK_VIS:  

 {"stackId":70,"text":"player rolled 1 vs Chub<Monster>"} 
 Player 2 19:47:53 $SHOW_DICE_ROLL:  

 {"stackId":70} 
 Player 2 19:47:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs Chub<Monster>"} 
 Player 2 19:47:56 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:47:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs Chub<Monster>"} 
 Player 2 19:47:56 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":70,"creatorCardId":290,"numberRolled":1,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":234}} 
 Player 2 19:47:56 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":551,"_text":"Response Adding AttackRoll 70"},"childOfId":550} 
 Player 2 19:47:56 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":552,"_text":"Wait For Response From Player 2 "},"childOfId":550} 
 Player 2 19:47:56 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:47:58 $SHOW_DECISION:  

 {"startCardId":290,"endCardId":291} 
 Player 2 19:48:01 $NEXT_STACK_ID:  
 Player 2 19:48:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs Chub<Monster>"} 
 Player 2 19:48:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs Chub<Monster> \n2:Player 2 activated The D6"} 
 Player 2 19:48:01 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":71,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 19:48:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs Chub<Monster> \n2:Player 2 activated The D6"} 
 Player 2 19:48:01 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":71,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 19:48:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":553,"_text":"Add ActivateItem 71 "}} 
 Player 2 19:48:01 $USE_ITEM:  

 {"cardId":291} 
 Player 2 19:48:01 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:48:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs Chub<Monster> \n2:Player 2 activated The D6"} 
 Player 2 19:48:01 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":71,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 19:48:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":554,"_text":"Response Adding ActivateItem 71"},"childOfId":553} 
 Player 2 19:48:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":555,"_text":"Wait For Response From Player 2 "},"childOfId":553} 
 Player 2 19:48:01 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:48:03 $ACTION_MASSAGE_REMOVE:  

 {"id":555} 
 Player 2 19:48:03 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":556,"_text":"Wait For Response From Player 1 "},"childOfId":553} 
 Player 2 19:48:03 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:48:03 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:48:03 $ACTION_MASSAGE_REMOVE:  

 {"id":556} 
 Player 2 19:48:03 $ACTION_MASSAGE_REMOVE:  

 {"id":554} 
 Player 2 19:48:03 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":557,"_text":"Resolve ActivateItem 71 "}} 
 Player 2 19:48:03 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":291,"particleType":6} 
 Player 2 19:48:05 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":291,"particleType":6} 
 Player 2 19:48:05 $ROLL_DICE:  

 {"playerId":2} 
 Player 2 19:48:07 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":5} 
 Player 2 19:48:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs Chub<Monster> \n2:Player 2 activated The D6"} 
 Player 2 19:48:07 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":71,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 19:48:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs Chub<Monster>"} 
 Player 2 19:48:07 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":71,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 19:48:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":558,"_text":"Remove After Resolve ActivateItem 71  "}} 
 Player 2 19:48:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs Chub<Monster>"} 
 Player 2 19:48:08 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":71,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 19:48:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":559,"_text":"Response Remove After Resolve ActivateItem 71"},"childOfId":558} 
 Player 2 19:48:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":560,"_text":"Wait For Response From Player 1 "},"childOfId":558} 
 Player 2 19:48:08 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:48:08 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:48:08 $ACTION_MASSAGE_REMOVE:  

 {"id":560} 
 Player 2 19:48:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":561,"_text":"Wait For Response From Player 2 "},"childOfId":558} 
 Player 2 19:48:08 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:48:10 $ACTION_MASSAGE_REMOVE:  

 {"id":561} 
 Player 2 19:48:10 $ACTION_MASSAGE_REMOVE:  

 {"id":559} 
 Player 2 19:48:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":562,"_text":"Resolve AttackRoll 70 "}} 
 Player 2 19:48:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":563,"_text":"Added -1 to original roll"}} 
 Player 2 19:48:10 $NEXT_STACK_ID:  
 Player 2 19:48:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs Chub<Monster>"} 
 Player 2 19:48:10 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:48:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Chub \n2:Player 2 rolled 1 vs Chub<Monster>"} 
 Player 2 19:48:10 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":72,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":234,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 19:48:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Chub \n2:Player 2 rolled 1 vs Chub<Monster>"} 
 Player 2 19:48:10 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":70,"creatorCardId":290,"numberRolled":5,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":234}} 
 Player 2 19:48:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Chub \n2:Player 2 rolled 1 vs Chub<Monster>"} 
 Player 2 19:48:10 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":72,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":234,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 19:48:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Chub \n2:Player 2 rolled 1 vs Chub<Monster>"} 
 Player 2 19:48:10 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":70,"creatorCardId":290,"numberRolled":5,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":234}} 
 Player 2 19:48:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Chub \n2:Player 2 rolled 1 vs Chub<Monster>"} 
 Player 2 19:48:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Chub \n2:Player 2 rolled 1 vs Chub<Monster>"} 
 Player 2 19:48:10 $REPLACE_STACK:  

 {"currentStack":[{"entityId":72,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":234,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":70,"creatorCardId":290,"numberRolled":5,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":234}]} 
 Player 2 19:48:10 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":29,"originStackId":70},"isAfterActivation":true,"index":29} 
 Player 2 19:48:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Chub \n2:Player 2 rolled 1 vs Chub<Monster>"} 
 Player 2 19:48:10 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":70,"creatorCardId":290,"numberRolled":5,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":234}} 
 Player 2 19:48:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Chub"} 
 Player 2 19:48:10 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":70,"creatorCardId":290,"numberRolled":5,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":234}} 
 Player 2 19:48:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":564,"_text":"Remove After Resolve AttackRoll 70  "}} 
 Player 2 19:48:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Chub"} 
 Player 2 19:48:10 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":70,"creatorCardId":290,"numberRolled":5,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":234}} 
 Player 2 19:48:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":565,"_text":"Response Remove After Resolve AttackRoll 70"},"childOfId":564} 
 Player 2 19:48:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":566,"_text":"Wait For Response From Player 2 "},"childOfId":564} 
 Player 2 19:48:11 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:48:12 $ACTION_MASSAGE_REMOVE:  

 {"id":566} 
 Player 2 19:48:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":567,"_text":"Wait For Response From Player 1 "},"childOfId":564} 
 Player 2 19:48:12 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:48:12 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:48:12 $ACTION_MASSAGE_REMOVE:  

 {"id":567} 
 Player 2 19:48:12 $ACTION_MASSAGE_REMOVE:  

 {"id":565} 
 Player 2 19:48:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":568,"_text":"Resolve CombatDamage 72 "}} 
 Player 2 19:48:12 $UPDATE_STACK_VIS:  

 {"stackId":72,"text":"Isaac will deal 4 combat damage to Chub"} 
 Player 2 19:48:12 $MONSTER_GET_DAMAGED:  

 {"cardId":234,"hpLeft":0,"damageDealerId":290} 
 Player 2 19:48:12 $NEXT_STACK_ID:  
 Player 2 19:48:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Chub"} 
 Player 2 19:48:12 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:48:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Chub \n2:[object Object] killed by Isaac"} 
 Player 2 19:48:13 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":73,"creatorCardId":290,"monsterToDieCardId":234,"stackEffectType":5,"killerId":290}} 
 Player 2 19:48:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Chub \n2:[object Object] killed by Isaac"} 
 Player 2 19:48:13 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":72,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":234,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 19:48:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Chub \n2:[object Object] killed by Isaac"} 
 Player 2 19:48:13 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":72,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":234,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 19:48:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Chub \n2:[object Object] killed by Isaac"} 
 Player 2 19:48:13 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":73,"creatorCardId":290,"monsterToDieCardId":234,"stackEffectType":5,"killerId":290}} 
 Player 2 19:48:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Chub \n2:[object Object] killed by Isaac"} 
 Player 2 19:48:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Chub \n2:[object Object] killed by Isaac"} 
 Player 2 19:48:13 $REPLACE_STACK:  

 {"currentStack":[{"entityId":72,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":234,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":73,"creatorCardId":290,"monsterToDieCardId":234,"stackEffectType":5,"killerId":290}]} 
 Player 2 19:48:13 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":4},{"type":0,"number":290}],"result":null,"preventMethod":false,"methodScopeId":234,"scopeIsPlayer":false,"index":30,"originStackId":-1},"isAfterActivation":true,"index":30} 
 Player 2 19:48:13 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":4},{"type":2,"number":4},{"type":0,"number":290},{"type":0,"number":234}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":31,"originStackId":72},"isAfterActivation":true,"index":31} 
 Player 2 19:48:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Chub \n2:[object Object] killed by Isaac"} 
 Player 2 19:48:13 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":72,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":234,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 19:48:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Isaac"} 
 Player 2 19:48:13 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":72,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":234,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 19:48:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":569,"_text":"Remove After Resolve CombatDamage 72  "}} 
 Player 2 19:48:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Isaac"} 
 Player 2 19:48:13 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":72,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":234,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 19:48:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":570,"_text":"Response Remove After Resolve CombatDamage 72"},"childOfId":569} 
 Player 2 19:48:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":571,"_text":"Wait For Response From Player 2 "},"childOfId":569} 
 Player 2 19:48:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:48:18 $ACTION_MASSAGE_REMOVE:  

 {"id":571} 
 Player 2 19:48:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":572,"_text":"Wait For Response From Player 1 "},"childOfId":569} 
 Player 2 19:48:18 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:48:18 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:48:19 $ACTION_MASSAGE_REMOVE:  

 {"id":572} 
 Player 2 19:48:19 $ACTION_MASSAGE_REMOVE:  

 {"id":570} 
 Player 2 19:48:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":573,"_text":"Resolve MonsterDeath 73 "}} 
 Player 2 19:48:19 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":234,"particleType":5} 
 Player 2 19:48:19 $CANCEL_ATTACK:  
 Player 2 19:48:19 $NEXT_STACK_ID:  
 Player 2 19:48:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Isaac"} 
 Player 2 19:48:19 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:48:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Chub<Monster> reward \n2:[object Object] killed by Isaac"} 
 Player 2 19:48:19 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":74,"creatorCardId":290,"monsterCardWithRewardId":234,"playerCardIdToReward":290,"stackEffectType":7}} 
 Player 2 19:48:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Chub<Monster> reward \n2:[object Object] killed by Isaac"} 
 Player 2 19:48:19 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":73,"creatorCardId":290,"monsterToDieCardId":234,"stackEffectType":5,"killerId":290}} 
 Player 2 19:48:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Chub<Monster> reward \n2:[object Object] killed by Isaac"} 
 Player 2 19:48:19 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":74,"creatorCardId":290,"monsterCardWithRewardId":234,"playerCardIdToReward":290,"stackEffectType":7}} 
 Player 2 19:48:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Chub<Monster> reward \n2:[object Object] killed by Isaac"} 
 Player 2 19:48:19 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":73,"creatorCardId":290,"monsterToDieCardId":234,"stackEffectType":5,"killerId":290}} 
 Player 2 19:48:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Chub<Monster> reward \n2:[object Object] killed by Isaac"} 
 Player 2 19:48:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Chub<Monster> reward \n2:[object Object] killed by Isaac"} 
 Player 2 19:48:19 $REPLACE_STACK:  

 {"currentStack":[{"entityId":74,"creatorCardId":290,"monsterCardWithRewardId":234,"playerCardIdToReward":290,"stackEffectType":7},{"entityId":73,"creatorCardId":290,"monsterToDieCardId":234,"stackEffectType":5,"killerId":290}]} 
 Player 2 19:48:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Chub<Monster> reward \n2:[object Object] killed by Isaac"} 
 Player 2 19:48:19 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":73,"creatorCardId":290,"monsterToDieCardId":234,"stackEffectType":5,"killerId":290}} 
 Player 2 19:48:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Chub<Monster> reward"} 
 Player 2 19:48:19 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":73,"creatorCardId":290,"monsterToDieCardId":234,"stackEffectType":5,"killerId":290}} 
 Player 2 19:48:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":574,"_text":"Remove After Resolve MonsterDeath 73  "}} 
 Player 2 19:48:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Chub<Monster> reward"} 
 Player 2 19:48:19 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":73,"creatorCardId":290,"monsterToDieCardId":234,"stackEffectType":5,"killerId":290}} 
 Player 2 19:48:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":575,"_text":"Response Remove After Resolve MonsterDeath 73"},"childOfId":574} 
 Player 2 19:48:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":576,"_text":"Wait For Response From Player 2 "},"childOfId":574} 
 Player 2 19:48:19 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:48:21 $ACTION_MASSAGE_REMOVE:  

 {"id":576} 
 Player 2 19:48:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":577,"_text":"Wait For Response From Player 1 "},"childOfId":574} 
 Player 2 19:48:21 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:48:21 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:48:21 $ACTION_MASSAGE_REMOVE:  

 {"id":577} 
 Player 2 19:48:21 $ACTION_MASSAGE_REMOVE:  

 {"id":575} 
 Player 2 19:48:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":578,"_text":"Resolve MonsterRewardStackEffect 74 "}} 
 Player 2 19:48:21 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":234,"scopeIsPlayer":false,"index":32,"originStackId":74},"isAfterActivation":true,"index":32} 
 Player 2 19:48:21 $SET_MONEY:  

 {"playerId":2,"numOfCoins":12} 
 Player 2 19:48:22 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":7}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":33,"originStackId":-1},"isAfterActivation":true,"index":33} 
 Player 2 19:48:22 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:48:22 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:48:22 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":74,"creatorCardId":290,"monsterCardWithRewardId":234,"playerCardIdToReward":290,"stackEffectType":7}} 
 Player 2 19:48:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":579,"_text":"Fizzle MonsterRewardStackEffect 74"}} 
 Player 2 19:48:22 $FIZZLE_STACK_EFFECT:  

 {"entityId":74} 
 Player 2 19:48:22 $MOVE_CARD:  

 {"moveIndex":50,"cardId":234,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"soulsLayout"} 
 Player 2 19:48:22 $GET_SOUL:  

 {"playerId":2,"cardId":234} 
 Player 2 19:48:22 $REMOVE_FROM_PASSIVE_MANAGER:  

 {"cardId":234} 
 Player 2 19:48:22 $REMOVE_MONSTER:  

 {"holderId":3,"monsterId":234} 
 Player 2 19:48:22 $GET_NEXT_MONSTER:  

 {"monsterPlaceId":3} 
 Player 2 19:48:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":580,"_text":"Stack Was Emptied "}} 
 Player 2 19:48:22 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:48:22 $ACTION_MASSAGE_REMOVE:  

 {"id":552} 
 Player 2 19:48:22 $ACTION_MASSAGE_REMOVE:  

 {"id":551} 
 Player 2 19:48:28 $SHOW_DECISION:  

 {"startCardId":290,"endCardId":144} 
 Player 2 19:48:31 $NEXT_STACK_ID:  
 Player 2 19:48:31 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:48:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 
 Player 2 19:48:31 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":75,"creatorCardId":290,"itemToPurchaseCardId":144,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 
 Player 2 19:48:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 
 Player 2 19:48:31 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":75,"creatorCardId":290,"itemToPurchaseCardId":144,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 
 Player 2 19:48:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":581,"_text":"Add PurchaseItem 75 "}} 
 Player 2 19:48:31 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:48:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 
 Player 2 19:48:31 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":75,"creatorCardId":290,"itemToPurchaseCardId":144,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 
 Player 2 19:48:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":582,"_text":"Response Adding PurchaseItem 75"},"childOfId":581} 
 Player 2 19:48:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":583,"_text":"Wait For Response From Player 2 "},"childOfId":581} 
 Player 2 19:48:31 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:48:32 $ACTION_MASSAGE_REMOVE:  

 {"id":583} 
 Player 2 19:48:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":584,"_text":"Wait For Response From Player 1 "},"childOfId":581} 
 Player 2 19:48:32 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:48:32 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:48:33 $ACTION_MASSAGE_REMOVE:  

 {"id":584} 
 Player 2 19:48:33 $ACTION_MASSAGE_REMOVE:  

 {"id":582} 
 Player 2 19:48:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":585,"_text":"Resolve PurchaseItem 75 "}} 
 Player 2 19:48:33 $SET_MONEY:  

 {"playerId":2,"numOfCoins":2} 
 Player 2 19:48:33 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-10}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":34,"originStackId":-1},"isAfterActivation":true,"index":34} 
 Player 2 19:48:33 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 19:48:33 $MOVE_CARD:  

 {"moveIndex":51,"cardId":220,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 
 Player 2 19:48:33 $ADD_AN_ITEM:  

 {"playerId":2,"cardId":220,"isReward":false} 
 Player 2 19:48:33 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":220}],"result":true,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":35,"originStackId":-1},"isAfterActivation":true,"index":35} 
 Player 2 19:48:33 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:48:33 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":75,"creatorCardId":290,"itemToPurchaseCardId":144,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 
 Player 2 19:48:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":586,"_text":"Remove After Resolve PurchaseItem 75  "}} 
 Player 2 19:48:33 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:48:33 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":75,"creatorCardId":290,"itemToPurchaseCardId":144,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 
 Player 2 19:48:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":587,"_text":"Response Remove After Resolve PurchaseItem 75"},"childOfId":586} 
 Player 2 19:48:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":588,"_text":"Wait For Response From Player 1 "},"childOfId":586} 
 Player 2 19:48:33 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:48:34 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:48:34 $ACTION_MASSAGE_REMOVE:  

 {"id":588} 
 Player 2 19:48:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":589,"_text":"Wait For Response From Player 2 "},"childOfId":586} 
 Player 2 19:48:34 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:48:34 $ACTION_MASSAGE_REMOVE:  

 {"id":589} 
 Player 2 19:48:34 $ACTION_MASSAGE_REMOVE:  

 {"id":587} 
 Player 2 19:48:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":590,"_text":"Stack Was Emptied "}} 
 Player 2 19:48:34 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:48:38 $SHOW_DECISION:  

 {"startCardId":290,"endCardId":220} 
 Player 2 19:48:41 $NEXT_STACK_ID:  
 Player 2 19:48:42 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:48:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated The D20"} 
 Player 2 19:48:42 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":76,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":220,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 19:48:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated The D20"} 
 Player 2 19:48:42 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":76,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":220,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 19:48:42 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":591,"_text":"Add ActivateItem 76 "}} 
 Player 2 19:48:42 $USE_ITEM:  

 {"cardId":220} 
 Player 2 19:48:42 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:48:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated The D20"} 
 Player 2 19:48:42 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":76,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":220,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 19:48:42 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":592,"_text":"Response Adding ActivateItem 76"},"childOfId":591} 
 Player 2 19:48:42 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":593,"_text":"Wait For Response From Player 2 "},"childOfId":591} 
 Player 2 19:48:42 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:48:42 $ACTION_MASSAGE_REMOVE:  

 {"id":593} 
 Player 2 19:48:42 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":594,"_text":"Wait For Response From Player 1 "},"childOfId":591} 
 Player 2 19:48:42 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:48:42 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:48:42 $ACTION_MASSAGE_REMOVE:  

 {"id":594} 
 Player 2 19:48:42 $ACTION_MASSAGE_REMOVE:  

 {"id":592} 
 Player 2 19:48:42 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":595,"_text":"Resolve ActivateItem 76 "}} 
 Player 2 19:48:42 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":220,"particleType":6} 
 Player 2 19:48:44 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":220,"particleType":6} 
 Player 2 19:48:44 $LOG_ERROR:  

 {"message":"\"Cannot read property 'getTarget' of undefined\"","stack":"\"TypeError: Cannot read property 'getTarget' of undefined\\n    at RerollItem.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardEffects/RerollItem.js:31:43)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\\n    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\\n    at new Promise (<anonymous>)\\n    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\\n    at RerollItem.doEffect (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardEffects/RerollItem.js:26:16)\\n    at CardEffect.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/CardEffect.js:232:59)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\""} 
 Player 2 19:48:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated The D20"} 
 Player 2 19:48:45 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":76,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":220,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 19:48:45 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:48:45 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":76,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":220,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 19:48:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":596,"_text":"Remove After Resolve ActivateItem 76  "}} 
 Player 2 19:48:45 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:48:45 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":76,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":220,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 19:48:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":597,"_text":"Response Remove After Resolve ActivateItem 76"},"childOfId":596} 
 Player 2 19:48:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":598,"_text":"Wait For Response From Player 1 "},"childOfId":596} 
 Player 2 19:48:45 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:48:46 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:48:46 $ACTION_MASSAGE_REMOVE:  

 {"id":598} 
 Player 2 19:48:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":599,"_text":"Wait For Response From Player 2 "},"childOfId":596} 
 Player 2 19:48:47 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:48:47 $ACTION_MASSAGE_REMOVE:  

 {"id":599} 
 Player 2 19:48:47 $ACTION_MASSAGE_REMOVE:  

 {"id":597} 
 Player 2 19:48:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":600,"_text":"Stack Was Emptied "}} 
 Player 2 19:48:47 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:50:11 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:50:12 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:50:12 $REPLACE_STACK:  

 {"currentStack":[]} 
 Player 2 19:50:12 $END_TURN:  
 Player 2 19:50:12 $SET_TURN:  

 {"playerId":1} 
 Player 2 19:50:12 $START_TURN:  

 {"playerId":1} 
 Player 2 19:50:14 $STACK_EMPTIED:  

 {"playerId":1} 
 Player 2 19:50:14 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:50:14 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:50:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 19:50:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 19:50:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 19:50:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 19:50:14 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:50:14 $MOVE_CARD_END:  

 {"moveIndex":52,"cardId":122,"flipIfFlipped":false,"playerId":1} 
 Player 2 19:50:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 19:50:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 19:50:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 19:50:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 19:50:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 19:50:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 19:50:15 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:50:32 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:50:32 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:50:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Purple Heart "} 
 Player 2 19:50:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Purple Heart "} 
 Player 2 19:50:32 $MOVE_CARD_END:  

 {"moveIndex":53,"cardId":122,"flipIfFlipped":true,"playerId":1} 
 Player 2 19:50:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Purple Heart "} 
 Player 2 19:50:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Purple Heart "} 
 Player 2 19:50:32 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:50:35 $MOVE_CARD_END:  

 {"moveIndex":54,"cardId":122,"flipIfFlipped":true,"playerId":1} 
 Player 2 19:50:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Purple Heart "} 
 Player 2 19:50:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Purple Heart "} 
 Player 2 19:50:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Purple Heart "} 
 Player 2 19:50:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Purple Heart "} 
 Player 2 19:50:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Purple Heart "} 
 Player 2 19:50:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Purple Heart "} 
 Player 2 19:50:36 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:50:52 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:50:52 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:50:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Samson"} 
 Player 2 19:50:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Samson"} 
 Player 2 19:50:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Samson"} 
 Player 2 19:50:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Samson"} 
 Player 2 19:50:57 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:51:00 $MOVE_CARD_END:  

 {"moveIndex":55,"cardId":116,"flipIfFlipped":true,"playerId":1} 
 Player 2 19:51:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Samson"} 
 Player 2 19:51:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Samson"} 
 Player 2 19:51:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Pill Purple "} 
 Player 2 19:51:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Pill Purple "} 
 Player 2 19:51:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Pill Purple "} 
 Player 2 19:51:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Pill Purple "} 
 Player 2 19:51:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Pill Purple "} 
 Player 2 19:51:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Pill Purple "} 
 Player 2 19:51:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Pill Purple "} 
 Player 2 19:51:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Pill Purple "} 
 Player 2 19:51:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Pill Purple "} 
 Player 2 19:51:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Pill Purple "} 
 Player 2 19:51:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 activated Samson"} 
 Player 2 19:51:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 activated Samson"} 
 Player 2 19:51:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 activated Samson"} 
 Player 2 19:51:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 activated Samson"} 
 Player 2 19:51:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 activated Samson"} 
 Player 2 19:51:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 activated Samson"} 
 Player 2 19:51:01 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:51:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Pill Purple "} 
 Player 2 19:51:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Pill Purple "} 
 Player 2 19:51:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Pill Purple "} 
 Player 2 19:51:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Pill Purple "} 
 Player 2 19:51:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 roll a dice"} 
 Player 2 19:51:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 roll a dice"} 
 Player 2 19:51:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 roll a dice"} 
 Player 2 19:51:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 roll a dice"} 
 Player 2 19:51:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 roll a dice"} 
 Player 2 19:51:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 roll a dice"} 
 Player 2 19:51:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 roll a dice"} 
 Player 2 19:51:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 roll a dice"} 
 Player 2 19:51:07 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:51:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 roll a dice"} 
 Player 2 19:51:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 roll a dice"} 
 Player 2 19:51:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 roll a dice"} 
 Player 2 19:51:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 roll a dice"} 
 Player 2 19:51:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 roll a dice"} 
 Player 2 19:51:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 roll a dice"} 
 Player 2 19:51:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 roll a dice"} 
 Player 2 19:51:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 roll a dice"} 
 Player 2 19:51:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 roll a dice"} 
 Player 2 19:51:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 roll a dice"} 
 Player 2 19:51:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 roll a dice"} 
 Player 2 19:51:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 roll a dice"} 
 Player 2 19:51:08 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:51:10 $MOVE_CARD_END:  

 {"moveIndex":56,"cardId":116,"flipIfFlipped":true,"playerId":1} 
 Player 2 19:51:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Pill Purple "} 
 Player 2 19:51:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Pill Purple "} 
 Player 2 19:51:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Pill Purple "} 
 Player 2 19:51:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Pill Purple "} 
 Player 2 19:51:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Pill Purple "} 
 Player 2 19:51:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Pill Purple "} 
 Player 2 19:51:11 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:51:16 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:51:16 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:51:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 19:51:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 19:51:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 19:51:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 19:51:20 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:51:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 19:51:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 19:51:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 19:51:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 19:51:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 19:51:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 19:51:23 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:51:28 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:51:28 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:51:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Monster Deck"} 
 Player 2 19:51:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Monster Deck"} 
 Player 2 19:51:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Monster Deck"} 
 Player 2 19:51:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Monster Deck"} 
 Player 2 19:51:28 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:51:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Monster Deck"} 
 Player 2 19:51:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Monster Deck"} 
 Player 2 19:51:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Cod Worm"} 
 Player 2 19:51:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Cod Worm"} 
 Player 2 19:51:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Cod Worm"} 
 Player 2 19:51:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Cod Worm"} 
 Player 2 19:51:47 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:51:57 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:51:57 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:51:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster>"} 
 Player 2 19:51:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster>"} 
 Player 2 19:52:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster>"} 
 Player 2 19:52:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster>"} 
 Player 2 19:52:02 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:52:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster>"} 
 Player 2 19:52:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster>"} 
 Player 2 19:52:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cod Worm combat damage to Samson"} 
 Player 2 19:52:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cod Worm combat damage to Samson"} 
 Player 2 19:52:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cod Worm combat damage to Samson"} 
 Player 2 19:52:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cod Worm combat damage to Samson"} 
 Player 2 19:52:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cod Worm combat damage to Samson"} 
 Player 2 19:52:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cod Worm combat damage to Samson"} 
 Player 2 19:52:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cod Worm combat damage to Samson"} 
 Player 2 19:52:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cod Worm combat damage to Samson"} 
 Player 2 19:52:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cod Worm combat damage to Samson"} 
 Player 2 19:52:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cod Worm combat damage to Samson"} 
 Player 2 19:52:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cod Worm combat damage to Samson \n2:Player 1 is rolling against Cod Worm<Monster>"} 
 Player 2 19:52:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cod Worm combat damage to Samson \n2:Player 1 is rolling against Cod Worm<Monster>"} 
 Player 2 19:52:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cod Worm combat damage to Samson \n2:Player 1 is rolling against Cod Worm<Monster>"} 
 Player 2 19:52:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cod Worm combat damage to Samson \n2:Player 1 is rolling against Cod Worm<Monster>"} 
 Player 2 19:52:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cod Worm combat damage to Samson \n2:Player 1 is rolling against Cod Worm<Monster>"} 
 Player 2 19:52:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cod Worm combat damage to Samson \n2:Player 1 is rolling against Cod Worm<Monster>"} 
 Player 2 19:52:03 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:52:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cod Worm combat damage to Samson"} 
 Player 2 19:52:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cod Worm combat damage to Samson"} 
 Player 2 19:52:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cod Worm combat damage to Samson"} 
 Player 2 19:52:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cod Worm combat damage to Samson"} 
 Player 2 19:52:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cod Worm combat damage to Samson"} 
 Player 2 19:52:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cod Worm combat damage to Samson"} 
 Player 2 19:52:04 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:52:17 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:52:17 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:52:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster>"} 
 Player 2 19:52:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster>"} 
 Player 2 19:52:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster>"} 
 Player 2 19:52:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster>"} 
 Player 2 19:52:22 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:52:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster>"} 
 Player 2 19:52:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster>"} 
 Player 2 19:52:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cod Worm combat damage to Samson"} 
 Player 2 19:52:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cod Worm combat damage to Samson"} 
 Player 2 19:52:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cod Worm combat damage to Samson"} 
 Player 2 19:52:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cod Worm combat damage to Samson"} 
 Player 2 19:52:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cod Worm combat damage to Samson"} 
 Player 2 19:52:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cod Worm combat damage to Samson"} 
 Player 2 19:52:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cod Worm combat damage to Samson"} 
 Player 2 19:52:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cod Worm combat damage to Samson"} 
 Player 2 19:52:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cod Worm combat damage to Samson"} 
 Player 2 19:52:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cod Worm combat damage to Samson"} 
 Player 2 19:52:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cod Worm combat damage to Samson \n2:Player 1 is rolling against Cod Worm<Monster>"} 
 Player 2 19:52:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cod Worm combat damage to Samson \n2:Player 1 is rolling against Cod Worm<Monster>"} 
 Player 2 19:52:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cod Worm combat damage to Samson \n2:Player 1 is rolling against Cod Worm<Monster>"} 
 Player 2 19:52:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cod Worm combat damage to Samson \n2:Player 1 is rolling against Cod Worm<Monster>"} 
 Player 2 19:52:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cod Worm combat damage to Samson \n2:Player 1 is rolling against Cod Worm<Monster>"} 
 Player 2 19:52:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cod Worm combat damage to Samson \n2:Player 1 is rolling against Cod Worm<Monster>"} 
 Player 2 19:52:23 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:52:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cod Worm combat damage to Samson"} 
 Player 2 19:52:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cod Worm combat damage to Samson"} 
 Player 2 19:52:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cod Worm combat damage to Samson"} 
 Player 2 19:52:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cod Worm combat damage to Samson"} 
 Player 2 19:52:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cod Worm combat damage to Samson"} 
 Player 2 19:52:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cod Worm combat damage to Samson"} 
 Player 2 19:52:24 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:52:43 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:52:43 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:52:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster>"} 
 Player 2 19:52:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster>"} 
 Player 2 19:52:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster>"} 
 Player 2 19:52:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster>"} 
 Player 2 19:52:47 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:52:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster>"} 
 Player 2 19:52:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster>"} 
 Player 2 19:52:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Cod Worm"} 
 Player 2 19:52:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Cod Worm"} 
 Player 2 19:52:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Cod Worm"} 
 Player 2 19:52:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Cod Worm"} 
 Player 2 19:52:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Cod Worm"} 
 Player 2 19:52:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Cod Worm"} 
 Player 2 19:52:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Cod Worm"} 
 Player 2 19:52:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Cod Worm"} 
 Player 2 19:52:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Cod Worm"} 
 Player 2 19:52:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Cod Worm"} 
 Player 2 19:52:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster>"} 
 Player 2 19:52:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster>"} 
 Player 2 19:52:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 
 Player 2 19:52:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 
 Player 2 19:52:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 
 Player 2 19:52:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 
 Player 2 19:52:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 
 Player 2 19:52:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 
 Player 2 19:52:48 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":91,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"effectToDo":{"effectName":"DealDamage","cardEffectNum":2,"cardPlayerId":2,"cardId":181,"effctType":0},"isAfterActivation":true,"index":22,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 19:52:48 $END_PUT_ON_STACK:  

 {"playerId":1} 
 Player 2 19:52:49 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:52:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 
 Player 2 19:52:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 
 Player 2 19:52:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 
 Player 2 19:52:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 
 Player 2 19:52:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 
 Player 2 19:52:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 
 Player 2 19:52:49 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":181,"particleType":6} 
 Player 2 19:52:51 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":181,"particleType":6} 
 Player 2 19:52:51 $PLAYER_GET_HIT:  

 {"playerId":1,"damage":1,"damageDealerId":290} 
 Player 2 19:52:51 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":290}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":36,"originStackId":-1},"isAfterActivation":true,"index":36} 
 Player 2 19:52:51 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":{"type":2,"number":6}},{"type":2,"number":{"type":2,"number":1}},{"type":2,"number":{"type":2,"number":5}}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":22},"isAfterActivation":true,"index":22} 
 Player 2 19:52:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 
 Player 2 19:52:51 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":91,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"isAfterActivation":true,"index":22,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 19:52:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 
 Player 2 19:52:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 
 Player 2 19:52:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 
 Player 2 19:52:51 $FINISH_DO_STACK_EFFECT:  

 {"playerId":1,"newStack":[{"entityId":90,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":236,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":89,"creatorCardId":296,"numberRolled":3,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":236},{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":91,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"isAfterActivation":true,"index":22,"hasDataBeenCollectedYet":true,"stackEffectType":14}]} 
 Player 2 19:52:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 
 Player 2 19:52:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 
 Player 2 19:52:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 
 Player 2 19:52:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 
 Player 2 19:52:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 
 Player 2 19:52:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 
 Player 2 19:52:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 
 Player 2 19:52:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 
 Player 2 19:52:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 
 Player 2 19:52:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 
 Player 2 19:52:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 
 Player 2 19:52:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 
 Player 2 19:52:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 
 Player 2 19:52:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 
 Player 2 19:52:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 
 Player 2 19:52:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 
 Player 2 19:52:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 
 Player 2 19:52:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 
 Player 2 19:52:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 
 Player 2 19:52:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 
 Player 2 19:52:53 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:52:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster>"} 
 Player 2 19:52:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster>"} 
 Player 2 19:52:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster>"} 
 Player 2 19:52:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster>"} 
 Player 2 19:52:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster>"} 
 Player 2 19:52:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster>"} 
 Player 2 19:52:53 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:52:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Cod Worm"} 
 Player 2 19:52:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Cod Worm"} 
 Player 2 19:52:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 19:52:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 19:52:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 19:52:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 19:52:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 19:52:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 19:52:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 19:52:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 19:52:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 19:52:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 19:52:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Cod Worm \n2:[object Object] killed by Samson"} 
 Player 2 19:52:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Cod Worm \n2:[object Object] killed by Samson"} 
 Player 2 19:52:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Cod Worm \n2:[object Object] killed by Samson"} 
 Player 2 19:52:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Cod Worm \n2:[object Object] killed by Samson"} 
 Player 2 19:52:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Cod Worm \n2:[object Object] killed by Samson"} 
 Player 2 19:52:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Cod Worm \n2:[object Object] killed by Samson"} 
 Player 2 19:52:55 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:52:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 19:52:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 19:52:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Cod Worm<Monster> reward"} 
 Player 2 19:52:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Cod Worm<Monster> reward"} 
 Player 2 19:52:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Cod Worm<Monster> reward"} 
 Player 2 19:52:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Cod Worm<Monster> reward"} 
 Player 2 19:52:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Cod Worm<Monster> reward"} 
 Player 2 19:52:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Cod Worm<Monster> reward"} 
 Player 2 19:52:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Cod Worm<Monster> reward"} 
 Player 2 19:52:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Cod Worm<Monster> reward"} 
 Player 2 19:52:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Cod Worm<Monster> reward"} 
 Player 2 19:52:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Cod Worm<Monster> reward"} 
 Player 2 19:52:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Cod Worm<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 2 19:52:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Cod Worm<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 2 19:52:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Cod Worm<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 2 19:52:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Cod Worm<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 2 19:52:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Cod Worm<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 2 19:52:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Cod Worm<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 2 19:52:56 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:52:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Cod Worm<Monster> reward"} 
 Player 2 19:52:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Cod Worm<Monster> reward"} 
 Player 2 19:52:57 $STACK_EMPTIED:  

 {"playerId":1} 
 Player 2 19:52:57 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:52:57 $MOVE_CARD_END:  

 {"moveIndex":57,"cardId":236,"flipIfFlipped":true,"playerId":1} 
 Player 2 19:53:43 $STACK_EMPTIED:  

 {"playerId":1} 
 Player 2 19:53:43 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:53:43 $RECHARGE_ITEM:  

 {"cardId":291} 
 Player 2 19:53:43 $PLAYER_RECHARGE_ITEM:  

 {"playerId":2,"cardId":291} 
 Player 2 19:53:43 $RECHARGE_ITEM:  

 {"cardId":220} 
 Player 2 19:53:43 $PLAYER_RECHARGE_ITEM:  

 {"playerId":2,"cardId":220} 
 Player 2 19:53:43 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:53:43 $NEXT_STACK_ID:  
 Player 2 19:53:43 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:53:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 19:53:43 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":94,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 
 Player 2 19:53:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 19:53:43 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":94,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 
 Player 2 19:53:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":731,"_text":"Add StartTurnLoot 94 "}} 
 Player 2 19:53:43 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:53:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 19:53:43 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":94,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 
 Player 2 19:53:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":732,"_text":"Response Adding StartTurnLoot 94"},"childOfId":731} 
 Player 2 19:53:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":733,"_text":"Wait For Response From Player 2 "},"childOfId":731} 
 Player 2 19:53:43 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:53:43 $ACTION_MASSAGE_REMOVE:  

 {"id":733} 
 Player 2 19:53:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":734,"_text":"Wait For Response From Player 1 "},"childOfId":731} 
 Player 2 19:53:43 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:53:43 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:53:44 $ACTION_MASSAGE_REMOVE:  

 {"id":734} 
 Player 2 19:53:44 $ACTION_MASSAGE_REMOVE:  

 {"id":732} 
 Player 2 19:53:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":735,"_text":"Resolve StartTurnLoot 94 "}} 
 Player 2 19:53:44 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 19:53:44 $MOVE_CARD:  

 {"moveIndex":58,"cardId":15,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 19:53:44 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":15} 
 Player 2 19:53:44 $FLIP_CARD:  

 {"cardId":15} 
 Player 2 19:53:44 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":15} 
 Player 2 19:53:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 19:53:44 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":94,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 
 Player 2 19:53:44 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:53:44 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":94,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 
 Player 2 19:53:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":736,"_text":"Remove After Resolve StartTurnLoot 94  "}} 
 Player 2 19:53:44 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:53:44 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":94,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 
 Player 2 19:53:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":737,"_text":"Response Remove After Resolve StartTurnLoot 94"},"childOfId":736} 
 Player 2 19:53:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":738,"_text":"Wait For Response From Player 1 "},"childOfId":736} 
 Player 2 19:53:44 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:53:44 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:53:45 $ACTION_MASSAGE_REMOVE:  

 {"id":738} 
 Player 2 19:53:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":739,"_text":"Wait For Response From Player 2 "},"childOfId":736} 
 Player 2 19:53:45 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:53:45 $ACTION_MASSAGE_REMOVE:  

 {"id":739} 
 Player 2 19:53:45 $ACTION_MASSAGE_REMOVE:  

 {"id":737} 
 Player 2 19:53:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":740,"_text":"Stack Was Emptied "}} 
 Player 2 19:53:45 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:54:45 $SHOW_DECISION:  

 {"startCardId":290,"endCardId":227} 
 Player 2 19:54:48 $NEXT_STACK_ID:  
 Player 2 19:54:48 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:54:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck"} 
 Player 2 19:54:48 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":95,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":227,"stackEffectType":4}} 
 Player 2 19:54:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck"} 
 Player 2 19:54:48 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":95,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":227,"stackEffectType":4}} 
 Player 2 19:54:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":741,"_text":"Add DeclareAttack 95 "}} 
 Player 2 19:54:48 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:54:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck"} 
 Player 2 19:54:48 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":95,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":227,"stackEffectType":4}} 
 Player 2 19:54:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":742,"_text":"Response Adding DeclareAttack 95"},"childOfId":741} 
 Player 2 19:54:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":743,"_text":"Wait For Response From Player 2 "},"childOfId":741} 
 Player 2 19:54:48 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:54:48 $ACTION_MASSAGE_REMOVE:  

 {"id":743} 
 Player 2 19:54:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":744,"_text":"Wait For Response From Player 1 "},"childOfId":741} 
 Player 2 19:54:49 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:54:49 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:54:49 $ACTION_MASSAGE_REMOVE:  

 {"id":744} 
 Player 2 19:54:49 $ACTION_MASSAGE_REMOVE:  

 {"id":742} 
 Player 2 19:54:49 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":745,"_text":"Resolve DeclareAttack 95 "}} 
 Player 2 19:54:49 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 19:54:49 $SHOW_CARD_PREVIEW:  

 {"cardToShowId":274,"playerId":2} 
 Player 2 19:54:57 $FLIP_CARD:  

 {"cardId":274} 
 Player 2 19:54:57 $ADD_MONSTER:  

 {"monsterPlaceId":2,"monsterId":274} 
 Player 2 19:54:57 $NEW_MONSTER_ON_PLACE:  

 {"cardId":274,"monsterPlaceId":2} 
 Player 2 19:54:57 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":274,"particleType":5} 
 Player 2 19:54:57 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":37,"originStackId":95},"isAfterActivation":true,"index":37} 
 Player 2 19:54:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck"} 
 Player 2 19:54:57 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":95,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":274,"stackEffectType":4}} 
 Player 2 19:54:57 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:54:57 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":95,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":274,"stackEffectType":4}} 
 Player 2 19:54:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":746,"_text":"Remove After Resolve DeclareAttack 95  "}} 
 Player 2 19:54:57 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:54:57 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":95,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":274,"stackEffectType":4}} 
 Player 2 19:54:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":747,"_text":"Response Remove After Resolve DeclareAttack 95"},"childOfId":746} 
 Player 2 19:54:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":748,"_text":"Wait For Response From Player 1 "},"childOfId":746} 
 Player 2 19:54:57 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:54:57 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:54:58 $ACTION_MASSAGE_REMOVE:  

 {"id":748} 
 Player 2 19:54:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":749,"_text":"Wait For Response From Player 2 "},"childOfId":746} 
 Player 2 19:54:58 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:54:58 $ACTION_MASSAGE_REMOVE:  

 {"id":749} 
 Player 2 19:54:58 $ACTION_MASSAGE_REMOVE:  

 {"id":747} 
 Player 2 19:54:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":750,"_text":"Stack Was Emptied "}} 
 Player 2 19:54:58 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:55:03 $NEXT_STACK_ID:  
 Player 2 19:55:03 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:55:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 
 Player 2 19:55:03 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":96,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 
 Player 2 19:55:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 
 Player 2 19:55:03 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":96,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 
 Player 2 19:55:03 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":751,"_text":"Add AttackRoll 96 "}} 
 Player 2 19:55:03 $ROLL_DICE:  

 {"playerId":2} 
 Player 2 19:55:05 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":4} 
 Player 2 19:55:05 $UPDATE_STACK_VIS:  

 {"stackId":96,"text":"player rolled 4 vs The Cage<Monster>"} 
 Player 2 19:55:05 $SHOW_DICE_ROLL:  

 {"stackId":96} 
 Player 2 19:55:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 4 vs The Cage<Monster>"} 
 Player 2 19:55:08 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:55:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 4 vs The Cage<Monster>"} 
 Player 2 19:55:08 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":96,"creatorCardId":290,"numberRolled":4,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 
 Player 2 19:55:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":752,"_text":"Response Adding AttackRoll 96"},"childOfId":751} 
 Player 2 19:55:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":753,"_text":"Wait For Response From Player 2 "},"childOfId":751} 
 Player 2 19:55:08 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:55:10 $SHOW_DECISION:  

 {"startCardId":290,"endCardId":291} 
 Player 2 19:55:13 $NEXT_STACK_ID:  
 Player 2 19:55:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 4 vs The Cage<Monster>"} 
 Player 2 19:55:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 4 vs The Cage<Monster> \n2:Player 2 activated The D6"} 
 Player 2 19:55:13 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":97,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 19:55:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 4 vs The Cage<Monster> \n2:Player 2 activated The D6"} 
 Player 2 19:55:13 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":97,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 19:55:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":754,"_text":"Add ActivateItem 97 "}} 
 Player 2 19:55:14 $USE_ITEM:  

 {"cardId":291} 
 Player 2 19:55:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:55:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 4 vs The Cage<Monster> \n2:Player 2 activated The D6"} 
 Player 2 19:55:14 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":97,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 19:55:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":755,"_text":"Response Adding ActivateItem 97"},"childOfId":754} 
 Player 2 19:55:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":756,"_text":"Wait For Response From Player 2 "},"childOfId":754} 
 Player 2 19:55:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:55:16 $ACTION_MASSAGE_REMOVE:  

 {"id":756} 
 Player 2 19:55:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":757,"_text":"Wait For Response From Player 1 "},"childOfId":754} 
 Player 2 19:55:16 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:55:16 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:55:16 $ACTION_MASSAGE_REMOVE:  

 {"id":757} 
 Player 2 19:55:16 $ACTION_MASSAGE_REMOVE:  

 {"id":755} 
 Player 2 19:55:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":758,"_text":"Resolve ActivateItem 97 "}} 
 Player 2 19:55:16 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":291,"particleType":6} 
 Player 2 19:55:18 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":291,"particleType":6} 
 Player 2 19:55:18 $ROLL_DICE:  

 {"playerId":2} 
 Player 2 19:55:19 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":0} 
 Player 2 19:55:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 4 vs The Cage<Monster> \n2:Player 2 activated The D6"} 
 Player 2 19:55:19 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":97,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 19:55:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 4 vs The Cage<Monster>"} 
 Player 2 19:55:19 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":97,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 19:55:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":759,"_text":"Remove After Resolve ActivateItem 97  "}} 
 Player 2 19:55:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 4 vs The Cage<Monster>"} 
 Player 2 19:55:20 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":97,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 19:55:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":760,"_text":"Response Remove After Resolve ActivateItem 97"},"childOfId":759} 
 Player 2 19:55:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":761,"_text":"Wait For Response From Player 1 "},"childOfId":759} 
 Player 2 19:55:20 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:55:20 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:55:20 $ACTION_MASSAGE_REMOVE:  

 {"id":761} 
 Player 2 19:55:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":762,"_text":"Wait For Response From Player 2 "},"childOfId":759} 
 Player 2 19:55:20 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:55:24 $ACTION_MASSAGE_REMOVE:  

 {"id":762} 
 Player 2 19:55:24 $ACTION_MASSAGE_REMOVE:  

 {"id":760} 
 Player 2 19:55:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":763,"_text":"Resolve AttackRoll 96 "}} 
 Player 2 19:55:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":764,"_text":"Added -1 to original roll"}} 
 Player 2 19:55:25 $NEXT_STACK_ID:  
 Player 2 19:55:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 4 vs The Cage<Monster>"} 
 Player 2 19:55:25 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:55:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage combat damage to Isaac \n2:Player 2 rolled 4 vs The Cage<Monster>"} 
 Player 2 19:55:25 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":98,"creatorCardId":290,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 19:55:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage combat damage to Isaac \n2:Player 2 rolled 4 vs The Cage<Monster>"} 
 Player 2 19:55:25 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":96,"creatorCardId":290,"numberRolled":0,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 
 Player 2 19:55:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage combat damage to Isaac \n2:Player 2 rolled 4 vs The Cage<Monster>"} 
 Player 2 19:55:25 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":98,"creatorCardId":290,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 19:55:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage combat damage to Isaac \n2:Player 2 rolled 4 vs The Cage<Monster>"} 
 Player 2 19:55:25 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":96,"creatorCardId":290,"numberRolled":0,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 
 Player 2 19:55:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage combat damage to Isaac \n2:Player 2 rolled 4 vs The Cage<Monster>"} 
 Player 2 19:55:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage combat damage to Isaac \n2:Player 2 rolled 4 vs The Cage<Monster>"} 
 Player 2 19:55:25 $REPLACE_STACK:  

 {"currentStack":[{"entityId":98,"creatorCardId":290,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":96,"creatorCardId":290,"numberRolled":0,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}]} 
 Player 2 19:55:25 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":38,"originStackId":96},"isAfterActivation":true,"index":38} 
 Player 2 19:55:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage combat damage to Isaac \n2:Player 2 rolled 4 vs The Cage<Monster>"} 
 Player 2 19:55:25 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":96,"creatorCardId":290,"numberRolled":0,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 
 Player 2 19:55:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage combat damage to Isaac"} 
 Player 2 19:55:25 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":96,"creatorCardId":290,"numberRolled":0,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 
 Player 2 19:55:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":765,"_text":"Remove After Resolve AttackRoll 96  "}} 
 Player 2 19:55:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage combat damage to Isaac"} 
 Player 2 19:55:25 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":96,"creatorCardId":290,"numberRolled":0,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 
 Player 2 19:55:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":766,"_text":"Response Remove After Resolve AttackRoll 96"},"childOfId":765} 
 Player 2 19:55:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":767,"_text":"Wait For Response From Player 2 "},"childOfId":765} 
 Player 2 19:55:25 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:55:26 $ACTION_MASSAGE_REMOVE:  

 {"id":767} 
 Player 2 19:55:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":768,"_text":"Wait For Response From Player 1 "},"childOfId":765} 
 Player 2 19:55:27 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:55:27 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:55:27 $ACTION_MASSAGE_REMOVE:  

 {"id":768} 
 Player 2 19:55:27 $ACTION_MASSAGE_REMOVE:  

 {"id":766} 
 Player 2 19:55:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":769,"_text":"Resolve CombatDamage 98 "}} 
 Player 2 19:55:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage 1 combat damage to Isaac"} 
 Player 2 19:55:27 $UPDATE_STACK_VIS:  

 {"stackId":98,"text":"The Cage will deal 1 combat damage to Isaac"} 
 Player 2 19:55:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage 1 combat damage to Isaac"} 
 Player 2 19:55:27 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":274}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":false,"index":2} 
 Player 2 19:55:27 $NEXT_STACK_ID:  
 Player 2 19:55:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage 1 combat damage to Isaac"} 
 Player 2 19:55:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 
 Player 2 19:55:27 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":99,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 19:55:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 
 Player 2 19:55:27 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":99,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 19:55:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":770,"_text":"Add ActivatePassiveEffect 99 "}} 
 Player 2 19:55:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 
 Player 2 19:55:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 
 Player 2 19:55:27 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":99,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 19:55:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":771,"_text":"Response Adding ActivatePassiveEffect 99"},"childOfId":770} 
 Player 2 19:55:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":772,"_text":"Wait For Response From Player 1 "},"childOfId":770} 
 Player 2 19:55:27 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:55:27 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:55:28 $ACTION_MASSAGE_REMOVE:  

 {"id":772} 
 Player 2 19:55:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":773,"_text":"Wait For Response From Player 2 "},"childOfId":770} 
 Player 2 19:55:28 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:55:29 $ACTION_MASSAGE_REMOVE:  

 {"id":773} 
 Player 2 19:55:29 $ACTION_MASSAGE_REMOVE:  

 {"id":771} 
 Player 2 19:55:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":774,"_text":"Resolve ActivatePassiveEffect 99 "}} 
 Player 2 19:55:29 $NEXT_STACK_ID:  
 Player 2 19:55:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 
 Player 2 19:55:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n3:Player 2 roll a dice"} 
 Player 2 19:55:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n3:Player 2 roll a dice"} 
 Player 2 19:55:29 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":100,"creatorCardId":290,"stackEffectToLock":{"effectCollectedData":null,"entityId":99,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":274}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14},"hasLockingStackEffect":false,"stackEffectType":11}} 
 Player 2 19:55:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n3:Player 2 roll a dice"} 
 Player 2 19:55:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n3:Player 2 roll a dice"} 
 Player 2 19:55:30 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":100,"creatorCardId":290,"stackEffectToLock":{"effectCollectedData":null,"entityId":99,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":274}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14},"hasLockingStackEffect":false,"stackEffectType":11}} 
 Player 2 19:55:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":775,"_text":"Add RollDiceStackEffect 100 "}} 
 Player 2 19:55:30 $ROLL_DICE:  

 {"playerId":2} 
 Player 2 19:55:31 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":6} 
 Player 2 19:55:31 $UPDATE_STACK_VIS:  

 {"stackId":100,"text":"player 2 rolled 6"} 
 Player 2 19:55:31 $SHOW_DICE_ROLL:  

 {"stackId":100} 
 Player 2 19:55:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n3:Player 2 rolled 6"} 
 Player 2 19:55:34 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:55:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n3:Player 2 rolled 6"} 
 Player 2 19:55:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n3:Player 2 rolled 6"} 
 Player 2 19:55:34 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":100,"creatorCardId":290,"stackEffectToLock":{"effectCollectedData":null,"entityId":99,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":274}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14},"hasLockingStackEffect":false,"numberRolled":6,"stackEffectType":11}} 
 Player 2 19:55:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":776,"_text":"Response Adding RollDiceStackEffect 100"},"childOfId":775} 
 Player 2 19:55:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":777,"_text":"Wait For Response From Player 2 "},"childOfId":775} 
 Player 2 19:55:34 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:55:35 $ACTION_MASSAGE_REMOVE:  

 {"id":777} 
 Player 2 19:55:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":778,"_text":"Wait For Response From Player 1 "},"childOfId":775} 
 Player 2 19:55:35 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:55:35 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:55:35 $ACTION_MASSAGE_REMOVE:  

 {"id":778} 
 Player 2 19:55:35 $ACTION_MASSAGE_REMOVE:  

 {"id":776} 
 Player 2 19:55:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":779,"_text":"Resolve RollDiceStackEffect 100 "}} 
 Player 2 19:55:35 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":6},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":39,"originStackId":100},"isAfterActivation":true,"index":39} 
 Player 2 19:55:35 $NEXT_STACK_ID:  
 Player 2 19:55:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n3:Player 2 rolled 6"} 
 Player 2 19:55:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n3:Player 2 rolled 6 \n4:Activate Ipecac effect DealDamage<DealDamage>"} 
 Player 2 19:55:36 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":101,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"effectToDo":{"effectName":"DealDamage","cardEffectNum":2,"cardPlayerId":2,"cardId":181,"effctType":0},"isAfterActivation":true,"index":39,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 19:55:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n3:Player 2 rolled 6 \n4:Activate Ipecac effect DealDamage<DealDamage>"} 
 Player 2 19:55:36 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":101,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"effectToDo":{"effectName":"DealDamage","cardEffectNum":2,"cardPlayerId":2,"cardId":181,"effctType":0},"isAfterActivation":true,"index":39,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 19:55:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":780,"_text":"Add ActivatePassiveEffect 101 "}} 
 Player 2 19:55:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n3:Player 2 rolled 6 \n4:Activate Ipecac effect DealDamage<DealDamage>"} 
 Player 2 19:55:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n3:Player 2 rolled 6 \n4:Activate Ipecac effect DealDamage<DealDamage>"} 
 Player 2 19:55:36 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":101,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"effectToDo":{"effectName":"DealDamage","cardEffectNum":2,"cardPlayerId":2,"cardId":181,"effctType":0},"isAfterActivation":true,"index":39,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 19:55:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":781,"_text":"Response Adding ActivatePassiveEffect 101"},"childOfId":780} 
 Player 2 19:55:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":782,"_text":"Wait For Response From Player 1 "},"childOfId":780} 
 Player 2 19:55:36 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:55:36 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:55:36 $ACTION_MASSAGE_REMOVE:  

 {"id":782} 
 Player 2 19:55:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":783,"_text":"Wait For Response From Player 2 "},"childOfId":780} 
 Player 2 19:55:36 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:55:37 $ACTION_MASSAGE_REMOVE:  

 {"id":783} 
 Player 2 19:55:37 $ACTION_MASSAGE_REMOVE:  

 {"id":781} 
 Player 2 19:55:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":784,"_text":"Resolve ActivatePassiveEffect 101 "}} 
 Player 2 19:55:37 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":181,"particleType":6} 
 Player 2 19:55:39 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":181,"particleType":6} 
 Player 2 19:55:39 $PLAYER_GET_HIT:  

 {"playerId":1,"damage":1,"damageDealerId":290} 
 Player 2 19:55:39 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":290}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":40,"originStackId":-1},"isAfterActivation":true,"index":40} 
 Player 2 19:55:39 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":6},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":39,"originStackId":100},"isAfterActivation":true,"index":39} 
 Player 2 19:55:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n3:Player 2 rolled 6 \n4:Activate Ipecac effect DealDamage<DealDamage>"} 
 Player 2 19:55:39 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":101,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"isAfterActivation":true,"index":39,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 19:55:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n3:Player 2 rolled 6"} 
 Player 2 19:55:39 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":101,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"isAfterActivation":true,"index":39,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 19:55:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":785,"_text":"Remove After Resolve ActivatePassiveEffect 101  "}} 
 Player 2 19:55:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n3:Player 2 rolled 6"} 
 Player 2 19:55:39 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":101,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"isAfterActivation":true,"index":39,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 19:55:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":786,"_text":"Response Remove After Resolve ActivatePassiveEffect 101"},"childOfId":785} 
 Player 2 19:55:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":787,"_text":"Wait For Response From Player 2 "},"childOfId":785} 
 Player 2 19:55:39 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:55:50 $ACTION_MASSAGE_REMOVE:  

 {"id":787} 
 Player 2 19:55:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":788,"_text":"Wait For Response From Player 1 "},"childOfId":785} 
 Player 2 19:55:50 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:55:50 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:55:50 $ACTION_MASSAGE_REMOVE:  

 {"id":788} 
 Player 2 19:55:50 $ACTION_MASSAGE_REMOVE:  

 {"id":786} 
 Player 2 19:55:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":789,"_text":"Resolve RollDiceStackEffect 100 "}} 
 Player 2 19:55:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n3:Player 2 rolled 6"} 
 Player 2 19:55:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n3:Player 2 rolled 6"} 
 Player 2 19:55:51 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":100,"creatorCardId":290,"stackEffectToLock":{"effectCollectedData":null,"entityId":99,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":274}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14},"hasLockingStackEffect":false,"numberRolled":6,"stackEffectType":11}} 
 Player 2 19:55:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 
 Player 2 19:55:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 
 Player 2 19:55:51 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":100,"creatorCardId":290,"stackEffectToLock":{"effectCollectedData":null,"entityId":99,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":274}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14},"hasLockingStackEffect":false,"numberRolled":6,"stackEffectType":11}} 
 Player 2 19:55:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":790,"_text":"Remove After Resolve RollDiceStackEffect 100  "}} 
 Player 2 19:55:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 
 Player 2 19:55:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 
 Player 2 19:55:51 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":100,"creatorCardId":290,"stackEffectToLock":{"effectCollectedData":null,"entityId":99,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":274}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14},"hasLockingStackEffect":false,"numberRolled":6,"stackEffectType":11}} 
 Player 2 19:55:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":791,"_text":"Response Remove After Resolve RollDiceStackEffect 100"},"childOfId":790} 
 Player 2 19:55:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":792,"_text":"Wait For Response From Player 1 "},"childOfId":790} 
 Player 2 19:55:51 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:55:51 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:55:51 $ACTION_MASSAGE_REMOVE:  

 {"id":792} 
 Player 2 19:55:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":793,"_text":"Wait For Response From Player 2 "},"childOfId":790} 
 Player 2 19:55:51 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:55:53 $ACTION_MASSAGE_REMOVE:  

 {"id":793} 
 Player 2 19:55:53 $ACTION_MASSAGE_REMOVE:  

 {"id":791} 
 Player 2 19:55:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":794,"_text":"Resolve ActivatePassiveEffect 99 "}} 
 Player 2 19:55:53 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":106,"particleType":6} 
 Player 2 19:55:55 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":106,"particleType":6} 
 Player 2 19:55:55 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":0},{"type":0,"number":274}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":false,"index":2} 
 Player 2 19:55:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 
 Player 2 19:55:55 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":99,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":2,"cardWithEffectId":106,"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 19:55:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage 1 combat damage to Isaac"} 
 Player 2 19:55:55 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":99,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":2,"cardWithEffectId":106,"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 19:55:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":795,"_text":"Remove After Resolve ActivatePassiveEffect 99  "}} 
 Player 2 19:55:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage 1 combat damage to Isaac"} 
 Player 2 19:55:55 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":99,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":2,"cardWithEffectId":106,"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 19:55:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":796,"_text":"Response Remove After Resolve ActivatePassiveEffect 99"},"childOfId":795} 
 Player 2 19:55:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":797,"_text":"Wait For Response From Player 2 "},"childOfId":795} 
 Player 2 19:55:55 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:55:56 $ACTION_MASSAGE_REMOVE:  

 {"id":797} 
 Player 2 19:55:56 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":798,"_text":"Wait For Response From Player 1 "},"childOfId":795} 
 Player 2 19:55:56 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:55:56 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:55:56 $ACTION_MASSAGE_REMOVE:  

 {"id":798} 
 Player 2 19:55:56 $ACTION_MASSAGE_REMOVE:  

 {"id":796} 
 Player 2 19:55:56 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":799,"_text":"Resolve CombatDamage 98 "}} 
 Player 2 19:55:56 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":0},{"type":0,"number":274}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 2 19:55:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage 1 combat damage to Isaac"} 
 Player 2 19:55:56 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":98,"creatorCardId":290,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 19:55:56 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:55:56 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":98,"creatorCardId":290,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 19:55:56 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":800,"_text":"Remove After Resolve CombatDamage 98  "}} 
 Player 2 19:55:56 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:55:56 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":98,"creatorCardId":290,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 19:55:56 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":801,"_text":"Response Remove After Resolve CombatDamage 98"},"childOfId":800} 
 Player 2 19:55:56 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":802,"_text":"Wait For Response From Player 1 "},"childOfId":800} 
 Player 2 19:55:56 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:55:56 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:55:56 $ACTION_MASSAGE_REMOVE:  

 {"id":802} 
 Player 2 19:55:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":803,"_text":"Wait For Response From Player 2 "},"childOfId":800} 
 Player 2 19:55:57 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:55:57 $ACTION_MASSAGE_REMOVE:  

 {"id":803} 
 Player 2 19:55:57 $ACTION_MASSAGE_REMOVE:  

 {"id":801} 
 Player 2 19:55:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":804,"_text":"Stack Was Emptied "}} 
 Player 2 19:55:57 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:55:57 $ACTION_MASSAGE_REMOVE:  

 {"id":753} 
 Player 2 19:55:57 $ACTION_MASSAGE_REMOVE:  

 {"id":752} 
 Player 2 19:56:00 $NEXT_STACK_ID:  
 Player 2 19:56:00 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:56:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 
 Player 2 19:56:00 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":102,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 
 Player 2 19:56:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 
 Player 2 19:56:00 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":102,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 
 Player 2 19:56:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":805,"_text":"Add AttackRoll 102 "}} 
 Player 2 19:56:00 $ROLL_DICE:  

 {"playerId":2} 
 Player 2 19:56:02 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":1} 
 Player 2 19:56:02 $UPDATE_STACK_VIS:  

 {"stackId":102,"text":"player rolled 1 vs The Cage<Monster>"} 
 Player 2 19:56:02 $SHOW_DICE_ROLL:  

 {"stackId":102} 
 Player 2 19:56:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs The Cage<Monster>"} 
 Player 2 19:56:05 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:56:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs The Cage<Monster>"} 
 Player 2 19:56:05 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":102,"creatorCardId":290,"numberRolled":1,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 
 Player 2 19:56:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":806,"_text":"Response Adding AttackRoll 102"},"childOfId":805} 
 Player 2 19:56:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":807,"_text":"Wait For Response From Player 2 "},"childOfId":805} 
 Player 2 19:56:05 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:56:07 $SHOW_DECISION:  

 {"startCardId":290,"endCardId":290} 
 Player 2 19:56:10 $NEXT_STACK_ID:  
 Player 2 19:56:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs The Cage<Monster>"} 
 Player 2 19:56:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs The Cage<Monster> \n2:Player 2 activated Isaac"} 
 Player 2 19:56:10 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":103,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 19:56:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs The Cage<Monster> \n2:Player 2 activated Isaac"} 
 Player 2 19:56:10 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":103,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 19:56:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":808,"_text":"Add ActivateItem 103 "}} 
 Player 2 19:56:12 $SHOW_DECISION:  

 {"startCardId":290,"endCardId":95,"flipEndCard":true} 
 Player 2 19:56:15 $USE_ITEM:  

 {"cardId":290} 
 Player 2 19:56:15 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:56:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs The Cage<Monster> \n2:Player 2 activated Isaac"} 
 Player 2 19:56:15 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":103,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 19:56:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":809,"_text":"Response Adding ActivateItem 103"},"childOfId":808} 
 Player 2 19:56:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":810,"_text":"Wait For Response From Player 2 "},"childOfId":808} 
 Player 2 19:56:15 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:56:18 $ACTION_MASSAGE_REMOVE:  

 {"id":810} 
 Player 2 19:56:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":811,"_text":"Wait For Response From Player 1 "},"childOfId":808} 
 Player 2 19:56:18 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:56:18 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:56:18 $ACTION_MASSAGE_REMOVE:  

 {"id":811} 
 Player 2 19:56:18 $ACTION_MASSAGE_REMOVE:  

 {"id":809} 
 Player 2 19:56:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":812,"_text":"Resolve ActivateItem 103 "}} 
 Player 2 19:56:18 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":290,"particleType":6} 
 Player 2 19:56:20 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":290,"particleType":6} 
 Player 2 19:56:20 $NEXT_STACK_ID:  
 Player 2 19:56:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs The Cage<Monster> \n2:Player 2 activated Isaac"} 
 Player 2 19:56:20 $PLAYER_LOSE_LOOT:  

 {"playerId":2,"cardId":95} 
 Player 2 19:56:20 $MOVE_CARD:  

 {"moveIndex":59,"cardId":95,"placeID":300,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 19:56:21 $MOVE_CARD_TO_PILE:  

 {"type":7,"cardId":95} 
 Player 2 19:56:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs The Cage<Monster> \n2:Player 2 play Charged Penny: ChainEffects \n3:Player 2 activated Isaac"} 
 Player 2 19:56:25 $SHOW_DECISION:  

 {"startCardId":95,"endCardId":291} 
 Player 2 19:56:28 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:56:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs The Cage<Monster> \n2:Player 2 play Charged Penny: ChainEffects \n3:Player 2 activated Isaac"} 
 Player 2 19:56:28 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":104,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":95,"lootPlayerId":2,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":95,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 19:56:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs The Cage<Monster> \n2:Player 2 play Charged Penny: ChainEffects \n3:Player 2 activated Isaac"} 
 Player 2 19:56:28 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":102,"creatorCardId":290,"numberRolled":1,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 
 Player 2 19:56:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs The Cage<Monster> \n2:Player 2 play Charged Penny: ChainEffects \n3:Player 2 activated Isaac"} 
 Player 2 19:56:28 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":102,"creatorCardId":290,"numberRolled":1,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 
 Player 2 19:56:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs The Cage<Monster> \n2:Player 2 play Charged Penny: ChainEffects \n3:Player 2 activated Isaac"} 
 Player 2 19:56:28 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":104,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":95,"lootPlayerId":2,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":95,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 19:56:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs The Cage<Monster> \n2:Player 2 play Charged Penny: ChainEffects \n3:Player 2 activated Isaac"} 
 Player 2 19:56:28 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":103,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 19:56:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs The Cage<Monster> \n2:Player 2 play Charged Penny: ChainEffects \n3:Player 2 activated Isaac"} 
 Player 2 19:56:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs The Cage<Monster> \n2:Player 2 play Charged Penny: ChainEffects \n3:Player 2 activated Isaac"} 
 Player 2 19:56:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs The Cage<Monster> \n2:Player 2 play Charged Penny: ChainEffects \n3:Player 2 activated Isaac"} 
 Player 2 19:56:28 $REPLACE_STACK:  

 {"currentStack":[{"entityId":102,"creatorCardId":290,"numberRolled":1,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274},{"entityId":104,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":95,"lootPlayerId":2,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":95,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":103,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 
 Player 2 19:56:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs The Cage<Monster> \n2:Player 2 play Charged Penny: ChainEffects \n3:Player 2 activated Isaac"} 
 Player 2 19:56:28 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":103,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 19:56:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs The Cage<Monster> \n2:Player 2 play Charged Penny: ChainEffects"} 
 Player 2 19:56:28 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":103,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 19:56:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":813,"_text":"Remove After Resolve ActivateItem 103  "}} 
 Player 2 19:56:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs The Cage<Monster> \n2:Player 2 play Charged Penny: ChainEffects"} 
 Player 2 19:56:28 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":103,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 19:56:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":814,"_text":"Response Remove After Resolve ActivateItem 103"},"childOfId":813} 
 Player 2 19:56:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":815,"_text":"Wait For Response From Player 2 "},"childOfId":813} 
 Player 2 19:56:28 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:56:29 $ACTION_MASSAGE_REMOVE:  

 {"id":815} 
 Player 2 19:56:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":816,"_text":"Wait For Response From Player 1 "},"childOfId":813} 
 Player 2 19:56:29 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:56:29 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:56:29 $ACTION_MASSAGE_REMOVE:  

 {"id":816} 
 Player 2 19:56:29 $ACTION_MASSAGE_REMOVE:  

 {"id":814} 
 Player 2 19:56:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":817,"_text":"Resolve PlayLootCardStackEffect 104 "}} 
 Player 2 19:56:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs The Cage<Monster> \n2:Player 2 play Charged Penny: ChainEffects"} 
 Player 2 19:56:29 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":95,"particleType":6} 
 Player 2 19:56:31 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":95,"particleType":6} 
 Player 2 19:56:31 $SET_MONEY:  

 {"playerId":2,"numOfCoins":3} 
 Player 2 19:56:31 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":1}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":41,"originStackId":-1},"isAfterActivation":true,"index":41} 
 Player 2 19:56:31 $RECHARGE_ITEM:  

 {"cardId":291} 
 Player 2 19:56:31 $PLAYER_RECHARGE_ITEM:  

 {"playerId":2,"cardId":291} 
 Player 2 19:56:31 $REMOVE_FROM_PILE:  

 {"cardId":95} 
 Player 2 19:56:31 $MOVE_CARD:  

 {"moveIndex":60,"cardId":95,"placeID":301,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 19:56:32 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":95} 
 Player 2 19:56:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs The Cage<Monster> \n2:Player 2 play Charged Penny: ChainEffects"} 
 Player 2 19:56:32 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":104,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":95,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 19:56:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs The Cage<Monster>"} 
 Player 2 19:56:32 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":104,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":95,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 19:56:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":818,"_text":"Remove After Resolve PlayLootCardStackEffect 104  "}} 
 Player 2 19:56:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs The Cage<Monster>"} 
 Player 2 19:56:32 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":104,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":95,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 19:56:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":819,"_text":"Response Remove After Resolve PlayLootCardStackEffect 104"},"childOfId":818} 
 Player 2 19:56:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":820,"_text":"Wait For Response From Player 1 "},"childOfId":818} 
 Player 2 19:56:32 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:56:32 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:56:32 $ACTION_MASSAGE_REMOVE:  

 {"id":820} 
 Player 2 19:56:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":821,"_text":"Wait For Response From Player 2 "},"childOfId":818} 
 Player 2 19:56:32 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:56:34 $SHOW_DECISION:  

 {"startCardId":290,"endCardId":291} 
 Player 2 19:56:37 $NEXT_STACK_ID:  
 Player 2 19:56:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs The Cage<Monster>"} 
 Player 2 19:56:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs The Cage<Monster> \n2:Player 2 activated The D6"} 
 Player 2 19:56:37 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":105,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 19:56:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs The Cage<Monster> \n2:Player 2 activated The D6"} 
 Player 2 19:56:37 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":105,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 19:56:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":822,"_text":"Add ActivateItem 105 "}} 
 Player 2 19:56:37 $USE_ITEM:  

 {"cardId":291} 
 Player 2 19:56:37 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:56:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs The Cage<Monster> \n2:Player 2 activated The D6"} 
 Player 2 19:56:37 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":105,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 19:56:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":823,"_text":"Response Adding ActivateItem 105"},"childOfId":822} 
 Player 2 19:56:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":824,"_text":"Wait For Response From Player 2 "},"childOfId":822} 
 Player 2 19:56:37 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:56:37 $ACTION_MASSAGE_REMOVE:  

 {"id":824} 
 Player 2 19:56:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":825,"_text":"Wait For Response From Player 1 "},"childOfId":822} 
 Player 2 19:56:37 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:56:37 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:56:38 $ACTION_MASSAGE_REMOVE:  

 {"id":825} 
 Player 2 19:56:38 $ACTION_MASSAGE_REMOVE:  

 {"id":823} 
 Player 2 19:56:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":826,"_text":"Resolve ActivateItem 105 "}} 
 Player 2 19:56:38 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":291,"particleType":6} 
 Player 2 19:56:40 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":291,"particleType":6} 
 Player 2 19:56:40 $ROLL_DICE:  

 {"playerId":2} 
 Player 2 19:56:41 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":5} 
 Player 2 19:56:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs The Cage<Monster> \n2:Player 2 activated The D6"} 
 Player 2 19:56:41 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":105,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 19:56:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs The Cage<Monster>"} 
 Player 2 19:56:42 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":105,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 19:56:42 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":827,"_text":"Remove After Resolve ActivateItem 105  "}} 
 Player 2 19:56:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs The Cage<Monster>"} 
 Player 2 19:56:42 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":105,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 19:56:42 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":828,"_text":"Response Remove After Resolve ActivateItem 105"},"childOfId":827} 
 Player 2 19:56:42 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":829,"_text":"Wait For Response From Player 1 "},"childOfId":827} 
 Player 2 19:56:42 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:56:42 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:56:42 $ACTION_MASSAGE_REMOVE:  

 {"id":829} 
 Player 2 19:56:42 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":830,"_text":"Wait For Response From Player 2 "},"childOfId":827} 
 Player 2 19:56:42 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:56:42 $ACTION_MASSAGE_REMOVE:  

 {"id":830} 
 Player 2 19:56:42 $ACTION_MASSAGE_REMOVE:  

 {"id":828} 
 Player 2 19:56:42 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":831,"_text":"Resolve AttackRoll 102 "}} 
 Player 2 19:56:42 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":832,"_text":"Added -1 to original roll"}} 
 Player 2 19:56:42 $NEXT_STACK_ID:  
 Player 2 19:56:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs The Cage<Monster>"} 
 Player 2 19:56:42 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:56:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to The Cage \n2:Player 2 rolled 1 vs The Cage<Monster>"} 
 Player 2 19:56:42 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":106,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":274,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 19:56:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to The Cage \n2:Player 2 rolled 1 vs The Cage<Monster>"} 
 Player 2 19:56:42 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":102,"creatorCardId":290,"numberRolled":5,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 
 Player 2 19:56:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to The Cage \n2:Player 2 rolled 1 vs The Cage<Monster>"} 
 Player 2 19:56:42 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":106,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":274,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 19:56:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to The Cage \n2:Player 2 rolled 1 vs The Cage<Monster>"} 
 Player 2 19:56:42 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":102,"creatorCardId":290,"numberRolled":5,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 
 Player 2 19:56:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to The Cage \n2:Player 2 rolled 1 vs The Cage<Monster>"} 
 Player 2 19:56:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to The Cage \n2:Player 2 rolled 1 vs The Cage<Monster>"} 
 Player 2 19:56:42 $REPLACE_STACK:  

 {"currentStack":[{"entityId":106,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":274,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":102,"creatorCardId":290,"numberRolled":5,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}]} 
 Player 2 19:56:42 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":1},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":42,"originStackId":102},"isAfterActivation":true,"index":42} 
 Player 2 19:56:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to The Cage \n2:Player 2 rolled 1 vs The Cage<Monster>"} 
 Player 2 19:56:43 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":102,"creatorCardId":290,"numberRolled":5,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 
 Player 2 19:56:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to The Cage"} 
 Player 2 19:56:43 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":102,"creatorCardId":290,"numberRolled":5,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 
 Player 2 19:56:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":833,"_text":"Remove After Resolve AttackRoll 102  "}} 
 Player 2 19:56:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to The Cage"} 
 Player 2 19:56:43 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":102,"creatorCardId":290,"numberRolled":5,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 
 Player 2 19:56:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":834,"_text":"Response Remove After Resolve AttackRoll 102"},"childOfId":833} 
 Player 2 19:56:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":835,"_text":"Wait For Response From Player 2 "},"childOfId":833} 
 Player 2 19:56:43 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:56:43 $ACTION_MASSAGE_REMOVE:  

 {"id":835} 
 Player 2 19:56:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":836,"_text":"Wait For Response From Player 1 "},"childOfId":833} 
 Player 2 19:56:43 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:56:43 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:56:43 $ACTION_MASSAGE_REMOVE:  

 {"id":836} 
 Player 2 19:56:43 $ACTION_MASSAGE_REMOVE:  

 {"id":834} 
 Player 2 19:56:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":837,"_text":"Resolve CombatDamage 106 "}} 
 Player 2 19:56:43 $UPDATE_STACK_VIS:  

 {"stackId":106,"text":"Isaac will deal 4 combat damage to The Cage"} 
 Player 2 19:56:43 $MONSTER_GET_DAMAGED:  

 {"cardId":274,"hpLeft":2,"damageDealerId":290} 
 Player 2 19:56:43 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":4},{"type":0,"number":290}],"result":null,"preventMethod":false,"methodScopeId":274,"scopeIsPlayer":false,"index":43,"originStackId":-1},"isAfterActivation":true,"index":43} 
 Player 2 19:56:43 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":4},{"type":2,"number":4},{"type":0,"number":290},{"type":0,"number":274}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":44,"originStackId":106},"isAfterActivation":true,"index":44} 
 Player 2 19:56:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to The Cage"} 
 Player 2 19:56:43 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":106,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":274,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 19:56:43 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:56:43 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":106,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":274,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 19:56:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":838,"_text":"Remove After Resolve CombatDamage 106  "}} 
 Player 2 19:56:44 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:56:44 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":106,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":274,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 19:56:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":839,"_text":"Response Remove After Resolve CombatDamage 106"},"childOfId":838} 
 Player 2 19:56:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":840,"_text":"Wait For Response From Player 1 "},"childOfId":838} 
 Player 2 19:56:44 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:56:44 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:56:44 $ACTION_MASSAGE_REMOVE:  

 {"id":840} 
 Player 2 19:56:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":841,"_text":"Wait For Response From Player 2 "},"childOfId":838} 
 Player 2 19:56:44 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:56:44 $ACTION_MASSAGE_REMOVE:  

 {"id":841} 
 Player 2 19:56:44 $ACTION_MASSAGE_REMOVE:  

 {"id":839} 
 Player 2 19:56:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":842,"_text":"Stack Was Emptied "}} 
 Player 2 19:56:44 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:56:44 $ACTION_MASSAGE_REMOVE:  

 {"id":821} 
 Player 2 19:56:44 $ACTION_MASSAGE_REMOVE:  

 {"id":819} 
 Player 2 19:56:44 $ACTION_MASSAGE_REMOVE:  

 {"id":807} 
 Player 2 19:56:44 $ACTION_MASSAGE_REMOVE:  

 {"id":806} 
 Player 2 19:56:48 $NEXT_STACK_ID:  
 Player 2 19:56:48 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:56:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 
 Player 2 19:56:48 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":107,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 
 Player 2 19:56:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 
 Player 2 19:56:48 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":107,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 
 Player 2 19:56:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":843,"_text":"Add AttackRoll 107 "}} 
 Player 2 19:56:48 $ROLL_DICE:  

 {"playerId":2} 
 Player 2 19:56:49 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":0} 
 Player 2 19:56:50 $UPDATE_STACK_VIS:  

 {"stackId":107,"text":"player rolled 0 vs The Cage<Monster>"} 
 Player 2 19:56:50 $SHOW_DICE_ROLL:  

 {"stackId":107} 
 Player 2 19:56:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 0 vs The Cage<Monster>"} 
 Player 2 19:56:53 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:56:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 0 vs The Cage<Monster>"} 
 Player 2 19:56:53 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":107,"creatorCardId":290,"numberRolled":0,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 
 Player 2 19:56:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":844,"_text":"Response Adding AttackRoll 107"},"childOfId":843} 
 Player 2 19:56:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":845,"_text":"Wait For Response From Player 2 "},"childOfId":843} 
 Player 2 19:56:53 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:56:53 $ACTION_MASSAGE_REMOVE:  

 {"id":845} 
 Player 2 19:56:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":846,"_text":"Wait For Response From Player 1 "},"childOfId":843} 
 Player 2 19:56:53 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:56:53 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:56:53 $ACTION_MASSAGE_REMOVE:  

 {"id":846} 
 Player 2 19:56:53 $ACTION_MASSAGE_REMOVE:  

 {"id":844} 
 Player 2 19:56:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":847,"_text":"Resolve AttackRoll 107 "}} 
 Player 2 19:56:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":848,"_text":"Added -1 to original roll"}} 
 Player 2 19:56:53 $NEXT_STACK_ID:  
 Player 2 19:56:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 0 vs The Cage<Monster>"} 
 Player 2 19:56:53 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:56:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage combat damage to Isaac \n2:Player 2 rolled 0 vs The Cage<Monster>"} 
 Player 2 19:56:53 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":108,"creatorCardId":290,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 19:56:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage combat damage to Isaac \n2:Player 2 rolled 0 vs The Cage<Monster>"} 
 Player 2 19:56:53 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":107,"creatorCardId":290,"numberRolled":0,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 
 Player 2 19:56:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage combat damage to Isaac \n2:Player 2 rolled 0 vs The Cage<Monster>"} 
 Player 2 19:56:53 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":108,"creatorCardId":290,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 19:56:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage combat damage to Isaac \n2:Player 2 rolled 0 vs The Cage<Monster>"} 
 Player 2 19:56:53 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":107,"creatorCardId":290,"numberRolled":0,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 
 Player 2 19:56:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage combat damage to Isaac \n2:Player 2 rolled 0 vs The Cage<Monster>"} 
 Player 2 19:56:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage combat damage to Isaac \n2:Player 2 rolled 0 vs The Cage<Monster>"} 
 Player 2 19:56:54 $REPLACE_STACK:  

 {"currentStack":[{"entityId":108,"creatorCardId":290,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":107,"creatorCardId":290,"numberRolled":0,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}]} 
 Player 2 19:56:54 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":1},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":45,"originStackId":107},"isAfterActivation":true,"index":45} 
 Player 2 19:56:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage combat damage to Isaac \n2:Player 2 rolled 0 vs The Cage<Monster>"} 
 Player 2 19:56:54 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":107,"creatorCardId":290,"numberRolled":0,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 
 Player 2 19:56:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage combat damage to Isaac"} 
 Player 2 19:56:54 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":107,"creatorCardId":290,"numberRolled":0,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 
 Player 2 19:56:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":849,"_text":"Remove After Resolve AttackRoll 107  "}} 
 Player 2 19:56:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage combat damage to Isaac"} 
 Player 2 19:56:54 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":107,"creatorCardId":290,"numberRolled":0,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 
 Player 2 19:56:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":850,"_text":"Response Remove After Resolve AttackRoll 107"},"childOfId":849} 
 Player 2 19:56:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":851,"_text":"Wait For Response From Player 2 "},"childOfId":849} 
 Player 2 19:56:54 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:56:54 $ACTION_MASSAGE_REMOVE:  

 {"id":851} 
 Player 2 19:56:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":852,"_text":"Wait For Response From Player 1 "},"childOfId":849} 
 Player 2 19:56:54 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:56:54 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:56:54 $ACTION_MASSAGE_REMOVE:  

 {"id":852} 
 Player 2 19:56:54 $ACTION_MASSAGE_REMOVE:  

 {"id":850} 
 Player 2 19:56:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":853,"_text":"Resolve CombatDamage 108 "}} 
 Player 2 19:56:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage 1 combat damage to Isaac"} 
 Player 2 19:56:54 $UPDATE_STACK_VIS:  

 {"stackId":108,"text":"The Cage will deal 1 combat damage to Isaac"} 
 Player 2 19:56:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage 1 combat damage to Isaac"} 
 Player 2 19:56:54 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":274}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":false,"index":3} 
 Player 2 19:56:54 $NEXT_STACK_ID:  
 Player 2 19:56:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage 1 combat damage to Isaac"} 
 Player 2 19:56:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 
 Player 2 19:56:55 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":109,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 19:56:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 
 Player 2 19:56:55 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":109,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 19:56:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":854,"_text":"Add ActivatePassiveEffect 109 "}} 
 Player 2 19:56:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 
 Player 2 19:56:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 
 Player 2 19:56:55 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":109,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 19:56:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":855,"_text":"Response Adding ActivatePassiveEffect 109"},"childOfId":854} 
 Player 2 19:56:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":856,"_text":"Wait For Response From Player 1 "},"childOfId":854} 
 Player 2 19:56:55 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:56:55 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:56:55 $ACTION_MASSAGE_REMOVE:  

 {"id":856} 
 Player 2 19:56:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":857,"_text":"Wait For Response From Player 2 "},"childOfId":854} 
 Player 2 19:56:55 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:56:55 $ACTION_MASSAGE_REMOVE:  

 {"id":857} 
 Player 2 19:56:55 $ACTION_MASSAGE_REMOVE:  

 {"id":855} 
 Player 2 19:56:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":858,"_text":"Resolve ActivatePassiveEffect 109 "}} 
 Player 2 19:56:55 $NEXT_STACK_ID:  
 Player 2 19:56:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 
 Player 2 19:56:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n3:Player 2 roll a dice"} 
 Player 2 19:56:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n3:Player 2 roll a dice"} 
 Player 2 19:56:55 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":110,"creatorCardId":290,"stackEffectToLock":{"effectCollectedData":null,"entityId":109,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":274}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":false,"stackEffectType":14},"hasLockingStackEffect":false,"stackEffectType":11}} 
 Player 2 19:56:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n3:Player 2 roll a dice"} 
 Player 2 19:56:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n3:Player 2 roll a dice"} 
 Player 2 19:56:55 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":110,"creatorCardId":290,"stackEffectToLock":{"effectCollectedData":null,"entityId":109,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":274}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":false,"stackEffectType":14},"hasLockingStackEffect":false,"stackEffectType":11}} 
 Player 2 19:56:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":859,"_text":"Add RollDiceStackEffect 110 "}} 
 Player 2 19:56:55 $ROLL_DICE:  

 {"playerId":2} 
 Player 2 19:56:57 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":3} 
 Player 2 19:56:57 $UPDATE_STACK_VIS:  

 {"stackId":110,"text":"player 2 rolled 3"} 
 Player 2 19:56:57 $SHOW_DICE_ROLL:  

 {"stackId":110} 
 Player 2 19:57:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n3:Player 2 rolled 3"} 
 Player 2 19:57:00 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:57:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n3:Player 2 rolled 3"} 
 Player 2 19:57:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n3:Player 2 rolled 3"} 
 Player 2 19:57:00 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":110,"creatorCardId":290,"stackEffectToLock":{"effectCollectedData":null,"entityId":109,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":274}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":false,"stackEffectType":14},"hasLockingStackEffect":false,"numberRolled":3,"stackEffectType":11}} 
 Player 2 19:57:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":860,"_text":"Response Adding RollDiceStackEffect 110"},"childOfId":859} 
 Player 2 19:57:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":861,"_text":"Wait For Response From Player 2 "},"childOfId":859} 
 Player 2 19:57:00 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:57:00 $ACTION_MASSAGE_REMOVE:  

 {"id":861} 
 Player 2 19:57:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":862,"_text":"Wait For Response From Player 1 "},"childOfId":859} 
 Player 2 19:57:00 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:57:00 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:57:01 $ACTION_MASSAGE_REMOVE:  

 {"id":862} 
 Player 2 19:57:01 $ACTION_MASSAGE_REMOVE:  

 {"id":860} 
 Player 2 19:57:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":863,"_text":"Resolve RollDiceStackEffect 110 "}} 
 Player 2 19:57:01 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":3},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":46,"originStackId":110},"isAfterActivation":true,"index":46} 
 Player 2 19:57:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n3:Player 2 rolled 3"} 
 Player 2 19:57:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n3:Player 2 rolled 3"} 
 Player 2 19:57:01 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":110,"creatorCardId":290,"stackEffectToLock":{"effectCollectedData":null,"entityId":109,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":274}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":false,"stackEffectType":14},"hasLockingStackEffect":false,"numberRolled":3,"stackEffectType":11}} 
 Player 2 19:57:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 
 Player 2 19:57:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 
 Player 2 19:57:01 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":110,"creatorCardId":290,"stackEffectToLock":{"effectCollectedData":null,"entityId":109,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":274}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":false,"stackEffectType":14},"hasLockingStackEffect":false,"numberRolled":3,"stackEffectType":11}} 
 Player 2 19:57:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":864,"_text":"Remove After Resolve RollDiceStackEffect 110  "}} 
 Player 2 19:57:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 
 Player 2 19:57:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 
 Player 2 19:57:01 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":110,"creatorCardId":290,"stackEffectToLock":{"effectCollectedData":null,"entityId":109,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":274}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":false,"stackEffectType":14},"hasLockingStackEffect":false,"numberRolled":3,"stackEffectType":11}} 
 Player 2 19:57:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":865,"_text":"Response Remove After Resolve RollDiceStackEffect 110"},"childOfId":864} 
 Player 2 19:57:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":866,"_text":"Wait For Response From Player 1 "},"childOfId":864} 
 Player 2 19:57:01 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:57:01 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:57:01 $ACTION_MASSAGE_REMOVE:  

 {"id":866} 
 Player 2 19:57:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":867,"_text":"Wait For Response From Player 2 "},"childOfId":864} 
 Player 2 19:57:01 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:57:01 $ACTION_MASSAGE_REMOVE:  

 {"id":867} 
 Player 2 19:57:02 $ACTION_MASSAGE_REMOVE:  

 {"id":865} 
 Player 2 19:57:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":868,"_text":"Resolve ActivatePassiveEffect 109 "}} 
 Player 2 19:57:02 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":106,"particleType":6} 
 Player 2 19:57:03 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":106,"particleType":6} 
 Player 2 19:57:03 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":274}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":false,"index":3} 
 Player 2 19:57:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 
 Player 2 19:57:03 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":109,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":2,"cardWithEffectId":106,"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 19:57:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage 1 combat damage to Isaac"} 
 Player 2 19:57:04 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":109,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":2,"cardWithEffectId":106,"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 19:57:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":869,"_text":"Remove After Resolve ActivatePassiveEffect 109  "}} 
 Player 2 19:57:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage 1 combat damage to Isaac"} 
 Player 2 19:57:04 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":109,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":2,"cardWithEffectId":106,"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 19:57:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":870,"_text":"Response Remove After Resolve ActivatePassiveEffect 109"},"childOfId":869} 
 Player 2 19:57:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":871,"_text":"Wait For Response From Player 2 "},"childOfId":869} 
 Player 2 19:57:04 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:57:04 $ACTION_MASSAGE_REMOVE:  

 {"id":871} 
 Player 2 19:57:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":872,"_text":"Wait For Response From Player 1 "},"childOfId":869} 
 Player 2 19:57:04 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:57:04 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:57:04 $ACTION_MASSAGE_REMOVE:  

 {"id":872} 
 Player 2 19:57:04 $ACTION_MASSAGE_REMOVE:  

 {"id":870} 
 Player 2 19:57:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":873,"_text":"Resolve CombatDamage 108 "}} 
 Player 2 19:57:04 $PLAYER_GET_HIT:  

 {"playerId":2,"damage":1,"damageDealerId":274} 
 Player 2 19:57:04 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":274}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Player 2 19:57:04 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_TAKEN","args":[{"type":2,"number":1},{"type":2,"number":1},{"type":0,"number":274}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":47,"originStackId":108},"isAfterActivation":true,"index":47} 
 Player 2 19:57:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Cage 1 combat damage to Isaac"} 
 Player 2 19:57:04 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":108,"creatorCardId":290,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 19:57:04 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:57:04 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":108,"creatorCardId":290,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 19:57:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":874,"_text":"Remove After Resolve CombatDamage 108  "}} 
 Player 2 19:57:04 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:57:04 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":108,"creatorCardId":290,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 19:57:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":875,"_text":"Response Remove After Resolve CombatDamage 108"},"childOfId":874} 
 Player 2 19:57:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":876,"_text":"Wait For Response From Player 1 "},"childOfId":874} 
 Player 2 19:57:04 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:57:04 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:57:05 $ACTION_MASSAGE_REMOVE:  

 {"id":876} 
 Player 2 19:57:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":877,"_text":"Wait For Response From Player 2 "},"childOfId":874} 
 Player 2 19:57:05 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:57:05 $ACTION_MASSAGE_REMOVE:  

 {"id":877} 
 Player 2 19:57:05 $ACTION_MASSAGE_REMOVE:  

 {"id":875} 
 Player 2 19:57:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":878,"_text":"Stack Was Emptied "}} 
 Player 2 19:57:05 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:57:09 $NEXT_STACK_ID:  
 Player 2 19:57:09 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:57:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 
 Player 2 19:57:09 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":111,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 
 Player 2 19:57:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 
 Player 2 19:57:09 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":111,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 
 Player 2 19:57:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":879,"_text":"Add AttackRoll 111 "}} 
 Player 2 19:57:09 $ROLL_DICE:  

 {"playerId":2} 
 Player 2 19:57:10 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":5} 
 Player 2 19:57:10 $UPDATE_STACK_VIS:  

 {"stackId":111,"text":"player rolled 5 vs The Cage<Monster>"} 
 Player 2 19:57:10 $SHOW_DICE_ROLL:  

 {"stackId":111} 
 Player 2 19:57:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 5 vs The Cage<Monster>"} 
 Player 2 19:57:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:57:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 5 vs The Cage<Monster>"} 
 Player 2 19:57:13 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":111,"creatorCardId":290,"numberRolled":5,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 
 Player 2 19:57:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":880,"_text":"Response Adding AttackRoll 111"},"childOfId":879} 
 Player 2 19:57:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":881,"_text":"Wait For Response From Player 2 "},"childOfId":879} 
 Player 2 19:57:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:57:13 $ACTION_MASSAGE_REMOVE:  

 {"id":881} 
 Player 2 19:57:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":882,"_text":"Wait For Response From Player 1 "},"childOfId":879} 
 Player 2 19:57:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:57:13 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:57:13 $ACTION_MASSAGE_REMOVE:  

 {"id":882} 
 Player 2 19:57:13 $ACTION_MASSAGE_REMOVE:  

 {"id":880} 
 Player 2 19:57:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":883,"_text":"Resolve AttackRoll 111 "}} 
 Player 2 19:57:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":884,"_text":"Added -1 to original roll"}} 
 Player 2 19:57:13 $NEXT_STACK_ID:  
 Player 2 19:57:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 5 vs The Cage<Monster>"} 
 Player 2 19:57:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:57:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to The Cage \n2:Player 2 rolled 5 vs The Cage<Monster>"} 
 Player 2 19:57:13 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":112,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":274,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 19:57:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to The Cage \n2:Player 2 rolled 5 vs The Cage<Monster>"} 
 Player 2 19:57:13 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":111,"creatorCardId":290,"numberRolled":5,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 
 Player 2 19:57:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to The Cage \n2:Player 2 rolled 5 vs The Cage<Monster>"} 
 Player 2 19:57:14 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":112,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":274,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 19:57:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to The Cage \n2:Player 2 rolled 5 vs The Cage<Monster>"} 
 Player 2 19:57:14 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":111,"creatorCardId":290,"numberRolled":5,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 
 Player 2 19:57:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to The Cage \n2:Player 2 rolled 5 vs The Cage<Monster>"} 
 Player 2 19:57:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to The Cage \n2:Player 2 rolled 5 vs The Cage<Monster>"} 
 Player 2 19:57:14 $REPLACE_STACK:  

 {"currentStack":[{"entityId":112,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":274,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":111,"creatorCardId":290,"numberRolled":5,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}]} 
 Player 2 19:57:14 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":1},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":48,"originStackId":111},"isAfterActivation":true,"index":48} 
 Player 2 19:57:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to The Cage \n2:Player 2 rolled 5 vs The Cage<Monster>"} 
 Player 2 19:57:14 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":111,"creatorCardId":290,"numberRolled":5,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 
 Player 2 19:57:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to The Cage"} 
 Player 2 19:57:14 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":111,"creatorCardId":290,"numberRolled":5,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 
 Player 2 19:57:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":885,"_text":"Remove After Resolve AttackRoll 111  "}} 
 Player 2 19:57:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to The Cage"} 
 Player 2 19:57:14 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":111,"creatorCardId":290,"numberRolled":5,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 
 Player 2 19:57:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":886,"_text":"Response Remove After Resolve AttackRoll 111"},"childOfId":885} 
 Player 2 19:57:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":887,"_text":"Wait For Response From Player 2 "},"childOfId":885} 
 Player 2 19:57:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:57:14 $ACTION_MASSAGE_REMOVE:  

 {"id":887} 
 Player 2 19:57:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":888,"_text":"Wait For Response From Player 1 "},"childOfId":885} 
 Player 2 19:57:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:57:14 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:57:15 $ACTION_MASSAGE_REMOVE:  

 {"id":888} 
 Player 2 19:57:15 $ACTION_MASSAGE_REMOVE:  

 {"id":886} 
 Player 2 19:57:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":889,"_text":"Resolve CombatDamage 112 "}} 
 Player 2 19:57:15 $UPDATE_STACK_VIS:  

 {"stackId":112,"text":"Isaac will deal 4 combat damage to The Cage"} 
 Player 2 19:57:15 $MONSTER_GET_DAMAGED:  

 {"cardId":274,"hpLeft":0,"damageDealerId":290} 
 Player 2 19:57:15 $NEXT_STACK_ID:  
 Player 2 19:57:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to The Cage"} 
 Player 2 19:57:15 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:57:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to The Cage \n2:[object Object] killed by Isaac"} 
 Player 2 19:57:15 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":113,"creatorCardId":290,"monsterToDieCardId":274,"stackEffectType":5,"killerId":290}} 
 Player 2 19:57:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to The Cage \n2:[object Object] killed by Isaac"} 
 Player 2 19:57:15 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":112,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":274,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 19:57:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to The Cage \n2:[object Object] killed by Isaac"} 
 Player 2 19:57:15 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":112,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":274,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 19:57:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to The Cage \n2:[object Object] killed by Isaac"} 
 Player 2 19:57:15 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":113,"creatorCardId":290,"monsterToDieCardId":274,"stackEffectType":5,"killerId":290}} 
 Player 2 19:57:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to The Cage \n2:[object Object] killed by Isaac"} 
 Player 2 19:57:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to The Cage \n2:[object Object] killed by Isaac"} 
 Player 2 19:57:15 $REPLACE_STACK:  

 {"currentStack":[{"entityId":112,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":274,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":113,"creatorCardId":290,"monsterToDieCardId":274,"stackEffectType":5,"killerId":290}]} 
 Player 2 19:57:15 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":4},{"type":0,"number":290}],"result":null,"preventMethod":false,"methodScopeId":274,"scopeIsPlayer":false,"index":49,"originStackId":-1},"isAfterActivation":true,"index":49} 
 Player 2 19:57:15 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":4},{"type":2,"number":4},{"type":0,"number":290},{"type":0,"number":274}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":50,"originStackId":112},"isAfterActivation":true,"index":50} 
 Player 2 19:57:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to The Cage \n2:[object Object] killed by Isaac"} 
 Player 2 19:57:15 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":112,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":274,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 19:57:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Isaac"} 
 Player 2 19:57:15 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":112,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":274,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 19:57:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":890,"_text":"Remove After Resolve CombatDamage 112  "}} 
 Player 2 19:57:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Isaac"} 
 Player 2 19:57:15 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":112,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":274,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 19:57:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":891,"_text":"Response Remove After Resolve CombatDamage 112"},"childOfId":890} 
 Player 2 19:57:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":892,"_text":"Wait For Response From Player 2 "},"childOfId":890} 
 Player 2 19:57:15 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:57:15 $ACTION_MASSAGE_REMOVE:  

 {"id":892} 
 Player 2 19:57:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":893,"_text":"Wait For Response From Player 1 "},"childOfId":890} 
 Player 2 19:57:15 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:57:15 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:57:16 $ACTION_MASSAGE_REMOVE:  

 {"id":893} 
 Player 2 19:57:16 $ACTION_MASSAGE_REMOVE:  

 {"id":891} 
 Player 2 19:57:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":894,"_text":"Resolve MonsterDeath 113 "}} 
 Player 2 19:57:16 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":274,"particleType":5} 
 Player 2 19:57:16 $CANCEL_ATTACK:  
 Player 2 19:57:16 $NEXT_STACK_ID:  
 Player 2 19:57:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Isaac"} 
 Player 2 19:57:16 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:57:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get The Cage<Monster> reward \n2:[object Object] killed by Isaac"} 
 Player 2 19:57:16 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":114,"creatorCardId":290,"monsterCardWithRewardId":274,"playerCardIdToReward":290,"stackEffectType":7}} 
 Player 2 19:57:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get The Cage<Monster> reward \n2:[object Object] killed by Isaac"} 
 Player 2 19:57:16 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":113,"creatorCardId":290,"monsterToDieCardId":274,"stackEffectType":5,"killerId":290}} 
 Player 2 19:57:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get The Cage<Monster> reward \n2:[object Object] killed by Isaac"} 
 Player 2 19:57:16 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":114,"creatorCardId":290,"monsterCardWithRewardId":274,"playerCardIdToReward":290,"stackEffectType":7}} 
 Player 2 19:57:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get The Cage<Monster> reward \n2:[object Object] killed by Isaac"} 
 Player 2 19:57:16 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":113,"creatorCardId":290,"monsterToDieCardId":274,"stackEffectType":5,"killerId":290}} 
 Player 2 19:57:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get The Cage<Monster> reward \n2:[object Object] killed by Isaac"} 
 Player 2 19:57:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get The Cage<Monster> reward \n2:[object Object] killed by Isaac"} 
 Player 2 19:57:16 $REPLACE_STACK:  

 {"currentStack":[{"entityId":114,"creatorCardId":290,"monsterCardWithRewardId":274,"playerCardIdToReward":290,"stackEffectType":7},{"entityId":113,"creatorCardId":290,"monsterToDieCardId":274,"stackEffectType":5,"killerId":290}]} 
 Player 2 19:57:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get The Cage<Monster> reward \n2:[object Object] killed by Isaac"} 
 Player 2 19:57:16 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":113,"creatorCardId":290,"monsterToDieCardId":274,"stackEffectType":5,"killerId":290}} 
 Player 2 19:57:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get The Cage<Monster> reward"} 
 Player 2 19:57:16 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":113,"creatorCardId":290,"monsterToDieCardId":274,"stackEffectType":5,"killerId":290}} 
 Player 2 19:57:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":895,"_text":"Remove After Resolve MonsterDeath 113  "}} 
 Player 2 19:57:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get The Cage<Monster> reward"} 
 Player 2 19:57:17 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":113,"creatorCardId":290,"monsterToDieCardId":274,"stackEffectType":5,"killerId":290}} 
 Player 2 19:57:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":896,"_text":"Response Remove After Resolve MonsterDeath 113"},"childOfId":895} 
 Player 2 19:57:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":897,"_text":"Wait For Response From Player 2 "},"childOfId":895} 
 Player 2 19:57:17 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:57:17 $ACTION_MASSAGE_REMOVE:  

 {"id":897} 
 Player 2 19:57:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":898,"_text":"Wait For Response From Player 1 "},"childOfId":895} 
 Player 2 19:57:17 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:57:17 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:57:17 $ACTION_MASSAGE_REMOVE:  

 {"id":898} 
 Player 2 19:57:17 $ACTION_MASSAGE_REMOVE:  

 {"id":896} 
 Player 2 19:57:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":899,"_text":"Resolve MonsterRewardStackEffect 114 "}} 
 Player 2 19:57:17 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 19:57:17 $REGISTER_PASSIVE_ITEM:  

 {"cardId":159} 
 Player 2 19:57:17 $MOVE_CARD:  

 {"moveIndex":61,"cardId":159,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 
 Player 2 19:57:18 $ADD_AN_ITEM:  

 {"playerId":2,"cardId":159,"isReward":true} 
 Player 2 19:57:18 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":159}],"result":true,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":51,"originStackId":-1},"isAfterActivation":true,"index":51} 
 Player 2 19:57:18 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 19:57:18 $REGISTER_PASSIVE_ITEM:  

 {"cardId":199} 
 Player 2 19:57:18 $MOVE_CARD:  

 {"moveIndex":62,"cardId":199,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 
 Player 2 19:57:18 $ADD_AN_ITEM:  

 {"playerId":2,"cardId":199,"isReward":true} 
 Player 2 19:57:18 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":199}],"result":true,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":52,"originStackId":-1},"isAfterActivation":true,"index":52} 
 Player 2 19:57:18 $NEXT_STACK_ID:  
 Player 2 19:57:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get The Cage<Monster> reward"} 
 Player 2 19:57:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get The Cage<Monster> reward \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 
 Player 2 19:57:18 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":115,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":199,"effectToDo":{"effectName":"AddPlayLootOpportunity","cardEffectNum":0,"cardPlayerId":2,"cardId":199,"effctType":0},"isAfterActivation":true,"index":52,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 19:57:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get The Cage<Monster> reward \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 
 Player 2 19:57:18 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":115,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":199,"effectToDo":{"effectName":"AddPlayLootOpportunity","cardEffectNum":0,"cardPlayerId":2,"cardId":199,"effctType":0},"isAfterActivation":true,"index":52,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 19:57:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":900,"_text":"Add ActivatePassiveEffect 115 "}} 
 Player 2 19:57:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get The Cage<Monster> reward \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 
 Player 2 19:57:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get The Cage<Monster> reward \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 
 Player 2 19:57:19 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":115,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":199,"effectToDo":{"effectName":"AddPlayLootOpportunity","cardEffectNum":0,"cardPlayerId":2,"cardId":199,"effctType":0},"isAfterActivation":true,"index":52,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 19:57:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":901,"_text":"Response Adding ActivatePassiveEffect 115"},"childOfId":900} 
 Player 2 19:57:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":902,"_text":"Wait For Response From Player 1 "},"childOfId":900} 
 Player 2 19:57:19 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:57:19 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:57:19 $ACTION_MASSAGE_REMOVE:  

 {"id":902} 
 Player 2 19:57:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":903,"_text":"Wait For Response From Player 2 "},"childOfId":900} 
 Player 2 19:57:19 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:57:19 $ACTION_MASSAGE_REMOVE:  

 {"id":903} 
 Player 2 19:57:19 $ACTION_MASSAGE_REMOVE:  

 {"id":901} 
 Player 2 19:57:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":904,"_text":"Resolve ActivatePassiveEffect 115 "}} 
 Player 2 19:57:19 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":199,"particleType":6} 
 Player 2 19:57:21 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":199,"particleType":6} 
 Player 2 19:57:21 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":199}],"result":true,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":52,"originStackId":-1},"isAfterActivation":true,"index":52} 
 Player 2 19:57:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get The Cage<Monster> reward \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 
 Player 2 19:57:21 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":115,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":199,"isAfterActivation":true,"index":52,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 19:57:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get The Cage<Monster> reward"} 
 Player 2 19:57:21 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":115,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":199,"isAfterActivation":true,"index":52,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 19:57:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":905,"_text":"Remove After Resolve ActivatePassiveEffect 115  "}} 
 Player 2 19:57:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get The Cage<Monster> reward"} 
 Player 2 19:57:21 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":115,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":199,"isAfterActivation":true,"index":52,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 19:57:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":906,"_text":"Response Remove After Resolve ActivatePassiveEffect 115"},"childOfId":905} 
 Player 2 19:57:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":907,"_text":"Wait For Response From Player 2 "},"childOfId":905} 
 Player 2 19:57:21 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:57:21 $ACTION_MASSAGE_REMOVE:  

 {"id":907} 
 Player 2 19:57:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":908,"_text":"Wait For Response From Player 1 "},"childOfId":905} 
 Player 2 19:57:21 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:57:21 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:57:22 $ACTION_MASSAGE_REMOVE:  

 {"id":908} 
 Player 2 19:57:22 $ACTION_MASSAGE_REMOVE:  

 {"id":906} 
 Player 2 19:57:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":909,"_text":"Resolve MonsterRewardStackEffect 114 "}} 
 Player 2 19:57:22 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":274,"scopeIsPlayer":false,"index":53,"originStackId":114},"isAfterActivation":true,"index":53} 
 Player 2 19:57:22 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:57:22 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:57:22 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":114,"creatorCardId":290,"monsterCardWithRewardId":274,"playerCardIdToReward":290,"stackEffectType":7}} 
 Player 2 19:57:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":910,"_text":"Fizzle MonsterRewardStackEffect 114"}} 
 Player 2 19:57:22 $FIZZLE_STACK_EFFECT:  

 {"entityId":114} 
 Player 2 19:57:22 $MOVE_CARD:  

 {"moveIndex":63,"cardId":274,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"soulsLayout"} 
 Player 2 19:57:23 $GET_SOUL:  

 {"playerId":2,"cardId":274} 
 Player 2 19:57:23 $REMOVE_MONSTER:  

 {"holderId":2,"monsterId":274} 
 Player 2 19:57:23 $GET_NEXT_MONSTER:  

 {"monsterPlaceId":2} 
 Player 2 19:57:23 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":911,"_text":"Stack Was Emptied "}} 
 Player 2 19:57:23 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:57:37 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:57:37 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:57:37 $REPLACE_STACK:  

 {"currentStack":[]} 
 Player 2 19:57:37 $END_TURN:  
 Player 2 19:57:37 $SET_TURN:  

 {"playerId":1} 
 Player 2 19:57:37 $START_TURN:  

 {"playerId":1} 
 Player 2 19:57:37 $STACK_EMPTIED:  

 {"playerId":1} 
 Player 2 19:57:37 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:57:37 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:57:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Purple Heart "} 
 Player 2 19:57:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Purple Heart "} 
 Player 2 19:57:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Purple Heart "} 
 Player 2 19:57:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Purple Heart "} 
 Player 2 19:57:37 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:57:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Purple Heart "} 
 Player 2 19:57:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Purple Heart "} 
 Player 2 19:57:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Purple Heart "} 
 Player 2 19:57:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Purple Heart "} 
 Player 2 19:57:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Purple Heart "} 
 Player 2 19:57:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Purple Heart "} 
 Player 2 19:57:56 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:57:57 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:57:57 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:57:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 19:57:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 19:57:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 19:57:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 19:57:57 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:57:58 $MOVE_CARD_END:  

 {"moveIndex":64,"cardId":60,"flipIfFlipped":false,"playerId":1} 
 Player 2 19:57:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 19:57:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 19:57:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 19:57:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 19:57:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 19:57:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 19:57:58 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:58:03 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:58:03 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:58:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 19:58:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 19:58:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 19:58:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 19:58:10 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:58:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 19:58:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 19:58:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 19:58:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 19:58:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 19:58:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 19:58:13 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:58:17 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:58:17 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:58:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 3 Cents(17) "} 
 Player 2 19:58:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 3 Cents(17) "} 
 Player 2 19:58:18 $MOVE_CARD_END:  

 {"moveIndex":65,"cardId":55,"flipIfFlipped":true,"playerId":1} 
 Player 2 19:58:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 3 Cents(17) "} 
 Player 2 19:58:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 3 Cents(17) "} 
 Player 2 19:58:18 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:58:21 $MOVE_CARD_END:  

 {"moveIndex":66,"cardId":55,"flipIfFlipped":true,"playerId":1} 
 Player 2 19:58:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 3 Cents(17) "} 
 Player 2 19:58:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 3 Cents(17) "} 
 Player 2 19:58:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 3 Cents(17) "} 
 Player 2 19:58:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 3 Cents(17) "} 
 Player 2 19:58:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 3 Cents(17) "} 
 Player 2 19:58:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 3 Cents(17) "} 
 Player 2 19:58:21 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:58:26 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:58:26 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:58:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Monster Deck"} 
 Player 2 19:58:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Monster Deck"} 
 Player 2 19:58:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Monster Deck"} 
 Player 2 19:58:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Monster Deck"} 
 Player 2 19:58:26 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:58:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Monster Deck"} 
 Player 2 19:58:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Monster Deck"} 
 Player 2 19:58:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Red Host"} 
 Player 2 19:58:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Red Host"} 
 Player 2 19:58:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Red Host"} 
 Player 2 19:58:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Red Host"} 
 Player 2 19:58:40 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:59:01 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:59:01 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:59:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Red Host<Monster>"} 
 Player 2 19:59:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Red Host<Monster>"} 
 Player 2 19:59:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Red Host<Monster>"} 
 Player 2 19:59:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Red Host<Monster>"} 
 Player 2 19:59:05 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:59:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Red Host<Monster>"} 
 Player 2 19:59:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Red Host<Monster>"} 
 Player 2 19:59:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Red Host"} 
 Player 2 19:59:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Red Host"} 
 Player 2 19:59:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Red Host"} 
 Player 2 19:59:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Red Host"} 
 Player 2 19:59:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Red Host"} 
 Player 2 19:59:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Red Host"} 
 Player 2 19:59:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Red Host"} 
 Player 2 19:59:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Red Host"} 
 Player 2 19:59:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Red Host"} 
 Player 2 19:59:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Red Host"} 
 Player 2 19:59:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Red Host \n2:Player 1 is rolling against Red Host<Monster>"} 
 Player 2 19:59:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Red Host \n2:Player 1 is rolling against Red Host<Monster>"} 
 Player 2 19:59:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Red Host \n2:Player 1 is rolling against Red Host<Monster>"} 
 Player 2 19:59:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Red Host \n2:Player 1 is rolling against Red Host<Monster>"} 
 Player 2 19:59:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Red Host \n2:Player 1 is rolling against Red Host<Monster>"} 
 Player 2 19:59:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Red Host \n2:Player 1 is rolling against Red Host<Monster>"} 
 Player 2 19:59:07 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:59:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Red Host"} 
 Player 2 19:59:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Red Host"} 
 Player 2 19:59:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 19:59:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 19:59:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 19:59:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 19:59:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 19:59:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 19:59:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 19:59:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 19:59:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 19:59:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 19:59:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Red Host \n2:[object Object] killed by Samson"} 
 Player 2 19:59:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Red Host \n2:[object Object] killed by Samson"} 
 Player 2 19:59:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Red Host \n2:[object Object] killed by Samson"} 
 Player 2 19:59:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Red Host \n2:[object Object] killed by Samson"} 
 Player 2 19:59:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Red Host \n2:[object Object] killed by Samson"} 
 Player 2 19:59:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Red Host \n2:[object Object] killed by Samson"} 
 Player 2 19:59:08 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:59:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 19:59:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 19:59:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Red Host<Monster> reward"} 
 Player 2 19:59:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Red Host<Monster> reward"} 
 Player 2 19:59:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Red Host<Monster> reward"} 
 Player 2 19:59:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Red Host<Monster> reward"} 
 Player 2 19:59:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Red Host<Monster> reward"} 
 Player 2 19:59:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Red Host<Monster> reward"} 
 Player 2 19:59:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Red Host<Monster> reward"} 
 Player 2 19:59:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Red Host<Monster> reward"} 
 Player 2 19:59:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Red Host<Monster> reward"} 
 Player 2 19:59:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Red Host<Monster> reward"} 
 Player 2 19:59:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Red Host<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 2 19:59:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Red Host<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 2 19:59:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Red Host<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 2 19:59:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Red Host<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 2 19:59:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Red Host<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 2 19:59:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Red Host<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 2 19:59:09 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:59:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Red Host<Monster> reward"} 
 Player 2 19:59:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Red Host<Monster> reward"} 
 Player 2 19:59:10 $STACK_EMPTIED:  

 {"playerId":1} 
 Player 2 19:59:10 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:59:10 $MOVE_CARD_END:  

 {"moveIndex":67,"cardId":265,"flipIfFlipped":true,"playerId":1} 
 Player 2 19:59:19 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:59:19 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:59:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 
 Player 2 19:59:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 
 Player 2 19:59:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 
 Player 2 19:59:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 
 Player 2 19:59:19 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:59:19 $MOVE_CARD_END:  

 {"moveIndex":68,"cardId":213,"flipIfFlipped":true,"playerId":1} 
 Player 2 19:59:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 
 Player 2 19:59:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 
 Player 2 19:59:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10 \n2:Activate Synthoil "} 
 Player 2 19:59:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10 \n2:Activate Synthoil "} 
 Player 2 19:59:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10 \n2:Activate Synthoil "} 
 Player 2 19:59:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10 \n2:Activate Synthoil "} 
 Player 2 19:59:20 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:59:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10 \n2:Activate Synthoil "} 
 Player 2 19:59:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10 \n2:Activate Synthoil "} 
 Player 2 19:59:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10 \n2:Activate Synthoil "} 
 Player 2 19:59:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10 \n2:Activate Synthoil "} 
 Player 2 19:59:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10 \n2:Activate Synthoil "} 
 Player 2 19:59:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10 \n2:Activate Synthoil "} 
 Player 2 19:59:23 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:59:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 
 Player 2 19:59:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 
 Player 2 19:59:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 
 Player 2 19:59:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 
 Player 2 19:59:23 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:59:43 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:59:43 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:59:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Samson"} 
 Player 2 19:59:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Samson"} 
 Player 2 19:59:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Samson"} 
 Player 2 19:59:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Samson"} 
 Player 2 19:59:49 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:59:52 $MOVE_CARD_END:  

 {"moveIndex":69,"cardId":60,"flipIfFlipped":true,"playerId":1} 
 Player 2 19:59:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Samson"} 
 Player 2 19:59:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Samson"} 
 Player 2 19:59:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 4 Cents(0) "} 
 Player 2 19:59:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 4 Cents(0) "} 
 Player 2 19:59:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 4 Cents(0) "} 
 Player 2 19:59:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 4 Cents(0) "} 
 Player 2 19:59:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 4 Cents(0) "} 
 Player 2 19:59:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 4 Cents(0) "} 
 Player 2 19:59:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 4 Cents(0) "} 
 Player 2 19:59:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 4 Cents(0) "} 
 Player 2 19:59:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 4 Cents(0) "} 
 Player 2 19:59:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 4 Cents(0) "} 
 Player 2 19:59:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 4 Cents(0)  \n2:Player 1 activated Samson"} 
 Player 2 19:59:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 4 Cents(0)  \n2:Player 1 activated Samson"} 
 Player 2 19:59:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 4 Cents(0)  \n2:Player 1 activated Samson"} 
 Player 2 19:59:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 4 Cents(0)  \n2:Player 1 activated Samson"} 
 Player 2 19:59:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 4 Cents(0)  \n2:Player 1 activated Samson"} 
 Player 2 19:59:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 4 Cents(0)  \n2:Player 1 activated Samson"} 
 Player 2 19:59:53 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:59:56 $MOVE_CARD_END:  

 {"moveIndex":70,"cardId":60,"flipIfFlipped":true,"playerId":1} 
 Player 2 19:59:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 4 Cents(0) "} 
 Player 2 19:59:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 4 Cents(0) "} 
 Player 2 19:59:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 4 Cents(0) "} 
 Player 2 19:59:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 4 Cents(0) "} 
 Player 2 19:59:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 4 Cents(0) "} 
 Player 2 19:59:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 4 Cents(0) "} 
 Player 2 19:59:56 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:59:58 $STACK_EMPTIED:  

 {"playerId":1} 
 Player 2 19:59:58 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:59:58 $RECHARGE_ITEM:  

 {"cardId":290} 
 Player 2 19:59:58 $PLAYER_RECHARGE_ITEM:  

 {"playerId":2,"cardId":290} 
 Player 2 19:59:58 $RECHARGE_ITEM:  

 {"cardId":291} 
 Player 2 19:59:58 $PLAYER_RECHARGE_ITEM:  

 {"playerId":2,"cardId":291} 
 Player 2 19:59:58 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:59:58 $NEXT_STACK_ID:  
 Player 2 19:59:58 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:59:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 19:59:58 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":129,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 
 Player 2 19:59:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 19:59:59 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":129,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 
 Player 2 19:59:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1020,"_text":"Add StartTurnLoot 129 "}} 
 Player 2 19:59:59 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:59:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 19:59:59 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":129,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 
 Player 2 19:59:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1021,"_text":"Response Adding StartTurnLoot 129"},"childOfId":1020} 
 Player 2 19:59:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1022,"_text":"Wait For Response From Player 2 "},"childOfId":1020} 
 Player 2 19:59:59 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:59:59 $ACTION_MASSAGE_REMOVE:  

 {"id":1022} 
 Player 2 19:59:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1023,"_text":"Wait For Response From Player 1 "},"childOfId":1020} 
 Player 2 19:59:59 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:59:59 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:59:59 $ACTION_MASSAGE_REMOVE:  

 {"id":1023} 
 Player 2 19:59:59 $ACTION_MASSAGE_REMOVE:  

 {"id":1021} 
 Player 2 19:59:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1024,"_text":"Resolve StartTurnLoot 129 "}} 
 Player 2 19:59:59 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 19:59:59 $MOVE_CARD:  

 {"moveIndex":71,"cardId":24,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 20:00:00 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":24} 
 Player 2 20:00:00 $FLIP_CARD:  

 {"cardId":24} 
 Player 2 20:00:00 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":24} 
 Player 2 20:00:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 20:00:00 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":129,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 
 Player 2 20:00:00 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:00:00 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":129,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 
 Player 2 20:00:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1025,"_text":"Remove After Resolve StartTurnLoot 129  "}} 
 Player 2 20:00:00 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:00:00 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":129,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 
 Player 2 20:00:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1026,"_text":"Response Remove After Resolve StartTurnLoot 129"},"childOfId":1025} 
 Player 2 20:00:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1027,"_text":"Wait For Response From Player 1 "},"childOfId":1025} 
 Player 2 20:00:00 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:00:00 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:00:00 $ACTION_MASSAGE_REMOVE:  

 {"id":1027} 
 Player 2 20:00:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1028,"_text":"Wait For Response From Player 2 "},"childOfId":1025} 
 Player 2 20:00:00 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:00:00 $ACTION_MASSAGE_REMOVE:  

 {"id":1028} 
 Player 2 20:00:00 $ACTION_MASSAGE_REMOVE:  

 {"id":1026} 
 Player 2 20:00:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1029,"_text":"Stack Was Emptied "}} 
 Player 2 20:00:00 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:00:07 $SHOW_DECISION:  

 {"startCardId":290,"endCardId":227} 
 Player 2 20:00:10 $NEXT_STACK_ID:  
 Player 2 20:00:10 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:00:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck"} 
 Player 2 20:00:10 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":130,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":227,"stackEffectType":4}} 
 Player 2 20:00:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck"} 
 Player 2 20:00:10 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":130,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":227,"stackEffectType":4}} 
 Player 2 20:00:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1030,"_text":"Add DeclareAttack 130 "}} 
 Player 2 20:00:10 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:00:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck"} 
 Player 2 20:00:10 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":130,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":227,"stackEffectType":4}} 
 Player 2 20:00:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1031,"_text":"Response Adding DeclareAttack 130"},"childOfId":1030} 
 Player 2 20:00:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1032,"_text":"Wait For Response From Player 2 "},"childOfId":1030} 
 Player 2 20:00:10 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:00:10 $ACTION_MASSAGE_REMOVE:  

 {"id":1032} 
 Player 2 20:00:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1033,"_text":"Wait For Response From Player 1 "},"childOfId":1030} 
 Player 2 20:00:10 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:00:10 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:00:11 $ACTION_MASSAGE_REMOVE:  

 {"id":1033} 
 Player 2 20:00:11 $ACTION_MASSAGE_REMOVE:  

 {"id":1031} 
 Player 2 20:00:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1034,"_text":"Resolve DeclareAttack 130 "}} 
 Player 2 20:00:11 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 20:00:11 $SHOW_CARD_PREVIEW:  

 {"cardToShowId":246,"playerId":2} 
 Player 2 20:00:16 $FLIP_CARD:  

 {"cardId":246} 
 Player 2 20:00:16 $ADD_MONSTER:  

 {"monsterPlaceId":2,"monsterId":246} 
 Player 2 20:00:16 $NEW_MONSTER_ON_PLACE:  

 {"cardId":246,"monsterPlaceId":2} 
 Player 2 20:00:16 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":246,"particleType":5} 
 Player 2 20:00:16 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":54,"originStackId":130},"isAfterActivation":true,"index":54} 
 Player 2 20:00:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck"} 
 Player 2 20:00:16 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":130,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":246,"stackEffectType":4}} 
 Player 2 20:00:16 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:00:16 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":130,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":246,"stackEffectType":4}} 
 Player 2 20:00:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1035,"_text":"Remove After Resolve DeclareAttack 130  "}} 
 Player 2 20:00:16 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:00:16 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":130,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":246,"stackEffectType":4}} 
 Player 2 20:00:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1036,"_text":"Response Remove After Resolve DeclareAttack 130"},"childOfId":1035} 
 Player 2 20:00:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1037,"_text":"Wait For Response From Player 1 "},"childOfId":1035} 
 Player 2 20:00:16 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:00:16 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:00:16 $ACTION_MASSAGE_REMOVE:  

 {"id":1037} 
 Player 2 20:00:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1038,"_text":"Wait For Response From Player 2 "},"childOfId":1035} 
 Player 2 20:00:16 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:00:16 $ACTION_MASSAGE_REMOVE:  

 {"id":1038} 
 Player 2 20:00:16 $ACTION_MASSAGE_REMOVE:  

 {"id":1036} 
 Player 2 20:00:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1039,"_text":"Stack Was Emptied "}} 
 Player 2 20:00:17 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:00:26 $NEXT_STACK_ID:  
 Player 2 20:00:26 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:00:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Fatty<Monster>"} 
 Player 2 20:00:26 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":131,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":246}} 
 Player 2 20:00:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Fatty<Monster>"} 
 Player 2 20:00:26 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":131,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":246}} 
 Player 2 20:00:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1040,"_text":"Add AttackRoll 131 "}} 
 Player 2 20:00:26 $ROLL_DICE:  

 {"playerId":2} 
 Player 2 20:00:27 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":4} 
 Player 2 20:00:27 $UPDATE_STACK_VIS:  

 {"stackId":131,"text":"player rolled 4 vs Fatty<Monster>"} 
 Player 2 20:00:27 $SHOW_DICE_ROLL:  

 {"stackId":131} 
 Player 2 20:00:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 4 vs Fatty<Monster>"} 
 Player 2 20:00:30 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:00:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 4 vs Fatty<Monster>"} 
 Player 2 20:00:30 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":131,"creatorCardId":290,"numberRolled":4,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":246}} 
 Player 2 20:00:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1041,"_text":"Response Adding AttackRoll 131"},"childOfId":1040} 
 Player 2 20:00:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1042,"_text":"Wait For Response From Player 2 "},"childOfId":1040} 
 Player 2 20:00:30 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:00:30 $ACTION_MASSAGE_REMOVE:  

 {"id":1042} 
 Player 2 20:00:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1043,"_text":"Wait For Response From Player 1 "},"childOfId":1040} 
 Player 2 20:00:30 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:00:30 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:00:31 $ACTION_MASSAGE_REMOVE:  

 {"id":1043} 
 Player 2 20:00:31 $ACTION_MASSAGE_REMOVE:  

 {"id":1041} 
 Player 2 20:00:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1044,"_text":"Resolve AttackRoll 131 "}} 
 Player 2 20:00:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1045,"_text":"Added -1 to original roll"}} 
 Player 2 20:00:31 $NEXT_STACK_ID:  
 Player 2 20:00:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 4 vs Fatty<Monster>"} 
 Player 2 20:00:31 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:00:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Fatty \n2:Player 2 rolled 4 vs Fatty<Monster>"} 
 Player 2 20:00:31 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":132,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":246,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 20:00:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Fatty \n2:Player 2 rolled 4 vs Fatty<Monster>"} 
 Player 2 20:00:31 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":131,"creatorCardId":290,"numberRolled":4,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":246}} 
 Player 2 20:00:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Fatty \n2:Player 2 rolled 4 vs Fatty<Monster>"} 
 Player 2 20:00:31 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":132,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":246,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 20:00:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Fatty \n2:Player 2 rolled 4 vs Fatty<Monster>"} 
 Player 2 20:00:31 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":131,"creatorCardId":290,"numberRolled":4,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":246}} 
 Player 2 20:00:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Fatty \n2:Player 2 rolled 4 vs Fatty<Monster>"} 
 Player 2 20:00:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Fatty \n2:Player 2 rolled 4 vs Fatty<Monster>"} 
 Player 2 20:00:31 $REPLACE_STACK:  

 {"currentStack":[{"entityId":132,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":246,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":131,"creatorCardId":290,"numberRolled":4,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":246}]} 
 Player 2 20:00:31 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":3},{"type":2,"number":2},{"type":2,"number":2}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":55,"originStackId":131},"isAfterActivation":true,"index":55} 
 Player 2 20:00:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Fatty \n2:Player 2 rolled 4 vs Fatty<Monster>"} 
 Player 2 20:00:31 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":131,"creatorCardId":290,"numberRolled":4,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":246}} 
 Player 2 20:00:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Fatty"} 
 Player 2 20:00:31 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":131,"creatorCardId":290,"numberRolled":4,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":246}} 
 Player 2 20:00:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1046,"_text":"Remove After Resolve AttackRoll 131  "}} 
 Player 2 20:00:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Fatty"} 
 Player 2 20:00:31 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":131,"creatorCardId":290,"numberRolled":4,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":246}} 
 Player 2 20:00:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1047,"_text":"Response Remove After Resolve AttackRoll 131"},"childOfId":1046} 
 Player 2 20:00:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1048,"_text":"Wait For Response From Player 2 "},"childOfId":1046} 
 Player 2 20:00:31 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:00:31 $ACTION_MASSAGE_REMOVE:  

 {"id":1048} 
 Player 2 20:00:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1049,"_text":"Wait For Response From Player 1 "},"childOfId":1046} 
 Player 2 20:00:31 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:00:31 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:00:32 $ACTION_MASSAGE_REMOVE:  

 {"id":1049} 
 Player 2 20:00:32 $ACTION_MASSAGE_REMOVE:  

 {"id":1047} 
 Player 2 20:00:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1050,"_text":"Resolve CombatDamage 132 "}} 
 Player 2 20:00:32 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":4},{"type":2,"number":3},{"type":0,"number":290},{"type":0,"number":246}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":4,"originStackId":132},"isAfterActivation":false,"index":4} 
 Player 2 20:00:32 $NEXT_STACK_ID:  
 Player 2 20:00:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Fatty"} 
 Player 2 20:00:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Fatty \n2:Activate Polydactyly effect AddDamage<AddDamage>"} 
 Player 2 20:00:32 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":133,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":199,"effectToDo":{"effectName":"AddDamage","cardEffectNum":2,"cardPlayerId":2,"cardId":199,"effctType":0},"isAfterActivation":false,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 20:00:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Fatty \n2:Activate Polydactyly effect AddDamage<AddDamage>"} 
 Player 2 20:00:32 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":133,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":199,"effectToDo":{"effectName":"AddDamage","cardEffectNum":2,"cardPlayerId":2,"cardId":199,"effctType":0},"isAfterActivation":false,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 20:00:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1051,"_text":"Add ActivatePassiveEffect 133 "}} 
 Player 2 20:00:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Fatty \n2:Activate Polydactyly effect AddDamage<AddDamage>"} 
 Player 2 20:00:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Fatty \n2:Activate Polydactyly effect AddDamage<AddDamage>"} 
 Player 2 20:00:32 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":133,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":199,"effectToDo":{"effectName":"AddDamage","cardEffectNum":2,"cardPlayerId":2,"cardId":199,"effctType":0},"isAfterActivation":false,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 20:00:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1052,"_text":"Response Adding ActivatePassiveEffect 133"},"childOfId":1051} 
 Player 2 20:00:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1053,"_text":"Wait For Response From Player 1 "},"childOfId":1051} 
 Player 2 20:00:32 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:00:32 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:00:33 $ACTION_MASSAGE_REMOVE:  

 {"id":1053} 
 Player 2 20:00:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1054,"_text":"Wait For Response From Player 2 "},"childOfId":1051} 
 Player 2 20:00:33 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:00:33 $ACTION_MASSAGE_REMOVE:  

 {"id":1054} 
 Player 2 20:00:33 $ACTION_MASSAGE_REMOVE:  

 {"id":1052} 
 Player 2 20:00:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1055,"_text":"Resolve ActivatePassiveEffect 133 "}} 
 Player 2 20:00:33 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":199,"particleType":6} 
 Player 2 20:00:35 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":199,"particleType":6} 
 Player 2 20:00:35 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":5},{"type":2,"number":3},{"type":0,"number":290},{"type":0,"number":246}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":4,"originStackId":132},"isAfterActivation":false,"index":4} 
 Player 2 20:00:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Fatty \n2:Activate Polydactyly effect AddDamage<AddDamage>"} 
 Player 2 20:00:35 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":133,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":199,"isAfterActivation":false,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 20:00:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Fatty"} 
 Player 2 20:00:35 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":133,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":199,"isAfterActivation":false,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 20:00:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1056,"_text":"Remove After Resolve ActivatePassiveEffect 133  "}} 
 Player 2 20:00:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Fatty"} 
 Player 2 20:00:35 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":133,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":199,"isAfterActivation":false,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 20:00:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1057,"_text":"Response Remove After Resolve ActivatePassiveEffect 133"},"childOfId":1056} 
 Player 2 20:00:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1058,"_text":"Wait For Response From Player 2 "},"childOfId":1056} 
 Player 2 20:00:35 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:00:35 $ACTION_MASSAGE_REMOVE:  

 {"id":1058} 
 Player 2 20:00:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1059,"_text":"Wait For Response From Player 1 "},"childOfId":1056} 
 Player 2 20:00:35 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:00:35 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:00:35 $ACTION_MASSAGE_REMOVE:  

 {"id":1059} 
 Player 2 20:00:35 $ACTION_MASSAGE_REMOVE:  

 {"id":1057} 
 Player 2 20:00:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1060,"_text":"Resolve CombatDamage 132 "}} 
 Player 2 20:00:36 $UPDATE_STACK_VIS:  

 {"stackId":132,"text":"Isaac will deal 5 combat damage to Fatty"} 
 Player 2 20:00:36 $MONSTER_GET_DAMAGED:  

 {"cardId":246,"hpLeft":0,"damageDealerId":290} 
 Player 2 20:00:36 $NEXT_STACK_ID:  
 Player 2 20:00:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Fatty"} 
 Player 2 20:00:36 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:00:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Fatty \n2:[object Object] killed by Isaac"} 
 Player 2 20:00:36 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":134,"creatorCardId":290,"monsterToDieCardId":246,"stackEffectType":5,"killerId":290}} 
 Player 2 20:00:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Fatty \n2:[object Object] killed by Isaac"} 
 Player 2 20:00:36 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":132,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":246,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 20:00:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Fatty \n2:[object Object] killed by Isaac"} 
 Player 2 20:00:36 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":132,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":246,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 20:00:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Fatty \n2:[object Object] killed by Isaac"} 
 Player 2 20:00:36 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":134,"creatorCardId":290,"monsterToDieCardId":246,"stackEffectType":5,"killerId":290}} 
 Player 2 20:00:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Fatty \n2:[object Object] killed by Isaac"} 
 Player 2 20:00:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Fatty \n2:[object Object] killed by Isaac"} 
 Player 2 20:00:36 $REPLACE_STACK:  

 {"currentStack":[{"entityId":132,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":246,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":134,"creatorCardId":290,"monsterToDieCardId":246,"stackEffectType":5,"killerId":290}]} 
 Player 2 20:00:36 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":5},{"type":0,"number":290}],"result":null,"preventMethod":false,"methodScopeId":246,"scopeIsPlayer":false,"index":56,"originStackId":-1},"isAfterActivation":true,"index":56} 
 Player 2 20:00:36 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":5},{"type":2,"number":3},{"type":0,"number":290},{"type":0,"number":246}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":4,"originStackId":132},"isAfterActivation":true,"index":4} 
 Player 2 20:00:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Fatty \n2:[object Object] killed by Isaac"} 
 Player 2 20:00:36 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":132,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":246,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 20:00:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Isaac"} 
 Player 2 20:00:36 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":132,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":246,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 20:00:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1061,"_text":"Remove After Resolve CombatDamage 132  "}} 
 Player 2 20:00:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Isaac"} 
 Player 2 20:00:36 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":132,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":246,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 20:00:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1062,"_text":"Response Remove After Resolve CombatDamage 132"},"childOfId":1061} 
 Player 2 20:00:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1063,"_text":"Wait For Response From Player 2 "},"childOfId":1061} 
 Player 2 20:00:36 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:00:36 $ACTION_MASSAGE_REMOVE:  

 {"id":1063} 
 Player 2 20:00:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1064,"_text":"Wait For Response From Player 1 "},"childOfId":1061} 
 Player 2 20:00:36 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:00:36 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:00:37 $ACTION_MASSAGE_REMOVE:  

 {"id":1064} 
 Player 2 20:00:37 $ACTION_MASSAGE_REMOVE:  

 {"id":1062} 
 Player 2 20:00:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1065,"_text":"Resolve MonsterDeath 134 "}} 
 Player 2 20:00:37 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":246,"particleType":5} 
 Player 2 20:00:37 $CANCEL_ATTACK:  
 Player 2 20:00:37 $NEXT_STACK_ID:  
 Player 2 20:00:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Isaac"} 
 Player 2 20:00:37 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:00:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Fatty<Monster> reward \n2:[object Object] killed by Isaac"} 
 Player 2 20:00:37 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":135,"creatorCardId":290,"monsterCardWithRewardId":246,"playerCardIdToReward":290,"stackEffectType":7}} 
 Player 2 20:00:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Fatty<Monster> reward \n2:[object Object] killed by Isaac"} 
 Player 2 20:00:37 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":134,"creatorCardId":290,"monsterToDieCardId":246,"stackEffectType":5,"killerId":290}} 
 Player 2 20:00:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Fatty<Monster> reward \n2:[object Object] killed by Isaac"} 
 Player 2 20:00:37 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":135,"creatorCardId":290,"monsterCardWithRewardId":246,"playerCardIdToReward":290,"stackEffectType":7}} 
 Player 2 20:00:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Fatty<Monster> reward \n2:[object Object] killed by Isaac"} 
 Player 2 20:00:37 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":134,"creatorCardId":290,"monsterToDieCardId":246,"stackEffectType":5,"killerId":290}} 
 Player 2 20:00:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Fatty<Monster> reward \n2:[object Object] killed by Isaac"} 
 Player 2 20:00:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Fatty<Monster> reward \n2:[object Object] killed by Isaac"} 
 Player 2 20:00:37 $REPLACE_STACK:  

 {"currentStack":[{"entityId":135,"creatorCardId":290,"monsterCardWithRewardId":246,"playerCardIdToReward":290,"stackEffectType":7},{"entityId":134,"creatorCardId":290,"monsterToDieCardId":246,"stackEffectType":5,"killerId":290}]} 
 Player 2 20:00:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Fatty<Monster> reward \n2:[object Object] killed by Isaac"} 
 Player 2 20:00:37 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":134,"creatorCardId":290,"monsterToDieCardId":246,"stackEffectType":5,"killerId":290}} 
 Player 2 20:00:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Fatty<Monster> reward"} 
 Player 2 20:00:38 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":134,"creatorCardId":290,"monsterToDieCardId":246,"stackEffectType":5,"killerId":290}} 
 Player 2 20:00:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1066,"_text":"Remove After Resolve MonsterDeath 134  "}} 
 Player 2 20:00:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Fatty<Monster> reward"} 
 Player 2 20:00:38 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":134,"creatorCardId":290,"monsterToDieCardId":246,"stackEffectType":5,"killerId":290}} 
 Player 2 20:00:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1067,"_text":"Response Remove After Resolve MonsterDeath 134"},"childOfId":1066} 
 Player 2 20:00:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1068,"_text":"Wait For Response From Player 2 "},"childOfId":1066} 
 Player 2 20:00:38 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:00:38 $ACTION_MASSAGE_REMOVE:  

 {"id":1068} 
 Player 2 20:00:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1069,"_text":"Wait For Response From Player 1 "},"childOfId":1066} 
 Player 2 20:00:38 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:00:38 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:00:38 $ACTION_MASSAGE_REMOVE:  

 {"id":1069} 
 Player 2 20:00:38 $ACTION_MASSAGE_REMOVE:  

 {"id":1067} 
 Player 2 20:00:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1070,"_text":"Resolve MonsterRewardStackEffect 135 "}} 
 Player 2 20:00:38 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 20:00:38 $MOVE_CARD:  

 {"moveIndex":72,"cardId":70,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 20:00:39 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":70} 
 Player 2 20:00:39 $FLIP_CARD:  

 {"cardId":70} 
 Player 2 20:00:39 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":70} 
 Player 2 20:00:39 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":246,"scopeIsPlayer":false,"index":57,"originStackId":135},"isAfterActivation":true,"index":57} 
 Player 2 20:00:39 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:00:39 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:00:39 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":135,"creatorCardId":290,"monsterCardWithRewardId":246,"playerCardIdToReward":290,"stackEffectType":7}} 
 Player 2 20:00:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1071,"_text":"Fizzle MonsterRewardStackEffect 135"}} 
 Player 2 20:00:39 $FIZZLE_STACK_EFFECT:  

 {"entityId":135} 
 Player 2 20:00:39 $MOVE_CARD:  

 {"moveIndex":73,"cardId":246,"placeID":303,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 20:00:40 $MOVE_CARD_TO_PILE:  

 {"type":2,"cardId":246} 
 Player 2 20:00:40 $REMOVE_MONSTER:  

 {"holderId":2,"monsterId":246} 
 Player 2 20:00:40 $GET_NEXT_MONSTER:  

 {"monsterPlaceId":2} 
 Player 2 20:00:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1072,"_text":"Stack Was Emptied "}} 
 Player 2 20:00:40 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:00:52 $SHOW_DECISION:  

 {"startCardId":70,"endCardId":70,"flipEndCard":true} 
 Player 2 20:00:55 $NEXT_STACK_ID:  
 Player 2 20:00:55 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:00:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 4 Cents(10) "} 
 Player 2 20:00:55 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":136,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":70,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 2 20:00:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 4 Cents(10) "} 
 Player 2 20:00:55 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":136,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":70,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 2 20:00:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1073,"_text":"Add PlayLootCardStackEffect 136 "}} 
 Player 2 20:00:55 $PLAYER_LOSE_LOOT:  

 {"playerId":2,"cardId":70} 
 Player 2 20:00:55 $MOVE_CARD:  

 {"moveIndex":74,"cardId":70,"placeID":300,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 20:00:56 $MOVE_CARD_TO_PILE:  

 {"type":7,"cardId":70} 
 Player 2 20:00:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 4 Cents(10): addMoney"} 
 Player 2 20:00:56 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:00:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 4 Cents(10): addMoney"} 
 Player 2 20:00:56 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":136,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":70,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":70,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 20:00:56 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1074,"_text":"Response Adding PlayLootCardStackEffect 136"},"childOfId":1073} 
 Player 2 20:00:56 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1075,"_text":"Wait For Response From Player 2 "},"childOfId":1073} 
 Player 2 20:00:56 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:00:56 $ACTION_MASSAGE_REMOVE:  

 {"id":1075} 
 Player 2 20:00:56 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1076,"_text":"Wait For Response From Player 1 "},"childOfId":1073} 
 Player 2 20:00:56 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:00:56 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:00:56 $ACTION_MASSAGE_REMOVE:  

 {"id":1076} 
 Player 2 20:00:56 $ACTION_MASSAGE_REMOVE:  

 {"id":1074} 
 Player 2 20:00:56 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1077,"_text":"Resolve PlayLootCardStackEffect 136 "}} 
 Player 2 20:00:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 4 Cents(10): addMoney"} 
 Player 2 20:00:56 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":70,"particleType":6} 
 Player 2 20:00:58 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":70,"particleType":6} 
 Player 2 20:00:58 $SET_MONEY:  

 {"playerId":2,"numOfCoins":7} 
 Player 2 20:00:58 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":58,"originStackId":-1},"isAfterActivation":true,"index":58} 
 Player 2 20:00:58 $REMOVE_FROM_PILE:  

 {"cardId":70} 
 Player 2 20:00:58 $MOVE_CARD:  

 {"moveIndex":75,"cardId":70,"placeID":301,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 20:00:59 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":70} 
 Player 2 20:00:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 4 Cents(10): addMoney"} 
 Player 2 20:00:59 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":136,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":70,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 20:00:59 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:00:59 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":136,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":70,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 20:00:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1078,"_text":"Remove After Resolve PlayLootCardStackEffect 136  "}} 
 Player 2 20:00:59 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:00:59 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":136,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":70,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 20:00:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1079,"_text":"Response Remove After Resolve PlayLootCardStackEffect 136"},"childOfId":1078} 
 Player 2 20:00:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1080,"_text":"Wait For Response From Player 1 "},"childOfId":1078} 
 Player 2 20:00:59 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:00:59 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:01:00 $ACTION_MASSAGE_REMOVE:  

 {"id":1080} 
 Player 2 20:01:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1081,"_text":"Wait For Response From Player 2 "},"childOfId":1078} 
 Player 2 20:01:00 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:01:00 $ACTION_MASSAGE_REMOVE:  

 {"id":1081} 
 Player 2 20:01:00 $ACTION_MASSAGE_REMOVE:  

 {"id":1079} 
 Player 2 20:01:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1082,"_text":"Stack Was Emptied "}} 
 Player 2 20:01:00 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:01:01 $SHOW_DECISION:  

 {"startCardId":290,"endCardId":290} 
 Player 2 20:01:04 $NEXT_STACK_ID:  
 Player 2 20:01:04 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:01:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Isaac"} 
 Player 2 20:01:04 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":137,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 20:01:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Isaac"} 
 Player 2 20:01:04 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":137,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 20:01:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1083,"_text":"Add ActivateItem 137 "}} 
 Player 2 20:01:06 $SHOW_DECISION:  

 {"startCardId":290,"endCardId":54,"flipEndCard":true} 
 Player 2 20:01:09 $USE_ITEM:  

 {"cardId":290} 
 Player 2 20:01:09 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:01:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Isaac"} 
 Player 2 20:01:09 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":137,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 20:01:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1084,"_text":"Response Adding ActivateItem 137"},"childOfId":1083} 
 Player 2 20:01:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1085,"_text":"Wait For Response From Player 2 "},"childOfId":1083} 
 Player 2 20:01:10 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:01:10 $ACTION_MASSAGE_REMOVE:  

 {"id":1085} 
 Player 2 20:01:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1086,"_text":"Wait For Response From Player 1 "},"childOfId":1083} 
 Player 2 20:01:10 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:01:10 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:01:10 $ACTION_MASSAGE_REMOVE:  

 {"id":1086} 
 Player 2 20:01:10 $ACTION_MASSAGE_REMOVE:  

 {"id":1084} 
 Player 2 20:01:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1087,"_text":"Resolve ActivateItem 137 "}} 
 Player 2 20:01:10 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":290,"particleType":6} 
 Player 2 20:01:12 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":290,"particleType":6} 
 Player 2 20:01:12 $NEXT_STACK_ID:  
 Player 2 20:01:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Isaac"} 
 Player 2 20:01:12 $PLAYER_LOSE_LOOT:  

 {"playerId":2,"cardId":54} 
 Player 2 20:01:12 $MOVE_CARD:  

 {"moveIndex":76,"cardId":54,"placeID":300,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 20:01:12 $MOVE_CARD_TO_PILE:  

 {"type":7,"cardId":54} 
 Player 2 20:01:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 3 Cents(16): addMoney \n2:Player 2 activated Isaac"} 
 Player 2 20:01:12 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:01:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 3 Cents(16): addMoney \n2:Player 2 activated Isaac"} 
 Player 2 20:01:12 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":138,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":54,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":54,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 20:01:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 3 Cents(16): addMoney \n2:Player 2 activated Isaac"} 
 Player 2 20:01:12 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":137,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 20:01:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 3 Cents(16): addMoney \n2:Player 2 activated Isaac"} 
 Player 2 20:01:13 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":138,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":54,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":54,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 20:01:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 3 Cents(16): addMoney \n2:Player 2 activated Isaac"} 
 Player 2 20:01:13 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":137,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 20:01:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 3 Cents(16): addMoney \n2:Player 2 activated Isaac"} 
 Player 2 20:01:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 3 Cents(16): addMoney \n2:Player 2 activated Isaac"} 
 Player 2 20:01:13 $REPLACE_STACK:  

 {"currentStack":[{"entityId":138,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":54,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":54,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":137,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 
 Player 2 20:01:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 3 Cents(16): addMoney \n2:Player 2 activated Isaac"} 
 Player 2 20:01:13 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":137,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 20:01:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 3 Cents(16): addMoney"} 
 Player 2 20:01:13 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":137,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 20:01:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1088,"_text":"Remove After Resolve ActivateItem 137  "}} 
 Player 2 20:01:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 3 Cents(16): addMoney"} 
 Player 2 20:01:13 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":137,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 20:01:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1089,"_text":"Response Remove After Resolve ActivateItem 137"},"childOfId":1088} 
 Player 2 20:01:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1090,"_text":"Wait For Response From Player 2 "},"childOfId":1088} 
 Player 2 20:01:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:01:13 $ACTION_MASSAGE_REMOVE:  

 {"id":1090} 
 Player 2 20:01:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1091,"_text":"Wait For Response From Player 1 "},"childOfId":1088} 
 Player 2 20:01:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:01:13 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:01:13 $ACTION_MASSAGE_REMOVE:  

 {"id":1091} 
 Player 2 20:01:13 $ACTION_MASSAGE_REMOVE:  

 {"id":1089} 
 Player 2 20:01:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1092,"_text":"Resolve PlayLootCardStackEffect 138 "}} 
 Player 2 20:01:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 3 Cents(16): addMoney"} 
 Player 2 20:01:13 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":54,"particleType":6} 
 Player 2 20:01:15 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":54,"particleType":6} 
 Player 2 20:01:15 $SET_MONEY:  

 {"playerId":2,"numOfCoins":10} 
 Player 2 20:01:15 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":59,"originStackId":-1},"isAfterActivation":true,"index":59} 
 Player 2 20:01:15 $REMOVE_FROM_PILE:  

 {"cardId":54} 
 Player 2 20:01:15 $MOVE_CARD:  

 {"moveIndex":77,"cardId":54,"placeID":301,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 20:01:16 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":54} 
 Player 2 20:01:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 3 Cents(16): addMoney"} 
 Player 2 20:01:16 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":138,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":54,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 20:01:16 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:01:16 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":138,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":54,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 20:01:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1093,"_text":"Remove After Resolve PlayLootCardStackEffect 138  "}} 
 Player 2 20:01:16 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:01:16 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":138,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":54,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 20:01:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1094,"_text":"Response Remove After Resolve PlayLootCardStackEffect 138"},"childOfId":1093} 
 Player 2 20:01:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1095,"_text":"Wait For Response From Player 1 "},"childOfId":1093} 
 Player 2 20:01:16 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:01:16 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:01:17 $ACTION_MASSAGE_REMOVE:  

 {"id":1095} 
 Player 2 20:01:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1096,"_text":"Wait For Response From Player 2 "},"childOfId":1093} 
 Player 2 20:01:17 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:01:17 $ACTION_MASSAGE_REMOVE:  

 {"id":1096} 
 Player 2 20:01:17 $ACTION_MASSAGE_REMOVE:  

 {"id":1094} 
 Player 2 20:01:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1097,"_text":"Stack Was Emptied "}} 
 Player 2 20:01:17 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:01:19 $SHOW_DECISION:  

 {"startCardId":290,"endCardId":165} 
 Player 2 20:01:22 $NEXT_STACK_ID:  
 Player 2 20:01:22 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:01:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Edens Blessing for 10"} 
 Player 2 20:01:22 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":139,"creatorCardId":290,"itemToPurchaseCardId":165,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 
 Player 2 20:01:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Edens Blessing for 10"} 
 Player 2 20:01:22 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":139,"creatorCardId":290,"itemToPurchaseCardId":165,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 
 Player 2 20:01:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1098,"_text":"Add PurchaseItem 139 "}} 
 Player 2 20:01:22 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:01:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Edens Blessing for 10"} 
 Player 2 20:01:22 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":139,"creatorCardId":290,"itemToPurchaseCardId":165,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 
 Player 2 20:01:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1099,"_text":"Response Adding PurchaseItem 139"},"childOfId":1098} 
 Player 2 20:01:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1100,"_text":"Wait For Response From Player 2 "},"childOfId":1098} 
 Player 2 20:01:22 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:01:22 $ACTION_MASSAGE_REMOVE:  

 {"id":1100} 
 Player 2 20:01:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1101,"_text":"Wait For Response From Player 1 "},"childOfId":1098} 
 Player 2 20:01:22 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:01:22 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:01:22 $ACTION_MASSAGE_REMOVE:  

 {"id":1101} 
 Player 2 20:01:22 $ACTION_MASSAGE_REMOVE:  

 {"id":1099} 
 Player 2 20:01:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1102,"_text":"Resolve PurchaseItem 139 "}} 
 Player 2 20:01:22 $SET_MONEY:  

 {"playerId":2,"numOfCoins":0} 
 Player 2 20:01:22 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-10}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":60,"originStackId":-1},"isAfterActivation":true,"index":60} 
 Player 2 20:01:22 $REMOVE_ITEM_FROM_SHOP:  

 {"cardId":165} 
 Player 2 20:01:22 $NEXT_STACK_ID:  
 Player 2 20:01:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Edens Blessing for 10"} 
 Player 2 20:01:22 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:01:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Edens Blessing for 10 \n2:Refill Store slot"} 
 Player 2 20:01:23 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":140,"creatorCardId":290,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 
 Player 2 20:01:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Edens Blessing for 10 \n2:Refill Store slot"} 
 Player 2 20:01:23 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":139,"creatorCardId":290,"itemToPurchaseCardId":165,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 
 Player 2 20:01:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Edens Blessing for 10 \n2:Refill Store slot"} 
 Player 2 20:01:23 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":139,"creatorCardId":290,"itemToPurchaseCardId":165,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 
 Player 2 20:01:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Edens Blessing for 10 \n2:Refill Store slot"} 
 Player 2 20:01:23 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":140,"creatorCardId":290,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 
 Player 2 20:01:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Edens Blessing for 10 \n2:Refill Store slot"} 
 Player 2 20:01:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Edens Blessing for 10 \n2:Refill Store slot"} 
 Player 2 20:01:23 $REPLACE_STACK:  

 {"currentStack":[{"entityId":139,"creatorCardId":290,"itemToPurchaseCardId":165,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9},{"entityId":140,"creatorCardId":290,"slotType":5,"slotToFillId":0,"stackEffectType":10}]} 
 Player 2 20:01:23 $REGISTER_PASSIVE_ITEM:  

 {"cardId":165} 
 Player 2 20:01:23 $MOVE_CARD:  

 {"moveIndex":78,"cardId":165,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 
 Player 2 20:01:23 $ADD_AN_ITEM:  

 {"playerId":2,"cardId":165,"isReward":false} 
 Player 2 20:01:23 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":165}],"result":true,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":61,"originStackId":-1},"isAfterActivation":true,"index":61} 
 Player 2 20:01:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill Store slot"} 
 Player 2 20:01:23 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":139,"creatorCardId":290,"itemToPurchaseCardId":165,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 
 Player 2 20:01:23 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1103,"_text":"Remove After Resolve PurchaseItem 139  "}} 
 Player 2 20:01:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill Store slot"} 
 Player 2 20:01:23 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":139,"creatorCardId":290,"itemToPurchaseCardId":165,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 
 Player 2 20:01:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1104,"_text":"Response Remove After Resolve PurchaseItem 139"},"childOfId":1103} 
 Player 2 20:01:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1105,"_text":"Wait For Response From Player 2 "},"childOfId":1103} 
 Player 2 20:01:24 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:01:24 $ACTION_MASSAGE_REMOVE:  

 {"id":1105} 
 Player 2 20:01:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1106,"_text":"Wait For Response From Player 1 "},"childOfId":1103} 
 Player 2 20:01:24 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:01:24 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:01:24 $ACTION_MASSAGE_REMOVE:  

 {"id":1106} 
 Player 2 20:01:24 $ACTION_MASSAGE_REMOVE:  

 {"id":1104} 
 Player 2 20:01:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1107,"_text":"Resolve RefillEmptySlot 140 "}} 
 Player 2 20:01:24 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 20:01:24 $FLIP_CARD:  

 {"cardId":164} 
 Player 2 20:01:24 $ADD_STORE_CARD:  

 {"cardId":164} 
 Player 2 20:01:24 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:01:24 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":140,"creatorCardId":290,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 
 Player 2 20:01:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1108,"_text":"Remove After Resolve RefillEmptySlot 140  "}} 
 Player 2 20:01:24 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:01:24 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":140,"creatorCardId":290,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 
 Player 2 20:01:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1109,"_text":"Response Remove After Resolve RefillEmptySlot 140"},"childOfId":1108} 
 Player 2 20:01:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1110,"_text":"Wait For Response From Player 1 "},"childOfId":1108} 
 Player 2 20:01:24 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:01:24 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:01:25 $ACTION_MASSAGE_REMOVE:  

 {"id":1110} 
 Player 2 20:01:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1111,"_text":"Wait For Response From Player 2 "},"childOfId":1108} 
 Player 2 20:01:25 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:01:25 $ACTION_MASSAGE_REMOVE:  

 {"id":1111} 
 Player 2 20:01:25 $ACTION_MASSAGE_REMOVE:  

 {"id":1109} 
 Player 2 20:01:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1112,"_text":"Stack Was Emptied "}} 
 Player 2 20:01:25 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:01:31 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_END_TURN","args":[],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":false,"index":5} 
 Player 2 20:01:31 $NEXT_STACK_ID:  
 Player 2 20:01:31 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:01:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Edens Blessing effect AddMoney<AddMoney>"} 
 Player 2 20:01:31 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":141,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":165,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":165,"effctType":0},"isAfterActivation":false,"index":5,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 20:01:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Edens Blessing effect AddMoney<AddMoney>"} 
 Player 2 20:01:31 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":141,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":165,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":165,"effctType":0},"isAfterActivation":false,"index":5,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 20:01:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1113,"_text":"Add ActivatePassiveEffect 141 "}} 
 Player 2 20:01:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Edens Blessing effect AddMoney<AddMoney>"} 
 Player 2 20:01:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Edens Blessing effect AddMoney<AddMoney>"} 
 Player 2 20:01:31 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[290],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":141,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":165,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":165,"effctType":0},"isAfterActivation":false,"index":5,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 20:01:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1114,"_text":"Response Adding ActivatePassiveEffect 141"},"childOfId":1113} 
 Player 2 20:01:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1115,"_text":"Wait For Response From Player 2 "},"childOfId":1113} 
 Player 2 20:01:32 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:01:32 $ACTION_MASSAGE_REMOVE:  

 {"id":1115} 
 Player 2 20:01:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1116,"_text":"Wait For Response From Player 1 "},"childOfId":1113} 
 Player 2 20:01:32 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:01:32 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:01:32 $ACTION_MASSAGE_REMOVE:  

 {"id":1116} 
 Player 2 20:01:32 $ACTION_MASSAGE_REMOVE:  

 {"id":1114} 
 Player 2 20:01:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1117,"_text":"Resolve ActivatePassiveEffect 141 "}} 
 Player 2 20:01:32 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":165,"particleType":6} 
 Player 2 20:01:34 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":165,"particleType":6} 
 Player 2 20:01:34 $SET_MONEY:  

 {"playerId":2,"numOfCoins":6} 
 Player 2 20:01:34 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":6}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":62,"originStackId":-1},"isAfterActivation":true,"index":62} 
 Player 2 20:01:34 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_END_TURN","args":[],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":false,"index":5} 
 Player 2 20:01:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Edens Blessing effect AddMoney<AddMoney>"} 
 Player 2 20:01:34 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[290],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":141,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":165,"isAfterActivation":false,"index":5,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 20:01:34 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:01:34 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[290],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":141,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":165,"isAfterActivation":false,"index":5,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 20:01:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1118,"_text":"Remove After Resolve ActivatePassiveEffect 141  "}} 
 Player 2 20:01:34 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:01:34 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[290],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":141,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":165,"isAfterActivation":false,"index":5,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 20:01:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1119,"_text":"Response Remove After Resolve ActivatePassiveEffect 141"},"childOfId":1118} 
 Player 2 20:01:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1120,"_text":"Wait For Response From Player 1 "},"childOfId":1118} 
 Player 2 20:01:34 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:01:34 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:01:35 $ACTION_MASSAGE_REMOVE:  

 {"id":1120} 
 Player 2 20:01:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1121,"_text":"Wait For Response From Player 2 "},"childOfId":1118} 
 Player 2 20:01:35 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:01:35 $ACTION_MASSAGE_REMOVE:  

 {"id":1121} 
 Player 2 20:01:35 $ACTION_MASSAGE_REMOVE:  

 {"id":1119} 
 Player 2 20:01:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1122,"_text":"Stack Was Emptied "}} 
 Player 2 20:01:35 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:01:35 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:01:35 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:01:35 $REPLACE_STACK:  

 {"currentStack":[]} 
 Player 2 20:01:35 $END_TURN:  
 Player 2 20:01:35 $SET_TURN:  

 {"playerId":1} 
 Player 2 20:01:35 $START_TURN:  

 {"playerId":1} 
 Player 2 20:01:35 $STACK_EMPTIED:  

 {"playerId":1} 
 Player 2 20:01:36 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:01:36 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:01:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Purple Heart "} 
 Player 2 20:01:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Purple Heart "} 
 Player 2 20:01:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Purple Heart "} 
 Player 2 20:01:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Purple Heart "} 
 Player 2 20:01:36 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:01:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Purple Heart "} 
 Player 2 20:01:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Purple Heart "} 
 Player 2 20:01:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Purple Heart "} 
 Player 2 20:01:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Purple Heart "} 
 Player 2 20:01:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Purple Heart "} 
 Player 2 20:01:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Purple Heart "} 
 Player 2 20:01:57 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:01:58 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:01:58 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:01:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 20:01:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 20:01:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 20:01:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 20:01:58 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:01:59 $MOVE_CARD_END:  

 {"moveIndex":79,"cardId":90,"flipIfFlipped":false,"playerId":1} 
 Player 2 20:01:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 20:01:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 20:01:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 20:01:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 20:01:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 20:01:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 20:01:59 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:02:05 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:02:05 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:02:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Monster Deck"} 
 Player 2 20:02:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Monster Deck"} 
 Player 2 20:02:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Monster Deck"} 
 Player 2 20:02:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Monster Deck"} 
 Player 2 20:02:06 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:02:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Monster Deck"} 
 Player 2 20:02:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Monster Deck"} 
 Player 2 20:02:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Little Horn"} 
 Player 2 20:02:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Little Horn"} 
 Player 2 20:02:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Little Horn"} 
 Player 2 20:02:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Little Horn"} 
 Player 2 20:02:17 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:02:26 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:02:26 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:02:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 20:02:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 20:02:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 20:02:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 20:02:38 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:02:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 20:02:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 20:02:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 20:02:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 20:02:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 20:02:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 20:02:40 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:02:48 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:02:48 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:02:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Bomb(3) "} 
 Player 2 20:02:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Bomb(3) "} 
 Player 2 20:02:49 $MOVE_CARD_END:  

 {"moveIndex":80,"cardId":90,"flipIfFlipped":true,"playerId":1} 
 Player 2 20:02:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Bomb(3) "} 
 Player 2 20:02:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Bomb(3) "} 
 Player 2 20:02:54 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:02:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Bomb(3) "} 
 Player 2 20:02:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Bomb(3) "} 
 Player 2 20:02:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 20:02:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 20:02:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 20:02:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 20:02:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 20:02:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 20:02:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 20:02:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 20:02:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 20:02:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 20:02:57 $MOVE_CARD_END:  

 {"moveIndex":81,"cardId":90,"flipIfFlipped":true,"playerId":1} 
 Player 2 20:02:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Bomb(3)  \n2:[object Object] killed by Samson"} 
 Player 2 20:02:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Bomb(3)  \n2:[object Object] killed by Samson"} 
 Player 2 20:02:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Bomb(3)  \n2:[object Object] killed by Samson"} 
 Player 2 20:02:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Bomb(3)  \n2:[object Object] killed by Samson"} 
 Player 2 20:02:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Bomb(3)  \n2:[object Object] killed by Samson"} 
 Player 2 20:02:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Bomb(3)  \n2:[object Object] killed by Samson"} 
 Player 2 20:02:57 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:02:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 20:02:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 20:02:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Leech<Monster> reward"} 
 Player 2 20:02:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Leech<Monster> reward"} 
 Player 2 20:02:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Leech<Monster> reward"} 
 Player 2 20:02:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Leech<Monster> reward"} 
 Player 2 20:02:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Leech<Monster> reward"} 
 Player 2 20:02:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Leech<Monster> reward"} 
 Player 2 20:02:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Leech<Monster> reward"} 
 Player 2 20:02:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Leech<Monster> reward"} 
 Player 2 20:02:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Leech<Monster> reward"} 
 Player 2 20:02:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Leech<Monster> reward"} 
 Player 2 20:02:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Leech<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 2 20:02:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Leech<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 2 20:02:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Leech<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 2 20:02:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Leech<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 2 20:02:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Leech<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 2 20:02:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Leech<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 2 20:02:59 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:02:59 $MOVE_CARD_END:  

 {"moveIndex":82,"cardId":123,"flipIfFlipped":false,"playerId":1} 
 Player 2 20:03:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Leech<Monster> reward"} 
 Player 2 20:03:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Leech<Monster> reward"} 
 Player 2 20:03:00 $STACK_EMPTIED:  

 {"playerId":1} 
 Player 2 20:03:00 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:03:00 $MOVE_CARD_END:  

 {"moveIndex":83,"cardId":256,"flipIfFlipped":true,"playerId":1} 
 Player 2 20:03:09 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:03:09 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:03:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Samson"} 
 Player 2 20:03:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Samson"} 
 Player 2 20:03:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Samson"} 
 Player 2 20:03:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Samson"} 
 Player 2 20:03:15 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:03:17 $MOVE_CARD_END:  

 {"moveIndex":84,"cardId":123,"flipIfFlipped":true,"playerId":1} 
 Player 2 20:03:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Samson"} 
 Player 2 20:03:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Samson"} 
 Player 2 20:03:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play A Sack "} 
 Player 2 20:03:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play A Sack "} 
 Player 2 20:03:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play A Sack "} 
 Player 2 20:03:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play A Sack "} 
 Player 2 20:03:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play A Sack "} 
 Player 2 20:03:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play A Sack "} 
 Player 2 20:03:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play A Sack "} 
 Player 2 20:03:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play A Sack "} 
 Player 2 20:03:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play A Sack "} 
 Player 2 20:03:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play A Sack "} 
 Player 2 20:03:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play A Sack  \n2:Player 1 activated Samson"} 
 Player 2 20:03:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play A Sack  \n2:Player 1 activated Samson"} 
 Player 2 20:03:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play A Sack  \n2:Player 1 activated Samson"} 
 Player 2 20:03:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play A Sack  \n2:Player 1 activated Samson"} 
 Player 2 20:03:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play A Sack  \n2:Player 1 activated Samson"} 
 Player 2 20:03:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play A Sack  \n2:Player 1 activated Samson"} 
 Player 2 20:03:19 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:03:21 $MOVE_CARD_END:  

 {"moveIndex":85,"cardId":120,"flipIfFlipped":false,"playerId":1} 
 Player 2 20:03:22 $MOVE_CARD_END:  

 {"moveIndex":86,"cardId":20,"flipIfFlipped":false,"playerId":1} 
 Player 2 20:03:22 $MOVE_CARD_END:  

 {"moveIndex":87,"cardId":109,"flipIfFlipped":false,"playerId":1} 
 Player 2 20:03:23 $MOVE_CARD_END:  

 {"moveIndex":88,"cardId":123,"flipIfFlipped":true,"playerId":1} 
 Player 2 20:03:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play A Sack "} 
 Player 2 20:03:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play A Sack "} 
 Player 2 20:03:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play A Sack "} 
 Player 2 20:03:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play A Sack "} 
 Player 2 20:03:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play A Sack "} 
 Player 2 20:03:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play A Sack "} 
 Player 2 20:03:23 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:03:42 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:03:42 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:03:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Little Horn<Monster>"} 
 Player 2 20:03:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Little Horn<Monster>"} 
 Player 2 20:03:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Little Horn<Monster>"} 
 Player 2 20:03:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Little Horn<Monster>"} 
 Player 2 20:03:47 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:03:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Little Horn<Monster>"} 
 Player 2 20:03:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Little Horn<Monster>"} 
 Player 2 20:03:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Little Horn"} 
 Player 2 20:03:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Little Horn"} 
 Player 2 20:03:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Little Horn"} 
 Player 2 20:03:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Little Horn"} 
 Player 2 20:03:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Little Horn"} 
 Player 2 20:03:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Little Horn"} 
 Player 2 20:03:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Little Horn"} 
 Player 2 20:03:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Little Horn"} 
 Player 2 20:03:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Little Horn"} 
 Player 2 20:03:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Little Horn"} 
 Player 2 20:03:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster>"} 
 Player 2 20:03:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster>"} 
 Player 2 20:03:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 
 Player 2 20:03:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 
 Player 2 20:03:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 
 Player 2 20:03:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 
 Player 2 20:03:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 
 Player 2 20:03:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 
 Player 2 20:03:48 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":153,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"effectToDo":{"effectName":"DealDamage","cardEffectNum":2,"cardPlayerId":2,"cardId":181,"effctType":0},"isAfterActivation":true,"index":40,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 20:03:48 $END_PUT_ON_STACK:  

 {"playerId":1} 
 Player 2 20:03:49 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:03:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 
 Player 2 20:03:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 
 Player 2 20:03:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 
 Player 2 20:03:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 
 Player 2 20:03:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 
 Player 2 20:03:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 
 Player 2 20:03:49 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":181,"particleType":6} 
 Player 2 20:03:51 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":181,"particleType":6} 
 Player 2 20:03:51 $PLAYER_GET_HIT:  

 {"playerId":1,"damage":1,"damageDealerId":290} 
 Player 2 20:03:51 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":290}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":63,"originStackId":-1},"isAfterActivation":true,"index":63} 
 Player 2 20:03:51 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":{"type":2,"number":6}},{"type":2,"number":{"type":2,"number":2}},{"type":2,"number":{"type":2,"number":6}}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":40},"isAfterActivation":true,"index":40} 
 Player 2 20:03:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 
 Player 2 20:03:51 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":153,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"isAfterActivation":true,"index":40,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 20:03:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 
 Player 2 20:03:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 
 Player 2 20:03:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 
 Player 2 20:03:51 $FINISH_DO_STACK_EFFECT:  

 {"playerId":1,"newStack":[{"entityId":152,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":257,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":151,"creatorCardId":296,"numberRolled":6,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":257},{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":153,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"isAfterActivation":true,"index":40,"hasDataBeenCollectedYet":true,"stackEffectType":14}]} 
 Player 2 20:03:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 
 Player 2 20:03:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 
 Player 2 20:03:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 
 Player 2 20:03:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 
 Player 2 20:03:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 
 Player 2 20:03:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 
 Player 2 20:03:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 
 Player 2 20:03:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 
 Player 2 20:03:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 
 Player 2 20:03:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 
 Player 2 20:03:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 
 Player 2 20:03:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 
 Player 2 20:03:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 
 Player 2 20:03:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 
 Player 2 20:03:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 
 Player 2 20:03:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 
 Player 2 20:03:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 
 Player 2 20:03:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 
 Player 2 20:03:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 
 Player 2 20:03:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 
 Player 2 20:03:53 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:03:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster>"} 
 Player 2 20:03:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster>"} 
 Player 2 20:03:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster>"} 
 Player 2 20:03:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster>"} 
 Player 2 20:03:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster>"} 
 Player 2 20:03:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster>"} 
 Player 2 20:03:53 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:03:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Little Horn"} 
 Player 2 20:03:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Little Horn"} 
 Player 2 20:03:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 20:03:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 20:03:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 20:03:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 20:03:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 20:03:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 20:03:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 20:03:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 20:03:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 20:03:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 20:03:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Little Horn \n2:[object Object] killed by Samson"} 
 Player 2 20:03:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Little Horn \n2:[object Object] killed by Samson"} 
 Player 2 20:03:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Little Horn \n2:[object Object] killed by Samson"} 
 Player 2 20:03:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Little Horn \n2:[object Object] killed by Samson"} 
 Player 2 20:03:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Little Horn \n2:[object Object] killed by Samson"} 
 Player 2 20:03:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Little Horn \n2:[object Object] killed by Samson"} 
 Player 2 20:03:55 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:03:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 20:03:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 20:03:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Little Horn<Monster> reward"} 
 Player 2 20:03:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Little Horn<Monster> reward"} 
 Player 2 20:03:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Little Horn<Monster> reward"} 
 Player 2 20:03:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Little Horn<Monster> reward"} 
 Player 2 20:03:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Little Horn<Monster> reward"} 
 Player 2 20:03:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Little Horn<Monster> reward"} 
 Player 2 20:03:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Little Horn<Monster> reward"} 
 Player 2 20:03:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Little Horn<Monster> reward"} 
 Player 2 20:03:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Little Horn<Monster> reward"} 
 Player 2 20:03:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Little Horn<Monster> reward"} 
 Player 2 20:03:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Little Horn<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 2 20:03:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Little Horn<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 2 20:03:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Little Horn<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 2 20:03:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Little Horn<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 2 20:03:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Little Horn<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 2 20:03:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Little Horn<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 2 20:03:56 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:03:57 $MOVE_CARD_END:  

 {"moveIndex":89,"cardId":7,"flipIfFlipped":false,"playerId":1} 
 Player 2 20:03:58 $MOVE_CARD_END:  

 {"moveIndex":90,"cardId":45,"flipIfFlipped":false,"playerId":1} 
 Player 2 20:03:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Little Horn<Monster> reward"} 
 Player 2 20:03:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Little Horn<Monster> reward"} 
 Player 2 20:03:58 $STACK_EMPTIED:  

 {"playerId":1} 
 Player 2 20:03:58 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:03:58 $MOVE_CARD_END:  

 {"moveIndex":91,"cardId":257,"flipIfFlipped":true,"playerId":1} 
 Player 2 20:04:04 $STACK_EMPTIED:  

 {"playerId":1} 
 Player 2 20:04:05 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:04:05 $RECHARGE_ITEM:  

 {"cardId":290} 
 Player 2 20:04:05 $PLAYER_RECHARGE_ITEM:  

 {"playerId":2,"cardId":290} 
 Player 2 20:04:05 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:04:05 $NEXT_STACK_ID:  
 Player 2 20:04:05 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:04:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 20:04:05 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":156,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 
 Player 2 20:04:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 20:04:05 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":156,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 
 Player 2 20:04:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1228,"_text":"Add StartTurnLoot 156 "}} 
 Player 2 20:04:05 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:04:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 20:04:05 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":156,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 
 Player 2 20:04:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1229,"_text":"Response Adding StartTurnLoot 156"},"childOfId":1228} 
 Player 2 20:04:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1230,"_text":"Wait For Response From Player 2 "},"childOfId":1228} 
 Player 2 20:04:05 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:04:05 $ACTION_MASSAGE_REMOVE:  

 {"id":1230} 
 Player 2 20:04:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1231,"_text":"Wait For Response From Player 1 "},"childOfId":1228} 
 Player 2 20:04:05 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:04:05 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:04:05 $ACTION_MASSAGE_REMOVE:  

 {"id":1231} 
 Player 2 20:04:05 $ACTION_MASSAGE_REMOVE:  

 {"id":1229} 
 Player 2 20:04:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1232,"_text":"Resolve StartTurnLoot 156 "}} 
 Player 2 20:04:05 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 20:04:05 $MOVE_CARD:  

 {"moveIndex":92,"cardId":81,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 20:04:06 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":81} 
 Player 2 20:04:06 $FLIP_CARD:  

 {"cardId":81} 
 Player 2 20:04:06 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":81} 
 Player 2 20:04:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 20:04:06 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":156,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 
 Player 2 20:04:06 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:04:06 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":156,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 
 Player 2 20:04:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1233,"_text":"Remove After Resolve StartTurnLoot 156  "}} 
 Player 2 20:04:06 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:04:06 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":156,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 
 Player 2 20:04:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1234,"_text":"Response Remove After Resolve StartTurnLoot 156"},"childOfId":1233} 
 Player 2 20:04:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1235,"_text":"Wait For Response From Player 1 "},"childOfId":1233} 
 Player 2 20:04:06 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:04:06 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:04:06 $ACTION_MASSAGE_REMOVE:  

 {"id":1235} 
 Player 2 20:04:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1236,"_text":"Wait For Response From Player 2 "},"childOfId":1233} 
 Player 2 20:04:06 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:04:06 $ACTION_MASSAGE_REMOVE:  

 {"id":1236} 
 Player 2 20:04:06 $ACTION_MASSAGE_REMOVE:  

 {"id":1234} 
 Player 2 20:04:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1237,"_text":"Stack Was Emptied "}} 
 Player 2 20:04:07 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:04:18 $SHOW_DECISION:  

 {"startCardId":290,"endCardId":251} 
 Player 2 20:04:21 $NEXT_STACK_ID:  
 Player 2 20:04:21 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:04:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Greed"} 
 Player 2 20:04:21 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":157,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":251,"stackEffectType":4}} 
 Player 2 20:04:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Greed"} 
 Player 2 20:04:21 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":157,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":251,"stackEffectType":4}} 
 Player 2 20:04:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1238,"_text":"Add DeclareAttack 157 "}} 
 Player 2 20:04:21 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:04:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Greed"} 
 Player 2 20:04:21 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":157,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":251,"stackEffectType":4}} 
 Player 2 20:04:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1239,"_text":"Response Adding DeclareAttack 157"},"childOfId":1238} 
 Player 2 20:04:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1240,"_text":"Wait For Response From Player 2 "},"childOfId":1238} 
 Player 2 20:04:21 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:04:21 $ACTION_MASSAGE_REMOVE:  

 {"id":1240} 
 Player 2 20:04:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1241,"_text":"Wait For Response From Player 1 "},"childOfId":1238} 
 Player 2 20:04:21 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:04:21 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:04:21 $ACTION_MASSAGE_REMOVE:  

 {"id":1241} 
 Player 2 20:04:21 $ACTION_MASSAGE_REMOVE:  

 {"id":1239} 
 Player 2 20:04:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1242,"_text":"Resolve DeclareAttack 157 "}} 
 Player 2 20:04:21 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":251,"particleType":5} 
 Player 2 20:04:21 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":64,"originStackId":157},"isAfterActivation":true,"index":64} 
 Player 2 20:04:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Greed"} 
 Player 2 20:04:21 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":157,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":251,"stackEffectType":4}} 
 Player 2 20:04:21 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:04:21 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":157,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":251,"stackEffectType":4}} 
 Player 2 20:04:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1243,"_text":"Remove After Resolve DeclareAttack 157  "}} 
 Player 2 20:04:21 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:04:21 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":157,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":251,"stackEffectType":4}} 
 Player 2 20:04:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1244,"_text":"Response Remove After Resolve DeclareAttack 157"},"childOfId":1243} 
 Player 2 20:04:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1245,"_text":"Wait For Response From Player 1 "},"childOfId":1243} 
 Player 2 20:04:22 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:04:22 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:04:22 $ACTION_MASSAGE_REMOVE:  

 {"id":1245} 
 Player 2 20:04:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1246,"_text":"Wait For Response From Player 2 "},"childOfId":1243} 
 Player 2 20:04:22 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:04:22 $ACTION_MASSAGE_REMOVE:  

 {"id":1246} 
 Player 2 20:04:22 $ACTION_MASSAGE_REMOVE:  

 {"id":1244} 
 Player 2 20:04:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1247,"_text":"Stack Was Emptied "}} 
 Player 2 20:04:22 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:04:27 $NEXT_STACK_ID:  
 Player 2 20:04:27 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:04:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 
 Player 2 20:04:27 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":158,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":251}} 
 Player 2 20:04:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 
 Player 2 20:04:27 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":158,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":251}} 
 Player 2 20:04:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1248,"_text":"Add AttackRoll 158 "}} 
 Player 2 20:04:28 $ROLL_DICE:  

 {"playerId":2} 
 Player 2 20:04:29 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":1} 
 Player 2 20:04:29 $UPDATE_STACK_VIS:  

 {"stackId":158,"text":"player rolled 1 vs Greed<Monster>"} 
 Player 2 20:04:29 $SHOW_DICE_ROLL:  

 {"stackId":158} 
 Player 2 20:04:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs Greed<Monster>"} 
 Player 2 20:04:32 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:04:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs Greed<Monster>"} 
 Player 2 20:04:32 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":158,"creatorCardId":290,"numberRolled":1,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":251}} 
 Player 2 20:04:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1249,"_text":"Response Adding AttackRoll 158"},"childOfId":1248} 
 Player 2 20:04:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1250,"_text":"Wait For Response From Player 2 "},"childOfId":1248} 
 Player 2 20:04:32 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:04:33 $SHOW_DECISION:  

 {"startCardId":290,"endCardId":291} 
 Player 2 20:04:36 $NEXT_STACK_ID:  
 Player 2 20:04:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs Greed<Monster>"} 
 Player 2 20:04:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs Greed<Monster> \n2:Player 2 activated The D6"} 
 Player 2 20:04:37 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":159,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 20:04:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs Greed<Monster> \n2:Player 2 activated The D6"} 
 Player 2 20:04:37 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":159,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 20:04:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1251,"_text":"Add ActivateItem 159 "}} 
 Player 2 20:04:37 $USE_ITEM:  

 {"cardId":291} 
 Player 2 20:04:37 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:04:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs Greed<Monster> \n2:Player 2 activated The D6"} 
 Player 2 20:04:37 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":159,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 20:04:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1252,"_text":"Response Adding ActivateItem 159"},"childOfId":1251} 
 Player 2 20:04:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1253,"_text":"Wait For Response From Player 2 "},"childOfId":1251} 
 Player 2 20:04:37 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:04:38 $ACTION_MASSAGE_REMOVE:  

 {"id":1253} 
 Player 2 20:04:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1254,"_text":"Wait For Response From Player 1 "},"childOfId":1251} 
 Player 2 20:04:38 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:04:38 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:04:38 $ACTION_MASSAGE_REMOVE:  

 {"id":1254} 
 Player 2 20:04:39 $ACTION_MASSAGE_REMOVE:  

 {"id":1252} 
 Player 2 20:04:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1255,"_text":"Resolve ActivateItem 159 "}} 
 Player 2 20:04:39 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":291,"particleType":6} 
 Player 2 20:04:40 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":291,"particleType":6} 
 Player 2 20:04:41 $ROLL_DICE:  

 {"playerId":2} 
 Player 2 20:04:42 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":1} 
 Player 2 20:04:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs Greed<Monster> \n2:Player 2 activated The D6"} 
 Player 2 20:04:42 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":159,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 20:04:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs Greed<Monster>"} 
 Player 2 20:04:42 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":159,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 20:04:42 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1256,"_text":"Remove After Resolve ActivateItem 159  "}} 
 Player 2 20:04:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs Greed<Monster>"} 
 Player 2 20:04:42 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":159,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 20:04:42 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1257,"_text":"Response Remove After Resolve ActivateItem 159"},"childOfId":1256} 
 Player 2 20:04:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1258,"_text":"Wait For Response From Player 1 "},"childOfId":1256} 
 Player 2 20:04:43 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:04:43 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:04:43 $ACTION_MASSAGE_REMOVE:  

 {"id":1258} 
 Player 2 20:04:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1259,"_text":"Wait For Response From Player 2 "},"childOfId":1256} 
 Player 2 20:04:43 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:04:43 $ACTION_MASSAGE_REMOVE:  

 {"id":1259} 
 Player 2 20:04:43 $ACTION_MASSAGE_REMOVE:  

 {"id":1257} 
 Player 2 20:04:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1260,"_text":"Resolve AttackRoll 158 "}} 
 Player 2 20:04:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1261,"_text":"Added -1 to original roll"}} 
 Player 2 20:04:43 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":6,"originStackId":158},"isAfterActivation":false,"index":6} 
 Player 2 20:04:43 $NEXT_STACK_ID:  
 Player 2 20:04:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs Greed<Monster>"} 
 Player 2 20:04:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs Greed<Monster> \n2:Activate Cursed Eye effect EndTurn<EndTurn>"} 
 Player 2 20:04:43 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":160,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":159,"effectToDo":{"effectName":"EndTurn","cardEffectNum":1,"cardPlayerId":2,"cardId":159,"effctType":0},"isAfterActivation":false,"index":6,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 20:04:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs Greed<Monster> \n2:Activate Cursed Eye effect EndTurn<EndTurn>"} 
 Player 2 20:04:43 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":160,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":159,"effectToDo":{"effectName":"EndTurn","cardEffectNum":1,"cardPlayerId":2,"cardId":159,"effctType":0},"isAfterActivation":false,"index":6,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 20:04:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1262,"_text":"Add ActivatePassiveEffect 160 "}} 
 Player 2 20:04:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs Greed<Monster> \n2:Activate Cursed Eye effect EndTurn<EndTurn>"} 
 Player 2 20:04:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs Greed<Monster> \n2:Activate Cursed Eye effect EndTurn<EndTurn>"} 
 Player 2 20:04:43 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":160,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":159,"effectToDo":{"effectName":"EndTurn","cardEffectNum":1,"cardPlayerId":2,"cardId":159,"effctType":0},"isAfterActivation":false,"index":6,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 20:04:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1263,"_text":"Response Adding ActivatePassiveEffect 160"},"childOfId":1262} 
 Player 2 20:04:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1264,"_text":"Wait For Response From Player 2 "},"childOfId":1262} 
 Player 2 20:04:44 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:04:44 $ACTION_MASSAGE_REMOVE:  

 {"id":1264} 
 Player 2 20:04:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1265,"_text":"Wait For Response From Player 1 "},"childOfId":1262} 
 Player 2 20:04:44 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:04:44 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:04:44 $ACTION_MASSAGE_REMOVE:  

 {"id":1265} 
 Player 2 20:04:44 $ACTION_MASSAGE_REMOVE:  

 {"id":1263} 
 Player 2 20:04:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1266,"_text":"Resolve ActivatePassiveEffect 160 "}} 
 Player 2 20:04:44 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":159,"particleType":6} 
 Player 2 20:04:46 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":159,"particleType":6} 
 Player 2 20:04:46 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":251,"particleType":5} 
 Player 2 20:04:46 $CANCEL_ATTACK:  
 Player 2 20:04:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Cursed Eye effect EndTurn<EndTurn>"} 
 Player 2 20:04:46 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":158,"creatorCardId":290,"numberRolled":1,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":251}} 
 Player 2 20:04:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1267,"_text":"Fizzle AttackRoll 158"}} 
 Player 2 20:04:46 $FIZZLE_STACK_EFFECT:  

 {"entityId":158} 
 Player 2 20:04:46 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":6,"originStackId":158},"isAfterActivation":false,"index":6} 
 Player 2 20:04:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Cursed Eye effect EndTurn<EndTurn>"} 
 Player 2 20:04:46 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":160,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":159,"isAfterActivation":false,"index":6,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 20:04:46 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:04:46 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":160,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":159,"isAfterActivation":false,"index":6,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 20:04:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1268,"_text":"Remove After Resolve ActivatePassiveEffect 160  "}} 
 Player 2 20:04:46 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:04:47 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":160,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":159,"isAfterActivation":false,"index":6,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 20:04:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1269,"_text":"Response Remove After Resolve ActivatePassiveEffect 160"},"childOfId":1268} 
 Player 2 20:04:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1270,"_text":"Wait For Response From Player 1 "},"childOfId":1268} 
 Player 2 20:04:47 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:04:47 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:04:47 $ACTION_MASSAGE_REMOVE:  

 {"id":1270} 
 Player 2 20:04:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1271,"_text":"Wait For Response From Player 2 "},"childOfId":1268} 
 Player 2 20:04:47 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:04:47 $ACTION_MASSAGE_REMOVE:  

 {"id":1271} 
 Player 2 20:04:47 $ACTION_MASSAGE_REMOVE:  

 {"id":1269} 
 Player 2 20:04:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1272,"_text":"Stack Was Emptied "}} 
 Player 2 20:04:47 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:04:47 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:04:47 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:04:47 $REPLACE_STACK:  

 {"currentStack":[]} 
 Player 2 20:04:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1273,"_text":"Stack Was Emptied "}} 
 Player 2 20:04:47 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:04:47 $END_TURN:  
 Player 2 20:04:48 $SET_TURN:  

 {"playerId":1} 
 Player 2 20:04:48 $START_TURN:  

 {"playerId":1} 
 Player 2 20:04:48 $ACTION_MASSAGE_REMOVE:  

 {"id":1250} 
 Player 2 20:04:48 $ACTION_MASSAGE_REMOVE:  

 {"id":1249} 
 Player 2 20:04:48 $STACK_EMPTIED:  

 {"playerId":1} 
 Player 2 20:04:48 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:04:48 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:04:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Purple Heart "} 
 Player 2 20:04:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Purple Heart "} 
 Player 2 20:04:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Purple Heart "} 
 Player 2 20:04:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Purple Heart "} 
 Player 2 20:04:48 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:04:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Purple Heart "} 
 Player 2 20:04:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Purple Heart "} 
 Player 2 20:04:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Purple Heart "} 
 Player 2 20:04:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Purple Heart "} 
 Player 2 20:04:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Purple Heart "} 
 Player 2 20:04:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Purple Heart "} 
 Player 2 20:04:59 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:04:59 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:04:59 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:04:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 20:04:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 20:04:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 20:04:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 20:04:59 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:05:00 $MOVE_CARD_END:  

 {"moveIndex":93,"cardId":96,"flipIfFlipped":false,"playerId":1} 
 Player 2 20:05:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 20:05:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 20:05:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 20:05:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 20:05:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 20:05:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 20:05:01 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:05:10 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:05:10 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:05:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Counterfiet Penny "} 
 Player 2 20:05:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Counterfiet Penny "} 
 Player 2 20:05:10 $MOVE_CARD_END:  

 {"moveIndex":94,"cardId":96,"flipIfFlipped":true,"playerId":1} 
 Player 2 20:05:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Counterfiet Penny "} 
 Player 2 20:05:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Counterfiet Penny "} 
 Player 2 20:05:11 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:05:13 $MOVE_CARD_END:  

 {"moveIndex":95,"cardId":96,"flipIfFlipped":true,"playerId":1} 
 Player 2 20:05:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Counterfiet Penny "} 
 Player 2 20:05:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Counterfiet Penny "} 
 Player 2 20:05:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Counterfiet Penny "} 
 Player 2 20:05:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Counterfiet Penny "} 
 Player 2 20:05:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Counterfiet Penny "} 
 Player 2 20:05:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Counterfiet Penny "} 
 Player 2 20:05:14 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:05:23 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:05:23 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:05:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 20:05:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 20:05:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 20:05:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 20:05:28 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:05:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 20:05:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 20:05:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 20:05:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 20:05:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 20:05:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 20:05:30 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:05:38 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:05:38 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:05:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Samson"} 
 Player 2 20:05:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Samson"} 
 Player 2 20:05:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Samson"} 
 Player 2 20:05:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Samson"} 
 Player 2 20:05:50 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":true} 
 Player 2 20:05:50 $SHOW_DECISION:  

 {"startCardId":290,"endCardId":290} 
 Player 2 20:05:53 $NEXT_STACK_ID:  
 Player 2 20:05:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Samson"} 
 Player 2 20:05:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Samson \n2:Player 2 activated Isaac"} 
 Player 2 20:05:53 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":166,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 20:05:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Samson \n2:Player 2 activated Isaac"} 
 Player 2 20:05:53 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":166,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 20:05:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1318,"_text":"Add ActivateItem 166 "}} 
 Player 2 20:05:55 $SHOW_DECISION:  

 {"startCardId":290,"endCardId":24,"flipEndCard":true} 
 Player 2 20:05:58 $USE_ITEM:  

 {"cardId":290} 
 Player 2 20:05:58 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:05:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Samson \n2:Player 2 activated Isaac"} 
 Player 2 20:05:58 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":166,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 20:05:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1319,"_text":"Response Adding ActivateItem 166"},"childOfId":1318} 
 Player 2 20:05:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1320,"_text":"Wait For Response From Player 1 "},"childOfId":1318} 
 Player 2 20:05:58 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:05:58 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:05:59 $ACTION_MASSAGE_REMOVE:  

 {"id":1320} 
 Player 2 20:05:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1321,"_text":"Wait For Response From Player 2 "},"childOfId":1318} 
 Player 2 20:05:59 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:06:00 $ACTION_MASSAGE_REMOVE:  

 {"id":1321} 
 Player 2 20:06:00 $ACTION_MASSAGE_REMOVE:  

 {"id":1319} 
 Player 2 20:06:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1322,"_text":"Resolve ActivateItem 166 "}} 
 Player 2 20:06:00 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":290,"particleType":6} 
 Player 2 20:06:02 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":290,"particleType":6} 
 Player 2 20:06:02 $NEXT_STACK_ID:  
 Player 2 20:06:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Samson \n2:Player 2 activated Isaac"} 
 Player 2 20:06:02 $PLAYER_LOSE_LOOT:  

 {"playerId":2,"cardId":24} 
 Player 2 20:06:02 $MOVE_CARD:  

 {"moveIndex":96,"cardId":24,"placeID":300,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 20:06:02 $MOVE_CARD_TO_PILE:  

 {"type":7,"cardId":24} 
 Player 2 20:06:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Samson \n2:Player 2 play 2 Cents(4): addMoney \n3:Player 2 activated Isaac"} 
 Player 2 20:06:02 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:06:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Samson \n2:Player 2 play 2 Cents(4): addMoney \n3:Player 2 activated Isaac"} 
 Player 2 20:06:02 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":167,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":24,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":24,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 20:06:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Samson \n2:Player 2 play 2 Cents(4): addMoney \n3:Player 2 activated Isaac"} 
 Player 2 20:06:02 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":165,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 20:06:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Samson \n2:Player 2 play 2 Cents(4): addMoney \n3:Player 2 activated Isaac"} 
 Player 2 20:06:03 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":165,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 20:06:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Samson \n2:Player 2 play 2 Cents(4): addMoney \n3:Player 2 activated Isaac"} 
 Player 2 20:06:03 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":167,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":24,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":24,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 20:06:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Samson \n2:Player 2 play 2 Cents(4): addMoney \n3:Player 2 activated Isaac"} 
 Player 2 20:06:03 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":166,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 20:06:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Samson \n2:Player 2 play 2 Cents(4): addMoney \n3:Player 2 activated Isaac"} 
 Player 2 20:06:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Samson \n2:Player 2 play 2 Cents(4): addMoney \n3:Player 2 activated Isaac"} 
 Player 2 20:06:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Samson \n2:Player 2 play 2 Cents(4): addMoney \n3:Player 2 activated Isaac"} 
 Player 2 20:06:03 $REPLACE_STACK:  

 {"currentStack":[{"entityId":165,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1},{"entityId":167,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":24,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":24,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":166,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 
 Player 2 20:06:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Samson \n2:Player 2 play 2 Cents(4): addMoney \n3:Player 2 activated Isaac"} 
 Player 2 20:06:03 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":166,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 20:06:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Samson \n2:Player 2 play 2 Cents(4): addMoney"} 
 Player 2 20:06:03 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":166,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 20:06:03 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1323,"_text":"Remove After Resolve ActivateItem 166  "}} 
 Player 2 20:06:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Samson \n2:Player 2 play 2 Cents(4): addMoney"} 
 Player 2 20:06:03 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":166,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 20:06:03 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1324,"_text":"Response Remove After Resolve ActivateItem 166"},"childOfId":1323} 
 Player 2 20:06:03 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1325,"_text":"Wait For Response From Player 1 "},"childOfId":1323} 
 Player 2 20:06:03 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:06:03 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:06:03 $ACTION_MASSAGE_REMOVE:  

 {"id":1325} 
 Player 2 20:06:03 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1326,"_text":"Wait For Response From Player 2 "},"childOfId":1323} 
 Player 2 20:06:03 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:06:03 $ACTION_MASSAGE_REMOVE:  

 {"id":1326} 
 Player 2 20:06:03 $ACTION_MASSAGE_REMOVE:  

 {"id":1324} 
 Player 2 20:06:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1327,"_text":"Resolve PlayLootCardStackEffect 167 "}} 
 Player 2 20:06:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Samson \n2:Player 2 play 2 Cents(4): addMoney"} 
 Player 2 20:06:04 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":24,"particleType":6} 
 Player 2 20:06:05 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":24,"particleType":6} 
 Player 2 20:06:05 $SET_MONEY:  

 {"playerId":2,"numOfCoins":8} 
 Player 2 20:06:05 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":2}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":65,"originStackId":-1},"isAfterActivation":true,"index":65} 
 Player 2 20:06:05 $REMOVE_FROM_PILE:  

 {"cardId":24} 
 Player 2 20:06:05 $MOVE_CARD:  

 {"moveIndex":97,"cardId":24,"placeID":301,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 20:06:06 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":24} 
 Player 2 20:06:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Samson \n2:Player 2 play 2 Cents(4): addMoney"} 
 Player 2 20:06:06 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":167,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":24,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 20:06:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Samson"} 
 Player 2 20:06:06 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":167,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":24,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 20:06:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1328,"_text":"Remove After Resolve PlayLootCardStackEffect 167  "}} 
 Player 2 20:06:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Samson"} 
 Player 2 20:06:06 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":167,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":24,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 20:06:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1329,"_text":"Response Remove After Resolve PlayLootCardStackEffect 167"},"childOfId":1328} 
 Player 2 20:06:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1330,"_text":"Wait For Response From Player 2 "},"childOfId":1328} 
 Player 2 20:06:06 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:06:06 $ACTION_MASSAGE_REMOVE:  

 {"id":1330} 
 Player 2 20:06:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1331,"_text":"Wait For Response From Player 1 "},"childOfId":1328} 
 Player 2 20:06:06 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:06:06 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:06:07 $ACTION_MASSAGE_REMOVE:  

 {"id":1331} 
 Player 2 20:06:07 $ACTION_MASSAGE_REMOVE:  

 {"id":1329} 
 Player 2 20:06:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1332,"_text":"Resolve ActivateItem 165 "}} 
 Player 2 20:06:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Samson"} 
 Player 2 20:06:07 $DO_STACK_EFFECT:  

 {"originPlayerId":2,"playerId":1,"currentStack":[{"entityId":165,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 
 Player 2 20:06:09 $MOVE_CARD_END:  

 {"moveIndex":98,"cardId":45,"flipIfFlipped":true,"playerId":1} 
 Player 2 20:06:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Samson"} 
 Player 2 20:06:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Samson"} 
 Player 2 20:06:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 3 Cents(7) "} 
 Player 2 20:06:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 3 Cents(7) "} 
 Player 2 20:06:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 3 Cents(7) "} 
 Player 2 20:06:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 3 Cents(7) "} 
 Player 2 20:06:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 3 Cents(7) "} 
 Player 2 20:06:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 3 Cents(7) "} 
 Player 2 20:06:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 3 Cents(7) "} 
 Player 2 20:06:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 3 Cents(7) "} 
 Player 2 20:06:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 3 Cents(7) "} 
 Player 2 20:06:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 3 Cents(7) "} 
 Player 2 20:06:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 3 Cents(7)  \n2:Player 1 activated Samson"} 
 Player 2 20:06:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 3 Cents(7)  \n2:Player 1 activated Samson"} 
 Player 2 20:06:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 3 Cents(7)  \n2:Player 1 activated Samson"} 
 Player 2 20:06:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 3 Cents(7)  \n2:Player 1 activated Samson"} 
 Player 2 20:06:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 3 Cents(7)  \n2:Player 1 activated Samson"} 
 Player 2 20:06:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 3 Cents(7)  \n2:Player 1 activated Samson"} 
 Player 2 20:06:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 3 Cents(7)  \n2:Player 1 activated Samson"} 
 Player 2 20:06:10 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":168,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":45,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":45,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 20:06:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 3 Cents(7)  \n2:Player 1 activated Samson"} 
 Player 2 20:06:10 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":168,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":45,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":45,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 20:06:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 3 Cents(7)  \n2:Player 1 activated Samson"} 
 Player 2 20:06:10 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":165,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 20:06:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 3 Cents(7)  \n2:Player 1 activated Samson"} 
 Player 2 20:06:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 3 Cents(7)  \n2:Player 1 activated Samson"} 
 Player 2 20:06:10 $REPLACE_STACK:  

 {"currentStack":[{"entityId":168,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":45,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":45,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":165,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 
 Player 2 20:06:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 3 Cents(7) "} 
 Player 2 20:06:10 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":165,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 20:06:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1333,"_text":"Remove After Resolve ActivateItem 165  "}} 
 Player 2 20:06:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 3 Cents(7) "} 
 Player 2 20:06:10 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":165,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 20:06:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1334,"_text":"Response Remove After Resolve ActivateItem 165"},"childOfId":1333} 
 Player 2 20:06:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1335,"_text":"Wait For Response From Player 1 "},"childOfId":1333} 
 Player 2 20:06:11 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:06:11 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:06:11 $ACTION_MASSAGE_REMOVE:  

 {"id":1335} 
 Player 2 20:06:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1336,"_text":"Wait For Response From Player 2 "},"childOfId":1333} 
 Player 2 20:06:11 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:06:11 $ACTION_MASSAGE_REMOVE:  

 {"id":1336} 
 Player 2 20:06:11 $ACTION_MASSAGE_REMOVE:  

 {"id":1334} 
 Player 2 20:06:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1337,"_text":"Resolve PlayLootCardStackEffect 168 "}} 
 Player 2 20:06:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 3 Cents(7) "} 
 Player 2 20:06:11 $DO_STACK_EFFECT:  

 {"originPlayerId":2,"playerId":1,"currentStack":[{"entityId":168,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":45,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":45,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}]} 
 Player 2 20:06:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 3 Cents(7) "} 
 Player 2 20:06:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 3 Cents(7) "} 
 Player 2 20:06:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 3 Cents(7)  \n2:Activate Counterfiet Penny "} 
 Player 2 20:06:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 3 Cents(7)  \n2:Activate Counterfiet Penny "} 
 Player 2 20:06:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 3 Cents(7)  \n2:Activate Counterfiet Penny "} 
 Player 2 20:06:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 3 Cents(7)  \n2:Activate Counterfiet Penny "} 
 Player 2 20:06:14 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:06:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 3 Cents(7)  \n2:Activate Counterfiet Penny "} 
 Player 2 20:06:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 3 Cents(7)  \n2:Activate Counterfiet Penny "} 
 Player 2 20:06:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 3 Cents(7)  \n2:Activate Counterfiet Penny "} 
 Player 2 20:06:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 3 Cents(7)  \n2:Activate Counterfiet Penny "} 
 Player 2 20:06:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 3 Cents(7)  \n2:Activate Counterfiet Penny "} 
 Player 2 20:06:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 3 Cents(7)  \n2:Activate Counterfiet Penny "} 
 Player 2 20:06:16 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:06:17 $MOVE_CARD_END:  

 {"moveIndex":99,"cardId":45,"flipIfFlipped":true,"playerId":1} 
 Player 2 20:06:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 3 Cents(7) "} 
 Player 2 20:06:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 3 Cents(7) "} 
 Player 2 20:06:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 3 Cents(7) "} 
 Player 2 20:06:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 3 Cents(7) "} 
 Player 2 20:06:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 3 Cents(7) "} 
 Player 2 20:06:18 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":168,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":45,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":45,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 20:06:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 3 Cents(7) "} 
 Player 2 20:06:18 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":168,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":45,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 20:06:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 3 Cents(7) "} 
 Player 2 20:06:18 $REPLACE_STACK:  

 {"currentStack":[{"entityId":168,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":45,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}]} 
 Player 2 20:06:18 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:06:18 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":168,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":45,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 20:06:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1348,"_text":"Remove After Resolve PlayLootCardStackEffect 168  "}} 
 Player 2 20:06:18 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:06:18 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":168,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":45,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 20:06:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1349,"_text":"Response Remove After Resolve PlayLootCardStackEffect 168"},"childOfId":1348} 
 Player 2 20:06:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1350,"_text":"Wait For Response From Player 2 "},"childOfId":1348} 
 Player 2 20:06:18 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:06:18 $ACTION_MASSAGE_REMOVE:  

 {"id":1350} 
 Player 2 20:06:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1351,"_text":"Wait For Response From Player 1 "},"childOfId":1348} 
 Player 2 20:06:18 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:06:18 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:06:18 $ACTION_MASSAGE_REMOVE:  

 {"id":1351} 
 Player 2 20:06:18 $ACTION_MASSAGE_REMOVE:  

 {"id":1349} 
 Player 2 20:06:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1352,"_text":"Stack Was Emptied "}} 
 Player 2 20:06:18 $STACK_EMPTIED:  

 {"playerId":1} 
 Player 2 20:06:18 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:06:18 $TURN_PLAYER_DO_STACK_EFFECT:  

 {"playerId":1} 
 Player 2 20:06:24 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:06:24 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:06:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 
 Player 2 20:06:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 
 Player 2 20:06:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 
 Player 2 20:06:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 
 Player 2 20:06:24 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:06:25 $MOVE_CARD_END:  

 {"moveIndex":100,"cardId":210,"flipIfFlipped":true,"playerId":1} 
 Player 2 20:06:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 
 Player 2 20:06:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 
 Player 2 20:06:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 
 Player 2 20:06:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 
 Player 2 20:06:25 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:06:56 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:06:56 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:06:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Greed"} 
 Player 2 20:06:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Greed"} 
 Player 2 20:06:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Greed"} 
 Player 2 20:06:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Greed"} 
 Player 2 20:06:56 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:06:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Greed"} 
 Player 2 20:06:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Greed"} 
 Player 2 20:06:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Greed"} 
 Player 2 20:06:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Greed"} 
 Player 2 20:06:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Greed"} 
 Player 2 20:06:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Greed"} 
 Player 2 20:06:57 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:07:06 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:07:06 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:07:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Greed<Monster>"} 
 Player 2 20:07:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Greed<Monster>"} 
 Player 2 20:07:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Greed<Monster>"} 
 Player 2 20:07:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Greed<Monster>"} 
 Player 2 20:07:15 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:07:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Greed<Monster>"} 
 Player 2 20:07:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Greed<Monster>"} 
 Player 2 20:07:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Greed"} 
 Player 2 20:07:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Greed"} 
 Player 2 20:07:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Greed"} 
 Player 2 20:07:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Greed"} 
 Player 2 20:07:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Greed"} 
 Player 2 20:07:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Greed"} 
 Player 2 20:07:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Greed"} 
 Player 2 20:07:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Greed"} 
 Player 2 20:07:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Greed"} 
 Player 2 20:07:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Greed"} 
 Player 2 20:07:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Greed \n2:Player 1 is rolling against Greed<Monster>"} 
 Player 2 20:07:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Greed \n2:Player 1 is rolling against Greed<Monster>"} 
 Player 2 20:07:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Greed \n2:Player 1 is rolling against Greed<Monster> \n3:Activate Swarm of Flies "} 
 Player 2 20:07:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Greed \n2:Player 1 is rolling against Greed<Monster> \n3:Activate Swarm of Flies "} 
 Player 2 20:07:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Greed \n2:Player 1 is rolling against Greed<Monster> \n3:Activate Swarm of Flies "} 
 Player 2 20:07:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Greed \n2:Player 1 is rolling against Greed<Monster> \n3:Activate Swarm of Flies "} 
 Player 2 20:07:16 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:07:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Greed \n2:Player 1 is rolling against Greed<Monster> \n3:Activate Swarm of Flies "} 
 Player 2 20:07:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Greed \n2:Player 1 is rolling against Greed<Monster> \n3:Activate Swarm of Flies "} 
 Player 2 20:07:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Greed \n2:Player 1 is rolling against Greed<Monster> \n3:Activate Swarm of Flies "} 
 Player 2 20:07:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Greed \n2:Player 1 is rolling against Greed<Monster> \n3:Activate Swarm of Flies "} 
 Player 2 20:07:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Greed \n2:Player 1 is rolling against Greed<Monster> \n3:Activate Swarm of Flies "} 
 Player 2 20:07:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Greed \n2:Player 1 is rolling against Greed<Monster> \n3:Activate Swarm of Flies "} 
 Player 2 20:07:19 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:07:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Greed \n2:Player 1 is rolling against Greed<Monster>"} 
 Player 2 20:07:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Greed \n2:Player 1 is rolling against Greed<Monster>"} 
 Player 2 20:07:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Greed \n2:Player 1 is rolling against Greed<Monster>"} 
 Player 2 20:07:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Greed \n2:Player 1 is rolling against Greed<Monster>"} 
 Player 2 20:07:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Greed \n2:Player 1 is rolling against Greed<Monster>"} 
 Player 2 20:07:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Greed \n2:Player 1 is rolling against Greed<Monster>"} 
 Player 2 20:07:52 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:07:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Greed"} 
 Player 2 20:07:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Greed"} 
 Player 2 20:07:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 20:07:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 20:07:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 20:07:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 20:07:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 20:07:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 20:07:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 20:07:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 20:07:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 20:07:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 20:07:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Greed \n2:[object Object] killed by Samson"} 
 Player 2 20:07:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Greed \n2:[object Object] killed by Samson"} 
 Player 2 20:07:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Greed \n2:[object Object] killed by Samson"} 
 Player 2 20:07:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Greed \n2:[object Object] killed by Samson"} 
 Player 2 20:07:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Greed \n2:[object Object] killed by Samson"} 
 Player 2 20:07:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Greed \n2:[object Object] killed by Samson"} 
 Player 2 20:07:53 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:07:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 20:07:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 20:07:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Greed<Monster> reward"} 
 Player 2 20:07:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Greed<Monster> reward"} 
 Player 2 20:07:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Greed<Monster> reward"} 
 Player 2 20:07:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Greed<Monster> reward"} 
 Player 2 20:07:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Greed<Monster> reward"} 
 Player 2 20:07:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Greed<Monster> reward"} 
 Player 2 20:07:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Greed<Monster> reward"} 
 Player 2 20:07:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Greed<Monster> reward"} 
 Player 2 20:07:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Greed<Monster> reward"} 
 Player 2 20:07:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Greed<Monster> reward"} 
 Player 2 20:07:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Greed<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 2 20:07:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Greed<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 2 20:07:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Greed<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 2 20:07:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Greed<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 2 20:07:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Greed<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 2 20:07:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Greed<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 2 20:07:55 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:07:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Greed<Monster> reward"} 
 Player 2 20:07:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Greed<Monster> reward"} 
 Player 2 20:07:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Greed<Monster> reward \n2:Activate Counterfiet Penny "} 
 Player 2 20:07:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Greed<Monster> reward \n2:Activate Counterfiet Penny "} 
 Player 2 20:07:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Greed<Monster> reward \n2:Activate Counterfiet Penny "} 
 Player 2 20:07:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Greed<Monster> reward \n2:Activate Counterfiet Penny "} 
 Player 2 20:07:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Counterfiet Penny "} 
 Player 2 20:07:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Counterfiet Penny "} 
 Player 2 20:07:56 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:07:56 $MOVE_CARD_END:  

 {"moveIndex":101,"cardId":251,"flipIfFlipped":true,"playerId":1} 
 Player 2 20:07:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Counterfiet Penny "} 
 Player 2 20:07:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Counterfiet Penny "} 
 Player 2 20:07:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Counterfiet Penny  \n2:Refill holder1 slot"} 
 Player 2 20:07:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Counterfiet Penny  \n2:Refill holder1 slot"} 
 Player 2 20:07:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Counterfiet Penny  \n2:Refill holder1 slot"} 
 Player 2 20:07:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Counterfiet Penny  \n2:Refill holder1 slot"} 
 Player 2 20:07:57 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:07:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Counterfiet Penny  \n2:Refill holder1 slot"} 
 Player 2 20:07:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Counterfiet Penny  \n2:Refill holder1 slot"} 
 Player 2 20:07:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Counterfiet Penny  \n2:Refill holder1 slot"} 
 Player 2 20:07:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Counterfiet Penny  \n2:Refill holder1 slot"} 
 Player 2 20:07:57 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:07:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Counterfiet Penny "} 
 Player 2 20:07:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Counterfiet Penny "} 
 Player 2 20:07:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Counterfiet Penny "} 
 Player 2 20:07:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Counterfiet Penny "} 
 Player 2 20:07:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Counterfiet Penny "} 
 Player 2 20:07:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Counterfiet Penny "} 
 Player 2 20:07:59 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:08:10 $STACK_EMPTIED:  

 {"playerId":1} 
 Player 2 20:08:10 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:08:10 $RECHARGE_ITEM:  

 {"cardId":290} 
 Player 2 20:08:10 $PLAYER_RECHARGE_ITEM:  

 {"playerId":2,"cardId":290} 
 Player 2 20:08:10 $RECHARGE_ITEM:  

 {"cardId":291} 
 Player 2 20:08:10 $PLAYER_RECHARGE_ITEM:  

 {"playerId":2,"cardId":291} 
 Player 2 20:08:10 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:08:10 $NEXT_STACK_ID:  
 Player 2 20:08:10 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:08:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 20:08:11 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":179,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 
 Player 2 20:08:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 20:08:11 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":179,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 
 Player 2 20:08:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1427,"_text":"Add StartTurnLoot 179 "}} 
 Player 2 20:08:11 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:08:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 20:08:11 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":179,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 
 Player 2 20:08:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1428,"_text":"Response Adding StartTurnLoot 179"},"childOfId":1427} 
 Player 2 20:08:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1429,"_text":"Wait For Response From Player 2 "},"childOfId":1427} 
 Player 2 20:08:11 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:08:11 $ACTION_MASSAGE_REMOVE:  

 {"id":1429} 
 Player 2 20:08:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1430,"_text":"Wait For Response From Player 1 "},"childOfId":1427} 
 Player 2 20:08:11 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:08:11 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:08:11 $ACTION_MASSAGE_REMOVE:  

 {"id":1430} 
 Player 2 20:08:11 $ACTION_MASSAGE_REMOVE:  

 {"id":1428} 
 Player 2 20:08:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1431,"_text":"Resolve StartTurnLoot 179 "}} 
 Player 2 20:08:11 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 20:08:11 $MOVE_CARD:  

 {"moveIndex":102,"cardId":12,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 20:08:11 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":12} 
 Player 2 20:08:11 $FLIP_CARD:  

 {"cardId":12} 
 Player 2 20:08:12 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":12} 
 Player 2 20:08:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 20:08:12 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":179,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 
 Player 2 20:08:12 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:08:12 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":179,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 
 Player 2 20:08:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1432,"_text":"Remove After Resolve StartTurnLoot 179  "}} 
 Player 2 20:08:12 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:08:12 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":179,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 
 Player 2 20:08:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1433,"_text":"Response Remove After Resolve StartTurnLoot 179"},"childOfId":1432} 
 Player 2 20:08:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1434,"_text":"Wait For Response From Player 1 "},"childOfId":1432} 
 Player 2 20:08:12 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:08:12 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:08:12 $ACTION_MASSAGE_REMOVE:  

 {"id":1434} 
 Player 2 20:08:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1435,"_text":"Wait For Response From Player 2 "},"childOfId":1432} 
 Player 2 20:08:12 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:08:12 $ACTION_MASSAGE_REMOVE:  

 {"id":1435} 
 Player 2 20:08:12 $ACTION_MASSAGE_REMOVE:  

 {"id":1433} 
 Player 2 20:08:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1436,"_text":"Stack Was Emptied "}} 
 Player 2 20:08:12 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:08:18 $SHOW_DECISION:  

 {"startCardId":12,"endCardId":12,"flipEndCard":true} 
 Player 2 20:08:21 $NEXT_STACK_ID:  
 Player 2 20:08:21 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:08:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 1 Penny(4) "} 
 Player 2 20:08:21 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":180,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":12,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 2 20:08:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 1 Penny(4) "} 
 Player 2 20:08:21 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":180,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":12,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 2 20:08:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1437,"_text":"Add PlayLootCardStackEffect 180 "}} 
 Player 2 20:08:21 $PLAYER_LOSE_LOOT:  

 {"playerId":2,"cardId":12} 
 Player 2 20:08:21 $MOVE_CARD:  

 {"moveIndex":103,"cardId":12,"placeID":300,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 20:08:21 $MOVE_CARD_TO_PILE:  

 {"type":7,"cardId":12} 
 Player 2 20:08:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 1 Penny(4): addMoney"} 
 Player 2 20:08:21 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:08:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 1 Penny(4): addMoney"} 
 Player 2 20:08:21 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":180,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":12,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":12,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 20:08:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1438,"_text":"Response Adding PlayLootCardStackEffect 180"},"childOfId":1437} 
 Player 2 20:08:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1439,"_text":"Wait For Response From Player 2 "},"childOfId":1437} 
 Player 2 20:08:21 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:08:21 $ACTION_MASSAGE_REMOVE:  

 {"id":1439} 
 Player 2 20:08:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1440,"_text":"Wait For Response From Player 1 "},"childOfId":1437} 
 Player 2 20:08:21 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:08:21 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:08:22 $ACTION_MASSAGE_REMOVE:  

 {"id":1440} 
 Player 2 20:08:22 $ACTION_MASSAGE_REMOVE:  

 {"id":1438} 
 Player 2 20:08:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1441,"_text":"Resolve PlayLootCardStackEffect 180 "}} 
 Player 2 20:08:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 1 Penny(4): addMoney"} 
 Player 2 20:08:22 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":12,"particleType":6} 
 Player 2 20:08:24 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":12,"particleType":6} 
 Player 2 20:08:24 $SET_MONEY:  

 {"playerId":2,"numOfCoins":9} 
 Player 2 20:08:24 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":1}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":66,"originStackId":-1},"isAfterActivation":true,"index":66} 
 Player 2 20:08:24 $REMOVE_FROM_PILE:  

 {"cardId":12} 
 Player 2 20:08:24 $MOVE_CARD:  

 {"moveIndex":104,"cardId":12,"placeID":301,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 20:08:24 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":12} 
 Player 2 20:08:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 1 Penny(4): addMoney"} 
 Player 2 20:08:25 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":180,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":12,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 20:08:25 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:08:25 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":180,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":12,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 20:08:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1442,"_text":"Remove After Resolve PlayLootCardStackEffect 180  "}} 
 Player 2 20:08:25 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:08:25 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":180,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":12,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 20:08:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1443,"_text":"Response Remove After Resolve PlayLootCardStackEffect 180"},"childOfId":1442} 
 Player 2 20:08:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1444,"_text":"Wait For Response From Player 1 "},"childOfId":1442} 
 Player 2 20:08:25 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:08:25 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:08:25 $ACTION_MASSAGE_REMOVE:  

 {"id":1444} 
 Player 2 20:08:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1445,"_text":"Wait For Response From Player 2 "},"childOfId":1442} 
 Player 2 20:08:25 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:08:25 $ACTION_MASSAGE_REMOVE:  

 {"id":1445} 
 Player 2 20:08:25 $ACTION_MASSAGE_REMOVE:  

 {"id":1443} 
 Player 2 20:08:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1446,"_text":"Stack Was Emptied "}} 
 Player 2 20:08:25 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:08:43 $SHOW_DECISION:  

 {"startCardId":290,"endCardId":227} 
 Player 2 20:08:46 $NEXT_STACK_ID:  
 Player 2 20:08:46 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:08:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck"} 
 Player 2 20:08:46 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":181,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":227,"stackEffectType":4}} 
 Player 2 20:08:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck"} 
 Player 2 20:08:46 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":181,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":227,"stackEffectType":4}} 
 Player 2 20:08:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1447,"_text":"Add DeclareAttack 181 "}} 
 Player 2 20:08:46 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:08:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck"} 
 Player 2 20:08:46 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":181,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":227,"stackEffectType":4}} 
 Player 2 20:08:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1448,"_text":"Response Adding DeclareAttack 181"},"childOfId":1447} 
 Player 2 20:08:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1449,"_text":"Wait For Response From Player 2 "},"childOfId":1447} 
 Player 2 20:08:47 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:08:47 $ACTION_MASSAGE_REMOVE:  

 {"id":1449} 
 Player 2 20:08:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1450,"_text":"Wait For Response From Player 1 "},"childOfId":1447} 
 Player 2 20:08:47 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:08:47 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:08:47 $ACTION_MASSAGE_REMOVE:  

 {"id":1450} 
 Player 2 20:08:47 $ACTION_MASSAGE_REMOVE:  

 {"id":1448} 
 Player 2 20:08:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1451,"_text":"Resolve DeclareAttack 181 "}} 
 Player 2 20:08:47 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 20:08:47 $SHOW_CARD_PREVIEW:  

 {"cardToShowId":278,"playerId":2} 
 Player 2 20:09:03 $FLIP_CARD:  

 {"cardId":278} 
 Player 2 20:09:03 $ADD_MONSTER:  

 {"monsterPlaceId":2,"monsterId":278} 
 Player 2 20:09:03 $NEW_MONSTER_ON_PLACE:  

 {"cardId":278,"monsterPlaceId":2} 
 Player 2 20:09:03 $SHOW_DECISION:  

 {"startCardId":290,"endCardId":278} 
 Player 2 20:09:06 $NEXT_STACK_ID:  
 Player 2 20:09:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck"} 
 Player 2 20:09:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs"} 
 Player 2 20:09:06 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":182,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":278,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 20:09:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs"} 
 Player 2 20:09:06 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":182,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":278,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 20:09:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1452,"_text":"Add ActivateItem 182 "}} 
 Player 2 20:09:06 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:09:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs"} 
 Player 2 20:09:06 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":182,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":278,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 20:09:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1453,"_text":"Response Adding ActivateItem 182"},"childOfId":1452} 
 Player 2 20:09:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1454,"_text":"Wait For Response From Player 2 "},"childOfId":1452} 
 Player 2 20:09:07 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:09:07 $ACTION_MASSAGE_REMOVE:  

 {"id":1454} 
 Player 2 20:09:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1455,"_text":"Wait For Response From Player 1 "},"childOfId":1452} 
 Player 2 20:09:07 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:09:07 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:09:07 $ACTION_MASSAGE_REMOVE:  

 {"id":1455} 
 Player 2 20:09:07 $ACTION_MASSAGE_REMOVE:  

 {"id":1453} 
 Player 2 20:09:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1456,"_text":"Resolve ActivateItem 182 "}} 
 Player 2 20:09:07 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":278,"particleType":6} 
 Player 2 20:09:09 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":278,"particleType":6} 
 Player 2 20:09:09 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":278}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":false,"index":7} 
 Player 2 20:09:09 $NEXT_STACK_ID:  
 Player 2 20:09:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs"} 
 Player 2 20:09:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 
 Player 2 20:09:09 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":183,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"isAfterActivation":false,"index":7,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 20:09:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 
 Player 2 20:09:09 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":183,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"isAfterActivation":false,"index":7,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 20:09:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1457,"_text":"Add ActivatePassiveEffect 183 "}} 
 Player 2 20:09:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 
 Player 2 20:09:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 
 Player 2 20:09:09 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":183,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"isAfterActivation":false,"index":7,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 20:09:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1458,"_text":"Response Adding ActivatePassiveEffect 183"},"childOfId":1457} 
 Player 2 20:09:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1459,"_text":"Wait For Response From Player 1 "},"childOfId":1457} 
 Player 2 20:09:09 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:09:09 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:09:10 $ACTION_MASSAGE_REMOVE:  

 {"id":1459} 
 Player 2 20:09:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1460,"_text":"Wait For Response From Player 2 "},"childOfId":1457} 
 Player 2 20:09:10 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:09:10 $ACTION_MASSAGE_REMOVE:  

 {"id":1460} 
 Player 2 20:09:10 $ACTION_MASSAGE_REMOVE:  

 {"id":1458} 
 Player 2 20:09:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1461,"_text":"Resolve ActivatePassiveEffect 183 "}} 
 Player 2 20:09:10 $NEXT_STACK_ID:  
 Player 2 20:09:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 
 Player 2 20:09:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n4:Player 2 roll a dice"} 
 Player 2 20:09:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n4:Player 2 roll a dice"} 
 Player 2 20:09:10 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":184,"creatorCardId":290,"stackEffectToLock":{"effectCollectedData":null,"entityId":183,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":278}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":false,"index":7,"hasDataBeenCollectedYet":false,"stackEffectType":14},"hasLockingStackEffect":false,"stackEffectType":11}} 
 Player 2 20:09:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n4:Player 2 roll a dice"} 
 Player 2 20:09:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n4:Player 2 roll a dice"} 
 Player 2 20:09:10 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":184,"creatorCardId":290,"stackEffectToLock":{"effectCollectedData":null,"entityId":183,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":278}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":false,"index":7,"hasDataBeenCollectedYet":false,"stackEffectType":14},"hasLockingStackEffect":false,"stackEffectType":11}} 
 Player 2 20:09:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1462,"_text":"Add RollDiceStackEffect 184 "}} 
 Player 2 20:09:10 $ROLL_DICE:  

 {"playerId":2} 
 Player 2 20:09:11 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":5} 
 Player 2 20:09:11 $UPDATE_STACK_VIS:  

 {"stackId":184,"text":"player 2 rolled 5"} 
 Player 2 20:09:11 $SHOW_DICE_ROLL:  

 {"stackId":184} 
 Player 2 20:09:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n4:Player 2 rolled 5"} 
 Player 2 20:09:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:09:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n4:Player 2 rolled 5"} 
 Player 2 20:09:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n4:Player 2 rolled 5"} 
 Player 2 20:09:14 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":184,"creatorCardId":290,"stackEffectToLock":{"effectCollectedData":null,"entityId":183,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":278}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":false,"index":7,"hasDataBeenCollectedYet":false,"stackEffectType":14},"hasLockingStackEffect":false,"numberRolled":5,"stackEffectType":11}} 
 Player 2 20:09:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1463,"_text":"Response Adding RollDiceStackEffect 184"},"childOfId":1462} 
 Player 2 20:09:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1464,"_text":"Wait For Response From Player 2 "},"childOfId":1462} 
 Player 2 20:09:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:09:14 $ACTION_MASSAGE_REMOVE:  

 {"id":1464} 
 Player 2 20:09:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1465,"_text":"Wait For Response From Player 1 "},"childOfId":1462} 
 Player 2 20:09:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:09:14 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:09:40 $ACTION_MASSAGE_REMOVE:  

 {"id":1465} 
 Player 2 20:09:40 $ACTION_MASSAGE_REMOVE:  

 {"id":1463} 
 Player 2 20:09:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1466,"_text":"Resolve RollDiceStackEffect 184 "}} 
 Player 2 20:09:40 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":67,"originStackId":184},"isAfterActivation":true,"index":67} 
 Player 2 20:09:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n4:Player 2 rolled 5"} 
 Player 2 20:09:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n4:Player 2 rolled 5"} 
 Player 2 20:09:40 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":184,"creatorCardId":290,"stackEffectToLock":{"effectCollectedData":null,"entityId":183,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":278}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":false,"index":7,"hasDataBeenCollectedYet":false,"stackEffectType":14},"hasLockingStackEffect":false,"numberRolled":5,"stackEffectType":11}} 
 Player 2 20:09:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 
 Player 2 20:09:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 
 Player 2 20:09:40 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":184,"creatorCardId":290,"stackEffectToLock":{"effectCollectedData":null,"entityId":183,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":278}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":false,"index":7,"hasDataBeenCollectedYet":false,"stackEffectType":14},"hasLockingStackEffect":false,"numberRolled":5,"stackEffectType":11}} 
 Player 2 20:09:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1467,"_text":"Remove After Resolve RollDiceStackEffect 184  "}} 
 Player 2 20:09:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 
 Player 2 20:09:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 
 Player 2 20:09:40 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":184,"creatorCardId":290,"stackEffectToLock":{"effectCollectedData":null,"entityId":183,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":278}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":false,"index":7,"hasDataBeenCollectedYet":false,"stackEffectType":14},"hasLockingStackEffect":false,"numberRolled":5,"stackEffectType":11}} 
 Player 2 20:09:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1468,"_text":"Response Remove After Resolve RollDiceStackEffect 184"},"childOfId":1467} 
 Player 2 20:09:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1469,"_text":"Wait For Response From Player 1 "},"childOfId":1467} 
 Player 2 20:09:40 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:09:40 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:09:40 $ACTION_MASSAGE_REMOVE:  

 {"id":1469} 
 Player 2 20:09:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1470,"_text":"Wait For Response From Player 2 "},"childOfId":1467} 
 Player 2 20:09:40 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:09:40 $ACTION_MASSAGE_REMOVE:  

 {"id":1470} 
 Player 2 20:09:40 $ACTION_MASSAGE_REMOVE:  

 {"id":1468} 
 Player 2 20:09:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1471,"_text":"Resolve ActivatePassiveEffect 183 "}} 
 Player 2 20:09:40 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":106,"particleType":6} 
 Player 2 20:09:42 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":106,"particleType":6} 
 Player 2 20:09:42 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":278}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":false,"index":7} 
 Player 2 20:09:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 
 Player 2 20:09:42 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":183,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":2,"cardWithEffectId":106,"isAfterActivation":false,"index":7,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 20:09:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs"} 
 Player 2 20:09:42 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":183,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":2,"cardWithEffectId":106,"isAfterActivation":false,"index":7,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 20:09:42 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1472,"_text":"Remove After Resolve ActivatePassiveEffect 183  "}} 
 Player 2 20:09:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs"} 
 Player 2 20:09:42 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":183,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":2,"cardWithEffectId":106,"isAfterActivation":false,"index":7,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 20:09:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1473,"_text":"Response Remove After Resolve ActivatePassiveEffect 183"},"childOfId":1472} 
 Player 2 20:09:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1474,"_text":"Wait For Response From Player 2 "},"childOfId":1472} 
 Player 2 20:09:43 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:09:43 $ACTION_MASSAGE_REMOVE:  

 {"id":1474} 
 Player 2 20:09:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1475,"_text":"Wait For Response From Player 1 "},"childOfId":1472} 
 Player 2 20:09:43 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:09:43 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:09:43 $ACTION_MASSAGE_REMOVE:  

 {"id":1475} 
 Player 2 20:09:43 $ACTION_MASSAGE_REMOVE:  

 {"id":1473} 
 Player 2 20:09:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1476,"_text":"Resolve ActivateItem 182 "}} 
 Player 2 20:09:43 $PLAYER_GET_HIT:  

 {"playerId":2,"damage":2,"damageDealerId":278} 
 Player 2 20:09:43 $NEXT_STACK_ID:  
 Player 2 20:09:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs"} 
 Player 2 20:09:43 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:09:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die"} 
 Player 2 20:09:43 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":185,"creatorCardId":290,"playerToDieCardId":290,"stackEffectType":15,"killerId":278}} 
 Player 2 20:09:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die"} 
 Player 2 20:09:43 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":181,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":227,"stackEffectType":4}} 
 Player 2 20:09:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die"} 
 Player 2 20:09:43 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":181,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":227,"stackEffectType":4}} 
 Player 2 20:09:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die"} 
 Player 2 20:09:43 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":182,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":278,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 20:09:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die"} 
 Player 2 20:09:43 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":185,"creatorCardId":290,"playerToDieCardId":290,"stackEffectType":15,"killerId":278}} 
 Player 2 20:09:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die"} 
 Player 2 20:09:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die"} 
 Player 2 20:09:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die"} 
 Player 2 20:09:43 $REPLACE_STACK:  

 {"currentStack":[{"entityId":181,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":227,"stackEffectType":4},{"entityId":182,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":278,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1},{"entityId":185,"creatorCardId":290,"playerToDieCardId":290,"stackEffectType":15,"killerId":278}]} 
 Player 2 20:09:43 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":278}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 
 Player 2 20:09:44 $MOVE_CARD:  

 {"moveIndex":105,"cardId":278,"placeID":303,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 20:09:44 $MOVE_CARD_TO_PILE:  

 {"type":2,"cardId":278} 
 Player 2 20:09:44 $REMOVE_MONSTER:  

 {"holderId":2,"monsterId":278} 
 Player 2 20:09:44 $GET_NEXT_MONSTER:  

 {"monsterPlaceId":2} 
 Player 2 20:09:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die"} 
 Player 2 20:09:44 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":182,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":278,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 20:09:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 
 Player 2 20:09:44 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":182,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":278,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 20:09:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1477,"_text":"Remove After Resolve ActivateItem 182  "}} 
 Player 2 20:09:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 
 Player 2 20:09:44 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":182,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":278,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 20:09:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1478,"_text":"Response Remove After Resolve ActivateItem 182"},"childOfId":1477} 
 Player 2 20:09:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1479,"_text":"Wait For Response From Player 2 "},"childOfId":1477} 
 Player 2 20:09:44 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:09:44 $ACTION_MASSAGE_REMOVE:  

 {"id":1479} 
 Player 2 20:09:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1480,"_text":"Wait For Response From Player 1 "},"childOfId":1477} 
 Player 2 20:09:44 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:09:44 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:09:45 $ACTION_MASSAGE_REMOVE:  

 {"id":1480} 
 Player 2 20:09:45 $ACTION_MASSAGE_REMOVE:  

 {"id":1478} 
 Player 2 20:09:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1481,"_text":"Resolve PlayerDeath 185 "}} 
 Player 2 20:09:45 $NEXT_STACK_ID:  
 Player 2 20:09:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 
 Player 2 20:09:45 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:09:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die \n3:Player 2 is about to pay death penalties"} 
 Player 2 20:09:45 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":186,"creatorCardId":290,"playerToPayCardId":290,"stackEffectType":16}} 
 Player 2 20:09:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die \n3:Player 2 is about to pay death penalties"} 
 Player 2 20:09:45 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":181,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":227,"stackEffectType":4}} 
 Player 2 20:09:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die \n3:Player 2 is about to pay death penalties"} 
 Player 2 20:09:45 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":181,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":227,"stackEffectType":4}} 
 Player 2 20:09:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die \n3:Player 2 is about to pay death penalties"} 
 Player 2 20:09:45 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":185,"creatorCardId":290,"playerToDieCardId":290,"stackEffectType":15,"killerId":278}} 
 Player 2 20:09:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die \n3:Player 2 is about to pay death penalties"} 
 Player 2 20:09:45 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":186,"creatorCardId":290,"playerToPayCardId":290,"stackEffectType":16}} 
 Player 2 20:09:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die \n3:Player 2 is about to pay death penalties"} 
 Player 2 20:09:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die \n3:Player 2 is about to pay death penalties"} 
 Player 2 20:09:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die \n3:Player 2 is about to pay death penalties"} 
 Player 2 20:09:45 $REPLACE_STACK:  

 {"currentStack":[{"entityId":181,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":227,"stackEffectType":4},{"entityId":185,"creatorCardId":290,"playerToDieCardId":290,"stackEffectType":15,"killerId":278},{"entityId":186,"creatorCardId":290,"playerToPayCardId":290,"stackEffectType":16}]} 
 Player 2 20:09:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die \n3:Player 2 is about to pay death penalties"} 
 Player 2 20:09:45 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":185,"creatorCardId":290,"playerToDieCardId":290,"stackEffectType":15,"killerId":278}} 
 Player 2 20:09:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to pay death penalties"} 
 Player 2 20:09:45 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":185,"creatorCardId":290,"playerToDieCardId":290,"stackEffectType":15,"killerId":278}} 
 Player 2 20:09:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1482,"_text":"Remove After Resolve PlayerDeath 185  "}} 
 Player 2 20:09:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to pay death penalties"} 
 Player 2 20:09:45 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":185,"creatorCardId":290,"playerToDieCardId":290,"stackEffectType":15,"killerId":278}} 
 Player 2 20:09:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1483,"_text":"Response Remove After Resolve PlayerDeath 185"},"childOfId":1482} 
 Player 2 20:09:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1484,"_text":"Wait For Response From Player 2 "},"childOfId":1482} 
 Player 2 20:09:45 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:09:45 $ACTION_MASSAGE_REMOVE:  

 {"id":1484} 
 Player 2 20:09:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1485,"_text":"Wait For Response From Player 1 "},"childOfId":1482} 
 Player 2 20:09:45 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:09:45 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:09:46 $ACTION_MASSAGE_REMOVE:  

 {"id":1485} 
 Player 2 20:09:46 $ACTION_MASSAGE_REMOVE:  

 {"id":1483} 
 Player 2 20:09:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1486,"_text":"Resolve PlayerDeathPenalties 186 "}} 
 Player 2 20:09:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1487,"_text":"Player 2 pays Penalties"}} 
 Player 2 20:09:46 $SET_MONEY:  

 {"playerId":2,"numOfCoins":8} 
 Player 2 20:09:46 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-1}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":68,"originStackId":-1},"isAfterActivation":true,"index":68} 
 Player 2 20:09:51 $PLAYER_LOSE_LOOT:  

 {"playerId":2,"cardId":15} 
 Player 2 20:09:51 $MOVE_CARD:  

 {"moveIndex":106,"cardId":15,"placeID":301,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 20:09:51 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":15} 
 Player 2 20:09:54 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_LOSE_ITEM","args":[{"type":0,"number":220}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":69,"originStackId":-1},"isAfterActivation":true,"index":69} 
 Player 2 20:09:54 $MOVE_CARD:  

 {"moveIndex":107,"cardId":220,"placeID":303,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 20:09:55 $MOVE_CARD_TO_PILE:  

 {"type":5,"cardId":220} 
 Player 2 20:09:55 $USE_ITEM:  

 {"cardId":290} 
 Player 2 20:09:55 $USE_ITEM:  

 {"cardId":291} 
 Player 2 20:09:55 $PLAYER_DIED:  

 {"playerId":2} 
 Player 2 20:09:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to pay death penalties"} 
 Player 2 20:09:55 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":186,"creatorCardId":290,"playerToPayCardId":290,"stackEffectType":16}} 
 Player 2 20:09:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck"} 
 Player 2 20:09:55 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":186,"creatorCardId":290,"playerToPayCardId":290,"stackEffectType":16}} 
 Player 2 20:09:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1488,"_text":"Remove After Resolve PlayerDeathPenalties 186  "}} 
 Player 2 20:09:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck"} 
 Player 2 20:09:55 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":186,"creatorCardId":290,"playerToPayCardId":290,"stackEffectType":16}} 
 Player 2 20:09:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1489,"_text":"Response Remove After Resolve PlayerDeathPenalties 186"},"childOfId":1488} 
 Player 2 20:09:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1490,"_text":"Wait For Response From Player 1 "},"childOfId":1488} 
 Player 2 20:09:55 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:09:55 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:09:55 $ACTION_MASSAGE_REMOVE:  

 {"id":1490} 
 Player 2 20:09:56 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1491,"_text":"Wait For Response From Player 2 "},"childOfId":1488} 
 Player 2 20:09:56 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:09:56 $ACTION_MASSAGE_REMOVE:  

 {"id":1491} 
 Player 2 20:09:56 $ACTION_MASSAGE_REMOVE:  

 {"id":1489} 
 Player 2 20:09:56 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1492,"_text":"Resolve DeclareAttack 181 "}} 
 Player 2 20:09:56 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":70,"originStackId":181},"isAfterActivation":true,"index":70} 
 Player 2 20:09:56 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:09:56 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":181,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":278,"stackEffectType":4}} 
 Player 2 20:09:56 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1493,"_text":"Remove After Resolve DeclareAttack 181  "}} 
 Player 2 20:09:56 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:09:56 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":181,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":278,"stackEffectType":4}} 
 Player 2 20:09:56 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1494,"_text":"Response Remove After Resolve DeclareAttack 181"},"childOfId":1493} 
 Player 2 20:09:56 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1495,"_text":"Wait For Response From Player 2 "},"childOfId":1493} 
 Player 2 20:09:56 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:09:56 $ACTION_MASSAGE_REMOVE:  

 {"id":1495} 
 Player 2 20:09:56 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1496,"_text":"Wait For Response From Player 1 "},"childOfId":1493} 
 Player 2 20:09:56 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:09:56 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:09:56 $ACTION_MASSAGE_REMOVE:  

 {"id":1496} 
 Player 2 20:09:56 $ACTION_MASSAGE_REMOVE:  

 {"id":1494} 
 Player 2 20:09:56 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1497,"_text":"Stack Was Emptied "}} 
 Player 2 20:09:56 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:09:56 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:09:56 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:09:56 $REPLACE_STACK:  

 {"currentStack":[]} 
 Player 2 20:09:56 $END_TURN:  
 Player 2 20:09:56 $SET_TURN:  

 {"playerId":1} 
 Player 2 20:09:56 $START_TURN:  

 {"playerId":1} 
 Player 2 20:09:57 $STACK_EMPTIED:  

 {"playerId":1} 
 Player 2 20:09:57 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:09:57 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:09:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Purple Heart "} 
 Player 2 20:09:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Purple Heart "} 
 Player 2 20:09:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Purple Heart "} 
 Player 2 20:09:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Purple Heart "} 
 Player 2 20:09:57 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:10:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Purple Heart "} 
 Player 2 20:10:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Purple Heart "} 
 Player 2 20:10:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Purple Heart "} 
 Player 2 20:10:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Purple Heart "} 
 Player 2 20:10:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Purple Heart "} 
 Player 2 20:10:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Purple Heart "} 
 Player 2 20:10:11 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:10:12 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:10:12 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:10:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 20:10:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 20:10:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 20:10:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 20:10:12 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:10:13 $MOVE_CARD_END:  

 {"moveIndex":108,"cardId":59,"flipIfFlipped":false,"playerId":1} 
 Player 2 20:10:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 20:10:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 20:10:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 20:10:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 20:10:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 20:10:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 20:10:13 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:10:22 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:10:22 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:10:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 
 Player 2 20:10:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 
 Player 2 20:10:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 
 Player 2 20:10:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 
 Player 2 20:10:22 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:10:23 $MOVE_CARD_END:  

 {"moveIndex":109,"cardId":196,"flipIfFlipped":true,"playerId":1} 
 Player 2 20:10:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 
 Player 2 20:10:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 
 Player 2 20:10:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 
 Player 2 20:10:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 
 Player 2 20:10:23 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:10:42 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:10:42 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:10:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 20:10:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 20:10:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 20:10:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 20:10:48 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:10:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 20:10:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 20:10:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 20:10:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 20:10:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 20:10:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 20:10:50 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:11:58 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:11:58 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:11:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Joker "} 
 Player 2 20:11:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Joker "} 
 Player 2 20:11:58 $MOVE_CARD_END:  

 {"moveIndex":110,"cardId":109,"flipIfFlipped":true,"playerId":1} 
 Player 2 20:12:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Joker "} 
 Player 2 20:12:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Joker "} 
 Player 2 20:12:04 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:12:23 $MOVE_CARD_END:  

 {"moveIndex":111,"cardId":100,"flipIfFlipped":false,"playerId":1} 
 Player 2 20:12:23 $MOVE_CARD_END:  

 {"moveIndex":112,"cardId":109,"flipIfFlipped":true,"playerId":1} 
 Player 2 20:12:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Joker "} 
 Player 2 20:12:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Joker "} 
 Player 2 20:12:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Joker "} 
 Player 2 20:12:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Joker "} 
 Player 2 20:12:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Joker "} 
 Player 2 20:12:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Joker "} 
 Player 2 20:12:23 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:12:44 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:12:44 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:12:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Pandora's Box"} 
 Player 2 20:12:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Pandora's Box"} 
 Player 2 20:12:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Pandora's Box"} 
 Player 2 20:12:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Pandora's Box"} 
 Player 2 20:12:45 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:12:45 $MOVE_CARD_END:  

 {"moveIndex":113,"cardId":196,"flipIfFlipped":true,"playerId":1} 
 Player 2 20:12:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Pandora's Box"} 
 Player 2 20:12:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Pandora's Box"} 
 Player 2 20:12:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Pandora's Box"} 
 Player 2 20:12:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Pandora's Box"} 
 Player 2 20:12:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Pandora's Box \n2:Player 1 roll a dice"} 
 Player 2 20:12:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Pandora's Box \n2:Player 1 roll a dice"} 
 Player 2 20:12:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Pandora's Box \n2:Player 1 roll a dice"} 
 Player 2 20:12:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Pandora's Box \n2:Player 1 roll a dice"} 
 Player 2 20:12:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Pandora's Box \n2:Player 1 roll a dice"} 
 Player 2 20:12:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Pandora's Box \n2:Player 1 roll a dice"} 
 Player 2 20:12:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Pandora's Box \n2:Player 1 roll a dice"} 
 Player 2 20:12:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Pandora's Box \n2:Player 1 roll a dice"} 
 Player 2 20:13:01 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:13:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Pandora's Box \n2:Player 1 roll a dice"} 
 Player 2 20:13:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Pandora's Box \n2:Player 1 roll a dice"} 
 Player 2 20:13:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Pandora's Box \n2:Player 1 roll a dice"} 
 Player 2 20:13:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Pandora's Box \n2:Player 1 roll a dice"} 
 Player 2 20:13:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Pandora's Box \n2:Player 1 roll a dice"} 
 Player 2 20:13:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Pandora's Box \n2:Player 1 roll a dice"} 
 Player 2 20:13:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Pandora's Box \n2:Player 1 roll a dice"} 
 Player 2 20:13:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Pandora's Box \n2:Player 1 roll a dice"} 
 Player 2 20:13:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Pandora's Box \n2:Player 1 roll a dice"} 
 Player 2 20:13:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Pandora's Box \n2:Player 1 roll a dice"} 
 Player 2 20:13:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Pandora's Box \n2:Player 1 roll a dice"} 
 Player 2 20:13:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Pandora's Box \n2:Player 1 roll a dice"} 
 Player 2 20:13:02 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:13:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Pandora's Box"} 
 Player 2 20:13:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Pandora's Box"} 
 Player 2 20:13:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Pandora's Box \n2:Activate Counterfiet Penny "} 
 Player 2 20:13:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Pandora's Box \n2:Activate Counterfiet Penny "} 
 Player 2 20:13:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Pandora's Box \n2:Activate Counterfiet Penny "} 
 Player 2 20:13:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Pandora's Box \n2:Activate Counterfiet Penny "} 
 Player 2 20:13:04 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:13:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Pandora's Box \n2:Activate Counterfiet Penny "} 
 Player 2 20:13:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Pandora's Box \n2:Activate Counterfiet Penny "} 
 Player 2 20:13:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Pandora's Box \n2:Activate Counterfiet Penny "} 
 Player 2 20:13:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Pandora's Box \n2:Activate Counterfiet Penny "} 
 Player 2 20:13:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Pandora's Box \n2:Activate Counterfiet Penny "} 
 Player 2 20:13:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Pandora's Box \n2:Activate Counterfiet Penny "} 
 Player 2 20:13:07 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:13:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Pandora's Box"} 
 Player 2 20:13:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Pandora's Box"} 
 Player 2 20:13:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Pandora's Box"} 
 Player 2 20:13:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Pandora's Box"} 
 Player 2 20:13:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Pandora's Box"} 
 Player 2 20:13:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Pandora's Box"} 
 Player 2 20:13:08 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:20:36 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:20:36 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:20:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Scolex"} 
 Player 2 20:20:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Scolex"} 
 Player 2 20:20:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Scolex"} 
 Player 2 20:20:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Scolex"} 
 Player 2 20:20:36 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:20:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Scolex"} 
 Player 2 20:20:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Scolex"} 
 Player 2 20:20:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Scolex"} 
 Player 2 20:20:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Scolex"} 
 Player 2 20:20:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Scolex"} 
 Player 2 20:20:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Scolex"} 
 Player 2 20:20:36 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:20:43 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:20:43 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:20:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Scolex<Monster>"} 
 Player 2 20:20:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Scolex<Monster>"} 
 Player 2 20:20:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Scolex<Monster>"} 
 Player 2 20:20:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Scolex<Monster>"} 
 Player 2 20:21:00 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:21:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Scolex<Monster>"} 
 Player 2 20:21:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Scolex<Monster>"} 
 Player 2 20:21:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Scolex combat damage to Samson"} 
 Player 2 20:21:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Scolex combat damage to Samson"} 
 Player 2 20:21:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Scolex combat damage to Samson"} 
 Player 2 20:21:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Scolex combat damage to Samson"} 
 Player 2 20:21:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Scolex combat damage to Samson"} 
 Player 2 20:21:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Scolex combat damage to Samson"} 
 Player 2 20:21:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Scolex combat damage to Samson"} 
 Player 2 20:21:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Scolex combat damage to Samson"} 
 Player 2 20:21:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Scolex combat damage to Samson"} 
 Player 2 20:21:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Scolex combat damage to Samson"} 
 Player 2 20:21:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Scolex combat damage to Samson \n2:Player 1 is rolling against Scolex<Monster>"} 
 Player 2 20:21:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Scolex combat damage to Samson \n2:Player 1 is rolling against Scolex<Monster>"} 
 Player 2 20:21:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Scolex combat damage to Samson \n2:Player 1 is rolling against Scolex<Monster>"} 
 Player 2 20:21:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Scolex combat damage to Samson \n2:Player 1 is rolling against Scolex<Monster>"} 
 Player 2 20:21:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Scolex combat damage to Samson \n2:Player 1 is rolling against Scolex<Monster>"} 
 Player 2 20:21:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Scolex combat damage to Samson \n2:Player 1 is rolling against Scolex<Monster>"} 
 Player 2 20:21:01 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:21:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Scolex combat damage to Samson"} 
 Player 2 20:21:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Scolex combat damage to Samson"} 
 Player 2 20:21:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Scolex combat damage to Samson \n2:Activate Scolex "} 
 Player 2 20:21:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Scolex combat damage to Samson \n2:Activate Scolex "} 
 Player 2 20:21:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Scolex combat damage to Samson \n2:Activate Scolex "} 
 Player 2 20:21:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Scolex combat damage to Samson \n2:Activate Scolex "} 
 Player 2 20:21:02 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:21:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Scolex combat damage to Samson \n2:Activate Scolex "} 
 Player 2 20:21:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Scolex combat damage to Samson \n2:Activate Scolex "} 
 Player 2 20:21:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Scolex combat damage to Samson \n2:Activate Scolex "} 
 Player 2 20:21:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Scolex combat damage to Samson \n2:Activate Scolex "} 
 Player 2 20:21:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Scolex combat damage to Samson \n2:Activate Scolex "} 
 Player 2 20:21:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Scolex combat damage to Samson \n2:Activate Scolex "} 
 Player 2 20:21:05 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:21:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Scolex combat damage to Samson"} 
 Player 2 20:21:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Scolex combat damage to Samson"} 
 Player 2 20:21:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Scolex combat damage to Samson"} 
 Player 2 20:21:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Scolex combat damage to Samson"} 
 Player 2 20:21:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Scolex combat damage to Samson"} 
 Player 2 20:21:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Scolex combat damage to Samson"} 
 Player 2 20:21:05 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:21:09 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:21:09 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:21:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Scolex<Monster>"} 
 Player 2 20:21:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Scolex<Monster>"} 
 Player 2 20:21:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Scolex<Monster>"} 
 Player 2 20:21:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Scolex<Monster>"} 
 Player 2 20:21:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Scolex<Monster>"} 
 Player 2 20:21:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Scolex<Monster>"} 
 Player 2 20:21:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Scolex<Monster> \n2:Player 1 activated Spoon Bender"} 
 Player 2 20:21:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Scolex<Monster> \n2:Player 1 activated Spoon Bender"} 
 Player 2 20:21:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Scolex<Monster> \n2:Player 1 activated Spoon Bender"} 
 Player 2 20:21:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Scolex<Monster> \n2:Player 1 activated Spoon Bender"} 
 Player 2 20:21:25 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:21:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Scolex<Monster> \n2:Player 1 activated Spoon Bender"} 
 Player 2 20:21:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Scolex<Monster> \n2:Player 1 activated Spoon Bender"} 
 Player 2 20:21:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Scolex<Monster> \n2:Player 1 activated Spoon Bender"} 
 Player 2 20:21:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Scolex<Monster> \n2:Player 1 activated Spoon Bender"} 
 Player 2 20:21:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Scolex<Monster> \n2:Player 1 activated Spoon Bender"} 
 Player 2 20:21:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Scolex<Monster> \n2:Player 1 activated Spoon Bender"} 
 Player 2 20:21:28 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:21:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Scolex<Monster>"} 
 Player 2 20:21:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Scolex<Monster>"} 
 Player 2 20:21:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Scolex"} 
 Player 2 20:21:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Scolex"} 
 Player 2 20:21:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Scolex"} 
 Player 2 20:21:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Scolex"} 
 Player 2 20:21:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Scolex"} 
 Player 2 20:21:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Scolex"} 
 Player 2 20:21:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Scolex"} 
 Player 2 20:21:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Scolex"} 
 Player 2 20:21:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Scolex"} 
 Player 2 20:21:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Scolex"} 
 Player 2 20:21:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster>"} 
 Player 2 20:21:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster>"} 
 Player 2 20:21:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Activate Swarm of Flies "} 
 Player 2 20:21:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Activate Swarm of Flies "} 
 Player 2 20:21:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Activate Swarm of Flies "} 
 Player 2 20:21:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Activate Swarm of Flies "} 
 Player 2 20:22:31 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:22:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Activate Swarm of Flies "} 
 Player 2 20:22:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Activate Swarm of Flies "} 
 Player 2 20:22:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Player 1 is about to die"} 
 Player 2 20:22:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Player 1 is about to die"} 
 Player 2 20:22:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Player 1 is about to die"} 
 Player 2 20:22:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Player 1 is about to die"} 
 Player 2 20:22:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Player 1 is about to die"} 
 Player 2 20:22:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Player 1 is about to die"} 
 Player 2 20:22:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Player 1 is about to die"} 
 Player 2 20:22:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Player 1 is about to die"} 
 Player 2 20:22:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Player 1 is about to die"} 
 Player 2 20:22:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Player 1 is about to die"} 
 Player 2 20:22:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Player 1 is about to die"} 
 Player 2 20:22:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Player 1 is about to die"} 
 Player 2 20:22:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Player 1 is about to die"} 
 Player 2 20:22:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Player 1 is about to die"} 
 Player 2 20:22:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Player 1 is about to die"} 
 Player 2 20:22:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Player 1 is about to die"} 
 Player 2 20:22:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Player 1 is about to die"} 
 Player 2 20:22:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Player 1 is about to die"} 
 Player 2 20:22:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Player 1 is about to die"} 
 Player 2 20:22:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Player 1 is about to die"} 
 Player 2 20:22:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Activate Swarm of Flies  \n4:Player 1 is about to die"} 
 Player 2 20:22:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Activate Swarm of Flies  \n4:Player 1 is about to die"} 
 Player 2 20:22:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Activate Swarm of Flies  \n4:Player 1 is about to die"} 
 Player 2 20:22:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Activate Swarm of Flies  \n4:Player 1 is about to die"} 
 Player 2 20:22:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Activate Swarm of Flies  \n4:Player 1 is about to die"} 
 Player 2 20:22:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Activate Swarm of Flies  \n4:Player 1 is about to die"} 
 Player 2 20:23:04 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:23:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Player 1 is about to die"} 
 Player 2 20:23:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Player 1 is about to die"} 
 Player 2 20:23:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Scolex<Monster> \n2:Player 1 is about to die"} 
 Player 2 20:23:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Scolex<Monster> \n2:Player 1 is about to die"} 
 Player 2 20:23:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 20:23:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 20:23:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 20:23:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 20:23:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 20:23:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 20:23:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 20:23:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 20:23:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 20:23:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 20:23:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 20:23:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 20:23:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 
 Player 2 20:23:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 
 Player 2 20:23:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 
 Player 2 20:23:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 
 Player 2 20:23:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 
 Player 2 20:23:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 
 Player 2 20:23:14 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:23:17 $MOVE_CARD_END:  

 {"moveIndex":114,"cardId":7,"flipIfFlipped":true,"playerId":1} 
 Player 2 20:23:37 $MOVE_CARD_END:  

 {"moveIndex":115,"cardId":96,"flipIfFlipped":true,"playerId":1} 
 Player 2 20:23:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 20:23:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 20:23:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 20:23:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 20:23:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 20:23:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 20:23:38 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:23:38 $STACK_EMPTIED:  

 {"playerId":1} 
 Player 2 20:23:38 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:23:38 $RECHARGE_ITEM:  

 {"cardId":290} 
 Player 2 20:23:38 $PLAYER_RECHARGE_ITEM:  

 {"playerId":2,"cardId":290} 
 Player 2 20:23:38 $RECHARGE_ITEM:  

 {"cardId":291} 
 Player 2 20:23:38 $PLAYER_RECHARGE_ITEM:  

 {"playerId":2,"cardId":291} 
 Player 2 20:23:38 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:23:38 $NEXT_STACK_ID:  
 Player 2 20:23:38 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:23:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 20:23:39 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":206,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 
 Player 2 20:23:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 20:23:39 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":206,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 
 Player 2 20:23:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1652,"_text":"Add StartTurnLoot 206 "}} 
 Player 2 20:23:39 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:23:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 20:23:39 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":206,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 
 Player 2 20:23:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1653,"_text":"Response Adding StartTurnLoot 206"},"childOfId":1652} 
 Player 2 20:23:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1654,"_text":"Wait For Response From Player 2 "},"childOfId":1652} 
 Player 2 20:23:39 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:23:39 $ACTION_MASSAGE_REMOVE:  

 {"id":1654} 
 Player 2 20:23:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1655,"_text":"Wait For Response From Player 1 "},"childOfId":1652} 
 Player 2 20:23:39 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:23:39 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:23:39 $ACTION_MASSAGE_REMOVE:  

 {"id":1655} 
 Player 2 20:23:39 $ACTION_MASSAGE_REMOVE:  

 {"id":1653} 
 Player 2 20:23:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1657,"_text":"Resolve StartTurnLoot 206 "}} 
 Player 2 20:23:39 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 20:23:39 $MOVE_CARD:  

 {"moveIndex":116,"cardId":140,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 20:23:40 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":140} 
 Player 2 20:23:40 $FLIP_CARD:  

 {"cardId":140} 
 Player 2 20:23:40 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":140} 
 Player 2 20:23:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 20:23:40 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":206,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 
 Player 2 20:23:40 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:23:40 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":206,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 
 Player 2 20:23:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1658,"_text":"Remove After Resolve StartTurnLoot 206  "}} 
 Player 2 20:23:40 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:23:40 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":206,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 
 Player 2 20:23:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1659,"_text":"Response Remove After Resolve StartTurnLoot 206"},"childOfId":1658} 
 Player 2 20:23:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1660,"_text":"Wait For Response From Player 1 "},"childOfId":1658} 
 Player 2 20:23:40 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:23:40 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:23:40 $ACTION_MASSAGE_REMOVE:  

 {"id":1660} 
 Player 2 20:23:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1661,"_text":"Wait For Response From Player 2 "},"childOfId":1658} 
 Player 2 20:23:40 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:23:40 $ACTION_MASSAGE_REMOVE:  

 {"id":1661} 
 Player 2 20:23:40 $ACTION_MASSAGE_REMOVE:  

 {"id":1659} 
 Player 2 20:23:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1662,"_text":"Stack Was Emptied "}} 
 Player 2 20:23:40 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:23:43 $SHOW_DECISION:  

 {"startCardId":140,"endCardId":140,"flipEndCard":true} 
 Player 2 20:23:46 $NEXT_STACK_ID:  
 Player 2 20:23:46 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:23:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The World "} 
 Player 2 20:23:46 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":207,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":140,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 2 20:23:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The World "} 
 Player 2 20:23:46 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":207,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":140,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 2 20:23:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1663,"_text":"Add PlayLootCardStackEffect 207 "}} 
 Player 2 20:23:46 $PLAYER_LOSE_LOOT:  

 {"playerId":2,"cardId":140} 
 Player 2 20:23:46 $MOVE_CARD:  

 {"moveIndex":117,"cardId":140,"placeID":300,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 20:23:47 $MOVE_CARD_TO_PILE:  

 {"type":7,"cardId":140} 
 Player 2 20:23:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The World: ChainEffects"} 
 Player 2 20:23:47 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:23:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The World: ChainEffects"} 
 Player 2 20:23:47 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":207,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":140,"lootPlayerId":2,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":140,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 20:23:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1664,"_text":"Response Adding PlayLootCardStackEffect 207"},"childOfId":1663} 
 Player 2 20:23:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1665,"_text":"Wait For Response From Player 2 "},"childOfId":1663} 
 Player 2 20:23:47 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:23:47 $ACTION_MASSAGE_REMOVE:  

 {"id":1665} 
 Player 2 20:23:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1666,"_text":"Wait For Response From Player 1 "},"childOfId":1663} 
 Player 2 20:23:47 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:23:47 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:23:48 $ACTION_MASSAGE_REMOVE:  

 {"id":1666} 
 Player 2 20:23:48 $ACTION_MASSAGE_REMOVE:  

 {"id":1664} 
 Player 2 20:23:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1667,"_text":"Resolve PlayLootCardStackEffect 207 "}} 
 Player 2 20:23:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The World: ChainEffects"} 
 Player 2 20:23:48 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":140,"particleType":6} 
 Player 2 20:23:50 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":140,"particleType":6} 
 Player 2 20:23:55 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 20:23:55 $MOVE_CARD:  

 {"moveIndex":118,"cardId":58,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 20:23:56 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":58} 
 Player 2 20:23:56 $FLIP_CARD:  

 {"cardId":58} 
 Player 2 20:23:56 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":58} 
 Player 2 20:23:56 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 20:23:56 $MOVE_CARD:  

 {"moveIndex":119,"cardId":121,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 20:23:56 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":121} 
 Player 2 20:23:56 $FLIP_CARD:  

 {"cardId":121} 
 Player 2 20:23:56 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":121} 
 Player 2 20:23:56 $REMOVE_FROM_PILE:  

 {"cardId":140} 
 Player 2 20:23:56 $MOVE_CARD:  

 {"moveIndex":120,"cardId":140,"placeID":301,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 20:23:57 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":140} 
 Player 2 20:23:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The World: ChainEffects"} 
 Player 2 20:23:57 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":207,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":140,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 20:23:57 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:23:57 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":207,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":140,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 20:23:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1668,"_text":"Remove After Resolve PlayLootCardStackEffect 207  "}} 
 Player 2 20:23:57 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:23:57 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":207,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":140,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 20:23:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1669,"_text":"Response Remove After Resolve PlayLootCardStackEffect 207"},"childOfId":1668} 
 Player 2 20:23:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1670,"_text":"Wait For Response From Player 1 "},"childOfId":1668} 
 Player 2 20:23:57 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:23:57 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:23:57 $ACTION_MASSAGE_REMOVE:  

 {"id":1670} 
 Player 2 20:23:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1671,"_text":"Wait For Response From Player 2 "},"childOfId":1668} 
 Player 2 20:23:57 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:23:57 $ACTION_MASSAGE_REMOVE:  

 {"id":1671} 
 Player 2 20:23:57 $ACTION_MASSAGE_REMOVE:  

 {"id":1669} 
 Player 2 20:23:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1672,"_text":"Stack Was Emptied "}} 
 Player 2 20:23:57 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:24:02 $SHOW_DECISION:  

 {"startCardId":290,"endCardId":227} 
 Player 2 20:24:05 $NEXT_STACK_ID:  
 Player 2 20:24:05 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:24:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck"} 
 Player 2 20:24:05 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":208,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":227,"stackEffectType":4}} 
 Player 2 20:24:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck"} 
 Player 2 20:24:05 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":208,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":227,"stackEffectType":4}} 
 Player 2 20:24:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1673,"_text":"Add DeclareAttack 208 "}} 
 Player 2 20:24:05 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:24:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck"} 
 Player 2 20:24:05 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":208,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":227,"stackEffectType":4}} 
 Player 2 20:24:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1674,"_text":"Response Adding DeclareAttack 208"},"childOfId":1673} 
 Player 2 20:24:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1675,"_text":"Wait For Response From Player 2 "},"childOfId":1673} 
 Player 2 20:24:05 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:24:05 $ACTION_MASSAGE_REMOVE:  

 {"id":1675} 
 Player 2 20:24:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1676,"_text":"Wait For Response From Player 1 "},"childOfId":1673} 
 Player 2 20:24:05 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:24:05 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:24:06 $ACTION_MASSAGE_REMOVE:  

 {"id":1676} 
 Player 2 20:24:06 $ACTION_MASSAGE_REMOVE:  

 {"id":1674} 
 Player 2 20:24:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1677,"_text":"Resolve DeclareAttack 208 "}} 
 Player 2 20:24:06 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 20:24:06 $SHOW_CARD_PREVIEW:  

 {"cardToShowId":237,"playerId":2} 
 Player 2 20:24:12 $FLIP_CARD:  

 {"cardId":237} 
 Player 2 20:24:12 $ADD_MONSTER:  

 {"monsterPlaceId":2,"monsterId":237} 
 Player 2 20:24:12 $NEW_MONSTER_ON_PLACE:  

 {"cardId":237,"monsterPlaceId":2} 
 Player 2 20:24:12 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":237,"particleType":5} 
 Player 2 20:24:12 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":71,"originStackId":208},"isAfterActivation":true,"index":71} 
 Player 2 20:24:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck"} 
 Player 2 20:24:12 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":208,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":237,"stackEffectType":4}} 
 Player 2 20:24:12 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:24:12 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":208,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":237,"stackEffectType":4}} 
 Player 2 20:24:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1678,"_text":"Remove After Resolve DeclareAttack 208  "}} 
 Player 2 20:24:12 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:24:12 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":208,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":237,"stackEffectType":4}} 
 Player 2 20:24:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1679,"_text":"Response Remove After Resolve DeclareAttack 208"},"childOfId":1678} 
 Player 2 20:24:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1680,"_text":"Wait For Response From Player 1 "},"childOfId":1678} 
 Player 2 20:24:12 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:24:12 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:24:12 $ACTION_MASSAGE_REMOVE:  

 {"id":1680} 
 Player 2 20:24:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1681,"_text":"Wait For Response From Player 2 "},"childOfId":1678} 
 Player 2 20:24:12 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:24:12 $ACTION_MASSAGE_REMOVE:  

 {"id":1681} 
 Player 2 20:24:12 $ACTION_MASSAGE_REMOVE:  

 {"id":1679} 
 Player 2 20:24:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1682,"_text":"Stack Was Emptied "}} 
 Player 2 20:24:12 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:24:20 $NEXT_STACK_ID:  
 Player 2 20:24:20 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:24:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 20:24:20 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":209,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":237}} 
 Player 2 20:24:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 20:24:20 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":209,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":237}} 
 Player 2 20:24:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1683,"_text":"Add AttackRoll 209 "}} 
 Player 2 20:24:20 $ROLL_DICE:  

 {"playerId":2} 
 Player 2 20:24:22 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":4} 
 Player 2 20:24:22 $UPDATE_STACK_VIS:  

 {"stackId":209,"text":"player rolled 4 vs Conjoined Fatty<Monster>"} 
 Player 2 20:24:22 $SHOW_DICE_ROLL:  

 {"stackId":209} 
 Player 2 20:24:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 4 vs Conjoined Fatty<Monster>"} 
 Player 2 20:24:25 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:24:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 4 vs Conjoined Fatty<Monster>"} 
 Player 2 20:24:25 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":209,"creatorCardId":290,"numberRolled":4,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":237}} 
 Player 2 20:24:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1684,"_text":"Response Adding AttackRoll 209"},"childOfId":1683} 
 Player 2 20:24:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1685,"_text":"Wait For Response From Player 2 "},"childOfId":1683} 
 Player 2 20:24:25 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:24:25 $ACTION_MASSAGE_REMOVE:  

 {"id":1685} 
 Player 2 20:24:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1686,"_text":"Wait For Response From Player 1 "},"childOfId":1683} 
 Player 2 20:24:25 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:24:25 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:24:26 $ACTION_MASSAGE_REMOVE:  

 {"id":1686} 
 Player 2 20:24:26 $ACTION_MASSAGE_REMOVE:  

 {"id":1684} 
 Player 2 20:24:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1687,"_text":"Resolve AttackRoll 209 "}} 
 Player 2 20:24:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1688,"_text":"Added -1 to original roll"}} 
 Player 2 20:24:26 $NEXT_STACK_ID:  
 Player 2 20:24:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 4 vs Conjoined Fatty<Monster>"} 
 Player 2 20:24:26 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:24:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Conjoined Fatty \n2:Player 2 rolled 4 vs Conjoined Fatty<Monster>"} 
 Player 2 20:24:26 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":210,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":237,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 20:24:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Conjoined Fatty \n2:Player 2 rolled 4 vs Conjoined Fatty<Monster>"} 
 Player 2 20:24:26 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":209,"creatorCardId":290,"numberRolled":4,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":237}} 
 Player 2 20:24:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Conjoined Fatty \n2:Player 2 rolled 4 vs Conjoined Fatty<Monster>"} 
 Player 2 20:24:26 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":210,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":237,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 20:24:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Conjoined Fatty \n2:Player 2 rolled 4 vs Conjoined Fatty<Monster>"} 
 Player 2 20:24:26 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":209,"creatorCardId":290,"numberRolled":4,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":237}} 
 Player 2 20:24:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Conjoined Fatty \n2:Player 2 rolled 4 vs Conjoined Fatty<Monster>"} 
 Player 2 20:24:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Conjoined Fatty \n2:Player 2 rolled 4 vs Conjoined Fatty<Monster>"} 
 Player 2 20:24:26 $REPLACE_STACK:  

 {"currentStack":[{"entityId":210,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":237,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":209,"creatorCardId":290,"numberRolled":4,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":237}]} 
 Player 2 20:24:26 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":3},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":72,"originStackId":209},"isAfterActivation":true,"index":72} 
 Player 2 20:24:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Conjoined Fatty \n2:Player 2 rolled 4 vs Conjoined Fatty<Monster>"} 
 Player 2 20:24:26 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":209,"creatorCardId":290,"numberRolled":4,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":237}} 
 Player 2 20:24:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Conjoined Fatty"} 
 Player 2 20:24:26 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":209,"creatorCardId":290,"numberRolled":4,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":237}} 
 Player 2 20:24:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1689,"_text":"Remove After Resolve AttackRoll 209  "}} 
 Player 2 20:24:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Conjoined Fatty"} 
 Player 2 20:24:26 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":209,"creatorCardId":290,"numberRolled":4,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":237}} 
 Player 2 20:24:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1690,"_text":"Response Remove After Resolve AttackRoll 209"},"childOfId":1689} 
 Player 2 20:24:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1691,"_text":"Wait For Response From Player 2 "},"childOfId":1689} 
 Player 2 20:24:26 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:24:26 $ACTION_MASSAGE_REMOVE:  

 {"id":1691} 
 Player 2 20:24:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1692,"_text":"Wait For Response From Player 1 "},"childOfId":1689} 
 Player 2 20:24:26 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:24:26 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:24:27 $ACTION_MASSAGE_REMOVE:  

 {"id":1692} 
 Player 2 20:24:27 $ACTION_MASSAGE_REMOVE:  

 {"id":1690} 
 Player 2 20:24:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1693,"_text":"Resolve CombatDamage 210 "}} 
 Player 2 20:24:27 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":4},{"type":2,"number":3},{"type":0,"number":290},{"type":0,"number":237}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":8,"originStackId":210},"isAfterActivation":false,"index":8} 
 Player 2 20:24:27 $NEXT_STACK_ID:  
 Player 2 20:24:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Conjoined Fatty"} 
 Player 2 20:24:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Conjoined Fatty \n2:Activate Polydactyly effect AddDamage<AddDamage>"} 
 Player 2 20:24:27 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":211,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":199,"effectToDo":{"effectName":"AddDamage","cardEffectNum":2,"cardPlayerId":2,"cardId":199,"effctType":0},"isAfterActivation":false,"index":8,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 20:24:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Conjoined Fatty \n2:Activate Polydactyly effect AddDamage<AddDamage>"} 
 Player 2 20:24:27 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":211,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":199,"effectToDo":{"effectName":"AddDamage","cardEffectNum":2,"cardPlayerId":2,"cardId":199,"effctType":0},"isAfterActivation":false,"index":8,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 20:24:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1694,"_text":"Add ActivatePassiveEffect 211 "}} 
 Player 2 20:24:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Conjoined Fatty \n2:Activate Polydactyly effect AddDamage<AddDamage>"} 
 Player 2 20:24:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Conjoined Fatty \n2:Activate Polydactyly effect AddDamage<AddDamage>"} 
 Player 2 20:24:27 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":211,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":199,"effectToDo":{"effectName":"AddDamage","cardEffectNum":2,"cardPlayerId":2,"cardId":199,"effctType":0},"isAfterActivation":false,"index":8,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 20:24:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1695,"_text":"Response Adding ActivatePassiveEffect 211"},"childOfId":1694} 
 Player 2 20:24:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1696,"_text":"Wait For Response From Player 1 "},"childOfId":1694} 
 Player 2 20:24:27 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:24:27 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:24:28 $ACTION_MASSAGE_REMOVE:  

 {"id":1696} 
 Player 2 20:24:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1697,"_text":"Wait For Response From Player 2 "},"childOfId":1694} 
 Player 2 20:24:28 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:24:28 $ACTION_MASSAGE_REMOVE:  

 {"id":1697} 
 Player 2 20:24:28 $ACTION_MASSAGE_REMOVE:  

 {"id":1695} 
 Player 2 20:24:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1698,"_text":"Resolve ActivatePassiveEffect 211 "}} 
 Player 2 20:24:28 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":199,"particleType":6} 
 Player 2 20:24:30 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":199,"particleType":6} 
 Player 2 20:24:30 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":5},{"type":2,"number":3},{"type":0,"number":290},{"type":0,"number":237}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":8,"originStackId":210},"isAfterActivation":false,"index":8} 
 Player 2 20:24:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Conjoined Fatty \n2:Activate Polydactyly effect AddDamage<AddDamage>"} 
 Player 2 20:24:30 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":211,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":199,"isAfterActivation":false,"index":8,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 20:24:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Conjoined Fatty"} 
 Player 2 20:24:30 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":211,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":199,"isAfterActivation":false,"index":8,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 20:24:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1699,"_text":"Remove After Resolve ActivatePassiveEffect 211  "}} 
 Player 2 20:24:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Conjoined Fatty"} 
 Player 2 20:24:30 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":211,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":199,"isAfterActivation":false,"index":8,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 20:24:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1700,"_text":"Response Remove After Resolve ActivatePassiveEffect 211"},"childOfId":1699} 
 Player 2 20:24:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1701,"_text":"Wait For Response From Player 2 "},"childOfId":1699} 
 Player 2 20:24:30 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:24:30 $ACTION_MASSAGE_REMOVE:  

 {"id":1701} 
 Player 2 20:24:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1702,"_text":"Wait For Response From Player 1 "},"childOfId":1699} 
 Player 2 20:24:30 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:24:30 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:24:30 $ACTION_MASSAGE_REMOVE:  

 {"id":1702} 
 Player 2 20:24:30 $ACTION_MASSAGE_REMOVE:  

 {"id":1700} 
 Player 2 20:24:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1703,"_text":"Resolve CombatDamage 210 "}} 
 Player 2 20:24:30 $UPDATE_STACK_VIS:  

 {"stackId":210,"text":"Isaac will deal 5 combat damage to Conjoined Fatty"} 
 Player 2 20:24:30 $MONSTER_GET_DAMAGED:  

 {"cardId":237,"hpLeft":0,"damageDealerId":290} 
 Player 2 20:24:30 $NEXT_STACK_ID:  
 Player 2 20:24:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Conjoined Fatty"} 
 Player 2 20:24:30 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:24:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Conjoined Fatty \n2:[object Object] killed by Isaac"} 
 Player 2 20:24:30 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":212,"creatorCardId":290,"monsterToDieCardId":237,"stackEffectType":5,"killerId":290}} 
 Player 2 20:24:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Conjoined Fatty \n2:[object Object] killed by Isaac"} 
 Player 2 20:24:30 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":210,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":237,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 20:24:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Conjoined Fatty \n2:[object Object] killed by Isaac"} 
 Player 2 20:24:30 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":210,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":237,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 20:24:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Conjoined Fatty \n2:[object Object] killed by Isaac"} 
 Player 2 20:24:30 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":212,"creatorCardId":290,"monsterToDieCardId":237,"stackEffectType":5,"killerId":290}} 
 Player 2 20:24:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Conjoined Fatty \n2:[object Object] killed by Isaac"} 
 Player 2 20:24:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Conjoined Fatty \n2:[object Object] killed by Isaac"} 
 Player 2 20:24:30 $REPLACE_STACK:  

 {"currentStack":[{"entityId":210,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":237,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":212,"creatorCardId":290,"monsterToDieCardId":237,"stackEffectType":5,"killerId":290}]} 
 Player 2 20:24:30 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":5},{"type":0,"number":290}],"result":null,"preventMethod":false,"methodScopeId":237,"scopeIsPlayer":false,"index":73,"originStackId":-1},"isAfterActivation":true,"index":73} 
 Player 2 20:24:30 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":5},{"type":2,"number":3},{"type":0,"number":290},{"type":0,"number":237}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":8,"originStackId":210},"isAfterActivation":true,"index":8} 
 Player 2 20:24:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Conjoined Fatty \n2:[object Object] killed by Isaac"} 
 Player 2 20:24:31 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":210,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":237,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 20:24:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Isaac"} 
 Player 2 20:24:31 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":210,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":237,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 20:24:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1704,"_text":"Remove After Resolve CombatDamage 210  "}} 
 Player 2 20:24:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Isaac"} 
 Player 2 20:24:31 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":210,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":237,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 20:24:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1705,"_text":"Response Remove After Resolve CombatDamage 210"},"childOfId":1704} 
 Player 2 20:24:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1706,"_text":"Wait For Response From Player 2 "},"childOfId":1704} 
 Player 2 20:24:31 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:24:31 $ACTION_MASSAGE_REMOVE:  

 {"id":1706} 
 Player 2 20:24:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1707,"_text":"Wait For Response From Player 1 "},"childOfId":1704} 
 Player 2 20:24:31 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:24:31 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:24:31 $ACTION_MASSAGE_REMOVE:  

 {"id":1707} 
 Player 2 20:24:31 $ACTION_MASSAGE_REMOVE:  

 {"id":1705} 
 Player 2 20:24:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1708,"_text":"Resolve MonsterDeath 212 "}} 
 Player 2 20:24:32 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":237,"particleType":5} 
 Player 2 20:24:32 $CANCEL_ATTACK:  
 Player 2 20:24:32 $NEXT_STACK_ID:  
 Player 2 20:24:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Isaac"} 
 Player 2 20:24:32 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:24:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Conjoined Fatty<Monster> reward \n2:[object Object] killed by Isaac"} 
 Player 2 20:24:32 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":213,"creatorCardId":290,"monsterCardWithRewardId":237,"playerCardIdToReward":290,"stackEffectType":7}} 
 Player 2 20:24:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Conjoined Fatty<Monster> reward \n2:[object Object] killed by Isaac"} 
 Player 2 20:24:32 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":212,"creatorCardId":290,"monsterToDieCardId":237,"stackEffectType":5,"killerId":290}} 
 Player 2 20:24:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Conjoined Fatty<Monster> reward \n2:[object Object] killed by Isaac"} 
 Player 2 20:24:32 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":213,"creatorCardId":290,"monsterCardWithRewardId":237,"playerCardIdToReward":290,"stackEffectType":7}} 
 Player 2 20:24:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Conjoined Fatty<Monster> reward \n2:[object Object] killed by Isaac"} 
 Player 2 20:24:32 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":212,"creatorCardId":290,"monsterToDieCardId":237,"stackEffectType":5,"killerId":290}} 
 Player 2 20:24:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Conjoined Fatty<Monster> reward \n2:[object Object] killed by Isaac"} 
 Player 2 20:24:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Conjoined Fatty<Monster> reward \n2:[object Object] killed by Isaac"} 
 Player 2 20:24:32 $REPLACE_STACK:  

 {"currentStack":[{"entityId":213,"creatorCardId":290,"monsterCardWithRewardId":237,"playerCardIdToReward":290,"stackEffectType":7},{"entityId":212,"creatorCardId":290,"monsterToDieCardId":237,"stackEffectType":5,"killerId":290}]} 
 Player 2 20:24:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Conjoined Fatty<Monster> reward \n2:[object Object] killed by Isaac"} 
 Player 2 20:24:32 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":212,"creatorCardId":290,"monsterToDieCardId":237,"stackEffectType":5,"killerId":290}} 
 Player 2 20:24:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Conjoined Fatty<Monster> reward"} 
 Player 2 20:24:32 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":212,"creatorCardId":290,"monsterToDieCardId":237,"stackEffectType":5,"killerId":290}} 
 Player 2 20:24:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1709,"_text":"Remove After Resolve MonsterDeath 212  "}} 
 Player 2 20:24:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Conjoined Fatty<Monster> reward"} 
 Player 2 20:24:32 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":212,"creatorCardId":290,"monsterToDieCardId":237,"stackEffectType":5,"killerId":290}} 
 Player 2 20:24:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1710,"_text":"Response Remove After Resolve MonsterDeath 212"},"childOfId":1709} 
 Player 2 20:24:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1711,"_text":"Wait For Response From Player 2 "},"childOfId":1709} 
 Player 2 20:24:32 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:24:32 $ACTION_MASSAGE_REMOVE:  

 {"id":1711} 
 Player 2 20:24:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1712,"_text":"Wait For Response From Player 1 "},"childOfId":1709} 
 Player 2 20:24:32 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:24:32 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:24:33 $ACTION_MASSAGE_REMOVE:  

 {"id":1712} 
 Player 2 20:24:33 $ACTION_MASSAGE_REMOVE:  

 {"id":1710} 
 Player 2 20:24:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1713,"_text":"Resolve MonsterRewardStackEffect 213 "}} 
 Player 2 20:24:33 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 20:24:33 $MOVE_CARD:  

 {"moveIndex":121,"cardId":137,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 20:24:33 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":137} 
 Player 2 20:24:33 $FLIP_CARD:  

 {"cardId":137} 
 Player 2 20:24:33 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":137} 
 Player 2 20:24:33 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 20:24:33 $MOVE_CARD:  

 {"moveIndex":122,"cardId":43,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 20:24:34 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":43} 
 Player 2 20:24:34 $FLIP_CARD:  

 {"cardId":43} 
 Player 2 20:24:34 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":43} 
 Player 2 20:24:34 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":237,"scopeIsPlayer":false,"index":74,"originStackId":213},"isAfterActivation":true,"index":74} 
 Player 2 20:24:34 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:24:34 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:24:34 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":213,"creatorCardId":290,"monsterCardWithRewardId":237,"playerCardIdToReward":290,"stackEffectType":7}} 
 Player 2 20:24:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1714,"_text":"Fizzle MonsterRewardStackEffect 213"}} 
 Player 2 20:24:34 $FIZZLE_STACK_EFFECT:  

 {"entityId":213} 
 Player 2 20:24:34 $MOVE_CARD:  

 {"moveIndex":123,"cardId":237,"placeID":303,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 20:24:35 $MOVE_CARD_TO_PILE:  

 {"type":2,"cardId":237} 
 Player 2 20:24:35 $REMOVE_MONSTER:  

 {"holderId":2,"monsterId":237} 
 Player 2 20:24:35 $GET_NEXT_MONSTER:  

 {"monsterPlaceId":2} 
 Player 2 20:24:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1715,"_text":"Stack Was Emptied "}} 
 Player 2 20:24:35 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:24:46 $SHOW_DECISION:  

 {"startCardId":290,"endCardId":290} 
 Player 2 20:24:49 $NEXT_STACK_ID:  
 Player 2 20:24:49 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:24:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Isaac"} 
 Player 2 20:24:49 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":214,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 20:24:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Isaac"} 
 Player 2 20:24:49 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":214,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 20:24:49 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1716,"_text":"Add ActivateItem 214 "}} 
 Player 2 20:24:51 $SHOW_DECISION:  

 {"startCardId":290,"endCardId":58,"flipEndCard":true} 
 Player 2 20:24:54 $USE_ITEM:  

 {"cardId":290} 
 Player 2 20:24:54 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:24:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Isaac"} 
 Player 2 20:24:54 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":214,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 20:24:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1717,"_text":"Response Adding ActivateItem 214"},"childOfId":1716} 
 Player 2 20:24:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1718,"_text":"Wait For Response From Player 2 "},"childOfId":1716} 
 Player 2 20:24:54 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:24:54 $ACTION_MASSAGE_REMOVE:  

 {"id":1718} 
 Player 2 20:24:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1719,"_text":"Wait For Response From Player 1 "},"childOfId":1716} 
 Player 2 20:24:54 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:24:54 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:24:54 $ACTION_MASSAGE_REMOVE:  

 {"id":1719} 
 Player 2 20:24:54 $ACTION_MASSAGE_REMOVE:  

 {"id":1717} 
 Player 2 20:24:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1720,"_text":"Resolve ActivateItem 214 "}} 
 Player 2 20:24:55 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":290,"particleType":6} 
 Player 2 20:24:56 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":290,"particleType":6} 
 Player 2 20:24:56 $NEXT_STACK_ID:  
 Player 2 20:24:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Isaac"} 
 Player 2 20:24:56 $PLAYER_LOSE_LOOT:  

 {"playerId":2,"cardId":58} 
 Player 2 20:24:57 $MOVE_CARD:  

 {"moveIndex":124,"cardId":58,"placeID":300,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 20:24:57 $MOVE_CARD_TO_PILE:  

 {"type":7,"cardId":58} 
 Player 2 20:24:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 3 Cents(20): addMoney \n2:Player 2 activated Isaac"} 
 Player 2 20:24:57 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:24:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 3 Cents(20): addMoney \n2:Player 2 activated Isaac"} 
 Player 2 20:24:57 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":215,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":58,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":58,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 20:24:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 3 Cents(20): addMoney \n2:Player 2 activated Isaac"} 
 Player 2 20:24:57 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":214,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 20:24:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 3 Cents(20): addMoney \n2:Player 2 activated Isaac"} 
 Player 2 20:24:57 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":215,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":58,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":58,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 20:24:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 3 Cents(20): addMoney \n2:Player 2 activated Isaac"} 
 Player 2 20:24:57 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":214,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 20:24:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 3 Cents(20): addMoney \n2:Player 2 activated Isaac"} 
 Player 2 20:24:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 3 Cents(20): addMoney \n2:Player 2 activated Isaac"} 
 Player 2 20:24:57 $REPLACE_STACK:  

 {"currentStack":[{"entityId":215,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":58,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":58,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":214,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 
 Player 2 20:24:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 3 Cents(20): addMoney \n2:Player 2 activated Isaac"} 
 Player 2 20:24:57 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":214,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 20:24:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 3 Cents(20): addMoney"} 
 Player 2 20:24:57 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":214,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 20:24:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1721,"_text":"Remove After Resolve ActivateItem 214  "}} 
 Player 2 20:24:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 3 Cents(20): addMoney"} 
 Player 2 20:24:57 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":214,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 20:24:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1722,"_text":"Response Remove After Resolve ActivateItem 214"},"childOfId":1721} 
 Player 2 20:24:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1723,"_text":"Wait For Response From Player 2 "},"childOfId":1721} 
 Player 2 20:24:57 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:24:57 $ACTION_MASSAGE_REMOVE:  

 {"id":1723} 
 Player 2 20:24:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1724,"_text":"Wait For Response From Player 1 "},"childOfId":1721} 
 Player 2 20:24:57 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:24:57 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:24:58 $ACTION_MASSAGE_REMOVE:  

 {"id":1724} 
 Player 2 20:24:58 $ACTION_MASSAGE_REMOVE:  

 {"id":1722} 
 Player 2 20:24:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1725,"_text":"Resolve PlayLootCardStackEffect 215 "}} 
 Player 2 20:24:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 3 Cents(20): addMoney"} 
 Player 2 20:24:58 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":58,"particleType":6} 
 Player 2 20:25:00 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":58,"particleType":6} 
 Player 2 20:25:00 $SET_MONEY:  

 {"playerId":2,"numOfCoins":11} 
 Player 2 20:25:00 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":75,"originStackId":-1},"isAfterActivation":true,"index":75} 
 Player 2 20:25:00 $REMOVE_FROM_PILE:  

 {"cardId":58} 
 Player 2 20:25:00 $MOVE_CARD:  

 {"moveIndex":125,"cardId":58,"placeID":301,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 20:25:01 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":58} 
 Player 2 20:25:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 3 Cents(20): addMoney"} 
 Player 2 20:25:01 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":215,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":58,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 20:25:01 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:25:01 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":215,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":58,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 20:25:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1726,"_text":"Remove After Resolve PlayLootCardStackEffect 215  "}} 
 Player 2 20:25:01 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:25:01 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":215,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":58,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 20:25:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1727,"_text":"Response Remove After Resolve PlayLootCardStackEffect 215"},"childOfId":1726} 
 Player 2 20:25:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1728,"_text":"Wait For Response From Player 1 "},"childOfId":1726} 
 Player 2 20:25:01 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:25:01 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:25:01 $ACTION_MASSAGE_REMOVE:  

 {"id":1728} 
 Player 2 20:25:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1729,"_text":"Wait For Response From Player 2 "},"childOfId":1726} 
 Player 2 20:25:01 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:25:01 $ACTION_MASSAGE_REMOVE:  

 {"id":1729} 
 Player 2 20:25:01 $ACTION_MASSAGE_REMOVE:  

 {"id":1727} 
 Player 2 20:25:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1730,"_text":"Stack Was Emptied "}} 
 Player 2 20:25:01 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:25:04 $SHOW_DECISION:  

 {"startCardId":290,"endCardId":164} 
 Player 2 20:25:07 $NEXT_STACK_ID:  
 Player 2 20:25:07 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:25:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Dinner for 10"} 
 Player 2 20:25:07 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":216,"creatorCardId":290,"itemToPurchaseCardId":164,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 
 Player 2 20:25:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Dinner for 10"} 
 Player 2 20:25:07 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":216,"creatorCardId":290,"itemToPurchaseCardId":164,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 
 Player 2 20:25:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1731,"_text":"Add PurchaseItem 216 "}} 
 Player 2 20:25:07 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:25:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Dinner for 10"} 
 Player 2 20:25:07 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":216,"creatorCardId":290,"itemToPurchaseCardId":164,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 
 Player 2 20:25:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1732,"_text":"Response Adding PurchaseItem 216"},"childOfId":1731} 
 Player 2 20:25:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1733,"_text":"Wait For Response From Player 2 "},"childOfId":1731} 
 Player 2 20:25:07 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:25:07 $ACTION_MASSAGE_REMOVE:  

 {"id":1733} 
 Player 2 20:25:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1734,"_text":"Wait For Response From Player 1 "},"childOfId":1731} 
 Player 2 20:25:07 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:25:07 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:25:07 $ACTION_MASSAGE_REMOVE:  

 {"id":1734} 
 Player 2 20:25:07 $ACTION_MASSAGE_REMOVE:  

 {"id":1732} 
 Player 2 20:25:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1735,"_text":"Resolve PurchaseItem 216 "}} 
 Player 2 20:25:07 $SET_MONEY:  

 {"playerId":2,"numOfCoins":1} 
 Player 2 20:25:07 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-10}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":76,"originStackId":-1},"isAfterActivation":true,"index":76} 
 Player 2 20:25:07 $REMOVE_ITEM_FROM_SHOP:  

 {"cardId":164} 
 Player 2 20:25:07 $NEXT_STACK_ID:  
 Player 2 20:25:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Dinner for 10"} 
 Player 2 20:25:07 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:25:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Dinner for 10 \n2:Refill Store slot"} 
 Player 2 20:25:07 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":217,"creatorCardId":290,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 
 Player 2 20:25:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Dinner for 10 \n2:Refill Store slot"} 
 Player 2 20:25:08 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":216,"creatorCardId":290,"itemToPurchaseCardId":164,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 
 Player 2 20:25:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Dinner for 10 \n2:Refill Store slot"} 
 Player 2 20:25:08 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":216,"creatorCardId":290,"itemToPurchaseCardId":164,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 
 Player 2 20:25:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Dinner for 10 \n2:Refill Store slot"} 
 Player 2 20:25:08 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":217,"creatorCardId":290,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 
 Player 2 20:25:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Dinner for 10 \n2:Refill Store slot"} 
 Player 2 20:25:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Dinner for 10 \n2:Refill Store slot"} 
 Player 2 20:25:08 $REPLACE_STACK:  

 {"currentStack":[{"entityId":216,"creatorCardId":290,"itemToPurchaseCardId":164,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9},{"entityId":217,"creatorCardId":290,"slotType":5,"slotToFillId":0,"stackEffectType":10}]} 
 Player 2 20:25:08 $REGISTER_PASSIVE_ITEM:  

 {"cardId":164} 
 Player 2 20:25:08 $MOVE_CARD:  

 {"moveIndex":126,"cardId":164,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 
 Player 2 20:25:08 $ADD_AN_ITEM:  

 {"playerId":2,"cardId":164,"isReward":false} 
 Player 2 20:25:08 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":164}],"result":true,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":77,"originStackId":-1},"isAfterActivation":true,"index":77} 
 Player 2 20:25:08 $NEXT_STACK_ID:  
 Player 2 20:25:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Dinner for 10 \n2:Refill Store slot"} 
 Player 2 20:25:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Dinner for 10 \n2:Refill Store slot \n3:Activate Dinner effect GainStats<GainStats>"} 
 Player 2 20:25:08 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":218,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":164,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":2,"cardId":164,"effctType":0},"isAfterActivation":true,"index":77,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 20:25:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Dinner for 10 \n2:Refill Store slot \n3:Activate Dinner effect GainStats<GainStats>"} 
 Player 2 20:25:08 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":218,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":164,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":2,"cardId":164,"effctType":0},"isAfterActivation":true,"index":77,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 20:25:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1736,"_text":"Add ActivatePassiveEffect 218 "}} 
 Player 2 20:25:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Dinner for 10 \n2:Refill Store slot \n3:Activate Dinner effect GainStats<GainStats>"} 
 Player 2 20:25:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Dinner for 10 \n2:Refill Store slot \n3:Activate Dinner effect GainStats<GainStats>"} 
 Player 2 20:25:08 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[290],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":218,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":164,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":2,"cardId":164,"effctType":0},"isAfterActivation":true,"index":77,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 20:25:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1737,"_text":"Response Adding ActivatePassiveEffect 218"},"childOfId":1736} 
 Player 2 20:25:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1738,"_text":"Wait For Response From Player 2 "},"childOfId":1736} 
 Player 2 20:25:08 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:25:08 $ACTION_MASSAGE_REMOVE:  

 {"id":1738} 
 Player 2 20:25:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1739,"_text":"Wait For Response From Player 1 "},"childOfId":1736} 
 Player 2 20:25:08 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:25:09 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:25:09 $ACTION_MASSAGE_REMOVE:  

 {"id":1739} 
 Player 2 20:25:09 $ACTION_MASSAGE_REMOVE:  

 {"id":1737} 
 Player 2 20:25:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1740,"_text":"Resolve ActivatePassiveEffect 218 "}} 
 Player 2 20:25:09 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":164,"particleType":6} 
 Player 2 20:25:11 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":164,"particleType":6} 
 Player 2 20:25:11 $PLAYER_GAIN_HP:  

 {"playerId":2,"hpToGain":1,"isTemp":false} 
 Player 2 20:25:11 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":164}],"result":true,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":77,"originStackId":-1},"isAfterActivation":true,"index":77} 
 Player 2 20:25:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Dinner for 10 \n2:Refill Store slot \n3:Activate Dinner effect GainStats<GainStats>"} 
 Player 2 20:25:11 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[290],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":218,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":164,"isAfterActivation":true,"index":77,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 20:25:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Dinner for 10 \n2:Refill Store slot"} 
 Player 2 20:25:11 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[290],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":218,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":164,"isAfterActivation":true,"index":77,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 20:25:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1741,"_text":"Remove After Resolve ActivatePassiveEffect 218  "}} 
 Player 2 20:25:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Dinner for 10 \n2:Refill Store slot"} 
 Player 2 20:25:11 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[290],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":218,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":164,"isAfterActivation":true,"index":77,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 20:25:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1742,"_text":"Response Remove After Resolve ActivatePassiveEffect 218"},"childOfId":1741} 
 Player 2 20:25:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1743,"_text":"Wait For Response From Player 1 "},"childOfId":1741} 
 Player 2 20:25:11 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:25:11 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:25:11 $ACTION_MASSAGE_REMOVE:  

 {"id":1743} 
 Player 2 20:25:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1744,"_text":"Wait For Response From Player 2 "},"childOfId":1741} 
 Player 2 20:25:11 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:25:11 $ACTION_MASSAGE_REMOVE:  

 {"id":1744} 
 Player 2 20:25:11 $ACTION_MASSAGE_REMOVE:  

 {"id":1742} 
 Player 2 20:25:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1745,"_text":"Resolve RefillEmptySlot 217 "}} 
 Player 2 20:25:11 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 20:25:11 $FLIP_CARD:  

 {"cardId":160} 
 Player 2 20:25:11 $ADD_STORE_CARD:  

 {"cardId":160} 
 Player 2 20:25:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Dinner for 10"} 
 Player 2 20:25:12 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":217,"creatorCardId":290,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 
 Player 2 20:25:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1746,"_text":"Remove After Resolve RefillEmptySlot 217  "}} 
 Player 2 20:25:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Dinner for 10"} 
 Player 2 20:25:12 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":217,"creatorCardId":290,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 
 Player 2 20:25:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1747,"_text":"Response Remove After Resolve RefillEmptySlot 217"},"childOfId":1746} 
 Player 2 20:25:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1748,"_text":"Wait For Response From Player 2 "},"childOfId":1746} 
 Player 2 20:25:12 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:25:12 $ACTION_MASSAGE_REMOVE:  

 {"id":1748} 
 Player 2 20:25:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1749,"_text":"Wait For Response From Player 1 "},"childOfId":1746} 
 Player 2 20:25:12 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:25:12 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:25:12 $ACTION_MASSAGE_REMOVE:  

 {"id":1749} 
 Player 2 20:25:12 $ACTION_MASSAGE_REMOVE:  

 {"id":1747} 
 Player 2 20:25:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1750,"_text":"Resolve PurchaseItem 216 "}} 
 Player 2 20:25:12 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:25:12 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":216,"creatorCardId":290,"itemToPurchaseCardId":164,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 
 Player 2 20:25:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1751,"_text":"Remove After Resolve PurchaseItem 216  "}} 
 Player 2 20:25:12 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:25:12 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":216,"creatorCardId":290,"itemToPurchaseCardId":164,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 
 Player 2 20:25:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1752,"_text":"Response Remove After Resolve PurchaseItem 216"},"childOfId":1751} 
 Player 2 20:25:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1753,"_text":"Wait For Response From Player 1 "},"childOfId":1751} 
 Player 2 20:25:12 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:25:12 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:25:13 $ACTION_MASSAGE_REMOVE:  

 {"id":1753} 
 Player 2 20:25:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1754,"_text":"Wait For Response From Player 2 "},"childOfId":1751} 
 Player 2 20:25:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:25:13 $ACTION_MASSAGE_REMOVE:  

 {"id":1754} 
 Player 2 20:25:13 $ACTION_MASSAGE_REMOVE:  

 {"id":1752} 
 Player 2 20:25:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1755,"_text":"Stack Was Emptied "}} 
 Player 2 20:25:13 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:25:16 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:25:16 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:25:16 $REPLACE_STACK:  

 {"currentStack":[]} 
 Player 2 20:25:16 $END_TURN:  
 Player 2 20:25:16 $SET_TURN:  

 {"playerId":1} 
 Player 2 20:25:16 $START_TURN:  

 {"playerId":1} 
 Player 2 20:25:16 $STACK_EMPTIED:  

 {"playerId":1} 
 Player 2 20:25:16 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:25:17 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:25:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Purple Heart "} 
 Player 2 20:25:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Purple Heart "} 
 Player 2 20:25:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Purple Heart "} 
 Player 2 20:25:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Purple Heart "} 
 Player 2 20:25:17 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:26:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Purple Heart "} 
 Player 2 20:26:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Purple Heart "} 
 Player 2 20:26:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Purple Heart "} 
 Player 2 20:26:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Purple Heart "} 
 Player 2 20:26:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Purple Heart "} 
 Player 2 20:26:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Purple Heart "} 
 Player 2 20:26:18 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:26:19 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:26:19 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:26:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 20:26:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 20:26:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 20:26:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 20:26:19 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:26:20 $MOVE_CARD_END:  

 {"moveIndex":127,"cardId":48,"flipIfFlipped":false,"playerId":1} 
 Player 2 20:26:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 20:26:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 20:26:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 20:26:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 20:26:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 20:26:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 20:26:21 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:26:29 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:26:29 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:26:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 20:26:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 20:26:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 20:26:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 20:26:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck"} 
 Player 2 20:26:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck"} 
 Player 2 20:26:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck"} 
 Player 2 20:26:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck"} 
 Player 2 20:26:52 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:27:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck"} 
 Player 2 20:27:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck"} 
 Player 2 20:27:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1)"} 
 Player 2 20:27:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1)"} 
 Player 2 20:27:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1)"} 
 Player 2 20:27:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1)"} 
 Player 2 20:27:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1)"} 
 Player 2 20:27:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1)"} 
 Player 2 20:27:17 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:27:17 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:27:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1)"} 
 Player 2 20:27:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1)"} 
 Player 2 20:27:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1)"} 
 Player 2 20:27:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1)"} 
 Player 2 20:27:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1) \n4:Player 1 roll a dice"} 
 Player 2 20:27:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1) \n4:Player 1 roll a dice"} 
 Player 2 20:27:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1) \n4:Player 1 roll a dice"} 
 Player 2 20:27:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1) \n4:Player 1 roll a dice"} 
 Player 2 20:27:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1) \n4:Player 1 roll a dice"} 
 Player 2 20:27:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1) \n4:Player 1 roll a dice"} 
 Player 2 20:27:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1) \n4:Player 1 roll a dice"} 
 Player 2 20:27:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1) \n4:Player 1 roll a dice"} 
 Player 2 20:27:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1) \n4:Player 1 roll a dice"} 
 Player 2 20:27:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1) \n4:Player 1 roll a dice"} 
 Player 2 20:27:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1) \n4:Player 1 roll a dice"} 
 Player 2 20:27:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1) \n4:Player 1 roll a dice"} 
 Player 2 20:27:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1) \n4:Player 1 roll a dice"} 
 Player 2 20:27:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1) \n4:Player 1 roll a dice"} 
 Player 2 20:27:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1) \n4:Player 1 roll a dice"} 
 Player 2 20:27:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1) \n4:Player 1 roll a dice"} 
 Player 2 20:27:19 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:27:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1)"} 
 Player 2 20:27:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1)"} 
 Player 2 20:27:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1)"} 
 Player 2 20:27:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1)"} 
 Player 2 20:27:26 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:27:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck"} 
 Player 2 20:27:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck"} 
 Player 2 20:27:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Gold Chest (1)"} 
 Player 2 20:27:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Gold Chest (1)"} 
 Player 2 20:27:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Gold Chest (1)"} 
 Player 2 20:27:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Gold Chest (1)"} 
 Player 2 20:27:32 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:27:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 20:27:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 20:27:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 20:27:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 20:27:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 20:27:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Blood Lust"} 
 Player 2 20:27:35 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:27:42 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:27:42 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:27:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Gold Chest (1)"} 
 Player 2 20:27:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Gold Chest (1)"} 
 Player 2 20:27:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Gold Chest (1)"} 
 Player 2 20:27:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Gold Chest (1)"} 
 Player 2 20:27:42 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 20:27:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Gold Chest (1)"} 
 Player 2 20:27:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Gold Chest (1)"} 
 Player 2 20:27:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Gold Chest (1)"} 
 Player 2 20:27:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Gold Chest (1)"} 
 Player 2 20:27:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Gold Chest (1)"} 
 Player 2 20:27:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Gold Chest (1)"} 
 Player 2 20:27:42 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 23:13:41 $MATCH: 