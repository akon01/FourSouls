Start Log 
 Player 2 01:38:18 $MOVE_TO_TABLE:  
 Player 2 01:38:23 $FINISH_LOAD:  
 {"id":2,"turnPlayerId":2} 
 Player 2 01:38:23 $ASSIGN_CHAR_TO_PLAYER:  
 {"playerId":1,"charCardId":260,"itemCardId":261} 
 Player 2 01:38:23 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":277}],"result":true,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 01:38:23 $ASSIGN_CHAR_TO_PLAYER:  
 {"playerId":2,"charCardId":276,"itemCardId":277} 
 Player 2 01:38:23 $DECK_ARRAGMENT:  
 {"deckType":1,"arrangement":[138,85,80,31,63,50,114,100,44,94,70,113,102,106,12,87,78,96,37,127,41,48,45,13,139,131,110,122,49,121,126,35,59,72,77,71,128,76,140,104,115,55,43,142,124,10,38,16,116,24,29,57,56,101,98,15,52,36,83,34,67,46,123,91,132,25,135,58,18,108,143,99,40,62,32,64,81,39,103,14,119,141,89,11,28,21,73,74,26,33,47,133,68,60,130,120,125,54,8,17,97,30,112,61,82,79,111,23,75,134,129,27,118,19,84,86,105,66,109,7,20,42,88,22,90,65,137,93,69,92,107,51,95,53,117,136,9]} 
 Player 2 01:38:24 $DECK_ARRAGMENT:  
 {"deckType":2,"arrangement":[234,214,232,229,258,243,231,224,242,253,208,206,225,246,254,226,238,241,259,222,215,236,250,248,235,257,247,256,233,217,219,252,240,239,213,218,207,251,249,211,210,223,255,228,212,220,237,244,245,209,221,230,216,227]} 
 Player 2 01:38:24 $DECK_ARRAGMENT:  
 {"deckType":5,"arrangement":[195,163,184,182,162,166,155,170,191,152,173,153,185,188,168,149,189,160,201,196,178,157,172,169,179,183,164,174,187,150,186,167,202,203,180,193,181,156,146,171,197,147,199,148,200,192,151,175,198,177,161,190,158,176,165,159,194,154]} 
 Player 2 01:38:24 $DRAW_CARD:  
 {"deckType":5} 
 Player 2 01:38:24 $FLIP_CARD:  
 {"cardId":154} 
 Player 2 01:38:24 $ADD_STORE_CARD:  
 {"cardId":154} 
 Player 2 01:38:24 $DRAW_CARD:  
 {"deckType":5} 
 Player 2 01:38:24 $FLIP_CARD:  
 {"cardId":194} 
 Player 2 01:38:24 $ADD_STORE_CARD:  
 {"cardId":194} 
 Player 2 01:38:24 $DRAW_CARD:  
 {"deckType":2} 
 Player 2 01:38:24 $DECK_ADD_TO_BOTTOM:  
 {"deckType":2,"cardId":227} 
 Player 2 01:38:24 $DRAW_CARD:  
 {"deckType":2} 
 Player 2 01:38:24 $FLIP_CARD:  
 {"cardId":216} 
 Player 2 01:38:24 $REGISTER_PASSIVE_ITEM:  
 {"cardId":216} 
 Player 2 01:38:24 $ADD_MONSTER:  
 {"monsterPlaceId":1,"monsterId":216} 
 Player 2 01:38:24 $NEW_MONSTER_ON_PLACE:  
 {"cardId":216,"monsterPlaceId":1} 
 Player 2 01:38:24 $DRAW_CARD:  
 {"deckType":2} 
 Player 2 01:38:24 $FLIP_CARD:  
 {"cardId":230} 
 Player 2 01:38:24 $ADD_MONSTER:  
 {"monsterPlaceId":2,"monsterId":230} 
 Player 2 01:38:24 $NEW_MONSTER_ON_PLACE:  
 {"cardId":230,"monsterPlaceId":2} 
 Player 2 01:38:24 $CHANGE_MONEY:  
 {"playerId":1,"numOfCoins":3,"isStartGame":true} 
 Player 2 01:38:24 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":260,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 2 01:38:24 $DRAW_CARD:  
 {"deckType":1} 
 Player 2 01:38:24 $MOVE_CARD:  
 {"moveIndex":1,"cardId":9,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 01:38:24 $CARD_DRAWN:  
 {"playerId":1,"deckType":1,"drawnCardId":9} 
 Player 2 01:38:24 $FLIP_CARD:  
 {"cardId":9} 
 Player 2 01:38:24 $FLIP_CARD:  
 {"cardId":9} 
 Player 2 01:38:24 $PLAYER_GET_LOOT:  
 {"playerId":1,"cardId":9} 
 Player 2 01:38:24 $DRAW_CARD:  
 {"deckType":1} 
 Player 2 01:38:25 $MOVE_CARD:  
 {"moveIndex":2,"cardId":136,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 01:38:25 $CARD_DRAWN:  
 {"playerId":1,"deckType":1,"drawnCardId":136} 
 Player 2 01:38:25 $FLIP_CARD:  
 {"cardId":136} 
 Player 2 01:38:25 $FLIP_CARD:  
 {"cardId":136} 
 Player 2 01:38:25 $PLAYER_GET_LOOT:  
 {"playerId":1,"cardId":136} 
 Player 2 01:38:25 $DRAW_CARD:  
 {"deckType":1} 
 Player 2 01:38:25 $MOVE_CARD:  
 {"moveIndex":3,"cardId":117,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 01:38:25 $CARD_DRAWN:  
 {"playerId":1,"deckType":1,"drawnCardId":117} 
 Player 2 01:38:25 $FLIP_CARD:  
 {"cardId":117} 
 Player 2 01:38:25 $FLIP_CARD:  
 {"cardId":117} 
 Player 2 01:38:26 $PLAYER_GET_LOOT:  
 {"playerId":1,"cardId":117} 
 Player 2 01:38:26 $CHANGE_MONEY:  
 {"playerId":2,"numOfCoins":3,"isStartGame":true} 
 Player 2 01:38:26 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Player 2 01:38:26 $DRAW_CARD:  
 {"deckType":1} 
 Player 2 01:38:26 $MOVE_CARD:  
 {"moveIndex":4,"cardId":53,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 01:38:26 $CARD_DRAWN:  
 {"playerId":2,"deckType":1,"drawnCardId":53} 
 Player 2 01:38:26 $FLIP_CARD:  
 {"cardId":53} 
 Player 2 01:38:26 $PLAYER_GET_LOOT:  
 {"playerId":2,"cardId":53} 
 Player 2 01:38:26 $DRAW_CARD:  
 {"deckType":1} 
 Player 2 01:38:26 $MOVE_CARD:  
 {"moveIndex":5,"cardId":95,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 01:38:27 $CARD_DRAWN:  
 {"playerId":2,"deckType":1,"drawnCardId":95} 
 Player 2 01:38:27 $FLIP_CARD:  
 {"cardId":95} 
 Player 2 01:38:27 $PLAYER_GET_LOOT:  
 {"playerId":2,"cardId":95} 
 Player 2 01:38:27 $DRAW_CARD:  
 {"deckType":1} 
 Player 2 01:38:27 $MOVE_CARD:  
 {"moveIndex":6,"cardId":51,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 01:38:27 $CARD_DRAWN:  
 {"playerId":2,"deckType":1,"drawnCardId":51} 
 Player 2 01:38:27 $FLIP_CARD:  
 {"cardId":51} 
 Player 2 01:38:27 $PLAYER_GET_LOOT:  
 {"playerId":2,"cardId":51} 
 Player 2 01:38:27 $GAME_HAS_STARTED:  
 Player 2 01:38:27 $SET_TURN:  
 {"playerId":1} 
 Player 2 01:38:27 $START_TURN:  
 {"playerId":1} 
 Player 2 01:38:27 $UPDATE_ACTIONS:  
 Player 2 01:38:28 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 01:38:28 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 01:38:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 01:38:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 01:38:28 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:38:28 $MOVE_CARD_END:  
 {"moveIndex":7,"cardId":107,"flipIfFlipped":false,"playerId":1} 
 Player 2 01:38:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 01:38:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 01:38:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 01:38:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 01:38:29 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:39:26 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 01:39:26 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 01:39:27 $MOVE_CARD_END:  
 {"moveIndex":8,"cardId":117,"flipIfFlipped":true,"playerId":1} 
 Player 2 01:39:27 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Pill Purple "} 
 Player 2 01:39:27 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Pill Purple "} 
 Player 2 01:39:31 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":true} 
 Player 2 01:39:31 $NEXT_STACK_ID:  
 Player 2 01:39:31 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Pill Purple "} 
 Player 2 01:39:31 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 2 activated The Lost"} 
 Player 2 01:39:31 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":3,"creatorCardId":276,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 01:39:31 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":0,"_text":"Add ActivateItem 3 "}} 
 Player 2 01:39:33 $USE_ITEM:  
 {"cardId":276} 
 Player 2 01:39:33 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 01:39:33 $ACTION_MASSAGE_REMOVE:  
 {"id":0} 
 Player 2 01:39:33 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 2 activated The Lost"} 
 Player 2 01:39:33 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":3,"creatorCardId":276,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 01:39:33 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":1,"_text":"Response Adding ActivateItem 3"},"childOfId":0} 
 Player 2 01:39:33 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 2 01:39:33 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 01:39:33 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 01:39:33 $ACTION_MASSAGE_REMOVE:  
 {"id":2} 
 Player 2 01:39:33 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 2 01:39:33 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 01:39:35 $RESPOND_TO:  
 {"playerId":-1,"stackEffectResponse":false} 
 Player 2 01:39:35 $ACTION_MASSAGE_REMOVE:  
 {"id":3} 
 Player 2 01:39:35 $ACTION_MASSAGE_REMOVE:  
 {"id":1} 
 Player 2 01:39:35 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":4,"_text":"Resolve ActivateItem 3 "}} 
 Player 2 01:39:35 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":276,"particleType":6} 
 Player 2 01:39:37 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":276,"particleType":6} 
 Player 2 01:39:37 $NEXT_STACK_ID:  
 Player 2 01:39:37 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 2 activated The Lost"} 
 Player 2 01:39:37 $PLAYER_LOSE_LOOT:  
 {"playerId":2,"cardId":53} 
 Player 2 01:39:37 $MOVE_CARD:  
 {"moveIndex":9,"cardId":53,"placeID":278,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 01:39:37 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 2 play 3 Cents(15): addMoney \n3:Player 2 activated The Lost"} 
 Player 2 01:39:37 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 2 play 3 Cents(15): addMoney \n3:Player 2 activated The Lost"} 
 Player 2 01:39:37 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 01:39:38 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 2 play 3 Cents(15): addMoney \n3:Player 2 activated The Lost"} 
 Player 2 01:39:38 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":4,"creatorCardId":276,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":53,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":53,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 01:39:38 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 2 play 3 Cents(15): addMoney \n3:Player 2 activated The Lost"} 
 Player 2 01:39:38 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 2 play 3 Cents(15): addMoney \n3:Player 2 activated The Lost"} 
 Player 2 01:39:38 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 2 play 3 Cents(15): addMoney \n3:Player 2 activated The Lost"} 
 Player 2 01:39:38 $REPLACE_STACK:  
 {"currentStack":[{"entityId":2,"creatorCardId":260,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"lootToPlayCardId":117,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8},{"entityId":4,"creatorCardId":276,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":53,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":53,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":3,"creatorCardId":276,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 
 Player 2 01:39:38 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 2 play 3 Cents(15): addMoney \n3:Player 2 activated The Lost"} 
 Player 2 01:39:38 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":3,"creatorCardId":276,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 01:39:38 $ACTION_MASSAGE_REMOVE:  
 {"id":4} 
 Player 2 01:39:38 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":5,"_text":"Remove After Resolve ActivateItem 3  "}} 
 Player 2 01:39:38 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 2 play 3 Cents(15): addMoney"} 
 Player 2 01:39:38 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":3,"creatorCardId":276,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 01:39:38 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":6,"_text":"Response Remove After Resolve ActivateItem 3"},"childOfId":5} 
 Player 2 01:39:38 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Player 2 01:39:38 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 01:39:38 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 01:39:38 $ACTION_MASSAGE_REMOVE:  
 {"id":7} 
 Player 2 01:39:38 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Player 2 01:39:38 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 01:39:38 $ACTION_MASSAGE_REMOVE:  
 {"id":8} 
 Player 2 01:39:38 $ACTION_MASSAGE_REMOVE:  
 {"id":6} 
 Player 2 01:39:38 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":9,"_text":"Resolve PlayLootCardStackEffect 4 "}} 
 Player 2 01:39:38 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 2 play 3 Cents(15): addMoney"} 
 Player 2 01:39:38 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":53,"particleType":6} 
 Player 2 01:39:40 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":53,"particleType":6} 
 Player 2 01:39:40 $CHANGE_MONEY:  
 {"playerId":2,"numOfCoins":3} 
 Player 2 01:39:40 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 
 Player 2 01:39:40 $MOVE_CARD:  
 {"moveIndex":10,"cardId":53,"placeID":279,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 01:39:40 $ACTION_MASSAGE_REMOVE:  
 {"id":5} 
 Player 2 01:39:41 $MOVE_CARD_TO_PILE:  
 {"type":1,"cardId":53} 
 Player 2 01:39:41 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 2 play 3 Cents(15): addMoney"} 
 Player 2 01:39:41 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":4,"creatorCardId":276,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":53,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 01:39:41 $ACTION_MASSAGE_REMOVE:  
 {"id":9} 
 Player 2 01:39:41 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":10,"_text":"Remove After Resolve PlayLootCardStackEffect 4  "}} 
 Player 2 01:39:41 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Pill Purple "} 
 Player 2 01:39:41 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":4,"creatorCardId":276,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":53,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 01:39:41 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":11,"_text":"Response Remove After Resolve PlayLootCardStackEffect 4"},"childOfId":10} 
 Player 2 01:39:41 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 
 Player 2 01:39:41 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 01:39:41 $ACTION_MASSAGE_REMOVE:  
 {"id":12} 
 Player 2 01:39:41 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 
 Player 2 01:39:41 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 01:39:41 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 01:39:41 $ACTION_MASSAGE_REMOVE:  
 {"id":13} 
 Player 2 01:39:42 $ACTION_MASSAGE_REMOVE:  
 {"id":11} 
 Player 2 01:39:42 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":14,"_text":"Resolve PlayLootCardStackEffect 2 "}} 
 Player 2 01:39:42 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Pill Purple "} 
 Player 2 01:39:42 $DO_STACK_EFFECT:  
 {"originPlayerId":2,"playerId":1,"currentStack":[{"entityId":2,"creatorCardId":260,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"lootToPlayCardId":117,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}]} 
 Player 2 01:39:42 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Pill Purple "} 
 Player 2 01:39:42 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Pill Purple "} 
 Player 2 01:39:42 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Pill Purple "} 
 Player 2 01:39:42 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Pill Purple "} 
 Player 2 01:39:44 $ACTION_MASSAGE_REMOVE:  
 {"id":10} 
 Player 2 01:39:44 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 roll a dice"} 
 Player 2 01:39:44 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 roll a dice"} 
 Player 2 01:39:44 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 roll a dice"} 
 Player 2 01:39:44 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 roll a dice"} 
 Player 2 01:39:44 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:39:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 roll a dice"} 
 Player 2 01:39:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 roll a dice"} 
 Player 2 01:39:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 roll a dice"} 
 Player 2 01:39:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 roll a dice"} 
 Player 2 01:39:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 roll a dice"} 
 Player 2 01:39:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 roll a dice"} 
 Player 2 01:39:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 roll a dice"} 
 Player 2 01:39:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 roll a dice"} 
 Player 2 01:39:45 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:39:47 $MOVE_CARD_END:  
 {"moveIndex":11,"cardId":117,"flipIfFlipped":true,"playerId":1} 
 Player 2 01:39:47 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Pill Purple "} 
 Player 2 01:39:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Pill Purple "} 
 Player 2 01:39:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Pill Purple "} 
 Player 2 01:39:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Pill Purple "} 
 Player 2 01:39:48 $ACTION_MASSAGE_REMOVE:  
 {"id":14} 
 Player 2 01:39:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Pill Purple "} 
 Player 2 01:39:48 $REPLACE_STACK:  
 {"currentStack":[{"entityId":2,"creatorCardId":260,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"lootToPlayCardId":117,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}]} 
 Player 2 01:39:48 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":15,"_text":"Remove After Resolve PlayLootCardStackEffect 2  "}} 
 Player 2 01:39:48 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 01:39:48 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":2,"creatorCardId":260,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"lootToPlayCardId":117,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 2 01:39:48 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":16,"_text":"Response Remove After Resolve PlayLootCardStackEffect 2"},"childOfId":15} 
 Player 2 01:39:48 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 
 Player 2 01:39:48 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 01:39:48 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 01:39:48 $ACTION_MASSAGE_REMOVE:  
 {"id":17} 
 Player 2 01:39:48 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 
 Player 2 01:39:48 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 01:39:48 $ACTION_MASSAGE_REMOVE:  
 {"id":18} 
 Player 2 01:39:48 $ACTION_MASSAGE_REMOVE:  
 {"id":16} 
 Player 2 01:39:48 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":19,"_text":"Stack Was Emptied "}} 
 Player 2 01:39:48 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 01:39:48 $ACTION_MASSAGE_REMOVE:  
 {"id":10} 
 Player 2 01:39:48 $ACTION_MASSAGE_REMOVE:  
 {"id":15} 
 Player 2 01:39:48 $TURN_PLAYER_DO_STACK_EFFECT:  
 {"playerId":1} 
 Player 2 01:39:50 $ACTION_MASSAGE_REMOVE:  
 {"id":19} 
 Player 2 01:39:50 $ACTION_MASSAGE_REMOVE:  
 {"id":15} 
 Player 2 01:40:11 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 01:40:11 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 01:40:11 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1  declared attack on Cursed Fatty"} 
 Player 2 01:40:11 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1  declared attack on Cursed Fatty"} 
 Player 2 01:40:11 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:40:12 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1  declared attack on Cursed Fatty"} 
 Player 2 01:40:12 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1  declared attack on Cursed Fatty"} 
 Player 2 01:40:12 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1  declared attack on Cursed Fatty"} 
 Player 2 01:40:12 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1  declared attack on Cursed Fatty"} 
 Player 2 01:40:12 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:40:17 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 01:40:17 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 01:40:20 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 2 01:40:20 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 2 01:40:20 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:40:20 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 2 01:40:21 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 2 01:40:21 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Cursed Fatty"} 
 Player 2 01:40:21 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Cursed Fatty"} 
 Player 2 01:40:21 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Cursed Fatty"} 
 Player 2 01:40:21 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Cursed Fatty"} 
 Player 2 01:40:21 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Cursed Fatty \n2:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 2 01:40:21 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Cursed Fatty \n2:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 2 01:40:21 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Cursed Fatty \n2:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 2 01:40:21 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Cursed Fatty \n2:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 2 01:40:21 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:40:21 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Cursed Fatty"} 
 Player 2 01:40:21 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Cursed Fatty"} 
 Player 2 01:40:21 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Cursed Fatty"} 
 Player 2 01:40:22 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Cursed Fatty"} 
 Player 2 01:40:22 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:40:25 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 01:40:25 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 01:40:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 2 01:40:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 2 01:40:28 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:40:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 2 01:40:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 2 01:40:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Cursed Fatty"} 
 Player 2 01:40:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Cursed Fatty"} 
 Player 2 01:40:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Cursed Fatty"} 
 Player 2 01:40:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Cursed Fatty"} 
 Player 2 01:40:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Cursed Fatty \n2:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 2 01:40:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Cursed Fatty \n2:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 2 01:40:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Cursed Fatty \n2:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 2 01:40:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Cursed Fatty \n2:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 2 01:40:29 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:40:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Cursed Fatty"} 
 Player 2 01:40:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Cursed Fatty"} 
 Player 2 01:40:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Cursed Fatty"} 
 Player 2 01:40:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Cursed Fatty"} 
 Player 2 01:40:29 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:40:31 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 01:40:31 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 01:40:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 2 01:40:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 2 01:40:34 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:40:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 2 01:40:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 2 01:40:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Cursed Fatty"} 
 Player 2 01:40:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Cursed Fatty"} 
 Player 2 01:40:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Cursed Fatty"} 
 Player 2 01:40:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Cursed Fatty"} 
 Player 2 01:40:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Cursed Fatty \n2:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 2 01:40:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Cursed Fatty \n2:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 2 01:40:49 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Cursed Fatty \n2:Player 1 is rolling against Cursed Fatty<Monster> \n3:Activate Cursed Fatty "} 
 Player 2 01:40:49 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Cursed Fatty \n2:Player 1 is rolling against Cursed Fatty<Monster> \n3:Activate Cursed Fatty "} 
 Player 2 01:40:49 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:40:52 $MOVE_CARD_END:  
 {"moveIndex":12,"cardId":9,"flipIfFlipped":true,"playerId":1} 
 Player 2 01:40:52 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Cursed Fatty \n2:Player 1 is rolling against Cursed Fatty<Monster> \n3:Activate Cursed Fatty "} 
 Player 2 01:40:52 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Cursed Fatty \n2:Player 1 is rolling against Cursed Fatty<Monster> \n3:Activate Cursed Fatty "} 
 Player 2 01:40:52 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Cursed Fatty \n2:Player 1 is rolling against Cursed Fatty<Monster> \n3:Activate Cursed Fatty "} 
 Player 2 01:40:52 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Cursed Fatty \n2:Player 1 is rolling against Cursed Fatty<Monster> \n3:Activate Cursed Fatty "} 
 Player 2 01:40:52 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:40:53 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Cursed Fatty \n2:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 2 01:40:53 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Cursed Fatty \n2:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 2 01:40:53 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Cursed Fatty \n2:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 2 01:40:53 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Cursed Fatty \n2:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 2 01:40:53 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:40:53 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Cursed Fatty"} 
 Player 2 01:40:53 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Cursed Fatty"} 
 Player 2 01:40:53 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Cursed Fatty"} 
 Player 2 01:40:53 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Cursed Fatty"} 
 Player 2 01:40:53 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:40:54 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 01:40:54 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 01:40:56 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 2 01:40:56 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 2 01:40:57 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:40:57 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 2 01:40:57 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 2 01:40:57 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Cursed Fatty"} 
 Player 2 01:40:57 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Cursed Fatty"} 
 Player 2 01:40:57 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Cursed Fatty"} 
 Player 2 01:40:57 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Cursed Fatty"} 
 Player 2 01:40:58 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Cursed Fatty \n2:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 2 01:40:58 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Cursed Fatty \n2:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 2 01:40:58 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Cursed Fatty \n2:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 2 01:40:58 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Cursed Fatty \n2:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 2 01:40:58 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:40:59 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Cursed Fatty"} 
 Player 2 01:40:59 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Cursed Fatty"} 
 Player 2 01:40:59 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by undefined"} 
 Player 2 01:40:59 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by undefined"} 
 Player 2 01:40:59 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by undefined"} 
 Player 2 01:40:59 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by undefined"} 
 Player 2 01:40:59 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Cursed Fatty \n2:[object Object] killed by undefined"} 
 Player 2 01:40:59 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Cursed Fatty \n2:[object Object] killed by undefined"} 
 Player 2 01:40:59 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Cursed Fatty \n2:[object Object] killed by undefined"} 
 Player 2 01:40:59 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Cursed Fatty \n2:[object Object] killed by undefined"} 
 Player 2 01:40:59 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:41:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by undefined"} 
 Player 2 01:41:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by undefined"} 
 Player 2 01:41:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Cursed Fatty<Monster> reward"} 
 Player 2 01:41:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Cursed Fatty<Monster> reward"} 
 Player 2 01:41:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Cursed Fatty<Monster> reward"} 
 Player 2 01:41:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Cursed Fatty<Monster> reward"} 
 Player 2 01:41:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Cursed Fatty<Monster> reward \n2:[object Object] killed by undefined"} 
 Player 2 01:41:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Cursed Fatty<Monster> reward \n2:[object Object] killed by undefined"} 
 Player 2 01:41:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Cursed Fatty<Monster> reward \n2:[object Object] killed by undefined"} 
 Player 2 01:41:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Cursed Fatty<Monster> reward \n2:[object Object] killed by undefined"} 
 Player 2 01:41:00 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:41:01 $MOVE_CARD_END:  
 {"moveIndex":13,"cardId":92,"flipIfFlipped":false,"playerId":1} 
 Player 2 01:41:02 $MOVE_CARD_END:  
 {"moveIndex":14,"cardId":69,"flipIfFlipped":false,"playerId":1} 
 Player 2 01:41:02 $MOVE_CARD_END:  
 {"moveIndex":15,"cardId":216,"flipIfFlipped":true,"playerId":1} 
 Player 2 01:41:03 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Cursed Fatty<Monster> reward"} 
 Player 2 01:41:03 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Cursed Fatty<Monster> reward"} 
 Player 2 01:41:03 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Cursed Fatty<Monster> reward \n2:Refill holder1 slot"} 
 Player 2 01:41:03 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Cursed Fatty<Monster> reward \n2:Refill holder1 slot"} 
 Player 2 01:41:03 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:41:03 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Cursed Fatty<Monster> reward \n2:Refill holder1 slot"} 
 Player 2 01:41:03 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Cursed Fatty<Monster> reward \n2:Refill holder1 slot"} 
 Player 2 01:41:03 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:41:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Cursed Fatty<Monster> reward"} 
 Player 2 01:41:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Cursed Fatty<Monster> reward"} 
 Player 2 01:41:19 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Cursed Fatty<Monster> reward \n2:Player 1 activated Azazel"} 
 Player 2 01:41:19 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Cursed Fatty<Monster> reward \n2:Player 1 activated Azazel"} 
 Player 2 01:41:19 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:41:21 $MOVE_CARD_END:  
 {"moveIndex":16,"cardId":69,"flipIfFlipped":true,"playerId":1} 
 Player 2 01:41:22 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Cursed Fatty<Monster> reward \n2:Player 1 activated Azazel"} 
 Player 2 01:41:22 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Cursed Fatty<Monster> reward \n2:Player 1 activated Azazel"} 
 Player 2 01:41:22 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Cursed Fatty<Monster> reward \n2:Player 1 play 4 Cents(9) "} 
 Player 2 01:41:22 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Cursed Fatty<Monster> reward \n2:Player 1 play 4 Cents(9) "} 
 Player 2 01:41:22 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Cursed Fatty<Monster> reward \n2:Player 1 play 4 Cents(9) "} 
 Player 2 01:41:22 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Cursed Fatty<Monster> reward \n2:Player 1 play 4 Cents(9) "} 
 Player 2 01:41:22 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play 4 Cents(9)  \n2:Player 1 activated Azazel"} 
 Player 2 01:41:22 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play 4 Cents(9)  \n2:Player 1 activated Azazel"} 
 Player 2 01:41:22 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play 4 Cents(9)  \n2:Player 1 activated Azazel"} 
 Player 2 01:41:22 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play 4 Cents(9)  \n2:Player 1 activated Azazel"} 
 Player 2 01:41:22 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:41:25 $MOVE_CARD_END:  
 {"moveIndex":17,"cardId":69,"flipIfFlipped":true,"playerId":1} 
 Player 2 01:41:25 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play 4 Cents(9) "} 
 Player 2 01:41:25 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play 4 Cents(9) "} 
 Player 2 01:41:25 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play 4 Cents(9) "} 
 Player 2 01:41:25 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play 4 Cents(9) "} 
 Player 2 01:41:25 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:41:33 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 01:41:33 $RECHARGE_ITEM:  
 {"cardId":276} 
 Player 2 01:41:33 $PLAYER_RECHARGE_ITEM:  
 {"playerId":2,"cardId":276} 
 Player 2 01:41:33 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 01:41:33 $NEXT_STACK_ID:  
 Player 2 01:41:33 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 01:41:33 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 01:41:33 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":21,"creatorCardId":276,"turnPlayerCardId":276,"stackEffectType":13}} 
 Player 2 01:41:33 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":20,"_text":"Add StartTurnLoot 21 "}} 
 Player 2 01:41:33 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 01:41:33 $ACTION_MASSAGE_REMOVE:  
 {"id":20} 
 Player 2 01:41:33 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 01:41:33 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":21,"creatorCardId":276,"turnPlayerCardId":276,"stackEffectType":13}} 
 Player 2 01:41:33 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":21,"_text":"Response Adding StartTurnLoot 21"},"childOfId":20} 
 Player 2 01:41:33 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 
 Player 2 01:41:34 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 01:41:34 $ACTION_MASSAGE_REMOVE:  
 {"id":22} 
 Player 2 01:41:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 
 Player 2 01:41:34 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 01:41:34 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 01:41:34 $ACTION_MASSAGE_REMOVE:  
 {"id":23} 
 Player 2 01:41:34 $ACTION_MASSAGE_REMOVE:  
 {"id":21} 
 Player 2 01:41:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":24,"_text":"Resolve StartTurnLoot 21 "}} 
 Player 2 01:41:34 $DRAW_CARD:  
 {"deckType":1} 
 Player 2 01:41:34 $MOVE_CARD:  
 {"moveIndex":18,"cardId":93,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 01:41:34 $CARD_DRAWN:  
 {"playerId":2,"deckType":1,"drawnCardId":93} 
 Player 2 01:41:34 $FLIP_CARD:  
 {"cardId":93} 
 Player 2 01:41:34 $PLAYER_GET_LOOT:  
 {"playerId":2,"cardId":93} 
 Player 2 01:41:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 01:41:34 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":21,"creatorCardId":276,"turnPlayerCardId":276,"stackEffectType":13}} 
 Player 2 01:41:34 $ACTION_MASSAGE_REMOVE:  
 {"id":24} 
 Player 2 01:41:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":25,"_text":"Remove After Resolve StartTurnLoot 21  "}} 
 Player 2 01:41:34 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 01:41:35 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":21,"creatorCardId":276,"turnPlayerCardId":276,"stackEffectType":13}} 
 Player 2 01:41:35 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":26,"_text":"Response Remove After Resolve StartTurnLoot 21"},"childOfId":25} 
 Player 2 01:41:35 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":27,"_text":"Wait For Response From Player 1 "},"childOfId":25} 
 Player 2 01:41:35 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 01:41:35 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 01:41:35 $ACTION_MASSAGE_REMOVE:  
 {"id":27} 
 Player 2 01:41:35 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":25} 
 Player 2 01:41:35 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 01:41:35 $ACTION_MASSAGE_REMOVE:  
 {"id":28} 
 Player 2 01:41:35 $ACTION_MASSAGE_REMOVE:  
 {"id":26} 
 Player 2 01:41:35 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":29,"_text":"Stack Was Emptied "}} 
 Player 2 01:41:35 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 01:41:35 $ACTION_MASSAGE_REMOVE:  
 {"id":25} 
 Player 2 01:41:37 $ACTION_MASSAGE_REMOVE:  
 {"id":29} 
 Player 2 01:41:37 $ACTION_MASSAGE_REMOVE:  
 {"id":25} 
 Player 2 01:41:46 $NEXT_STACK_ID:  
 Player 2 01:41:46 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 01:41:46 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 3 Cents(13) "} 
 Player 2 01:41:46 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":22,"creatorCardId":276,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":51,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 2 01:41:46 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":30,"_text":"Add PlayLootCardStackEffect 22 "}} 
 Player 2 01:41:46 $PLAYER_LOSE_LOOT:  
 {"playerId":2,"cardId":51} 
 Player 2 01:41:46 $MOVE_CARD:  
 {"moveIndex":19,"cardId":51,"placeID":278,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 01:41:47 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 3 Cents(13): addMoney"} 
 Player 2 01:41:47 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 3 Cents(13): addMoney"} 
 Player 2 01:41:47 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 01:41:47 $ACTION_MASSAGE_REMOVE:  
 {"id":30} 
 Player 2 01:41:47 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 3 Cents(13): addMoney"} 
 Player 2 01:41:47 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":22,"creatorCardId":276,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":51,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":51,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 01:41:47 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":31,"_text":"Response Adding PlayLootCardStackEffect 22"},"childOfId":30} 
 Player 2 01:41:47 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":32,"_text":"Wait For Response From Player 2 "},"childOfId":30} 
 Player 2 01:41:47 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 01:41:47 $ACTION_MASSAGE_REMOVE:  
 {"id":32} 
 Player 2 01:41:47 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":30} 
 Player 2 01:41:47 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 01:41:47 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 01:41:47 $ACTION_MASSAGE_REMOVE:  
 {"id":33} 
 Player 2 01:41:47 $ACTION_MASSAGE_REMOVE:  
 {"id":31} 
 Player 2 01:41:47 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":34,"_text":"Resolve PlayLootCardStackEffect 22 "}} 
 Player 2 01:41:47 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 3 Cents(13): addMoney"} 
 Player 2 01:41:47 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":51,"particleType":6} 
 Player 2 01:41:49 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":51,"particleType":6} 
 Player 2 01:41:49 $CHANGE_MONEY:  
 {"playerId":2,"numOfCoins":3} 
 Player 2 01:41:49 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 
 Player 2 01:41:49 $MOVE_CARD:  
 {"moveIndex":20,"cardId":51,"placeID":279,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 01:41:50 $MOVE_CARD_TO_PILE:  
 {"type":1,"cardId":51} 
 Player 2 01:41:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 3 Cents(13): addMoney"} 
 Player 2 01:41:50 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":22,"creatorCardId":276,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":51,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 01:41:50 $ACTION_MASSAGE_REMOVE:  
 {"id":34} 
 Player 2 01:41:50 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":35,"_text":"Remove After Resolve PlayLootCardStackEffect 22  "}} 
 Player 2 01:41:50 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 01:41:50 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":22,"creatorCardId":276,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":51,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 01:41:50 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":36,"_text":"Response Remove After Resolve PlayLootCardStackEffect 22"},"childOfId":35} 
 Player 2 01:41:50 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":37,"_text":"Wait For Response From Player 1 "},"childOfId":35} 
 Player 2 01:41:50 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 01:41:50 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 01:41:50 $ACTION_MASSAGE_REMOVE:  
 {"id":37} 
 Player 2 01:41:50 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":38,"_text":"Wait For Response From Player 2 "},"childOfId":35} 
 Player 2 01:41:50 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 01:41:50 $ACTION_MASSAGE_REMOVE:  
 {"id":38} 
 Player 2 01:41:51 $ACTION_MASSAGE_REMOVE:  
 {"id":36} 
 Player 2 01:41:51 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":39,"_text":"Stack Was Emptied "}} 
 Player 2 01:41:51 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 01:41:51 $ACTION_MASSAGE_REMOVE:  
 {"id":35} 
 Player 2 01:41:52 $ACTION_MASSAGE_REMOVE:  
 {"id":39} 
 Player 2 01:41:53 $ACTION_MASSAGE_REMOVE:  
 {"id":35} 
 Player 2 01:41:56 $NEXT_STACK_ID:  
 Player 2 01:41:56 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 01:41:56 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on Dark One"} 
 Player 2 01:41:56 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":23,"creatorCardId":276,"attackingPlayerCardId":276,"idOfCardBeingAttacked":221,"stackEffectType":4}} 
 Player 2 01:41:56 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":40,"_text":"Add DeclareAttack 23 "}} 
 Player 2 01:41:56 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 01:41:56 $ACTION_MASSAGE_REMOVE:  
 {"id":40} 
 Player 2 01:41:56 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on Dark One"} 
 Player 2 01:41:56 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":23,"creatorCardId":276,"attackingPlayerCardId":276,"idOfCardBeingAttacked":221,"stackEffectType":4}} 
 Player 2 01:41:56 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":41,"_text":"Response Adding DeclareAttack 23"},"childOfId":40} 
 Player 2 01:41:56 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":42,"_text":"Wait For Response From Player 2 "},"childOfId":40} 
 Player 2 01:41:56 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 01:41:56 $ACTION_MASSAGE_REMOVE:  
 {"id":42} 
 Player 2 01:41:56 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":43,"_text":"Wait For Response From Player 1 "},"childOfId":40} 
 Player 2 01:41:56 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 01:41:56 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 01:41:56 $ACTION_MASSAGE_REMOVE:  
 {"id":43} 
 Player 2 01:41:56 $ACTION_MASSAGE_REMOVE:  
 {"id":41} 
 Player 2 01:41:56 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":44,"_text":"Resolve DeclareAttack 23 "}} 
 Player 2 01:41:56 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":221,"particleType":5} 
 Player 2 01:41:56 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":6,"originStackId":23},"isAfterActivation":true,"index":6} 
 Player 2 01:41:56 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on Dark One"} 
 Player 2 01:41:56 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":23,"creatorCardId":276,"attackingPlayerCardId":276,"idOfCardBeingAttacked":221,"stackEffectType":4}} 
 Player 2 01:41:56 $ACTION_MASSAGE_REMOVE:  
 {"id":44} 
 Player 2 01:41:56 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":45,"_text":"Remove After Resolve DeclareAttack 23  "}} 
 Player 2 01:41:56 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 01:41:56 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":23,"creatorCardId":276,"attackingPlayerCardId":276,"idOfCardBeingAttacked":221,"stackEffectType":4}} 
 Player 2 01:41:56 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":46,"_text":"Response Remove After Resolve DeclareAttack 23"},"childOfId":45} 
 Player 2 01:41:56 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":47,"_text":"Wait For Response From Player 1 "},"childOfId":45} 
 Player 2 01:41:57 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 01:41:57 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 01:41:57 $ACTION_MASSAGE_REMOVE:  
 {"id":47} 
 Player 2 01:41:57 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":48,"_text":"Wait For Response From Player 2 "},"childOfId":45} 
 Player 2 01:41:57 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 01:41:57 $ACTION_MASSAGE_REMOVE:  
 {"id":48} 
 Player 2 01:41:57 $ACTION_MASSAGE_REMOVE:  
 {"id":46} 
 Player 2 01:41:57 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":49,"_text":"Stack Was Emptied "}} 
 Player 2 01:41:57 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 01:41:57 $ACTION_MASSAGE_REMOVE:  
 {"id":45} 
 Player 2 01:41:58 $ACTION_MASSAGE_REMOVE:  
 {"id":49} 
 Player 2 01:41:59 $ACTION_MASSAGE_REMOVE:  
 {"id":45} 
 Player 2 01:42:01 $NEXT_STACK_ID:  
 Player 2 01:42:01 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 01:42:01 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Dark One<Monster>"} 
 Player 2 01:42:01 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":24,"creatorCardId":276,"rollingPlayerCardId":276,"stackEffectType":2,"attackedMonsterCardId":221}} 
 Player 2 01:42:01 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":50,"_text":"Add AttackRoll 24 "}} 
 Player 2 01:42:01 $ROLL_DICE:  
 {"playerId":2} 
 Player 2 01:42:03 $ROLL_DICE_ENDED:  
 {"playerId":2,"numberRolled":4} 
 Player 2 01:42:03 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 4 vs Dark One<Monster>"} 
 Player 2 01:42:03 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 01:42:03 $ACTION_MASSAGE_REMOVE:  
 {"id":50} 
 Player 2 01:42:03 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 4 vs Dark One<Monster>"} 
 Player 2 01:42:03 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":24,"creatorCardId":276,"numberRolled":4,"rollingPlayerCardId":276,"stackEffectType":2,"attackedMonsterCardId":221}} 
 Player 2 01:42:03 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":51,"_text":"Response Adding AttackRoll 24"},"childOfId":50} 
 Player 2 01:42:03 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":52,"_text":"Wait For Response From Player 2 "},"childOfId":50} 
 Player 2 01:42:03 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 01:42:10 $ACTION_MASSAGE_REMOVE:  
 {"id":52} 
 Player 2 01:42:10 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":53,"_text":"Wait For Response From Player 1 "},"childOfId":50} 
 Player 2 01:42:10 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 01:42:10 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 01:42:10 $ACTION_MASSAGE_REMOVE:  
 {"id":53} 
 Player 2 01:42:10 $ACTION_MASSAGE_REMOVE:  
 {"id":51} 
 Player 2 01:42:10 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":54,"_text":"Resolve AttackRoll 24 "}} 
 Player 2 01:42:10 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":55,"_text":"Added 0 to original roll"}} 
 Player 2 01:42:10 $NEXT_STACK_ID:  
 Player 2 01:42:10 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 4 vs Dark One<Monster>"} 
 Player 2 01:42:10 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 01:42:10 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Dark One \n2:Player 2 rolled 4 vs Dark One<Monster>"} 
 Player 2 01:42:10 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":25,"creatorCardId":276,"entityToDoDamageCardId":276,"entityToTakeDamageCardId":221,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 01:42:10 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Dark One \n2:Player 2 rolled 4 vs Dark One<Monster>"} 
 Player 2 01:42:10 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Dark One \n2:Player 2 rolled 4 vs Dark One<Monster>"} 
 Player 2 01:42:10 $REPLACE_STACK:  
 {"currentStack":[{"entityId":25,"creatorCardId":276,"entityToDoDamageCardId":276,"entityToTakeDamageCardId":221,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":24,"creatorCardId":276,"numberRolled":4,"rollingPlayerCardId":276,"stackEffectType":2,"attackedMonsterCardId":221}]} 
 Player 2 01:42:10 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":7,"originStackId":24},"isAfterActivation":true,"index":7} 
 Player 2 01:42:10 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Dark One \n2:Player 2 rolled 4 vs Dark One<Monster>"} 
 Player 2 01:42:10 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":24,"creatorCardId":276,"numberRolled":4,"rollingPlayerCardId":276,"stackEffectType":2,"attackedMonsterCardId":221}} 
 Player 2 01:42:10 $ACTION_MASSAGE_REMOVE:  
 {"id":54} 
 Player 2 01:42:10 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":56,"_text":"Remove After Resolve AttackRoll 24  "}} 
 Player 2 01:42:11 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Dark One"} 
 Player 2 01:42:11 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":24,"creatorCardId":276,"numberRolled":4,"rollingPlayerCardId":276,"stackEffectType":2,"attackedMonsterCardId":221}} 
 Player 2 01:42:11 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":57,"_text":"Response Remove After Resolve AttackRoll 24"},"childOfId":56} 
 Player 2 01:42:11 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":58,"_text":"Wait For Response From Player 2 "},"childOfId":56} 
 Player 2 01:42:11 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 01:42:11 $ACTION_MASSAGE_REMOVE:  
 {"id":58} 
 Player 2 01:42:11 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":59,"_text":"Wait For Response From Player 1 "},"childOfId":56} 
 Player 2 01:42:11 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 01:42:11 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 01:42:11 $ACTION_MASSAGE_REMOVE:  
 {"id":59} 
 Player 2 01:42:11 $ACTION_MASSAGE_REMOVE:  
 {"id":57} 
 Player 2 01:42:11 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":60,"_text":"Resolve CombatDamage 25 "}} 
 Player 2 01:42:11 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":276}],"result":null,"preventMethod":false,"methodScopeId":221,"scopeIsPlayer":false,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1} 
 Player 2 01:42:11 $NEXT_STACK_ID:  
 Player 2 01:42:11 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Dark One"} 
 Player 2 01:42:11 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Dark One \n2:Activate Dark One effect GainStats<GainStats>"} 
 Player 2 01:42:11 $ADD_TO_STACK:  
 {"stackEffect":{"effectCollectedData":null,"entityId":26,"creatorCardId":221,"hasLockingStackEffect":false,"cardActivatorId":221,"cardWithEffectId":221,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":221,"cardId":221,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 01:42:11 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":61,"_text":"Add ActivatePassiveEffect 26 "}} 
 Player 2 01:42:11 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Dark One \n2:Activate Dark One effect GainStats<GainStats>"} 
 Player 2 01:42:11 $ACTION_MASSAGE_REMOVE:  
 {"id":61} 
 Player 2 01:42:11 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Dark One \n2:Activate Dark One effect GainStats<GainStats>"} 
 Player 2 01:42:11 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"effectCollectedData":{"effectTargets":[221],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":221,"effectCardPlayer":221},"entityId":26,"creatorCardId":221,"hasLockingStackEffect":false,"cardActivatorId":221,"cardWithEffectId":221,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":221,"cardId":221,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 01:42:11 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":62,"_text":"Response Adding ActivatePassiveEffect 26"},"childOfId":61} 
 Player 2 01:42:11 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":63,"_text":"Wait For Response From Player 1 "},"childOfId":61} 
 Player 2 01:42:11 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 01:42:11 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 01:42:12 $ACTION_MASSAGE_REMOVE:  
 {"id":63} 
 Player 2 01:42:12 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":64,"_text":"Wait For Response From Player 2 "},"childOfId":61} 
 Player 2 01:42:12 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 01:42:12 $ACTION_MASSAGE_REMOVE:  
 {"id":64} 
 Player 2 01:42:12 $ACTION_MASSAGE_REMOVE:  
 {"id":62} 
 Player 2 01:42:12 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":65,"_text":"Resolve ActivatePassiveEffect 26 "}} 
 Player 2 01:42:12 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":221,"particleType":6} 
 Player 2 01:42:13 $ACTION_MASSAGE_REMOVE:  
 {"id":55} 
 Player 2 01:42:13 $ACTION_MASSAGE_REMOVE:  
 {"id":56} 
 Player 2 01:42:14 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":221,"particleType":6} 
 Player 2 01:42:14 $MONSTER_GAIN_DMG:  
 {"cardId":221,"DMGToGain":1} 
 Player 2 01:42:14 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":276}],"result":null,"preventMethod":false,"methodScopeId":221,"scopeIsPlayer":false,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1} 
 Player 2 01:42:14 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Dark One \n2:Activate Dark One effect GainStats<GainStats>"} 
 Player 2 01:42:14 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"effectCollectedData":{"effectTargets":[221],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":221,"effectCardPlayer":221},"entityId":26,"creatorCardId":221,"hasLockingStackEffect":false,"cardActivatorId":221,"cardWithEffectId":221,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 01:42:14 $ACTION_MASSAGE_REMOVE:  
 {"id":65} 
 Player 2 01:42:14 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":66,"_text":"Remove After Resolve ActivatePassiveEffect 26  "}} 
 Player 2 01:42:14 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Dark One"} 
 Player 2 01:42:14 $REMOVE_FROM_STACK:  
 {"stackEffect":{"effectCollectedData":{"effectTargets":[221],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":221,"effectCardPlayer":221},"entityId":26,"creatorCardId":221,"hasLockingStackEffect":false,"cardActivatorId":221,"cardWithEffectId":221,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 01:42:14 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":67,"_text":"Response Remove After Resolve ActivatePassiveEffect 26"},"childOfId":66} 
 Player 2 01:42:14 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":68,"_text":"Wait For Response From Player 2 "},"childOfId":66} 
 Player 2 01:42:14 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 01:42:14 $ACTION_MASSAGE_REMOVE:  
 {"id":68} 
 Player 2 01:42:14 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":69,"_text":"Wait For Response From Player 1 "},"childOfId":66} 
 Player 2 01:42:14 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 01:42:14 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 01:42:15 $ACTION_MASSAGE_REMOVE:  
 {"id":69} 
 Player 2 01:42:15 $ACTION_MASSAGE_REMOVE:  
 {"id":67} 
 Player 2 01:42:15 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":70,"_text":"Resolve CombatDamage 25 "}} 
 Player 2 01:42:15 $MONSTER_GET_DAMAGED:  
 {"cardId":221,"hpLeft":2,"damageDealerId":276} 
 Player 2 01:42:15 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":276}],"result":null,"preventMethod":false,"methodScopeId":221,"scopeIsPlayer":false,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 01:42:15 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":4},{"type":0,"number":276},{"type":0,"number":221}],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":8,"originStackId":25},"isAfterActivation":true,"index":8} 
 Player 2 01:42:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Dark One"} 
 Player 2 01:42:15 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":25,"creatorCardId":276,"entityToDoDamageCardId":276,"entityToTakeDamageCardId":221,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 01:42:15 $ACTION_MASSAGE_REMOVE:  
 {"id":60} 
 Player 2 01:42:15 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":71,"_text":"Remove After Resolve CombatDamage 25  "}} 
 Player 2 01:42:15 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 01:42:15 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":25,"creatorCardId":276,"entityToDoDamageCardId":276,"entityToTakeDamageCardId":221,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 01:42:15 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":72,"_text":"Response Remove After Resolve CombatDamage 25"},"childOfId":71} 
 Player 2 01:42:15 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":73,"_text":"Wait For Response From Player 1 "},"childOfId":71} 
 Player 2 01:42:15 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 01:42:15 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 01:42:16 $ACTION_MASSAGE_REMOVE:  
 {"id":73} 
 Player 2 01:42:16 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":74,"_text":"Wait For Response From Player 2 "},"childOfId":71} 
 Player 2 01:42:16 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 01:42:16 $ACTION_MASSAGE_REMOVE:  
 {"id":74} 
 Player 2 01:42:16 $ACTION_MASSAGE_REMOVE:  
 {"id":72} 
 Player 2 01:42:16 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":75,"_text":"Stack Was Emptied "}} 
 Player 2 01:42:16 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 01:42:16 $ACTION_MASSAGE_REMOVE:  
 {"id":54} 
 Player 2 01:42:16 $ACTION_MASSAGE_REMOVE:  
 {"id":66} 
 Player 2 01:42:17 $ACTION_MASSAGE_REMOVE:  
 {"id":66} 
 Player 2 01:42:17 $ACTION_MASSAGE_REMOVE:  
 {"id":75} 
 Player 2 01:42:18 $ACTION_MASSAGE_REMOVE:  
 {"id":71} 
 Player 2 01:42:22 $NEXT_STACK_ID:  
 Player 2 01:42:22 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 01:42:22 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Dark One<Monster>"} 
 Player 2 01:42:22 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":27,"creatorCardId":276,"rollingPlayerCardId":276,"stackEffectType":2,"attackedMonsterCardId":221}} 
 Player 2 01:42:22 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":76,"_text":"Add AttackRoll 27 "}} 
 Player 2 01:42:22 $ROLL_DICE:  
 {"playerId":2} 
 Player 2 01:42:24 $ROLL_DICE_ENDED:  
 {"playerId":2,"numberRolled":1} 
 Player 2 01:42:24 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 1 vs Dark One<Monster>"} 
 Player 2 01:42:24 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 01:42:24 $ACTION_MASSAGE_REMOVE:  
 {"id":76} 
 Player 2 01:42:24 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 1 vs Dark One<Monster>"} 
 Player 2 01:42:24 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":27,"creatorCardId":276,"numberRolled":1,"rollingPlayerCardId":276,"stackEffectType":2,"attackedMonsterCardId":221}} 
 Player 2 01:42:24 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":77,"_text":"Response Adding AttackRoll 27"},"childOfId":76} 
 Player 2 01:42:24 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":78,"_text":"Wait For Response From Player 2 "},"childOfId":76} 
 Player 2 01:42:24 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 01:42:27 $NEXT_STACK_ID:  
 Player 2 01:42:27 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 1 vs Dark One<Monster>"} 
 Player 2 01:42:27 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 1 vs Dark One<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 2 01:42:27 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":28,"creatorCardId":276,"hasLockingStackEffect":false,"itemToPlayCardId":277,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 01:42:27 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":79,"_text":"Add ActivateItem 28 "}} 
 Player 2 01:42:29 $USE_ITEM:  
 {"cardId":277} 
 Player 2 01:42:29 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 01:42:29 $ACTION_MASSAGE_REMOVE:  
 {"id":79} 
 Player 2 01:42:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 1 vs Dark One<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 2 01:42:29 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":28,"creatorCardId":276,"hasLockingStackEffect":false,"itemToPlayCardId":277,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 01:42:29 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":80,"_text":"Response Adding ActivateItem 28"},"childOfId":79} 
 Player 2 01:42:29 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":81,"_text":"Wait For Response From Player 2 "},"childOfId":79} 
 Player 2 01:42:29 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 01:42:31 $RESPOND_TO:  
 {"playerId":-1,"stackEffectResponse":false} 
 Player 2 01:42:31 $ACTION_MASSAGE_REMOVE:  
 {"id":81} 
 Player 2 01:42:31 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":82,"_text":"Wait For Response From Player 1 "},"childOfId":79} 
 Player 2 01:42:31 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 01:42:31 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 01:42:31 $ACTION_MASSAGE_REMOVE:  
 {"id":82} 
 Player 2 01:42:31 $ACTION_MASSAGE_REMOVE:  
 {"id":80} 
 Player 2 01:42:31 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":83,"_text":"Resolve ActivateItem 28 "}} 
 Player 2 01:42:31 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":277,"particleType":6} 
 Player 2 01:42:33 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":277,"particleType":6} 
 Player 2 01:42:33 $REGISTER_ONE_TURN_PASSIVE_EFFECT:  
 {"cardId":277,"effectIndex":{"type":3,"index":0},"conditionData":[{"effectTargets":[276],"chainEffectsData":[],"methodArgs":[],"isPassive":false,"effectCard":277,"effectCardOwner":276,"effectCardPlayer":276}]} 
 Player 2 01:42:33 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 1 vs Dark One<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 2 01:42:33 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":28,"creatorCardId":276,"hasLockingStackEffect":false,"itemToPlayCardId":277,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 01:42:33 $ACTION_MASSAGE_REMOVE:  
 {"id":83} 
 Player 2 01:42:33 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":84,"_text":"Remove After Resolve ActivateItem 28  "}} 
 Player 2 01:42:33 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 1 vs Dark One<Monster>"} 
 Player 2 01:42:33 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":28,"creatorCardId":276,"hasLockingStackEffect":false,"itemToPlayCardId":277,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 01:42:33 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":85,"_text":"Response Remove After Resolve ActivateItem 28"},"childOfId":84} 
 Player 2 01:42:33 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":86,"_text":"Wait For Response From Player 1 "},"childOfId":84} 
 Player 2 01:42:33 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 01:42:33 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 01:42:34 $ACTION_MASSAGE_REMOVE:  
 {"id":86} 
 Player 2 01:42:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":87,"_text":"Wait For Response From Player 2 "},"childOfId":84} 
 Player 2 01:42:34 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 01:42:34 $ACTION_MASSAGE_REMOVE:  
 {"id":87} 
 Player 2 01:42:34 $ACTION_MASSAGE_REMOVE:  
 {"id":85} 
 Player 2 01:42:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":88,"_text":"Resolve AttackRoll 27 "}} 
 Player 2 01:42:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":89,"_text":"Added 0 to original roll"}} 
 Player 2 01:42:34 $NEXT_STACK_ID:  
 Player 2 01:42:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 1 vs Dark One<Monster>"} 
 Player 2 01:42:34 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 01:42:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Dark One combat damage to The Lost \n2:Player 2 rolled 1 vs Dark One<Monster>"} 
 Player 2 01:42:34 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":29,"creatorCardId":276,"entityToDoDamageCardId":221,"entityToTakeDamageCardId":276,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 01:42:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Dark One combat damage to The Lost \n2:Player 2 rolled 1 vs Dark One<Monster>"} 
 Player 2 01:42:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Dark One combat damage to The Lost \n2:Player 2 rolled 1 vs Dark One<Monster>"} 
 Player 2 01:42:34 $REPLACE_STACK:  
 {"currentStack":[{"entityId":29,"creatorCardId":276,"entityToDoDamageCardId":221,"entityToTakeDamageCardId":276,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":27,"creatorCardId":276,"numberRolled":1,"rollingPlayerCardId":276,"stackEffectType":2,"attackedMonsterCardId":221}]} 
 Player 2 01:42:34 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":1},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":9,"originStackId":27},"isAfterActivation":true,"index":9} 
 Player 2 01:42:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Dark One combat damage to The Lost \n2:Player 2 rolled 1 vs Dark One<Monster>"} 
 Player 2 01:42:34 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":27,"creatorCardId":276,"numberRolled":1,"rollingPlayerCardId":276,"stackEffectType":2,"attackedMonsterCardId":221}} 
 Player 2 01:42:34 $ACTION_MASSAGE_REMOVE:  
 {"id":88} 
 Player 2 01:42:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":90,"_text":"Remove After Resolve AttackRoll 27  "}} 
 Player 2 01:42:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Dark One combat damage to The Lost"} 
 Player 2 01:42:34 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":27,"creatorCardId":276,"numberRolled":1,"rollingPlayerCardId":276,"stackEffectType":2,"attackedMonsterCardId":221}} 
 Player 2 01:42:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":91,"_text":"Response Remove After Resolve AttackRoll 27"},"childOfId":90} 
 Player 2 01:42:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":92,"_text":"Wait For Response From Player 2 "},"childOfId":90} 
 Player 2 01:42:34 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 01:42:34 $ACTION_MASSAGE_REMOVE:  
 {"id":92} 
 Player 2 01:42:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":93,"_text":"Wait For Response From Player 1 "},"childOfId":90} 
 Player 2 01:42:34 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 01:42:34 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 01:42:35 $ACTION_MASSAGE_REMOVE:  
 {"id":93} 
 Player 2 01:42:35 $ACTION_MASSAGE_REMOVE:  
 {"id":91} 
 Player 2 01:42:35 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":94,"_text":"Resolve CombatDamage 29 "}} 
 Player 2 01:42:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Dark One 2 combat damage to The Lost"} 
 Player 2 01:42:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Dark One 2 combat damage to The Lost"} 
 Player 2 01:42:35 $PLAYER_GET_HIT:  
 {"playerId":2,"damage":2,"damageDealerId":221} 
 Player 2 01:42:35 $NEXT_STACK_ID:  
 Player 2 01:42:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Dark One 2 combat damage to The Lost"} 
 Player 2 01:42:35 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 01:42:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Dark One 2 combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 2 01:42:35 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":30,"creatorCardId":276,"playerToDieCardId":276,"stackEffectType":15,"killerId":221}} 
 Player 2 01:42:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Dark One 2 combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 2 01:42:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Dark One 2 combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 2 01:42:35 $REPLACE_STACK:  
 {"currentStack":[{"entityId":29,"creatorCardId":276,"entityToDoDamageCardId":221,"entityToTakeDamageCardId":276,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":30,"creatorCardId":276,"playerToDieCardId":276,"stackEffectType":15,"killerId":221}]} 
 Player 2 01:42:35 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":221}],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":10,"originStackId":-1},"isAfterActivation":true,"index":10} 
 Player 2 01:42:35 $ACTION_MASSAGE_REMOVE:  
 {"id":94} 
 Player 2 01:42:35 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":95,"_text":"Remove After Resolve CombatDamage 29  "}} 
 Player 2 01:42:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 01:42:35 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":29,"creatorCardId":276,"entityToDoDamageCardId":221,"entityToTakeDamageCardId":276,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 01:42:35 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":96,"_text":"Response Remove After Resolve CombatDamage 29"},"childOfId":95} 
 Player 2 01:42:35 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":97,"_text":"Wait For Response From Player 2 "},"childOfId":95} 
 Player 2 01:42:35 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 01:42:35 $ACTION_MASSAGE_REMOVE:  
 {"id":97} 
 Player 2 01:42:35 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":98,"_text":"Wait For Response From Player 1 "},"childOfId":95} 
 Player 2 01:42:35 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 01:42:35 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 01:42:36 $ACTION_MASSAGE_REMOVE:  
 {"id":98} 
 Player 2 01:42:36 $ACTION_MASSAGE_REMOVE:  
 {"id":96} 
 Player 2 01:42:36 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":99,"_text":"Resolve PlayerDeath 30 "}} 
 Player 2 01:42:36 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":221,"particleType":5} 
 Player 2 01:42:36 $CANCEL_ATTACK:  
 Player 2 01:42:36 $NEXT_STACK_ID:  
 Player 2 01:42:36 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 01:42:36 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_PAY_DEATH_PANELTIES","args":[],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":2,"originStackId":31},"isAfterActivation":false,"index":2} 
 Player 2 01:42:36 $NEXT_STACK_ID:  
 Player 2 01:42:36 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 2 01:42:36 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 2 01:42:36 $ADD_TO_STACK:  
 {"stackEffect":{"effectCollectedData":null,"entityId":32,"creatorCardId":276,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":277,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":277,"effctType":3},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 01:42:36 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":100,"_text":"Add ActivatePassiveEffect 32 "}} 
 Player 2 01:42:36 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 2 01:42:36 $ACTION_MASSAGE_REMOVE:  
 {"id":100} 
 Player 2 01:42:36 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 2 01:42:36 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"effectCollectedData":null,"entityId":32,"creatorCardId":276,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":277,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":277,"effctType":3},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 01:42:36 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":101,"_text":"Response Adding ActivatePassiveEffect 32"},"childOfId":100} 
 Player 2 01:42:36 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":102,"_text":"Wait For Response From Player 1 "},"childOfId":100} 
 Player 2 01:42:36 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 01:42:36 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 01:42:36 $ACTION_MASSAGE_REMOVE:  
 {"id":84} 
 Player 2 01:42:37 $ACTION_MASSAGE_REMOVE:  
 {"id":89} 
 Player 2 01:42:37 $ACTION_MASSAGE_REMOVE:  
 {"id":90} 
 Player 2 01:42:37 $ACTION_MASSAGE_REMOVE:  
 {"id":102} 
 Player 2 01:42:37 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":103,"_text":"Wait For Response From Player 2 "},"childOfId":100} 
 Player 2 01:42:37 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 01:42:37 $ACTION_MASSAGE_REMOVE:  
 {"id":103} 
 Player 2 01:42:37 $ACTION_MASSAGE_REMOVE:  
 {"id":101} 
 Player 2 01:42:37 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":104,"_text":"Resolve ActivatePassiveEffect 32 "}} 
 Player 2 01:42:37 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":277,"particleType":6} 
 Player 2 01:42:38 $ACTION_MASSAGE_REMOVE:  
 {"id":95} 
 Player 2 01:42:39 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":277,"particleType":6} 
 Player 2 01:42:39 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":105,"_text":"Fizzle PlayerDeathPenalties 31"}} 
 Player 2 01:42:39 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_PAY_DEATH_PANELTIES","args":[],"result":null,"preventMethod":true,"methodScopeId":276,"scopeIsPlayer":true,"index":2,"originStackId":31},"isAfterActivation":false,"index":2} 
 Player 2 01:42:39 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 2 01:42:39 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"effectCollectedData":null,"entityId":32,"creatorCardId":276,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":277,"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 01:42:39 $ACTION_MASSAGE_REMOVE:  
 {"id":104} 
 Player 2 01:42:39 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":106,"_text":"Remove After Resolve ActivatePassiveEffect 32  "}} 
 Player 2 01:42:39 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 01:42:39 $REMOVE_FROM_STACK:  
 {"stackEffect":{"effectCollectedData":null,"entityId":32,"creatorCardId":276,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":277,"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 01:42:39 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":107,"_text":"Response Remove After Resolve ActivatePassiveEffect 32"},"childOfId":106} 
 Player 2 01:42:39 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":108,"_text":"Wait For Response From Player 2 "},"childOfId":106} 
 Player 2 01:42:39 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 01:42:39 $ACTION_MASSAGE_REMOVE:  
 {"id":108} 
 Player 2 01:42:39 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":109,"_text":"Wait For Response From Player 1 "},"childOfId":106} 
 Player 2 01:42:39 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 01:42:39 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 01:42:39 $ACTION_MASSAGE_REMOVE:  
 {"id":109} 
 Player 2 01:42:39 $ACTION_MASSAGE_REMOVE:  
 {"id":107} 
 Player 2 01:42:39 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":110,"_text":"Resolve PlayerDeath 30 "}} 
 Player 2 01:42:39 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 01:42:39 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":31,"creatorCardId":276,"playerToPayCardId":276,"stackEffectType":16}} 
 Player 2 01:42:39 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 01:42:39 $REPLACE_STACK:  
 {"currentStack":[{"entityId":30,"creatorCardId":276,"playerToDieCardId":276,"stackEffectType":15,"killerId":221}]} 
 Player 2 01:42:40 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 01:42:40 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":30,"creatorCardId":276,"playerToDieCardId":276,"stackEffectType":15,"killerId":221}} 
 Player 2 01:42:40 $ACTION_MASSAGE_REMOVE:  
 {"id":99} 
 Player 2 01:42:40 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":111,"_text":"Remove After Resolve PlayerDeath 30  "}} 
 Player 2 01:42:40 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 01:42:40 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":30,"creatorCardId":276,"playerToDieCardId":276,"stackEffectType":15,"killerId":221}} 
 Player 2 01:42:40 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":112,"_text":"Response Remove After Resolve PlayerDeath 30"},"childOfId":111} 
 Player 2 01:42:40 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":113,"_text":"Wait For Response From Player 1 "},"childOfId":111} 
 Player 2 01:42:40 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 01:42:40 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 01:42:40 $ACTION_MASSAGE_REMOVE:  
 {"id":113} 
 Player 2 01:42:40 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":114,"_text":"Wait For Response From Player 2 "},"childOfId":111} 
 Player 2 01:42:40 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 01:42:40 $ACTION_MASSAGE_REMOVE:  
 {"id":114} 
 Player 2 01:42:40 $ACTION_MASSAGE_REMOVE:  
 {"id":112} 
 Player 2 01:42:40 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":115,"_text":"Stack Was Emptied "}} 
 Player 2 01:42:40 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 01:42:40 $ACTION_MASSAGE_REMOVE:  
 {"id":77} 
 Player 2 01:42:41 $ACTION_MASSAGE_REMOVE:  
 {"id":78} 
 Player 2 01:42:41 $ACTION_MASSAGE_REMOVE:  
 {"id":84} 
 Player 2 01:42:41 $ACTION_MASSAGE_REMOVE:  
 {"id":88} 
 Player 2 01:42:41 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 01:42:41 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 01:42:41 $ACTION_MASSAGE_REMOVE:  
 {"id":77} 
 Player 2 01:42:41 $ACTION_MASSAGE_REMOVE:  
 {"id":78} 
 Player 2 01:42:41 $REPLACE_STACK:  
 {"currentStack":[]} 
 Player 2 01:42:41 $END_TURN:  
 Player 2 01:42:41 $SET_TURN:  
 {"playerId":1} 
 Player 2 01:42:41 $START_TURN:  
 {"playerId":1} 
 Player 2 01:42:41 $ACTION_MASSAGE_REMOVE:  
 {"id":78} 
 Player 2 01:42:41 $ACTION_MASSAGE_REMOVE:  
 {"id":77} 
 Player 2 01:42:42 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 01:42:42 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 01:42:42 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 01:42:42 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 01:42:42 $ACTION_MASSAGE_REMOVE:  
 {"id":105} 
 Player 2 01:42:42 $ACTION_MASSAGE_REMOVE:  
 {"id":106} 
 Player 2 01:42:42 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:42:42 $ACTION_MASSAGE_REMOVE:  
 {"id":115} 
 Player 2 01:42:42 $ACTION_MASSAGE_REMOVE:  
 {"id":111} 
 Player 2 01:42:43 $MOVE_CARD_END:  
 {"moveIndex":21,"cardId":137,"flipIfFlipped":false,"playerId":1} 
 Player 2 01:42:43 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 01:42:43 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 01:42:43 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 01:42:43 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 01:42:43 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:43:25 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 01:43:25 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 01:43:25 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1  declared attack on TopBlankCard"} 
 Player 2 01:43:25 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1  declared attack on TopBlankCard"} 
 Player 2 01:43:25 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:43:39 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1  declared attack on TopBlankCard"} 
 Player 2 01:43:39 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1  declared attack on TopBlankCard"} 
 Player 2 01:43:39 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1  declared attack on Charger"} 
 Player 2 01:43:39 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1  declared attack on Charger"} 
 Player 2 01:43:39 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:43:41 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 01:43:41 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 01:43:43 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Charger<Monster>"} 
 Player 2 01:43:43 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Charger<Monster>"} 
 Player 2 01:43:43 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:43:44 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Charger<Monster>"} 
 Player 2 01:43:44 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Charger<Monster>"} 
 Player 2 01:43:44 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Charger combat damage to Azazel"} 
 Player 2 01:43:44 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Charger combat damage to Azazel"} 
 Player 2 01:43:44 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Charger combat damage to Azazel"} 
 Player 2 01:43:44 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Charger combat damage to Azazel"} 
 Player 2 01:43:44 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Charger combat damage to Azazel \n2:Player 1 is rolling against Charger<Monster>"} 
 Player 2 01:43:44 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Charger combat damage to Azazel \n2:Player 1 is rolling against Charger<Monster>"} 
 Player 2 01:43:44 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Charger combat damage to Azazel \n2:Player 1 is rolling against Charger<Monster>"} 
 Player 2 01:43:44 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Charger combat damage to Azazel \n2:Player 1 is rolling against Charger<Monster>"} 
 Player 2 01:43:44 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:43:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Charger combat damage to Azazel"} 
 Player 2 01:43:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Charger combat damage to Azazel"} 
 Player 2 01:43:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Charger combat damage to Azazel"} 
 Player 2 01:43:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Charger combat damage to Azazel"} 
 Player 2 01:43:45 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:43:47 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 01:43:47 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 01:43:49 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Charger<Monster>"} 
 Player 2 01:43:49 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Charger<Monster>"} 
 Player 2 01:43:49 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:43:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Charger<Monster>"} 
 Player 2 01:43:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Charger<Monster>"} 
 Player 2 01:43:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Charger combat damage to Azazel"} 
 Player 2 01:43:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Charger combat damage to Azazel"} 
 Player 2 01:43:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Charger combat damage to Azazel"} 
 Player 2 01:43:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Charger combat damage to Azazel"} 
 Player 2 01:43:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Charger combat damage to Azazel \n2:Player 1 is rolling against Charger<Monster>"} 
 Player 2 01:43:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Charger combat damage to Azazel \n2:Player 1 is rolling against Charger<Monster>"} 
 Player 2 01:43:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Charger combat damage to Azazel \n2:Player 1 is rolling against Charger<Monster>"} 
 Player 2 01:43:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Charger combat damage to Azazel \n2:Player 1 is rolling against Charger<Monster>"} 
 Player 2 01:43:50 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:43:51 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Charger combat damage to Azazel"} 
 Player 2 01:43:51 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Charger combat damage to Azazel"} 
 Player 2 01:43:51 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 01:43:51 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 01:43:51 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 01:43:51 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 01:43:51 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Charger combat damage to Azazel \n2:Player 1 is about to die"} 
 Player 2 01:43:51 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Charger combat damage to Azazel \n2:Player 1 is about to die"} 
 Player 2 01:43:51 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:43:52 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 01:43:52 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 01:43:52 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 01:43:52 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 01:43:52 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 01:43:52 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 01:43:52 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 
 Player 2 01:43:52 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 
 Player 2 01:43:52 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 
 Player 2 01:43:52 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 
 Player 2 01:43:52 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:44:11 $MOVE_CARD_END:  
 {"moveIndex":22,"cardId":92,"flipIfFlipped":true,"playerId":1} 
 Player 2 01:44:11 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 01:44:11 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 01:44:11 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 01:44:11 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 01:44:11 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:44:12 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 01:44:12 $RECHARGE_ITEM:  
 {"cardId":277} 
 Player 2 01:44:12 $PLAYER_RECHARGE_ITEM:  
 {"playerId":2,"cardId":277} 
 Player 2 01:44:12 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 01:44:12 $NEXT_STACK_ID:  
 Player 2 01:44:12 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 01:44:12 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 01:44:12 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":41,"creatorCardId":276,"turnPlayerCardId":276,"stackEffectType":13}} 
 Player 2 01:44:12 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":116,"_text":"Add StartTurnLoot 41 "}} 
 Player 2 01:44:12 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 01:44:12 $ACTION_MASSAGE_REMOVE:  
 {"id":116} 
 Player 2 01:44:12 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 01:44:12 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":41,"creatorCardId":276,"turnPlayerCardId":276,"stackEffectType":13}} 
 Player 2 01:44:12 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":117,"_text":"Response Adding StartTurnLoot 41"},"childOfId":116} 
 Player 2 01:44:12 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":118,"_text":"Wait For Response From Player 2 "},"childOfId":116} 
 Player 2 01:44:12 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 01:44:12 $ACTION_MASSAGE_REMOVE:  
 {"id":118} 
 Player 2 01:44:12 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":119,"_text":"Wait For Response From Player 1 "},"childOfId":116} 
 Player 2 01:44:12 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 01:44:12 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 01:44:12 $ACTION_MASSAGE_REMOVE:  
 {"id":119} 
 Player 2 01:44:12 $ACTION_MASSAGE_REMOVE:  
 {"id":117} 
 Player 2 01:44:12 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":120,"_text":"Resolve StartTurnLoot 41 "}} 
 Player 2 01:44:12 $DRAW_CARD:  
 {"deckType":1} 
 Player 2 01:44:12 $MOVE_CARD:  
 {"moveIndex":23,"cardId":65,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 01:44:13 $CARD_DRAWN:  
 {"playerId":2,"deckType":1,"drawnCardId":65} 
 Player 2 01:44:13 $FLIP_CARD:  
 {"cardId":65} 
 Player 2 01:44:13 $PLAYER_GET_LOOT:  
 {"playerId":2,"cardId":65} 
 Player 2 01:44:13 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 01:44:13 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":41,"creatorCardId":276,"turnPlayerCardId":276,"stackEffectType":13}} 
 Player 2 01:44:13 $ACTION_MASSAGE_REMOVE:  
 {"id":120} 
 Player 2 01:44:13 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":121,"_text":"Remove After Resolve StartTurnLoot 41  "}} 
 Player 2 01:44:13 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 01:44:13 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":41,"creatorCardId":276,"turnPlayerCardId":276,"stackEffectType":13}} 
 Player 2 01:44:13 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":122,"_text":"Response Remove After Resolve StartTurnLoot 41"},"childOfId":121} 
 Player 2 01:44:13 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":123,"_text":"Wait For Response From Player 1 "},"childOfId":121} 
 Player 2 01:44:13 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 01:44:13 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 01:44:14 $ACTION_MASSAGE_REMOVE:  
 {"id":123} 
 Player 2 01:44:14 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":124,"_text":"Wait For Response From Player 2 "},"childOfId":121} 
 Player 2 01:44:14 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 01:44:14 $ACTION_MASSAGE_REMOVE:  
 {"id":124} 
 Player 2 01:44:14 $ACTION_MASSAGE_REMOVE:  
 {"id":122} 
 Player 2 01:44:14 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":125,"_text":"Stack Was Emptied "}} 
 Player 2 01:44:14 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 01:44:14 $ACTION_MASSAGE_REMOVE:  
 {"id":125} 
 Player 2 01:44:15 $ACTION_MASSAGE_REMOVE:  
 {"id":125} 
 Player 2 01:44:16 $ACTION_MASSAGE_REMOVE:  
 {"id":121} 
 Player 2 01:44:23 $NEXT_STACK_ID:  
 Player 2 01:44:23 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 01:44:23 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 4 Cents(5) "} 
 Player 2 01:44:23 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":42,"creatorCardId":276,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":65,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 2 01:44:23 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":126,"_text":"Add PlayLootCardStackEffect 42 "}} 
 Player 2 01:44:23 $PLAYER_LOSE_LOOT:  
 {"playerId":2,"cardId":65} 
 Player 2 01:44:24 $MOVE_CARD:  
 {"moveIndex":24,"cardId":65,"placeID":278,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 01:44:24 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 4 Cents(5): addMoney"} 
 Player 2 01:44:24 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 4 Cents(5): addMoney"} 
 Player 2 01:44:24 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 01:44:24 $ACTION_MASSAGE_REMOVE:  
 {"id":126} 
 Player 2 01:44:24 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 4 Cents(5): addMoney"} 
 Player 2 01:44:24 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":42,"creatorCardId":276,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":65,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":65,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 01:44:24 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":127,"_text":"Response Adding PlayLootCardStackEffect 42"},"childOfId":126} 
 Player 2 01:44:24 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":128,"_text":"Wait For Response From Player 2 "},"childOfId":126} 
 Player 2 01:44:24 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 01:44:24 $ACTION_MASSAGE_REMOVE:  
 {"id":128} 
 Player 2 01:44:24 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":129,"_text":"Wait For Response From Player 1 "},"childOfId":126} 
 Player 2 01:44:24 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 01:44:24 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 01:44:25 $ACTION_MASSAGE_REMOVE:  
 {"id":129} 
 Player 2 01:44:25 $ACTION_MASSAGE_REMOVE:  
 {"id":127} 
 Player 2 01:44:25 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":130,"_text":"Resolve PlayLootCardStackEffect 42 "}} 
 Player 2 01:44:25 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 4 Cents(5): addMoney"} 
 Player 2 01:44:25 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":65,"particleType":6} 
 Player 2 01:44:27 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":65,"particleType":6} 
 Player 2 01:44:27 $CHANGE_MONEY:  
 {"playerId":2,"numOfCoins":4} 
 Player 2 01:44:27 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":11,"originStackId":-1},"isAfterActivation":true,"index":11} 
 Player 2 01:44:27 $MOVE_CARD:  
 {"moveIndex":25,"cardId":65,"placeID":279,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 01:44:27 $MOVE_CARD_TO_PILE:  
 {"type":1,"cardId":65} 
 Player 2 01:44:27 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 4 Cents(5): addMoney"} 
 Player 2 01:44:27 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":42,"creatorCardId":276,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":65,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 01:44:27 $ACTION_MASSAGE_REMOVE:  
 {"id":130} 
 Player 2 01:44:27 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":131,"_text":"Remove After Resolve PlayLootCardStackEffect 42  "}} 
 Player 2 01:44:27 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 01:44:27 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":42,"creatorCardId":276,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":65,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 01:44:27 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":132,"_text":"Response Remove After Resolve PlayLootCardStackEffect 42"},"childOfId":131} 
 Player 2 01:44:27 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":133,"_text":"Wait For Response From Player 1 "},"childOfId":131} 
 Player 2 01:44:27 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 01:44:27 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 01:44:27 $ACTION_MASSAGE_REMOVE:  
 {"id":133} 
 Player 2 01:44:27 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":134,"_text":"Wait For Response From Player 2 "},"childOfId":131} 
 Player 2 01:44:27 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 01:44:27 $ACTION_MASSAGE_REMOVE:  
 {"id":134} 
 Player 2 01:44:27 $ACTION_MASSAGE_REMOVE:  
 {"id":132} 
 Player 2 01:44:27 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":135,"_text":"Stack Was Emptied "}} 
 Player 2 01:44:28 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 01:44:28 $ACTION_MASSAGE_REMOVE:  
 {"id":131} 
 Player 2 01:44:29 $ACTION_MASSAGE_REMOVE:  
 {"id":135} 
 Player 2 01:44:29 $NEXT_STACK_ID:  
 Player 2 01:44:29 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 01:44:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to buy Synthoil for 10"} 
 Player 2 01:44:29 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":43,"creatorCardId":276,"itemToPurchaseCardId":194,"playerWhoBuysCardId":276,"cost":10,"stackEffectType":9}} 
 Player 2 01:44:29 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":136,"_text":"Add PurchaseItem 43 "}} 
 Player 2 01:44:29 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 01:44:29 $ACTION_MASSAGE_REMOVE:  
 {"id":136} 
 Player 2 01:44:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to buy Synthoil for 10"} 
 Player 2 01:44:29 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":43,"creatorCardId":276,"itemToPurchaseCardId":194,"playerWhoBuysCardId":276,"cost":10,"stackEffectType":9}} 
 Player 2 01:44:29 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":137,"_text":"Response Adding PurchaseItem 43"},"childOfId":136} 
 Player 2 01:44:29 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":138,"_text":"Wait For Response From Player 2 "},"childOfId":136} 
 Player 2 01:44:29 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 01:44:29 $ACTION_MASSAGE_REMOVE:  
 {"id":138} 
 Player 2 01:44:29 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":139,"_text":"Wait For Response From Player 1 "},"childOfId":136} 
 Player 2 01:44:29 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 01:44:30 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 01:44:30 $ACTION_MASSAGE_REMOVE:  
 {"id":139} 
 Player 2 01:44:30 $ACTION_MASSAGE_REMOVE:  
 {"id":137} 
 Player 2 01:44:30 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":140,"_text":"Resolve PurchaseItem 43 "}} 
 Player 2 01:44:30 $CHANGE_MONEY:  
 {"playerId":2,"numOfCoins":-10} 
 Player 2 01:44:30 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-10}],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":12,"originStackId":-1},"isAfterActivation":true,"index":12} 
 Player 2 01:44:30 $REMOVE_ITEM_FROM_SHOP:  
 {"cardId":194} 
 Player 2 01:44:30 $NEXT_STACK_ID:  
 Player 2 01:44:30 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to buy Synthoil for 10"} 
 Player 2 01:44:30 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 01:44:30 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to buy Synthoil for 10 \n2:Refill Store slot"} 
 Player 2 01:44:30 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":44,"creatorCardId":276,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 
 Player 2 01:44:30 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to buy Synthoil for 10 \n2:Refill Store slot"} 
 Player 2 01:44:30 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to buy Synthoil for 10 \n2:Refill Store slot"} 
 Player 2 01:44:30 $REPLACE_STACK:  
 {"currentStack":[{"entityId":43,"creatorCardId":276,"itemToPurchaseCardId":194,"playerWhoBuysCardId":276,"cost":10,"stackEffectType":9},{"entityId":44,"creatorCardId":276,"slotType":5,"slotToFillId":0,"stackEffectType":10}]} 
 Player 2 01:44:30 $REGISTER_PASSIVE_ITEM:  
 {"cardId":194} 
 Player 2 01:44:30 $MOVE_CARD:  
 {"moveIndex":26,"cardId":194,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 
 Player 2 01:44:30 $ACTION_MASSAGE_REMOVE:  
 {"id":131} 
 Player 2 01:44:31 $ADD_AN_ITEM:  
 {"playerId":2,"cardId":194,"isReward":false} 
 Player 2 01:44:31 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":194}],"result":true,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":13,"originStackId":-1},"isAfterActivation":true,"index":13} 
 Player 2 01:44:31 $NEXT_STACK_ID:  
 Player 2 01:44:31 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to buy Synthoil for 10 \n2:Refill Store slot"} 
 Player 2 01:44:31 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to buy Synthoil for 10 \n2:Refill Store slot \n3:Activate Synthoil effect GainStats<GainStats>"} 
 Player 2 01:44:31 $ADD_TO_STACK:  
 {"stackEffect":{"effectCollectedData":null,"entityId":45,"creatorCardId":276,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":194,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":2,"cardId":194,"effctType":0},"isAfterActivation":true,"index":13,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 01:44:31 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":141,"_text":"Add ActivatePassiveEffect 45 "}} 
 Player 2 01:44:31 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to buy Synthoil for 10 \n2:Refill Store slot \n3:Activate Synthoil effect GainStats<GainStats>"} 
 Player 2 01:44:31 $ACTION_MASSAGE_REMOVE:  
 {"id":141} 
 Player 2 01:44:31 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to buy Synthoil for 10 \n2:Refill Store slot \n3:Activate Synthoil effect GainStats<GainStats>"} 
 Player 2 01:44:31 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"effectCollectedData":null,"entityId":45,"creatorCardId":276,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":194,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":2,"cardId":194,"effctType":0},"isAfterActivation":true,"index":13,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 01:44:31 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":142,"_text":"Response Adding ActivatePassiveEffect 45"},"childOfId":141} 
 Player 2 01:44:31 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":143,"_text":"Wait For Response From Player 2 "},"childOfId":141} 
 Player 2 01:44:31 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 01:44:31 $ACTION_MASSAGE_REMOVE:  
 {"id":143} 
 Player 2 01:44:31 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":144,"_text":"Wait For Response From Player 1 "},"childOfId":141} 
 Player 2 01:44:31 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 01:44:31 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 01:44:31 $ACTION_MASSAGE_REMOVE:  
 {"id":144} 
 Player 2 01:44:31 $ACTION_MASSAGE_REMOVE:  
 {"id":142} 
 Player 2 01:44:31 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":145,"_text":"Resolve ActivatePassiveEffect 45 "}} 
 Player 2 01:44:31 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":194,"particleType":6} 
 Player 2 01:44:33 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":194,"particleType":6} 
 Player 2 01:44:33 $PLAYER_GAIN_ATTACK_ROLL_BONUS:  
 {"playerId":2,"bonusToGain":1,"isTemp":false} 
 Player 2 01:44:33 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":194}],"result":true,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":13,"originStackId":-1},"isAfterActivation":true,"index":13} 
 Player 2 01:44:33 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to buy Synthoil for 10 \n2:Refill Store slot \n3:Activate Synthoil effect GainStats<GainStats>"} 
 Player 2 01:44:33 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"effectCollectedData":null,"entityId":45,"creatorCardId":276,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":194,"isAfterActivation":true,"index":13,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 01:44:33 $ACTION_MASSAGE_REMOVE:  
 {"id":145} 
 Player 2 01:44:33 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":146,"_text":"Remove After Resolve ActivatePassiveEffect 45  "}} 
 Player 2 01:44:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to buy Synthoil for 10 \n2:Refill Store slot"} 
 Player 2 01:44:34 $REMOVE_FROM_STACK:  
 {"stackEffect":{"effectCollectedData":null,"entityId":45,"creatorCardId":276,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":194,"isAfterActivation":true,"index":13,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 01:44:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":147,"_text":"Response Remove After Resolve ActivatePassiveEffect 45"},"childOfId":146} 
 Player 2 01:44:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":148,"_text":"Wait For Response From Player 1 "},"childOfId":146} 
 Player 2 01:44:34 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 01:44:34 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 01:44:34 $ACTION_MASSAGE_REMOVE:  
 {"id":148} 
 Player 2 01:44:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":149,"_text":"Wait For Response From Player 2 "},"childOfId":146} 
 Player 2 01:44:34 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 01:44:34 $ACTION_MASSAGE_REMOVE:  
 {"id":149} 
 Player 2 01:44:34 $ACTION_MASSAGE_REMOVE:  
 {"id":147} 
 Player 2 01:44:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":150,"_text":"Resolve RefillEmptySlot 44 "}} 
 Player 2 01:44:34 $DRAW_CARD:  
 {"deckType":5} 
 Player 2 01:44:34 $FLIP_CARD:  
 {"cardId":159} 
 Player 2 01:44:34 $ADD_STORE_CARD:  
 {"cardId":159} 
 Player 2 01:44:34 $ACTION_MASSAGE_REMOVE:  
 {"id":150} 
 Player 2 01:44:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":151,"_text":"Remove After Resolve RefillEmptySlot 44  "}} 
 Player 2 01:44:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to buy Synthoil for 10"} 
 Player 2 01:44:34 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":44,"creatorCardId":276,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 
 Player 2 01:44:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":152,"_text":"Response Remove After Resolve RefillEmptySlot 44"},"childOfId":151} 
 Player 2 01:44:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":153,"_text":"Wait For Response From Player 2 "},"childOfId":151} 
 Player 2 01:44:34 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 01:44:34 $ACTION_MASSAGE_REMOVE:  
 {"id":153} 
 Player 2 01:44:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":154,"_text":"Wait For Response From Player 1 "},"childOfId":151} 
 Player 2 01:44:34 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 01:44:34 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 01:44:35 $ACTION_MASSAGE_REMOVE:  
 {"id":154} 
 Player 2 01:44:35 $ACTION_MASSAGE_REMOVE:  
 {"id":152} 
 Player 2 01:44:35 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":155,"_text":"Resolve PurchaseItem 43 "}} 
 Player 2 01:44:35 $ACTION_MASSAGE_REMOVE:  
 {"id":140} 
 Player 2 01:44:35 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":156,"_text":"Remove After Resolve PurchaseItem 43  "}} 
 Player 2 01:44:35 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 01:44:35 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":43,"creatorCardId":276,"itemToPurchaseCardId":194,"playerWhoBuysCardId":276,"cost":10,"stackEffectType":9}} 
 Player 2 01:44:35 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":157,"_text":"Response Remove After Resolve PurchaseItem 43"},"childOfId":156} 
 Player 2 01:44:35 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":158,"_text":"Wait For Response From Player 1 "},"childOfId":156} 
 Player 2 01:44:35 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 01:44:35 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 01:44:36 $ACTION_MASSAGE_REMOVE:  
 {"id":158} 
 Player 2 01:44:36 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":159,"_text":"Wait For Response From Player 2 "},"childOfId":156} 
 Player 2 01:44:36 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 01:44:36 $ACTION_MASSAGE_REMOVE:  
 {"id":159} 
 Player 2 01:44:36 $ACTION_MASSAGE_REMOVE:  
 {"id":157} 
 Player 2 01:44:36 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":160,"_text":"Stack Was Emptied "}} 
 Player 2 01:44:36 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 01:44:36 $ACTION_MASSAGE_REMOVE:  
 {"id":146} 
 Player 2 01:44:36 $ACTION_MASSAGE_REMOVE:  
 {"id":151} 
 Player 2 01:44:36 $ACTION_MASSAGE_REMOVE:  
 {"id":146} 
 Player 2 01:44:37 $ACTION_MASSAGE_REMOVE:  
 {"id":151} 
 Player 2 01:44:37 $ACTION_MASSAGE_REMOVE:  
 {"id":160} 
 Player 2 01:44:38 $ACTION_MASSAGE_REMOVE:  
 {"id":156} 
 Player 2 01:44:40 $NEXT_STACK_ID:  
 Player 2 01:44:40 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 01:44:40 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on Dark One"} 
 Player 2 01:44:40 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":46,"creatorCardId":276,"attackingPlayerCardId":276,"idOfCardBeingAttacked":221,"stackEffectType":4}} 
 Player 2 01:44:40 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":161,"_text":"Add DeclareAttack 46 "}} 
 Player 2 01:44:40 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 01:44:40 $ACTION_MASSAGE_REMOVE:  
 {"id":161} 
 Player 2 01:44:40 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on Dark One"} 
 Player 2 01:44:40 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":46,"creatorCardId":276,"attackingPlayerCardId":276,"idOfCardBeingAttacked":221,"stackEffectType":4}} 
 Player 2 01:44:40 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":162,"_text":"Response Adding DeclareAttack 46"},"childOfId":161} 
 Player 2 01:44:40 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":163,"_text":"Wait For Response From Player 2 "},"childOfId":161} 
 Player 2 01:44:40 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 01:44:40 $ACTION_MASSAGE_REMOVE:  
 {"id":163} 
 Player 2 01:44:40 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":164,"_text":"Wait For Response From Player 1 "},"childOfId":161} 
 Player 2 01:44:40 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 01:44:40 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 01:44:41 $ACTION_MASSAGE_REMOVE:  
 {"id":164} 
 Player 2 01:44:41 $ACTION_MASSAGE_REMOVE:  
 {"id":162} 
 Player 2 01:44:41 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":165,"_text":"Resolve DeclareAttack 46 "}} 
 Player 2 01:44:41 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":221,"particleType":5} 
 Player 2 01:44:41 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":14,"originStackId":46},"isAfterActivation":true,"index":14} 
 Player 2 01:44:41 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on Dark One"} 
 Player 2 01:44:41 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":46,"creatorCardId":276,"attackingPlayerCardId":276,"idOfCardBeingAttacked":221,"stackEffectType":4}} 
 Player 2 01:44:41 $ACTION_MASSAGE_REMOVE:  
 {"id":165} 
 Player 2 01:44:41 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":166,"_text":"Remove After Resolve DeclareAttack 46  "}} 
 Player 2 01:44:41 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 01:44:41 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":46,"creatorCardId":276,"attackingPlayerCardId":276,"idOfCardBeingAttacked":221,"stackEffectType":4}} 
 Player 2 01:44:41 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":167,"_text":"Response Remove After Resolve DeclareAttack 46"},"childOfId":166} 
 Player 2 01:44:41 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":168,"_text":"Wait For Response From Player 1 "},"childOfId":166} 
 Player 2 01:44:41 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 01:44:41 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 01:44:41 $ACTION_MASSAGE_REMOVE:  
 {"id":168} 
 Player 2 01:44:41 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":169,"_text":"Wait For Response From Player 2 "},"childOfId":166} 
 Player 2 01:44:41 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 01:44:41 $ACTION_MASSAGE_REMOVE:  
 {"id":169} 
 Player 2 01:44:41 $ACTION_MASSAGE_REMOVE:  
 {"id":167} 
 Player 2 01:44:41 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":170,"_text":"Stack Was Emptied "}} 
 Player 2 01:44:41 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 01:44:41 $ACTION_MASSAGE_REMOVE:  
 {"id":166} 
 Player 2 01:44:43 $ACTION_MASSAGE_REMOVE:  
 {"id":170} 
 Player 2 01:44:43 $NEXT_STACK_ID:  
 Player 2 01:44:43 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 01:44:43 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Dark One<Monster>"} 
 Player 2 01:44:43 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":47,"creatorCardId":276,"rollingPlayerCardId":276,"stackEffectType":2,"attackedMonsterCardId":221}} 
 Player 2 01:44:43 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":171,"_text":"Add AttackRoll 47 "}} 
 Player 2 01:44:43 $ROLL_DICE:  
 {"playerId":2} 
 Player 2 01:44:44 $ACTION_MASSAGE_REMOVE:  
 {"id":166} 
 Player 2 01:44:46 $ROLL_DICE_ENDED:  
 {"playerId":2,"numberRolled":3} 
 Player 2 01:44:46 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 3 vs Dark One<Monster>"} 
 Player 2 01:44:46 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 01:44:46 $ACTION_MASSAGE_REMOVE:  
 {"id":171} 
 Player 2 01:44:46 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 3 vs Dark One<Monster>"} 
 Player 2 01:44:46 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":47,"creatorCardId":276,"numberRolled":3,"rollingPlayerCardId":276,"stackEffectType":2,"attackedMonsterCardId":221}} 
 Player 2 01:44:46 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":172,"_text":"Response Adding AttackRoll 47"},"childOfId":171} 
 Player 2 01:44:46 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":173,"_text":"Wait For Response From Player 2 "},"childOfId":171} 
 Player 2 01:44:46 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 01:44:48 $NEXT_STACK_ID:  
 Player 2 01:44:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 3 vs Dark One<Monster>"} 
 Player 2 01:44:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 3 vs Dark One<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 2 01:44:48 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":48,"creatorCardId":276,"hasLockingStackEffect":false,"itemToPlayCardId":277,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 01:44:48 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":174,"_text":"Add ActivateItem 48 "}} 
 Player 2 01:44:50 $USE_ITEM:  
 {"cardId":277} 
 Player 2 01:44:50 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 01:44:50 $ACTION_MASSAGE_REMOVE:  
 {"id":174} 
 Player 2 01:44:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 3 vs Dark One<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 2 01:44:50 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":48,"creatorCardId":276,"hasLockingStackEffect":false,"itemToPlayCardId":277,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 01:44:50 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":175,"_text":"Response Adding ActivateItem 48"},"childOfId":174} 
 Player 2 01:44:50 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":176,"_text":"Wait For Response From Player 2 "},"childOfId":174} 
 Player 2 01:44:50 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 01:44:52 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:44:52 $ACTION_MASSAGE_REMOVE:  
 {"id":176} 
 Player 2 01:44:52 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":177,"_text":"Wait For Response From Player 1 "},"childOfId":174} 
 Player 2 01:44:52 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 01:44:52 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 01:44:52 $ACTION_MASSAGE_REMOVE:  
 {"id":177} 
 Player 2 01:44:52 $ACTION_MASSAGE_REMOVE:  
 {"id":175} 
 Player 2 01:44:52 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":178,"_text":"Resolve ActivateItem 48 "}} 
 Player 2 01:44:52 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":277,"particleType":6} 
 Player 2 01:44:54 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":277,"particleType":6} 
 Player 2 01:44:54 $REGISTER_ONE_TURN_PASSIVE_EFFECT:  
 {"cardId":277,"effectIndex":{"type":3,"index":0},"conditionData":[{"effectTargets":[276],"chainEffectsData":[],"methodArgs":[],"isPassive":false,"effectCard":277,"effectCardOwner":276,"effectCardPlayer":276}]} 
 Player 2 01:44:54 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 3 vs Dark One<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 2 01:44:54 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":48,"creatorCardId":276,"hasLockingStackEffect":false,"itemToPlayCardId":277,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 01:44:54 $ACTION_MASSAGE_REMOVE:  
 {"id":178} 
 Player 2 01:44:54 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":179,"_text":"Remove After Resolve ActivateItem 48  "}} 
 Player 2 01:44:54 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 3 vs Dark One<Monster>"} 
 Player 2 01:44:54 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":48,"creatorCardId":276,"hasLockingStackEffect":false,"itemToPlayCardId":277,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 01:44:54 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":180,"_text":"Response Remove After Resolve ActivateItem 48"},"childOfId":179} 
 Player 2 01:44:54 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":181,"_text":"Wait For Response From Player 1 "},"childOfId":179} 
 Player 2 01:44:54 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 01:44:54 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 01:44:54 $ACTION_MASSAGE_REMOVE:  
 {"id":181} 
 Player 2 01:44:54 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":182,"_text":"Wait For Response From Player 2 "},"childOfId":179} 
 Player 2 01:44:54 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 01:44:55 $RESPOND_TO:  
 {"playerId":-1,"stackEffectResponse":false} 
 Player 2 01:44:55 $RESPOND_TO:  
 {"playerId":-1,"stackEffectResponse":false} 
 Player 2 01:44:55 $ACTION_MASSAGE_REMOVE:  
 {"id":182} 
 Player 2 01:44:55 $ACTION_MASSAGE_REMOVE:  
 {"id":180} 
 Player 2 01:44:55 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":183,"_text":"Resolve AttackRoll 47 "}} 
 Player 2 01:44:55 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":184,"_text":"Added 1 to original roll"}} 
 Player 2 01:44:55 $NEXT_STACK_ID:  
 Player 2 01:44:55 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 3 vs Dark One<Monster>"} 
 Player 2 01:44:55 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 01:44:55 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Dark One \n2:Player 2 rolled 3 vs Dark One<Monster>"} 
 Player 2 01:44:55 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":49,"creatorCardId":276,"entityToDoDamageCardId":276,"entityToTakeDamageCardId":221,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 01:44:55 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Dark One \n2:Player 2 rolled 3 vs Dark One<Monster>"} 
 Player 2 01:44:55 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Dark One \n2:Player 2 rolled 3 vs Dark One<Monster>"} 
 Player 2 01:44:55 $REPLACE_STACK:  
 {"currentStack":[{"entityId":49,"creatorCardId":276,"entityToDoDamageCardId":276,"entityToTakeDamageCardId":221,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":47,"creatorCardId":276,"numberRolled":3,"rollingPlayerCardId":276,"stackEffectType":2,"attackedMonsterCardId":221}]} 
 Player 2 01:44:55 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":15,"originStackId":47},"isAfterActivation":true,"index":15} 
 Player 2 01:44:55 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Dark One \n2:Player 2 rolled 3 vs Dark One<Monster>"} 
 Player 2 01:44:55 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":47,"creatorCardId":276,"numberRolled":3,"rollingPlayerCardId":276,"stackEffectType":2,"attackedMonsterCardId":221}} 
 Player 2 01:44:55 $ACTION_MASSAGE_REMOVE:  
 {"id":183} 
 Player 2 01:44:55 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":185,"_text":"Remove After Resolve AttackRoll 47  "}} 
 Player 2 01:44:55 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Dark One"} 
 Player 2 01:44:55 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":47,"creatorCardId":276,"numberRolled":3,"rollingPlayerCardId":276,"stackEffectType":2,"attackedMonsterCardId":221}} 
 Player 2 01:44:55 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":186,"_text":"Response Remove After Resolve AttackRoll 47"},"childOfId":185} 
 Player 2 01:44:55 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":187,"_text":"Wait For Response From Player 2 "},"childOfId":185} 
 Player 2 01:44:55 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 01:44:57 $ACTION_MASSAGE_REMOVE:  
 {"id":179} 
 Player 2 01:44:58 $ACTION_MASSAGE_REMOVE:  
 {"id":184} 
 Player 2 01:44:58 $ACTION_MASSAGE_REMOVE:  
 {"id":185} 
 Player 2 01:45:00 $ACTION_MASSAGE_REMOVE:  
 {"id":187} 
 Player 2 01:45:00 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":188,"_text":"Wait For Response From Player 1 "},"childOfId":185} 
 Player 2 01:45:00 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 01:45:00 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 01:45:01 $ACTION_MASSAGE_REMOVE:  
 {"id":188} 
 Player 2 01:45:01 $ACTION_MASSAGE_REMOVE:  
 {"id":186} 
 Player 2 01:45:01 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":189,"_text":"Resolve CombatDamage 49 "}} 
 Player 2 01:45:01 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":276}],"result":null,"preventMethod":false,"methodScopeId":221,"scopeIsPlayer":false,"index":3,"originStackId":-1},"isAfterActivation":false,"index":3} 
 Player 2 01:45:01 $NEXT_STACK_ID:  
 Player 2 01:45:01 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Dark One"} 
 Player 2 01:45:01 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Dark One \n2:Activate Dark One effect GainStats<GainStats>"} 
 Player 2 01:45:01 $ADD_TO_STACK:  
 {"stackEffect":{"effectCollectedData":null,"entityId":50,"creatorCardId":221,"hasLockingStackEffect":false,"cardActivatorId":221,"cardWithEffectId":221,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":221,"cardId":221,"effctType":0},"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 01:45:01 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":190,"_text":"Add ActivatePassiveEffect 50 "}} 
 Player 2 01:45:01 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Dark One \n2:Activate Dark One effect GainStats<GainStats>"} 
 Player 2 01:45:01 $ACTION_MASSAGE_REMOVE:  
 {"id":190} 
 Player 2 01:45:01 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Dark One \n2:Activate Dark One effect GainStats<GainStats>"} 
 Player 2 01:45:01 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"effectCollectedData":{"effectTargets":[221],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":221,"effectCardPlayer":221},"entityId":50,"creatorCardId":221,"hasLockingStackEffect":false,"cardActivatorId":221,"cardWithEffectId":221,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":221,"cardId":221,"effctType":0},"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 01:45:01 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":191,"_text":"Response Adding ActivatePassiveEffect 50"},"childOfId":190} 
 Player 2 01:45:01 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":192,"_text":"Wait For Response From Player 1 "},"childOfId":190} 
 Player 2 01:45:01 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 01:45:01 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 01:45:01 $ACTION_MASSAGE_REMOVE:  
 {"id":192} 
 Player 2 01:45:01 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":193,"_text":"Wait For Response From Player 2 "},"childOfId":190} 
 Player 2 01:45:01 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 01:45:01 $ACTION_MASSAGE_REMOVE:  
 {"id":193} 
 Player 2 01:45:01 $ACTION_MASSAGE_REMOVE:  
 {"id":191} 
 Player 2 01:45:01 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":194,"_text":"Resolve ActivatePassiveEffect 50 "}} 
 Player 2 01:45:01 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":221,"particleType":6} 
 Player 2 01:45:03 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":221,"particleType":6} 
 Player 2 01:45:03 $MONSTER_GAIN_DMG:  
 {"cardId":221,"DMGToGain":1} 
 Player 2 01:45:03 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":276}],"result":null,"preventMethod":false,"methodScopeId":221,"scopeIsPlayer":false,"index":3,"originStackId":-1},"isAfterActivation":false,"index":3} 
 Player 2 01:45:03 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Dark One \n2:Activate Dark One effect GainStats<GainStats>"} 
 Player 2 01:45:03 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"effectCollectedData":{"effectTargets":[221],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":221,"effectCardPlayer":221},"entityId":50,"creatorCardId":221,"hasLockingStackEffect":false,"cardActivatorId":221,"cardWithEffectId":221,"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 01:45:03 $ACTION_MASSAGE_REMOVE:  
 {"id":194} 
 Player 2 01:45:03 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":195,"_text":"Remove After Resolve ActivatePassiveEffect 50  "}} 
 Player 2 01:45:04 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Dark One"} 
 Player 2 01:45:04 $REMOVE_FROM_STACK:  
 {"stackEffect":{"effectCollectedData":{"effectTargets":[221],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":221,"effectCardPlayer":221},"entityId":50,"creatorCardId":221,"hasLockingStackEffect":false,"cardActivatorId":221,"cardWithEffectId":221,"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 01:45:04 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":196,"_text":"Response Remove After Resolve ActivatePassiveEffect 50"},"childOfId":195} 
 Player 2 01:45:04 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":197,"_text":"Wait For Response From Player 2 "},"childOfId":195} 
 Player 2 01:45:04 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 01:45:04 $ACTION_MASSAGE_REMOVE:  
 {"id":197} 
 Player 2 01:45:04 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":198,"_text":"Wait For Response From Player 1 "},"childOfId":195} 
 Player 2 01:45:04 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 01:45:04 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 01:45:04 $ACTION_MASSAGE_REMOVE:  
 {"id":198} 
 Player 2 01:45:04 $ACTION_MASSAGE_REMOVE:  
 {"id":196} 
 Player 2 01:45:04 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":199,"_text":"Resolve CombatDamage 49 "}} 
 Player 2 01:45:04 $MONSTER_GET_DAMAGED:  
 {"cardId":221,"hpLeft":2,"damageDealerId":276} 
 Player 2 01:45:04 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":276}],"result":null,"preventMethod":false,"methodScopeId":221,"scopeIsPlayer":false,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Player 2 01:45:04 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":4},{"type":0,"number":276},{"type":0,"number":221}],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":16,"originStackId":49},"isAfterActivation":true,"index":16} 
 Player 2 01:45:04 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Dark One"} 
 Player 2 01:45:04 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":49,"creatorCardId":276,"entityToDoDamageCardId":276,"entityToTakeDamageCardId":221,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 01:45:04 $ACTION_MASSAGE_REMOVE:  
 {"id":189} 
 Player 2 01:45:04 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":200,"_text":"Remove After Resolve CombatDamage 49  "}} 
 Player 2 01:45:04 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 01:45:04 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":49,"creatorCardId":276,"entityToDoDamageCardId":276,"entityToTakeDamageCardId":221,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 01:45:04 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":201,"_text":"Response Remove After Resolve CombatDamage 49"},"childOfId":200} 
 Player 2 01:45:04 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":202,"_text":"Wait For Response From Player 1 "},"childOfId":200} 
 Player 2 01:45:04 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 01:45:04 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 01:45:05 $ACTION_MASSAGE_REMOVE:  
 {"id":202} 
 Player 2 01:45:05 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":203,"_text":"Wait For Response From Player 2 "},"childOfId":200} 
 Player 2 01:45:05 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 01:45:05 $ACTION_MASSAGE_REMOVE:  
 {"id":203} 
 Player 2 01:45:05 $ACTION_MASSAGE_REMOVE:  
 {"id":201} 
 Player 2 01:45:05 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":204,"_text":"Stack Was Emptied "}} 
 Player 2 01:45:05 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 01:45:05 $ACTION_MASSAGE_REMOVE:  
 {"id":172} 
 Player 2 01:45:05 $ACTION_MASSAGE_REMOVE:  
 {"id":173} 
 Player 2 01:45:05 $ACTION_MASSAGE_REMOVE:  
 {"id":189} 
 Player 2 01:45:05 $ACTION_MASSAGE_REMOVE:  
 {"id":173} 
 Player 2 01:45:05 $ACTION_MASSAGE_REMOVE:  
 {"id":172} 
 Player 2 01:45:06 $ACTION_MASSAGE_REMOVE:  
 {"id":204} 
 Player 2 01:45:06 $ACTION_MASSAGE_REMOVE:  
 {"id":195} 
 Player 2 01:45:07 $ACTION_MASSAGE_REMOVE:  
 {"id":200} 
 Player 2 02:35:39 $NEXT_STACK_ID:  
 Player 2 02:35:39 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 02:35:39 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Dark One<Monster>"} 
 Player 2 02:35:39 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":51,"creatorCardId":276,"rollingPlayerCardId":276,"stackEffectType":2,"attackedMonsterCardId":221}} 
 Player 2 02:35:39 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":205,"_text":"Add AttackRoll 51 "}} 
 Player 2 02:35:39 $ROLL_DICE:  
 {"playerId":2} 
 Player 2 02:35:41 $ROLL_DICE_ENDED:  
 {"playerId":2,"numberRolled":3} 
 Player 2 02:35:41 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 3 vs Dark One<Monster>"} 
 Player 2 02:35:41 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 02:35:41 $ACTION_MASSAGE_REMOVE:  
 {"id":205} 
 Player 2 02:35:41 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 3 vs Dark One<Monster>"} 
 Player 2 02:35:41 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":51,"creatorCardId":276,"numberRolled":3,"rollingPlayerCardId":276,"stackEffectType":2,"attackedMonsterCardId":221}} 
 Player 2 02:35:41 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":206,"_text":"Response Adding AttackRoll 51"},"childOfId":205} 
 Player 2 02:35:41 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":207,"_text":"Wait For Response From Player 2 "},"childOfId":205} 
 Player 2 02:35:41 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 02:35:43 $ACTION_MASSAGE_REMOVE:  
 {"id":207} 
 Player 2 02:35:43 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":208,"_text":"Wait For Response From Player 1 "},"childOfId":205} 
 Player 2 02:35:43 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 02:35:43 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 02:36:31 $UPDATE_STACK_VIS:  
 {"stackId":51,"stackVis":{"stackEffectType":2,"flavorText":"player rolled 3 vs Dark One<Monster>","hasBeenUpdated":false}} 
 Player 2 02:38:14 $RESPOND_TO:  
 {"playerId":-1,"stackEffectResponse":false} 
 Player 2 02:38:43 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 3 vs Dark One<Monster>"} 
 Player 2 02:38:43 $ACTION_MASSAGE_REMOVE:  
 {"id":206} 
 Player 2 02:46:51 $MATCH: 