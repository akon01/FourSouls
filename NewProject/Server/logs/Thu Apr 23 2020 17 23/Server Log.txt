Start Log 

 Player 1 17:23:11 $MATCH:  

 Player 1 17:23:12 $START_GAME:  

 Player 2 17:23:12 $MOVE_TO_TABLE:  

 Player 1 17:23:12 $MOVE_TO_TABLE:  

 Player 1 17:23:20 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 17:23:21 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 2 17:23:21 $CHOOSE_FOR_EDEN:  
{"playerId":1,"originPlayerId":2} 

 Player 1 17:23:21 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[177,150,200,186,175,193,209,220,212,201,206,180,159,190,170,148,214,176,167,199,198,169,179,195,178,207,204,172,160,141,156,181,143,173,165,147,166,205,219,210,211,213,157,174,221,197,158,144,218,154,163,217,208,188,168,142,155,152,164,216,162,191,185,189,161,194,171,215,183,146,149,203,196,202,192,184,145,153,182,151,187]} 

 Player 1 17:23:26 $EDEN_CHOSEN:  
{"cardId":177,"playerId":2} 

 Player 2 17:23:26 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[150,200,186,175,193,209,220,212,201,206,180,159,190,170,148,214,176,167,199,198,169,179,195,178,207,204,172,160,141,156,181,143,173,165,147,166,205,219,210,211,213,157,174,221,197,158,144,218,154,163,217,208,188,168,142,155,152,164,216,162,191,185,189,161,194,171,215,183,146,149,203,196,202,192,184,145,153,182,151,187]} 

 Player 2 17:23:26 $FLIP_CARD:  
{"cardId":177} 

 Player 2 17:23:26 $SET_CHAR:  
{"originPlayerId":2,"playerId":1,"charCardId":317,"itemCardId":177} 

 Player 1 17:23:26 $REGISTER_PASSIVE_ITEM:  
{"cardId":177} 

 Player 1 17:23:26 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":177}],"result":true,"preventMethod":false,"methodScopeId":317,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 17:23:26 $NEXT_STACK_ID:  

 Player 1 17:23:26 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:23:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Ipecac Effect GainStats<GainStats>"} 

 Player 1 17:23:26 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":1,"creatorCardId":317,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":177,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":1,"cardId":177,"effctType":0},"isAfterActivation":true,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 17:23:26 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":1,"creatorCardId":317,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":177,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":1,"cardId":177,"effctType":0},"isAfterActivation":true,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 17:23:26 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 17:23:26 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 2 17:23:26 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:23:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Ipecac "} 

 Player 1 17:23:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add Activate Passive Effect 1 "}} 

 Player 1 17:23:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Ipecac effect GainStats<GainStats>"} 

 Player 1 17:23:29 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[317],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":317,"effectCardPlayer":317},"entityId":1,"creatorCardId":317,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":177,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":1,"cardId":177,"effctType":0},"isAfterActivation":true,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 17:23:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding Activate Passive Effect 1"},"childOfId":0} 

 Player 1 17:23:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Resolve Activate Passive Effect 1 "}} 

 Player 1 17:23:29 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"effectCollectedData":{"effectTargets":[317],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":317,"effectCardPlayer":317},"entityId":1,"creatorCardId":317,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":177,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":1,"cardId":177,"effctType":0},"isAfterActivation":true,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}]} 

 Player 1 17:23:29 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":177,"particleType":6} 

 Player 2 17:23:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Ipecac "} 

 Player 1 17:23:31 $DISABLE_PARTICLE_EFFECT:  
{"cardId":177,"particleType":6} 

 Player 1 17:23:31 $PLAYER_GAIN_DMG:  
{"playerId":1,"DMGToGain":1,"isTemp":false} 

 Player 1 17:23:31 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":177}],"result":true,"preventMethod":false,"methodScopeId":317,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 17:23:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activated Ipecac Effect"} 

 Player 1 17:23:31 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[317],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":317,"effectCardPlayer":317},"entityId":1,"creatorCardId":317,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":177,"isAfterActivation":true,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 17:23:31 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 1 17:23:31 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 17:23:31 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 2 17:23:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Ipecac "} 

 Player 1 17:23:34 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":1} 

 Player 1 17:23:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Remove After Resolve Activate Passive Effect 1  "}} 

 Player 1 17:23:34 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:23:34 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[317],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":317,"effectCardPlayer":317},"entityId":1,"creatorCardId":317,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":177,"isAfterActivation":true,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 17:23:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Response Remove After Resolve Activate Passive Effect 1"},"childOfId":3} 

 Player 1 17:23:34 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 17:23:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Stack Was Emptied "}} 

 Player 1 17:23:34 $TURN_PLAYER_DO_STACK_EFFECT:  
{"playerId":2} 

 Player 1 17:23:34 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 17:23:34 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":317,"itemCardId":177} 

 Player 1 17:23:34 $SET_CHAR_END:  
{"playerId":2} 

 Player 2 17:23:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Ipecac "} 

 Player 2 17:23:34 $CLEAR_SE_VIS:  

 Player 2 17:23:34 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":313,"itemCardId":314} 

 Player 2 17:23:34 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":318}],"result":null,"preventMethod":false,"methodScopeId":317,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 17:23:34 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[45,119,106,71,81,129,62,64,138,19,11,58,37,47,4,65,76,137,70,128,23,103,139,16,33,97,107,59,18,46,41,6,100,13,80,28,31,124,99,52,17,136,125,126,8,75,132,7,135,74,83,61,43,112,14,66,29,51,115,60,122,133,87,40,94,105,21,39,118,42,127,44,57,50,78,53,67,117,120,116,114,98,36,25,108,95,131,84,26,90,91,27,48,55,72,104,63,20,30,109,5,54,102,12,82,9,93,89,38,32,49,34,96,110,10,69,113,77,79,73,15,22,24,35,134,68,130,56,86,88,85,111,123,101,121,92]} 

 Player 2 17:23:34 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[243,247,240,263,296,226,279,268,235,278,274,294,269,261,232,248,303,271,302,260,242,237,276,246,291,224,285,255,298,238,304,299,306,251,257,270,277,280,283,289,253,223,307,265,230,227,273,300,301,292,310,284,282,250,252,288,229,262,275,258,295,249,245,290,228,272,267,239,234,256,259,286,236,293,297,254,305,287,233,244,266,241,225,281,264,308,231,309]} 

 Player 2 17:23:34 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[156,188,166,176,144,183,185,186,208,174,160,187,155,211,168,157,175,151,141,178,180,169,147,164,171,205,190,210,213,215,172,150,201,221,162,143,146,212,199,158,200,173,218,161,206,207,204,181,159,184,148,214,198,195,163,216,194,220,167,165,191,192,145,142,203,196,209,189,170,149,153,193,219,197,202,182,217,179,152,154]} 

 Player 2 17:23:34 $DRAW_CARD:  
{"deckType":5} 

 Player 2 17:23:34 $FLIP_CARD:  
{"cardId":154} 

 Player 2 17:23:34 $ADD_STORE_CARD:  
{"cardId":154} 

 Player 2 17:23:34 $DRAW_CARD:  
{"deckType":5} 

 Player 2 17:23:35 $FLIP_CARD:  
{"cardId":152} 

 Player 2 17:23:35 $ADD_STORE_CARD:  
{"cardId":152} 

 Player 2 17:23:35 $DRAW_CARD:  
{"deckType":2} 

 Player 2 17:23:35 $FLIP_CARD:  
{"cardId":309} 

 Player 2 17:23:35 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":309} 

 Player 2 17:23:35 $NEW_MONSTER_ON_PLACE:  
{"cardId":309,"monsterPlaceId":1} 

 Player 2 17:23:35 $DRAW_CARD:  
{"deckType":2} 

 Player 2 17:23:35 $FLIP_CARD:  
{"cardId":231} 

 Player 2 17:23:35 $REGISTER_PASSIVE_ITEM:  
{"cardId":231} 

 Player 2 17:23:35 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":231} 

 Player 2 17:23:35 $NEW_MONSTER_ON_PLACE:  
{"cardId":231,"monsterPlaceId":2} 

 Player 2 17:23:35 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 17:23:35 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":317,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 17:23:35 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:23:35 $MOVE_CARD:  
{"moveIndex":1,"cardId":92,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:23:35 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":92,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:23:35 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":92} 

 Player 2 17:23:35 $FLIP_CARD:  
{"cardId":92} 

 Player 2 17:23:35 $FLIP_CARD:  
{"cardId":92} 

 Player 2 17:23:35 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":92} 

 Player 2 17:23:35 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:23:35 $MOVE_CARD:  
{"moveIndex":2,"cardId":121,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:23:36 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":121,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:23:36 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":121} 

 Player 2 17:23:36 $FLIP_CARD:  
{"cardId":121} 

 Player 2 17:23:36 $FLIP_CARD:  
{"cardId":121} 

 Player 2 17:23:36 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":121} 

 Player 2 17:23:36 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:23:36 $MOVE_CARD:  
{"moveIndex":3,"cardId":101,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:23:36 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":101,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:23:36 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":101} 

 Player 2 17:23:36 $FLIP_CARD:  
{"cardId":101} 

 Player 2 17:23:36 $FLIP_CARD:  
{"cardId":101} 

 Player 2 17:23:37 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":101} 

 Player 2 17:23:37 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 17:23:37 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 17:23:37 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:23:37 $MOVE_CARD:  
{"moveIndex":4,"cardId":123,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:23:37 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":123,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:23:37 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":123} 

 Player 2 17:23:37 $FLIP_CARD:  
{"cardId":123} 

 Player 2 17:23:37 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":123} 

 Player 2 17:23:37 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:23:37 $MOVE_CARD:  
{"moveIndex":5,"cardId":111,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:23:37 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":111,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:23:37 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":111} 

 Player 2 17:23:38 $FLIP_CARD:  
{"cardId":111} 

 Player 2 17:23:38 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":111} 

 Player 2 17:23:38 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:23:38 $MOVE_CARD:  
{"moveIndex":6,"cardId":85,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:23:38 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":85,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:23:38 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":85} 

 Player 2 17:23:38 $FLIP_CARD:  
{"cardId":85} 

 Player 2 17:23:38 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":85} 

 Player 2 17:23:38 $GAME_HAS_STARTED:  

 Player 2 17:23:38 $SET_TURN:  
{"playerId":2} 

 Player 2 17:23:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:23:38 $NEXT_STACK_ID:  

 Player 2 17:23:38 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:23:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 

 Player 2 17:23:38 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":313,"turnPlayerCardId":313,"stackEffectType":13}} 

 Player 2 17:23:38 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":313,"turnPlayerCardId":313,"stackEffectType":13}} 

 Player 2 17:23:38 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 17:23:38 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 1 17:23:38 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:23:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 

 Player 2 17:23:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Add Start Turn Loot Draw 2 "}} 

 Player 2 17:23:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:23:41 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":313,"turnPlayerCardId":313,"stackEffectType":13}} 

 Player 2 17:23:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Response Adding Start Turn Loot Draw 2"},"childOfId":6} 

 Player 2 17:23:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":6} 

 Player 2 17:23:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:23:41 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 2 17:23:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Wait For Response From Player 1 "},"childOfId":6} 

 Player 2 17:23:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 17:23:41 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 17:23:41 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[317]} 

 Player 1 17:23:41 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 17:23:41 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 17:23:41 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 2 17:23:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Resolve Start Turn Loot Draw 2 "}} 

 Player 2 17:23:42 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":2,"creatorCardId":313,"turnPlayerCardId":313,"stackEffectType":13}]} 

 Player 2 17:23:42 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:23:42 $MOVE_CARD:  
{"moveIndex":7,"cardId":88,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:23:42 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":88,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:23:42 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":88} 

 Player 2 17:23:42 $FLIP_CARD:  
{"cardId":88} 

 Player 2 17:23:42 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":88} 

 Player 2 17:23:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Has Drawen Loot For Start Turn"} 

 Player 2 17:23:42 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":313,"turnPlayerCardId":313,"stackEffectType":13}} 

 Player 2 17:23:42 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 17:23:42 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 17:23:42 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 1 17:23:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 

 Player 2 17:23:45 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":2} 

 Player 2 17:23:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Remove After Resolve Start Turn Loot Draw 2  "}} 

 Player 2 17:23:45 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:23:45 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":313,"turnPlayerCardId":313,"stackEffectType":13}} 

 Player 2 17:23:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Response Remove After Resolve Start Turn Loot Draw 2"},"childOfId":11} 

 Player 2 17:23:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":11} 

 Player 2 17:23:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 17:23:45 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 17:23:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 

 Player 1 17:23:45 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[317]} 

 Player 1 17:23:45 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 17:23:45 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 2 17:23:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Wait For Response From Player 2 "},"childOfId":11} 

 Player 2 17:23:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:23:46 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 17:23:46 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 2 17:23:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Stack Was Emptied "}} 

 Player 2 17:23:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:23:46 $CLEAR_SE_VIS:  

 Player 2 17:23:46 $UPDATE_ACTIONS:  

 Player 2 17:27:05 $MOVE_CARD:  
{"moveIndex":8,"cardId":232,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 

 Player 1 17:27:05 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":232,"flipIfFlipped":true,"playerId":2} 

 Player 2 17:27:05 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[243,247,240,263,296,226,279,268,235,278,274,294,269,261,248,303,271,302,260,242,237,276,246,291,224,285,255,298,238,304,299,306,251,257,270,277,280,283,289,253,223,307,265,230,227,273,300,301,292,310,284,282,250,252,288,229,262,275,258,295,249,245,290,228,272,267,239,234,256,259,286,236,293,297,254,305,287,233,244,266,241,225,281,264,308]} 

 Player 2 17:27:05 $FLIP_CARD:  
{"cardId":232} 

 Player 2 17:27:05 $REGISTER_PASSIVE_ITEM:  
{"cardId":232} 

 Player 2 17:27:05 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":232} 

 Player 2 17:27:06 $NEW_MONSTER_ON_PLACE:  
{"cardId":232,"monsterPlaceId":1} 

 Player 2 17:27:08 $NEXT_STACK_ID:  

 Player 2 17:27:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 declared attack on Carrion Queen"} 

 Player 2 17:27:08 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":313,"attackingPlayerCardId":313,"idOfCardBeingAttacked":232,"stackEffectType":4}} 

 Player 2 17:27:08 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":313,"attackingPlayerCardId":313,"idOfCardBeingAttacked":232,"stackEffectType":4}} 

 Player 2 17:27:08 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 17:27:08 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 1 17:27:08 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:27:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 declared attack on Carrion Queen"} 

 Player 2 17:27:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Add Player Declare Attack On Monster 3 "}} 

 Player 2 17:27:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:27:11 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":313,"attackingPlayerCardId":313,"idOfCardBeingAttacked":232,"stackEffectType":4}} 

 Player 2 17:27:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Response Adding Player Declare Attack On Monster 3"},"childOfId":16} 

 Player 2 17:27:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":16} 

 Player 2 17:27:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:27:11 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 2 17:27:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Wait For Response From Player 1 "},"childOfId":16} 

 Player 2 17:27:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 17:27:12 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 17:27:12 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[317]} 

 Player 1 17:27:12 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 17:27:12 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 17:27:12 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 17:27:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Resolve Player Declare Attack On Monster 3 "}} 

 Player 2 17:27:12 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":3,"creatorCardId":313,"attackingPlayerCardId":313,"idOfCardBeingAttacked":232,"stackEffectType":4}]} 

 Player 2 17:27:12 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":232,"particleType":5} 

 Player 2 17:27:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Has Entered Battle with Carrion Queen"} 

 Player 2 17:27:12 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":4,"originStackId":3},"isAfterActivation":true,"index":4} 

 Player 2 17:27:12 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":313,"attackingPlayerCardId":313,"idOfCardBeingAttacked":232,"stackEffectType":4}} 

 Player 2 17:27:12 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 17:27:12 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 17:27:12 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 1 17:27:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 declared attack on Carrion Queen"} 

 Player 2 17:27:15 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":3} 

 Player 2 17:27:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Remove After Resolve Player Declare Attack On Monster 3  "}} 

 Player 2 17:27:15 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:27:15 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":313,"attackingPlayerCardId":313,"idOfCardBeingAttacked":232,"stackEffectType":4}} 

 Player 2 17:27:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Response Remove After Resolve Player Declare Attack On Monster 3"},"childOfId":21} 

 Player 2 17:27:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":21} 

 Player 2 17:27:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 17:27:15 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 17:27:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 declared attack on Carrion Queen"} 

 Player 1 17:27:15 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[317]} 

 Player 1 17:27:15 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 17:27:15 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 2 17:27:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Wait For Response From Player 2 "},"childOfId":21} 

 Player 2 17:27:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:27:15 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 17:27:15 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 2 17:27:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Stack Was Emptied "}} 

 Player 2 17:27:15 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:27:15 $CLEAR_SE_VIS:  

 Player 2 17:27:20 $NEXT_STACK_ID:  

 Player 2 17:27:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Carrion Queen<Monster>"} 

 Player 2 17:27:20 $ADD_TO_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":313,"rollingPlayerCardId":313,"stackEffectType":2,"attackedMonsterCardId":232}} 

 Player 2 17:27:20 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":313,"rollingPlayerCardId":313,"stackEffectType":2,"attackedMonsterCardId":232}} 

 Player 2 17:27:20 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 17:27:20 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 1 17:27:20 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:27:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Carrion Queen<Monster>"} 

 Player 2 17:27:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Add Player Attack Roll On Monster 4 "}} 

 Player 2 17:27:23 $ROLL_DICE:  
{"playerId":2} 

 Player 2 17:27:25 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":3} 

 Player 2 17:27:25 $UPDATE_STACK_VIS:  
{"stackId":4,"text":"player rolled 3 vs Carrion Queen<Monster>"} 

 Player 2 17:27:25 $SHOW_DICE_ROLL:  
{"stackId":4} 

 Player 2 17:27:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 3 vs Carrion Queen<Monster>"} 

 Player 2 17:27:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:27:28 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":313,"numberRolled":3,"rollingPlayerCardId":313,"stackEffectType":2,"attackedMonsterCardId":232}} 

 Player 2 17:27:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Response Adding Player Attack Roll On Monster 4"},"childOfId":26} 

 Player 2 17:27:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":26} 

 Player 2 17:27:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:27:28 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 2 17:27:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Wait For Response From Player 1 "},"childOfId":26} 

 Player 2 17:27:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 17:27:28 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 17:27:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Carrion Queen<Monster>"} 

 Player 1 17:27:29 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[317]} 

 Player 1 17:27:29 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 17:27:29 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 17:27:29 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 2 17:27:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Resolve Player Attack Roll On Monster 4 "}} 

 Player 2 17:27:29 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":4,"creatorCardId":313,"numberRolled":3,"rollingPlayerCardId":313,"stackEffectType":2,"attackedMonsterCardId":232}]} 

 Player 2 17:27:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Added 0 to original roll"}} 

 Player 2 17:27:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Rolled 4 Against Carrion Queen<Monster> 4"} 

 Player 2 17:27:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Roll Hit"} 

 Player 2 17:27:29 $NEXT_STACK_ID:  

 Player 2 17:27:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:27:29 $CLEAR_SE_VIS:  

 Player 2 17:27:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 2 Roll Hit"} 

 Player 2 17:27:29 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":313,"entityToDoDamageCardId":313,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 2 17:27:29 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":313,"numberRolled":3,"rollingPlayerCardId":313,"stackEffectType":2,"attackedMonsterCardId":232}} 

 Player 2 17:27:29 $REPLACE_STACK:  
{"currentStack":[{"entityId":5,"creatorCardId":313,"entityToDoDamageCardId":313,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":4,"creatorCardId":313,"numberRolled":3,"rollingPlayerCardId":313,"stackEffectType":2,"attackedMonsterCardId":232}]} 

 Player 2 17:27:29 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 17:27:29 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":5,"originStackId":4},"isAfterActivation":true,"index":5} 

 Player 2 17:27:29 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":313,"numberRolled":3,"rollingPlayerCardId":313,"stackEffectType":2,"attackedMonsterCardId":232}} 

 Player 2 17:27:29 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 17:27:29 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 17:27:29 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 1 17:27:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Carrion Queen<Monster>"} 

 Player 1 17:27:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 2 is rolling against Carrion Queen<Monster>"} 

 Player 2 17:27:32 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":4} 

 Player 2 17:27:32 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 2 17:27:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Remove After Resolve Player Attack Roll On Monster 4  "}} 

 Player 2 17:27:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Carrion Queen"} 

 Player 2 17:27:35 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":313,"numberRolled":3,"rollingPlayerCardId":313,"stackEffectType":2,"attackedMonsterCardId":232}} 

 Player 2 17:27:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Response Remove After Resolve Player Attack Roll On Monster 4"},"childOfId":32} 

 Player 2 17:27:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Wait For Response From Player 2 "},"childOfId":32} 

 Player 2 17:27:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:27:35 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 17:27:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Wait For Response From Player 1 "},"childOfId":32} 

 Player 2 17:27:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 17:27:35 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 17:27:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 2 is rolling against Carrion Queen<Monster>"} 

 Player 1 17:27:35 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[317]} 

 Player 1 17:27:35 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 17:27:35 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 17:27:35 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 2 17:27:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Resolve Monster Combat Damage To A Player 5 "}} 

 Player 2 17:27:35 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":5,"creatorCardId":313,"entityToDoDamageCardId":313,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}]} 

 Player 2 17:27:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby will deal 1 combat damage to Carrion Queen "} 

 Player 2 17:27:35 $UPDATE_STACK_VIS:  
{"stackId":5,"text":"Blue Baby will deal 1 combat damage to Carrion Queen"} 

 Player 2 17:27:35 $MONSTER_GET_DAMAGED:  
{"cardId":232,"hpLeft":2,"damageDealerId":313} 

 Player 2 17:27:35 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":313},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":232,"scopeIsPlayer":false,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 

 Player 2 17:27:35 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":4},{"type":0,"number":313},{"type":0,"number":232}],"result":null,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":7,"originStackId":5},"isAfterActivation":true,"index":7} 

 Player 2 17:27:35 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":313,"entityToDoDamageCardId":313,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 2 17:27:35 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 17:27:35 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 17:27:35 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 1 17:27:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Carrion Queen"} 

 Player 1 17:27:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Carrion Queen"} 

 Player 2 17:27:38 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":5} 

 Player 2 17:27:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Remove After Resolve Monster Combat Damage To A Player 5  "}} 

 Player 2 17:27:38 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:27:38 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":313,"entityToDoDamageCardId":313,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 2 17:27:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Response Remove After Resolve Monster Combat Damage To A Player 5"},"childOfId":37} 

 Player 2 17:27:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Wait For Response From Player 1 "},"childOfId":37} 

 Player 2 17:27:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 17:27:38 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 17:27:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Carrion Queen"} 

 Player 1 17:27:38 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[317]} 

 Player 1 17:27:38 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 17:27:38 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 17:27:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Wait For Response From Player 2 "},"childOfId":37} 

 Player 2 17:27:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:27:39 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 17:27:39 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 2 17:27:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Stack Was Emptied "}} 

 Player 2 17:27:39 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:27:39 $CLEAR_SE_VIS:  

 Player 2 17:32:43 $MATCH: 