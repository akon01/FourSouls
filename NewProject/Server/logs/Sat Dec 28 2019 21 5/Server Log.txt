Start Log 

 Player 1 21:05:13 $MATCH:  

 Player 1 21:05:13 $START_GAME:  

 Player 2 21:05:13 $MOVE_TO_TABLE:  

 Player 1 21:05:13 $MOVE_TO_TABLE:  

 Player 2 21:05:19 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 1 21:05:19 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 21:05:19 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":270,"itemCardId":271} 

 Player 2 21:05:20 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":263}],"result":true,"preventMethod":false,"methodScopeId":262,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 21:05:20 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":262,"itemCardId":263} 

 Player 2 21:05:20 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[106,134,114,63,118,33,31,29,122,138,23,102,98,86,111,129,7,28,95,96,42,104,94,22,135,101,56,83,67,52,97,30,70,8,64,20,51,12,78,44,85,127,131,132,125,49,25,107,10,100,77,110,27,54,11,130,116,142,39,93,37,46,92,57,140,99,105,76,43,143,36,38,18,68,120,55,88,74,32,66,126,113,26,16,14,59,123,15,48,81,53,87,108,112,9,137,60,73,61,109,91,40,65,35,80,115,128,75,21,41,141,34,50,90,121,82,13,79,69,19,119,136,45,24,89,124,62,84,58,72,71,133,47,117,103,17,139]} 

 Player 2 21:05:20 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[242,240,214,232,216,210,253,257,235,208,251,236,246,213,228,217,239,245,209,258,238,256,218,225,221,237,222,243,248,226,233,207,223,252,255,212,206,250,227,259,231,234,254,220,219,229,215,230,249,247,241,244,224,211]} 

 Player 2 21:05:20 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[174,156,183,192,155,182,164,151,189,166,181,160,197,175,186,154,190,196,173,195,171,177,152,180,148,176,168,169,191,170,194,185,161,167,198,201,184,193,178,157,158,200,187,199,202,153,146,159,172,149,163,203,162,147,188,165,179,150]} 

 Player 2 21:05:20 $DRAW_CARD:  
{"deckType":5} 

 Player 2 21:05:20 $FLIP_CARD:  
{"cardId":150} 

 Player 2 21:05:20 $ADD_STORE_CARD:  
{"cardId":150} 

 Player 2 21:05:20 $DRAW_CARD:  
{"deckType":5} 

 Player 2 21:05:20 $FLIP_CARD:  
{"cardId":179} 

 Player 2 21:05:20 $ADD_STORE_CARD:  
{"cardId":179} 

 Player 2 21:05:20 $DRAW_CARD:  
{"deckType":2} 

 Player 2 21:05:20 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":211} 

 Player 2 21:05:20 $DRAW_CARD:  
{"deckType":2} 

 Player 2 21:05:20 $FLIP_CARD:  
{"cardId":224} 

 Player 2 21:05:20 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":224} 

 Player 2 21:05:20 $NEW_MONSTER_ON_PLACE:  
{"cardId":224,"monsterPlaceId":1} 

 Player 2 21:05:20 $DRAW_CARD:  
{"deckType":2} 

 Player 2 21:05:20 $FLIP_CARD:  
{"cardId":244} 

 Player 2 21:05:20 $REGISTER_PASSIVE_ITEM:  
{"cardId":244} 

 Player 2 21:05:20 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":244} 

 Player 2 21:05:20 $NEW_MONSTER_ON_PLACE:  
{"cardId":244,"monsterPlaceId":2} 

 Player 2 21:05:20 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 21:05:20 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 21:05:20 $DRAW_CARD:  
{"deckType":1} 

 Player 2 21:05:20 $MOVE_CARD:  
{"moveIndex":1,"cardId":139,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 21:05:20 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":271}],"result":true,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 21:05:21 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":139,"flipIfFlipped":false,"playerId":2} 

 Player 2 21:05:21 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":139} 

 Player 2 21:05:21 $FLIP_CARD:  
{"cardId":139} 

 Player 2 21:05:21 $FLIP_CARD:  
{"cardId":139} 

 Player 2 21:05:21 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":139} 

 Player 2 21:05:21 $DRAW_CARD:  
{"deckType":1} 

 Player 2 21:05:21 $MOVE_CARD:  
{"moveIndex":2,"cardId":17,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 21:05:21 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":17,"flipIfFlipped":false,"playerId":2} 

 Player 2 21:05:21 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":17} 

 Player 2 21:05:21 $FLIP_CARD:  
{"cardId":17} 

 Player 2 21:05:21 $FLIP_CARD:  
{"cardId":17} 

 Player 2 21:05:21 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":17} 

 Player 2 21:05:21 $DRAW_CARD:  
{"deckType":1} 

 Player 2 21:05:21 $MOVE_CARD:  
{"moveIndex":3,"cardId":103,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 21:05:22 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":103,"flipIfFlipped":false,"playerId":2} 

 Player 2 21:05:22 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":103} 

 Player 2 21:05:22 $FLIP_CARD:  
{"cardId":103} 

 Player 2 21:05:22 $FLIP_CARD:  
{"cardId":103} 

 Player 2 21:05:22 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":103} 

 Player 2 21:05:22 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 21:05:22 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":262,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 21:05:22 $DRAW_CARD:  
{"deckType":1} 

 Player 2 21:05:22 $MOVE_CARD:  
{"moveIndex":4,"cardId":117,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 21:05:22 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":117,"flipIfFlipped":false,"playerId":2} 

 Player 2 21:05:22 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":117} 

 Player 2 21:05:22 $FLIP_CARD:  
{"cardId":117} 

 Player 2 21:05:22 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":117} 

 Player 2 21:05:22 $DRAW_CARD:  
{"deckType":1} 

 Player 2 21:05:22 $MOVE_CARD:  
{"moveIndex":5,"cardId":47,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 21:05:23 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":47,"flipIfFlipped":false,"playerId":2} 

 Player 2 21:05:23 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":47} 

 Player 2 21:05:23 $FLIP_CARD:  
{"cardId":47} 

 Player 2 21:05:23 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":47} 

 Player 2 21:05:23 $DRAW_CARD:  
{"deckType":1} 

 Player 2 21:05:23 $MOVE_CARD:  
{"moveIndex":6,"cardId":133,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 21:05:23 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":133,"flipIfFlipped":false,"playerId":2} 

 Player 2 21:05:23 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":133} 

 Player 2 21:05:23 $FLIP_CARD:  
{"cardId":133} 

 Player 2 21:05:23 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":133} 

 Player 2 21:05:23 $GAME_HAS_STARTED:  

 Player 2 21:05:23 $SET_TURN:  
{"playerId":1} 

 Player 2 21:05:23 $START_TURN:  
{"playerId":1} 

 Player 2 21:05:23 $UPDATE_ACTIONS:  

 Player 1 21:05:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:05:23 $NEXT_STACK_ID:  

 Player 1 21:05:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:05:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 21:05:23 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":270,"turnPlayerCardId":270,"stackEffectType":13}} 

 Player 1 21:05:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 1 21:05:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:05:23 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 21:05:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 21:05:24 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":270,"turnPlayerCardId":270,"stackEffectType":13}} 

 Player 1 21:05:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 1 21:05:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 1 21:05:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:05:24 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 21:05:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 1 21:05:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:05:24 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:05:24 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 21:05:24 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 21:05:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 21:05:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 21:05:24 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:05:24 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 21:05:24 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 21:05:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 1 21:05:24 $DRAW_CARD:  
{"deckType":1} 

 Player 1 21:05:24 $MOVE_CARD:  
{"moveIndex":7,"cardId":71,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 21:05:24 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":71,"flipIfFlipped":false,"playerId":1} 

 Player 1 21:05:24 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":71} 

 Player 1 21:05:24 $FLIP_CARD:  
{"cardId":71} 

 Player 1 21:05:24 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":71} 

 Player 1 21:05:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 21:05:24 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":270,"turnPlayerCardId":270,"stackEffectType":13}} 

 Player 1 21:05:24 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 21:05:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 1 21:05:24 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:05:24 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":270,"turnPlayerCardId":270,"stackEffectType":13}} 

 Player 1 21:05:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 1 21:05:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 1 21:05:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:05:25 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:05:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 21:05:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 21:05:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 21:05:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 21:05:25 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:05:25 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 1 21:05:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 1 21:05:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:05:25 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 1 21:05:25 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 1 21:05:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 1 21:05:25 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:05:25 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 21:05:26 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 21:05:27 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 21:08:19 $NEXT_STACK_ID:  

 Player 1 21:08:19 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:08:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Starts "} 

 Player 1 21:08:19 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":270,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":139,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 21:08:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add PlayLootCardStackEffect 2 "}} 

 Player 1 21:08:19 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":139} 

 Player 1 21:08:19 $MOVE_CARD:  
{"moveIndex":8,"cardId":139,"placeID":278,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 21:08:19 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 21:08:19 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 21:08:19 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":139,"flipIfFlipped":true,"playerId":1} 

 Player 1 21:08:19 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":139} 

 Player 1 21:08:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Starts: GainTreasure"} 

 Player 1 21:08:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:08:19 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 21:08:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Starts: GainTreasure"} 

 Player 1 21:08:19 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":270,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":139,"lootPlayerId":1,"effectToDo":{"effectName":"GainTreasure","cardEffectNum":0,"cardPlayerId":1,"cardId":139,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 21:08:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding PlayLootCardStackEffect 2"},"childOfId":10} 

 Player 1 21:08:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 1 21:08:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:08:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Starts "} 

 Player 2 21:08:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Starts "} 

 Player 1 21:08:22 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 1 21:08:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 1 21:08:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:08:22 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:08:22 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:08:22 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 1 21:08:22 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 1 21:08:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve PlayLootCardStackEffect 2 "}} 

 Player 1 21:08:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Starts: GainTreasure"} 

 Player 1 21:08:22 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":139,"particleType":6} 

 Player 1 21:08:24 $DISABLE_PARTICLE_EFFECT:  
{"cardId":139,"particleType":6} 

 Player 1 21:08:24 $DRAW_CARD:  
{"deckType":5} 

 Player 1 21:08:24 $REGISTER_PASSIVE_ITEM:  
{"cardId":165} 

 Player 1 21:08:24 $MOVE_CARD:  
{"moveIndex":9,"cardId":165,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 

 Player 2 21:08:24 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":165,"flipIfFlipped":true,"playerId":1} 

 Player 1 21:08:24 $ADD_AN_ITEM:  
{"playerId":1,"cardId":165,"isReward":true} 

 Player 1 21:08:24 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":165}],"result":true,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 1 21:08:24 $REMOVE_FROM_PILE:  
{"cardId":139} 

 Player 1 21:08:24 $MOVE_CARD:  
{"moveIndex":10,"cardId":139,"placeID":279,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 21:08:25 $MOVE_CARD_END:  
{"moveIndex":10,"cardId":139,"flipIfFlipped":true,"playerId":1} 

 Player 1 21:08:25 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":139} 

 Player 1 21:08:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Starts: GainTreasure"} 

 Player 1 21:08:25 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":270,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":139,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 21:08:25 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 21:08:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve PlayLootCardStackEffect 2  "}} 

 Player 1 21:08:25 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:08:25 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":270,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":139,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 21:08:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve PlayLootCardStackEffect 2"},"childOfId":15} 

 Player 1 21:08:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 1 21:08:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:08:25 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:08:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Starts "} 

 Player 2 21:08:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Starts "} 

 Player 2 21:08:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Starts "} 

 Player 2 21:08:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Starts "} 

 Player 2 21:08:25 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:08:25 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 1 21:08:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 1 21:08:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:08:28 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 21:08:34 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 1 21:08:34 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 1 21:08:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 1 21:08:34 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:08:34 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 21:08:36 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 21:08:53 $NEXT_STACK_ID:  

 Player 1 21:08:53 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:08:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Scolex"} 

 Player 1 21:08:53 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":270,"attackingPlayerCardId":270,"idOfCardBeingAttacked":244,"stackEffectType":4}} 

 Player 1 21:08:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add DeclareAttack 3 "}} 

 Player 1 21:08:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:08:53 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 21:08:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Scolex"} 

 Player 1 21:08:53 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":270,"attackingPlayerCardId":270,"idOfCardBeingAttacked":244,"stackEffectType":4}} 

 Player 1 21:08:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding DeclareAttack 3"},"childOfId":20} 

 Player 1 21:08:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 1 21:08:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:08:53 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 1 21:08:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 1 21:08:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:08:53 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:08:53 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 21:08:53 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 21:08:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Scolex"} 

 Player 2 21:08:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Scolex"} 

 Player 2 21:08:53 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:08:53 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 1 21:08:53 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 1 21:08:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve DeclareAttack 3 "}} 

 Player 1 21:08:53 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":244,"particleType":5} 

 Player 1 21:08:53 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":3,"originStackId":3},"isAfterActivation":true,"index":3} 

 Player 1 21:08:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Scolex"} 

 Player 1 21:08:53 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":270,"attackingPlayerCardId":270,"idOfCardBeingAttacked":244,"stackEffectType":4}} 

 Player 1 21:08:53 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 21:08:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Remove After Resolve DeclareAttack 3  "}} 

 Player 1 21:08:53 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:08:53 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":270,"attackingPlayerCardId":270,"idOfCardBeingAttacked":244,"stackEffectType":4}} 

 Player 1 21:08:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Response Remove After Resolve DeclareAttack 3"},"childOfId":25} 

 Player 1 21:08:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Wait For Response From Player 2 "},"childOfId":25} 

 Player 1 21:08:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:08:54 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:08:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Scolex"} 

 Player 2 21:08:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Scolex"} 

 Player 2 21:08:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Scolex"} 

 Player 2 21:08:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Scolex"} 

 Player 2 21:08:54 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:08:54 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 1 21:08:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 1 "},"childOfId":25} 

 Player 1 21:08:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:08:54 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 1 21:08:54 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 1 21:08:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Stack Was Emptied "}} 

 Player 1 21:08:54 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:08:54 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 21:08:55 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 1 21:08:56 $NEXT_STACK_ID:  

 Player 1 21:08:56 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:08:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Scolex<Monster>"} 

 Player 1 21:08:56 $ADD_TO_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":270,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":244}} 

 Player 1 21:08:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Add AttackRoll 4 "}} 

 Player 1 21:08:56 $ROLL_DICE:  
{"playerId":1} 

 Player 1 21:08:56 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 21:08:56 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 21:08:56 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:08:58 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":1} 

 Player 1 21:08:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 1 vs Scolex<Monster>"} 

 Player 1 21:08:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:08:58 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 21:08:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 1 vs Scolex<Monster>"} 

 Player 1 21:08:58 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":270,"numberRolled":1,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":244}} 

 Player 1 21:08:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Response Adding AttackRoll 4"},"childOfId":30} 

 Player 1 21:08:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Wait For Response From Player 1 "},"childOfId":30} 

 Player 1 21:08:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:08:58 $UPDATE_STACK_VIS:  
{"stackId":4,"stackVis":{"stackEffectType":2,"flavorText":"player rolled 1 vs Scolex<Monster>","hasBeenUpdated":false}} 

 Player 2 21:08:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Scolex<Monster>"} 

 Player 2 21:08:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Scolex<Monster>"} 

 Player 1 21:09:01 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 1 21:09:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 2 "},"childOfId":30} 

 Player 1 21:09:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:09:01 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:09:01 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:09:01 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 1 21:09:01 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 1 21:09:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Resolve AttackRoll 4 "}} 

 Player 1 21:09:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Added 0 to original roll"}} 

 Player 1 21:09:01 $NEXT_STACK_ID:  

 Player 1 21:09:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 1 vs Scolex<Monster>"} 

 Player 1 21:09:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:09:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex combat damage to Lilith \n2:Player 1 rolled 1 vs Scolex<Monster>"} 

 Player 1 21:09:01 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":270,"entityToDoDamageCardId":244,"entityToTakeDamageCardId":270,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 21:09:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex combat damage to Lilith \n2:Player 1 rolled 1 vs Scolex<Monster>"} 

 Player 1 21:09:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex combat damage to Lilith \n2:Player 1 rolled 1 vs Scolex<Monster>"} 

 Player 1 21:09:01 $REPLACE_STACK:  
{"currentStack":[{"entityId":5,"creatorCardId":270,"entityToDoDamageCardId":244,"entityToTakeDamageCardId":270,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":4,"creatorCardId":270,"numberRolled":1,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":244}]} 

 Player 1 21:09:01 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":2,"number":5}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":4,"originStackId":4},"isAfterActivation":true,"index":4} 

 Player 1 21:09:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex combat damage to Lilith \n2:Player 1 rolled 1 vs Scolex<Monster>"} 

 Player 1 21:09:01 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":270,"numberRolled":1,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":244}} 

 Player 1 21:09:01 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 1 21:09:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Remove After Resolve AttackRoll 4  "}} 

 Player 1 21:09:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex combat damage to Lilith"} 

 Player 1 21:09:01 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":270,"numberRolled":1,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":244}} 

 Player 1 21:09:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Response Remove After Resolve AttackRoll 4"},"childOfId":36} 

 Player 1 21:09:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 1 "},"childOfId":36} 

 Player 1 21:09:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:09:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Scolex<Monster>"} 

 Player 2 21:09:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Scolex<Monster>"} 

 Player 2 21:09:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex combat damage to Lilith"} 

 Player 2 21:09:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex combat damage to Lilith"} 

 Player 2 21:09:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex combat damage to Lilith"} 

 Player 2 21:09:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex combat damage to Lilith"} 

 Player 2 21:09:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex combat damage to Lilith \n2:Player 1 is rolling against Scolex<Monster>"} 

 Player 2 21:09:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex combat damage to Lilith \n2:Player 1 is rolling against Scolex<Monster>"} 

 Player 2 21:09:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex combat damage to Lilith \n2:Player 1 is rolling against Scolex<Monster>"} 

 Player 2 21:09:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex combat damage to Lilith \n2:Player 1 is rolling against Scolex<Monster>"} 

 Player 1 21:09:04 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 1 21:09:04 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 1 21:09:05 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 1 21:09:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Wait For Response From Player 2 "},"childOfId":36} 

 Player 1 21:09:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:09:05 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:09:05 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:09:05 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 1 21:09:05 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 1 21:09:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Resolve CombatDamage 5 "}} 

 Player 1 21:09:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex 1 combat damage to Lilith"} 

 Player 1 21:09:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex 1 combat damage to Lilith"} 

 Player 1 21:09:05 $PLAYER_GET_HIT:  
{"playerId":1,"damage":1,"damageDealerId":244} 

 Player 1 21:09:05 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":244}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 1 21:09:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex 1 combat damage to Lilith"} 

 Player 1 21:09:05 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":270,"entityToDoDamageCardId":244,"entityToTakeDamageCardId":270,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 21:09:05 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 1 21:09:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Remove After Resolve CombatDamage 5  "}} 

 Player 1 21:09:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:09:05 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":270,"entityToDoDamageCardId":244,"entityToTakeDamageCardId":270,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 21:09:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Response Remove After Resolve CombatDamage 5"},"childOfId":41} 

 Player 1 21:09:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 2 "},"childOfId":41} 

 Player 1 21:09:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:09:05 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:09:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex combat damage to Lilith"} 

 Player 2 21:09:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex combat damage to Lilith"} 

 Player 2 21:09:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex combat damage to Lilith"} 

 Player 2 21:09:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex combat damage to Lilith"} 

 Player 2 21:09:05 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:09:05 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 1 21:09:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Wait For Response From Player 1 "},"childOfId":41} 

 Player 1 21:09:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:09:06 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 1 21:09:06 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 1 21:09:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Stack Was Emptied "}} 

 Player 1 21:09:07 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:09:07 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 1 21:09:08 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 1 21:09:08 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 1 21:09:13 $NEXT_STACK_ID:  

 Player 1 21:09:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:09:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lilith"} 

 Player 1 21:09:13 $ADD_TO_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":270,"hasLockingStackEffect":false,"itemToPlayCardId":270,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 21:09:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Add ActivateItem 6 "}} 

 Player 2 21:09:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 21:09:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:09:16 $USE_ITEM:  
{"cardId":270} 

 Player 1 21:09:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:09:16 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 1 21:09:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lilith"} 

 Player 1 21:09:16 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":270,"hasLockingStackEffect":false,"itemToPlayCardId":270,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 21:09:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Response Adding ActivateItem 6"},"childOfId":46} 

 Player 1 21:09:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Wait For Response From Player 1 "},"childOfId":46} 

 Player 1 21:09:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:09:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lilith"} 

 Player 2 21:09:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lilith"} 

 Player 1 21:09:17 $NEXT_STACK_ID:  

 Player 1 21:09:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lilith"} 

 Player 1 21:09:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lilith \n2:Player 1 activated Incubus"} 

 Player 1 21:09:17 $ADD_TO_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":270,"hasLockingStackEffect":false,"itemToPlayCardId":271,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 21:09:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Add ActivateItem 7 "}} 

 Player 2 21:09:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lilith"} 

 Player 2 21:09:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lilith"} 

 Player 1 21:09:18 $USE_ITEM:  
{"cardId":271} 

 Player 1 21:09:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:09:18 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 1 21:09:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lilith \n2:Player 1 activated Incubus"} 

 Player 1 21:09:18 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":270,"hasLockingStackEffect":false,"itemToPlayCardId":271,"itemPlayerId":1,"effectToDoData":{"type":1,"index":1},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 21:09:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Response Adding ActivateItem 7"},"childOfId":49} 

 Player 1 21:09:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Wait For Response From Player 1 "},"childOfId":49} 

 Player 1 21:09:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:09:19 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 1 21:09:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Wait For Response From Player 2 "},"childOfId":49} 

 Player 1 21:09:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:09:19 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:09:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lilith \n2:Player 1 activated Incubus"} 

 Player 2 21:09:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lilith \n2:Player 1 activated Incubus"} 

 Player 2 21:09:19 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:09:19 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 1 21:09:19 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 1 21:09:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Resolve ActivateItem 7 "}} 

 Player 1 21:09:19 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":271,"particleType":6} 

 Player 1 21:09:21 $DISABLE_PARTICLE_EFFECT:  
{"cardId":271,"particleType":6} 

 Player 1 21:09:21 $DRAW_CARD:  
{"deckType":1} 

 Player 1 21:09:21 $MOVE_CARD:  
{"moveIndex":11,"cardId":72,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 21:09:21 $MOVE_CARD_END:  
{"moveIndex":11,"cardId":72,"flipIfFlipped":false,"playerId":1} 

 Player 1 21:09:21 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":72} 

 Player 1 21:09:21 $FLIP_CARD:  
{"cardId":72} 

 Player 1 21:09:21 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":72} 

 Player 1 21:09:55 $MOVE_CARD:  
{"moveIndex":12,"cardId":72,"placeID":6,"flipIfFlipped":false,"playerId":1,"placeType":"Card"} 

 Player 2 21:09:55 $MOVE_CARD_END:  
{"moveIndex":12,"cardId":72,"flipIfFlipped":false,"playerId":1} 

 Player 1 21:09:55 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":72} 

 Player 1 21:09:55 $DECK_ADD_TO_TOP:  
{"deckType":1,"cardId":72} 

 Player 1 21:09:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lilith \n2:Player 1 activated Incubus"} 

 Player 1 21:09:55 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":270,"hasLockingStackEffect":false,"itemToPlayCardId":271,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 21:09:55 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 1 21:09:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Remove After Resolve ActivateItem 7  "}} 

 Player 1 21:09:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lilith"} 

 Player 1 21:09:55 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":270,"hasLockingStackEffect":false,"itemToPlayCardId":271,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 21:09:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Response Remove After Resolve ActivateItem 7"},"childOfId":54} 

 Player 1 21:09:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":56,"_text":"Wait For Response From Player 2 "},"childOfId":54} 

 Player 1 21:09:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:09:55 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:09:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lilith \n2:Player 1 activated Incubus"} 

 Player 2 21:09:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lilith \n2:Player 1 activated Incubus"} 

 Player 2 21:09:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lilith \n2:Player 1 activated Incubus"} 

 Player 2 21:09:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lilith \n2:Player 1 activated Incubus"} 

 Player 2 21:09:56 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:09:56 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 1 21:09:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":57,"_text":"Wait For Response From Player 1 "},"childOfId":54} 

 Player 1 21:09:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:09:56 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 1 21:09:56 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 1 21:09:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":58,"_text":"Resolve ActivateItem 6 "}} 

 Player 1 21:09:56 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":270,"particleType":6} 

 Player 1 21:09:58 $DISABLE_PARTICLE_EFFECT:  
{"cardId":270,"particleType":6} 

 Player 1 21:09:58 $NEXT_STACK_ID:  

 Player 1 21:09:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lilith"} 

 Player 1 21:09:58 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":103} 

 Player 1 21:09:58 $MOVE_CARD:  
{"moveIndex":13,"cardId":103,"placeID":278,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 21:09:58 $MOVE_CARD_END:  
{"moveIndex":13,"cardId":103,"flipIfFlipped":true,"playerId":1} 

 Player 1 21:09:58 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":103} 

 Player 1 21:09:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Gold Bomb: DealDamage \n2:Player 1 activated Lilith"} 

 Player 1 21:09:58 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 1 21:10:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:10:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Gold Bomb: DealDamage \n2:Player 1 activated Lilith"} 

 Player 1 21:10:01 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":270,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":103,"lootPlayerId":1,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":103,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 21:10:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Gold Bomb: DealDamage \n2:Player 1 activated Lilith"} 

 Player 1 21:10:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Gold Bomb: DealDamage \n2:Player 1 activated Lilith"} 

 Player 1 21:10:01 $REPLACE_STACK:  
{"currentStack":[{"entityId":8,"creatorCardId":270,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":103,"lootPlayerId":1,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":103,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":6,"creatorCardId":270,"hasLockingStackEffect":false,"itemToPlayCardId":270,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 

 Player 1 21:10:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Gold Bomb: DealDamage \n2:Player 1 activated Lilith"} 

 Player 1 21:10:01 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":270,"hasLockingStackEffect":false,"itemToPlayCardId":270,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 21:10:01 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 1 21:10:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":59,"_text":"Remove After Resolve ActivateItem 6  "}} 

 Player 1 21:10:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Gold Bomb: DealDamage"} 

 Player 1 21:10:01 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":270,"hasLockingStackEffect":false,"itemToPlayCardId":270,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 21:10:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":60,"_text":"Response Remove After Resolve ActivateItem 6"},"childOfId":59} 

 Player 1 21:10:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":61,"_text":"Wait For Response From Player 1 "},"childOfId":59} 

 Player 1 21:10:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:10:01 $ACTION_MASSAGE_REMOVE:  
{"id":61} 

 Player 1 21:10:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":62,"_text":"Wait For Response From Player 2 "},"childOfId":59} 

 Player 1 21:10:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:10:02 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:10:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lilith"} 

 Player 2 21:10:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lilith"} 

 Player 2 21:10:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Gold Bomb "} 

 Player 2 21:10:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Gold Bomb "} 

 Player 2 21:10:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Gold Bomb "} 

 Player 2 21:10:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Gold Bomb "} 

 Player 2 21:10:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Gold Bomb  \n2:Player 1 activated Lilith"} 

 Player 2 21:10:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Gold Bomb  \n2:Player 1 activated Lilith"} 

 Player 2 21:10:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Gold Bomb  \n2:Player 1 activated Lilith"} 

 Player 2 21:10:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Gold Bomb  \n2:Player 1 activated Lilith"} 

 Player 2 21:10:02 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:10:02 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 1 21:10:02 $ACTION_MASSAGE_REMOVE:  
{"id":60} 

 Player 1 21:10:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":63,"_text":"Resolve PlayLootCardStackEffect 8 "}} 

 Player 1 21:10:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Gold Bomb: DealDamage"} 

 Player 1 21:10:02 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":103,"particleType":6} 

 Player 1 21:10:04 $DISABLE_PARTICLE_EFFECT:  
{"cardId":103,"particleType":6} 

 Player 1 21:10:04 $MONSTER_GET_DAMAGED:  
{"cardId":244,"hpLeft":0,"damageDealerId":270} 

 Player 1 21:10:04 $NEXT_STACK_ID:  

 Player 1 21:10:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Gold Bomb: DealDamage"} 

 Player 1 21:10:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:10:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Gold Bomb: DealDamage \n2:[object Object] killed by Lilith"} 

 Player 1 21:10:04 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":270,"monsterToDieCardId":244,"stackEffectType":5,"killerId":270}} 

 Player 1 21:10:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Gold Bomb: DealDamage \n2:[object Object] killed by Lilith"} 

 Player 1 21:10:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Gold Bomb: DealDamage \n2:[object Object] killed by Lilith"} 

 Player 1 21:10:04 $REPLACE_STACK:  
{"currentStack":[{"entityId":8,"creatorCardId":270,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":103,"lootPlayerId":1,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":103,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":9,"creatorCardId":270,"monsterToDieCardId":244,"stackEffectType":5,"killerId":270}]} 

 Player 1 21:10:04 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":3},{"type":0,"number":270}],"result":null,"preventMethod":false,"methodScopeId":244,"scopeIsPlayer":false,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 

 Player 1 21:10:04 $REMOVE_FROM_PILE:  
{"cardId":103} 

 Player 1 21:10:04 $MOVE_CARD:  
{"moveIndex":14,"cardId":103,"placeID":279,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 1 21:10:04 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 2 21:10:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Gold Bomb "} 

 Player 2 21:10:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Gold Bomb "} 

 Player 2 21:10:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by undefined"} 

 Player 2 21:10:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by undefined"} 

 Player 2 21:10:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by undefined"} 

 Player 2 21:10:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by undefined"} 

 Player 2 21:10:04 $MOVE_CARD_END:  
{"moveIndex":14,"cardId":103,"flipIfFlipped":true,"playerId":1} 

 Player 1 21:10:04 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":103} 

 Player 1 21:10:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Gold Bomb: DealDamage \n2:[object Object] killed by Lilith"} 

 Player 1 21:10:05 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":270,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":103,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 21:10:05 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 1 21:10:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":64,"_text":"Remove After Resolve PlayLootCardStackEffect 8  "}} 

 Player 1 21:10:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Lilith"} 

 Player 1 21:10:05 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":8,"creatorCardId":270,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":103,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 21:10:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":65,"_text":"Response Remove After Resolve PlayLootCardStackEffect 8"},"childOfId":64} 

 Player 1 21:10:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":66,"_text":"Wait For Response From Player 1 "},"childOfId":64} 

 Player 1 21:10:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:10:05 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 1 21:10:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":67,"_text":"Wait For Response From Player 2 "},"childOfId":64} 

 Player 1 21:10:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:10:05 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:10:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Gold Bomb  \n2:[object Object] killed by undefined"} 

 Player 2 21:10:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Gold Bomb  \n2:[object Object] killed by undefined"} 

 Player 2 21:10:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Gold Bomb  \n2:[object Object] killed by undefined"} 

 Player 2 21:10:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Gold Bomb  \n2:[object Object] killed by undefined"} 

 Player 2 21:10:05 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:10:05 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 1 21:10:05 $ACTION_MASSAGE_REMOVE:  
{"id":65} 

 Player 1 21:10:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":68,"_text":"Resolve MonsterDeath 9 "}} 

 Player 1 21:10:05 $DISABLE_PARTICLE_EFFECT:  
{"cardId":244,"particleType":5} 

 Player 1 21:10:05 $CANCEL_ATTACK:  

 Player 1 21:10:05 $NEXT_STACK_ID:  

 Player 1 21:10:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Lilith"} 

 Player 1 21:10:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:10:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Scolex<Monster> reward \n2:[object Object] killed by Lilith"} 

 Player 1 21:10:05 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":270,"monsterCardWithRewardId":244,"playerCardIdToReward":270,"stackEffectType":7}} 

 Player 1 21:10:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Scolex<Monster> reward \n2:[object Object] killed by Lilith"} 

 Player 1 21:10:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Scolex<Monster> reward \n2:[object Object] killed by Lilith"} 

 Player 1 21:10:05 $REPLACE_STACK:  
{"currentStack":[{"entityId":10,"creatorCardId":270,"monsterCardWithRewardId":244,"playerCardIdToReward":270,"stackEffectType":7},{"entityId":9,"creatorCardId":270,"monsterToDieCardId":244,"stackEffectType":5,"killerId":270}]} 

 Player 1 21:10:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Scolex<Monster> reward \n2:[object Object] killed by Lilith"} 

 Player 1 21:10:05 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":270,"monsterToDieCardId":244,"stackEffectType":5,"killerId":270}} 

 Player 1 21:10:05 $ACTION_MASSAGE_REMOVE:  
{"id":68} 

 Player 1 21:10:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":69,"_text":"Remove After Resolve MonsterDeath 9  "}} 

 Player 1 21:10:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Scolex<Monster> reward"} 

 Player 1 21:10:05 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":9,"creatorCardId":270,"monsterToDieCardId":244,"stackEffectType":5,"killerId":270}} 

 Player 1 21:10:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":70,"_text":"Response Remove After Resolve MonsterDeath 9"},"childOfId":69} 

 Player 1 21:10:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":71,"_text":"Wait For Response From Player 1 "},"childOfId":69} 

 Player 1 21:10:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:10:06 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 1 21:10:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":72,"_text":"Wait For Response From Player 2 "},"childOfId":69} 

 Player 1 21:10:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:10:06 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:10:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by undefined"} 

 Player 2 21:10:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by undefined"} 

 Player 2 21:10:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Scolex<Monster> reward"} 

 Player 2 21:10:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Scolex<Monster> reward"} 

 Player 2 21:10:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Scolex<Monster> reward"} 

 Player 2 21:10:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Scolex<Monster> reward"} 

 Player 2 21:10:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Scolex<Monster> reward \n2:[object Object] killed by undefined"} 

 Player 2 21:10:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Scolex<Monster> reward \n2:[object Object] killed by undefined"} 

 Player 2 21:10:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Scolex<Monster> reward \n2:[object Object] killed by undefined"} 

 Player 2 21:10:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Scolex<Monster> reward \n2:[object Object] killed by undefined"} 

 Player 2 21:10:06 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:10:06 $ACTION_MASSAGE_REMOVE:  
{"id":72} 

 Player 1 21:10:06 $ACTION_MASSAGE_REMOVE:  
{"id":70} 

 Player 1 21:10:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":73,"_text":"Resolve MonsterRewardStackEffect 10 "}} 

 Player 1 21:10:06 $DRAW_CARD:  
{"deckType":5} 

 Player 1 21:10:06 $MOVE_CARD:  
{"moveIndex":15,"cardId":188,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 

 Player 2 21:10:06 $MOVE_CARD_END:  
{"moveIndex":15,"cardId":188,"flipIfFlipped":true,"playerId":1} 

 Player 1 21:10:06 $ADD_AN_ITEM:  
{"playerId":1,"cardId":188,"isReward":true} 

 Player 1 21:10:06 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":188}],"result":true,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 

 Player 1 21:10:06 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":244,"scopeIsPlayer":false,"index":8,"originStackId":10},"isAfterActivation":true,"index":8} 

 Player 1 21:10:06 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:10:06 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 1 21:10:06 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 1 21:10:06 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 1 21:10:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":74,"_text":"Fizzle MonsterRewardStackEffect 10"}} 

 Player 1 21:10:07 $MOVE_CARD:  
{"moveIndex":16,"cardId":244,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"soulsLayout"} 

 Player 2 21:10:07 $MOVE_CARD_END:  
{"moveIndex":16,"cardId":244,"flipIfFlipped":true,"playerId":1} 

 Player 1 21:10:07 $GET_SOUL:  
{"playerId":1,"cardId":244} 

 Player 1 21:10:07 $REMOVE_FROM_PASSIVE_MANAGER:  
{"cardId":244} 

 Player 1 21:10:07 $REMOVE_MONSTER:  
{"holderId":2,"monsterId":244} 

 Player 1 21:10:07 $NEXT_STACK_ID:  

 Player 1 21:10:07 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:10:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder2 slot"} 

 Player 1 21:10:07 $ADD_TO_STACK:  
{"stackEffect":{"entityId":11,"creatorCardId":270,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 

 Player 1 21:10:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":75,"_text":"Add RefillEmptySlot 11 "}} 

 Player 1 21:10:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:10:07 $ACTION_MASSAGE_REMOVE:  
{"id":75} 

 Player 1 21:10:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder2 slot"} 

 Player 1 21:10:07 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":11,"creatorCardId":270,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 

 Player 1 21:10:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":76,"_text":"Response Adding RefillEmptySlot 11"},"childOfId":75} 

 Player 1 21:10:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":77,"_text":"Wait For Response From Player 1 "},"childOfId":75} 

 Player 1 21:10:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:10:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Scolex<Monster> reward"} 

 Player 2 21:10:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Scolex<Monster> reward"} 

 Player 2 21:10:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Scolex<Monster> reward \n2:Refill holder2 slot"} 

 Player 2 21:10:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Scolex<Monster> reward \n2:Refill holder2 slot"} 

 Player 1 21:10:07 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 1 21:10:08 $ACTION_MASSAGE_REMOVE:  
{"id":69} 

 Player 1 21:10:09 $ACTION_MASSAGE_REMOVE:  
{"id":74} 

 Player 1 21:10:45 $ACTION_MASSAGE_REMOVE:  
{"id":77} 

 Player 1 21:10:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":78,"_text":"Wait For Response From Player 2 "},"childOfId":75} 

 Player 1 21:10:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:10:46 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:10:46 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:10:46 $ACTION_MASSAGE_REMOVE:  
{"id":78} 

 Player 1 21:10:46 $ACTION_MASSAGE_REMOVE:  
{"id":76} 

 Player 1 21:10:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":79,"_text":"Resolve RefillEmptySlot 11 "}} 

 Player 1 21:10:46 $DRAW_CARD:  
{"deckType":2} 

 Player 1 21:10:46 $FLIP_CARD:  
{"cardId":241} 

 Player 1 21:10:46 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":241} 

 Player 1 21:10:46 $NEW_MONSTER_ON_PLACE:  
{"cardId":241,"monsterPlaceId":2} 

 Player 1 21:10:46 $ACTION_MASSAGE_REMOVE:  
{"id":79} 

 Player 1 21:10:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":80,"_text":"Remove After Resolve RefillEmptySlot 11  "}} 

 Player 1 21:10:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:10:46 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":11,"creatorCardId":270,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 

 Player 1 21:10:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":81,"_text":"Response Remove After Resolve RefillEmptySlot 11"},"childOfId":80} 

 Player 1 21:10:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":82,"_text":"Wait For Response From Player 2 "},"childOfId":80} 

 Player 1 21:10:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:10:46 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:10:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Scolex<Monster> reward \n2:Refill holder2 slot"} 

 Player 2 21:10:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Scolex<Monster> reward \n2:Refill holder2 slot"} 

 Player 2 21:10:46 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:10:46 $ACTION_MASSAGE_REMOVE:  
{"id":82} 

 Player 1 21:10:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":83,"_text":"Wait For Response From Player 1 "},"childOfId":80} 

 Player 1 21:10:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:10:49 $ACTION_MASSAGE_REMOVE:  
{"id":80} 

 Player 1 21:10:51 $ACTION_MASSAGE_REMOVE:  
{"id":83} 

 Player 1 21:10:51 $ACTION_MASSAGE_REMOVE:  
{"id":81} 

 Player 1 21:10:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":84,"_text":"Stack Was Emptied "}} 

 Player 1 21:10:51 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:10:51 $ACTION_MASSAGE_REMOVE:  
{"id":84} 

 Player 1 21:10:51 $ACTION_MASSAGE_REMOVE:  
{"id":73} 

 Player 1 21:10:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":85,"_text":"Stack Was Emptied "}} 

 Player 1 21:10:51 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:10:51 $ACTION_MASSAGE_REMOVE:  
{"id":85} 

 Player 1 21:10:51 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 1 21:10:51 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 1 21:10:52 $ACTION_MASSAGE_REMOVE:  
{"id":84} 

 Player 1 21:10:52 $ACTION_MASSAGE_REMOVE:  
{"id":85}