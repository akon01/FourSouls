Start Log 

 Player 1 19:16:15 $MATCH:  

 Player 1 19:16:16 $START_GAME:  

 Player 2 19:16:16 $MOVE_TO_TABLE:  

 Player 1 19:16:16 $MOVE_TO_TABLE:  

 Player 2 19:16:24 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 1 19:16:24 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 19:16:24 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":292,"itemCardId":293} 

 Player 2 19:16:24 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":295}],"result":true,"preventMethod":false,"methodScopeId":294,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 19:16:25 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":294,"itemCardId":295} 

 Player 2 19:16:25 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[62,36,22,120,141,106,99,79,7,103,66,60,28,77,94,29,39,59,81,93,129,46,48,64,34,61,23,24,85,25,8,21,138,119,44,20,16,75,142,109,15,122,72,95,83,88,110,98,86,74,140,47,67,42,70,38,128,35,63,68,73,87,52,115,135,96,121,18,90,57,51,40,55,89,100,71,105,54,134,19,58,53,131,12,136,111,13,27,137,31,26,82,50,78,101,65,139,97,117,113,33,124,76,126,10,69,127,107,56,116,133,102,92,118,32,112,49,17,43,41,14,45,123,11,104,37,125,132,91,108,80,130,84,9,114,30]} 

 Player 2 19:16:25 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[237,280,259,267,232,233,243,247,252,264,257,235,239,279,271,228,266,269,278,281,272,260,245,231,258,276,240,251,242,230,241,273,275,248,253,277,270,238,229,265,236,249,274,255,261,262,246,268,234,244,250,263,256,254]} 

 Player 2 19:16:25 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[164,153,149,163,211,165,162,193,147,158,218,202,220,169,177,178,181,146,209,183,215,203,191,214,180,201,151,156,176,184,213,204,167,173,206,222,197,223,170,185,172,157,179,199,171,190,219,182,210,186,212,225,198,155,217,194,148,188,168,150,160,200,154,205,221,174,207,166,161,216,159,189,145,187,195,192,224,175,196,152,208]} 

 Player 2 19:16:25 $DRAW_CARD:  
{"deckType":5} 

 Player 2 19:16:25 $FLIP_CARD:  
{"cardId":208} 

 Player 2 19:16:25 $ADD_STORE_CARD:  
{"cardId":208} 

 Player 2 19:16:25 $DRAW_CARD:  
{"deckType":5} 

 Player 2 19:16:25 $FLIP_CARD:  
{"cardId":152} 

 Player 2 19:16:25 $ADD_STORE_CARD:  
{"cardId":152} 

 Player 2 19:16:25 $DRAW_CARD:  
{"deckType":2} 

 Player 2 19:16:25 $FLIP_CARD:  
{"cardId":254} 

 Player 2 19:16:25 $REGISTER_PASSIVE_ITEM:  
{"cardId":254} 

 Player 2 19:16:25 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":254} 

 Player 2 19:16:25 $NEW_MONSTER_ON_PLACE:  
{"cardId":254,"monsterPlaceId":1} 

 Player 2 19:16:25 $DRAW_CARD:  
{"deckType":2} 

 Player 2 19:16:25 $FLIP_CARD:  
{"cardId":256} 

 Player 2 19:16:25 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":256} 

 Player 2 19:16:25 $NEW_MONSTER_ON_PLACE:  
{"cardId":256,"monsterPlaceId":2} 

 Player 2 19:16:25 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 19:16:25 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 19:16:25 $DRAW_CARD:  
{"deckType":1} 

 Player 2 19:16:25 $MOVE_CARD:  
{"moveIndex":1,"cardId":30,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 19:16:26 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":293}],"result":true,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 19:16:26 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":30,"flipIfFlipped":false,"playerId":2} 

 Player 2 19:16:26 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":30} 

 Player 2 19:16:26 $FLIP_CARD:  
{"cardId":30} 

 Player 2 19:16:26 $FLIP_CARD:  
{"cardId":30} 

 Player 2 19:16:26 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":30} 

 Player 2 19:16:26 $DRAW_CARD:  
{"deckType":1} 

 Player 2 19:16:26 $MOVE_CARD:  
{"moveIndex":2,"cardId":114,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 19:16:26 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":114,"flipIfFlipped":false,"playerId":2} 

 Player 2 19:16:26 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":114} 

 Player 2 19:16:26 $FLIP_CARD:  
{"cardId":114} 

 Player 2 19:16:26 $FLIP_CARD:  
{"cardId":114} 

 Player 2 19:16:26 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":114} 

 Player 2 19:16:26 $DRAW_CARD:  
{"deckType":1} 

 Player 2 19:16:27 $MOVE_CARD:  
{"moveIndex":3,"cardId":9,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 19:16:27 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":9,"flipIfFlipped":false,"playerId":2} 

 Player 2 19:16:27 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":9} 

 Player 2 19:16:27 $FLIP_CARD:  
{"cardId":9} 

 Player 2 19:16:27 $FLIP_CARD:  
{"cardId":9} 

 Player 2 19:16:27 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":9} 

 Player 2 19:16:27 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 19:16:27 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":294,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 19:16:27 $DRAW_CARD:  
{"deckType":1} 

 Player 2 19:16:27 $MOVE_CARD:  
{"moveIndex":4,"cardId":84,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 19:16:27 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":84,"flipIfFlipped":false,"playerId":2} 

 Player 2 19:16:27 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":84} 

 Player 2 19:16:27 $FLIP_CARD:  
{"cardId":84} 

 Player 2 19:16:28 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":84} 

 Player 2 19:16:28 $DRAW_CARD:  
{"deckType":1} 

 Player 2 19:16:28 $MOVE_CARD:  
{"moveIndex":5,"cardId":130,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 19:16:28 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":130,"flipIfFlipped":false,"playerId":2} 

 Player 2 19:16:28 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":130} 

 Player 2 19:16:28 $FLIP_CARD:  
{"cardId":130} 

 Player 2 19:16:28 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":130} 

 Player 2 19:16:28 $DRAW_CARD:  
{"deckType":1} 

 Player 2 19:16:28 $MOVE_CARD:  
{"moveIndex":6,"cardId":80,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 19:16:28 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":80,"flipIfFlipped":false,"playerId":2} 

 Player 2 19:16:28 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":80} 

 Player 2 19:16:28 $FLIP_CARD:  
{"cardId":80} 

 Player 2 19:16:28 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":80} 

 Player 2 19:16:29 $GAME_HAS_STARTED:  

 Player 2 19:16:29 $SET_TURN:  
{"playerId":2} 

 Player 2 19:16:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:16:29 $NEXT_STACK_ID:  

 Player 2 19:16:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:16:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 19:16:29 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":294,"turnPlayerCardId":294,"stackEffectType":13}} 

 Player 2 19:16:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 19:16:29 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":294,"turnPlayerCardId":294,"stackEffectType":13}} 

 Player 2 19:16:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 2 19:16:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:16:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 19:16:29 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":294,"turnPlayerCardId":294,"stackEffectType":13}} 

 Player 2 19:16:29 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 19:16:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 2 19:16:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 2 19:16:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:16:29 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 19:16:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 2 19:16:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:16:29 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:16:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:16:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:16:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:16:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:16:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:16:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:16:29 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:16:29 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 19:16:29 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 19:16:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 2 19:16:29 $DRAW_CARD:  
{"deckType":1} 

 Player 2 19:16:29 $MOVE_CARD:  
{"moveIndex":7,"cardId":108,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 19:16:30 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":108,"flipIfFlipped":false,"playerId":2} 

 Player 2 19:16:30 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":108} 

 Player 2 19:16:30 $FLIP_CARD:  
{"cardId":108} 

 Player 2 19:16:30 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":108} 

 Player 2 19:16:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 19:16:30 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":294,"turnPlayerCardId":294,"stackEffectType":13}} 

 Player 2 19:16:30 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 19:16:30 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:16:30 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":294,"turnPlayerCardId":294,"stackEffectType":13}} 

 Player 2 19:16:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 2 19:16:30 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:16:30 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":294,"turnPlayerCardId":294,"stackEffectType":13}} 

 Player 2 19:16:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 2 19:16:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 2 19:16:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:16:30 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:16:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:16:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:16:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:16:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:16:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:16:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:16:30 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:16:30 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 2 19:16:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 2 19:16:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:16:30 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 2 19:16:30 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 2 19:16:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 2 19:16:31 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:16:31 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 19:16:31 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 19:16:31 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 19:16:31 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 19:16:31 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 19:16:31 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 19:16:31 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 19:16:31 $UPDATE_ACTIONS:  

 Player 2 19:16:32 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 19:16:33 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 19:16:38 $MOVE_CARD:  
{"moveIndex":8,"cardId":107,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 

 Player 1 19:16:38 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":107,"flipIfFlipped":true,"playerId":2} 

 Player 2 19:16:38 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":107} 

 Player 2 19:18:39 $SHOW_DECISION:  
{"startCardId":294,"endCardId":256} 

 Player 2 19:18:42 $NEXT_STACK_ID:  

 Player 2 19:18:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:18:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Leech"} 

 Player 2 19:18:42 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":294,"attackingPlayerCardId":294,"idOfCardBeingAttacked":256,"stackEffectType":4}} 

 Player 2 19:18:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Leech"} 

 Player 2 19:18:42 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":294,"attackingPlayerCardId":294,"idOfCardBeingAttacked":256,"stackEffectType":4}} 

 Player 2 19:18:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add DeclareAttack 2 "}} 

 Player 2 19:18:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:18:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Leech"} 

 Player 2 19:18:42 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":294,"attackingPlayerCardId":294,"idOfCardBeingAttacked":256,"stackEffectType":4}} 

 Player 2 19:18:42 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 19:18:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding DeclareAttack 2"},"childOfId":10} 

 Player 2 19:18:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 2 19:18:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:18:42 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 2 19:18:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 2 19:18:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:18:42 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:18:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:18:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:18:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Leech"} 

 Player 1 19:18:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Leech"} 

 Player 1 19:18:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Leech"} 

 Player 1 19:18:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Leech"} 

 Player 1 19:18:43 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:18:43 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 2 19:18:43 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 2 19:18:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve DeclareAttack 2 "}} 

 Player 2 19:18:43 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":256,"particleType":5} 

 Player 2 19:18:43 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":294,"scopeIsPlayer":true,"index":4,"originStackId":2},"isAfterActivation":true,"index":4} 

 Player 2 19:18:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Leech"} 

 Player 2 19:18:43 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":294,"attackingPlayerCardId":294,"idOfCardBeingAttacked":256,"stackEffectType":4}} 

 Player 2 19:18:43 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 19:18:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:18:43 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":294,"attackingPlayerCardId":294,"idOfCardBeingAttacked":256,"stackEffectType":4}} 

 Player 2 19:18:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve DeclareAttack 2  "}} 

 Player 2 19:18:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:18:43 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":294,"attackingPlayerCardId":294,"idOfCardBeingAttacked":256,"stackEffectType":4}} 

 Player 2 19:18:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve DeclareAttack 2"},"childOfId":15} 

 Player 2 19:18:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 2 19:18:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:18:43 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:18:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Leech"} 

 Player 1 19:18:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Leech"} 

 Player 1 19:18:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Leech"} 

 Player 1 19:18:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Leech"} 

 Player 1 19:18:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Leech"} 

 Player 1 19:18:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Leech"} 

 Player 1 19:18:43 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:18:43 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 19:18:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 2 19:18:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:18:44 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 2 19:18:44 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 2 19:18:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 2 19:18:44 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:18:44 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 19:18:44 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 19:18:44 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 19:18:44 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 19:18:44 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 19:18:44 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 19:18:44 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 19:18:44 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 19:18:44 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 19:18:44 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 19:18:44 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 19:18:45 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 19:18:45 $SHOW_DECISION:  
{"startCardId":107,"endCardId":107,"flipEndCard":true} 

 Player 2 19:18:46 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 19:18:48 $NEXT_STACK_ID:  

 Player 2 19:18:48 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:18:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Holy Card "} 

 Player 2 19:18:48 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":294,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":107,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 19:18:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Holy Card "} 

 Player 2 19:18:48 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":294,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":107,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 19:18:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add PlayLootCardStackEffect 3 "}} 

 Player 2 19:18:49 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":107} 

 Player 2 19:18:49 $MOVE_CARD:  
{"moveIndex":9,"cardId":107,"placeID":300,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 19:18:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:18:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:18:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Holy Card "} 

 Player 1 19:18:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Holy Card "} 

 Player 1 19:18:49 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":107,"flipIfFlipped":true,"playerId":2} 

 Player 2 19:18:49 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":107} 

 Player 2 19:18:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Holy Card: AddPassiveEffect"} 

 Player 2 19:18:51 $SHOW_DECISION:  
{"startCardId":107,"endCardId":294} 

 Player 2 19:18:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:18:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Holy Card: AddPassiveEffect"} 

 Player 2 19:18:54 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":294,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":107,"lootPlayerId":2,"effectToDo":{"effectName":"AddPassiveEffect","cardEffectNum":0,"cardPlayerId":2,"cardId":107,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 19:18:54 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 19:18:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding PlayLootCardStackEffect 3"},"childOfId":20} 

 Player 2 19:18:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 2 19:18:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:18:54 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 2 19:18:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 2 19:18:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:18:54 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:18:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Holy Card "} 

 Player 1 19:18:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Holy Card "} 

 Player 1 19:18:54 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:18:54 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 2 19:18:54 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 2 19:18:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve PlayLootCardStackEffect 3 "}} 

 Player 2 19:18:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Holy Card: AddPassiveEffect"} 

 Player 2 19:18:54 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":107,"particleType":6} 

 Player 2 19:18:56 $DISABLE_PARTICLE_EFFECT:  
{"cardId":107,"particleType":6} 

 Player 2 19:18:56 $REGISTER_ONE_TURN_PASSIVE_EFFECT:  
{"cardId":107,"effectIndex":{"type":3,"index":0},"conditionData":[{"effectTargets":[294],"chainEffectsData":[],"methodArgs":[],"isPassive":false,"effectCard":107,"effectCardOwner":107,"effectCardPlayer":107}]} 

 Player 2 19:18:56 $REMOVE_FROM_PILE:  
{"cardId":107} 

 Player 2 19:18:56 $MOVE_CARD:  
{"moveIndex":10,"cardId":107,"placeID":301,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 19:18:57 $MOVE_CARD_END:  
{"moveIndex":10,"cardId":107,"flipIfFlipped":true,"playerId":2} 

 Player 2 19:18:57 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":107} 

 Player 2 19:18:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Holy Card: AddPassiveEffect"} 

 Player 2 19:18:57 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":294,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":107,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 19:18:57 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 19:18:57 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:18:57 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":294,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":107,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 19:18:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Remove After Resolve PlayLootCardStackEffect 3  "}} 

 Player 2 19:18:57 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:18:57 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":294,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":107,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 19:18:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Response Remove After Resolve PlayLootCardStackEffect 3"},"childOfId":25} 

 Player 2 19:18:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Wait For Response From Player 1 "},"childOfId":25} 

 Player 2 19:18:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:18:57 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:18:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Holy Card "} 

 Player 1 19:18:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Holy Card "} 

 Player 1 19:18:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Holy Card "} 

 Player 1 19:18:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Holy Card "} 

 Player 1 19:18:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Holy Card "} 

 Player 1 19:18:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Holy Card "} 

 Player 1 19:18:57 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:18:57 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 2 19:18:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":25} 

 Player 2 19:18:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:18:58 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 2 19:18:58 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 2 19:18:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Stack Was Emptied "}} 

 Player 2 19:18:58 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:18:58 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 19:18:58 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 19:18:58 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 19:18:58 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 19:18:58 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 19:18:58 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 19:18:58 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 19:18:58 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 19:18:58 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 19:18:58 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 19:18:58 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 19:18:58 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 19:18:58 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 19:18:58 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 19:18:58 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 19:18:59 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 19:19:00 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 19:19:04 $NEXT_STACK_ID:  

 Player 2 19:19:04 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:19:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Leech<Monster>"} 

 Player 2 19:19:04 $ADD_TO_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":294,"rollingPlayerCardId":294,"stackEffectType":2,"attackedMonsterCardId":256}} 

 Player 2 19:19:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Leech<Monster>"} 

 Player 2 19:19:04 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":294,"rollingPlayerCardId":294,"stackEffectType":2,"attackedMonsterCardId":256}} 

 Player 2 19:19:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Add AttackRoll 4 "}} 

 Player 2 19:19:04 $ROLL_DICE:  
{"playerId":2} 

 Player 1 19:19:04 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:19:04 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:19:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Leech<Monster>"} 

 Player 1 19:19:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Leech<Monster>"} 

 Player 2 19:19:06 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":2} 

 Player 2 19:19:06 $UPDATE_STACK_VIS:  
{"stackId":4,"text":"player rolled 2 vs Leech<Monster>"} 

 Player 2 19:19:06 $SHOW_DICE_ROLL:  
{"stackId":4} 

 Player 2 19:19:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 2 vs Leech<Monster>"} 

 Player 2 19:19:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:19:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 2 vs Leech<Monster>"} 

 Player 2 19:19:09 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":294,"numberRolled":2,"rollingPlayerCardId":294,"stackEffectType":2,"attackedMonsterCardId":256}} 

 Player 2 19:19:09 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 19:19:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Response Adding AttackRoll 4"},"childOfId":30} 

 Player 2 19:19:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Wait For Response From Player 2 "},"childOfId":30} 

 Player 2 19:19:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:19:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Leech<Monster>"} 

 Player 1 19:19:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Leech<Monster>"} 

 Player 2 19:19:11 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 2 19:19:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":30} 

 Player 2 19:19:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:19:11 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:19:11 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:19:11 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 2 19:19:11 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 2 19:19:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Resolve AttackRoll 4 "}} 

 Player 2 19:19:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Added 0 to original roll"}} 

 Player 2 19:19:11 $NEXT_STACK_ID:  

 Player 2 19:19:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 2 vs Leech<Monster>"} 

 Player 2 19:19:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:19:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Maggy \n2:Player 2 rolled 2 vs Leech<Monster>"} 

 Player 2 19:19:11 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":294,"entityToDoDamageCardId":256,"entityToTakeDamageCardId":294,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 19:19:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Maggy \n2:Player 2 rolled 2 vs Leech<Monster>"} 

 Player 2 19:19:11 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":294,"numberRolled":2,"rollingPlayerCardId":294,"stackEffectType":2,"attackedMonsterCardId":256}} 

 Player 2 19:19:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Maggy \n2:Player 2 rolled 2 vs Leech<Monster>"} 

 Player 2 19:19:11 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":294,"entityToDoDamageCardId":256,"entityToTakeDamageCardId":294,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 19:19:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Maggy \n2:Player 2 rolled 2 vs Leech<Monster>"} 

 Player 2 19:19:11 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":294,"numberRolled":2,"rollingPlayerCardId":294,"stackEffectType":2,"attackedMonsterCardId":256}} 

 Player 2 19:19:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Maggy \n2:Player 2 rolled 2 vs Leech<Monster>"} 

 Player 2 19:19:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Maggy \n2:Player 2 rolled 2 vs Leech<Monster>"} 

 Player 2 19:19:11 $REPLACE_STACK:  
{"currentStack":[{"entityId":5,"creatorCardId":294,"entityToDoDamageCardId":256,"entityToTakeDamageCardId":294,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":4,"creatorCardId":294,"numberRolled":2,"rollingPlayerCardId":294,"stackEffectType":2,"attackedMonsterCardId":256}]} 

 Player 2 19:19:11 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":294,"scopeIsPlayer":true,"index":5,"originStackId":4},"isAfterActivation":true,"index":5} 

 Player 2 19:19:11 $NEXT_STACK_ID:  

 Player 2 19:19:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Maggy \n2:Player 2 rolled 2 vs Leech<Monster>"} 

 Player 2 19:19:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Maggy \n2:Player 2 rolled 2 vs Leech<Monster> \n3:Activate Holy Dip effect AddMoney<AddMoney>"} 

 Player 2 19:19:11 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":6,"creatorCardId":254,"hasLockingStackEffect":false,"cardActivatorId":254,"cardWithEffectId":254,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":254,"cardId":254,"effctType":0},"isAfterActivation":true,"index":5,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 19:19:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Maggy \n2:Player 2 rolled 2 vs Leech<Monster> \n3:Activate Holy Dip effect AddMoney<AddMoney>"} 

 Player 2 19:19:12 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":6,"creatorCardId":254,"hasLockingStackEffect":false,"cardActivatorId":254,"cardWithEffectId":254,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":254,"cardId":254,"effctType":0},"isAfterActivation":true,"index":5,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 19:19:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Add ActivatePassiveEffect 6 "}} 

 Player 2 19:19:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Maggy \n2:Player 2 rolled 2 vs Leech<Monster> \n3:Activate Holy Dip effect AddMoney<AddMoney>"} 

 Player 2 19:19:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Maggy \n2:Player 2 rolled 2 vs Leech<Monster> \n3:Activate Holy Dip effect AddMoney<AddMoney>"} 

 Player 2 19:19:12 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[294],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":254,"effectCardPlayer":254},"entityId":6,"creatorCardId":254,"hasLockingStackEffect":false,"cardActivatorId":254,"cardWithEffectId":254,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":254,"cardId":254,"effctType":0},"isAfterActivation":true,"index":5,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 19:19:12 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 2 19:19:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Response Adding ActivatePassiveEffect 6"},"childOfId":36} 

 Player 2 19:19:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 2 "},"childOfId":36} 

 Player 2 19:19:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:19:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Leech<Monster>"} 

 Player 1 19:19:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Leech<Monster>"} 

 Player 1 19:19:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Maggy"} 

 Player 1 19:19:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Maggy"} 

 Player 1 19:19:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Maggy"} 

 Player 1 19:19:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Maggy"} 

 Player 1 19:19:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Maggy"} 

 Player 1 19:19:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Maggy"} 

 Player 1 19:19:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Maggy"} 

 Player 1 19:19:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Maggy"} 

 Player 1 19:19:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Maggy"} 

 Player 1 19:19:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Maggy"} 

 Player 1 19:19:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Maggy \n2:Player 2 is rolling against Leech<Monster>"} 

 Player 1 19:19:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Maggy \n2:Player 2 is rolling against Leech<Monster>"} 

 Player 1 19:19:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Maggy \n2:Player 2 is rolling against Leech<Monster> \n3:Activate Holy Dip "} 

 Player 1 19:19:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Maggy \n2:Player 2 is rolling against Leech<Monster> \n3:Activate Holy Dip "} 

 Player 1 19:19:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Maggy \n2:Player 2 is rolling against Leech<Monster> \n3:Activate Holy Dip "} 

 Player 1 19:19:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Maggy \n2:Player 2 is rolling against Leech<Monster> \n3:Activate Holy Dip "} 

 Player 2 19:19:14 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 19:19:15 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 2 19:19:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Wait For Response From Player 1 "},"childOfId":36} 

 Player 2 19:19:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:19:15 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:19:15 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:19:15 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 19:19:15 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 2 19:19:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Resolve ActivatePassiveEffect 6 "}} 

 Player 2 19:19:15 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":254,"particleType":6} 

 Player 2 19:19:17 $DISABLE_PARTICLE_EFFECT:  
{"cardId":254,"particleType":6} 

 Player 2 19:19:17 $SET_MONEY:  
{"playerId":2,"numOfCoins":4} 

 Player 2 19:19:17 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":1}],"result":null,"preventMethod":false,"methodScopeId":294,"scopeIsPlayer":true,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 

 Player 2 19:19:18 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":294,"scopeIsPlayer":false,"index":5,"originStackId":4},"isAfterActivation":true,"index":5} 

 Player 2 19:19:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Maggy \n2:Player 2 rolled 2 vs Leech<Monster> \n3:Activate Holy Dip effect AddMoney<AddMoney>"} 

 Player 2 19:19:18 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[294],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":254,"effectCardPlayer":254},"entityId":6,"creatorCardId":254,"hasLockingStackEffect":false,"cardActivatorId":254,"cardWithEffectId":254,"isAfterActivation":true,"index":5,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 19:19:18 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 19:19:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Maggy \n2:Player 2 rolled 2 vs Leech<Monster>"} 

 Player 2 19:19:18 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[294],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":254,"effectCardPlayer":254},"entityId":6,"creatorCardId":254,"hasLockingStackEffect":false,"cardActivatorId":254,"cardWithEffectId":254,"isAfterActivation":true,"index":5,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 19:19:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Remove After Resolve ActivatePassiveEffect 6  "}} 

 Player 2 19:19:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Maggy \n2:Player 2 rolled 2 vs Leech<Monster>"} 

 Player 2 19:19:18 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[294],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":254,"effectCardPlayer":254},"entityId":6,"creatorCardId":254,"hasLockingStackEffect":false,"cardActivatorId":254,"cardWithEffectId":254,"isAfterActivation":true,"index":5,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 19:19:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Response Remove After Resolve ActivatePassiveEffect 6"},"childOfId":41} 

 Player 2 19:19:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 1 "},"childOfId":41} 

 Player 2 19:19:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:19:18 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:19:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Maggy \n2:Player 2 is rolling against Leech<Monster> \n3:Activate Holy Dip "} 

 Player 1 19:19:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Maggy \n2:Player 2 is rolling against Leech<Monster> \n3:Activate Holy Dip "} 

 Player 1 19:19:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Maggy \n2:Player 2 is rolling against Leech<Monster> \n3:Activate Holy Dip "} 

 Player 1 19:19:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Maggy \n2:Player 2 is rolling against Leech<Monster> \n3:Activate Holy Dip "} 

 Player 1 19:19:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Maggy \n2:Player 2 is rolling against Leech<Monster> \n3:Activate Holy Dip "} 

 Player 1 19:19:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Maggy \n2:Player 2 is rolling against Leech<Monster> \n3:Activate Holy Dip "} 

 Player 1 19:19:18 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:19:18 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 2 19:19:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Wait For Response From Player 2 "},"childOfId":41} 

 Player 2 19:19:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:19:20 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 2 19:19:23 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 19:19:23 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 2 19:19:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Resolve AttackRoll 4 "}} 

 Player 2 19:19:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Maggy \n2:Player 2 rolled 2 vs Leech<Monster>"} 

 Player 2 19:19:23 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":294,"numberRolled":2,"rollingPlayerCardId":294,"stackEffectType":2,"attackedMonsterCardId":256}} 

 Player 2 19:19:23 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 19:19:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Maggy"} 

 Player 2 19:19:23 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":294,"numberRolled":2,"rollingPlayerCardId":294,"stackEffectType":2,"attackedMonsterCardId":256}} 

 Player 2 19:19:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Remove After Resolve AttackRoll 4  "}} 

 Player 2 19:19:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Maggy"} 

 Player 2 19:19:23 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":294,"numberRolled":2,"rollingPlayerCardId":294,"stackEffectType":2,"attackedMonsterCardId":256}} 

 Player 2 19:19:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Response Remove After Resolve AttackRoll 4"},"childOfId":46} 

 Player 2 19:19:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Wait For Response From Player 2 "},"childOfId":46} 

 Player 2 19:19:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:19:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Maggy \n2:Player 2 is rolling against Leech<Monster>"} 

 Player 1 19:19:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Maggy \n2:Player 2 is rolling against Leech<Monster>"} 

 Player 1 19:19:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Maggy \n2:Player 2 is rolling against Leech<Monster>"} 

 Player 1 19:19:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Maggy \n2:Player 2 is rolling against Leech<Monster>"} 

 Player 1 19:19:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Maggy \n2:Player 2 is rolling against Leech<Monster>"} 

 Player 1 19:19:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Maggy \n2:Player 2 is rolling against Leech<Monster>"} 

 Player 2 19:19:26 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 2 19:19:28 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 2 19:19:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Wait For Response From Player 1 "},"childOfId":46} 

 Player 2 19:19:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:19:28 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:19:28 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:19:28 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 2 19:19:28 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 2 19:19:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Resolve CombatDamage 5 "}} 

 Player 2 19:19:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech 2 combat damage to Maggy"} 

 Player 2 19:19:29 $UPDATE_STACK_VIS:  
{"stackId":5,"text":"Leech will deal 2 combat damage to Maggy"} 

 Player 2 19:19:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech 2 combat damage to Maggy"} 

 Player 2 19:19:29 $PLAYER_GET_HIT:  
{"playerId":2,"damage":2,"damageDealerId":256} 

 Player 2 19:19:29 $NEXT_STACK_ID:  

 Player 2 19:19:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech 2 combat damage to Maggy"} 

 Player 2 19:19:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:19:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech 2 combat damage to Maggy \n2:Player 2 is about to die"} 

 Player 2 19:19:29 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":294,"playerToDieCardId":294,"stackEffectType":15,"killerId":256}} 

 Player 2 19:19:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech 2 combat damage to Maggy \n2:Player 2 is about to die"} 

 Player 2 19:19:29 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":294,"entityToDoDamageCardId":256,"entityToTakeDamageCardId":294,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 19:19:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech 2 combat damage to Maggy \n2:Player 2 is about to die"} 

 Player 2 19:19:29 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":294,"entityToDoDamageCardId":256,"entityToTakeDamageCardId":294,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 19:19:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech 2 combat damage to Maggy \n2:Player 2 is about to die"} 

 Player 2 19:19:29 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":294,"playerToDieCardId":294,"stackEffectType":15,"killerId":256}} 

 Player 2 19:19:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech 2 combat damage to Maggy \n2:Player 2 is about to die"} 

 Player 2 19:19:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech 2 combat damage to Maggy \n2:Player 2 is about to die"} 

 Player 2 19:19:29 $REPLACE_STACK:  
{"currentStack":[{"entityId":5,"creatorCardId":294,"entityToDoDamageCardId":256,"entityToTakeDamageCardId":294,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":7,"creatorCardId":294,"playerToDieCardId":294,"stackEffectType":15,"killerId":256}]} 

 Player 2 19:19:29 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":256}],"result":null,"preventMethod":false,"methodScopeId":294,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 

 Player 2 19:19:29 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 2 19:19:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 19:19:29 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":294,"entityToDoDamageCardId":256,"entityToTakeDamageCardId":294,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 19:19:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Remove After Resolve CombatDamage 5  "}} 

 Player 2 19:19:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 19:19:29 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":294,"entityToDoDamageCardId":256,"entityToTakeDamageCardId":294,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 19:19:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Response Remove After Resolve CombatDamage 5"},"childOfId":51} 

 Player 2 19:19:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Wait For Response From Player 2 "},"childOfId":51} 

 Player 2 19:19:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:19:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Maggy"} 

 Player 1 19:19:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Maggy"} 

 Player 1 19:19:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 19:19:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 19:19:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 19:19:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 19:19:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 19:19:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 19:19:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 19:19:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 19:19:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 19:19:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 19:19:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Maggy \n2:Player 2 is about to die"} 

 Player 1 19:19:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Maggy \n2:Player 2 is about to die"} 

 Player 1 19:19:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Maggy \n2:Player 2 is about to die"} 

 Player 1 19:19:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Maggy \n2:Player 2 is about to die"} 

 Player 2 19:19:31 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 2 19:19:32 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 2 19:19:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Wait For Response From Player 1 "},"childOfId":51} 

 Player 2 19:19:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:19:32 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:19:32 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:19:33 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 2 19:19:33 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 2 19:19:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Resolve PlayerDeath 7 "}} 

 Player 2 19:19:33 $DISABLE_PARTICLE_EFFECT:  
{"cardId":256,"particleType":5} 

 Player 2 19:19:33 $CANCEL_ATTACK:  

 Player 2 19:19:33 $NEXT_STACK_ID:  

 Player 2 19:19:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 19:19:33 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_PAY_DEATH_PANELTIES","args":[],"result":null,"preventMethod":false,"methodScopeId":294,"scopeIsPlayer":true,"index":1,"originStackId":8},"isAfterActivation":false,"index":1} 

 Player 2 19:19:33 $NEXT_STACK_ID:  

 Player 2 19:19:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 

 Player 2 19:19:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate Holy Card effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 2 19:19:33 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":9,"creatorCardId":294,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":107,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":107,"effctType":3},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 19:19:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate Holy Card effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 2 19:19:33 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":9,"creatorCardId":294,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":107,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":107,"effctType":3},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 19:19:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":56,"_text":"Add ActivatePassiveEffect 9 "}} 

 Player 2 19:19:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate Holy Card effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 2 19:19:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate Holy Card effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 2 19:19:33 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":9,"creatorCardId":294,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":107,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":107,"effctType":3},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 19:19:33 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 2 19:19:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":57,"_text":"Response Adding ActivatePassiveEffect 9"},"childOfId":56} 

 Player 2 19:19:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":58,"_text":"Wait For Response From Player 1 "},"childOfId":56} 

 Player 2 19:19:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:19:33 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:19:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 19:19:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 19:19:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Activate Holy Card "} 

 Player 1 19:19:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Activate Holy Card "} 

 Player 1 19:19:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Activate Holy Card "} 

 Player 1 19:19:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Activate Holy Card "} 

 Player 1 19:19:33 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:19:33 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 2 19:19:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":59,"_text":"Wait For Response From Player 2 "},"childOfId":56} 

 Player 2 19:19:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:19:35 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 2 19:19:35 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 2 19:19:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":60,"_text":"Resolve ActivatePassiveEffect 9 "}} 

 Player 2 19:19:35 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":107,"particleType":6} 

 Player 2 19:19:37 $DISABLE_PARTICLE_EFFECT:  
{"cardId":107,"particleType":6} 

 Player 2 19:19:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Activate Holy Card effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 2 19:19:37 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":294,"playerToPayCardId":294,"stackEffectType":16}} 

 Player 2 19:19:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":61,"_text":"Fizzle PlayerDeathPenalties 8"}} 

 Player 2 19:19:37 $FIZZLE_STACK_EFFECT:  
{"entityId":8} 

 Player 2 19:19:37 $PLAYER_HEAL:  
{"playerId":2,"hpToHeal":2,"healDown":true} 

 Player 2 19:19:37 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_PAY_DEATH_PANELTIES","args":[],"result":null,"preventMethod":true,"methodScopeId":294,"scopeIsPlayer":true,"index":1,"originStackId":8},"isAfterActivation":false,"index":1} 

 Player 2 19:19:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Activate Holy Card effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 2 19:19:37 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":9,"creatorCardId":294,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":107,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 19:19:37 $ACTION_MASSAGE_REMOVE:  
{"id":60} 

 Player 2 19:19:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 19:19:37 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":9,"creatorCardId":294,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":107,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 19:19:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":62,"_text":"Remove After Resolve ActivatePassiveEffect 9  "}} 

 Player 2 19:19:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 19:19:37 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":9,"creatorCardId":294,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":107,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 19:19:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":63,"_text":"Response Remove After Resolve ActivatePassiveEffect 9"},"childOfId":62} 

 Player 2 19:19:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":64,"_text":"Wait For Response From Player 2 "},"childOfId":62} 

 Player 2 19:19:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:19:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Activate Holy Card "} 

 Player 1 19:19:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Activate Holy Card "} 

 Player 1 19:19:37 $PLAYER_HEAL:  
{"playerId":2,"hpToHeal":2} 

 Player 1 19:19:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Activate Holy Card "} 

 Player 1 19:19:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Activate Holy Card "} 

 Player 1 19:19:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Activate Holy Card "} 

 Player 1 19:19:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Activate Holy Card "} 

 Player 1 19:19:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Activate Holy Card "} 

 Player 1 19:19:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Activate Holy Card "} 

 Player 2 19:19:40 $ACTION_MASSAGE_REMOVE:  
{"id":61} 

 Player 2 19:19:40 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 2 19:20:31 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 2 19:20:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":65,"_text":"Wait For Response From Player 1 "},"childOfId":62} 

 Player 2 19:20:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:20:31 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:20:31 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:20:31 $ACTION_MASSAGE_REMOVE:  
{"id":65} 

 Player 2 19:20:31 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 2 19:20:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":66,"_text":"Resolve PlayerDeath 7 "}} 

 Player 2 19:20:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 19:20:31 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":294,"playerToPayCardId":294,"stackEffectType":16}} 

 Player 2 19:20:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 19:20:31 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":294,"playerToDieCardId":294,"stackEffectType":15,"killerId":256}} 

 Player 2 19:20:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 19:20:31 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":294,"playerToDieCardId":294,"stackEffectType":15,"killerId":256}} 

 Player 2 19:20:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 19:20:31 $REPLACE_STACK:  
{"currentStack":[{"entityId":7,"creatorCardId":294,"playerToDieCardId":294,"stackEffectType":15,"killerId":256}]} 

 Player 2 19:20:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 19:20:31 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":294,"playerToDieCardId":294,"stackEffectType":15,"killerId":256}} 

 Player 2 19:20:31 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 2 19:20:31 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:20:31 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":294,"playerToDieCardId":294,"stackEffectType":15,"killerId":256}} 

 Player 2 19:20:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":67,"_text":"Remove After Resolve PlayerDeath 7  "}} 

 Player 2 19:20:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:20:32 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":294,"playerToDieCardId":294,"stackEffectType":15,"killerId":256}} 

 Player 2 19:20:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":68,"_text":"Response Remove After Resolve PlayerDeath 7"},"childOfId":67} 

 Player 2 19:20:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":69,"_text":"Wait For Response From Player 1 "},"childOfId":67} 

 Player 2 19:20:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:20:32 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:20:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 19:20:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 19:20:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to pay death penalties"} 

 Player 1 19:20:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to pay death penalties"} 

 Player 1 19:20:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to pay death penalties"} 

 Player 1 19:20:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to pay death penalties"} 

 Player 1 19:20:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to pay death penalties"} 

 Player 1 19:20:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to pay death penalties"} 

 Player 1 19:20:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 19:20:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 19:20:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 19:20:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 19:20:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 19:20:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 19:20:32 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:20:32 $ACTION_MASSAGE_REMOVE:  
{"id":69} 

 Player 2 19:20:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":70,"_text":"Wait For Response From Player 2 "},"childOfId":67} 

 Player 2 19:20:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:20:32 $ACTION_MASSAGE_REMOVE:  
{"id":70} 

 Player 2 19:20:32 $ACTION_MASSAGE_REMOVE:  
{"id":68} 

 Player 2 19:20:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":71,"_text":"Stack Was Emptied "}} 

 Player 2 19:20:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:20:32 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 19:20:32 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 19:20:32 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 19:20:32 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 19:20:32 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 19:20:33 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 19:20:33 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 19:20:33 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 19:20:33 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 19:20:33 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 19:20:33 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 19:20:33 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 19:20:33 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 19:20:33 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 19:20:33 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 19:20:33 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 19:20:33 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 19:20:33 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 19:20:33 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 2 19:20:33 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 19:20:33 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 2 19:20:33 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 2 19:20:33 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 2 19:20:33 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 2 19:20:33 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 2 19:20:33 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 2 19:20:33 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 2 19:20:33 $ACTION_MASSAGE_REMOVE:  
{"id":60} 

 Player 2 19:20:33 $ACTION_MASSAGE_REMOVE:  
{"id":61} 

 Player 2 19:20:33 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 2 19:20:33 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 2 19:20:33 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 2 19:20:33 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 2 19:20:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:20:33 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:20:33 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 19:20:33 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 19:20:33 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 19:20:33 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 19:20:33 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 19:20:33 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 19:20:33 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 19:20:33 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 19:20:33 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 19:20:33 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 19:20:34 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 19:20:34 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 19:20:34 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 19:20:34 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 19:20:34 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 19:20:34 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 19:20:34 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 19:20:34 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 19:20:34 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 2 19:20:34 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 19:20:34 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 2 19:20:34 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 2 19:20:34 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 2 19:20:34 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 2 19:20:34 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 2 19:20:34 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 2 19:20:34 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 2 19:20:34 $ACTION_MASSAGE_REMOVE:  
{"id":60} 

 Player 2 19:20:34 $ACTION_MASSAGE_REMOVE:  
{"id":61} 

 Player 2 19:20:34 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 2 19:20:34 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 2 19:20:34 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 2 19:20:34 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 2 19:20:34 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 2 19:20:34 $END_TURN:  

 Player 2 19:20:34 $SET_TURN:  
{"playerId":1} 

 Player 2 19:20:34 $START_TURN:  
{"playerId":1} 

 Player 2 19:20:34 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 2 19:20:34 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 1 19:20:34 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 19:20:34 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:20:34 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 19:20:34 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 19:20:34 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 19:20:34 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 19:20:34 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 19:20:35 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 19:20:35 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 19:20:35 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 19:20:35 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 19:20:35 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 19:20:35 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 19:20:35 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 19:20:35 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 19:20:35 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 19:20:35 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 1 19:20:35 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 19:20:35 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 1 19:20:35 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 1 19:20:35 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 1 19:20:35 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 1 19:20:35 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 1 19:20:35 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 1 19:20:35 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 1 19:20:35 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 1 19:20:35 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 1 19:20:35 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 1 19:20:35 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 1 19:20:35 $ACTION_MASSAGE_REMOVE:  
{"id":60} 

 Player 1 19:20:35 $ACTION_MASSAGE_REMOVE:  
{"id":61} 

 Player 1 19:20:35 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 1 19:20:35 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 1 19:20:35 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 1 19:20:35 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 1 19:20:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:20:35 $NEXT_STACK_ID:  

 Player 1 19:20:35 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:20:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 19:20:35 $ADD_TO_STACK:  
{"stackEffect":{"entityId":10,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 1 19:20:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 19:20:35 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 1 19:20:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":72,"_text":"Add StartTurnLoot 10 "}} 

 Player 1 19:20:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:20:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 19:20:35 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 1 19:20:35 $ACTION_MASSAGE_REMOVE:  
{"id":72} 

 Player 1 19:20:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":73,"_text":"Response Adding StartTurnLoot 10"},"childOfId":72} 

 Player 1 19:20:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":74,"_text":"Wait For Response From Player 1 "},"childOfId":72} 

 Player 1 19:20:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:20:36 $ACTION_MASSAGE_REMOVE:  
{"id":74} 

 Player 1 19:20:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":75,"_text":"Wait For Response From Player 2 "},"childOfId":72} 

 Player 1 19:20:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:20:36 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:20:36 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 19:20:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:20:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:20:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:20:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:20:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:20:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:20:36 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:20:36 $ACTION_MASSAGE_REMOVE:  
{"id":75} 

 Player 1 19:20:36 $ACTION_MASSAGE_REMOVE:  
{"id":73} 

 Player 1 19:20:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":76,"_text":"Resolve StartTurnLoot 10 "}} 

 Player 1 19:20:36 $DRAW_CARD:  
{"deckType":1} 

 Player 1 19:20:36 $MOVE_CARD:  
{"moveIndex":11,"cardId":91,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 19:20:36 $MOVE_CARD_END:  
{"moveIndex":11,"cardId":91,"flipIfFlipped":false,"playerId":1} 

 Player 1 19:20:36 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":91} 

 Player 1 19:20:36 $FLIP_CARD:  
{"cardId":91} 

 Player 1 19:20:36 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":91} 

 Player 1 19:20:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 19:20:37 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 1 19:20:37 $ACTION_MASSAGE_REMOVE:  
{"id":76} 

 Player 1 19:20:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:20:37 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 1 19:20:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":77,"_text":"Remove After Resolve StartTurnLoot 10  "}} 

 Player 1 19:20:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:20:37 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":10,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 1 19:20:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":78,"_text":"Response Remove After Resolve StartTurnLoot 10"},"childOfId":77} 

 Player 1 19:20:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":79,"_text":"Wait For Response From Player 2 "},"childOfId":77} 

 Player 1 19:20:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:20:37 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:20:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:20:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:20:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:20:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:20:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:20:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:20:37 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:20:37 $ACTION_MASSAGE_REMOVE:  
{"id":79} 

 Player 1 19:20:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":80,"_text":"Wait For Response From Player 1 "},"childOfId":77} 

 Player 1 19:20:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:20:37 $ACTION_MASSAGE_REMOVE:  
{"id":80} 

 Player 1 19:20:37 $ACTION_MASSAGE_REMOVE:  
{"id":78} 

 Player 1 19:20:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":81,"_text":"Stack Was Emptied "}} 

 Player 1 19:20:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:20:37 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 19:20:37 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 19:20:37 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 19:20:37 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 19:20:37 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 19:20:37 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 19:20:37 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 19:20:37 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 19:20:37 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 19:20:37 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 19:20:38 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 19:20:38 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 19:20:38 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 19:20:38 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 19:20:38 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 1 19:20:38 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 19:20:38 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 1 19:20:38 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 1 19:20:38 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 1 19:20:38 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 1 19:20:38 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 1 19:20:38 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 1 19:20:38 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 1 19:20:38 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 1 19:20:38 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 1 19:20:38 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 1 19:20:38 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 1 19:20:38 $ACTION_MASSAGE_REMOVE:  
{"id":60} 

 Player 1 19:20:38 $ACTION_MASSAGE_REMOVE:  
{"id":61} 

 Player 1 19:20:38 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 1 19:20:38 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 1 19:20:38 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 1 19:20:38 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 1 19:20:38 $ACTION_MASSAGE_REMOVE:  
{"id":72} 

 Player 1 19:20:38 $ACTION_MASSAGE_REMOVE:  
{"id":76} 

 Player 1 19:20:38 $ACTION_MASSAGE_REMOVE:  
{"id":77} 

 Player 1 19:20:38 $ACTION_MASSAGE_REMOVE:  
{"id":81} 

 Player 1 19:20:39 $ACTION_MASSAGE_REMOVE:  
{"id":81} 

 Player 1 19:20:39 $ACTION_MASSAGE_REMOVE:  
{"id":77} 

 Player 2 19:32:38 $MATCH: 