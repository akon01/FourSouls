Start Log 

 Player 1 06:17:49 $MATCH:  

 Player 1 06:17:49 $START_GAME:  

 Player 2 06:17:49 $MOVE_TO_TABLE:  

 Player 1 06:17:49 $MOVE_TO_TABLE:  

 Player 2 06:17:58 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 1 06:17:58 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 06:17:58 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":262,"itemCardId":263} 

 Player 2 06:17:58 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":273}],"result":true,"preventMethod":false,"methodScopeId":272,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 06:17:58 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":272,"itemCardId":273} 

 Player 2 06:17:58 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[28,98,71,100,99,128,18,11,33,107,22,120,140,127,78,36,130,112,23,86,123,54,135,15,73,91,39,134,7,46,20,89,62,82,84,119,60,38,113,90,9,66,102,109,48,118,17,117,63,30,106,65,81,108,14,40,19,76,27,110,41,126,96,72,13,125,138,137,37,131,32,83,70,97,75,85,93,142,10,94,12,21,121,104,42,57,16,58,116,47,56,136,92,35,45,88,53,139,50,103,143,74,8,95,124,52,59,43,115,80,29,87,64,132,111,25,68,24,105,31,141,114,79,26,34,122,101,67,61,49,129,69,44,77,55,133,51]} 

 Player 2 06:17:58 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[209,258,222,227,246,252,225,239,244,215,214,221,251,216,212,220,243,213,232,257,249,245,241,253,230,206,223,207,259,219,218,231,211,237,234,250,254,210,248,255,256,240,217,238,233,236,242,235,208,228,247,229,224,226]} 

 Player 2 06:17:58 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[156,201,152,195,165,175,176,173,170,189,179,160,191,188,166,178,203,161,197,202,190,180,200,185,199,162,157,151,149,169,167,193,183,182,148,196,186,153,198,158,164,168,146,154,181,194,177,159,174,187,184,192,171,155,147,150,172,163]} 

 Player 2 06:17:58 $DRAW_CARD:  
{"deckType":5} 

 Player 2 06:17:58 $FLIP_CARD:  
{"cardId":163} 

 Player 2 06:17:58 $ADD_STORE_CARD:  
{"cardId":163} 

 Player 2 06:17:58 $DRAW_CARD:  
{"deckType":5} 

 Player 2 06:17:58 $FLIP_CARD:  
{"cardId":172} 

 Player 2 06:17:58 $ADD_STORE_CARD:  
{"cardId":172} 

 Player 2 06:17:58 $DRAW_CARD:  
{"deckType":2} 

 Player 2 06:17:58 $FLIP_CARD:  
{"cardId":226} 

 Player 2 06:17:58 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":226} 

 Player 2 06:17:58 $NEW_MONSTER_ON_PLACE:  
{"cardId":226,"monsterPlaceId":1} 

 Player 2 06:17:58 $DRAW_CARD:  
{"deckType":2} 

 Player 2 06:17:58 $FLIP_CARD:  
{"cardId":224} 

 Player 2 06:17:58 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":224} 

 Player 2 06:17:58 $NEW_MONSTER_ON_PLACE:  
{"cardId":224,"monsterPlaceId":2} 

 Player 2 06:17:58 $CHANGE_MONEY:  
{"playerId":1,"numOfCoins":3,"isStartGame":true} 

 Player 2 06:17:58 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":262,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 06:17:58 $DRAW_CARD:  
{"deckType":1} 

 Player 2 06:17:59 $MOVE_CARD:  
{"moveIndex":1,"cardId":51,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 06:17:59 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":263}],"result":true,"preventMethod":false,"methodScopeId":262,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 06:17:59 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":51,"flipIfFlipped":false,"playerId":2} 

 Player 2 06:17:59 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":51} 

 Player 2 06:17:59 $FLIP_CARD:  
{"cardId":51} 

 Player 2 06:17:59 $FLIP_CARD:  
{"cardId":51} 

 Player 2 06:17:59 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":51} 

 Player 2 06:17:59 $DRAW_CARD:  
{"deckType":1} 

 Player 2 06:17:59 $MOVE_CARD:  
{"moveIndex":2,"cardId":133,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 06:18:00 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":133,"flipIfFlipped":false,"playerId":2} 

 Player 2 06:18:00 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":133} 

 Player 2 06:18:00 $FLIP_CARD:  
{"cardId":133} 

 Player 2 06:18:00 $FLIP_CARD:  
{"cardId":133} 

 Player 2 06:18:00 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":133} 

 Player 2 06:18:00 $DRAW_CARD:  
{"deckType":1} 

 Player 2 06:18:00 $MOVE_CARD:  
{"moveIndex":3,"cardId":55,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 06:18:00 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":55,"flipIfFlipped":false,"playerId":2} 

 Player 2 06:18:00 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":55} 

 Player 2 06:18:00 $FLIP_CARD:  
{"cardId":55} 

 Player 2 06:18:00 $FLIP_CARD:  
{"cardId":55} 

 Player 2 06:18:00 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":55} 

 Player 2 06:18:00 $CHANGE_MONEY:  
{"playerId":2,"numOfCoins":3,"isStartGame":true} 

 Player 2 06:18:00 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":272,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 06:18:00 $DRAW_CARD:  
{"deckType":1} 

 Player 2 06:18:00 $MOVE_CARD:  
{"moveIndex":4,"cardId":77,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 06:18:01 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":77,"flipIfFlipped":false,"playerId":2} 

 Player 2 06:18:01 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":77} 

 Player 2 06:18:01 $FLIP_CARD:  
{"cardId":77} 

 Player 2 06:18:01 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":77} 

 Player 2 06:18:01 $DRAW_CARD:  
{"deckType":1} 

 Player 2 06:18:01 $MOVE_CARD:  
{"moveIndex":5,"cardId":44,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 06:18:01 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":44,"flipIfFlipped":false,"playerId":2} 

 Player 2 06:18:01 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":44} 

 Player 2 06:18:01 $FLIP_CARD:  
{"cardId":44} 

 Player 2 06:18:01 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":44} 

 Player 2 06:18:01 $DRAW_CARD:  
{"deckType":1} 

 Player 2 06:18:01 $MOVE_CARD:  
{"moveIndex":6,"cardId":69,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 06:18:02 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":69,"flipIfFlipped":false,"playerId":2} 

 Player 2 06:18:02 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":69} 

 Player 2 06:18:02 $FLIP_CARD:  
{"cardId":69} 

 Player 2 06:18:02 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":69} 

 Player 2 06:18:02 $GAME_HAS_STARTED:  

 Player 2 06:18:02 $SET_TURN:  
{"playerId":2} 

 Player 2 06:18:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 06:18:02 $NEXT_STACK_ID:  

 Player 2 06:18:02 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 06:18:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 06:18:02 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":272,"turnPlayerCardId":272,"stackEffectType":13}} 

 Player 2 06:18:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 2 06:18:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 06:18:02 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 06:18:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 06:18:02 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":272,"turnPlayerCardId":272,"stackEffectType":13}} 

 Player 2 06:18:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 2 06:18:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 2 06:18:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 06:18:02 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 06:18:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 2 06:18:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 06:18:02 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 06:18:03 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 06:18:03 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 06:18:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 06:18:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 06:18:03 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 06:18:03 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 06:18:03 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 06:18:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 2 06:18:03 $DRAW_CARD:  
{"deckType":1} 

 Player 2 06:18:03 $MOVE_CARD:  
{"moveIndex":7,"cardId":129,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 06:18:03 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":129,"flipIfFlipped":false,"playerId":2} 

 Player 2 06:18:03 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":129} 

 Player 2 06:18:03 $FLIP_CARD:  
{"cardId":129} 

 Player 2 06:18:03 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":129} 

 Player 2 06:18:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 06:18:03 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":272,"turnPlayerCardId":272,"stackEffectType":13}} 

 Player 2 06:18:03 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 06:18:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 2 06:18:03 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 06:18:04 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":272,"turnPlayerCardId":272,"stackEffectType":13}} 

 Player 2 06:18:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 2 06:18:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 2 06:18:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 06:18:04 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 06:18:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 06:18:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 06:18:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 06:18:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 06:18:04 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 06:18:04 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 2 06:18:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 2 06:18:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 06:18:04 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 2 06:18:04 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 2 06:18:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 2 06:18:04 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 06:18:04 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 06:18:04 $UPDATE_ACTIONS:  

 Player 2 06:18:05 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 06:18:06 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 06:40:59 $MOVE_CARD:  
{"moveIndex":8,"cardId":175,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 

 Player 1 06:41:00 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":175,"flipIfFlipped":true,"playerId":2} 

 Player 2 06:41:00 $REGISTER_PASSIVE_ITEM:  
{"cardId":175} 

 Player 2 06:41:00 $MOVE_CARD:  
{"moveIndex":9,"cardId":175,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 

 Player 1 06:41:00 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":175,"flipIfFlipped":true,"playerId":2} 

 Player 2 06:41:00 $ADD_AN_ITEM:  
{"playerId":2,"cardId":175,"isReward":true} 

 Player 2 06:41:00 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":175}],"result":true,"preventMethod":false,"methodScopeId":272,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 2 06:41:08 $MOVE_CARD:  
{"moveIndex":10,"cardId":148,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 

 Player 1 06:41:08 $MOVE_CARD_END:  
{"moveIndex":10,"cardId":148,"flipIfFlipped":true,"playerId":2} 

 Player 2 06:41:08 $MOVE_CARD:  
{"moveIndex":11,"cardId":148,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 

 Player 1 06:41:09 $MOVE_CARD_END:  
{"moveIndex":11,"cardId":148,"flipIfFlipped":true,"playerId":2} 

 Player 2 06:41:09 $ADD_AN_ITEM:  
{"playerId":2,"cardId":148,"isReward":true} 

 Player 2 06:41:09 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":148}],"result":true,"preventMethod":false,"methodScopeId":272,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 2 06:41:11 $NEXT_STACK_ID:  

 Player 2 06:41:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 06:41:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Boomerang"} 

 Player 2 06:41:11 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":272,"hasLockingStackEffect":false,"itemToPlayCardId":148,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 06:41:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add ActivateItem 2 "}} 

 Player 1 06:41:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 06:41:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 06:41:14 $USE_ITEM:  
{"cardId":148} 

 Player 2 06:41:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 06:41:14 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 06:41:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Boomerang"} 

 Player 2 06:41:14 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":272,"hasLockingStackEffect":false,"itemToPlayCardId":148,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 06:41:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding ActivateItem 2"},"childOfId":10} 

 Player 2 06:41:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 2 06:41:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 06:41:14 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 2 06:41:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 2 06:41:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 06:41:14 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 06:41:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Boomerang"} 

 Player 1 06:41:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Boomerang"} 

 Player 1 06:41:14 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 06:41:14 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 2 06:41:14 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 2 06:41:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve ActivateItem 2 "}} 

 Player 2 06:41:14 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":148,"particleType":6} 

 Player 2 06:41:16 $DISABLE_PARTICLE_EFFECT:  
{"cardId":148,"particleType":6} 

 Player 2 06:41:16 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":133} 

 Player 2 06:41:16 $MOVE_CARD:  
{"moveIndex":12,"cardId":133,"placeID":2,"flipIfFlipped":false,"playerId":2,"placeType":"Hand"} 

 Player 1 06:41:17 $MOVE_CARD_END:  
{"moveIndex":12,"cardId":133,"flipIfFlipped":false,"playerId":2} 

 Player 2 06:41:17 $FLIP_CARD:  
{"cardId":133} 

 Player 2 06:41:17 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":133} 

 Player 2 06:41:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Boomerang"} 

 Player 2 06:41:17 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":272,"hasLockingStackEffect":false,"itemToPlayCardId":148,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 06:41:17 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 06:41:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve ActivateItem 2  "}} 

 Player 2 06:41:17 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 06:41:17 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":272,"hasLockingStackEffect":false,"itemToPlayCardId":148,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 06:41:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve ActivateItem 2"},"childOfId":15} 

 Player 2 06:41:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 2 06:41:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 06:41:17 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 06:41:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Boomerang"} 

 Player 1 06:41:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Boomerang"} 

 Player 1 06:41:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Boomerang"} 

 Player 1 06:41:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Boomerang"} 

 Player 1 06:41:17 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 06:41:17 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 06:41:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 2 06:41:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 06:41:17 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 2 06:41:17 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 2 06:41:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 2 06:41:18 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 06:41:18 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 06:41:19 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 06:41:20 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 06:41:33 $MOVE_CARD:  
{"moveIndex":13,"cardId":109,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 

 Player 1 06:41:33 $MOVE_CARD_END:  
{"moveIndex":13,"cardId":109,"flipIfFlipped":true,"playerId":2} 

 Player 2 06:41:33 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":109} 

 Player 2 06:41:36 $NEXT_STACK_ID:  

 Player 2 06:41:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 06:41:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Joker "} 

 Player 2 06:41:36 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":272,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":109,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 06:41:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add PlayLootCardStackEffect 3 "}} 

 Player 2 06:41:36 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":109} 

 Player 2 06:41:36 $MOVE_CARD:  
{"moveIndex":14,"cardId":109,"placeID":278,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 06:41:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 06:41:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 06:41:37 $MOVE_CARD_END:  
{"moveIndex":14,"cardId":109,"flipIfFlipped":true,"playerId":2} 

 Player 2 06:41:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Joker: ChainEffects"} 

 Player 2 06:41:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Joker: ChainEffects"} 

 Player 2 06:41:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 06:41:39 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 06:41:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Joker: ChainEffects"} 

 Player 2 06:41:39 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":272,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":109,"lootPlayerId":2,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":109,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 06:41:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding PlayLootCardStackEffect 3"},"childOfId":20} 

 Player 2 06:41:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 2 06:41:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 06:41:39 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 2 06:41:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 2 06:41:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 06:41:40 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 06:41:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Joker "} 

 Player 1 06:41:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Joker "} 

 Player 1 06:41:40 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 06:41:40 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 2 06:41:40 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 2 06:41:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve PlayLootCardStackEffect 3 "}} 

 Player 2 06:41:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Joker: ChainEffects"} 

 Player 2 06:41:40 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":109,"particleType":6} 

 Player 2 06:41:42 $DISABLE_PARTICLE_EFFECT:  
{"cardId":109,"particleType":6} 

 Player 2 06:41:46 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":262} 

 Player 2 06:41:46 $MOVE_CARD:  
{"moveIndex":15,"cardId":262,"placeID":2,"flipIfFlipped":false,"playerId":2,"placeType":"Hand"} 

 Player 1 06:41:47 $MOVE_CARD_END:  
{"moveIndex":15,"cardId":262,"flipIfFlipped":false,"playerId":2} 

 Player 2 06:41:47 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":262} 

 Player 2 06:41:47 $MOVE_CARD:  
{"moveIndex":16,"cardId":109,"placeID":279,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 06:41:47 $MOVE_CARD_END:  
{"moveIndex":16,"cardId":109,"flipIfFlipped":true,"playerId":2} 

 Player 2 06:41:47 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":109} 

 Player 2 06:41:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Joker: ChainEffects"} 

 Player 2 06:41:47 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":272,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":109,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 06:41:47 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 06:41:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Remove After Resolve PlayLootCardStackEffect 3  "}} 

 Player 2 06:41:47 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 06:41:47 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":272,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":109,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 06:41:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Response Remove After Resolve PlayLootCardStackEffect 3"},"childOfId":25} 

 Player 2 06:41:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Wait For Response From Player 1 "},"childOfId":25} 

 Player 2 06:41:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 06:41:47 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 06:41:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Joker "} 

 Player 1 06:41:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Joker "} 

 Player 1 06:41:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Joker "} 

 Player 1 06:41:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Joker "} 

 Player 1 06:41:48 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 06:41:48 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 2 06:41:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":25} 

 Player 2 06:41:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 06:41:48 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 2 06:41:48 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 2 06:41:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Stack Was Emptied "}} 

 Player 2 06:41:48 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 06:41:48 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 06:41:49 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 06:41:50 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 06:44:26 $PLAYER_GAIN_DMG:  
{"playerId":2,"DMGToGain":5,"isTemp":true} 

 Player 2 06:44:29 $NEXT_STACK_ID:  

 Player 2 06:44:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 06:44:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fatty"} 

 Player 2 06:44:29 $ADD_TO_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":272,"attackingPlayerCardId":272,"idOfCardBeingAttacked":224,"stackEffectType":4}} 

 Player 2 06:44:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Add DeclareAttack 4 "}} 

 Player 2 06:44:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 06:44:30 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 06:44:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fatty"} 

 Player 2 06:44:30 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":272,"attackingPlayerCardId":272,"idOfCardBeingAttacked":224,"stackEffectType":4}} 

 Player 2 06:44:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Response Adding DeclareAttack 4"},"childOfId":30} 

 Player 2 06:44:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Wait For Response From Player 2 "},"childOfId":30} 

 Player 2 06:44:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 06:44:30 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 2 06:44:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":30} 

 Player 2 06:44:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 06:44:30 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 06:44:30 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 06:44:30 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 06:44:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fatty"} 

 Player 1 06:44:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fatty"} 

 Player 1 06:44:30 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 06:44:30 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 2 06:44:30 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 2 06:44:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Resolve DeclareAttack 4 "}} 

 Player 2 06:44:30 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":224,"particleType":5} 

 Player 2 06:44:30 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":272,"scopeIsPlayer":true,"index":6,"originStackId":4},"isAfterActivation":true,"index":6} 

 Player 2 06:44:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fatty"} 

 Player 2 06:44:30 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":272,"attackingPlayerCardId":272,"idOfCardBeingAttacked":224,"stackEffectType":4}} 

 Player 2 06:44:30 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 06:44:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Remove After Resolve DeclareAttack 4  "}} 

 Player 2 06:44:30 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 06:44:30 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":272,"attackingPlayerCardId":272,"idOfCardBeingAttacked":224,"stackEffectType":4}} 

 Player 2 06:44:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Response Remove After Resolve DeclareAttack 4"},"childOfId":35} 

 Player 2 06:44:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Wait For Response From Player 1 "},"childOfId":35} 

 Player 2 06:44:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 06:44:30 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 06:44:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fatty"} 

 Player 1 06:44:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fatty"} 

 Player 1 06:44:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fatty"} 

 Player 1 06:44:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fatty"} 

 Player 1 06:44:31 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 06:44:31 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 2 06:44:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 2 "},"childOfId":35} 

 Player 2 06:44:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 06:44:31 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 2 06:44:31 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 2 06:44:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Stack Was Emptied "}} 

 Player 2 06:44:31 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 06:44:31 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 06:44:32 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 06:44:33 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 06:44:33 $NEXT_STACK_ID:  

 Player 2 06:44:33 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 06:44:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fatty<Monster>"} 

 Player 2 06:44:33 $ADD_TO_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":272,"rollingPlayerCardId":272,"stackEffectType":2,"attackedMonsterCardId":224}} 

 Player 2 06:44:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Add AttackRoll 5 "}} 

 Player 2 06:44:33 $ROLL_DICE:  
{"playerId":2} 

 Player 1 06:44:33 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 06:44:33 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 06:44:35 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":1} 

 Player 2 06:44:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Fatty<Monster>"} 

 Player 2 06:44:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 06:44:35 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 06:44:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Fatty<Monster>"} 

 Player 2 06:44:35 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":272,"numberRolled":1,"rollingPlayerCardId":272,"stackEffectType":2,"attackedMonsterCardId":224}} 

 Player 2 06:44:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Response Adding AttackRoll 5"},"childOfId":40} 

 Player 2 06:44:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Wait For Response From Player 2 "},"childOfId":40} 

 Player 2 06:44:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 06:44:35 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 2 06:44:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 1 "},"childOfId":40} 

 Player 2 06:44:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 06:44:35 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 06:44:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fatty<Monster>"} 

 Player 1 06:44:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fatty<Monster>"} 

 Player 1 06:44:35 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 06:44:35 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 2 06:44:35 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 2 06:44:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Resolve AttackRoll 5 "}} 

 Player 2 06:44:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Added 0 to original roll"}} 

 Player 2 06:44:35 $NEXT_STACK_ID:  

 Player 2 06:44:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Fatty<Monster>"} 

 Player 2 06:44:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 06:44:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Fatty \n2:Player 2 rolled 1 vs Fatty<Monster>"} 

 Player 2 06:44:36 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":272,"entityToDoDamageCardId":272,"entityToTakeDamageCardId":224,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 06:44:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Fatty \n2:Player 2 rolled 1 vs Fatty<Monster>"} 

 Player 2 06:44:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Fatty \n2:Player 2 rolled 1 vs Fatty<Monster>"} 

 Player 2 06:44:36 $REPLACE_STACK:  
{"currentStack":[{"entityId":6,"creatorCardId":272,"entityToDoDamageCardId":272,"entityToTakeDamageCardId":224,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":5,"creatorCardId":272,"numberRolled":1,"rollingPlayerCardId":272,"stackEffectType":2,"attackedMonsterCardId":224}]} 

 Player 2 06:44:36 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":6},{"type":2,"number":2},{"type":2,"number":2}],"result":null,"preventMethod":false,"methodScopeId":272,"scopeIsPlayer":true,"index":7,"originStackId":5},"isAfterActivation":true,"index":7} 

 Player 2 06:44:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Fatty \n2:Player 2 rolled 1 vs Fatty<Monster>"} 

 Player 2 06:44:36 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":272,"numberRolled":1,"rollingPlayerCardId":272,"stackEffectType":2,"attackedMonsterCardId":224}} 

 Player 2 06:44:36 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 06:44:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Remove After Resolve AttackRoll 5  "}} 

 Player 2 06:44:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Fatty"} 

 Player 2 06:44:36 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":272,"numberRolled":1,"rollingPlayerCardId":272,"stackEffectType":2,"attackedMonsterCardId":224}} 

 Player 2 06:44:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Response Remove After Resolve AttackRoll 5"},"childOfId":46} 

 Player 2 06:44:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Wait For Response From Player 2 "},"childOfId":46} 

 Player 2 06:44:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 06:44:36 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 2 06:44:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Wait For Response From Player 1 "},"childOfId":46} 

 Player 2 06:44:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 06:44:36 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 06:44:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fatty<Monster>"} 

 Player 1 06:44:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fatty<Monster>"} 

 Player 1 06:44:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Fatty"} 

 Player 1 06:44:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Fatty"} 

 Player 1 06:44:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Fatty"} 

 Player 1 06:44:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Fatty"} 

 Player 1 06:44:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Fatty \n2:Player 2 is rolling against Fatty<Monster>"} 

 Player 1 06:44:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Fatty \n2:Player 2 is rolling against Fatty<Monster>"} 

 Player 1 06:44:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Fatty \n2:Player 2 is rolling against Fatty<Monster>"} 

 Player 1 06:44:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Fatty \n2:Player 2 is rolling against Fatty<Monster>"} 

 Player 1 06:44:36 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 06:44:36 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 2 06:44:36 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 2 06:44:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Resolve CombatDamage 6 "}} 

 Player 2 06:44:36 $MONSTER_GET_DAMAGED:  
{"cardId":224,"hpLeft":0,"damageDealerId":272} 

 Player 2 06:44:37 $NEXT_STACK_ID:  

 Player 2 06:44:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Fatty"} 

 Player 2 06:44:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 06:44:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Fatty \n2:[object Object] killed by Maggy"} 

 Player 2 06:44:37 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":272,"monsterToDieCardId":224,"stackEffectType":5,"killerId":272}} 

 Player 2 06:44:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Fatty \n2:[object Object] killed by Maggy"} 

 Player 2 06:44:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Fatty \n2:[object Object] killed by Maggy"} 

 Player 2 06:44:37 $REPLACE_STACK:  
{"currentStack":[{"entityId":6,"creatorCardId":272,"entityToDoDamageCardId":272,"entityToTakeDamageCardId":224,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":7,"creatorCardId":272,"monsterToDieCardId":224,"stackEffectType":5,"killerId":272}]} 

 Player 2 06:44:37 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":6},{"type":0,"number":272}],"result":null,"preventMethod":false,"methodScopeId":224,"scopeIsPlayer":false,"index":8,"originStackId":-1},"isAfterActivation":true,"index":8} 

 Player 2 06:44:37 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":6},{"type":2,"number":6},{"type":0,"number":272},{"type":0,"number":224}],"result":null,"preventMethod":false,"methodScopeId":272,"scopeIsPlayer":true,"index":9,"originStackId":6},"isAfterActivation":true,"index":9} 

 Player 2 06:44:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Fatty \n2:[object Object] killed by Maggy"} 

 Player 2 06:44:37 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":272,"entityToDoDamageCardId":272,"entityToTakeDamageCardId":224,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 06:44:37 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 2 06:44:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Remove After Resolve CombatDamage 6  "}} 

 Player 2 06:44:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Maggy"} 

 Player 2 06:44:37 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":272,"entityToDoDamageCardId":272,"entityToTakeDamageCardId":224,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 06:44:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Response Remove After Resolve CombatDamage 6"},"childOfId":51} 

 Player 2 06:44:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Wait For Response From Player 2 "},"childOfId":51} 

 Player 2 06:44:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 06:44:37 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 2 06:44:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Wait For Response From Player 1 "},"childOfId":51} 

 Player 2 06:44:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 06:44:37 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 06:44:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Fatty"} 

 Player 1 06:44:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Fatty"} 

 Player 1 06:44:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by undefined"} 

 Player 1 06:44:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by undefined"} 

 Player 1 06:44:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by undefined"} 

 Player 1 06:44:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by undefined"} 

 Player 1 06:44:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Fatty \n2:[object Object] killed by undefined"} 

 Player 1 06:44:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Fatty \n2:[object Object] killed by undefined"} 

 Player 1 06:44:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Fatty \n2:[object Object] killed by undefined"} 

 Player 1 06:44:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Fatty \n2:[object Object] killed by undefined"} 

 Player 1 06:44:38 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 06:44:38 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 2 06:44:38 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 2 06:44:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Resolve MonsterDeath 7 "}} 

 Player 2 06:44:38 $DISABLE_PARTICLE_EFFECT:  
{"cardId":224,"particleType":5} 

 Player 2 06:44:38 $CANCEL_ATTACK:  

 Player 2 06:44:38 $NEXT_STACK_ID:  

 Player 2 06:44:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Maggy"} 

 Player 2 06:44:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 06:44:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fatty<Monster> reward \n2:[object Object] killed by Maggy"} 

 Player 2 06:44:38 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":272,"monsterCardWithRewardId":224,"playerCardIdToReward":272,"stackEffectType":7}} 

 Player 2 06:44:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fatty<Monster> reward \n2:[object Object] killed by Maggy"} 

 Player 2 06:44:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fatty<Monster> reward \n2:[object Object] killed by Maggy"} 

 Player 2 06:44:38 $REPLACE_STACK:  
{"currentStack":[{"entityId":8,"creatorCardId":272,"monsterCardWithRewardId":224,"playerCardIdToReward":272,"stackEffectType":7},{"entityId":7,"creatorCardId":272,"monsterToDieCardId":224,"stackEffectType":5,"killerId":272}]} 

 Player 2 06:44:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fatty<Monster> reward \n2:[object Object] killed by Maggy"} 

 Player 2 06:44:38 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":272,"monsterToDieCardId":224,"stackEffectType":5,"killerId":272}} 

 Player 2 06:44:38 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 2 06:44:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":56,"_text":"Remove After Resolve MonsterDeath 7  "}} 

 Player 2 06:44:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fatty<Monster> reward"} 

 Player 2 06:44:38 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":272,"monsterToDieCardId":224,"stackEffectType":5,"killerId":272}} 

 Player 2 06:44:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":57,"_text":"Response Remove After Resolve MonsterDeath 7"},"childOfId":56} 

 Player 2 06:44:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":58,"_text":"Wait For Response From Player 2 "},"childOfId":56} 

 Player 2 06:44:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 06:44:38 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 2 06:44:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":59,"_text":"Wait For Response From Player 1 "},"childOfId":56} 

 Player 2 06:44:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 06:44:38 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 2 06:44:38 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 2 06:44:38 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 1 06:44:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by undefined"} 

 Player 1 06:44:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by undefined"} 

 Player 1 06:44:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fatty<Monster> reward"} 

 Player 1 06:44:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fatty<Monster> reward"} 

 Player 1 06:44:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fatty<Monster> reward"} 

 Player 1 06:44:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fatty<Monster> reward"} 

 Player 1 06:44:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fatty<Monster> reward \n2:[object Object] killed by undefined"} 

 Player 1 06:44:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fatty<Monster> reward \n2:[object Object] killed by undefined"} 

 Player 1 06:44:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fatty<Monster> reward \n2:[object Object] killed by undefined"} 

 Player 1 06:44:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fatty<Monster> reward \n2:[object Object] killed by undefined"} 

 Player 1 06:44:39 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 06:44:39 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 2 06:44:39 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 2 06:44:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":60,"_text":"Resolve MonsterRewardStackEffect 8 "}} 

 Player 2 06:44:39 $DRAW_CARD:  
{"deckType":1} 

 Player 2 06:44:39 $MOVE_CARD:  
{"moveIndex":17,"cardId":49,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 06:44:39 $MOVE_CARD_END:  
{"moveIndex":17,"cardId":49,"flipIfFlipped":false,"playerId":2} 

 Player 2 06:44:39 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":49} 

 Player 2 06:44:39 $FLIP_CARD:  
{"cardId":49} 

 Player 2 06:44:39 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":49} 

 Player 2 06:44:39 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":224,"scopeIsPlayer":false,"index":10,"originStackId":8},"isAfterActivation":true,"index":10} 

 Player 2 06:44:39 $NEXT_STACK_ID:  

 Player 2 06:44:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fatty<Monster> reward"} 

 Player 2 06:44:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fatty<Monster> reward \n2:Activate Midas Touch effect AddMoney<AddMoney>"} 

 Player 2 06:44:39 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":9,"creatorCardId":272,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":175,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":175,"effctType":0},"isAfterActivation":true,"index":10,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 06:44:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":61,"_text":"Add ActivatePassiveEffect 9 "}} 

 Player 2 06:44:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fatty<Monster> reward \n2:Activate Midas Touch effect AddMoney<AddMoney>"} 

 Player 2 06:44:40 $ACTION_MASSAGE_REMOVE:  
{"id":61} 

 Player 2 06:44:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fatty<Monster> reward \n2:Activate Midas Touch effect AddMoney<AddMoney>"} 

 Player 2 06:44:40 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[272],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":272,"effectCardPlayer":272},"entityId":9,"creatorCardId":272,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":175,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":175,"effctType":0},"isAfterActivation":true,"index":10,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 06:44:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":62,"_text":"Response Adding ActivatePassiveEffect 9"},"childOfId":61} 

 Player 2 06:44:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":63,"_text":"Wait For Response From Player 1 "},"childOfId":61} 

 Player 2 06:44:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 06:44:40 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 2 06:44:40 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 1 06:44:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fatty<Monster> reward"} 

 Player 1 06:44:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fatty<Monster> reward"} 

 Player 1 06:44:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fatty<Monster> reward \n2:Activate Midas Touch "} 

 Player 1 06:44:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fatty<Monster> reward \n2:Activate Midas Touch "} 

 Player 1 06:44:40 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 06:44:40 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 2 06:44:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":64,"_text":"Wait For Response From Player 2 "},"childOfId":61} 

 Player 2 06:44:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 06:44:40 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 2 06:44:40 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 2 06:44:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":65,"_text":"Resolve ActivatePassiveEffect 9 "}} 

 Player 2 06:44:40 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":175,"particleType":6} 

 Player 2 06:44:41 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 2 06:44:42 $DISABLE_PARTICLE_EFFECT:  
{"cardId":175,"particleType":6} 

 Player 2 06:44:42 $CHANGE_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 06:44:42 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":272,"scopeIsPlayer":true,"index":11,"originStackId":-1},"isAfterActivation":true,"index":11} 

 Player 2 06:44:42 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":224,"scopeIsPlayer":false,"index":10,"originStackId":8},"isAfterActivation":true,"index":10} 

 Player 2 06:44:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fatty<Monster> reward \n2:Activate Midas Touch effect AddMoney<AddMoney>"} 

 Player 2 06:44:42 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[272],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":272,"effectCardPlayer":272},"entityId":9,"creatorCardId":272,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":175,"isAfterActivation":true,"index":10,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 06:44:42 $ACTION_MASSAGE_REMOVE:  
{"id":65} 

 Player 2 06:44:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":66,"_text":"Remove After Resolve ActivatePassiveEffect 9  "}} 

 Player 2 06:44:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fatty<Monster> reward"} 

 Player 2 06:44:42 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[272],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":272,"effectCardPlayer":272},"entityId":9,"creatorCardId":272,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":175,"isAfterActivation":true,"index":10,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 06:44:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":67,"_text":"Response Remove After Resolve ActivatePassiveEffect 9"},"childOfId":66} 

 Player 2 06:44:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":68,"_text":"Wait For Response From Player 2 "},"childOfId":66} 

 Player 2 06:44:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 06:44:42 $ACTION_MASSAGE_REMOVE:  
{"id":68} 

 Player 2 06:44:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":69,"_text":"Wait For Response From Player 1 "},"childOfId":66} 

 Player 2 06:44:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 06:44:42 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 06:44:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fatty<Monster> reward \n2:Activate Midas Touch "} 

 Player 1 06:44:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fatty<Monster> reward \n2:Activate Midas Touch "} 

 Player 1 06:44:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fatty<Monster> reward \n2:Activate Midas Touch "} 

 Player 1 06:44:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fatty<Monster> reward \n2:Activate Midas Touch "} 

 Player 1 06:44:43 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 06:44:43 $ACTION_MASSAGE_REMOVE:  
{"id":69} 

 Player 2 06:44:43 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 2 06:44:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":70,"_text":"Resolve MonsterRewardStackEffect 8 "}} 

 Player 2 06:44:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 06:44:43 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 06:44:43 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 2 06:44:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":71,"_text":"Fizzle MonsterRewardStackEffect 8"}} 

 Player 2 06:44:43 $MOVE_CARD:  
{"moveIndex":18,"cardId":224,"placeID":281,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 06:44:43 $MOVE_CARD_END:  
{"moveIndex":18,"cardId":224,"flipIfFlipped":true,"playerId":2} 

 Player 2 06:44:43 $MOVE_CARD_TO_PILE:  
{"type":2,"cardId":224} 

 Player 2 06:44:43 $REMOVE_MONSTER:  
{"holderId":2,"monsterId":224} 

 Player 2 06:44:43 $NEXT_STACK_ID:  

 Player 2 06:44:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 06:44:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder2 slot"} 

 Player 2 06:44:43 $ADD_TO_STACK:  
{"stackEffect":{"entityId":10,"creatorCardId":272,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 

 Player 2 06:44:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":72,"_text":"Add RefillEmptySlot 10 "}} 

 Player 2 06:44:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 06:44:43 $ACTION_MASSAGE_REMOVE:  
{"id":72} 

 Player 2 06:44:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder2 slot"} 

 Player 2 06:44:43 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":272,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 

 Player 2 06:44:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":73,"_text":"Response Adding RefillEmptySlot 10"},"childOfId":72} 

 Player 2 06:44:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":74,"_text":"Wait For Response From Player 2 "},"childOfId":72} 

 Player 2 06:44:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 06:44:44 $ACTION_MASSAGE_REMOVE:  
{"id":74} 

 Player 2 06:44:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":75,"_text":"Wait For Response From Player 1 "},"childOfId":72} 

 Player 2 06:44:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 06:44:44 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 06:44:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fatty<Monster> reward"} 

 Player 1 06:44:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fatty<Monster> reward"} 

 Player 1 06:44:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fatty<Monster> reward \n2:Refill holder2 slot"} 

 Player 1 06:44:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fatty<Monster> reward \n2:Refill holder2 slot"} 

 Player 1 06:44:44 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 06:44:44 $ACTION_MASSAGE_REMOVE:  
{"id":75} 

 Player 2 06:44:44 $ACTION_MASSAGE_REMOVE:  
{"id":73} 

 Player 2 06:44:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":76,"_text":"Resolve RefillEmptySlot 10 "}} 

 Player 2 06:44:44 $DRAW_CARD:  
{"deckType":2} 

 Player 2 06:44:44 $FLIP_CARD:  
{"cardId":229} 

 Player 2 06:44:44 $REGISTER_PASSIVE_ITEM:  
{"cardId":229} 

 Player 2 06:44:44 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":229} 

 Player 2 06:44:44 $NEW_MONSTER_ON_PLACE:  
{"cardId":229,"monsterPlaceId":2} 

 Player 2 06:44:44 $ACTION_MASSAGE_REMOVE:  
{"id":76} 

 Player 2 06:44:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":77,"_text":"Remove After Resolve RefillEmptySlot 10  "}} 

 Player 2 06:44:44 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 06:44:44 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":10,"creatorCardId":272,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 

 Player 2 06:44:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":78,"_text":"Response Remove After Resolve RefillEmptySlot 10"},"childOfId":77} 

 Player 2 06:44:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":79,"_text":"Wait For Response From Player 1 "},"childOfId":77} 

 Player 2 06:44:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 06:44:44 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 06:44:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fatty<Monster> reward \n2:Refill holder2 slot"} 

 Player 1 06:44:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fatty<Monster> reward \n2:Refill holder2 slot"} 

 Player 1 06:44:44 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 06:44:44 $ACTION_MASSAGE_REMOVE:  
{"id":79} 

 Player 2 06:44:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":80,"_text":"Wait For Response From Player 2 "},"childOfId":77} 

 Player 2 06:44:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 06:44:45 $ACTION_MASSAGE_REMOVE:  
{"id":80} 

 Player 2 06:44:45 $ACTION_MASSAGE_REMOVE:  
{"id":78} 

 Player 2 06:44:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":81,"_text":"Stack Was Emptied "}} 

 Player 2 06:44:45 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 06:44:45 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 06:44:45 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 2 06:44:45 $ACTION_MASSAGE_REMOVE:  
{"id":60} 

 Player 2 06:44:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":82,"_text":"Stack Was Emptied "}} 

 Player 2 06:44:45 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 06:44:45 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 06:44:45 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 2 06:44:46 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 2 06:44:46 $ACTION_MASSAGE_REMOVE:  
{"id":81} 

 Player 2 06:44:46 $ACTION_MASSAGE_REMOVE:  
{"id":82} 

 Player 2 06:44:47 $ACTION_MASSAGE_REMOVE:  
{"id":77} 

 Player 2 06:47:37 $MATCH: 