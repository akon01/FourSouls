Start Log 

 Player 1 16:34:40 $MATCH:  

 Player 1 16:34:40 $START_GAME:  

 Player 2 16:34:40 $MOVE_TO_TABLE:  

 Player 1 16:34:40 $MOVE_TO_TABLE:  

 Player 2 16:34:52 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 1 16:34:53 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 16:34:53 $SET_CHAR:  
{"originPlayerId":2,"playerId":1,"charCardId":317,"itemCardId":320} 

 Player 1 16:34:53 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":317,"itemCardId":320} 

 Player 1 16:34:53 $SET_CHAR_END:  
{"playerId":2} 

 Player 2 16:34:53 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":313,"itemCardId":314} 

 Player 2 16:34:53 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[124,41,54,24,101,28,39,63,49,117,142,114,57,118,86,59,42,56,67,64,17,126,78,85,83,31,135,81,132,138,128,97,77,40,122,45,96,129,22,34,72,26,37,125,141,93,71,61,14,140,44,15,58,94,52,51,133,100,70,18,50,7,95,73,110,55,62,108,12,80,104,68,38,76,21,79,19,66,53,87,136,10,43,65,91,47,20,27,123,92,103,60,13,102,84,107,130,74,36,121,9,113,106,98,112,69,119,23,99,82,48,109,16,116,75,111,35,8,29,32,131,90,139,120,11,105,115,30,33,46,88,25,134,89,127,137]} 

 Player 2 16:34:53 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[298,286,248,283,240,267,249,254,291,282,242,281,259,239,295,261,273,269,262,294,250,251,290,233,228,293,285,257,275,284,307,256,300,245,232,227,297,308,252,303,304,246,311,263,305,310,265,299,292,260,279,302,312,236,258,230,237,288,231,270,276,301,280,241,289,296,229,274,271,255,244,264,306,287,238,253,272,234,235,309,277,266,247,278,243,268]} 

 Player 2 16:34:53 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[175,201,211,208,198,178,212,169,166,197,219,148,205,155,210,160,215,221,184,146,209,224,176,152,157,188,156,222,145,161,199,153,186,207,196,168,194,179,147,181,213,223,162,203,192,158,200,195,171,191,193,177,190,154,165,218,214,167,159,151,189,150,180,206,202,149,173,187,170,163,164,174,172,220,217,185,204,183,216,182]} 

 Player 2 16:34:53 $DRAW_CARD:  
{"deckType":5} 

 Player 2 16:34:53 $FLIP_CARD:  
{"cardId":182} 

 Player 2 16:34:53 $ADD_STORE_CARD:  
{"cardId":182} 

 Player 2 16:34:53 $DRAW_CARD:  
{"deckType":5} 

 Player 2 16:34:53 $FLIP_CARD:  
{"cardId":216} 

 Player 2 16:34:53 $ADD_STORE_CARD:  
{"cardId":216} 

 Player 2 16:34:53 $DRAW_CARD:  
{"deckType":2} 

 Player 2 16:34:53 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":268} 

 Player 2 16:34:53 $DRAW_CARD:  
{"deckType":2} 

 Player 2 16:34:53 $FLIP_CARD:  
{"cardId":243} 

 Player 2 16:34:54 $REGISTER_PASSIVE_ITEM:  
{"cardId":243} 

 Player 2 16:34:54 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":243} 

 Player 2 16:34:54 $NEW_MONSTER_ON_PLACE:  
{"cardId":243,"monsterPlaceId":1} 

 Player 2 16:34:54 $DRAW_CARD:  
{"deckType":2} 

 Player 2 16:34:54 $FLIP_CARD:  
{"cardId":278} 

 Player 2 16:34:54 $REGISTER_PASSIVE_ITEM:  
{"cardId":278} 

 Player 2 16:34:54 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":278} 

 Player 2 16:34:54 $NEW_MONSTER_ON_PLACE:  
{"cardId":278,"monsterPlaceId":2} 

 Player 2 16:34:54 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 16:34:54 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":317,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 16:34:54 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:34:54 $MOVE_CARD:  
{"moveIndex":1,"cardId":137,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:34:54 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":137,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:34:55 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":137} 

 Player 2 16:34:55 $FLIP_CARD:  
{"cardId":137} 

 Player 2 16:34:55 $FLIP_CARD:  
{"cardId":137} 

 Player 2 16:34:55 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":137} 

 Player 2 16:34:56 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:34:56 $MOVE_CARD:  
{"moveIndex":2,"cardId":127,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:34:57 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":127,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:34:57 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":127} 

 Player 2 16:34:57 $FLIP_CARD:  
{"cardId":127} 

 Player 2 16:34:57 $FLIP_CARD:  
{"cardId":127} 

 Player 2 16:34:57 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":127} 

 Player 2 16:34:57 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:34:57 $MOVE_CARD:  
{"moveIndex":3,"cardId":89,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:34:57 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":89,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:34:57 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":89} 

 Player 2 16:34:58 $FLIP_CARD:  
{"cardId":89} 

 Player 2 16:34:58 $FLIP_CARD:  
{"cardId":89} 

 Player 2 16:34:58 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":89} 

 Player 2 16:34:58 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 16:34:58 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 16:34:58 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:34:58 $MOVE_CARD:  
{"moveIndex":4,"cardId":134,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:34:58 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":134,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:34:58 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":134} 

 Player 2 16:34:58 $FLIP_CARD:  
{"cardId":134} 

 Player 2 16:34:58 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":134} 

 Player 2 16:34:58 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:34:59 $MOVE_CARD:  
{"moveIndex":5,"cardId":25,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:34:59 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":25,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:34:59 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":25} 

 Player 2 16:34:59 $FLIP_CARD:  
{"cardId":25} 

 Player 2 16:34:59 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":25} 

 Player 2 16:34:59 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:34:59 $MOVE_CARD:  
{"moveIndex":6,"cardId":88,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:35:00 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":88,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:35:00 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":88} 

 Player 2 16:35:00 $FLIP_CARD:  
{"cardId":88} 

 Player 2 16:35:00 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":88} 

 Player 2 16:35:00 $GAME_HAS_STARTED:  

 Player 2 16:35:00 $SET_TURN:  
{"playerId":1} 

 Player 2 16:35:00 $START_TURN:  
{"playerId":1} 

 Player 2 16:35:00 $UPDATE_ACTIONS:  

 Player 1 16:35:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:35:00 $NEXT_STACK_ID:  

 Player 1 16:35:00 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:35:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 16:35:00 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":317,"turnPlayerCardId":317,"stackEffectType":13}} 

 Player 1 16:35:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 16:35:00 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":317,"turnPlayerCardId":317,"stackEffectType":13}} 

 Player 1 16:35:00 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 16:35:00 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 2 16:35:00 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:35:01 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:35:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 16:35:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 16:35:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 1 16:35:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:35:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 16:35:03 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":317,"turnPlayerCardId":317,"stackEffectType":13}} 

 Player 1 16:35:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 1 16:35:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 1 16:35:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:35:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 1 16:35:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 16:35:03 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 16:35:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 16:35:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 16:35:04 $HIDE_REACTIONS:  
{"cardsIds":[313,314]} 

 Player 2 16:35:04 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 16:35:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 1 16:35:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 16:35:04 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":317,"turnPlayerCardId":317,"stackEffectType":13}} 

 Player 1 16:35:04 $DRAW_CARD:  
{"deckType":1} 

 Player 1 16:35:04 $MOVE_CARD:  
{"moveIndex":7,"cardId":46,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 16:35:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 16:35:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 16:35:04 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":46,"flipIfFlipped":false,"playerId":1} 

 Player 1 16:35:04 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":46} 

 Player 1 16:35:04 $FLIP_CARD:  
{"cardId":46} 

 Player 1 16:35:04 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":46} 

 Player 1 16:35:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 16:35:04 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":317,"turnPlayerCardId":317,"stackEffectType":13}} 

 Player 1 16:35:05 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":1} 

 Player 1 16:35:05 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 16:35:05 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 2 16:35:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 16:35:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 16:35:07 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":1} 

 Player 1 16:35:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 1 16:35:07 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:35:07 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":317,"turnPlayerCardId":317,"stackEffectType":13}} 

 Player 1 16:35:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 1 16:35:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 1 16:35:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 16:35:08 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 16:35:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 16:35:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 16:35:08 $HIDE_REACTIONS:  
{"cardsIds":[313,314]} 

 Player 2 16:35:08 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 16:35:08 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 1 16:35:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 1 16:35:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:35:08 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 1 16:35:08 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 1 16:35:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 1 16:35:08 $CLEAR_SE_VIS:  

 Player 1 16:35:08 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:35:19 $NEXT_STACK_ID:  

 Player 1 16:35:19 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:35:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Keeper Head"} 

 Player 1 16:35:19 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":317,"attackingPlayerCardId":317,"idOfCardBeingAttacked":278,"stackEffectType":4}} 

 Player 1 16:35:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Keeper Head"} 

 Player 1 16:35:19 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":317,"attackingPlayerCardId":317,"idOfCardBeingAttacked":278,"stackEffectType":4}} 

 Player 1 16:35:19 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 16:35:19 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 2 16:35:19 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:35:19 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:35:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Keeper Head"} 

 Player 2 16:35:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Keeper Head"} 

 Player 1 16:35:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add DeclareAttack 2 "}} 

 Player 1 16:35:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:35:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Keeper Head"} 

 Player 1 16:35:22 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":317,"attackingPlayerCardId":317,"idOfCardBeingAttacked":278,"stackEffectType":4}} 

 Player 1 16:35:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding DeclareAttack 2"},"childOfId":10} 

 Player 1 16:35:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 1 16:35:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:35:22 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 1 16:35:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 1 16:35:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 16:35:22 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 16:35:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Keeper Head"} 

 Player 2 16:35:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Keeper Head"} 

 Player 2 16:35:23 $HIDE_REACTIONS:  
{"cardsIds":[313,314]} 

 Player 2 16:35:23 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 16:35:23 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 1 16:35:23 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 1 16:35:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve DeclareAttack 2 "}} 

 Player 1 16:35:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Keeper Head"} 

 Player 1 16:35:23 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":317,"attackingPlayerCardId":317,"idOfCardBeingAttacked":278,"stackEffectType":4}} 

 Player 1 16:35:23 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":278,"particleType":5} 

 Player 1 16:35:23 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":317,"scopeIsPlayer":true,"index":1,"originStackId":2},"isAfterActivation":true,"index":1} 

 Player 1 16:35:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Keeper Head"} 

 Player 1 16:35:23 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":317,"attackingPlayerCardId":317,"idOfCardBeingAttacked":278,"stackEffectType":4}} 

 Player 1 16:35:23 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":2} 

 Player 1 16:35:23 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 16:35:23 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 2 16:35:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Keeper Head"} 

 Player 2 16:35:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Keeper Head"} 

 Player 2 16:35:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Keeper Head"} 

 Player 2 16:35:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Keeper Head"} 

 Player 1 16:35:26 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":2} 

 Player 1 16:35:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve DeclareAttack 2  "}} 

 Player 1 16:35:26 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:35:26 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":317,"attackingPlayerCardId":317,"idOfCardBeingAttacked":278,"stackEffectType":4}} 

 Player 1 16:35:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve DeclareAttack 2"},"childOfId":15} 

 Player 1 16:35:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 1 16:35:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 16:35:26 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 16:35:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Keeper Head"} 

 Player 2 16:35:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Keeper Head"} 

 Player 2 16:35:26 $HIDE_REACTIONS:  
{"cardsIds":[313,314]} 

 Player 2 16:35:26 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 16:35:26 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 1 16:35:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 1 16:35:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:35:26 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 1 16:35:26 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 1 16:35:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 1 16:35:26 $CLEAR_SE_VIS:  

 Player 1 16:35:26 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:35:31 $NEXT_STACK_ID:  

 Player 1 16:35:31 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:35:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Keeper Head<Monster>"} 

 Player 1 16:35:31 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":317,"rollingPlayerCardId":317,"stackEffectType":2,"attackedMonsterCardId":278}} 

 Player 1 16:35:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Keeper Head<Monster>"} 

 Player 1 16:35:31 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":317,"rollingPlayerCardId":317,"stackEffectType":2,"attackedMonsterCardId":278}} 

 Player 1 16:35:31 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 16:35:31 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 2 16:35:31 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:35:31 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:35:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Keeper Head<Monster>"} 

 Player 2 16:35:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Keeper Head<Monster>"} 

 Player 1 16:35:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add AttackRoll 3 "}} 

 Player 1 16:35:34 $ROLL_DICE:  
{"playerId":1} 

 Player 1 16:35:35 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":2} 

 Player 1 16:35:35 $UPDATE_STACK_VIS:  
{"stackId":3,"text":"player rolled 2 vs Holy Keeper Head<Monster>"} 

 Player 1 16:35:35 $SHOW_DICE_ROLL:  
{"stackId":3} 

 Player 1 16:35:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Holy Keeper Head<Monster>"} 

 Player 1 16:35:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:35:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Holy Keeper Head<Monster>"} 

 Player 1 16:35:38 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":317,"numberRolled":2,"rollingPlayerCardId":317,"stackEffectType":2,"attackedMonsterCardId":278}} 

 Player 1 16:35:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding AttackRoll 3"},"childOfId":20} 

 Player 1 16:35:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 1 16:35:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:35:38 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 1 16:35:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 1 16:35:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 16:35:39 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 16:35:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Keeper Head<Monster>"} 

 Player 2 16:35:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Keeper Head<Monster>"} 

 Player 2 16:35:39 $HIDE_REACTIONS:  
{"cardsIds":[313,314]} 

 Player 2 16:35:39 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 16:35:39 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 1 16:35:39 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 1 16:35:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve AttackRoll 3 "}} 

 Player 1 16:35:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Holy Keeper Head<Monster>"} 

 Player 1 16:35:39 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":317,"numberRolled":2,"rollingPlayerCardId":317,"stackEffectType":2,"attackedMonsterCardId":278}} 

 Player 1 16:35:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Added 0 to original roll"}} 

 Player 1 16:35:39 $NEXT_STACK_ID:  

 Player 1 16:35:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Holy Keeper Head<Monster>"} 

 Player 1 16:35:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:35:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Keeper Head combat damage to Cain \n2:Player 1 rolled 2 vs Holy Keeper Head<Monster>"} 

 Player 1 16:35:39 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":317,"entityToDoDamageCardId":278,"entityToTakeDamageCardId":317,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":2}} 

 Player 1 16:35:39 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 16:35:39 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 2 16:35:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Keeper Head<Monster>"} 

 Player 2 16:35:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Keeper Head<Monster>"} 

 Player 2 16:35:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Keeper Head<Monster>"} 

 Player 2 16:35:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Keeper Head<Monster>"} 

 Player 1 16:35:42 $CLEAR_SE_VIS:  

 Player 1 16:35:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Keeper Head combat damage to Cain \n2:Player 1 rolled 2 vs Holy Keeper Head<Monster>"} 

 Player 1 16:35:42 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":317,"entityToDoDamageCardId":278,"entityToTakeDamageCardId":317,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":2}} 

 Player 1 16:35:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Keeper Head combat damage to Cain \n2:Player 1 rolled 2 vs Holy Keeper Head<Monster>"} 

 Player 1 16:35:42 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":317,"numberRolled":2,"rollingPlayerCardId":317,"stackEffectType":2,"attackedMonsterCardId":278}} 

 Player 1 16:35:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Keeper Head combat damage to Cain \n2:Player 1 rolled 2 vs Holy Keeper Head<Monster>"} 

 Player 1 16:35:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Keeper Head combat damage to Cain \n2:Player 1 rolled 2 vs Holy Keeper Head<Monster>"} 

 Player 1 16:35:42 $REPLACE_STACK:  
{"currentStack":[{"entityId":4,"creatorCardId":317,"entityToDoDamageCardId":278,"entityToTakeDamageCardId":317,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":2},{"entityId":3,"creatorCardId":317,"numberRolled":2,"rollingPlayerCardId":317,"stackEffectType":2,"attackedMonsterCardId":278}]} 

 Player 1 16:35:42 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":2},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":317,"scopeIsPlayer":true,"index":2,"originStackId":3},"isAfterActivation":true,"index":2} 

 Player 1 16:35:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Keeper Head combat damage to Cain \n2:Player 1 rolled 2 vs Holy Keeper Head<Monster>"} 

 Player 1 16:35:42 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":317,"numberRolled":2,"rollingPlayerCardId":317,"stackEffectType":2,"attackedMonsterCardId":278}} 

 Player 1 16:35:42 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":3} 

 Player 1 16:35:42 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 16:35:42 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 2 16:35:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Keeper Head<Monster>"} 

 Player 2 16:35:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Keeper Head<Monster>"} 

 Player 2 16:35:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Keeper Head<Monster>"} 

 Player 2 16:35:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Keeper Head<Monster>"} 

 Player 2 16:35:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Keeper Head<Monster>"} 

 Player 2 16:35:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Keeper Head<Monster>"} 

 Player 2 16:35:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Keeper Head<Monster>"} 

 Player 2 16:35:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Keeper Head<Monster>"} 

 Player 2 16:35:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Keeper Head combat damage to Cain \n2:Player 1 is rolling against Holy Keeper Head<Monster>"} 

 Player 2 16:35:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Keeper Head combat damage to Cain \n2:Player 1 is rolling against Holy Keeper Head<Monster>"} 

 Player 1 16:35:45 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":3} 

 Player 1 16:35:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Remove After Resolve AttackRoll 3  "}} 

 Player 1 16:35:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Keeper Head combat damage to Cain"} 

 Player 1 16:35:45 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":317,"numberRolled":2,"rollingPlayerCardId":317,"stackEffectType":2,"attackedMonsterCardId":278}} 

 Player 1 16:35:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Response Remove After Resolve AttackRoll 3"},"childOfId":26} 

 Player 1 16:35:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 1 "},"childOfId":26} 

 Player 1 16:35:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:35:45 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 1 16:35:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Wait For Response From Player 2 "},"childOfId":26} 

 Player 1 16:35:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 16:35:45 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 16:35:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Keeper Head combat damage to Cain \n2:Player 1 is rolling against Holy Keeper Head<Monster>"} 

 Player 2 16:35:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Keeper Head combat damage to Cain \n2:Player 1 is rolling against Holy Keeper Head<Monster>"} 

 Player 2 16:35:45 $HIDE_REACTIONS:  
{"cardsIds":[313,314]} 

 Player 2 16:35:45 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 16:35:45 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 1 16:35:45 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 1 16:35:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Resolve CombatDamage 4 "}} 

 Player 1 16:35:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Keeper Head combat damage to Cain"} 

 Player 1 16:35:45 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":317,"entityToDoDamageCardId":278,"entityToTakeDamageCardId":317,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":2}} 

 Player 1 16:35:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Keeper Head 1 combat damage to Cain"} 

 Player 1 16:35:45 $UPDATE_STACK_VIS:  
{"stackId":4,"text":"Holy Keeper Head will deal 1 combat damage to Cain"} 

 Player 1 16:35:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Keeper Head 1 combat damage to Cain"} 

 Player 1 16:35:46 $PLAYER_GET_HIT:  
{"playerId":1,"damage":1,"damageDealerId":278} 

 Player 1 16:35:46 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":278}],"result":null,"preventMethod":false,"methodScopeId":317,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 1 16:35:46 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_TAKEN","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":0,"number":278}],"result":null,"preventMethod":false,"methodScopeId":317,"scopeIsPlayer":true,"index":4,"originStackId":4},"isAfterActivation":true,"index":4} 

 Player 1 16:35:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Keeper Head 1 combat damage to Cain"} 

 Player 1 16:35:46 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":317,"entityToDoDamageCardId":278,"entityToTakeDamageCardId":317,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":2}} 

 Player 1 16:35:46 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":4} 

 Player 1 16:35:46 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 16:35:46 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 2 16:35:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Keeper Head combat damage to Cain"} 

 Player 2 16:35:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Keeper Head combat damage to Cain"} 

 Player 2 16:35:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Keeper Head combat damage to Cain"} 

 Player 2 16:35:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Keeper Head combat damage to Cain"} 

 Player 1 16:35:48 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":4} 

 Player 1 16:35:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Remove After Resolve CombatDamage 4  "}} 

 Player 1 16:35:48 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:35:48 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":317,"entityToDoDamageCardId":278,"entityToTakeDamageCardId":317,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":2}} 

 Player 1 16:35:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Response Remove After Resolve CombatDamage 4"},"childOfId":31} 

 Player 1 16:35:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 2 "},"childOfId":31} 

 Player 1 16:35:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 16:35:49 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 16:35:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Keeper Head combat damage to Cain"} 

 Player 2 16:35:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Keeper Head combat damage to Cain"} 

 Player 2 16:35:49 $HIDE_REACTIONS:  
{"cardsIds":[313,314]} 

 Player 2 16:35:49 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 16:35:49 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 1 16:35:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Wait For Response From Player 1 "},"childOfId":31} 

 Player 1 16:35:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:35:49 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 1 16:35:49 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 1 16:35:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Stack Was Emptied "}} 

 Player 1 16:35:49 $CLEAR_SE_VIS:  

 Player 1 16:35:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:36:42 $NEXT_STACK_ID:  

 Player 1 16:36:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:36:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 1 16:36:43 $ADD_TO_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":317,"attackingPlayerCardId":317,"idOfCardBeingAttacked":226,"stackEffectType":4}} 

 Player 1 16:36:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 1 16:36:43 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":317,"attackingPlayerCardId":317,"idOfCardBeingAttacked":226,"stackEffectType":4}} 

 Player 1 16:36:43 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 16:36:43 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 2 16:36:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:36:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:36:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 2 16:36:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 1 16:36:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Add DeclareAttack 5 "}} 

 Player 1 16:36:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:36:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 1 16:36:46 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":317,"attackingPlayerCardId":317,"idOfCardBeingAttacked":226,"stackEffectType":4}} 

 Player 1 16:36:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Response Adding DeclareAttack 5"},"childOfId":36} 

 Player 1 16:36:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 1 "},"childOfId":36} 

 Player 1 16:36:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:36:46 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 1 16:36:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Wait For Response From Player 2 "},"childOfId":36} 

 Player 1 16:36:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 16:36:46 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 16:36:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 2 16:36:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 2 16:36:46 $HIDE_REACTIONS:  
{"cardsIds":[313,314]} 

 Player 2 16:36:46 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 16:36:46 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 1 16:36:46 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 1 16:36:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Resolve DeclareAttack 5 "}} 

 Player 1 16:36:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 1 16:36:46 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":317,"attackingPlayerCardId":317,"idOfCardBeingAttacked":226,"stackEffectType":4}} 

 Player 1 16:36:46 $DRAW_CARD:  
{"deckType":2} 

 Player 1 16:36:46 $SHOW_CARD_PREVIEW:  
{"cardToShowId":247,"playerId":1} 

 Player 2 16:36:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 2 16:36:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 2 16:45:16 $MATCH: 