Start Log 

 Player 1 16:23:04 $MATCH:  

 Player 1 16:23:04 $START_GAME:  

 Player 2 16:23:04 $MOVE_TO_TABLE:  

 Player 1 16:23:04 $MOVE_TO_TABLE:  

 Player 1 16:23:12 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 16:23:16 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 2 16:23:16 $SET_CHAR:  
{"originPlayerId":2,"playerId":1,"charCardId":321,"itemCardId":322} 

 Player 1 16:23:17 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":321,"itemCardId":322} 

 Player 1 16:23:17 $SET_CHAR_END:  
{"playerId":2} 

 Player 2 16:23:17 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":325,"itemCardId":326} 

 Player 2 16:23:17 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[115,133,23,114,139,63,80,75,76,78,38,106,57,92,105,122,113,28,129,47,120,24,73,45,85,93,103,119,16,13,9,26,77,130,48,126,123,98,27,32,7,84,100,70,41,52,88,137,94,127,135,60,8,97,53,99,109,55,128,50,15,102,36,132,86,89,83,72,10,43,121,54,64,4,17,116,65,59,34,33,40,6,134,46,108,117,44,82,29,101,20,111,18,69,58,81,91,30,5,68,12,42,31,131,138,87,118,125,110,25,90,71,74,56,136,124,61,39,66,112,19,11,21,35,107,51,49,14,96,67,22,95,104,79,62,37]} 

 Player 2 16:23:17 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[288,277,289,307,291,238,225,223,231,286,270,237,309,229,254,275,255,264,228,259,296,240,281,258,303,280,224,274,248,293,278,300,260,234,239,251,233,292,242,246,252,241,305,226,302,266,297,232,283,249,308,256,271,304,269,262,299,295,273,272,261,244,247,245,290,265,263,285,301,268,284,298,257,276,267,294,287,253,230,310,250,306,235,279,236,243,282,227]} 

 Player 2 16:23:17 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[206,145,178,158,146,197,202,181,220,216,188,156,210,208,152,215,212,198,195,144,214,184,147,193,174,168,213,203,211,159,153,205,187,171,200,155,167,175,221,209,186,165,219,157,201,148,162,164,161,150,190,207,149,172,196,177,141,185,179,218,163,169,217,173,154,191,143,182,189,180,166,176,142,199,204,170,194,192,160,183,151]} 

 Player 2 16:23:17 $DRAW_CARD:  
{"deckType":5} 

 Player 2 16:23:17 $FLIP_CARD:  
{"cardId":151} 

 Player 2 16:23:17 $ADD_STORE_CARD:  
{"cardId":151} 

 Player 2 16:23:17 $DRAW_CARD:  
{"deckType":5} 

 Player 2 16:23:17 $FLIP_CARD:  
{"cardId":183} 

 Player 2 16:23:17 $ADD_STORE_CARD:  
{"cardId":183} 

 Player 2 16:23:17 $DRAW_CARD:  
{"deckType":2} 

 Player 2 16:23:17 $FLIP_CARD:  
{"cardId":227} 

 Player 2 16:23:17 $REGISTER_PASSIVE_ITEM:  
{"cardId":227} 

 Player 2 16:23:17 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":227} 

 Player 2 16:23:17 $NEW_MONSTER_ON_PLACE:  
{"cardId":227,"monsterPlaceId":1} 

 Player 2 16:23:17 $DRAW_CARD:  
{"deckType":2} 

 Player 2 16:23:17 $FLIP_CARD:  
{"cardId":282} 

 Player 2 16:23:17 $REGISTER_PASSIVE_ITEM:  
{"cardId":282} 

 Player 2 16:23:17 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":282} 

 Player 2 16:23:17 $NEW_MONSTER_ON_PLACE:  
{"cardId":282,"monsterPlaceId":2} 

 Player 2 16:23:17 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 16:23:17 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 16:23:17 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:23:17 $MOVE_CARD:  
{"moveIndex":1,"cardId":37,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:23:18 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":37,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:23:18 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":37} 

 Player 2 16:23:18 $FLIP_CARD:  
{"cardId":37} 

 Player 2 16:23:18 $FLIP_CARD:  
{"cardId":37} 

 Player 2 16:23:18 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":37} 

 Player 2 16:23:18 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:23:18 $MOVE_CARD:  
{"moveIndex":2,"cardId":62,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:23:18 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":62,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:23:18 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":62} 

 Player 2 16:23:18 $FLIP_CARD:  
{"cardId":62} 

 Player 2 16:23:18 $FLIP_CARD:  
{"cardId":62} 

 Player 2 16:23:18 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":62} 

 Player 2 16:23:18 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:23:18 $MOVE_CARD:  
{"moveIndex":3,"cardId":79,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:23:19 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":79,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:23:19 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":79} 

 Player 2 16:23:19 $FLIP_CARD:  
{"cardId":79} 

 Player 2 16:23:19 $FLIP_CARD:  
{"cardId":79} 

 Player 2 16:23:19 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":79} 

 Player 2 16:23:19 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 16:23:19 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 16:23:19 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:23:19 $MOVE_CARD:  
{"moveIndex":4,"cardId":104,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:23:19 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":104,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:23:19 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":104} 

 Player 2 16:23:19 $FLIP_CARD:  
{"cardId":104} 

 Player 2 16:23:19 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":104} 

 Player 2 16:23:19 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:23:19 $MOVE_CARD:  
{"moveIndex":5,"cardId":95,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:23:20 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":95,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:23:20 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":95} 

 Player 2 16:23:20 $FLIP_CARD:  
{"cardId":95} 

 Player 2 16:23:20 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":95} 

 Player 2 16:23:20 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:23:20 $MOVE_CARD:  
{"moveIndex":6,"cardId":22,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:23:20 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":22,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:23:20 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":22} 

 Player 2 16:23:20 $FLIP_CARD:  
{"cardId":22} 

 Player 2 16:23:20 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":22} 

 Player 2 16:23:20 $GAME_HAS_STARTED:  

 Player 2 16:23:20 $SET_TURN:  
{"playerId":2} 

 Player 2 16:23:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:23:20 $NEXT_STACK_ID:  

 Player 2 16:23:20 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}} 

 Player 2 16:23:20 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}} 

 Player 2 16:23:20 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 16:23:20 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 2 16:23:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add Start Turn Loot Draw 1 "}} 

 Player 2 16:23:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:23:23 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}} 

 Player 2 16:23:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding Start Turn Loot Draw 1"},"childOfId":0} 

 Player 2 16:23:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 2 16:23:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:23:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 2 16:23:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:23:23 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:23:23 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[321,322]} 

 Player 1 16:23:23 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:23:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve Start Turn Loot Draw 1 "}} 

 Player 2 16:23:24 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":1,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}]} 

 Player 2 16:23:24 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:23:24 $MOVE_CARD:  
{"moveIndex":7,"cardId":67,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 2 16:23:24 $REACTION_TOGGLED:  
{"playerId":2} 

 Player 1 16:23:24 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":67,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:23:24 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":67} 

 Player 2 16:23:24 $FLIP_CARD:  
{"cardId":67} 

 Player 2 16:23:24 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":67} 

 Player 2 16:23:24 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":1,"text":"Player 2 Has Drawn Loot For Start Turn"} 

 Player 2 16:23:24 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13,"lable":"Player 2 Has Drawn Loot For Start Turn"}} 

 Player 2 16:23:24 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 16:23:24 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 16:23:24 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 2 16:23:27 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":1} 

 Player 2 16:23:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve Start Turn Loot Draw 1  "}} 

 Player 2 16:23:27 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13,"lable":"Player 2 Has Drawn Loot For Start Turn"}} 

 Player 2 16:23:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve Start Turn Loot Draw 1"},"childOfId":5} 

 Player 2 16:23:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 2 16:23:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:23:27 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:23:27 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[321,322]} 

 Player 1 16:23:27 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:23:27 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 2 16:23:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 2 16:23:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:23:27 $SHOW_TIMER:  
{"time":90} 

 Player 2 16:23:27 $SHOW_REACTIONS:  
{"playerId":2,"cardsIds":[325,326,104,95,22,67]} 

 Player 2 16:23:31 $HIDE_TIMER:  

 Player 2 16:23:31 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[325,326,104,95,22,67]} 

 Player 2 16:23:31 $NEXT_STACK_ID:  

 Player 2 16:23:31 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":325,"hasLockingStackEffect":false,"itemToPlayCardId":325,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1,"lable":"Player 2 is going to activate Samson"}} 

 Player 2 16:23:31 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":325,"hasLockingStackEffect":false,"itemToPlayCardId":325,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1,"lable":"Player 2 is going to activate Samson"}} 

 Player 2 16:23:31 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 16:23:31 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 2 16:23:33 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[325,326,104,95,22,67]} 

 Player 2 16:23:33 $RESPOND_TO:  
{"playerId":-1,"stackEffectResponse":false} 

 Player 2 16:23:33 $REACTION_TOGGLED:  
{"playerId":2} 

 Player 2 16:23:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Add Activate Item 2 "}} 

 Player 2 16:23:34 $SHOW_ANNOUNCEMENT:  
{"text":"Player 2 Is Choosing Loot To Play"} 

 Player 2 16:23:38 $HIDE_ANNOUNCEMENT:  

 Player 2 16:23:39 $SHOW_DECISION:  
{"startCardId":325,"endCardId":22,"flipEndCard":true} 

 Player 2 16:23:42 $USE_ITEM:  
{"cardId":325} 

 Player 2 16:23:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:23:42 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":325,"hasLockingStackEffect":false,"itemToPlayCardId":325,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1,"lable":"Player 2 is going to activate Samson"}} 

 Player 2 16:23:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Response Adding Activate Item 2"},"childOfId":9} 

 Player 2 16:23:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Wait For Response From Player 2 "},"childOfId":9} 

 Player 2 16:23:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:23:42 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 2 16:23:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":9} 

 Player 2 16:23:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:23:42 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:23:42 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[321,322]} 

 Player 1 16:23:42 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:23:42 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 2 16:23:42 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 16:23:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Resolve Activate Item 2 "}} 

 Player 2 16:23:42 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":2,"creatorCardId":325,"hasLockingStackEffect":false,"itemToPlayCardId":325,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1,"lable":"Player 2 is going to activate Samson"}]} 

 Player 2 16:23:42 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":325,"particleType":6} 

 Player 2 16:23:44 $DISABLE_PARTICLE_EFFECT:  
{"cardId":325,"particleType":6} 

 Player 2 16:23:44 $NEXT_STACK_ID:  

 Player 2 16:23:44 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":22} 

 Player 2 16:23:44 $MOVE_CARD:  
{"moveIndex":8,"cardId":22,"placeID":329,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 16:23:44 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":22,"flipIfFlipped":true,"playerId":2} 

 Player 2 16:23:44 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":22} 

 Player 2 16:23:44 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":3,"text":"Player 2 Is Going To Play 2 Cents(5): addMoney"} 

 Player 2 16:23:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:23:44 $CLEAR_SE_VIS:  

 Player 2 16:23:44 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":325,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":22,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":22,"effctType":1},"lable":"Player 2 Is Going To Play 2 Cents(5): addMoney","hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 16:23:44 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":325,"hasLockingStackEffect":false,"itemToPlayCardId":325,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1,"lable":"Player 2 is going to activate Samson"}} 

 Player 2 16:23:45 $REPLACE_STACK:  
{"currentStack":[{"entityId":3,"creatorCardId":325,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":22,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":22,"effctType":1},"lable":"Player 2 Is Going To Play 2 Cents(5): addMoney","hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":2,"creatorCardId":325,"hasLockingStackEffect":false,"itemToPlayCardId":325,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1,"lable":"Player 2 is going to activate Samson"}]} 

 Player 2 16:23:45 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 16:23:45 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":2,"text":"Player 2 has activated Samson"} 

 Player 2 16:23:45 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ACTIVATE_ITEM","args":[{"type":0,"number":325}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 16:23:45 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":325,"hasLockingStackEffect":false,"itemToPlayCardId":325,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1,"lable":"Player 2 has activated Samson"}} 

 Player 2 16:23:45 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 16:23:45 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 16:23:45 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 2 16:23:47 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":2} 

 Player 2 16:23:47 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 2 16:23:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Remove After Resolve Activate Item 2  "}} 

 Player 2 16:23:50 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":325,"hasLockingStackEffect":false,"itemToPlayCardId":325,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1,"lable":"Player 2 has activated Samson"}} 

 Player 2 16:23:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Response Remove After Resolve Activate Item 2"},"childOfId":14} 

 Player 2 16:23:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Wait For Response From Player 2 "},"childOfId":14} 

 Player 2 16:23:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:23:51 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 2 16:23:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":14} 

 Player 2 16:23:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:23:51 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:23:51 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[321,322]} 

 Player 1 16:23:51 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:23:51 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 16:23:51 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 16:23:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Resolve Play Loot Card 3 "}} 

 Player 2 16:23:51 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":3,"creatorCardId":325,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":22,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":22,"effctType":1},"lable":"Player 2 Is Going To Play 2 Cents(5): addMoney","hasDataBeenCollectedYet":true,"stackEffectType":8}]} 

 Player 2 16:23:51 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":3,"text":"Player 2 Plays 2 Cents(5): addMoney"} 

 Player 2 16:23:51 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":22,"particleType":6} 

 Player 2 16:23:53 $DISABLE_PARTICLE_EFFECT:  
{"cardId":22,"particleType":6} 

 Player 2 16:23:53 $SET_MONEY:  
{"playerId":2,"numOfCoins":5} 

 Player 2 16:23:53 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":2}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 2 16:23:53 $REMOVE_FROM_PILE:  
{"cardId":22} 

 Player 2 16:23:53 $MOVE_CARD:  
{"moveIndex":9,"cardId":22,"placeID":330,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 16:23:53 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":22,"flipIfFlipped":true,"playerId":2} 

 Player 2 16:23:53 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":22} 

 Player 2 16:23:53 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":325,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":22,"lootPlayerId":2,"lable":"Player 2 Plays 2 Cents(5): addMoney","hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 16:23:53 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 16:23:53 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 16:23:53 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 2 16:23:56 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":3} 

 Player 2 16:23:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Remove After Resolve Play Loot Card 3  "}} 

 Player 2 16:23:56 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":325,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":22,"lootPlayerId":2,"lable":"Player 2 Plays 2 Cents(5): addMoney","hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 16:23:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Response Remove After Resolve Play Loot Card 3"},"childOfId":19} 

 Player 2 16:23:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Wait For Response From Player 1 "},"childOfId":19} 

 Player 2 16:23:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:23:56 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:23:56 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[321,322]} 

 Player 1 16:23:56 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:23:57 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 2 16:23:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":19} 

 Player 2 16:23:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:23:57 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 2 16:23:57 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 16:23:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Stack Was Emptied "}} 

 Player 2 16:23:57 $CLEAR_SE_VIS:  

 Player 2 16:23:57 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 2 16:23:57 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 2 16:23:57 $UPDATE_ACTIONS:  

 Player 2 16:27:42 $NEXT_STACK_ID:  

 Player 2 16:27:42 $ADD_TO_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":325,"hasLockingStackEffect":false,"itemToPlayCardId":326,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1,"lable":"Player 2 is going to activate Blood Lust"}} 

 Player 2 16:27:42 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":325,"hasLockingStackEffect":false,"itemToPlayCardId":326,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1,"lable":"Player 2 is going to activate Blood Lust"}} 

 Player 2 16:27:42 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 16:27:42 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 2 16:27:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Add Activate Item 4 "}} 

 Player 2 16:27:45 $SHOW_ANNOUNCEMENT:  
{"text":"Player 2 is Choosing Target"} 

 Player 2 16:27:46 $HIDE_ANNOUNCEMENT:  

 Player 2 16:27:46 $SHOW_DECISION:  
{"startCardId":326,"endCardId":325} 

 Player 2 16:27:49 $USE_ITEM:  
{"cardId":326} 

 Player 2 16:27:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:27:49 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":325,"hasLockingStackEffect":false,"itemToPlayCardId":326,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1,"lable":"Player 2 is going to activate Blood Lust"}} 

 Player 2 16:27:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Response Adding Activate Item 4"},"childOfId":24} 

 Player 2 16:27:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Wait For Response From Player 2 "},"childOfId":24} 

 Player 2 16:27:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:27:50 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 2 16:27:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Wait For Response From Player 1 "},"childOfId":24} 

 Player 2 16:27:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:27:50 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:27:50 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[321,322]} 

 Player 1 16:27:50 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:27:50 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 2 16:27:50 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 16:27:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Resolve Activate Item 4 "}} 

 Player 2 16:27:50 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":4,"creatorCardId":325,"hasLockingStackEffect":false,"itemToPlayCardId":326,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1,"lable":"Player 2 is going to activate Blood Lust"}]} 

 Player 2 16:27:50 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":326,"particleType":6} 

 Player 2 16:27:52 $DISABLE_PARTICLE_EFFECT:  
{"cardId":326,"particleType":6} 

 Player 2 16:27:52 $PLAYER_GAIN_DMG:  
{"playerId":2,"DMGToGain":1,"isTemp":true} 

 Player 2 16:27:52 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":4,"text":"Player 2 has activated Blood Lust"} 

 Player 2 16:27:52 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ACTIVATE_ITEM","args":[{"type":0,"number":326}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 2 16:27:52 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":325,"hasLockingStackEffect":false,"itemToPlayCardId":326,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1,"lable":"Player 2 has activated Blood Lust"}} 

 Player 2 16:27:52 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 16:27:52 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 16:27:52 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 2 16:27:55 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":4} 

 Player 2 16:27:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Remove After Resolve Activate Item 4  "}} 

 Player 2 16:27:55 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":325,"hasLockingStackEffect":false,"itemToPlayCardId":326,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1,"lable":"Player 2 has activated Blood Lust"}} 

 Player 2 16:27:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Response Remove After Resolve Activate Item 4"},"childOfId":29} 

 Player 2 16:27:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Wait For Response From Player 1 "},"childOfId":29} 

 Player 2 16:27:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:27:55 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:27:55 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[321,322]} 

 Player 1 16:27:55 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:27:55 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 2 16:27:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Wait For Response From Player 2 "},"childOfId":29} 

 Player 2 16:27:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:27:55 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 2 16:27:55 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 16:27:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Stack Was Emptied "}} 

 Player 2 16:27:55 $CLEAR_SE_VIS:  

 Player 2 16:28:00 $NEXT_STACK_ID:  

 Player 2 16:28:00 $ADD_TO_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":282,"stackEffectType":4,"lable":"Player 2 declared attack on Keeper Head"}} 

 Player 2 16:28:00 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":282,"stackEffectType":4,"lable":"Player 2 declared attack on Keeper Head"}} 

 Player 2 16:28:00 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 16:28:00 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 2 16:28:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Add Player Declare Attack On Monster 5 "}} 

 Player 2 16:28:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:28:03 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":282,"stackEffectType":4,"lable":"Player 2 declared attack on Keeper Head"}} 

 Player 2 16:28:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Response Adding Player Declare Attack On Monster 5"},"childOfId":34} 

 Player 2 16:28:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Wait For Response From Player 2 "},"childOfId":34} 

 Player 2 16:28:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:28:03 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 2 16:28:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Wait For Response From Player 1 "},"childOfId":34} 

 Player 2 16:28:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:28:03 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:28:03 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[321,322]} 

 Player 1 16:28:03 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:28:03 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 2 16:28:03 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 16:28:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Resolve Player Declare Attack On Monster 5 "}} 

 Player 2 16:28:03 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":5,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":282,"stackEffectType":4,"lable":"Player 2 declared attack on Keeper Head"}]} 

 Player 2 16:28:03 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":282,"particleType":5} 

 Player 2 16:28:03 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":5,"text":"Player 2 Has Entered Battle with Keeper Head"} 

 Player 2 16:28:03 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":6,"originStackId":5},"isAfterActivation":true,"index":6} 

 Player 2 16:28:04 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":282,"stackEffectType":4,"lable":"Player 2 Has Entered Battle with Keeper Head"}} 

 Player 2 16:28:04 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 16:28:04 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 16:28:04 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 2 16:28:06 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":5} 

 Player 2 16:28:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Remove After Resolve Player Declare Attack On Monster 5  "}} 

 Player 2 16:28:06 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":282,"stackEffectType":4,"lable":"Player 2 Has Entered Battle with Keeper Head"}} 

 Player 2 16:28:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Response Remove After Resolve Player Declare Attack On Monster 5"},"childOfId":39} 

 Player 2 16:28:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Wait For Response From Player 1 "},"childOfId":39} 

 Player 2 16:28:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:28:07 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:28:07 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[321,322]} 

 Player 1 16:28:07 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:28:07 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 2 16:28:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Wait For Response From Player 2 "},"childOfId":39} 

 Player 2 16:28:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:28:07 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 2 16:28:07 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 16:28:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Stack Was Emptied "}} 

 Player 2 16:28:07 $CLEAR_SE_VIS:  

 Player 2 16:28:09 $NEXT_STACK_ID:  

 Player 2 16:28:09 $ADD_TO_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":325,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":95,"lootPlayerId":2,"lable":"Player 2 Is Going To Play Curved Horn ","hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 16:28:09 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":325,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":95,"lootPlayerId":2,"lable":"Player 2 Is Going To Play Curved Horn ","hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 16:28:09 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 16:28:09 $SHOW_STACK_EFFECT:  
{"effectId":6} 

 Player 2 16:28:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Add Play Loot Card 6 "}} 

 Player 2 16:28:12 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":95} 

 Player 2 16:28:12 $MOVE_CARD:  
{"moveIndex":10,"cardId":95,"placeID":329,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 16:28:12 $MOVE_CARD_END:  
{"moveIndex":10,"cardId":95,"flipIfFlipped":true,"playerId":2} 

 Player 2 16:28:12 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":95} 

 Player 2 16:28:13 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":6,"text":"Player 2 Is Going To Play Curved Horn: AddTrinket"} 

 Player 2 16:28:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:28:13 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":325,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":95,"lootPlayerId":2,"effectToDo":{"effectName":"AddTrinket","cardEffectNum":0,"cardPlayerId":2,"cardId":95,"effctType":1},"lable":"Player 2 Is Going To Play Curved Horn: AddTrinket","hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 16:28:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Response Adding Play Loot Card 6"},"childOfId":44} 

 Player 2 16:28:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Wait For Response From Player 2 "},"childOfId":44} 

 Player 2 16:28:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:28:13 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 2 16:28:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Wait For Response From Player 1 "},"childOfId":44} 

 Player 2 16:28:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:28:13 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:28:13 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[321,322]} 

 Player 1 16:28:13 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:28:13 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 2 16:28:13 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 2 16:28:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Resolve Play Loot Card 6 "}} 

 Player 2 16:28:13 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":6,"creatorCardId":325,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":95,"lootPlayerId":2,"effectToDo":{"effectName":"AddTrinket","cardEffectNum":0,"cardPlayerId":2,"cardId":95,"effctType":1},"lable":"Player 2 Is Going To Play Curved Horn: AddTrinket","hasDataBeenCollectedYet":true,"stackEffectType":8}]} 

 Player 2 16:28:13 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":6,"text":"Player 2 Plays Curved Horn: AddTrinket"} 

 Player 2 16:28:13 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":95,"particleType":6} 

 Player 2 16:28:15 $DISABLE_PARTICLE_EFFECT:  
{"cardId":95,"particleType":6} 

 Player 2 16:28:15 $CARD_ADD_TRINKET:  
{"cardId":95,"playerId":2,"addMuiliEffect":false} 

 Player 2 16:28:15 $REMOVE_FROM_PILE:  
{"cardId":95} 

 Player 2 16:28:15 $REGISTER_PASSIVE_ITEM:  
{"cardId":95} 

 Player 2 16:28:15 $MOVE_CARD:  
{"moveIndex":11,"cardId":95,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 

 Player 1 16:28:15 $MOVE_CARD_END:  
{"moveIndex":11,"cardId":95,"flipIfFlipped":true,"playerId":2} 

 Player 2 16:28:15 $ADD_AN_ITEM:  
{"playerId":2,"cardId":95,"isReward":true} 

 Player 2 16:28:15 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":95}],"result":true,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 

 Player 2 16:28:15 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":325,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":95,"lootPlayerId":2,"lable":"Player 2 Plays Curved Horn: AddTrinket","hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 16:28:15 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 16:28:15 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 16:28:16 $SHOW_STACK_EFFECT:  
{"effectId":6} 

 Player 2 16:28:18 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":6} 

 Player 2 16:28:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Remove After Resolve Play Loot Card 6  "}} 

 Player 2 16:28:18 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":325,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":95,"lootPlayerId":2,"lable":"Player 2 Plays Curved Horn: AddTrinket","hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 16:28:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Response Remove After Resolve Play Loot Card 6"},"childOfId":49} 

 Player 2 16:28:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Wait For Response From Player 1 "},"childOfId":49} 

 Player 2 16:28:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:28:19 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:28:19 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[321,322]} 

 Player 1 16:28:19 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:28:19 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 2 16:28:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Wait For Response From Player 2 "},"childOfId":49} 

 Player 2 16:28:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:28:19 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 2 16:28:19 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 2 16:28:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Stack Was Emptied "}} 

 Player 2 16:28:19 $CLEAR_SE_VIS:  

 Player 2 16:28:20 $NEXT_STACK_ID:  

 Player 2 16:28:20 $ADD_TO_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":325,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":282,"lable":"Player 2 is rolling against Keeper Head<Monster>"}} 

 Player 2 16:28:20 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":325,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":282,"lable":"Player 2 is rolling against Keeper Head<Monster>"}} 

 Player 2 16:28:20 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 16:28:20 $SHOW_STACK_EFFECT:  
{"effectId":7} 

 Player 2 16:28:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Add Player Attack Roll On Monster 7 "}} 

 Player 2 16:28:23 $ROLL_DICE:  
{"playerId":2} 

 Player 2 16:28:25 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":4} 

 Player 2 16:28:25 $UPDATE_STACK_VIS:  
{"stackId":7,"text":"player rolled 4 vs Keeper Head<Monster>"} 

 Player 2 16:28:25 $SHOW_DICE_ROLL:  
{"stackId":7} 

 Player 2 16:28:28 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":7,"text":"Player 2 rolled 4 vs Keeper Head<Monster>"} 

 Player 2 16:28:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:28:28 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":325,"numberRolled":4,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":282,"lable":"Player 2 rolled 4 vs Keeper Head<Monster>"}} 

 Player 2 16:28:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Response Adding Player Attack Roll On Monster 7"},"childOfId":54} 

 Player 2 16:28:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":56,"_text":"Wait For Response From Player 2 "},"childOfId":54} 

 Player 2 16:28:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:28:28 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 2 16:28:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":57,"_text":"Wait For Response From Player 1 "},"childOfId":54} 

 Player 2 16:28:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:28:28 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:28:28 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[321,322]} 

 Player 1 16:28:28 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:28:28 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 2 16:28:28 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 2 16:28:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":58,"_text":"Resolve Player Attack Roll On Monster 7 "}} 

 Player 2 16:28:28 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":7,"creatorCardId":325,"numberRolled":4,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":282,"lable":"Player 2 rolled 4 vs Keeper Head<Monster>"}]} 

 Player 2 16:28:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":59,"_text":"Added 0 to original roll"}} 

 Player 2 16:28:28 $LOG_ERROR:  
{"message":"\"Cannot read property 'name' of null\"","stack":"\"TypeError: Cannot read property 'name' of null\\n    at CardOwnerFirstAttackRollOfTurn.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:38:46)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\\n    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113284:71\\n    at new Promise (<anonymous>)\\n    at 486.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113264:14)\\n    at CardOwnerFirstAttackRollOfTurn.testCondition (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:31:16)\\n    at Function.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:368:56)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\""} 
//////Error From Player 2////
  

 Player 2 16:28:28 $LOG_ERROR:  
//////Error From Player 2////

 "\"Cannot read property 'name' of null\""

 + "\"TypeError: Cannot read property 'name' of null\
    at CardOwnerFirstAttackRollOfTurn.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:38:46)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113284:71\
    at new Promise (<anonymous>)\
    at 486.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113264:14)\
    at CardOwnerFirstAttackRollOfTurn.testCondition (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:31:16)\
    at Function.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:368:56)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\""

////// 
//////Error From Player 2////

 "\"Cannot read property 'name' of null\""

 + "\"TypeError: Cannot read property 'name' of null\
    at CardOwnerFirstAttackRollOfTurn.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:38:46)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113284:71\
    at new Promise (<anonymous>)\
    at 486.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113264:14)\
    at CardOwnerFirstAttackRollOfTurn.testCondition (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:31:16)\
    at Function.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:368:56)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\""

////// 

 Player 2 16:28:28 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":7,"text":"Player 2 Rolled 4 Against Keeper Head<Monster> 4"} 

 Player 2 16:28:28 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":7,"text":"Player 2 Roll Hit"} 

 Player 2 16:28:28 $NEXT_STACK_ID:  

 Player 2 16:28:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:28:28 $CLEAR_SE_VIS:  

 Player 2 16:28:28 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":282,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4,"lable":"Samson is going to hurt Keeper Head"}} 

 Player 2 16:28:28 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":325,"numberRolled":4,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":282,"lable":"Player 2 Roll Hit"}} 

 Player 2 16:28:28 $REPLACE_STACK:  
{"currentStack":[{"entityId":8,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":282,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4,"lable":"Samson is going to hurt Keeper Head"},{"entityId":7,"creatorCardId":325,"numberRolled":4,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":282,"lable":"Player 2 Roll Hit"}]} 

 Player 2 16:28:28 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 16:28:29 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":8,"originStackId":7},"isAfterActivation":true,"index":8} 

 Player 2 16:28:29 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":325,"numberRolled":4,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":282,"lable":"Player 2 Roll Hit"}} 

 Player 2 16:28:29 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 16:28:29 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 16:28:29 $SHOW_STACK_EFFECT:  
{"effectId":7} 

 Player 2 16:28:31 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":7} 

 Player 2 16:28:31 $SHOW_STACK_EFFECT:  
{"effectId":8} 

 Player 2 16:28:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":60,"_text":"Remove After Resolve Player Attack Roll On Monster 7  "}} 

 Player 2 16:28:34 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":325,"numberRolled":4,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":282,"lable":"Player 2 Roll Hit"}} 

 Player 2 16:28:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":61,"_text":"Response Remove After Resolve Player Attack Roll On Monster 7"},"childOfId":60} 

 Player 2 16:28:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":62,"_text":"Wait For Response From Player 2 "},"childOfId":60} 

 Player 2 16:28:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:28:34 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 2 16:28:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":63,"_text":"Wait For Response From Player 1 "},"childOfId":60} 

 Player 2 16:28:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:28:34 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:28:34 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[321,322]} 

 Player 1 16:28:34 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:28:34 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 2 16:28:34 $ACTION_MASSAGE_REMOVE:  
{"id":61} 

 Player 2 16:28:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":64,"_text":"Resolve Monster Combat Damage To A Player 8 "}} 

 Player 2 16:28:35 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":8,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":282,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4,"lable":"Samson is going to hurt Keeper Head"}]} 

 Player 2 16:28:35 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":8,"text":"Samson will deal 2 combat damage to Keeper Head "} 

 Player 2 16:28:35 $UPDATE_STACK_VIS:  
{"stackId":8,"text":"Samson will deal 2 combat damage to Keeper Head"} 

 Player 2 16:28:35 $MONSTER_GET_DAMAGED:  
{"cardId":282,"hpLeft":0,"damageDealerId":325} 

 Player 2 16:28:35 $NEXT_STACK_ID:  

 Player 2 16:28:35 $CLEAR_SE_VIS:  

 Player 2 16:28:35 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":282,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4,"lable":"Samson will deal 2 combat damage to Keeper Head "}} 

 Player 2 16:28:35 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":325,"monsterToDieCardId":282,"stackEffectType":5,"killerId":325,"lable":"[object Object] Is Going To Be Killed by Samson"}} 

 Player 2 16:28:35 $REPLACE_STACK:  
{"currentStack":[{"entityId":8,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":282,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4,"lable":"Samson will deal 2 combat damage to Keeper Head "},{"entityId":9,"creatorCardId":325,"monsterToDieCardId":282,"stackEffectType":5,"killerId":325,"lable":"[object Object] Is Going To Be Killed by Samson"}]} 

 Player 2 16:28:35 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":325,"monsterToDieCardId":282,"stackEffectType":5,"killerId":325,"lable":"[object Object] Is Going To Be Killed by Samson"}} 

 Player 2 16:28:35 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 16:28:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:28:35 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":325},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":282,"scopeIsPlayer":false,"index":9,"originStackId":-1},"isAfterActivation":true,"index":9} 

 Player 2 16:28:35 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":2},{"type":2,"number":4},{"type":0,"number":325},{"type":0,"number":282}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":10,"originStackId":8},"isAfterActivation":true,"index":10} 

 Player 2 16:28:35 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":282,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4,"lable":"Samson will deal 2 combat damage to Keeper Head "}} 

 Player 2 16:28:35 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 16:28:35 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 16:28:35 $SHOW_STACK_EFFECT:  
{"effectId":8} 

 Player 2 16:28:37 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":8} 

 Player 2 16:28:37 $SHOW_STACK_EFFECT:  
{"effectId":9} 

 Player 2 16:28:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":65,"_text":"Remove After Resolve Monster Combat Damage To A Player 8  "}} 

 Player 2 16:28:40 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":8,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":282,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4,"lable":"Samson will deal 2 combat damage to Keeper Head "}} 

 Player 2 16:28:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":66,"_text":"Response Remove After Resolve Monster Combat Damage To A Player 8"},"childOfId":65} 

 Player 2 16:28:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":67,"_text":"Wait For Response From Player 2 "},"childOfId":65} 

 Player 2 16:28:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:28:41 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 2 16:28:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":68,"_text":"Wait For Response From Player 1 "},"childOfId":65} 

 Player 2 16:28:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:28:41 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:28:41 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[321,322]} 

 Player 1 16:28:41 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:28:41 $ACTION_MASSAGE_REMOVE:  
{"id":68} 

 Player 2 16:28:41 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 2 16:28:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":69,"_text":"Resolve Monster Is Going To Die 9 "}} 

 Player 2 16:28:41 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":9,"creatorCardId":325,"monsterToDieCardId":282,"stackEffectType":5,"killerId":325,"lable":"[object Object] Is Going To Be Killed by Samson"}]} 

 Player 2 16:28:41 $DISABLE_PARTICLE_EFFECT:  
{"cardId":282,"particleType":5} 

 Player 2 16:28:41 $CANCEL_ATTACK:  

 Player 2 16:28:41 $NEXT_STACK_ID:  

 Player 2 16:28:41 $NEXT_STACK_ID:  

 Player 2 16:28:41 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":11,"text":"Player 2 Is About To Roll A Dice"} 

 Player 2 16:28:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:28:41 $CLEAR_SE_VIS:  

 Player 2 16:28:41 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":325,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"monsterCardWithRewardId":282,"playerCardIdToReward":325,"stackEffectType":7,"lable":"Player 2 Is Going To Get Keeper Head<Monster>'s Reward"}} 

 Player 2 16:28:41 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":325,"monsterToDieCardId":282,"stackEffectType":5,"killerId":325,"lable":"[object Object] Is Going To Be Killed by Samson"}} 

 Player 2 16:28:41 $REPLACE_STACK:  
{"currentStack":[{"entityId":10,"creatorCardId":325,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"monsterCardWithRewardId":282,"playerCardIdToReward":325,"stackEffectType":7,"lable":"Player 2 Is Going To Get Keeper Head<Monster>'s Reward"},{"entityId":9,"creatorCardId":325,"monsterToDieCardId":282,"stackEffectType":5,"killerId":325,"lable":"[object Object] Is Going To Be Killed by Samson"}]} 

 Player 2 16:28:41 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 16:28:41 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":325,"monsterToDieCardId":282,"stackEffectType":5,"killerId":325,"lable":"[object Object] Is Going To Be Killed by Samson"}} 

 Player 2 16:28:41 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 16:28:41 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 16:28:41 $SHOW_STACK_EFFECT:  
{"effectId":9} 

 Player 1 16:28:41 $NEXT_STACK_ID:  

 Player 1 16:28:41 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":12,"text":"Player 2 Is About To Roll A Dice"} 

 Player 1 16:28:42 $NEXT_STACK_ID:  

 Player 1 16:28:42 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":13,"text":"Player 2 Is About To Roll A Dice"} 

 Player 2 16:28:44 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":9} 

 Player 2 16:28:44 $SHOW_STACK_EFFECT:  
{"effectId":10} 

 Player 2 16:28:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":70,"_text":"Remove After Resolve Monster Is Going To Die 9  "}} 

 Player 2 16:28:47 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":9,"creatorCardId":325,"monsterToDieCardId":282,"stackEffectType":5,"killerId":325,"lable":"[object Object] Is Going To Be Killed by Samson"}} 

 Player 2 16:28:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":71,"_text":"Response Remove After Resolve Monster Is Going To Die 9"},"childOfId":70} 

 Player 2 16:28:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":72,"_text":"Wait For Response From Player 2 "},"childOfId":70} 

 Player 2 16:28:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:28:47 $ACTION_MASSAGE_REMOVE:  
{"id":72} 

 Player 2 16:28:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":73,"_text":"Wait For Response From Player 1 "},"childOfId":70} 

 Player 2 16:28:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:28:47 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:28:47 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[321,322]} 

 Player 1 16:28:47 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:28:47 $ACTION_MASSAGE_REMOVE:  
{"id":73} 

 Player 2 16:28:47 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 2 16:28:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":74,"_text":"Resolve Monster Death Reward 10 "}} 

 Player 2 16:28:47 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":10,"creatorCardId":325,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"monsterCardWithRewardId":282,"playerCardIdToReward":325,"stackEffectType":7,"lable":"Player 2 Is Going To Get Keeper Head<Monster>'s Reward"}]} 

 Player 2 16:28:47 $ADD_TO_STACK:  
{"stackEffect":{"entityId":11,"creatorCardId":325,"stackEffectToLock":{"entityId":10,"creatorCardId":325,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"monsterCardWithRewardId":282,"playerCardIdToReward":325,"stackEffectType":7,"lable":"Player 2 Is Going To Get Keeper Head<Monster>'s Reward"},"hasLockingStackEffect":false,"stackEffectType":11,"lable":"Player 2 Is About To Roll A Dice"}} 

 Player 2 16:28:47 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":325,"stackEffectToLock":{"entityId":10,"creatorCardId":325,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"monsterCardWithRewardId":282,"playerCardIdToReward":325,"stackEffectType":7,"lable":"Player 2 Is Going To Get Keeper Head<Monster>'s Reward"},"hasLockingStackEffect":false,"stackEffectType":11,"lable":"Player 2 Is About To Roll A Dice"}} 

 Player 2 16:28:47 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 16:28:47 $SHOW_STACK_EFFECT:  
{"effectId":11} 

 Player 1 16:28:47 $NEXT_STACK_ID:  

 Player 1 16:28:47 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":14,"text":"Player 2 Is About To Roll A Dice"} 

 Player 1 16:28:48 $NEXT_STACK_ID:  

 Player 1 16:28:48 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":15,"text":"Player 2 Is About To Roll A Dice"} 

 Player 1 16:28:48 $NEXT_STACK_ID:  

 Player 1 16:28:48 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":16,"text":"Player 2 Is About To Roll A Dice"} 

 Player 2 16:28:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":75,"_text":"Add Roll Dice 11 "}} 

 Player 2 16:28:50 $ROLL_DICE:  
{"playerId":2} 

 Player 2 16:28:53 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":1} 

 Player 2 16:28:53 $UPDATE_STACK_VIS:  
{"stackId":11,"text":"player 2 rolled 1"} 

 Player 2 16:28:53 $SHOW_DICE_ROLL:  
{"stackId":11} 

 Player 2 16:28:56 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":11,"text":"Player 2 Rolled 1"} 

 Player 2 16:28:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:28:56 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":11,"creatorCardId":325,"stackEffectToLock":{"entityId":10,"creatorCardId":325,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"monsterCardWithRewardId":282,"playerCardIdToReward":325,"stackEffectType":7,"lable":"Player 2 Is Going To Get Keeper Head<Monster>'s Reward"},"hasLockingStackEffect":false,"numberRolled":1,"stackEffectType":11,"lable":"Player 2 Rolled 1"}} 

 Player 2 16:28:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":76,"_text":"Response Adding Roll Dice 11"},"childOfId":75} 

 Player 2 16:28:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":77,"_text":"Wait For Response From Player 2 "},"childOfId":75} 

 Player 2 16:28:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:28:56 $ACTION_MASSAGE_REMOVE:  
{"id":77} 

 Player 2 16:28:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":78,"_text":"Wait For Response From Player 1 "},"childOfId":75} 

 Player 2 16:28:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:28:56 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:28:56 $NEXT_STACK_ID:  

 Player 1 16:28:56 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":17,"text":"Player 2 Is About To Roll A Dice"} 

 Player 1 16:28:56 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[321,322]} 

 Player 1 16:28:56 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:28:56 $ACTION_MASSAGE_REMOVE:  
{"id":78} 

 Player 2 16:28:56 $ACTION_MASSAGE_REMOVE:  
{"id":76} 

 Player 2 16:28:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":79,"_text":"Resolve Roll Dice 11 "}} 

 Player 2 16:28:56 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":10,"creatorCardId":325,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"monsterCardWithRewardId":282,"playerCardIdToReward":325,"stackEffectType":7,"lable":"Player 2 Is Going To Get Keeper Head<Monster>'s Reward"},{"entityId":11,"creatorCardId":325,"stackEffectToLock":{"entityId":10,"creatorCardId":325,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"monsterCardWithRewardId":282,"playerCardIdToReward":325,"stackEffectType":7,"lable":"Player 2 Is Going To Get Keeper Head<Monster>'s Reward"},"hasLockingStackEffect":false,"numberRolled":1,"stackEffectType":11,"lable":"Player 2 Rolled 1"}]} 

 Player 2 16:28:56 $LOG_ERROR:  
{"message":"\"Cannot read property 'name' of null\"","stack":"\"TypeError: Cannot read property 'name' of null\\n    at CardOwnerFirstAttackRollOfTurn.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:38:46)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\\n    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113284:71\\n    at new Promise (<anonymous>)\\n    at 486.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113264:14)\\n    at CardOwnerFirstAttackRollOfTurn.testCondition (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:31:16)\\n    at Function.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:368:56)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\""} 
//////Error From Player 2////
  

 Player 2 16:28:56 $LOG_ERROR:  
//////Error From Player 2////

 "\"Cannot read property 'name' of null\""

 + "\"TypeError: Cannot read property 'name' of null\
    at CardOwnerFirstAttackRollOfTurn.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:38:46)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113284:71\
    at new Promise (<anonymous>)\
    at 486.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113264:14)\
    at CardOwnerFirstAttackRollOfTurn.testCondition (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:31:16)\
    at Function.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:368:56)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\""

////// 
//////Error From Player 2////

 "\"Cannot read property 'name' of null\""

 + "\"TypeError: Cannot read property 'name' of null\
    at CardOwnerFirstAttackRollOfTurn.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:38:46)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113284:71\
    at new Promise (<anonymous>)\
    at 486.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113264:14)\
    at CardOwnerFirstAttackRollOfTurn.testCondition (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:31:16)\
    at Function.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:368:56)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\""

////// 

 Player 2 16:28:56 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":11,"originStackId":11},"isAfterActivation":true,"index":11} 

 Player 2 16:28:56 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":11,"creatorCardId":325,"stackEffectToLock":{"entityId":10,"creatorCardId":325,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"monsterCardWithRewardId":282,"playerCardIdToReward":325,"stackEffectType":7,"lable":"Player 2 Is Going To Get Keeper Head<Monster>'s Reward"},"hasLockingStackEffect":false,"numberRolled":1,"stackEffectType":11,"lable":"Player 2 Rolled 1"}} 

 Player 2 16:28:56 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":10,"creatorCardId":325,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"monsterCardWithRewardId":282,"playerCardIdToReward":325,"stackEffectType":7,"lable":"Player 2 Is Going To Get Keeper Head<Monster>'s Reward"}]} 

 Player 2 16:28:56 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 16:28:56 $SHOW_STACK_EFFECT:  
{"effectId":11} 

 Player 1 16:28:56 $NEXT_STACK_ID:  

 Player 1 16:28:57 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":18,"text":"Player 2 Is About To Roll A Dice"} 

 Player 1 16:28:57 $NEXT_STACK_ID:  

 Player 1 16:28:57 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":19,"text":"Player 2 Is About To Roll A Dice"} 

 Player 1 16:28:57 $NEXT_STACK_ID:  

 Player 1 16:28:57 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":20,"text":"Player 2 Is About To Roll A Dice"} 

 Player 1 16:28:57 $NEXT_STACK_ID:  

 Player 1 16:28:57 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":21,"text":"Player 2 Is About To Roll A Dice"} 

 Player 2 16:28:59 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":11} 

 Player 2 16:28:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":80,"_text":"Remove After Resolve Roll Dice 11  "}} 

 Player 2 16:28:59 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":11,"creatorCardId":325,"stackEffectToLock":{"entityId":10,"creatorCardId":325,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"monsterCardWithRewardId":282,"playerCardIdToReward":325,"stackEffectType":7,"lable":"Player 2 Is Going To Get Keeper Head<Monster>'s Reward"},"hasLockingStackEffect":false,"numberRolled":1,"stackEffectType":11,"lable":"Player 2 Rolled 1"}} 

 Player 2 16:28:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":81,"_text":"Response Remove After Resolve Roll Dice 11"},"childOfId":80} 

 Player 2 16:28:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":82,"_text":"Wait For Response From Player 1 "},"childOfId":80} 

 Player 2 16:28:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:28:59 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:28:59 $NEXT_STACK_ID:  

 Player 1 16:28:59 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":22,"text":"Player 2 Is About To Roll A Dice"} 

 Player 1 16:28:59 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[321,322]} 

 Player 1 16:28:59 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:29:00 $ACTION_MASSAGE_REMOVE:  
{"id":82} 

 Player 2 16:29:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":83,"_text":"Wait For Response From Player 2 "},"childOfId":80} 

 Player 2 16:29:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:29:00 $ACTION_MASSAGE_REMOVE:  
{"id":83} 

 Player 2 16:29:00 $ACTION_MASSAGE_REMOVE:  
{"id":81} 

 Player 2 16:29:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":84,"_text":"Resolve Monster Death Reward 10 "}} 

 Player 2 16:29:00 $SET_MONEY:  
{"playerId":2,"numOfCoins":6} 

 Player 2 16:29:00 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":1}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":12,"originStackId":-1},"isAfterActivation":true,"index":12} 

 Player 2 16:29:00 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":282,"scopeIsPlayer":false,"index":13,"originStackId":10},"isAfterActivation":true,"index":13} 

 Player 2 16:29:00 $MOVE_CARD:  
{"moveIndex":12,"cardId":282,"placeID":332,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 16:29:00 $MOVE_CARD_END:  
{"moveIndex":12,"cardId":282,"flipIfFlipped":true,"playerId":2} 

 Player 2 16:29:00 $MOVE_CARD_TO_PILE:  
{"type":2,"cardId":282} 

 Player 2 16:29:00 $REMOVE_FROM_PASSIVE_MANAGER:  
{"cardId":282} 

 Player 2 16:29:00 $REMOVE_MONSTER:  
{"holderId":2,"monsterId":282} 

 Player 2 16:29:00 $NEXT_STACK_ID:  

 Player 2 16:29:00 $ADD_TO_STACK:  
{"stackEffect":{"entityId":23,"creatorCardId":325,"slotType":2,"slotToFillId":2,"stackEffectType":10,"lable":"Refill holder2 Slot"}} 

 Player 2 16:29:00 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":23,"creatorCardId":325,"slotType":2,"slotToFillId":2,"stackEffectType":10,"lable":"Refill holder2 Slot"}} 

 Player 2 16:29:01 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 16:29:01 $SHOW_STACK_EFFECT:  
{"effectId":23} 

 Player 2 16:29:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":85,"_text":"Add Reffil Empty Monster Slot 23 "}} 

 Player 2 16:29:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:29:03 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":23,"creatorCardId":325,"slotType":2,"slotToFillId":2,"stackEffectType":10,"lable":"Refill holder2 Slot"}} 

 Player 2 16:29:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":86,"_text":"Response Adding Reffil Empty Monster Slot 23"},"childOfId":85} 

 Player 2 16:29:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":87,"_text":"Wait For Response From Player 2 "},"childOfId":85} 

 Player 2 16:29:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:29:04 $ACTION_MASSAGE_REMOVE:  
{"id":87} 

 Player 2 16:29:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":88,"_text":"Wait For Response From Player 1 "},"childOfId":85} 

 Player 2 16:29:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:29:04 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:29:04 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[321,322]} 

 Player 1 16:29:04 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:29:04 $ACTION_MASSAGE_REMOVE:  
{"id":88} 

 Player 2 16:29:04 $ACTION_MASSAGE_REMOVE:  
{"id":86} 

 Player 2 16:29:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":89,"_text":"Resolve Reffil Empty Monster Slot 23 "}} 

 Player 2 16:29:04 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":10,"creatorCardId":325,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"monsterCardWithRewardId":282,"playerCardIdToReward":325,"stackEffectType":7,"lable":"Player 2 Is Going To Get Keeper Head<Monster>'s Reward"},{"entityId":23,"creatorCardId":325,"slotType":2,"slotToFillId":2,"stackEffectType":10,"lable":"Refill holder2 Slot"}]} 

 Player 2 16:29:04 $DRAW_CARD:  
{"deckType":2} 

 Player 2 16:29:04 $FLIP_CARD:  
{"cardId":243} 

 Player 2 16:29:04 $REGISTER_PASSIVE_ITEM:  
{"cardId":243} 

 Player 2 16:29:04 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":243} 

 Player 2 16:29:04 $NEW_MONSTER_ON_PLACE:  
{"cardId":243,"monsterPlaceId":2} 

 Player 2 16:29:04 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":23,"creatorCardId":325,"slotType":2,"slotToFillId":2,"stackEffectType":10,"lable":"Refill holder2 Slot"}} 

 Player 2 16:29:04 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":10,"creatorCardId":325,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"monsterCardWithRewardId":282,"playerCardIdToReward":325,"stackEffectType":7,"lable":"Player 2 Is Going To Get Keeper Head<Monster>'s Reward"}]} 

 Player 2 16:29:04 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 16:29:04 $SHOW_STACK_EFFECT:  
{"effectId":23} 

 Player 1 16:29:04 $NEXT_STACK_ID:  

 Player 1 16:29:04 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":24,"text":"Player 2 Is About To Roll A Dice"} 

 Player 1 16:29:04 $NEXT_STACK_ID:  

 Player 1 16:29:04 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":25,"text":"Player 2 Is About To Roll A Dice"} 

 Player 2 16:29:07 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":23} 

 Player 2 16:29:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":90,"_text":"Remove After Resolve Reffil Empty Monster Slot 23  "}} 

 Player 2 16:29:07 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":23,"creatorCardId":325,"slotType":2,"slotToFillId":2,"stackEffectType":10,"lable":"Refill holder2 Slot"}} 

 Player 2 16:29:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":91,"_text":"Response Remove After Resolve Reffil Empty Monster Slot 23"},"childOfId":90} 

 Player 2 16:29:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":92,"_text":"Wait For Response From Player 1 "},"childOfId":90} 

 Player 2 16:29:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:29:07 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:29:07 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[321,322]} 

 Player 1 16:29:07 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:29:07 $ACTION_MASSAGE_REMOVE:  
{"id":92} 

 Player 2 16:29:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":93,"_text":"Wait For Response From Player 2 "},"childOfId":90} 

 Player 2 16:29:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:29:07 $ACTION_MASSAGE_REMOVE:  
{"id":93} 

 Player 2 16:29:07 $ACTION_MASSAGE_REMOVE:  
{"id":91} 

 Player 2 16:29:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":94,"_text":"Resolve Monster Death Reward 10 "}} 

 Player 2 16:29:07 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":325,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"monsterCardWithRewardId":282,"playerCardIdToReward":325,"stackEffectType":7,"lable":"Player 2 Is Going To Get Keeper Head<Monster>'s Reward"}} 

 Player 2 16:29:07 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 16:29:07 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 16:29:07 $SHOW_STACK_EFFECT:  
{"effectId":10} 

 Player 1 16:29:07 $NEXT_STACK_ID:  

 Player 1 16:29:07 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":26,"text":"Player 2 Is About To Roll A Dice"} 

 Player 2 16:29:10 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":10} 

 Player 2 16:29:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":95,"_text":"Remove After Resolve Monster Death Reward 10  "}} 

 Player 2 16:29:10 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":10,"creatorCardId":325,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"monsterCardWithRewardId":282,"playerCardIdToReward":325,"stackEffectType":7,"lable":"Player 2 Is Going To Get Keeper Head<Monster>'s Reward"}} 

 Player 2 16:29:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":96,"_text":"Response Remove After Resolve Monster Death Reward 10"},"childOfId":95} 

 Player 2 16:29:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":97,"_text":"Wait For Response From Player 2 "},"childOfId":95} 

 Player 2 16:29:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:29:10 $ACTION_MASSAGE_REMOVE:  
{"id":97} 

 Player 2 16:29:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":98,"_text":"Wait For Response From Player 1 "},"childOfId":95} 

 Player 2 16:29:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:29:10 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:29:10 $NEXT_STACK_ID:  

 Player 1 16:29:10 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":27,"text":"Player 2 Is About To Roll A Dice"} 

 Player 1 16:29:10 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[321,322]} 

 Player 1 16:29:10 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:29:10 $ACTION_MASSAGE_REMOVE:  
{"id":98} 

 Player 2 16:29:10 $ACTION_MASSAGE_REMOVE:  
{"id":96} 

 Player 2 16:29:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":99,"_text":"Stack Was Emptied "}} 

 Player 2 16:29:10 $CLEAR_SE_VIS:  

 Player 2 16:39:46 $MATCH: 