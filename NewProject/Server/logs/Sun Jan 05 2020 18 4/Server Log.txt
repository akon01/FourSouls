Start Log 

 Player 1 18:04:18 $MATCH:  

 Player 1 18:04:19 $START_GAME:  

 Player 2 18:04:19 $MOVE_TO_TABLE:  

 Player 1 18:04:19 $MOVE_TO_TABLE:  

 Player 2 18:04:26 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 1 18:04:26 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 18:04:27 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":260,"itemCardId":261} 

 Player 2 18:04:27 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":271}],"result":true,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 18:04:27 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":270,"itemCardId":271} 

 Player 2 18:04:27 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[98,33,96,61,89,126,133,20,138,142,108,137,114,14,17,51,49,77,110,55,107,11,136,101,63,13,125,95,66,24,131,62,64,59,70,37,38,53,8,76,35,127,79,87,54,42,88,40,21,105,34,56,50,72,16,80,139,130,121,128,119,52,93,46,99,19,67,73,116,83,84,68,111,100,106,143,129,86,124,28,118,36,141,135,81,65,22,41,60,18,26,134,45,29,104,12,7,78,122,23,15,97,31,58,57,103,102,44,47,25,94,113,30,27,74,71,123,48,69,120,85,132,32,91,75,9,90,39,43,112,10,140,92,82,117,109,115]} 

 Player 2 18:04:27 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[238,216,217,211,246,220,212,207,223,245,259,209,218,232,206,236,239,227,228,234,235,208,233,215,219,230,253,247,252,225,251,249,224,222,258,226,250,229,243,221,231,257,254,213,210,242,237,240,214,255,256,248,244,241]} 

 Player 2 18:04:27 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[156,166,200,199,182,203,192,185,158,148,181,190,153,189,165,174,202,160,149,176,159,193,171,152,183,147,146,167,191,168,201,161,162,164,197,180,179,187,186,177,184,154,195,175,150,155,198,194,172,151,196,178,157,188,169,173,163,170]} 

 Player 2 18:04:27 $DRAW_CARD:  
{"deckType":5} 

 Player 2 18:04:27 $FLIP_CARD:  
{"cardId":170} 

 Player 2 18:04:27 $ADD_STORE_CARD:  
{"cardId":170} 

 Player 2 18:04:27 $DRAW_CARD:  
{"deckType":5} 

 Player 2 18:04:27 $FLIP_CARD:  
{"cardId":163} 

 Player 2 18:04:27 $ADD_STORE_CARD:  
{"cardId":163} 

 Player 2 18:04:27 $DRAW_CARD:  
{"deckType":2} 

 Player 2 18:04:27 $FLIP_CARD:  
{"cardId":241} 

 Player 2 18:04:27 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":241} 

 Player 2 18:04:27 $NEW_MONSTER_ON_PLACE:  
{"cardId":241,"monsterPlaceId":1} 

 Player 2 18:04:27 $DRAW_CARD:  
{"deckType":2} 

 Player 2 18:04:27 $FLIP_CARD:  
{"cardId":244} 

 Player 2 18:04:27 $REGISTER_PASSIVE_ITEM:  
{"cardId":244} 

 Player 2 18:04:27 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":244} 

 Player 2 18:04:27 $NEW_MONSTER_ON_PLACE:  
{"cardId":244,"monsterPlaceId":2} 

 Player 2 18:04:27 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 18:04:27 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":260,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 18:04:27 $DRAW_CARD:  
{"deckType":1} 

 Player 2 18:04:27 $MOVE_CARD:  
{"moveIndex":1,"cardId":115,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 18:04:27 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":261}],"result":true,"preventMethod":false,"methodScopeId":260,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 18:04:28 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":115,"flipIfFlipped":false,"playerId":2} 

 Player 2 18:04:28 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":115} 

 Player 2 18:04:28 $FLIP_CARD:  
{"cardId":115} 

 Player 2 18:04:28 $FLIP_CARD:  
{"cardId":115} 

 Player 2 18:04:28 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":115} 

 Player 2 18:04:28 $DRAW_CARD:  
{"deckType":1} 

 Player 2 18:04:28 $MOVE_CARD:  
{"moveIndex":2,"cardId":109,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 18:04:28 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":109,"flipIfFlipped":false,"playerId":2} 

 Player 2 18:04:28 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":109} 

 Player 2 18:04:28 $FLIP_CARD:  
{"cardId":109} 

 Player 2 18:04:28 $FLIP_CARD:  
{"cardId":109} 

 Player 2 18:04:28 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":109} 

 Player 2 18:04:28 $DRAW_CARD:  
{"deckType":1} 

 Player 2 18:04:28 $MOVE_CARD:  
{"moveIndex":3,"cardId":117,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 18:04:29 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":117,"flipIfFlipped":false,"playerId":2} 

 Player 2 18:04:29 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":117} 

 Player 2 18:04:29 $FLIP_CARD:  
{"cardId":117} 

 Player 2 18:04:29 $FLIP_CARD:  
{"cardId":117} 

 Player 2 18:04:29 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":117} 

 Player 2 18:04:29 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 18:04:29 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 18:04:29 $DRAW_CARD:  
{"deckType":1} 

 Player 2 18:04:29 $MOVE_CARD:  
{"moveIndex":4,"cardId":82,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 18:04:29 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":82,"flipIfFlipped":false,"playerId":2} 

 Player 2 18:04:29 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":82} 

 Player 2 18:04:29 $FLIP_CARD:  
{"cardId":82} 

 Player 2 18:04:29 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":82} 

 Player 2 18:04:29 $DRAW_CARD:  
{"deckType":1} 

 Player 2 18:04:29 $MOVE_CARD:  
{"moveIndex":5,"cardId":92,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 18:04:30 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":92,"flipIfFlipped":false,"playerId":2} 

 Player 2 18:04:30 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":92} 

 Player 2 18:04:30 $FLIP_CARD:  
{"cardId":92} 

 Player 2 18:04:30 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":92} 

 Player 2 18:04:30 $DRAW_CARD:  
{"deckType":1} 

 Player 2 18:04:30 $MOVE_CARD:  
{"moveIndex":6,"cardId":140,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 18:04:30 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":140,"flipIfFlipped":false,"playerId":2} 

 Player 2 18:04:30 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":140} 

 Player 2 18:04:30 $FLIP_CARD:  
{"cardId":140} 

 Player 2 18:04:30 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":140} 

 Player 2 18:04:30 $GAME_HAS_STARTED:  

 Player 2 18:04:30 $SET_TURN:  
{"playerId":1} 

 Player 2 18:04:30 $START_TURN:  
{"playerId":1} 

 Player 2 18:04:30 $UPDATE_ACTIONS:  

 Player 1 18:04:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:04:31 $NEXT_STACK_ID:  

 Player 1 18:04:31 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:04:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 18:04:31 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":260,"turnPlayerCardId":260,"stackEffectType":13}} 

 Player 1 18:04:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 18:04:31 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":260,"turnPlayerCardId":260,"stackEffectType":13}} 

 Player 1 18:04:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 1 18:04:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:04:31 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 18:04:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 18:04:31 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":260,"turnPlayerCardId":260,"stackEffectType":13}} 

 Player 1 18:04:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 1 18:04:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 1 18:04:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:04:31 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 18:04:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 1 18:04:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 18:04:31 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 18:04:31 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:04:31 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:04:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 18:04:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 18:04:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 18:04:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 18:04:31 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 18:04:31 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 18:04:31 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 18:04:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 1 18:04:31 $DRAW_CARD:  
{"deckType":1} 

 Player 1 18:04:31 $MOVE_CARD:  
{"moveIndex":7,"cardId":10,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 18:04:32 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":10,"flipIfFlipped":false,"playerId":1} 

 Player 1 18:04:32 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":10} 

 Player 1 18:04:32 $FLIP_CARD:  
{"cardId":10} 

 Player 1 18:04:32 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":10} 

 Player 1 18:04:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 18:04:32 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":260,"turnPlayerCardId":260,"stackEffectType":13}} 

 Player 1 18:04:32 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 18:04:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:04:32 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":260,"turnPlayerCardId":260,"stackEffectType":13}} 

 Player 1 18:04:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 1 18:04:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:04:32 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":260,"turnPlayerCardId":260,"stackEffectType":13}} 

 Player 1 18:04:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 1 18:04:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 1 18:04:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 18:04:32 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 18:04:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 18:04:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 18:04:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 18:04:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 18:04:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 18:04:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 18:04:32 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 18:04:32 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 1 18:04:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 1 18:04:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:04:32 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 1 18:04:32 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 1 18:04:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 1 18:04:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:04:32 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 18:04:32 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 18:04:32 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 18:04:32 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 18:04:33 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 18:04:33 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 18:04:33 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 18:04:34 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 18:04:35 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 18:04:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:04:47 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:04:47 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 18:04:47 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 18:04:47 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 18:04:47 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 18:04:48 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 18:04:48 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 18:04:48 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 18:04:48 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 1 18:04:48 $END_TURN:  

 Player 1 18:04:48 $SET_TURN:  
{"playerId":2} 

 Player 1 18:04:48 $START_TURN:  
{"playerId":2} 

 Player 2 18:04:48 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:04:48 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 18:04:48 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 18:04:48 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 18:04:48 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 18:04:48 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 18:04:48 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 18:04:48 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 18:04:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:04:48 $NEXT_STACK_ID:  

 Player 2 18:04:48 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:04:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 18:04:48 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":270,"turnPlayerCardId":270,"stackEffectType":13}} 

 Player 2 18:04:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 18:04:48 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":270,"turnPlayerCardId":270,"stackEffectType":13}} 

 Player 2 18:04:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add StartTurnLoot 2 "}} 

 Player 2 18:04:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:04:48 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 18:04:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 18:04:48 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":270,"turnPlayerCardId":270,"stackEffectType":13}} 

 Player 2 18:04:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding StartTurnLoot 2"},"childOfId":10} 

 Player 2 18:04:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 2 18:04:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:04:48 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 2 18:04:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 2 18:04:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 18:04:48 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 18:04:48 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:04:48 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:04:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 18:04:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 18:04:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 18:04:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 18:04:49 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 18:04:49 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 2 18:04:49 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 2 18:04:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve StartTurnLoot 2 "}} 

 Player 2 18:04:49 $DRAW_CARD:  
{"deckType":1} 

 Player 2 18:04:49 $MOVE_CARD:  
{"moveIndex":8,"cardId":112,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 18:04:49 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":112,"flipIfFlipped":false,"playerId":2} 

 Player 2 18:04:49 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":112} 

 Player 2 18:04:49 $FLIP_CARD:  
{"cardId":112} 

 Player 2 18:04:49 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":112} 

 Player 2 18:04:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 18:04:49 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":270,"turnPlayerCardId":270,"stackEffectType":13}} 

 Player 2 18:04:49 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 18:04:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:04:49 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":270,"turnPlayerCardId":270,"stackEffectType":13}} 

 Player 2 18:04:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve StartTurnLoot 2  "}} 

 Player 2 18:04:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:04:49 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":270,"turnPlayerCardId":270,"stackEffectType":13}} 

 Player 2 18:04:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve StartTurnLoot 2"},"childOfId":15} 

 Player 2 18:04:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 2 18:04:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 18:04:50 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 18:04:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 18:04:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 18:04:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 18:04:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 18:04:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 18:04:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 18:04:50 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 18:04:50 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 18:04:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 2 18:04:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:04:50 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 2 18:04:50 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 2 18:04:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 2 18:04:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:04:50 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 18:04:50 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 18:04:50 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 18:04:50 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 18:04:50 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 18:04:50 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 18:04:50 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 18:04:50 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 18:04:50 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 18:04:50 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 18:04:50 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 18:04:51 $NEXT_STACK_ID:  

 Player 2 18:04:51 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:04:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Incubus"} 

 Player 2 18:04:51 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":270,"hasLockingStackEffect":false,"itemToPlayCardId":271,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 18:04:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Incubus"} 

 Player 2 18:04:51 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":270,"hasLockingStackEffect":false,"itemToPlayCardId":271,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 18:04:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add ActivateItem 3 "}} 

 Player 1 18:04:51 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:04:51 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:04:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Incubus"} 

 Player 1 18:04:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Incubus"} 

 Player 2 18:04:51 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 18:04:52 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 18:04:54 $LOG_ERROR:  
{"message":"\"Cannot read property '_cardId' of null\"","stack":"\"TypeError: Cannot read property '_cardId' of null\\n    at DecisionMarker.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/Decision%20Marker.js:101:146)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\\n    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\\n    at new Promise (<anonymous>)\\n    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\\n    at DecisionMarker.showDecision (http://localhost:7456/preview-scripts/assets/Script/Entites/Decision%20Marker.js:39:16)\\n    at ChooseCard.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/DataCollector/ChooseCard.js:288:74)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\""} 
//////Error From Player 2////
  

 Player 2 18:04:54 $LOG_ERROR:  
//////Error From Player 2////

 "\"Cannot read property '_cardId' of null\""

 + "\"TypeError: Cannot read property '_cardId' of null\
    at DecisionMarker.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/Decision%20Marker.js:101:146)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\
    at new Promise (<anonymous>)\
    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\
    at DecisionMarker.showDecision (http://localhost:7456/preview-scripts/assets/Script/Entites/Decision%20Marker.js:39:16)\
    at ChooseCard.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/DataCollector/ChooseCard.js:288:74)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\""

////// 
//////Error From Player 2////

 "\"Cannot read property '_cardId' of null\""

 + "\"TypeError: Cannot read property '_cardId' of null\
    at DecisionMarker.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/Decision%20Marker.js:101:146)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\
    at new Promise (<anonymous>)\
    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\
    at DecisionMarker.showDecision (http://localhost:7456/preview-scripts/assets/Script/Entites/Decision%20Marker.js:39:16)\
    at ChooseCard.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/DataCollector/ChooseCard.js:288:74)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\""

////// 

 Player 2 18:04:54 $USE_ITEM:  
{"cardId":271} 

 Player 2 18:04:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:04:54 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 18:04:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Incubus"} 

 Player 2 18:04:54 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":270,"hasLockingStackEffect":false,"itemToPlayCardId":271,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 18:04:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding ActivateItem 3"},"childOfId":20} 

 Player 2 18:04:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 2 18:04:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:04:54 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 2 18:04:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 2 18:04:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 18:04:54 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 18:04:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Incubus"} 

 Player 1 18:04:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Incubus"} 

 Player 1 18:04:54 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 18:04:54 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 2 18:04:55 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 2 18:04:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve ActivateItem 3 "}} 

 Player 2 18:04:55 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":271,"particleType":6} 

 Player 2 18:04:57 $DISABLE_PARTICLE_EFFECT:  
{"cardId":271,"particleType":6} 

 Player 2 18:07:02 $MATCH: 