Start Log 

 Player 1 23:45:27 $MATCH:  

 Player 1 23:45:27 $START_GAME:  

 Player 1 23:45:27 $MOVE_TO_TABLE:  

 Player 2 23:45:27 $MOVE_TO_TABLE:  

 Player 1 23:45:35 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 23:45:35 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 2 23:45:35 $SET_CHAR:  
{"originPlayerId":2,"playerId":1,"charCardId":294,"itemCardId":295} 

 Player 1 23:45:35 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":294,"itemCardId":295} 

 Player 1 23:45:35 $SET_CHAR_END:  
{"playerId":2} 

 Player 2 23:45:35 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":292,"itemCardId":293} 

 Player 2 23:45:35 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[115,140,88,97,63,49,134,141,113,84,12,73,59,60,108,54,29,123,126,130,71,127,128,61,26,50,103,35,81,105,64,23,58,18,89,33,24,74,37,121,31,43,111,19,102,101,78,77,109,98,8,48,122,114,51,42,138,13,104,86,87,124,132,46,17,129,53,76,57,133,72,40,65,62,94,120,30,39,96,80,27,125,45,90,7,56,67,38,82,34,52,22,136,21,47,16,135,66,70,99,20,117,107,83,10,14,69,116,119,100,32,11,25,92,55,75,137,95,44,85,93,79,41,36,118,15,131,28,106,110,139,91,68,142,112,9]} 

 Player 2 23:45:35 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[260,238,230,279,278,252,235,242,244,256,254,280,275,233,243,281,246,266,248,253,272,262,263,257,271,277,239,231,276,251,234,228,229,247,232,237,255,273,264,265,268,270,258,240,267,259,249,241,236,261,269,250,245,274]} 

 Player 2 23:45:35 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[187,222,166,175,161,164,168,174,221,178,199,151,165,195,215,200,176,172,189,212,169,157,163,185,146,149,224,196,197,180,182,188,148,198,155,156,193,170,160,154,191,192,173,171,186,204,159,167,223,205,216,207,162,225,158,219,210,145,152,202,211,147,190,213,218,183,209,179,214,150,201,194,206,217,153,203,220,181,184,208,177]} 

 Player 2 23:45:35 $DRAW_CARD:  
{"deckType":5} 

 Player 2 23:45:35 $FLIP_CARD:  
{"cardId":177} 

 Player 2 23:45:36 $ADD_STORE_CARD:  
{"cardId":177} 

 Player 2 23:45:36 $DRAW_CARD:  
{"deckType":5} 

 Player 2 23:45:36 $FLIP_CARD:  
{"cardId":208} 

 Player 2 23:45:36 $ADD_STORE_CARD:  
{"cardId":208} 

 Player 2 23:45:36 $DRAW_CARD:  
{"deckType":2} 

 Player 2 23:45:36 $FLIP_CARD:  
{"cardId":274} 

 Player 2 23:45:36 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":274} 

 Player 2 23:45:36 $NEW_MONSTER_ON_PLACE:  
{"cardId":274,"monsterPlaceId":1} 

 Player 2 23:45:36 $DRAW_CARD:  
{"deckType":2} 

 Player 2 23:45:36 $FLIP_CARD:  
{"cardId":245} 

 Player 2 23:45:36 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":245} 

 Player 2 23:45:36 $NEW_MONSTER_ON_PLACE:  
{"cardId":245,"monsterPlaceId":2} 

 Player 2 23:45:36 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 23:45:36 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":294,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 23:45:36 $DRAW_CARD:  
{"deckType":1} 

 Player 2 23:45:36 $MOVE_CARD:  
{"moveIndex":1,"cardId":9,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 23:45:36 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":9,"flipIfFlipped":false,"playerId":2} 

 Player 2 23:45:36 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":9} 

 Player 2 23:45:36 $FLIP_CARD:  
{"cardId":9} 

 Player 2 23:45:36 $FLIP_CARD:  
{"cardId":9} 

 Player 2 23:45:36 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":9} 

 Player 2 23:45:36 $DRAW_CARD:  
{"deckType":1} 

 Player 2 23:45:36 $MOVE_CARD:  
{"moveIndex":2,"cardId":112,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 23:45:37 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":112,"flipIfFlipped":false,"playerId":2} 

 Player 2 23:45:37 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":112} 

 Player 2 23:45:37 $FLIP_CARD:  
{"cardId":112} 

 Player 2 23:45:37 $FLIP_CARD:  
{"cardId":112} 

 Player 2 23:45:37 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":112} 

 Player 2 23:45:37 $DRAW_CARD:  
{"deckType":1} 

 Player 2 23:45:37 $MOVE_CARD:  
{"moveIndex":3,"cardId":142,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 23:45:37 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":142,"flipIfFlipped":false,"playerId":2} 

 Player 2 23:45:37 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":142} 

 Player 2 23:45:37 $FLIP_CARD:  
{"cardId":142} 

 Player 2 23:45:37 $FLIP_CARD:  
{"cardId":142} 

 Player 2 23:45:37 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":142} 

 Player 2 23:45:37 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 23:45:37 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 23:45:38 $DRAW_CARD:  
{"deckType":1} 

 Player 2 23:45:38 $MOVE_CARD:  
{"moveIndex":4,"cardId":68,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 23:45:38 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":68,"flipIfFlipped":false,"playerId":2} 

 Player 2 23:45:38 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":68} 

 Player 2 23:45:38 $FLIP_CARD:  
{"cardId":68} 

 Player 2 23:45:38 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":68} 

 Player 2 23:45:38 $DRAW_CARD:  
{"deckType":1} 

 Player 2 23:45:38 $MOVE_CARD:  
{"moveIndex":5,"cardId":91,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 23:45:38 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":91,"flipIfFlipped":false,"playerId":2} 

 Player 2 23:45:38 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":91} 

 Player 2 23:45:38 $FLIP_CARD:  
{"cardId":91} 

 Player 2 23:45:38 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":91} 

 Player 2 23:45:39 $DRAW_CARD:  
{"deckType":1} 

 Player 2 23:45:39 $MOVE_CARD:  
{"moveIndex":6,"cardId":139,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 23:45:39 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":139,"flipIfFlipped":false,"playerId":2} 

 Player 2 23:45:39 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":139} 

 Player 2 23:45:39 $FLIP_CARD:  
{"cardId":139} 

 Player 2 23:45:39 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":139} 

 Player 2 23:45:39 $GAME_HAS_STARTED:  

 Player 2 23:45:39 $SET_TURN:  
{"playerId":2} 

 Player 2 23:45:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:45:39 $NEXT_STACK_ID:  

 Player 2 23:45:39 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:45:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 23:45:39 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 2 23:45:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 23:45:39 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 1 23:45:39 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:45:39 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:45:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 23:45:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 23:45:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 2 23:45:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:45:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 23:45:42 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 2 23:45:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 2 23:45:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 2 23:45:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:45:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 2 23:45:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:45:42 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:45:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 23:45:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 23:45:42 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:45:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 2 23:45:42 $DRAW_CARD:  
{"deckType":1} 

 Player 2 23:45:42 $MOVE_CARD:  
{"moveIndex":7,"cardId":110,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 23:45:43 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":110,"flipIfFlipped":false,"playerId":2} 

 Player 2 23:45:43 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":110} 

 Player 2 23:45:43 $FLIP_CARD:  
{"cardId":110} 

 Player 2 23:45:43 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":110} 

 Player 2 23:45:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 23:45:43 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 2 23:45:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:45:43 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 2 23:45:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 2 23:45:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:45:43 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 2 23:45:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 2 23:45:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 2 23:45:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:45:43 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:45:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 23:45:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 23:45:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 23:45:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 23:45:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 23:45:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 23:45:43 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:45:44 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 2 23:45:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 2 23:45:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:45:44 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 2 23:45:44 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 2 23:45:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 2 23:45:44 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:45:44 $UPDATE_ACTIONS:  

 Player 2 23:46:10 $MOVE_CARD:  
{"moveIndex":8,"cardId":122,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 

 Player 1 23:46:10 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":122,"flipIfFlipped":true,"playerId":2} 

 Player 2 23:46:10 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":122} 

 Player 2 23:46:14 $SHOW_DECISION:  
{"startCardId":122,"endCardId":122,"flipEndCard":true} 

 Player 2 23:46:17 $NEXT_STACK_ID:  

 Player 2 23:46:17 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:46:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Purple Heart "} 

 Player 2 23:46:17 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":292,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":122,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 23:46:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Purple Heart "} 

 Player 2 23:46:17 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":292,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":122,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 23:46:17 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:46:18 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:46:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Purple Heart "} 

 Player 1 23:46:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Purple Heart "} 

 Player 2 23:46:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add PlayLootCardStackEffect 2 "}} 

 Player 2 23:46:20 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":122} 

 Player 2 23:46:20 $MOVE_CARD:  
{"moveIndex":9,"cardId":122,"placeID":300,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 23:46:21 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":122,"flipIfFlipped":true,"playerId":2} 

 Player 2 23:46:21 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":122} 

 Player 2 23:46:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Purple Heart: AddTrinket"} 

 Player 2 23:46:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:46:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Purple Heart: AddTrinket"} 

 Player 2 23:46:21 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":292,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":122,"lootPlayerId":2,"effectToDo":{"effectName":"AddTrinket","cardEffectNum":0,"cardPlayerId":2,"cardId":122,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 23:46:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding PlayLootCardStackEffect 2"},"childOfId":10} 

 Player 2 23:46:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 2 23:46:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:46:21 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 2 23:46:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 2 23:46:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:46:21 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:46:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Purple Heart "} 

 Player 1 23:46:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Purple Heart "} 

 Player 1 23:46:21 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:46:21 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 2 23:46:21 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 2 23:46:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve PlayLootCardStackEffect 2 "}} 

 Player 2 23:46:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Purple Heart: AddTrinket"} 

 Player 2 23:46:21 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":122,"particleType":6} 

 Player 2 23:46:23 $DISABLE_PARTICLE_EFFECT:  
{"cardId":122,"particleType":6} 

 Player 2 23:46:23 $CARD_ADD_TRINKET:  
{"cardId":122,"playerId":2,"addMuiliEffect":false} 

 Player 2 23:46:23 $REMOVE_FROM_PILE:  
{"cardId":122} 

 Player 2 23:46:23 $REGISTER_PASSIVE_ITEM:  
{"cardId":122} 

 Player 2 23:46:23 $MOVE_CARD:  
{"moveIndex":10,"cardId":122,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 

 Player 1 23:46:24 $MOVE_CARD_END:  
{"moveIndex":10,"cardId":122,"flipIfFlipped":true,"playerId":2} 

 Player 2 23:46:24 $ADD_AN_ITEM:  
{"playerId":2,"cardId":122,"isReward":true} 

 Player 2 23:46:24 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":122}],"result":true,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 23:46:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Purple Heart: AddTrinket"} 

 Player 2 23:46:24 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":292,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":122,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 23:46:24 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:46:24 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":292,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":122,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 23:46:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve PlayLootCardStackEffect 2  "}} 

 Player 2 23:46:24 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:46:24 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":292,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":122,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 23:46:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve PlayLootCardStackEffect 2"},"childOfId":15} 

 Player 2 23:46:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 2 23:46:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:46:24 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:46:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Purple Heart "} 

 Player 1 23:46:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Purple Heart "} 

 Player 1 23:46:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Purple Heart "} 

 Player 1 23:46:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Purple Heart "} 

 Player 1 23:46:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Purple Heart "} 

 Player 1 23:46:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Purple Heart "} 

 Player 1 23:46:24 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:46:24 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 23:46:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 2 23:46:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:46:24 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 2 23:46:24 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 2 23:46:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 2 23:46:24 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:46:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:46:27 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:46:27 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 2 23:46:27 $END_TURN:  

 Player 2 23:46:27 $SET_TURN:  
{"playerId":1} 

 Player 2 23:46:27 $START_TURN:  
{"playerId":1} 

 Player 1 23:46:27 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 23:46:27 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:46:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:46:27 $NEXT_STACK_ID:  

 Player 1 23:46:27 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:46:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 23:46:27 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":294,"turnPlayerCardId":294,"stackEffectType":13}} 

 Player 1 23:46:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 23:46:27 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":294,"turnPlayerCardId":294,"stackEffectType":13}} 

 Player 2 23:46:27 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 23:46:27 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:46:27 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:46:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 23:46:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 23:46:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add StartTurnLoot 3 "}} 

 Player 1 23:46:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:46:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 23:46:30 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":294,"turnPlayerCardId":294,"stackEffectType":13}} 

 Player 1 23:46:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding StartTurnLoot 3"},"childOfId":20} 

 Player 1 23:46:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 1 23:46:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:46:30 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 1 23:46:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 1 23:46:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 23:46:30 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 23:46:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 23:46:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 23:46:30 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 23:46:30 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 1 23:46:30 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 1 23:46:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve StartTurnLoot 3 "}} 

 Player 1 23:46:30 $DRAW_CARD:  
{"deckType":1} 

 Player 1 23:46:30 $MOVE_CARD:  
{"moveIndex":11,"cardId":106,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 23:46:31 $MOVE_CARD_END:  
{"moveIndex":11,"cardId":106,"flipIfFlipped":false,"playerId":1} 

 Player 1 23:46:31 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":106} 

 Player 1 23:46:31 $FLIP_CARD:  
{"cardId":106} 

 Player 1 23:46:31 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":106} 

 Player 1 23:46:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 23:46:31 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":294,"turnPlayerCardId":294,"stackEffectType":13}} 

 Player 1 23:46:31 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:46:31 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":294,"turnPlayerCardId":294,"stackEffectType":13}} 

 Player 1 23:46:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Remove After Resolve StartTurnLoot 3  "}} 

 Player 1 23:46:31 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:46:31 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":294,"turnPlayerCardId":294,"stackEffectType":13}} 

 Player 1 23:46:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Response Remove After Resolve StartTurnLoot 3"},"childOfId":25} 

 Player 1 23:46:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Wait For Response From Player 2 "},"childOfId":25} 

 Player 1 23:46:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 23:46:31 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 23:46:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 23:46:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 23:46:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 23:46:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 23:46:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 23:46:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 23:46:31 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 23:46:31 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 1 23:46:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 1 "},"childOfId":25} 

 Player 1 23:46:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:46:31 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 1 23:46:31 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 1 23:46:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Stack Was Emptied "}} 

 Player 1 23:46:31 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:46:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:46:33 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:46:33 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 1 23:46:33 $END_TURN:  

 Player 1 23:46:33 $SET_TURN:  
{"playerId":2} 

 Player 1 23:46:33 $START_TURN:  
{"playerId":2} 

 Player 2 23:46:33 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 23:46:33 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:46:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:46:33 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_START_TURN","args":[{"type":2,"number":1}],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1} 

 Player 2 23:46:33 $NEXT_STACK_ID:  

 Player 2 23:46:33 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:46:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart effect ChainEffects<ChainEffects>"} 

 Player 2 23:46:33 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":292,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":122,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":122,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 23:46:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart effect ChainEffects<ChainEffects>"} 

 Player 2 23:46:33 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":292,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":122,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":122,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 23:46:33 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 23:46:33 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:46:33 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:46:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart "} 

 Player 1 23:46:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart "} 

 Player 2 23:46:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Add ActivatePassiveEffect 4 "}} 

 Player 2 23:46:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart effect ChainEffects<ChainEffects>"} 

 Player 2 23:46:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart effect ChainEffects<ChainEffects>"} 

 Player 2 23:46:36 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":292,"effectCardPlayer":292},"entityId":4,"creatorCardId":292,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":122,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":122,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 23:46:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Response Adding ActivatePassiveEffect 4"},"childOfId":30} 

 Player 2 23:46:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Wait For Response From Player 2 "},"childOfId":30} 

 Player 2 23:46:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:46:36 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 2 23:46:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":30} 

 Player 2 23:46:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:46:36 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:46:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart "} 

 Player 1 23:46:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart "} 

 Player 1 23:46:36 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:46:36 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 2 23:46:36 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 2 23:46:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Resolve ActivatePassiveEffect 4 "}} 

 Player 2 23:46:36 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":122,"particleType":6} 

 Player 2 23:46:38 $DISABLE_PARTICLE_EFFECT:  
{"cardId":122,"particleType":6} 

 Player 2 23:47:11 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_START_TURN","args":[{"type":2,"number":1}],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1} 

 Player 2 23:47:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart effect ChainEffects<ChainEffects>"} 

 Player 2 23:47:11 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":292,"effectCardPlayer":292},"entityId":4,"creatorCardId":292,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":122,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 23:47:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:47:11 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":292,"effectCardPlayer":292},"entityId":4,"creatorCardId":292,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":122,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 23:47:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Remove After Resolve ActivatePassiveEffect 4  "}} 

 Player 2 23:47:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:47:11 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":292,"effectCardPlayer":292},"entityId":4,"creatorCardId":292,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":122,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 23:47:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Response Remove After Resolve ActivatePassiveEffect 4"},"childOfId":35} 

 Player 2 23:47:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Wait For Response From Player 1 "},"childOfId":35} 

 Player 2 23:47:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:47:11 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:47:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart "} 

 Player 1 23:47:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart "} 

 Player 1 23:47:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart "} 

 Player 1 23:47:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart "} 

 Player 1 23:47:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart "} 

 Player 1 23:47:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart "} 

 Player 1 23:47:12 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:47:12 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 2 23:47:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 2 "},"childOfId":35} 

 Player 2 23:47:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:47:12 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 2 23:47:12 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 2 23:47:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Stack Was Emptied "}} 

 Player 2 23:47:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:47:12 $NEXT_STACK_ID:  

 Player 2 23:47:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:47:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 23:47:12 $ADD_TO_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 2 23:47:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 23:47:12 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 1 23:47:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:47:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:47:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 23:47:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 23:47:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Add StartTurnLoot 5 "}} 

 Player 2 23:47:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:47:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 23:47:15 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 2 23:47:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Response Adding StartTurnLoot 5"},"childOfId":40} 

 Player 2 23:47:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Wait For Response From Player 2 "},"childOfId":40} 

 Player 2 23:47:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:47:15 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 2 23:47:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 1 "},"childOfId":40} 

 Player 2 23:47:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:47:15 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:47:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 23:47:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 23:47:15 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:47:15 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 2 23:47:15 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 2 23:47:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Resolve StartTurnLoot 5 "}} 

 Player 2 23:47:15 $DRAW_CARD:  
{"deckType":1} 

 Player 2 23:47:15 $MOVE_CARD:  
{"moveIndex":12,"cardId":28,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 23:47:15 $MOVE_CARD_END:  
{"moveIndex":12,"cardId":28,"flipIfFlipped":false,"playerId":2} 

 Player 2 23:47:16 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":28} 

 Player 2 23:47:16 $FLIP_CARD:  
{"cardId":28} 

 Player 2 23:47:16 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":28} 

 Player 2 23:47:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 23:47:16 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 2 23:47:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:47:16 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 2 23:47:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Remove After Resolve StartTurnLoot 5  "}} 

 Player 2 23:47:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:47:16 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 2 23:47:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Response Remove After Resolve StartTurnLoot 5"},"childOfId":45} 

 Player 2 23:47:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Wait For Response From Player 1 "},"childOfId":45} 

 Player 2 23:47:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:47:16 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:47:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 23:47:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 23:47:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 23:47:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 23:47:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 23:47:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 23:47:16 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:47:16 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 2 23:47:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Wait For Response From Player 2 "},"childOfId":45} 

 Player 2 23:47:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:47:16 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 2 23:47:16 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 2 23:47:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Stack Was Emptied "}} 

 Player 2 23:47:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:48:04 $SHOW_DECISION:  
{"startCardId":292,"endCardId":227} 

 Player 2 23:48:07 $NEXT_STACK_ID:  

 Player 2 23:48:07 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:48:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 23:48:07 $ADD_TO_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":292,"attackingPlayerCardId":292,"idOfCardBeingAttacked":227,"stackEffectType":4}} 

 Player 2 23:48:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 23:48:08 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":292,"attackingPlayerCardId":292,"idOfCardBeingAttacked":227,"stackEffectType":4}} 

 Player 1 23:48:08 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:48:08 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:48:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 23:48:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 23:48:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Add DeclareAttack 6 "}} 

 Player 2 23:48:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:48:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 23:48:11 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":292,"attackingPlayerCardId":292,"idOfCardBeingAttacked":227,"stackEffectType":4}} 

 Player 2 23:48:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Response Adding DeclareAttack 6"},"childOfId":50} 

 Player 2 23:48:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Wait For Response From Player 2 "},"childOfId":50} 

 Player 2 23:48:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:48:11 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 2 23:48:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Wait For Response From Player 1 "},"childOfId":50} 

 Player 2 23:48:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:48:11 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:48:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 23:48:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 23:48:11 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:48:11 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 2 23:48:11 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 2 23:48:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Resolve DeclareAttack 6 "}} 

 Player 2 23:48:11 $DRAW_CARD:  
{"deckType":2} 

 Player 2 23:48:11 $SHOW_CARD_PREVIEW:  
{"cardToShowId":250,"playerId":2} 

 Player 2 23:48:18 $FLIP_CARD:  
{"cardId":250} 

 Player 2 23:48:18 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":250} 

 Player 2 23:48:18 $NEW_MONSTER_ON_PLACE:  
{"cardId":250,"monsterPlaceId":1} 

 Player 2 23:48:18 $SHOW_DECISION:  
{"startCardId":292,"endCardId":250} 

 Player 2 23:48:21 $NEXT_STACK_ID:  

 Player 2 23:48:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 23:48:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Gold Chest (2)"} 

 Player 2 23:48:21 $ADD_TO_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":292,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":250,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 23:48:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Gold Chest (2)"} 

 Player 2 23:48:21 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":292,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":250,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 23:48:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 23:48:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 23:48:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Gold Chest (2)"} 

 Player 1 23:48:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Gold Chest (2)"} 

 Player 2 23:48:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Add ActivateItem 7 "}} 

 Player 2 23:48:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:48:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Gold Chest (2)"} 

 Player 2 23:48:24 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":292,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":250,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 23:48:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":56,"_text":"Response Adding ActivateItem 7"},"childOfId":55} 

 Player 2 23:48:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":57,"_text":"Wait For Response From Player 2 "},"childOfId":55} 

 Player 2 23:48:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:48:24 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 2 23:48:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":58,"_text":"Wait For Response From Player 1 "},"childOfId":55} 

 Player 2 23:48:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:48:24 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:48:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Gold Chest (2)"} 

 Player 1 23:48:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Gold Chest (2)"} 

 Player 1 23:48:24 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:48:24 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 2 23:48:24 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 2 23:48:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":59,"_text":"Resolve ActivateItem 7 "}} 

 Player 2 23:48:24 $NEXT_STACK_ID:  

 Player 2 23:48:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Gold Chest (2)"} 

 Player 2 23:48:24 $NEXT_STACK_ID:  

 Player 2 23:48:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Gold Chest (2)"} 

 Player 2 23:48:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Gold Chest (2) \n3:Player 2 roll a dice"} 

 Player 2 23:48:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Gold Chest (2) \n3:Player 2 roll a dice"} 

 Player 2 23:48:24 $ADD_TO_STACK:  
{"stackEffect":{"entityId":9,"creatorCardId":292,"stackEffectToLock":{"entityId":7,"creatorCardId":292,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":250,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"stackEffectType":11}} 

 Player 2 23:48:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Gold Chest (2) \n3:Player 2 roll a dice"} 

 Player 2 23:48:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Gold Chest (2) \n3:Player 2 roll a dice"} 

 Player 2 23:48:24 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":292,"stackEffectToLock":{"entityId":7,"creatorCardId":292,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":250,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"stackEffectType":11}} 

 Player 1 23:48:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Gold Chest (2)"} 

 Player 1 23:48:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Gold Chest (2)"} 

 Player 1 23:48:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Gold Chest (2)"} 

 Player 1 23:48:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Gold Chest (2)"} 

 Player 1 23:48:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Gold Chest (2) \n3:Player 2 roll a dice"} 

 Player 1 23:48:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Gold Chest (2) \n3:Player 2 roll a dice"} 

 Player 1 23:48:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Gold Chest (2) \n3:Player 2 roll a dice"} 

 Player 1 23:48:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Gold Chest (2) \n3:Player 2 roll a dice"} 

 Player 2 23:48:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":60,"_text":"Add RollDiceStackEffect 9 "}} 

 Player 2 23:48:27 $ROLL_DICE:  
{"playerId":2} 

 Player 2 23:48:29 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":4} 

 Player 2 23:48:29 $UPDATE_STACK_VIS:  
{"stackId":9,"text":"player 2 rolled 4"} 

 Player 2 23:48:29 $SHOW_DICE_ROLL:  
{"stackId":9} 

 Player 2 23:48:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Gold Chest (2) \n3:Player 2 rolled 4"} 

 Player 2 23:48:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:48:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Gold Chest (2) \n3:Player 2 rolled 4"} 

 Player 2 23:48:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Gold Chest (2) \n3:Player 2 rolled 4"} 

 Player 2 23:48:32 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":292,"stackEffectToLock":{"entityId":7,"creatorCardId":292,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":250,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"numberRolled":4,"stackEffectType":11}} 

 Player 2 23:48:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":61,"_text":"Response Adding RollDiceStackEffect 9"},"childOfId":60} 

 Player 2 23:48:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":62,"_text":"Wait For Response From Player 2 "},"childOfId":60} 

 Player 2 23:48:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:48:32 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 2 23:48:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":63,"_text":"Wait For Response From Player 1 "},"childOfId":60} 

 Player 2 23:48:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:48:32 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:48:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Gold Chest (2) \n3:Player 2 roll a dice"} 

 Player 1 23:48:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Gold Chest (2) \n3:Player 2 roll a dice"} 

 Player 1 23:48:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Gold Chest (2) \n3:Player 2 roll a dice"} 

 Player 1 23:48:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Gold Chest (2) \n3:Player 2 roll a dice"} 

 Player 1 23:48:32 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:48:32 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 2 23:48:33 $ACTION_MASSAGE_REMOVE:  
{"id":61} 

 Player 2 23:48:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":64,"_text":"Resolve RollDiceStackEffect 9 "}} 

 Player 2 23:48:33 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":4,"originStackId":9},"isAfterActivation":true,"index":4} 

 Player 2 23:48:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Gold Chest (2) \n3:Player 2 rolled 4"} 

 Player 2 23:48:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Gold Chest (2) \n3:Player 2 rolled 4"} 

 Player 2 23:48:33 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":292,"stackEffectToLock":{"entityId":7,"creatorCardId":292,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":250,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"numberRolled":4,"stackEffectType":11}} 

 Player 2 23:48:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Gold Chest (2) \n2:Player 2 rolled 4"} 

 Player 2 23:48:33 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":292,"attackingPlayerCardId":292,"idOfCardBeingAttacked":227,"stackEffectType":4}} 

 Player 2 23:48:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":65,"_text":"Remove After Resolve DeclareAttack 9  "}} 

 Player 2 23:48:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Gold Chest (2) \n2:Player 2 rolled 4"} 

 Player 2 23:48:33 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":9,"creatorCardId":292,"attackingPlayerCardId":292,"idOfCardBeingAttacked":227,"stackEffectType":4}} 

 Player 2 23:48:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":66,"_text":"Response Remove After Resolve DeclareAttack 9"},"childOfId":65} 

 Player 2 23:48:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":67,"_text":"Wait For Response From Player 1 "},"childOfId":65} 

 Player 2 23:48:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:48:33 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:48:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Gold Chest (2) \n3:Player 2 roll a dice"} 

 Player 1 23:48:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Gold Chest (2) \n3:Player 2 roll a dice"} 

 Player 1 23:48:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Gold Chest (2) \n3:Player 2 roll a dice"} 

 Player 1 23:48:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Gold Chest (2) \n3:Player 2 roll a dice"} 

 Player 1 23:48:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Gold Chest (2) \n3:Player 2 roll a dice"} 

 Player 1 23:48:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Gold Chest (2) \n3:Player 2 roll a dice"} 

 Player 1 23:48:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Gold Chest (2) \n3:Player 2 roll a dice"} 

 Player 1 23:48:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Gold Chest (2) \n3:Player 2 roll a dice"} 

 Player 1 23:48:33 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:48:33 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 2 23:48:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":68,"_text":"Wait For Response From Player 2 "},"childOfId":65} 

 Player 2 23:48:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:48:33 $ACTION_MASSAGE_REMOVE:  
{"id":68} 

 Player 2 23:48:33 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 2 23:48:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":69,"_text":"Resolve RollDiceStackEffect 9 "}} 

 Player 2 23:48:33 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":5,"originStackId":9},"isAfterActivation":true,"index":5} 

 Player 2 23:48:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Gold Chest (2) \n2:Player 2 rolled 4"} 

 Player 2 23:48:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Gold Chest (2) \n2:Player 2 rolled 4"} 

 Player 2 23:48:34 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":292,"stackEffectToLock":{"entityId":7,"creatorCardId":292,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":250,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"numberRolled":4,"stackEffectType":11}} 

 Player 2 23:48:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Gold Chest (2)"} 

 Player 2 23:48:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Gold Chest (2)"} 

 Player 2 23:48:34 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":292,"stackEffectToLock":{"entityId":7,"creatorCardId":292,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":250,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"numberRolled":4,"stackEffectType":11}} 

 Player 2 23:48:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":70,"_text":"Remove After Resolve RollDiceStackEffect 9  "}} 

 Player 2 23:48:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Gold Chest (2)"} 

 Player 2 23:48:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Gold Chest (2)"} 

 Player 2 23:48:34 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":9,"creatorCardId":292,"stackEffectToLock":{"entityId":7,"creatorCardId":292,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":250,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"numberRolled":4,"stackEffectType":11}} 

 Player 2 23:48:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":71,"_text":"Response Remove After Resolve RollDiceStackEffect 9"},"childOfId":70} 

 Player 2 23:48:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":72,"_text":"Wait For Response From Player 2 "},"childOfId":70} 

 Player 2 23:48:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:48:34 $ACTION_MASSAGE_REMOVE:  
{"id":72} 

 Player 2 23:48:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":73,"_text":"Wait For Response From Player 1 "},"childOfId":70} 

 Player 2 23:48:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:48:34 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:48:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Gold Chest (2)"} 

 Player 1 23:48:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Gold Chest (2)"} 

 Player 1 23:48:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Gold Chest (2)"} 

 Player 1 23:48:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Gold Chest (2)"} 

 Player 1 23:48:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 roll a dice"} 

 Player 1 23:48:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 roll a dice"} 

 Player 1 23:48:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 roll a dice"} 

 Player 1 23:48:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 roll a dice"} 

 Player 1 23:48:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 roll a dice"} 

 Player 1 23:48:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 roll a dice"} 

 Player 1 23:48:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 roll a dice"} 

 Player 1 23:48:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 roll a dice"} 

 Player 1 23:48:34 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:48:34 $ACTION_MASSAGE_REMOVE:  
{"id":73} 

 Player 2 23:48:34 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 2 23:48:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":74,"_text":"Resolve ActivateItem 7 "}} 

 Player 2 23:48:34 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":250,"particleType":6} 

 Player 2 23:48:36 $DISABLE_PARTICLE_EFFECT:  
{"cardId":250,"particleType":6} 

 Player 2 23:48:36 $DRAW_CARD:  
{"deckType":1} 

 Player 2 23:48:36 $MOVE_CARD:  
{"moveIndex":13,"cardId":131,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 23:48:37 $MOVE_CARD_END:  
{"moveIndex":13,"cardId":131,"flipIfFlipped":false,"playerId":2} 

 Player 2 23:48:37 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":131} 

 Player 2 23:48:37 $FLIP_CARD:  
{"cardId":131} 

 Player 2 23:48:37 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":131} 

 Player 2 23:48:37 $MOVE_CARD:  
{"moveIndex":14,"cardId":250,"placeID":303,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 23:48:37 $MOVE_CARD_END:  
{"moveIndex":14,"cardId":250,"flipIfFlipped":true,"playerId":2} 

 Player 2 23:48:37 $MOVE_CARD_TO_PILE:  
{"type":2,"cardId":250} 

 Player 2 23:48:37 $REMOVE_MONSTER:  
{"holderId":1,"monsterId":250} 

 Player 2 23:48:37 $GET_NEXT_MONSTER:  
{"monsterPlaceId":1} 

 Player 2 23:48:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Gold Chest (2)"} 

 Player 2 23:48:37 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":292,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":250,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 23:48:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:48:37 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":292,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":250,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 23:48:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":75,"_text":"Remove After Resolve ActivateItem 7  "}} 

 Player 2 23:48:38 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:48:38 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":292,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":250,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 23:48:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":76,"_text":"Response Remove After Resolve ActivateItem 7"},"childOfId":75} 

 Player 2 23:48:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":77,"_text":"Wait For Response From Player 1 "},"childOfId":75} 

 Player 2 23:48:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:48:38 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:48:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 23:48:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 23:48:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Gold Chest (2)"} 

 Player 1 23:48:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Gold Chest (2)"} 

 Player 1 23:48:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Gold Chest (2)"} 

 Player 1 23:48:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Gold Chest (2)"} 

 Player 1 23:48:38 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:48:38 $ACTION_MASSAGE_REMOVE:  
{"id":77} 

 Player 2 23:48:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":78,"_text":"Wait For Response From Player 2 "},"childOfId":75} 

 Player 2 23:48:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:48:38 $ACTION_MASSAGE_REMOVE:  
{"id":78} 

 Player 2 23:48:38 $ACTION_MASSAGE_REMOVE:  
{"id":76} 

 Player 2 23:48:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":79,"_text":"Stack Was Emptied "}} 

 Player 2 23:48:38 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:48:38 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":6,"originStackId":6},"isAfterActivation":true,"index":6} 

 Player 2 23:48:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":80,"_text":"Stack Was Emptied "}} 

 Player 2 23:48:38 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:54:07 $MATCH: 