Start Log 

 Player 1 16:29:24 $MATCH:  

 Player 1 16:29:25 $START_GAME:  

 Player 1 16:29:25 $MOVE_TO_TABLE:  

 Player 2 16:29:25 $MOVE_TO_TABLE:  

 Player 2 16:29:32 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 1 16:29:33 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 16:29:33 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":296,"itemCardId":297} 

 Player 2 16:29:33 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":291}],"result":true,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 16:29:33 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":290,"itemCardId":291} 

 Player 2 16:29:33 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[28,33,131,134,30,32,42,128,71,69,83,91,25,76,51,123,52,65,29,23,34,59,53,12,124,101,7,85,116,117,54,108,62,96,79,126,75,70,119,122,105,136,90,67,78,73,97,22,88,40,50,100,20,17,87,102,137,37,86,81,118,104,49,132,31,48,56,95,14,58,39,9,93,47,44,130,133,11,57,26,89,36,38,45,110,64,63,120,46,121,72,61,19,8,74,106,103,107,92,127,15,24,84,66,135,77,112,140,55,98,99,41,82,10,43,139,109,138,27,113,111,142,13,21,60,68,114,35,125,141,94,80,129,115,16,18]} 

 Player 2 16:29:33 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[278,270,246,239,238,279,235,251,232,236,241,250,228,268,260,233,243,276,263,274,256,248,266,252,244,280,240,249,281,265,273,245,269,231,254,230,262,258,264,275,253,229,237,255,234,259,242,272,261,271,277,257,247,267]} 

 Player 2 16:29:33 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[155,157,216,173,148,189,175,170,159,212,162,199,220,205,200,161,225,163,206,211,183,203,146,165,188,172,221,190,156,184,174,178,201,196,218,222,169,195,168,192,191,153,223,187,210,194,182,209,177,215,217,152,176,145,171,186,213,202,164,208,198,150,167,204,166,147,158,185,181,219,197,224,180,154,160,207,179,151,214,149,193]} 

 Player 2 16:29:33 $DRAW_CARD:  
{"deckType":5} 

 Player 2 16:29:33 $FLIP_CARD:  
{"cardId":193} 

 Player 2 16:29:33 $ADD_STORE_CARD:  
{"cardId":193} 

 Player 2 16:29:33 $DRAW_CARD:  
{"deckType":5} 

 Player 2 16:29:33 $FLIP_CARD:  
{"cardId":149} 

 Player 2 16:29:33 $ADD_STORE_CARD:  
{"cardId":149} 

 Player 2 16:29:34 $DRAW_CARD:  
{"deckType":2} 

 Player 2 16:29:34 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":267} 

 Player 2 16:29:34 $DRAW_CARD:  
{"deckType":2} 

 Player 2 16:29:34 $FLIP_CARD:  
{"cardId":247} 

 Player 2 16:29:34 $REGISTER_PASSIVE_ITEM:  
{"cardId":247} 

 Player 2 16:29:34 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":247} 

 Player 2 16:29:34 $NEW_MONSTER_ON_PLACE:  
{"cardId":247,"monsterPlaceId":1} 

 Player 2 16:29:34 $DRAW_CARD:  
{"deckType":2} 

 Player 2 16:29:34 $FLIP_CARD:  
{"cardId":257} 

 Player 2 16:29:34 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":257} 

 Player 2 16:29:34 $NEW_MONSTER_ON_PLACE:  
{"cardId":257,"monsterPlaceId":2} 

 Player 2 16:29:34 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 16:29:34 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 16:29:34 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:29:34 $MOVE_CARD:  
{"moveIndex":1,"cardId":18,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:29:34 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":297}],"result":true,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 16:29:34 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":18,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:29:34 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":18} 

 Player 2 16:29:34 $FLIP_CARD:  
{"cardId":18} 

 Player 2 16:29:34 $FLIP_CARD:  
{"cardId":18} 

 Player 2 16:29:34 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":18} 

 Player 2 16:29:34 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:29:34 $MOVE_CARD:  
{"moveIndex":2,"cardId":16,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:29:35 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":16,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:29:35 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":16} 

 Player 2 16:29:35 $FLIP_CARD:  
{"cardId":16} 

 Player 2 16:29:35 $FLIP_CARD:  
{"cardId":16} 

 Player 2 16:29:35 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":16} 

 Player 2 16:29:35 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:29:35 $MOVE_CARD:  
{"moveIndex":3,"cardId":115,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:29:35 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":115,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:29:35 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":115} 

 Player 2 16:29:35 $FLIP_CARD:  
{"cardId":115} 

 Player 2 16:29:35 $FLIP_CARD:  
{"cardId":115} 

 Player 2 16:29:35 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":115} 

 Player 2 16:29:35 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 16:29:35 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 16:29:36 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:29:36 $MOVE_CARD:  
{"moveIndex":4,"cardId":129,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:29:36 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":129,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:29:36 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":129} 

 Player 2 16:29:36 $FLIP_CARD:  
{"cardId":129} 

 Player 2 16:29:36 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":129} 

 Player 2 16:29:36 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:29:36 $MOVE_CARD:  
{"moveIndex":5,"cardId":80,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:29:36 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":80,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:29:36 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":80} 

 Player 2 16:29:36 $FLIP_CARD:  
{"cardId":80} 

 Player 2 16:29:36 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":80} 

 Player 2 16:29:36 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:29:36 $MOVE_CARD:  
{"moveIndex":6,"cardId":94,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:29:37 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":94,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:29:37 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":94} 

 Player 2 16:29:37 $FLIP_CARD:  
{"cardId":94} 

 Player 2 16:29:37 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":94} 

 Player 2 16:29:37 $GAME_HAS_STARTED:  

 Player 2 16:29:37 $SET_TURN:  
{"playerId":2} 

 Player 2 16:29:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:29:37 $NEXT_STACK_ID:  

 Player 2 16:29:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:29:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 16:29:37 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 16:29:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 16:29:37 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 16:29:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 2 16:29:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:29:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 16:29:37 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 16:29:37 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 16:29:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 2 16:29:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 2 16:29:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:29:37 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 16:29:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 2 16:29:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:29:38 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:29:38 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:29:38 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:29:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 16:29:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 16:29:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 16:29:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 16:29:38 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:29:38 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 16:29:38 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 16:29:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 2 16:29:38 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:29:38 $MOVE_CARD:  
{"moveIndex":7,"cardId":141,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:29:38 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":141,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:29:38 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":141} 

 Player 2 16:29:38 $FLIP_CARD:  
{"cardId":141} 

 Player 2 16:29:38 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":141} 

 Player 2 16:29:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 16:29:38 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 16:29:38 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 16:29:38 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:29:38 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 16:29:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 2 16:29:38 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:29:38 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 16:29:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 2 16:29:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 2 16:29:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:29:39 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:29:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 16:29:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 16:29:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 16:29:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 16:29:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 16:29:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 16:29:39 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 2 16:29:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 2 16:29:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 2 16:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 2 16:29:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 2 16:29:39 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 16:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 16:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 16:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 16:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 16:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 16:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 16:29:39 $UPDATE_ACTIONS:  

 Player 2 16:29:40 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 16:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 16:30:15 $SHOW_DECISION:  
{"startCardId":290,"endCardId":257} 

 Player 2 16:30:18 $NEXT_STACK_ID:  

 Player 2 16:30:18 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:30:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Little Horn"} 

 Player 2 16:30:18 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":257,"stackEffectType":4}} 

 Player 2 16:30:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Little Horn"} 

 Player 2 16:30:18 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":257,"stackEffectType":4}} 

 Player 2 16:30:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add DeclareAttack 2 "}} 

 Player 2 16:30:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:30:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Little Horn"} 

 Player 2 16:30:18 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":257,"stackEffectType":4}} 

 Player 2 16:30:18 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 16:30:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding DeclareAttack 2"},"childOfId":10} 

 Player 2 16:30:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 2 16:30:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:30:18 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 2 16:30:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 2 16:30:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:30:18 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:30:18 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:30:18 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:30:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Little Horn"} 

 Player 1 16:30:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Little Horn"} 

 Player 1 16:30:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Little Horn"} 

 Player 1 16:30:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Little Horn"} 

 Player 1 16:30:18 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:30:18 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 2 16:30:18 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 2 16:30:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve DeclareAttack 2 "}} 

 Player 2 16:30:19 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":257,"particleType":5} 

 Player 2 16:30:19 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":4,"originStackId":2},"isAfterActivation":true,"index":4} 

 Player 2 16:30:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Little Horn"} 

 Player 2 16:30:19 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":257,"stackEffectType":4}} 

 Player 2 16:30:19 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 16:30:19 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:30:19 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":257,"stackEffectType":4}} 

 Player 2 16:30:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve DeclareAttack 2  "}} 

 Player 2 16:30:19 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:30:19 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":257,"stackEffectType":4}} 

 Player 2 16:30:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve DeclareAttack 2"},"childOfId":15} 

 Player 2 16:30:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 2 16:30:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:30:19 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:30:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Little Horn"} 

 Player 1 16:30:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Little Horn"} 

 Player 1 16:30:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Little Horn"} 

 Player 1 16:30:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Little Horn"} 

 Player 1 16:30:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Little Horn"} 

 Player 1 16:30:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Little Horn"} 

 Player 1 16:30:19 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:30:19 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 16:30:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 2 16:30:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:30:19 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 2 16:30:19 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 2 16:30:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 2 16:30:19 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:30:19 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 16:30:20 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 16:30:20 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 16:30:20 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 16:30:20 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 16:30:20 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 16:30:20 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 16:30:20 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 16:30:20 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 16:30:20 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 16:30:20 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 16:30:20 $NEXT_STACK_ID:  

 Player 2 16:30:20 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:30:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Little Horn<Monster>"} 

 Player 2 16:30:20 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":257}} 

 Player 2 16:30:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Little Horn<Monster>"} 

 Player 2 16:30:20 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":257}} 

 Player 2 16:30:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add AttackRoll 3 "}} 

 Player 2 16:30:20 $ROLL_DICE:  
{"playerId":2} 

 Player 1 16:30:20 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:30:20 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:30:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Little Horn<Monster>"} 

 Player 1 16:30:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Little Horn<Monster>"} 

 Player 2 16:30:21 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 16:30:21 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":1} 

 Player 2 16:30:21 $UPDATE_STACK_VIS:  
{"stackId":3,"text":"player rolled 1 vs Little Horn<Monster>"} 

 Player 2 16:30:21 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 16:30:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Little Horn<Monster>"} 

 Player 2 16:30:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:30:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Little Horn<Monster>"} 

 Player 2 16:30:24 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":290,"numberRolled":1,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":257}} 

 Player 2 16:30:24 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 16:30:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding AttackRoll 3"},"childOfId":20} 

 Player 2 16:30:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 2 16:30:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:30:25 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 2 16:30:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 2 16:30:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:30:25 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:30:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Little Horn<Monster>"} 

 Player 1 16:30:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Little Horn<Monster>"} 

 Player 1 16:30:25 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:30:25 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 2 16:30:25 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 2 16:30:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve AttackRoll 3 "}} 

 Player 2 16:30:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Added 0 to original roll"}} 

 Player 2 16:30:25 $NEXT_STACK_ID:  

 Player 2 16:30:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Little Horn<Monster>"} 

 Player 2 16:30:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:30:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn combat damage to Isaac \n2:Player 2 rolled 1 vs Little Horn<Monster>"} 

 Player 2 16:30:25 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":290,"entityToDoDamageCardId":257,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 16:30:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn combat damage to Isaac \n2:Player 2 rolled 1 vs Little Horn<Monster>"} 

 Player 2 16:30:25 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":290,"numberRolled":1,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":257}} 

 Player 2 16:30:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn combat damage to Isaac \n2:Player 2 rolled 1 vs Little Horn<Monster>"} 

 Player 2 16:30:25 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":290,"entityToDoDamageCardId":257,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 16:30:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn combat damage to Isaac \n2:Player 2 rolled 1 vs Little Horn<Monster>"} 

 Player 2 16:30:25 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":290,"numberRolled":1,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":257}} 

 Player 2 16:30:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn combat damage to Isaac \n2:Player 2 rolled 1 vs Little Horn<Monster>"} 

 Player 2 16:30:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn combat damage to Isaac \n2:Player 2 rolled 1 vs Little Horn<Monster>"} 

 Player 2 16:30:25 $REPLACE_STACK:  
{"currentStack":[{"entityId":4,"creatorCardId":290,"entityToDoDamageCardId":257,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":3,"creatorCardId":290,"numberRolled":1,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":257}]} 

 Player 2 16:30:25 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":2,"number":6}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":5,"originStackId":3},"isAfterActivation":true,"index":5} 

 Player 2 16:30:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn combat damage to Isaac \n2:Player 2 rolled 1 vs Little Horn<Monster>"} 

 Player 2 16:30:25 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":290,"numberRolled":1,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":257}} 

 Player 2 16:30:25 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 16:30:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn combat damage to Isaac"} 

 Player 2 16:30:25 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":290,"numberRolled":1,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":257}} 

 Player 2 16:30:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Remove After Resolve AttackRoll 3  "}} 

 Player 2 16:30:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn combat damage to Isaac"} 

 Player 2 16:30:26 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":290,"numberRolled":1,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":257}} 

 Player 2 16:30:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Response Remove After Resolve AttackRoll 3"},"childOfId":26} 

 Player 2 16:30:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":26} 

 Player 2 16:30:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:30:26 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 2 16:30:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Wait For Response From Player 1 "},"childOfId":26} 

 Player 2 16:30:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:30:26 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:30:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Little Horn<Monster>"} 

 Player 1 16:30:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Little Horn<Monster>"} 

 Player 1 16:30:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn combat damage to Isaac"} 

 Player 1 16:30:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn combat damage to Isaac"} 

 Player 1 16:30:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn combat damage to Isaac"} 

 Player 1 16:30:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn combat damage to Isaac"} 

 Player 1 16:30:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn combat damage to Isaac"} 

 Player 1 16:30:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn combat damage to Isaac"} 

 Player 1 16:30:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn combat damage to Isaac"} 

 Player 1 16:30:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn combat damage to Isaac"} 

 Player 1 16:30:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn combat damage to Isaac"} 

 Player 1 16:30:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn combat damage to Isaac"} 

 Player 1 16:30:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn combat damage to Isaac \n2:Player 2 is rolling against Little Horn<Monster>"} 

 Player 1 16:30:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn combat damage to Isaac \n2:Player 2 is rolling against Little Horn<Monster>"} 

 Player 1 16:30:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn combat damage to Isaac \n2:Player 2 is rolling against Little Horn<Monster>"} 

 Player 1 16:30:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn combat damage to Isaac \n2:Player 2 is rolling against Little Horn<Monster>"} 

 Player 1 16:30:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn combat damage to Isaac \n2:Player 2 is rolling against Little Horn<Monster>"} 

 Player 1 16:30:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn combat damage to Isaac \n2:Player 2 is rolling against Little Horn<Monster>"} 

 Player 1 16:30:26 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:30:26 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 16:30:26 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 2 16:30:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Resolve CombatDamage 4 "}} 

 Player 2 16:30:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn 1 combat damage to Isaac"} 

 Player 2 16:30:26 $UPDATE_STACK_VIS:  
{"stackId":4,"text":"Little Horn will deal 1 combat damage to Isaac"} 

 Player 2 16:30:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn 1 combat damage to Isaac"} 

 Player 2 16:30:27 $PLAYER_GET_HIT:  
{"playerId":2,"damage":1,"damageDealerId":257} 

 Player 2 16:30:27 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":257}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 

 Player 2 16:30:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn 1 combat damage to Isaac"} 

 Player 2 16:30:27 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":290,"entityToDoDamageCardId":257,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 16:30:27 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 16:30:27 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:30:27 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":290,"entityToDoDamageCardId":257,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 16:30:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Remove After Resolve CombatDamage 4  "}} 

 Player 2 16:30:27 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:30:27 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":290,"entityToDoDamageCardId":257,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 16:30:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Response Remove After Resolve CombatDamage 4"},"childOfId":31} 

 Player 2 16:30:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":31} 

 Player 2 16:30:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:30:27 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:30:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn combat damage to Isaac"} 

 Player 1 16:30:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn combat damage to Isaac"} 

 Player 1 16:30:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn combat damage to Isaac"} 

 Player 1 16:30:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn combat damage to Isaac"} 

 Player 1 16:30:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn combat damage to Isaac"} 

 Player 1 16:30:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn combat damage to Isaac"} 

 Player 1 16:30:27 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:30:27 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 2 16:30:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Wait For Response From Player 2 "},"childOfId":31} 

 Player 2 16:30:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:30:27 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 16:30:27 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 2 16:30:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Stack Was Emptied "}} 

 Player 2 16:30:28 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:30:28 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 16:30:28 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 16:30:28 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 16:30:28 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 16:30:28 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 16:30:28 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 16:30:28 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 16:30:28 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 16:30:28 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 16:30:28 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 16:30:28 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 16:30:28 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 16:30:28 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 16:30:28 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 16:30:28 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 2 16:30:28 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 16:30:28 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 2 16:30:28 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 16:30:28 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 16:30:28 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 2 16:30:29 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 16:30:29 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 2 16:30:29 $NEXT_STACK_ID:  

 Player 2 16:30:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:30:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Little Horn<Monster>"} 

 Player 2 16:30:30 $ADD_TO_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":257}} 

 Player 2 16:30:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Little Horn<Monster>"} 

 Player 2 16:30:30 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":257}} 

 Player 2 16:30:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Add AttackRoll 5 "}} 

 Player 2 16:30:30 $ROLL_DICE:  
{"playerId":2} 

 Player 1 16:30:30 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:30:30 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:30:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Little Horn<Monster>"} 

 Player 1 16:30:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Little Horn<Monster>"} 

 Player 2 16:30:31 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":3} 

 Player 2 16:30:31 $UPDATE_STACK_VIS:  
{"stackId":5,"text":"player rolled 3 vs Little Horn<Monster>"} 

 Player 2 16:30:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 3 vs Little Horn<Monster>"} 

 Player 2 16:30:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:30:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 3 vs Little Horn<Monster>"} 

 Player 2 16:30:34 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":290,"numberRolled":3,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":257}} 

 Player 2 16:30:34 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 2 16:30:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Response Adding AttackRoll 5"},"childOfId":36} 

 Player 2 16:30:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 2 "},"childOfId":36} 

 Player 2 16:30:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:30:34 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 2 16:30:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Wait For Response From Player 1 "},"childOfId":36} 

 Player 2 16:30:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:30:34 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:30:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Little Horn<Monster>"} 

 Player 1 16:30:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Little Horn<Monster>"} 

 Player 1 16:30:34 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:30:34 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 16:30:34 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 2 16:30:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Resolve AttackRoll 5 "}} 

 Player 2 16:30:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Added 0 to original roll"}} 

 Player 2 16:30:35 $NEXT_STACK_ID:  

 Player 2 16:30:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 3 vs Little Horn<Monster>"} 

 Player 2 16:30:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:30:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn combat damage to Isaac \n2:Player 2 rolled 3 vs Little Horn<Monster>"} 

 Player 2 16:30:35 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":290,"entityToDoDamageCardId":257,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 16:30:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn combat damage to Isaac \n2:Player 2 rolled 3 vs Little Horn<Monster>"} 

 Player 2 16:30:35 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":290,"numberRolled":3,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":257}} 

 Player 2 16:30:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn combat damage to Isaac \n2:Player 2 rolled 3 vs Little Horn<Monster>"} 

 Player 2 16:30:35 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":290,"entityToDoDamageCardId":257,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 16:30:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn combat damage to Isaac \n2:Player 2 rolled 3 vs Little Horn<Monster>"} 

 Player 2 16:30:35 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":290,"numberRolled":3,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":257}} 

 Player 2 16:30:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn combat damage to Isaac \n2:Player 2 rolled 3 vs Little Horn<Monster>"} 

 Player 2 16:30:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn combat damage to Isaac \n2:Player 2 rolled 3 vs Little Horn<Monster>"} 

 Player 2 16:30:35 $REPLACE_STACK:  
{"currentStack":[{"entityId":6,"creatorCardId":290,"entityToDoDamageCardId":257,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":5,"creatorCardId":290,"numberRolled":3,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":257}]} 

 Player 2 16:30:35 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":3},{"type":2,"number":1},{"type":2,"number":6}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":7,"originStackId":5},"isAfterActivation":true,"index":7} 

 Player 2 16:30:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn combat damage to Isaac \n2:Player 2 rolled 3 vs Little Horn<Monster>"} 

 Player 2 16:30:35 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":290,"numberRolled":3,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":257}} 

 Player 2 16:30:35 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 16:30:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn combat damage to Isaac"} 

 Player 2 16:30:35 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":290,"numberRolled":3,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":257}} 

 Player 2 16:30:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Remove After Resolve AttackRoll 5  "}} 

 Player 2 16:30:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn combat damage to Isaac"} 

 Player 2 16:30:35 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":290,"numberRolled":3,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":257}} 

 Player 2 16:30:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Response Remove After Resolve AttackRoll 5"},"childOfId":42} 

 Player 2 16:30:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Wait For Response From Player 2 "},"childOfId":42} 

 Player 2 16:30:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:30:35 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 16:30:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Wait For Response From Player 1 "},"childOfId":42} 

 Player 2 16:30:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:30:35 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:30:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Little Horn<Monster>"} 

 Player 1 16:30:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Little Horn<Monster>"} 

 Player 1 16:30:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn combat damage to Isaac"} 

 Player 1 16:30:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn combat damage to Isaac"} 

 Player 1 16:30:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn combat damage to Isaac"} 

 Player 1 16:30:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn combat damage to Isaac"} 

 Player 1 16:30:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn combat damage to Isaac"} 

 Player 1 16:30:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn combat damage to Isaac"} 

 Player 1 16:30:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn combat damage to Isaac"} 

 Player 1 16:30:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn combat damage to Isaac"} 

 Player 1 16:30:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn combat damage to Isaac"} 

 Player 1 16:30:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn combat damage to Isaac"} 

 Player 1 16:30:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn combat damage to Isaac \n2:Player 2 is rolling against Little Horn<Monster>"} 

 Player 1 16:30:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn combat damage to Isaac \n2:Player 2 is rolling against Little Horn<Monster>"} 

 Player 1 16:30:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn combat damage to Isaac \n2:Player 2 is rolling against Little Horn<Monster>"} 

 Player 1 16:30:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn combat damage to Isaac \n2:Player 2 is rolling against Little Horn<Monster>"} 

 Player 1 16:30:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn combat damage to Isaac \n2:Player 2 is rolling against Little Horn<Monster>"} 

 Player 1 16:30:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn combat damage to Isaac \n2:Player 2 is rolling against Little Horn<Monster>"} 

 Player 1 16:30:36 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:30:36 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 2 16:30:36 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 2 16:30:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Resolve CombatDamage 6 "}} 

 Player 2 16:30:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn 1 combat damage to Isaac"} 

 Player 2 16:30:36 $UPDATE_STACK_VIS:  
{"stackId":6,"text":"Little Horn will deal 1 combat damage to Isaac"} 

 Player 2 16:30:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn 1 combat damage to Isaac"} 

 Player 2 16:30:36 $PLAYER_GET_HIT:  
{"playerId":2,"damage":1,"damageDealerId":257} 

 Player 2 16:30:36 $NEXT_STACK_ID:  

 Player 2 16:30:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn 1 combat damage to Isaac"} 

 Player 2 16:30:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:30:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn 1 combat damage to Isaac \n2:Player 2 is about to die"} 

 Player 2 16:30:36 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":290,"playerToDieCardId":290,"stackEffectType":15,"killerId":257}} 

 Player 2 16:30:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn 1 combat damage to Isaac \n2:Player 2 is about to die"} 

 Player 2 16:30:36 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":290,"entityToDoDamageCardId":257,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 16:30:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn 1 combat damage to Isaac \n2:Player 2 is about to die"} 

 Player 2 16:30:37 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":290,"entityToDoDamageCardId":257,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 16:30:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn 1 combat damage to Isaac \n2:Player 2 is about to die"} 

 Player 2 16:30:37 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":290,"playerToDieCardId":290,"stackEffectType":15,"killerId":257}} 

 Player 2 16:30:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn 1 combat damage to Isaac \n2:Player 2 is about to die"} 

 Player 2 16:30:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn 1 combat damage to Isaac \n2:Player 2 is about to die"} 

 Player 2 16:30:37 $REPLACE_STACK:  
{"currentStack":[{"entityId":6,"creatorCardId":290,"entityToDoDamageCardId":257,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":7,"creatorCardId":290,"playerToDieCardId":290,"stackEffectType":15,"killerId":257}]} 

 Player 2 16:30:37 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":257}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":8,"originStackId":-1},"isAfterActivation":true,"index":8} 

 Player 2 16:30:37 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 2 16:30:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 16:30:37 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":290,"entityToDoDamageCardId":257,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 16:30:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Remove After Resolve CombatDamage 6  "}} 

 Player 2 16:30:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 16:30:37 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":290,"entityToDoDamageCardId":257,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 16:30:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Response Remove After Resolve CombatDamage 6"},"childOfId":47} 

 Player 2 16:30:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Wait For Response From Player 2 "},"childOfId":47} 

 Player 2 16:30:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:30:37 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 2 16:30:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Wait For Response From Player 1 "},"childOfId":47} 

 Player 2 16:30:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:30:37 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:30:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn combat damage to Isaac"} 

 Player 1 16:30:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn combat damage to Isaac"} 

 Player 1 16:30:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 16:30:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 16:30:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 16:30:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 16:30:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 16:30:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 16:30:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 16:30:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 16:30:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 16:30:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 16:30:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn combat damage to Isaac \n2:Player 2 is about to die"} 

 Player 1 16:30:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn combat damage to Isaac \n2:Player 2 is about to die"} 

 Player 1 16:30:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn combat damage to Isaac \n2:Player 2 is about to die"} 

 Player 1 16:30:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Little Horn combat damage to Isaac \n2:Player 2 is about to die"} 

 Player 1 16:30:38 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:30:38 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 2 16:30:38 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 2 16:30:38 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 2 16:30:38 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 2 16:30:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Resolve PlayerDeath 7 "}} 

 Player 2 16:30:38 $DISABLE_PARTICLE_EFFECT:  
{"cardId":257,"particleType":5} 

 Player 2 16:30:38 $CANCEL_ATTACK:  

 Player 2 16:30:38 $NEXT_STACK_ID:  

 Player 2 16:30:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 16:30:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:30:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 

 Player 2 16:30:38 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":290,"playerToPayCardId":290,"stackEffectType":16}} 

 Player 2 16:30:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 

 Player 2 16:30:38 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":290,"playerToDieCardId":290,"stackEffectType":15,"killerId":257}} 

 Player 2 16:30:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 

 Player 2 16:30:38 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":290,"playerToDieCardId":290,"stackEffectType":15,"killerId":257}} 

 Player 2 16:30:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 

 Player 2 16:30:38 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":290,"playerToPayCardId":290,"stackEffectType":16}} 

 Player 2 16:30:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 

 Player 2 16:30:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 

 Player 2 16:30:38 $REPLACE_STACK:  
{"currentStack":[{"entityId":7,"creatorCardId":290,"playerToDieCardId":290,"stackEffectType":15,"killerId":257},{"entityId":8,"creatorCardId":290,"playerToPayCardId":290,"stackEffectType":16}]} 

 Player 2 16:30:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 

 Player 2 16:30:38 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":290,"playerToDieCardId":290,"stackEffectType":15,"killerId":257}} 

 Player 2 16:30:38 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 2 16:30:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to pay death penalties"} 

 Player 2 16:30:38 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":290,"playerToDieCardId":290,"stackEffectType":15,"killerId":257}} 

 Player 2 16:30:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Remove After Resolve PlayerDeath 7  "}} 

 Player 2 16:30:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to pay death penalties"} 

 Player 2 16:30:39 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":290,"playerToDieCardId":290,"stackEffectType":15,"killerId":257}} 

 Player 2 16:30:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Response Remove After Resolve PlayerDeath 7"},"childOfId":52} 

 Player 2 16:30:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Wait For Response From Player 2 "},"childOfId":52} 

 Player 2 16:30:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:30:39 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 2 16:30:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Wait For Response From Player 1 "},"childOfId":52} 

 Player 2 16:30:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:30:39 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:30:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 16:30:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 16:30:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to pay death penalties"} 

 Player 1 16:30:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to pay death penalties"} 

 Player 1 16:30:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to pay death penalties"} 

 Player 1 16:30:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to pay death penalties"} 

 Player 1 16:30:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to pay death penalties"} 

 Player 1 16:30:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to pay death penalties"} 

 Player 1 16:30:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to pay death penalties"} 

 Player 1 16:30:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to pay death penalties"} 

 Player 1 16:30:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to pay death penalties"} 

 Player 1 16:30:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to pay death penalties"} 

 Player 1 16:30:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 

 Player 1 16:30:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 

 Player 1 16:30:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 

 Player 1 16:30:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 

 Player 1 16:30:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 

 Player 1 16:30:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 

 Player 1 16:30:39 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:30:39 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 2 16:30:39 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 2 16:30:39 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 2 16:30:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":56,"_text":"Resolve PlayerDeathPenalties 8 "}} 

 Player 2 16:30:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":57,"_text":"Player 2 pays Penalties"}} 

 Player 2 16:30:39 $SET_MONEY:  
{"playerId":2,"numOfCoins":2} 

 Player 2 16:30:39 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-1}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":9,"originStackId":-1},"isAfterActivation":true,"index":9} 

 Player 2 16:30:41 $ACTION_MASSAGE_REMOVE:  
{"id":52}