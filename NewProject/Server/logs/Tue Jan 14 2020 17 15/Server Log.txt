Start Log 

 Player 1 17:15:09 $MATCH:  

 Player 1 17:15:12 $START_GAME:  

 Player 1 17:15:12 $MOVE_TO_TABLE:  

 Player 2 17:15:12 $MOVE_TO_TABLE:  

 Player 2 17:15:20 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 1 17:15:20 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 17:15:20 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":277,"itemCardId":278} 

 Player 2 17:15:20 $CHOOSE_FOR_EDEN:  
{"playerId":2,"originPlayerId":2} 

 Player 1 17:15:20 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":278}],"result":true,"preventMethod":false,"methodScopeId":277,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 17:15:20 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[173,178,185,212,170,151,169,219,172,201,158,196,217,161,179,167,180,168,188,202,147,182,165,155,174,186,162,145,191,197,149,160,213,210,205,150,194,148,157,152,163,183,207,195,187,200,199,214,220,181,154,159,208,190,156,216,192,218,176,203,166,184,175,146,206,204,164,189,215,209,177,153,198,171,193,211]} 

 Player 2 17:15:25 $EDEN_CHOSEN:  
{"cardId":178,"playerId":2} 

 Player 2 17:15:25 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[173,185,212,170,151,169,219,172,201,158,196,217,161,179,167,180,168,188,202,147,182,165,155,174,186,162,145,191,197,149,160,213,210,205,150,194,148,157,152,163,183,207,195,187,200,199,214,220,181,154,159,208,190,156,216,192,218,176,203,166,184,175,146,206,204,164,189,215,209,177,153,198,171,193,211]} 

 Player 2 17:15:25 $FLIP_CARD:  
{"cardId":178} 

 Player 2 17:15:26 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":178}],"result":true,"preventMethod":false,"methodScopeId":283,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 17:15:26 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":283,"itemCardId":178} 

 Player 2 17:15:26 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[26,96,37,52,124,24,56,115,111,121,8,78,36,135,100,12,47,104,93,67,75,22,40,66,112,45,90,49,87,77,89,48,29,132,73,95,59,31,19,35,98,138,80,14,58,92,120,42,50,141,83,33,114,65,107,60,74,54,69,94,30,32,119,109,11,16,63,7,41,51,130,27,13,55,97,103,131,118,99,82,139,137,20,43,28,34,129,25,105,134,106,126,64,142,102,136,10,70,116,86,9,125,128,81,91,44,85,61,53,18,84,123,21,117,17,113,122,71,127,108,79,88,68,133,76,140,101,15,62,39,46,23,110,38,57,72]} 

 Player 2 17:15:26 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[225,227,256,251,224,259,239,244,223,241,231,235,250,260,246,236,274,253,240,228,270,254,268,266,233,245,243,248,247,242,230,238,272,229,267,252,261,237,275,258,265,226,255,249,262,269,232,276,263,257,271,273,234,264]} 

 Player 2 17:15:26 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[182,204,198,173,187,175,202,220,151,193,197,208,171,201,212,188,218,146,205,180,195,219,153,211,147,192,174,185,203,183,149,194,158,159,191,190,186,167,189,176,199,217,156,168,172,145,161,181,206,177,157,209,214,200,163,196,166,213,170,215,165,150,148,210,162,160,155,152,154,169,164,184,207,216,179]} 

 Player 2 17:15:26 $DRAW_CARD:  
{"deckType":5} 

 Player 2 17:15:26 $FLIP_CARD:  
{"cardId":179} 

 Player 2 17:15:26 $ADD_STORE_CARD:  
{"cardId":179} 

 Player 2 17:15:26 $DRAW_CARD:  
{"deckType":5} 

 Player 2 17:15:26 $FLIP_CARD:  
{"cardId":216} 

 Player 2 17:15:26 $ADD_STORE_CARD:  
{"cardId":216} 

 Player 2 17:15:26 $DRAW_CARD:  
{"deckType":2} 

 Player 2 17:15:26 $FLIP_CARD:  
{"cardId":264} 

 Player 2 17:15:26 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":264} 

 Player 2 17:15:26 $NEW_MONSTER_ON_PLACE:  
{"cardId":264,"monsterPlaceId":1} 

 Player 2 17:15:26 $DRAW_CARD:  
{"deckType":2} 

 Player 2 17:15:26 $FLIP_CARD:  
{"cardId":234} 

 Player 2 17:15:26 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":234} 

 Player 2 17:15:26 $NEW_MONSTER_ON_PLACE:  
{"cardId":234,"monsterPlaceId":2} 

 Player 2 17:15:26 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 17:15:26 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":277,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 17:15:26 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:15:26 $MOVE_CARD:  
{"moveIndex":1,"cardId":72,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:15:26 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":72,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:15:26 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":72} 

 Player 2 17:15:26 $FLIP_CARD:  
{"cardId":72} 

 Player 2 17:15:26 $FLIP_CARD:  
{"cardId":72} 

 Player 2 17:15:26 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":72} 

 Player 2 17:15:26 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:15:27 $MOVE_CARD:  
{"moveIndex":2,"cardId":57,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:15:27 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":57,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:15:27 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":57} 

 Player 2 17:15:27 $FLIP_CARD:  
{"cardId":57} 

 Player 2 17:15:27 $FLIP_CARD:  
{"cardId":57} 

 Player 2 17:15:27 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":57} 

 Player 2 17:15:27 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:15:27 $MOVE_CARD:  
{"moveIndex":3,"cardId":38,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:15:27 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":38,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:15:27 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":38} 

 Player 2 17:15:27 $FLIP_CARD:  
{"cardId":38} 

 Player 2 17:15:27 $FLIP_CARD:  
{"cardId":38} 

 Player 2 17:15:27 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":38} 

 Player 2 17:15:28 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 17:15:28 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":283,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 17:15:28 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:15:28 $MOVE_CARD:  
{"moveIndex":4,"cardId":110,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:15:28 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":110,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:15:28 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":110} 

 Player 2 17:15:28 $FLIP_CARD:  
{"cardId":110} 

 Player 2 17:15:28 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":110} 

 Player 2 17:15:28 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:15:28 $MOVE_CARD:  
{"moveIndex":5,"cardId":23,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:15:28 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":23,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:15:28 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":23} 

 Player 2 17:15:28 $FLIP_CARD:  
{"cardId":23} 

 Player 2 17:15:28 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":23} 

 Player 2 17:15:29 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:15:29 $MOVE_CARD:  
{"moveIndex":6,"cardId":46,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:15:29 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":46,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:15:29 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":46} 

 Player 2 17:15:29 $FLIP_CARD:  
{"cardId":46} 

 Player 2 17:15:29 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":46} 

 Player 2 17:15:29 $GAME_HAS_STARTED:  

 Player 2 17:15:29 $SET_TURN:  
{"playerId":1} 

 Player 2 17:15:29 $START_TURN:  
{"playerId":1} 

 Player 2 17:15:29 $UPDATE_ACTIONS:  

 Player 1 17:15:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:15:29 $NEXT_STACK_ID:  

 Player 1 17:15:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:15:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 17:15:29 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":277,"turnPlayerCardId":277,"stackEffectType":13}} 

 Player 1 17:15:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 17:15:29 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":277,"turnPlayerCardId":277,"stackEffectType":13}} 

 Player 1 17:15:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 1 17:15:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:15:29 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 17:15:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 17:15:29 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":277,"turnPlayerCardId":277,"stackEffectType":13}} 

 Player 1 17:15:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 1 17:15:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 1 17:15:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:15:29 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 17:15:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 1 17:15:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 17:15:29 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 17:15:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:15:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:15:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 17:15:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 17:15:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 17:15:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 17:15:30 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 17:15:30 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 17:15:30 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 17:15:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 1 17:15:30 $DRAW_CARD:  
{"deckType":1} 

 Player 1 17:15:30 $MOVE_CARD:  
{"moveIndex":7,"cardId":39,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 17:15:30 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":39,"flipIfFlipped":false,"playerId":1} 

 Player 1 17:15:30 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":39} 

 Player 1 17:15:30 $FLIP_CARD:  
{"cardId":39} 

 Player 1 17:15:30 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":39} 

 Player 1 17:15:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 17:15:30 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":277,"turnPlayerCardId":277,"stackEffectType":13}} 

 Player 1 17:15:30 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 17:15:30 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:15:30 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":277,"turnPlayerCardId":277,"stackEffectType":13}} 

 Player 1 17:15:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 1 17:15:30 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:15:30 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":277,"turnPlayerCardId":277,"stackEffectType":13}} 

 Player 1 17:15:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 1 17:15:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 1 17:15:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 17:15:30 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 17:15:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 17:15:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 17:15:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 17:15:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 17:15:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 17:15:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 17:15:31 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 17:15:31 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 1 17:15:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 1 17:15:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:15:31 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 1 17:15:31 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 1 17:15:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 1 17:15:31 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:15:31 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 17:15:31 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 17:15:31 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 17:15:31 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 17:15:31 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 17:15:31 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 17:15:31 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 17:15:32 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 17:15:33 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 17:15:44 $MOVE_CARD:  
{"moveIndex":8,"cardId":160,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Hand"} 

 Player 2 17:15:44 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":160,"flipIfFlipped":true,"playerId":1} 

 Player 1 17:15:44 $REGISTER_PASSIVE_ITEM:  
{"cardId":160} 

 Player 1 17:15:44 $MOVE_CARD:  
{"moveIndex":9,"cardId":160,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 

 Player 2 17:15:44 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":160,"flipIfFlipped":true,"playerId":1} 

 Player 1 17:15:44 $ADD_AN_ITEM:  
{"playerId":1,"cardId":160,"isReward":true} 

 Player 1 17:15:44 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":160}],"result":true,"preventMethod":false,"methodScopeId":277,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 1 17:15:50 $SHOW_DECISION:  
{"startCardId":277,"endCardId":264} 

 Player 1 17:15:53 $NEXT_STACK_ID:  

 Player 1 17:15:53 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:15:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Spider"} 

 Player 1 17:15:53 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":277,"attackingPlayerCardId":277,"idOfCardBeingAttacked":264,"stackEffectType":4}} 

 Player 1 17:15:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Spider"} 

 Player 1 17:15:53 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":277,"attackingPlayerCardId":277,"idOfCardBeingAttacked":264,"stackEffectType":4}} 

 Player 1 17:15:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add DeclareAttack 2 "}} 

 Player 1 17:15:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:15:53 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 17:15:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Spider"} 

 Player 1 17:15:53 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":277,"attackingPlayerCardId":277,"idOfCardBeingAttacked":264,"stackEffectType":4}} 

 Player 1 17:15:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding DeclareAttack 2"},"childOfId":10} 

 Player 1 17:15:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 1 17:15:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:15:53 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 1 17:15:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 1 17:15:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 17:15:53 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 17:15:53 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:15:53 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:15:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Spider"} 

 Player 2 17:15:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Spider"} 

 Player 2 17:15:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Spider"} 

 Player 2 17:15:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Spider"} 

 Player 2 17:15:53 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 17:15:53 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 1 17:15:53 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 1 17:15:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve DeclareAttack 2 "}} 

 Player 1 17:15:54 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":264,"particleType":5} 

 Player 1 17:15:54 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":277,"scopeIsPlayer":true,"index":3,"originStackId":2},"isAfterActivation":true,"index":3} 

 Player 1 17:15:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Spider"} 

 Player 1 17:15:54 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":277,"attackingPlayerCardId":277,"idOfCardBeingAttacked":264,"stackEffectType":4}} 

 Player 1 17:15:54 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 17:15:54 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:15:54 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":277,"attackingPlayerCardId":277,"idOfCardBeingAttacked":264,"stackEffectType":4}} 

 Player 1 17:15:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve DeclareAttack 2  "}} 

 Player 1 17:15:54 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:15:54 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":277,"attackingPlayerCardId":277,"idOfCardBeingAttacked":264,"stackEffectType":4}} 

 Player 1 17:15:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve DeclareAttack 2"},"childOfId":15} 

 Player 1 17:15:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 1 17:15:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 17:15:54 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 17:15:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Spider"} 

 Player 2 17:15:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Spider"} 

 Player 2 17:15:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Spider"} 

 Player 2 17:15:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Spider"} 

 Player 2 17:15:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Spider"} 

 Player 2 17:15:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Spider"} 

 Player 2 17:15:54 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 17:15:54 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 1 17:15:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 1 17:15:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:15:54 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 1 17:15:54 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 1 17:15:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 1 17:15:54 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:15:54 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 17:15:54 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 17:15:54 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 17:15:54 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 17:15:54 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 17:15:54 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 17:15:54 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 17:15:54 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 17:15:55 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 17:15:55 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 17:15:55 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 17:15:56 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 17:15:56 $NEXT_STACK_ID:  

 Player 1 17:15:56 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:15:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Spider<Monster>"} 

 Player 1 17:15:56 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":277,"rollingPlayerCardId":277,"stackEffectType":2,"attackedMonsterCardId":264}} 

 Player 1 17:15:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Spider<Monster>"} 

 Player 1 17:15:57 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":277,"rollingPlayerCardId":277,"stackEffectType":2,"attackedMonsterCardId":264}} 

 Player 1 17:15:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add AttackRoll 3 "}} 

 Player 1 17:15:57 $ROLL_DICE:  
{"playerId":1} 

 Player 1 17:15:57 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 17:15:57 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:15:57 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:15:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Spider<Monster>"} 

 Player 2 17:15:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Spider<Monster>"} 

 Player 1 17:15:59 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":6} 

 Player 1 17:15:59 $UPDATE_STACK_VIS:  
{"stackId":3,"text":"player rolled 6 vs Spider<Monster>"} 

 Player 1 17:15:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Spider<Monster>"} 

 Player 1 17:15:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:15:59 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 17:15:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Spider<Monster>"} 

 Player 1 17:15:59 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":277,"numberRolled":6,"rollingPlayerCardId":277,"stackEffectType":2,"attackedMonsterCardId":264}} 

 Player 1 17:15:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding AttackRoll 3"},"childOfId":20} 

 Player 1 17:15:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 1 17:15:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:15:59 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 1 17:15:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 1 17:15:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 17:15:59 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 17:15:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Spider<Monster>"} 

 Player 2 17:15:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Spider<Monster>"} 

 Player 2 17:15:59 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 17:15:59 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 1 17:15:59 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 1 17:15:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve AttackRoll 3 "}} 

 Player 1 17:15:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Added 0 to original roll"}} 

 Player 1 17:15:59 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":277,"scopeIsPlayer":true,"index":1,"originStackId":3},"isAfterActivation":false,"index":1} 

 Player 1 17:15:59 $NEXT_STACK_ID:  

 Player 1 17:15:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Spider<Monster>"} 

 Player 1 17:16:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Spider<Monster> \n2:Activate Dads Lost Coin effect Reroll Dice Passive<Reroll Dice Passive>"} 

 Player 1 17:16:00 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":277,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":160,"effectToDo":{"effectName":"RerollDicePassive","cardEffectNum":0,"cardPlayerId":1,"cardId":160,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 17:16:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Spider<Monster> \n2:Activate Dads Lost Coin effect Reroll Dice Passive<Reroll Dice Passive>"} 

 Player 1 17:16:00 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":277,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":160,"effectToDo":{"effectName":"RerollDicePassive","cardEffectNum":0,"cardPlayerId":1,"cardId":160,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 17:16:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Add ActivatePassiveEffect 4 "}} 

 Player 1 17:16:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Spider<Monster> \n2:Activate Dads Lost Coin effect Reroll Dice Passive<Reroll Dice Passive>"} 

 Player 1 17:16:00 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 1 17:16:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Spider<Monster> \n2:Activate Dads Lost Coin effect Reroll Dice Passive<Reroll Dice Passive>"} 

 Player 1 17:16:00 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[277],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":277,"effectCardPlayer":277},"entityId":4,"creatorCardId":277,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":160,"effectToDo":{"effectName":"RerollDicePassive","cardEffectNum":0,"cardPlayerId":1,"cardId":160,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 17:16:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Response Adding ActivatePassiveEffect 4"},"childOfId":26} 

 Player 1 17:16:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":26} 

 Player 1 17:16:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 17:16:00 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 17:16:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Spider<Monster>"} 

 Player 2 17:16:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Spider<Monster>"} 

 Player 2 17:16:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Spider<Monster> \n2:Activate Dads Lost Coin "} 

 Player 2 17:16:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Spider<Monster> \n2:Activate Dads Lost Coin "} 

 Player 2 17:16:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Spider<Monster> \n2:Activate Dads Lost Coin "} 

 Player 2 17:16:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Spider<Monster> \n2:Activate Dads Lost Coin "} 

 Player 2 17:16:00 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 17:16:00 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 1 17:16:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Wait For Response From Player 1 "},"childOfId":26} 

 Player 1 17:16:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:16:00 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 1 17:16:00 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 1 17:16:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Resolve ActivatePassiveEffect 4 "}} 

 Player 1 17:16:00 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":160,"particleType":6} 

 Player 1 17:16:02 $DISABLE_PARTICLE_EFFECT:  
{"cardId":160,"particleType":6} 

 Player 1 17:16:02 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 17:16:12 $ROLL_DICE:  
{"playerId":1} 

 Player 1 17:16:14 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":4} 

 Player 1 17:16:14 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":277,"scopeIsPlayer":false,"index":1,"originStackId":3},"isAfterActivation":false,"index":1} 

 Player 1 17:16:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Spider<Monster> \n2:Activate Dads Lost Coin effect Reroll Dice Passive<Reroll Dice Passive>"} 

 Player 1 17:16:14 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[277],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":277,"effectCardPlayer":277},"entityId":4,"creatorCardId":277,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":160,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 17:16:14 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 17:16:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Spider<Monster>"} 

 Player 1 17:16:14 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[277],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":277,"effectCardPlayer":277},"entityId":4,"creatorCardId":277,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":160,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 17:16:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Remove After Resolve ActivatePassiveEffect 4  "}} 

 Player 1 17:16:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Spider<Monster>"} 

 Player 1 17:16:14 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[277],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":277,"effectCardPlayer":277},"entityId":4,"creatorCardId":277,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":160,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 17:16:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Response Remove After Resolve ActivatePassiveEffect 4"},"childOfId":31} 

 Player 1 17:16:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":31} 

 Player 1 17:16:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:16:14 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 1 17:16:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Wait For Response From Player 2 "},"childOfId":31} 

 Player 1 17:16:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 17:16:14 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 17:16:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Spider<Monster> \n2:Activate Dads Lost Coin "} 

 Player 2 17:16:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Spider<Monster> \n2:Activate Dads Lost Coin "} 

 Player 2 17:16:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Spider<Monster> \n2:Activate Dads Lost Coin "} 

 Player 2 17:16:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Spider<Monster> \n2:Activate Dads Lost Coin "} 

 Player 2 17:16:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Spider<Monster> \n2:Activate Dads Lost Coin "} 

 Player 2 17:16:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Spider<Monster> \n2:Activate Dads Lost Coin "} 

 Player 2 17:16:14 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 17:16:14 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 1 17:16:14 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 1 17:16:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Resolve AttackRoll 3 "}} 

 Player 1 17:16:14 $NEXT_STACK_ID:  

 Player 1 17:16:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Spider<Monster>"} 

 Player 1 17:16:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:16:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Spider \n2:Player 1 rolled 6 vs Spider<Monster>"} 

 Player 1 17:16:15 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":277,"entityToDoDamageCardId":277,"entityToTakeDamageCardId":264,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 17:16:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Spider \n2:Player 1 rolled 6 vs Spider<Monster>"} 

 Player 1 17:16:15 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":277,"numberRolled":6,"rollingPlayerCardId":277,"stackEffectType":2,"attackedMonsterCardId":264}} 

 Player 1 17:16:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Spider \n2:Player 1 rolled 6 vs Spider<Monster>"} 

 Player 1 17:16:15 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":277,"entityToDoDamageCardId":277,"entityToTakeDamageCardId":264,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 17:16:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Spider \n2:Player 1 rolled 6 vs Spider<Monster>"} 

 Player 1 17:16:15 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":277,"numberRolled":6,"rollingPlayerCardId":277,"stackEffectType":2,"attackedMonsterCardId":264}} 

 Player 1 17:16:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Spider \n2:Player 1 rolled 6 vs Spider<Monster>"} 

 Player 1 17:16:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Spider \n2:Player 1 rolled 6 vs Spider<Monster>"} 

 Player 1 17:16:15 $REPLACE_STACK:  
{"currentStack":[{"entityId":5,"creatorCardId":277,"entityToDoDamageCardId":277,"entityToTakeDamageCardId":264,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":3,"creatorCardId":277,"numberRolled":6,"rollingPlayerCardId":277,"stackEffectType":2,"attackedMonsterCardId":264}]} 

 Player 1 17:16:15 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":277,"scopeIsPlayer":false,"index":1,"originStackId":3},"isAfterActivation":true,"index":1} 

 Player 1 17:16:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Spider \n2:Player 1 rolled 6 vs Spider<Monster>"} 

 Player 1 17:16:15 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":277,"numberRolled":6,"rollingPlayerCardId":277,"stackEffectType":2,"attackedMonsterCardId":264}} 

 Player 1 17:16:15 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 17:16:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Spider"} 

 Player 1 17:16:15 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":277,"numberRolled":6,"rollingPlayerCardId":277,"stackEffectType":2,"attackedMonsterCardId":264}} 

 Player 1 17:16:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Remove After Resolve AttackRoll 3  "}} 

 Player 1 17:16:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Spider"} 

 Player 1 17:16:15 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":277,"numberRolled":6,"rollingPlayerCardId":277,"stackEffectType":2,"attackedMonsterCardId":264}} 

 Player 1 17:16:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Response Remove After Resolve AttackRoll 3"},"childOfId":36} 

 Player 1 17:16:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 1 "},"childOfId":36} 

 Player 1 17:16:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:16:15 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 1 17:16:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Wait For Response From Player 2 "},"childOfId":36} 

 Player 1 17:16:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 17:16:15 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 17:16:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Spider<Monster>"} 

 Player 2 17:16:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Spider<Monster>"} 

 Player 2 17:16:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Spider"} 

 Player 2 17:16:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Spider"} 

 Player 2 17:16:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Spider"} 

 Player 2 17:16:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Spider"} 

 Player 2 17:16:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Spider"} 

 Player 2 17:16:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Spider"} 

 Player 2 17:16:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Spider"} 

 Player 2 17:16:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Spider"} 

 Player 2 17:16:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Spider"} 

 Player 2 17:16:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Spider"} 

 Player 2 17:16:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Spider \n2:Player 1 is rolling against Spider<Monster>"} 

 Player 2 17:16:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Spider \n2:Player 1 is rolling against Spider<Monster>"} 

 Player 2 17:16:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Spider \n2:Player 1 is rolling against Spider<Monster>"} 

 Player 2 17:16:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Spider \n2:Player 1 is rolling against Spider<Monster>"} 

 Player 2 17:16:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Spider \n2:Player 1 is rolling against Spider<Monster>"} 

 Player 2 17:16:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Spider \n2:Player 1 is rolling against Spider<Monster>"} 

 Player 2 17:16:16 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 17:16:16 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 1 17:16:16 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 1 17:16:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Resolve CombatDamage 5 "}} 

 Player 1 17:16:16 $UPDATE_STACK_VIS:  
{"stackId":5,"text":"Azazel will deal 1 combat damage to Spider"} 

 Player 1 17:16:16 $MONSTER_GET_DAMAGED:  
{"cardId":264,"hpLeft":0,"damageDealerId":277} 

 Player 1 17:16:16 $NEXT_STACK_ID:  

 Player 1 17:16:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Spider"} 

 Player 1 17:16:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:16:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Spider \n2:[object Object] killed by Azazel"} 

 Player 1 17:16:16 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":277,"monsterToDieCardId":264,"stackEffectType":5,"killerId":277}} 

 Player 1 17:16:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Spider \n2:[object Object] killed by Azazel"} 

 Player 1 17:16:16 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":277,"entityToDoDamageCardId":277,"entityToTakeDamageCardId":264,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 17:16:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Spider \n2:[object Object] killed by Azazel"} 

 Player 1 17:16:16 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":277,"entityToDoDamageCardId":277,"entityToTakeDamageCardId":264,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 17:16:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Spider \n2:[object Object] killed by Azazel"} 

 Player 1 17:16:16 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":277,"monsterToDieCardId":264,"stackEffectType":5,"killerId":277}} 

 Player 1 17:16:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Spider \n2:[object Object] killed by Azazel"} 

 Player 1 17:16:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Spider \n2:[object Object] killed by Azazel"} 

 Player 1 17:16:16 $REPLACE_STACK:  
{"currentStack":[{"entityId":5,"creatorCardId":277,"entityToDoDamageCardId":277,"entityToTakeDamageCardId":264,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":6,"creatorCardId":277,"monsterToDieCardId":264,"stackEffectType":5,"killerId":277}]} 

 Player 1 17:16:16 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":277}],"result":null,"preventMethod":false,"methodScopeId":264,"scopeIsPlayer":false,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 1 17:16:16 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":4},{"type":0,"number":277},{"type":0,"number":264}],"result":null,"preventMethod":false,"methodScopeId":277,"scopeIsPlayer":true,"index":5,"originStackId":5},"isAfterActivation":true,"index":5} 

 Player 1 17:16:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Spider \n2:[object Object] killed by Azazel"} 

 Player 1 17:16:16 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":277,"entityToDoDamageCardId":277,"entityToTakeDamageCardId":264,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 17:16:16 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 1 17:16:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Azazel"} 

 Player 1 17:16:16 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":277,"entityToDoDamageCardId":277,"entityToTakeDamageCardId":264,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 17:16:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Remove After Resolve CombatDamage 5  "}} 

 Player 1 17:16:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Azazel"} 

 Player 1 17:16:17 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":277,"entityToDoDamageCardId":277,"entityToTakeDamageCardId":264,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 17:16:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Response Remove After Resolve CombatDamage 5"},"childOfId":41} 

 Player 1 17:16:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 1 "},"childOfId":41} 

 Player 1 17:16:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:16:17 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 1 17:16:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Wait For Response From Player 2 "},"childOfId":41} 

 Player 1 17:16:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 17:16:17 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 1 17:16:17 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 2 17:16:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Spider"} 

 Player 2 17:16:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Spider"} 

 Player 2 17:16:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Azazel"} 

 Player 2 17:16:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Azazel"} 

 Player 2 17:16:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Azazel"} 

 Player 2 17:16:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Azazel"} 

 Player 2 17:16:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Azazel"} 

 Player 2 17:16:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Azazel"} 

 Player 2 17:16:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Azazel"} 

 Player 2 17:16:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Azazel"} 

 Player 2 17:16:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Azazel"} 

 Player 2 17:16:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Azazel"} 

 Player 2 17:16:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Spider \n2:[object Object] killed by Azazel"} 

 Player 2 17:16:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Spider \n2:[object Object] killed by Azazel"} 

 Player 2 17:16:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Spider \n2:[object Object] killed by Azazel"} 

 Player 2 17:16:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Spider \n2:[object Object] killed by Azazel"} 

 Player 2 17:16:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Spider \n2:[object Object] killed by Azazel"} 

 Player 2 17:16:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Spider \n2:[object Object] killed by Azazel"} 

 Player 2 17:16:17 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 17:16:17 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 1 17:16:17 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 1 17:16:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Resolve MonsterDeath 6 "}} 

 Player 1 17:16:17 $DISABLE_PARTICLE_EFFECT:  
{"cardId":264,"particleType":5} 

 Player 1 17:16:18 $CANCEL_ATTACK:  

 Player 1 17:16:18 $NEXT_STACK_ID:  

 Player 1 17:16:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Azazel"} 

 Player 1 17:16:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:16:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Spider<Monster> reward \n2:[object Object] killed by Azazel"} 

 Player 1 17:16:18 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":277,"monsterCardWithRewardId":264,"playerCardIdToReward":277,"stackEffectType":7}} 

 Player 1 17:16:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Spider<Monster> reward \n2:[object Object] killed by Azazel"} 

 Player 1 17:16:18 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":277,"monsterToDieCardId":264,"stackEffectType":5,"killerId":277}} 

 Player 1 17:16:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Spider<Monster> reward \n2:[object Object] killed by Azazel"} 

 Player 1 17:16:18 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":277,"monsterCardWithRewardId":264,"playerCardIdToReward":277,"stackEffectType":7}} 

 Player 1 17:16:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Spider<Monster> reward \n2:[object Object] killed by Azazel"} 

 Player 1 17:16:18 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":277,"monsterToDieCardId":264,"stackEffectType":5,"killerId":277}} 

 Player 1 17:16:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Spider<Monster> reward \n2:[object Object] killed by Azazel"} 

 Player 1 17:16:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Spider<Monster> reward \n2:[object Object] killed by Azazel"} 

 Player 1 17:16:18 $REPLACE_STACK:  
{"currentStack":[{"entityId":7,"creatorCardId":277,"monsterCardWithRewardId":264,"playerCardIdToReward":277,"stackEffectType":7},{"entityId":6,"creatorCardId":277,"monsterToDieCardId":264,"stackEffectType":5,"killerId":277}]} 

 Player 1 17:16:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Spider<Monster> reward \n2:[object Object] killed by Azazel"} 

 Player 1 17:16:18 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":277,"monsterToDieCardId":264,"stackEffectType":5,"killerId":277}} 

 Player 1 17:16:18 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 1 17:16:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Spider<Monster> reward"} 

 Player 1 17:16:18 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":277,"monsterToDieCardId":264,"stackEffectType":5,"killerId":277}} 

 Player 1 17:16:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Remove After Resolve MonsterDeath 6  "}} 

 Player 1 17:16:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Spider<Monster> reward"} 

 Player 1 17:16:18 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":277,"monsterToDieCardId":264,"stackEffectType":5,"killerId":277}} 

 Player 1 17:16:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Response Remove After Resolve MonsterDeath 6"},"childOfId":46} 

 Player 1 17:16:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Wait For Response From Player 1 "},"childOfId":46} 

 Player 1 17:16:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:16:18 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 1 17:16:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Wait For Response From Player 2 "},"childOfId":46} 

 Player 1 17:16:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 17:16:18 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 1 17:16:18 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 2 17:16:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Azazel"} 

 Player 2 17:16:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Azazel"} 

 Player 2 17:16:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Spider<Monster> reward"} 

 Player 2 17:16:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Spider<Monster> reward"} 

 Player 2 17:16:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Spider<Monster> reward"} 

 Player 2 17:16:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Spider<Monster> reward"} 

 Player 2 17:16:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Spider<Monster> reward"} 

 Player 2 17:16:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Spider<Monster> reward"} 

 Player 2 17:16:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Spider<Monster> reward"} 

 Player 2 17:16:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Spider<Monster> reward"} 

 Player 2 17:16:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Spider<Monster> reward"} 

 Player 2 17:16:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Spider<Monster> reward"} 

 Player 2 17:16:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Spider<Monster> reward \n2:[object Object] killed by Azazel"} 

 Player 2 17:16:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Spider<Monster> reward \n2:[object Object] killed by Azazel"} 

 Player 2 17:16:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Spider<Monster> reward \n2:[object Object] killed by Azazel"} 

 Player 2 17:16:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Spider<Monster> reward \n2:[object Object] killed by Azazel"} 

 Player 2 17:16:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Spider<Monster> reward \n2:[object Object] killed by Azazel"} 

 Player 2 17:16:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Spider<Monster> reward \n2:[object Object] killed by Azazel"} 

 Player 2 17:16:19 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 17:16:19 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 1 17:16:19 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 1 17:16:19 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 1 17:16:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Resolve MonsterRewardStackEffect 7 "}} 

 Player 1 17:16:19 $DRAW_CARD:  
{"deckType":1} 

 Player 1 17:16:19 $MOVE_CARD:  
{"moveIndex":10,"cardId":62,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 17:16:19 $MOVE_CARD_END:  
{"moveIndex":10,"cardId":62,"flipIfFlipped":false,"playerId":1} 

 Player 1 17:16:19 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":62} 

 Player 1 17:16:19 $FLIP_CARD:  
{"cardId":62} 

 Player 1 17:16:20 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":62} 

 Player 1 17:16:20 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":264,"scopeIsPlayer":false,"index":6,"originStackId":7},"isAfterActivation":true,"index":6} 

 Player 1 17:16:20 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:16:20 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 17:16:20 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 17:16:20 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 17:16:20 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 17:16:20 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 17:16:20 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 17:16:20 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 17:16:20 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 17:16:20 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 17:16:20 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 17:16:20 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 17:16:20 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 17:16:20 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 17:16:20 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 17:16:20 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 1 17:16:20 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 17:16:20 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 1 17:16:20 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 1 17:16:20 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 1 17:16:20 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 1 17:16:20 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 1 17:16:20 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 1 17:16:20 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 1 17:16:20 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 1 17:16:20 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:16:20 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":277,"monsterCardWithRewardId":264,"playerCardIdToReward":277,"stackEffectType":7}} 

 Player 1 17:16:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Fizzle MonsterRewardStackEffect 7"}} 

 Player 1 17:16:20 $FIZZLE_STACK_EFFECT:  
{"entityId":7} 

 Player 1 17:16:20 $MOVE_CARD:  
{"moveIndex":11,"cardId":264,"placeID":298,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 17:16:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Spider<Monster> reward"} 

 Player 2 17:16:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Spider<Monster> reward"} 

 Player 2 17:16:20 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 17:16:20 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:16:21 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 17:16:21 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 17:16:21 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 17:16:21 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 17:16:21 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 17:16:21 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 17:16:21 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 17:16:21 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 17:16:21 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 17:16:21 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 17:16:21 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 17:16:21 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 17:16:21 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 17:16:21 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 17:16:21 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 2 17:16:21 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 17:16:21 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 2 17:16:21 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 17:16:21 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 2 17:16:21 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 17:16:21 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 2 17:16:21 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 2 17:16:21 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 2 17:16:21 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 2 17:16:21 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 2 17:16:21 $MOVE_CARD_END:  
{"moveIndex":11,"cardId":264,"flipIfFlipped":true,"playerId":1} 

 Player 1 17:16:21 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 1 17:16:21 $MOVE_CARD_TO_PILE:  
{"type":2,"cardId":264} 

 Player 1 17:16:21 $REMOVE_MONSTER:  
{"holderId":1,"monsterId":264} 

 Player 1 17:16:21 $NEXT_STACK_ID:  

 Player 1 17:16:21 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:16:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 1 17:16:21 $ADD_TO_STACK:  
{"stackEffect":{"entityId":8,"creatorCardId":277,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 1 17:16:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 1 17:16:21 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":277,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 1 17:16:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Add RefillEmptySlot 8 "}} 

 Player 1 17:16:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:16:21 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 1 17:16:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 1 17:16:22 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":277,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 1 17:16:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Response Adding RefillEmptySlot 8"},"childOfId":52} 

 Player 1 17:16:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Wait For Response From Player 1 "},"childOfId":52} 

 Player 1 17:16:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:16:22 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 1 17:16:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Wait For Response From Player 2 "},"childOfId":52} 

 Player 1 17:16:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 17:16:22 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 17:16:22 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:16:22 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:16:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 2 17:16:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 2 17:16:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 2 17:16:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 2 17:16:22 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 17:16:22 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 1 17:16:22 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 1 17:16:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":56,"_text":"Resolve RefillEmptySlot 8 "}} 

 Player 1 17:16:22 $DRAW_CARD:  
{"deckType":2} 

 Player 1 17:16:22 $FLIP_CARD:  
{"cardId":273} 

 Player 1 17:16:22 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":273} 

 Player 1 17:16:22 $NEW_MONSTER_ON_PLACE:  
{"cardId":273,"monsterPlaceId":1} 

 Player 1 17:16:22 $SHOW_DECISION:  
{"startCardId":277,"endCardId":273} 

 Player 1 17:16:22 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 1 17:16:25 $NEXT_STACK_ID:  

 Player 1 17:16:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 1 17:16:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs"} 

 Player 1 17:16:25 $ADD_TO_STACK:  
{"stackEffect":{"entityId":9,"creatorCardId":277,"hasLockingStackEffect":false,"itemToPlayCardId":273,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 17:16:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs"} 

 Player 1 17:16:25 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":277,"hasLockingStackEffect":false,"itemToPlayCardId":273,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 17:16:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":57,"_text":"Add ActivateItem 9 "}} 

 Player 1 17:16:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:16:25 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 1 17:16:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs"} 

 Player 1 17:16:25 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":277,"hasLockingStackEffect":false,"itemToPlayCardId":273,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 17:16:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":58,"_text":"Response Adding ActivateItem 9"},"childOfId":57} 

 Player 1 17:16:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":59,"_text":"Wait For Response From Player 1 "},"childOfId":57} 

 Player 1 17:16:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:16:25 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 1 17:16:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":60,"_text":"Wait For Response From Player 2 "},"childOfId":57} 

 Player 1 17:16:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 17:16:25 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 17:16:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 2 17:16:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 2 17:16:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs"} 

 Player 2 17:16:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs"} 

 Player 2 17:16:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs"} 

 Player 2 17:16:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs"} 

 Player 2 17:16:26 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 17:16:26 $ACTION_MASSAGE_REMOVE:  
{"id":60} 

 Player 1 17:16:26 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 1 17:16:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":61,"_text":"Resolve ActivateItem 9 "}} 

 Player 1 17:16:26 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":273,"particleType":6} 

 Player 1 17:16:28 $DISABLE_PARTICLE_EFFECT:  
{"cardId":273,"particleType":6} 

 Player 1 17:16:28 $PLAYER_GET_HIT:  
{"playerId":1,"damage":2,"damageDealerId":273} 

 Player 1 17:16:28 $NEXT_STACK_ID:  

 Player 1 17:16:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs"} 

 Player 1 17:16:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:16:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to die"} 

 Player 1 17:16:28 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":277,"playerToDieCardId":277,"stackEffectType":15,"killerId":273}} 

 Player 1 17:16:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to die"} 

 Player 1 17:16:28 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":277,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 1 17:16:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to die"} 

 Player 1 17:16:28 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":277,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 1 17:16:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to die"} 

 Player 1 17:16:28 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":277,"hasLockingStackEffect":false,"itemToPlayCardId":273,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 17:16:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to die"} 

 Player 1 17:16:28 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":277,"playerToDieCardId":277,"stackEffectType":15,"killerId":273}} 

 Player 1 17:16:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to die"} 

 Player 1 17:16:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to die"} 

 Player 1 17:16:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to die"} 

 Player 1 17:16:28 $REPLACE_STACK:  
{"currentStack":[{"entityId":8,"creatorCardId":277,"slotType":2,"slotToFillId":1,"stackEffectType":10},{"entityId":9,"creatorCardId":277,"hasLockingStackEffect":false,"itemToPlayCardId":273,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1},{"entityId":10,"creatorCardId":277,"playerToDieCardId":277,"stackEffectType":15,"killerId":273}]} 

 Player 1 17:16:28 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":273}],"result":null,"preventMethod":false,"methodScopeId":277,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 

 Player 1 17:16:28 $MOVE_CARD:  
{"moveIndex":12,"cardId":273,"placeID":298,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 17:16:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs"} 

 Player 2 17:16:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs"} 

 Player 2 17:16:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 is about to die"} 

 Player 2 17:16:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 is about to die"} 

 Player 2 17:16:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 is about to die"} 

 Player 2 17:16:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 is about to die"} 

 Player 2 17:16:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 is about to die"} 

 Player 2 17:16:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 is about to die"} 

 Player 2 17:16:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 is about to die"} 

 Player 2 17:16:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 is about to die"} 

 Player 2 17:16:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 is about to die"} 

 Player 2 17:16:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 is about to die"} 

 Player 2 17:16:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 is about to die"} 

 Player 2 17:16:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 is about to die"} 

 Player 2 17:16:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 is about to die"} 

 Player 2 17:16:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 is about to die"} 

 Player 2 17:16:29 $MOVE_CARD_END:  
{"moveIndex":12,"cardId":273,"flipIfFlipped":true,"playerId":1} 

 Player 1 17:16:29 $MOVE_CARD_TO_PILE:  
{"type":2,"cardId":273} 

 Player 1 17:16:29 $REMOVE_MONSTER:  
{"holderId":1,"monsterId":273} 

 Player 1 17:16:29 $NEXT_STACK_ID:  

 Player 1 17:16:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to die"} 

 Player 1 17:16:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to die \n4:Refill holder1 slot"} 

 Player 1 17:16:29 $ADD_TO_STACK:  
{"stackEffect":{"entityId":11,"creatorCardId":277,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 1 17:16:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to die \n4:Refill holder1 slot"} 

 Player 1 17:16:29 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":277,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 1 17:16:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":62,"_text":"Add RefillEmptySlot 11 "}} 

 Player 1 17:16:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:16:29 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 1 17:16:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to die \n4:Refill holder1 slot"} 

 Player 1 17:16:29 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":11,"creatorCardId":277,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 1 17:16:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":63,"_text":"Response Adding RefillEmptySlot 11"},"childOfId":62} 

 Player 1 17:16:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":64,"_text":"Wait For Response From Player 1 "},"childOfId":62} 

 Player 1 17:16:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:16:29 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 1 17:16:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":65,"_text":"Wait For Response From Player 2 "},"childOfId":62} 

 Player 1 17:16:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 17:16:29 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 17:16:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to die"} 

 Player 2 17:16:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to die"} 

 Player 2 17:16:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to die \n4:Refill holder1 slot"} 

 Player 2 17:16:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to die \n4:Refill holder1 slot"} 

 Player 2 17:16:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to die \n4:Refill holder1 slot"} 

 Player 2 17:16:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to die \n4:Refill holder1 slot"} 

 Player 2 17:16:29 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 17:16:29 $ACTION_MASSAGE_REMOVE:  
{"id":65} 

 Player 1 17:16:29 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 1 17:16:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":66,"_text":"Resolve RefillEmptySlot 11 "}} 

 Player 1 17:16:29 $DRAW_CARD:  
{"deckType":2} 

 Player 1 17:16:30 $FLIP_CARD:  
{"cardId":271} 

 Player 1 17:16:30 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":271} 

 Player 1 17:16:30 $NEW_MONSTER_ON_PLACE:  
{"cardId":271,"monsterPlaceId":1} 

 Player 1 17:16:30 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 1 17:16:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to die"} 

 Player 1 17:16:30 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":277,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 1 17:16:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":67,"_text":"Remove After Resolve RefillEmptySlot 11  "}} 

 Player 1 17:16:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to die"} 

 Player 1 17:16:30 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":11,"creatorCardId":277,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 1 17:16:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":68,"_text":"Response Remove After Resolve RefillEmptySlot 11"},"childOfId":67} 

 Player 1 17:16:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":69,"_text":"Wait For Response From Player 2 "},"childOfId":67} 

 Player 1 17:16:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 17:16:30 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 17:16:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to die \n4:Refill holder1 slot"} 

 Player 2 17:16:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to die \n4:Refill holder1 slot"} 

 Player 2 17:16:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to die \n4:Refill holder1 slot"} 

 Player 2 17:16:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to die \n4:Refill holder1 slot"} 

 Player 2 17:16:30 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 17:16:30 $ACTION_MASSAGE_REMOVE:  
{"id":69} 

 Player 1 17:16:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":70,"_text":"Wait For Response From Player 1 "},"childOfId":67} 

 Player 1 17:16:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:16:30 $ACTION_MASSAGE_REMOVE:  
{"id":70} 

 Player 1 17:16:30 $ACTION_MASSAGE_REMOVE:  
{"id":68} 

 Player 1 17:16:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":71,"_text":"Resolve PlayerDeath 10 "}} 

 Player 1 17:16:30 $NEXT_STACK_ID:  

 Player 1 17:16:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to die"} 

 Player 1 17:16:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:16:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to die \n4:Player 1 is about to pay death penalties"} 

 Player 1 17:16:30 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":12,"creatorCardId":277,"playerToPayCardId":277,"stackEffectType":16}} 

 Player 1 17:16:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to die \n4:Player 1 is about to pay death penalties"} 

 Player 1 17:16:30 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":277,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 1 17:16:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to die \n4:Player 1 is about to pay death penalties"} 

 Player 1 17:16:30 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":277,"playerToDieCardId":277,"stackEffectType":15,"killerId":273}} 

 Player 1 17:16:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to die \n4:Player 1 is about to pay death penalties"} 

 Player 1 17:16:30 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":277,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 1 17:16:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to die \n4:Player 1 is about to pay death penalties"} 

 Player 1 17:16:31 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":277,"hasLockingStackEffect":false,"itemToPlayCardId":273,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 17:16:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to die \n4:Player 1 is about to pay death penalties"} 

 Player 1 17:16:31 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":277,"playerToDieCardId":277,"stackEffectType":15,"killerId":273}} 

 Player 1 17:16:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to die \n4:Player 1 is about to pay death penalties"} 

 Player 1 17:16:31 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":12,"creatorCardId":277,"playerToPayCardId":277,"stackEffectType":16}} 

 Player 1 17:16:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to die \n4:Player 1 is about to pay death penalties"} 

 Player 1 17:16:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to die \n4:Player 1 is about to pay death penalties"} 

 Player 1 17:16:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to die \n4:Player 1 is about to pay death penalties"} 

 Player 1 17:16:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to die \n4:Player 1 is about to pay death penalties"} 

 Player 1 17:16:31 $REPLACE_STACK:  
{"currentStack":[{"entityId":8,"creatorCardId":277,"slotType":2,"slotToFillId":1,"stackEffectType":10},{"entityId":9,"creatorCardId":277,"hasLockingStackEffect":false,"itemToPlayCardId":273,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1},{"entityId":10,"creatorCardId":277,"playerToDieCardId":277,"stackEffectType":15,"killerId":273},{"entityId":12,"creatorCardId":277,"playerToPayCardId":277,"stackEffectType":16}]} 

 Player 1 17:16:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to die \n4:Player 1 is about to pay death penalties"} 

 Player 1 17:16:31 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":277,"playerToDieCardId":277,"stackEffectType":15,"killerId":273}} 

 Player 1 17:16:31 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 1 17:16:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to pay death penalties"} 

 Player 1 17:16:31 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":277,"playerToDieCardId":277,"stackEffectType":15,"killerId":273}} 

 Player 1 17:16:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":72,"_text":"Remove After Resolve PlayerDeath 10  "}} 

 Player 1 17:16:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to pay death penalties"} 

 Player 1 17:16:31 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":10,"creatorCardId":277,"playerToDieCardId":277,"stackEffectType":15,"killerId":273}} 

 Player 1 17:16:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":73,"_text":"Response Remove After Resolve PlayerDeath 10"},"childOfId":72} 

 Player 1 17:16:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":74,"_text":"Wait For Response From Player 1 "},"childOfId":72} 

 Player 1 17:16:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:16:31 $ACTION_MASSAGE_REMOVE:  
{"id":74} 

 Player 1 17:16:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":75,"_text":"Wait For Response From Player 2 "},"childOfId":72} 

 Player 1 17:16:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 17:16:31 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 17:16:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to die"} 

 Player 2 17:16:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to die"} 

 Player 2 17:16:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to pay death penalties"} 

 Player 2 17:16:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to pay death penalties"} 

 Player 2 17:16:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to pay death penalties"} 

 Player 2 17:16:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to pay death penalties"} 

 Player 2 17:16:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to pay death penalties"} 

 Player 2 17:16:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to pay death penalties"} 

 Player 2 17:16:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to pay death penalties"} 

 Player 2 17:16:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to pay death penalties"} 

 Player 2 17:16:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to pay death penalties"} 

 Player 2 17:16:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to pay death penalties"} 

 Player 2 17:16:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to pay death penalties"} 

 Player 2 17:16:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to pay death penalties"} 

 Player 2 17:16:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to pay death penalties"} 

 Player 2 17:16:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to pay death penalties"} 

 Player 2 17:16:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to pay death penalties"} 

 Player 2 17:16:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to pay death penalties"} 

 Player 2 17:16:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to pay death penalties"} 

 Player 2 17:16:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to pay death penalties"} 

 Player 2 17:16:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to pay death penalties"} 

 Player 2 17:16:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to pay death penalties"} 

 Player 2 17:16:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to die \n4:Player 1 is about to pay death penalties"} 

 Player 2 17:16:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to die \n4:Player 1 is about to pay death penalties"} 

 Player 2 17:16:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to die \n4:Player 1 is about to pay death penalties"} 

 Player 2 17:16:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to die \n4:Player 1 is about to pay death penalties"} 

 Player 2 17:16:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to die \n4:Player 1 is about to pay death penalties"} 

 Player 2 17:16:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to die \n4:Player 1 is about to pay death penalties"} 

 Player 2 17:16:32 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 17:16:32 $ACTION_MASSAGE_REMOVE:  
{"id":75} 

 Player 1 17:16:32 $ACTION_MASSAGE_REMOVE:  
{"id":73} 

 Player 1 17:16:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":76,"_text":"Resolve PlayerDeathPenalties 12 "}} 

 Player 1 17:16:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":77,"_text":"Player 1 pays Penalties"}} 

 Player 1 17:16:32 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 1 17:16:33 $ACTION_MASSAGE_REMOVE:  
{"id":72} 

 Player 1 17:16:39 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":39} 

 Player 1 17:16:39 $MOVE_CARD:  
{"moveIndex":13,"cardId":39,"placeID":296,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 17:16:39 $MOVE_CARD_END:  
{"moveIndex":13,"cardId":39,"flipIfFlipped":true,"playerId":1} 

 Player 1 17:16:39 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":39} 

 Player 1 17:16:46 $REMOVE_FROM_PASSIVE_MANAGER:  
{"cardId":160} 

 Player 1 17:16:46 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_LOSE_ITEM","args":[{"type":0,"number":160}],"result":null,"preventMethod":false,"methodScopeId":277,"scopeIsPlayer":true,"index":8,"originStackId":-1},"isAfterActivation":true,"index":8} 

 Player 1 17:16:46 $MOVE_CARD:  
{"moveIndex":14,"cardId":160,"placeID":298,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 17:16:46 $MOVE_CARD_END:  
{"moveIndex":14,"cardId":160,"flipIfFlipped":true,"playerId":1} 

 Player 1 17:16:46 $MOVE_CARD_TO_PILE:  
{"type":5,"cardId":160} 

 Player 1 17:16:46 $USE_ITEM:  
{"cardId":277} 

 Player 1 17:16:46 $USE_ITEM:  
{"cardId":278} 

 Player 1 17:16:46 $ACTION_MASSAGE_REMOVE:  
{"id":77} 

 Player 1 17:16:46 $PLAYER_DIED:  
{"playerId":1} 

 Player 1 17:16:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to pay death penalties"} 

 Player 1 17:16:46 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":12,"creatorCardId":277,"playerToPayCardId":277,"stackEffectType":16}} 

 Player 1 17:16:46 $ACTION_MASSAGE_REMOVE:  
{"id":76} 

 Player 1 17:16:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs"} 

 Player 1 17:16:46 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":12,"creatorCardId":277,"playerToPayCardId":277,"stackEffectType":16}} 

 Player 1 17:16:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":78,"_text":"Remove After Resolve PlayerDeathPenalties 12  "}} 

 Player 1 17:16:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs"} 

 Player 1 17:16:46 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":12,"creatorCardId":277,"playerToPayCardId":277,"stackEffectType":16}} 

 Player 1 17:16:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":79,"_text":"Response Remove After Resolve PlayerDeathPenalties 12"},"childOfId":78} 

 Player 1 17:16:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":80,"_text":"Wait For Response From Player 2 "},"childOfId":78} 

 Player 1 17:16:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 17:16:46 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 17:16:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to pay death penalties"} 

 Player 2 17:16:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to pay death penalties"} 

 Player 2 17:16:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to pay death penalties"} 

 Player 2 17:16:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to pay death penalties"} 

 Player 2 17:16:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to pay death penalties"} 

 Player 2 17:16:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs \n3:Player 1 is about to pay death penalties"} 

 Player 2 17:16:47 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 17:16:47 $ACTION_MASSAGE_REMOVE:  
{"id":80} 

 Player 1 17:16:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":81,"_text":"Wait For Response From Player 1 "},"childOfId":78} 

 Player 1 17:16:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:16:47 $ACTION_MASSAGE_REMOVE:  
{"id":81} 

 Player 1 17:16:47 $ACTION_MASSAGE_REMOVE:  
{"id":79} 

 Player 1 17:16:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":82,"_text":"Resolve ActivateItem 9 "}} 

 Player 1 17:16:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs"} 

 Player 1 17:16:47 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":277,"hasLockingStackEffect":false,"itemToPlayCardId":273,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 17:16:47 $ACTION_MASSAGE_REMOVE:  
{"id":61} 

 Player 1 17:16:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 1 17:16:47 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":277,"hasLockingStackEffect":false,"itemToPlayCardId":273,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 17:16:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":83,"_text":"Remove After Resolve ActivateItem 9  "}} 

 Player 1 17:16:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 1 17:16:47 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":9,"creatorCardId":277,"hasLockingStackEffect":false,"itemToPlayCardId":273,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 17:16:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":84,"_text":"Response Remove After Resolve ActivateItem 9"},"childOfId":83} 

 Player 1 17:16:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":85,"_text":"Wait For Response From Player 1 "},"childOfId":83} 

 Player 1 17:16:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:16:47 $ACTION_MASSAGE_REMOVE:  
{"id":85} 

 Player 1 17:16:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":86,"_text":"Wait For Response From Player 2 "},"childOfId":83} 

 Player 1 17:16:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 17:16:47 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 17:16:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs"} 

 Player 2 17:16:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs"} 

 Player 2 17:16:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs"} 

 Player 2 17:16:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs"} 

 Player 2 17:16:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs"} 

 Player 2 17:16:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Troll Bombs"} 

 Player 2 17:16:47 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 17:16:47 $ACTION_MASSAGE_REMOVE:  
{"id":86} 

 Player 1 17:16:47 $ACTION_MASSAGE_REMOVE:  
{"id":84} 

 Player 1 17:16:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":87,"_text":"Resolve RefillEmptySlot 8 "}} 

 Player 1 17:16:47 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 1 17:16:48 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:16:48 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":277,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 1 17:16:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":88,"_text":"Remove After Resolve RefillEmptySlot 8  "}} 

 Player 1 17:16:48 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:16:48 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":8,"creatorCardId":277,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 1 17:16:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":89,"_text":"Response Remove After Resolve RefillEmptySlot 8"},"childOfId":88} 

 Player 1 17:16:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":90,"_text":"Wait For Response From Player 2 "},"childOfId":88} 

 Player 1 17:16:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 17:16:48 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 17:16:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 2 17:16:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 2 17:16:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 2 17:16:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 2 17:16:48 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 17:16:48 $ACTION_MASSAGE_REMOVE:  
{"id":90} 

 Player 1 17:16:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":91,"_text":"Wait For Response From Player 1 "},"childOfId":88} 

 Player 1 17:16:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:16:48 $ACTION_MASSAGE_REMOVE:  
{"id":91} 

 Player 1 17:16:48 $ACTION_MASSAGE_REMOVE:  
{"id":89} 

 Player 1 17:16:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":92,"_text":"Stack Was Emptied "}} 

 Player 1 17:16:48 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:16:48 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 17:16:48 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 17:16:48 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 17:16:48 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 17:16:48 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 17:16:48 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 17:16:48 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 17:16:48 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 17:16:48 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 17:16:48 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 17:16:48 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 17:16:48 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 17:16:48 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 17:16:48 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 17:16:48 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 1 17:16:48 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 17:16:48 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 1 17:16:48 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 1 17:16:49 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 1 17:16:49 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 1 17:16:49 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 1 17:16:49 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 1 17:16:49 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 1 17:16:49 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 1 17:16:49 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 1 17:16:49 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 1 17:16:49 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 1 17:16:49 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 1 17:16:49 $ACTION_MASSAGE_REMOVE:  
{"id":61} 

 Player 1 17:16:49 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 1 17:16:49 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 1 17:16:49 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 1 17:16:49 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 1 17:16:49 $ACTION_MASSAGE_REMOVE:  
{"id":72} 

 Player 1 17:16:49 $ACTION_MASSAGE_REMOVE:  
{"id":76} 

 Player 1 17:16:49 $ACTION_MASSAGE_REMOVE:  
{"id":77} 

 Player 1 17:16:49 $ACTION_MASSAGE_REMOVE:  
{"id":78} 

 Player 1 17:16:49 $ACTION_MASSAGE_REMOVE:  
{"id":82} 

 Player 1 17:16:49 $ACTION_MASSAGE_REMOVE:  
{"id":83} 

 Player 1 17:16:49 $ACTION_MASSAGE_REMOVE:  
{"id":87} 

 Player 1 17:16:49 $ACTION_MASSAGE_REMOVE:  
{"id":88} 

 Player 1 17:16:49 $ACTION_MASSAGE_REMOVE:  
{"id":92} 

 Player 1 17:16:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:16:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:16:49 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 17:16:49 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 17:16:49 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 17:16:49 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 17:16:49 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 17:16:49 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 17:16:49 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 17:16:49 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 17:16:49 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 17:16:49 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 17:16:49 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 17:16:49 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 17:16:49 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 17:16:49 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 17:16:49 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 1 17:16:49 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 17:16:49 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 1 17:16:50 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 1 17:16:50 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 1 17:16:50 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 1 17:16:50 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 1 17:16:50 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 1 17:16:50 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 1 17:16:50 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 1 17:16:50 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 1 17:16:50 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 1 17:16:50 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 1 17:16:50 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 1 17:16:50 $ACTION_MASSAGE_REMOVE:  
{"id":61} 

 Player 1 17:16:50 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 1 17:16:50 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 1 17:16:50 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 1 17:16:50 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 1 17:16:50 $ACTION_MASSAGE_REMOVE:  
{"id":72} 

 Player 1 17:16:50 $ACTION_MASSAGE_REMOVE:  
{"id":76} 

 Player 1 17:16:50 $ACTION_MASSAGE_REMOVE:  
{"id":77} 

 Player 1 17:16:50 $ACTION_MASSAGE_REMOVE:  
{"id":78} 

 Player 1 17:16:50 $ACTION_MASSAGE_REMOVE:  
{"id":82} 

 Player 1 17:16:50 $ACTION_MASSAGE_REMOVE:  
{"id":83} 

 Player 1 17:16:50 $ACTION_MASSAGE_REMOVE:  
{"id":87} 

 Player 1 17:16:50 $ACTION_MASSAGE_REMOVE:  
{"id":88} 

 Player 1 17:16:50 $ACTION_MASSAGE_REMOVE:  
{"id":92} 

 Player 1 17:16:50 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 1 17:16:50 $END_TURN:  

 Player 1 17:16:50 $SET_TURN:  
{"playerId":2} 

 Player 1 17:16:50 $START_TURN:  
{"playerId":2} 

 Player 1 17:16:50 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 1 17:16:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":93,"_text":"Stack Was Emptied "}} 

 Player 1 17:16:50 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 17:16:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:16:50 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 17:16:50 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 17:16:50 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 17:16:50 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 17:16:50 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 17:16:51 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 17:16:51 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 17:16:51 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 17:16:51 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 17:16:51 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 17:16:51 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 17:16:51 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 17:16:51 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 17:16:51 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 17:16:51 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 1 17:16:51 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 17:16:51 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 1 17:16:51 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 1 17:16:51 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 1 17:16:51 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 1 17:16:51 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 1 17:16:51 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 1 17:16:51 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 1 17:16:51 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 1 17:16:51 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 1 17:16:51 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 1 17:16:51 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 1 17:16:51 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 1 17:16:51 $ACTION_MASSAGE_REMOVE:  
{"id":61} 

 Player 1 17:16:51 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 1 17:16:51 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 1 17:16:51 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 1 17:16:51 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 1 17:16:51 $ACTION_MASSAGE_REMOVE:  
{"id":72} 

 Player 1 17:16:51 $ACTION_MASSAGE_REMOVE:  
{"id":76} 

 Player 1 17:16:51 $ACTION_MASSAGE_REMOVE:  
{"id":77} 

 Player 1 17:16:51 $ACTION_MASSAGE_REMOVE:  
{"id":78} 

 Player 1 17:16:51 $ACTION_MASSAGE_REMOVE:  
{"id":82} 

 Player 1 17:16:51 $ACTION_MASSAGE_REMOVE:  
{"id":83} 

 Player 1 17:16:51 $ACTION_MASSAGE_REMOVE:  
{"id":87} 

 Player 1 17:16:51 $ACTION_MASSAGE_REMOVE:  
{"id":88} 

 Player 1 17:16:51 $ACTION_MASSAGE_REMOVE:  
{"id":92} 

 Player 1 17:16:51 $ACTION_MASSAGE_REMOVE:  
{"id":93} 

 Player 1 17:16:51 $TURN_PLAYER_DO_STACK_EFFECT:  
{"playerId":2} 

 Player 1 17:16:51 $ACTION_MASSAGE_REMOVE:  
{"id":78} 

 Player 1 17:16:51 $ACTION_MASSAGE_REMOVE:  
{"id":92} 

 Player 1 17:16:51 $ACTION_MASSAGE_REMOVE:  
{"id":93} 

 Player 1 17:16:52 $ACTION_MASSAGE_REMOVE:  
{"id":83} 

 Player 1 17:16:52 $ACTION_MASSAGE_REMOVE:  
{"id":88} 

 Player 2 17:16:52 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 17:16:52 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:16:52 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 17:16:52 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 17:16:52 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 17:16:52 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 17:16:52 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 17:16:52 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 17:16:52 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 17:16:52 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 17:16:52 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 17:16:52 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 17:16:52 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 17:16:52 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 17:16:52 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 17:16:52 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 17:16:52 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 2 17:16:52 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 17:16:52 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 2 17:16:52 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 17:16:52 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 2 17:16:52 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 17:16:52 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 2 17:16:52 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 2 17:16:52 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 2 17:16:52 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 2 17:16:52 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 2 17:16:52 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 2 17:16:52 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 2 17:16:52 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 2 17:16:52 $ACTION_MASSAGE_REMOVE:  
{"id":61} 

 Player 2 17:16:52 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 2 17:16:52 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 2 17:16:52 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 2 17:16:52 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 2 17:16:52 $ACTION_MASSAGE_REMOVE:  
{"id":72} 

 Player 2 17:16:52 $ACTION_MASSAGE_REMOVE:  
{"id":76} 

 Player 2 17:16:52 $ACTION_MASSAGE_REMOVE:  
{"id":77} 

 Player 2 17:16:52 $ACTION_MASSAGE_REMOVE:  
{"id":78} 

 Player 2 17:16:52 $ACTION_MASSAGE_REMOVE:  
{"id":82} 

 Player 2 17:16:53 $ACTION_MASSAGE_REMOVE:  
{"id":83} 

 Player 2 17:16:53 $ACTION_MASSAGE_REMOVE:  
{"id":87} 

 Player 2 17:16:53 $ACTION_MASSAGE_REMOVE:  
{"id":88} 

 Player 2 17:16:53 $ACTION_MASSAGE_REMOVE:  
{"id":92} 

 Player 2 17:16:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:16:53 $NEXT_STACK_ID:  

 Player 2 17:16:53 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:16:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 17:16:53 $ADD_TO_STACK:  
{"stackEffect":{"entityId":13,"creatorCardId":283,"turnPlayerCardId":283,"stackEffectType":13}} 

 Player 2 17:16:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 17:16:53 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":13,"creatorCardId":283,"turnPlayerCardId":283,"stackEffectType":13}} 

 Player 2 17:16:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":93,"_text":"Add StartTurnLoot 13 "}} 

 Player 2 17:16:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:16:53 $ACTION_MASSAGE_REMOVE:  
{"id":93} 

 Player 2 17:16:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 17:16:53 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":13,"creatorCardId":283,"turnPlayerCardId":283,"stackEffectType":13}} 

 Player 2 17:16:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":94,"_text":"Response Adding StartTurnLoot 13"},"childOfId":93} 

 Player 2 17:16:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":95,"_text":"Wait For Response From Player 2 "},"childOfId":93} 

 Player 2 17:16:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:16:53 $ACTION_MASSAGE_REMOVE:  
{"id":95} 

 Player 2 17:16:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":96,"_text":"Wait For Response From Player 1 "},"childOfId":93} 

 Player 2 17:16:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 17:16:53 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 17:16:53 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 17:16:53 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:16:53 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:16:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 17:16:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 17:16:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 17:16:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 17:16:53 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 17:16:53 $ACTION_MASSAGE_REMOVE:  
{"id":96} 

 Player 2 17:16:53 $ACTION_MASSAGE_REMOVE:  
{"id":94} 

 Player 2 17:16:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":98,"_text":"Resolve StartTurnLoot 13 "}} 

 Player 2 17:16:53 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:16:53 $MOVE_CARD:  
{"moveIndex":15,"cardId":15,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:16:54 $MOVE_CARD_END:  
{"moveIndex":15,"cardId":15,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:16:54 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":15} 

 Player 2 17:16:54 $FLIP_CARD:  
{"cardId":15} 

 Player 2 17:16:54 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":15} 

 Player 2 17:16:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 17:16:54 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":13,"creatorCardId":283,"turnPlayerCardId":283,"stackEffectType":13}} 

 Player 2 17:16:54 $ACTION_MASSAGE_REMOVE:  
{"id":98} 

 Player 2 17:16:54 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:16:54 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":13,"creatorCardId":283,"turnPlayerCardId":283,"stackEffectType":13}} 

 Player 2 17:16:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":99,"_text":"Remove After Resolve StartTurnLoot 13  "}} 

 Player 2 17:16:54 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:16:54 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":13,"creatorCardId":283,"turnPlayerCardId":283,"stackEffectType":13}} 

 Player 2 17:16:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":100,"_text":"Response Remove After Resolve StartTurnLoot 13"},"childOfId":99} 

 Player 2 17:16:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":101,"_text":"Wait For Response From Player 1 "},"childOfId":99} 

 Player 2 17:16:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 17:16:54 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 17:16:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 17:16:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 17:16:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 17:16:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 17:16:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 17:16:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 17:16:54 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 17:16:54 $ACTION_MASSAGE_REMOVE:  
{"id":101} 

 Player 2 17:16:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":102,"_text":"Wait For Response From Player 2 "},"childOfId":99} 

 Player 2 17:16:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:16:54 $ACTION_MASSAGE_REMOVE:  
{"id":102} 

 Player 2 17:16:54 $ACTION_MASSAGE_REMOVE:  
{"id":100} 

 Player 2 17:16:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":103,"_text":"Stack Was Emptied "}} 

 Player 2 17:16:54 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:16:55 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 17:16:55 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 17:16:55 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 17:16:55 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 17:16:55 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 17:16:55 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 17:16:55 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 17:16:55 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 17:16:55 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 17:16:55 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 17:16:55 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 17:16:55 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 17:16:55 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 17:16:55 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 17:16:55 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 2 17:16:55 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 17:16:55 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 2 17:16:55 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 17:16:55 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 2 17:16:55 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 17:16:55 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 2 17:16:55 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 2 17:16:55 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 2 17:16:55 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 2 17:16:55 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 2 17:16:55 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 2 17:16:55 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 2 17:16:55 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 2 17:16:55 $ACTION_MASSAGE_REMOVE:  
{"id":61} 

 Player 2 17:16:55 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 2 17:16:55 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 2 17:16:55 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 2 17:16:55 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 2 17:16:55 $ACTION_MASSAGE_REMOVE:  
{"id":72} 

 Player 2 17:16:55 $ACTION_MASSAGE_REMOVE:  
{"id":76} 

 Player 2 17:16:55 $ACTION_MASSAGE_REMOVE:  
{"id":77} 

 Player 2 17:16:55 $ACTION_MASSAGE_REMOVE:  
{"id":78} 

 Player 2 17:16:55 $ACTION_MASSAGE_REMOVE:  
{"id":82} 

 Player 2 17:16:55 $ACTION_MASSAGE_REMOVE:  
{"id":83} 

 Player 2 17:16:55 $ACTION_MASSAGE_REMOVE:  
{"id":87} 

 Player 2 17:16:55 $ACTION_MASSAGE_REMOVE:  
{"id":88} 

 Player 2 17:16:56 $ACTION_MASSAGE_REMOVE:  
{"id":92} 

 Player 2 17:16:56 $ACTION_MASSAGE_REMOVE:  
{"id":93} 

 Player 2 17:16:56 $ACTION_MASSAGE_REMOVE:  
{"id":93} 

 Player 2 17:16:56 $ACTION_MASSAGE_REMOVE:  
{"id":98} 

 Player 2 17:16:56 $ACTION_MASSAGE_REMOVE:  
{"id":99} 

 Player 2 17:16:56 $ACTION_MASSAGE_REMOVE:  
{"id":103} 

 Player 2 17:16:56 $ACTION_MASSAGE_REMOVE:  
{"id":103} 

 Player 2 17:16:57 $ACTION_MASSAGE_REMOVE:  
{"id":99} 

 Player 2 19:05:23 $MATCH: 