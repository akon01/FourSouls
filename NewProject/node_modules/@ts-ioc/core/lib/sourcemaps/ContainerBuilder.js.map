{"version":3,"sources":["ContainerBuilder.ts"],"names":[],"mappings":"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","file":"../ContainerBuilder.js","sourcesContent":["import { IContainer } from './IContainer';\r\nimport { Container } from './Container';\r\nimport { Type, Modules, LoadType, Express } from './types';\r\nimport { IContainerBuilder, ContainerBuilderToken } from './IContainerBuilder';\r\nimport {\r\n    IModuleLoader, ModuleLoaderToken, DefaultModuleLoader, IModuleInjectorChain,\r\n    ModuleInjectorChainToken, IocExtModuleValidateToken, ModuleInjector, IocExtModuleValidate,\r\n    ModuleInjectorChain, ModuelValidate, ModuleValidateToken, ModuleInjectorToken\r\n} from './injectors';\r\nimport { PromiseUtil } from './utils';\r\n\r\n/**\r\n * default container builder.\r\n *\r\n * @export\r\n * @class DefaultContainerBuilder\r\n * @implements {IContainerBuilder}\r\n */\r\nexport class ContainerBuilder implements IContainerBuilder {\r\n\r\n    private _loader: IModuleLoader;\r\n    filter: Express<Type<any>, boolean>;\r\n    constructor(loader?: IModuleLoader) {\r\n        this._loader = loader;\r\n    }\r\n\r\n    get loader(): IModuleLoader {\r\n        if (!this._loader) {\r\n            this._loader = new DefaultModuleLoader();\r\n        }\r\n\r\n        return this._loader;\r\n    }\r\n\r\n    create(): IContainer {\r\n        let container = new Container();\r\n        container.bindProvider(ContainerBuilderToken, () => this);\r\n        container.bindProvider(ModuleLoaderToken, () => this.loader);\r\n        return container;\r\n    }\r\n\r\n    /**\r\n     * build container.\r\n     *\r\n     * @param {...LoadType[]} [modules]\r\n     * @returns\r\n     * @memberof DefaultContainerBuilder\r\n     */\r\n    async build(...modules: LoadType[]) {\r\n        let container: IContainer = this.create();\r\n        if (modules.length) {\r\n            await this.loadModule(container, ...modules);\r\n        }\r\n        return container;\r\n    }\r\n\r\n    /**\r\n     * load modules for container.\r\n     *\r\n     * @param {IContainer} container\r\n     * @param {...LoadType[]} modules\r\n     * @returns {Promise<Type<any>[]>}\r\n     * @memberof DefaultContainerBuilder\r\n     */\r\n    async loadModule(container: IContainer, ...modules: LoadType[]): Promise<Type<any>[]> {\r\n        let regModules = await this.loader.loadTypes(modules);\r\n        let injTypes = [];\r\n        if (regModules && regModules.length) {\r\n            let injChain = this.getInjectorChain(container);\r\n            await PromiseUtil.step(regModules.map(typs => async () => {\r\n                let ityps = await injChain.inject(container, typs);\r\n                injTypes = injTypes.concat(ityps);\r\n            }));\r\n        }\r\n        return injTypes;\r\n    }\r\n\r\n\r\n    syncBuild(...modules: Modules[]): IContainer {\r\n        let container: IContainer = this.create();\r\n        if (modules.length) {\r\n            this.syncLoadModule(container, ...modules);\r\n        }\r\n        return container;\r\n    }\r\n\r\n    syncLoadModule(container: IContainer, ...modules: Modules[]): Type<any>[] {\r\n        let regModules = this.loader.getTypes(modules);\r\n        let injTypes: Type<any>[] = [];\r\n        if (regModules && regModules.length) {\r\n            let injChain = this.getInjectorChain(container);\r\n            regModules.forEach(typs => {\r\n                let ityps = injChain.syncInject(container, typs);\r\n                injTypes = injTypes.concat(ityps);\r\n            });\r\n        }\r\n        return injTypes;\r\n    }\r\n\r\n    getInjectorChain(container: IContainer): IModuleInjectorChain {\r\n        if (!container.has(ModuleInjectorChainToken)) {\r\n            container.register(ModuleInjector)\r\n                .bindProvider(ModuleValidateToken, new ModuelValidate())\r\n                .bindProvider(IocExtModuleValidateToken, new IocExtModuleValidate())\r\n                .bindProvider(ModuleInjectorChainToken,\r\n                    new ModuleInjectorChain()\r\n                        .next(container.resolve(ModuleInjectorToken, { provide: ModuleValidateToken, useValue: container.get(IocExtModuleValidateToken) }, { skipNext: true }))\r\n                        .next(container.resolve(ModuleInjectorToken))\r\n                );\r\n        }\r\n        return container.get(ModuleInjectorChainToken);\r\n    }\r\n\n                        static getClassAnnations():any  {\n                            return {\"name\":\"ContainerBuilder\",\"params\":{\"constructor\":[\"loader\"],\"create\":[],\"build\":[\"modules\"],\"loadModule\":[\"container\",\"modules\"],\"syncBuild\":[\"modules\"],\"syncLoadModule\":[\"container\",\"modules\"],\"getInjectorChain\":[\"container\"]}};\n                        }\n                   }\r\n"]}