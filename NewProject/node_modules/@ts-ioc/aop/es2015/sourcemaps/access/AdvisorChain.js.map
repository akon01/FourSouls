{"version":3,"sources":["access/AdvisorChain.ts"],"names":[],"mappings":";;;AAAA,uCAAqH;AACrH,8CAA0C;AAC1C,mDAAmE;AACnE,6DAA8D;AAC9D,6DAA0D;AAE1D;;;;;;GAMG;AAGH,IAAa,YAAY,GAAzB,MAAa,YAAY;IAOrB,YAAsB,SAAoB;QAApB,cAAS,GAAT,SAAS,CAAW;QACtC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;IACtB,CAAC;IAED;;;;;OAKG;IACH,IAAI,CAAC,MAA+B;QAChC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC9B,CAAC;IAED;;;;;OAKG;IACH,aAAa;QACT,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,sBAAe,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IACrE,CAAC;IAED;;;;OAIG;IACH,OAAO;QACH,IAAI,KAAK,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QACrE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,2CAAsB,EAAE,KAAK,CAAC;aAC5C,UAAU,CAAC,IAAI,CAAC,SAAS,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;IACrD,CAAC;IAGmB,MAAM,CAAC,iBAAiB;QACpB,OAAO,EAAC,MAAM,EAAC,cAAc,EAAC,QAAQ,EAAC,EAAC,aAAa,EAAC,CAAC,WAAW,CAAC,EAAC,MAAM,EAAC,CAAC,QAAQ,CAAC,EAAC,eAAe,EAAC,EAAE,EAAC,SAAS,EAAC,EAAE,EAAC,EAAC,CAAC;IAC5H,CAAC;CACL,CAAA;AA3ChB;IADC,aAAM,CAAC,qBAAc,CAAC;;+CACD;AAHb,YAAY;IAFxB,2BAAY,EAAE;IACd,iBAAU,CAAC,iCAAiB,CAAC;6CAQO,sBAAS;GAPjC,YAAY,CA8CL;AA9CP,oCAAY","file":"../../access/AdvisorChain.js","sourcesContent":["import { IContainer, Injectable, Inject, IRecognizer, Express, ContainerToken, RecognizerToken } from '@ts-ioc/core';\r\nimport { Joinpoint } from '../joinpoints';\r\nimport { IAdvisorChain, AdvisorChainToken } from './IAdvisorChain';\r\nimport { AdvisorProceedingToken } from './IAdvisorProceeding';\r\nimport { NonePointcut } from '../decorators/NonePointcut';\r\n\r\n/**\r\n * advisor chain.\r\n *\r\n * @export\r\n * @class AdvisorChain\r\n * @implements {IAdvisorChain}\r\n */\r\n@NonePointcut()\r\n@Injectable(AdvisorChainToken)\r\nexport class AdvisorChain implements IAdvisorChain {\r\n\r\n    @Inject(ContainerToken)\r\n    container: IContainer;\r\n\r\n    protected actions: Express<Joinpoint, any>[];\r\n\r\n    constructor(protected joinPoint: Joinpoint) {\r\n        this.actions = [];\r\n    }\r\n\r\n    /**\r\n     * register next action.\r\n     *\r\n     * @param {Express<Joinpoint, any>} action\r\n     * @memberof AdvisorChain\r\n     */\r\n    next(action: Express<Joinpoint, any>) {\r\n        this.actions.push(action);\r\n    }\r\n\r\n    /**\r\n     * get recognizer of this advisor.\r\n     *\r\n     * @returns {IRecognizer}\r\n     * @memberof AdvisorChain\r\n     */\r\n    getRecognizer(): IRecognizer {\r\n        return this.container.get(RecognizerToken, this.joinPoint.state);\r\n    }\r\n\r\n    /**\r\n     * process the advices.\r\n     *\r\n     * @memberof AdvisorChain\r\n     */\r\n    process(): void {\r\n        let alias = this.getRecognizer().recognize(this.joinPoint.returning);\r\n        this.container.get(AdvisorProceedingToken, alias)\r\n            .proceeding(this.joinPoint, ...this.actions);\r\n    }\r\n\r\n\n                        static getClassAnnations():any  {\n                            return {\"name\":\"AdvisorChain\",\"params\":{\"constructor\":[\"joinPoint\"],\"next\":[\"action\"],\"getRecognizer\":[],\"process\":[]}};\n                        }\n                   }\r\n"]}