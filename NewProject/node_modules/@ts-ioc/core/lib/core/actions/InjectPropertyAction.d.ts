import { BindPropertyTypeActionData } from './BindPropertyTypeAction';
import { IContainer } from '../../IContainer';
import { ActionComposite } from './ActionComposite';
import { ObjectMap } from '../../types';
/**
 * inject property action data.
 *
 * @export
 * @interface InjectPropertyActionData
 * @extends {BindPropertyTypeActionData}
 */
export interface InjectPropertyActionData extends BindPropertyTypeActionData {
    injecteds?: ObjectMap<boolean>;
}
/**
 * inject property value action, to inject property value for resolve instance.
 *
 * @export
 * @class SetPropAction
 * @extends {ActionComposite}
 */
export declare class InjectPropertyAction extends ActionComposite {
    constructor();
    protected working(container: IContainer, data: InjectPropertyActionData): void;
    static getClassAnnations(): any;
}
