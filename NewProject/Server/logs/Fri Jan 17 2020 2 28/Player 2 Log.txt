Start Log 
 Player 2 02:28:50 $MOVE_TO_TABLE:  
 Player 2 02:28:58 $FINISH_LOAD:  

 {"id":2,"turnPlayerId":2} 
 Player 2 02:28:58 $CHOOSE_FOR_EDEN:  

 {"playerId":1,"originPlayerId":2} 
 Player 2 02:29:04 $DECK_ARRAGMENT:  

 {"deckType":5,"arrangement":[196,187,156,212,163,191,192,166,164,200,176,181,159,174,179,219,170,210,186,158,145,183,177,148,165,188,182,193,198,161,206,147,162,175,160,215,213,146,205,216,199,197,220,178,218,185,149,167,168,180,155,189,203,157,204,154,201,172,150,153,151,169,202,190,214,171,209,208,184,195,207,211,152,194,173]} 
 Player 2 02:29:04 $FLIP_CARD:  

 {"cardId":217} 
 Player 2 02:29:05 $REGISTER_PASSIVE_ITEM:  

 {"cardId":217} 
 Player 2 02:29:05 $ASSIGN_CHAR_TO_PLAYER:  

 {"playerId":1,"charCardId":283,"itemCardId":217} 
 Player 2 02:29:05 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":290}],"result":true,"preventMethod":false,"methodScopeId":289,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 02:29:05 $ASSIGN_CHAR_TO_PLAYER:  

 {"playerId":2,"charCardId":289,"itemCardId":290} 
 Player 2 02:29:05 $DECK_ARRAGMENT:  

 {"deckType":1,"arrangement":[26,86,130,104,29,8,65,95,115,102,46,139,27,70,51,80,43,7,126,17,62,25,106,52,40,91,48,54,38,75,137,56,111,74,83,14,23,30,58,13,113,18,121,88,96,36,63,129,127,138,42,99,123,44,78,100,116,122,31,72,141,142,124,60,22,49,119,109,79,37,67,120,98,101,81,110,97,89,112,69,57,84,50,114,34,66,41,135,90,21,55,39,134,32,136,10,93,45,12,87,64,33,132,117,71,107,131,61,108,73,11,118,9,19,133,35,140,94,105,103,85,16,47,15,53,20,68,76,125,28,128,92,82,24,77,59]} 
 Player 2 02:29:05 $DECK_ARRAGMENT:  

 {"deckType":2,"arrangement":[235,232,239,243,267,241,248,253,254,269,249,258,246,265,262,272,252,260,266,257,244,233,236,223,229,245,268,275,237,247,259,271,263,270,240,274,225,276,228,226,230,256,273,242,255,238,227,224,250,264,234,251,231,261]} 
 Player 2 02:29:05 $DECK_ARRAGMENT:  

 {"deckType":5,"arrangement":[202,149,209,167,206,147,157,218,176,173,220,199,186,189,179,213,177,194,187,195,192,161,210,153,181,183,151,197,156,163,170,191,146,165,193,203,204,174,175,154,152,216,166,169,171,180,196,160,188,158,159,178,168,215,185,148,172,155,212,150,182,201,205,211,145,184,219,208,190,200,207,164,162,214,198]} 
 Player 2 02:29:05 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 02:29:05 $FLIP_CARD:  

 {"cardId":198} 
 Player 2 02:29:05 $ADD_STORE_CARD:  

 {"cardId":198} 
 Player 2 02:29:05 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 02:29:05 $FLIP_CARD:  

 {"cardId":214} 
 Player 2 02:29:05 $ADD_STORE_CARD:  

 {"cardId":214} 
 Player 2 02:29:05 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 02:29:05 $FLIP_CARD:  

 {"cardId":261} 
 Player 2 02:29:05 $REGISTER_PASSIVE_ITEM:  

 {"cardId":261} 
 Player 2 02:29:05 $ADD_MONSTER:  

 {"monsterPlaceId":1,"monsterId":261} 
 Player 2 02:29:05 $NEW_MONSTER_ON_PLACE:  

 {"cardId":261,"monsterPlaceId":1} 
 Player 2 02:29:05 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 02:29:05 $FLIP_CARD:  

 {"cardId":231} 
 Player 2 02:29:05 $ADD_MONSTER:  

 {"monsterPlaceId":2,"monsterId":231} 
 Player 2 02:29:05 $NEW_MONSTER_ON_PLACE:  

 {"cardId":231,"monsterPlaceId":2} 
 Player 2 02:29:05 $SET_MONEY:  

 {"playerId":1,"numOfCoins":3} 
 Player 2 02:29:05 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":283,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 2 02:29:05 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 02:29:05 $MOVE_CARD:  

 {"moveIndex":1,"cardId":59,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 02:29:06 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":59} 
 Player 2 02:29:06 $FLIP_CARD:  

 {"cardId":59} 
 Player 2 02:29:06 $FLIP_CARD:  

 {"cardId":59} 
 Player 2 02:29:06 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":59} 
 Player 2 02:29:06 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 02:29:06 $MOVE_CARD:  

 {"moveIndex":2,"cardId":77,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 02:29:06 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":77} 
 Player 2 02:29:06 $FLIP_CARD:  

 {"cardId":77} 
 Player 2 02:29:06 $FLIP_CARD:  

 {"cardId":77} 
 Player 2 02:29:06 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":77} 
 Player 2 02:29:06 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 02:29:06 $MOVE_CARD:  

 {"moveIndex":3,"cardId":24,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 02:29:07 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":24} 
 Player 2 02:29:07 $FLIP_CARD:  

 {"cardId":24} 
 Player 2 02:29:07 $FLIP_CARD:  

 {"cardId":24} 
 Player 2 02:29:07 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":24} 
 Player 2 02:29:07 $SET_MONEY:  

 {"playerId":2,"numOfCoins":3} 
 Player 2 02:29:07 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":289,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Player 2 02:29:07 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 02:29:07 $MOVE_CARD:  

 {"moveIndex":4,"cardId":82,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 02:29:07 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":82} 
 Player 2 02:29:07 $FLIP_CARD:  

 {"cardId":82} 
 Player 2 02:29:07 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":82} 
 Player 2 02:29:07 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 02:29:07 $MOVE_CARD:  

 {"moveIndex":5,"cardId":92,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 02:29:08 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":92} 
 Player 2 02:29:08 $FLIP_CARD:  

 {"cardId":92} 
 Player 2 02:29:08 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":92} 
 Player 2 02:29:08 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 02:29:08 $MOVE_CARD:  

 {"moveIndex":6,"cardId":128,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 02:29:08 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":128} 
 Player 2 02:29:08 $FLIP_CARD:  

 {"cardId":128} 
 Player 2 02:29:08 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":128} 
 Player 2 02:29:08 $GAME_HAS_STARTED:  
 Player 2 02:29:08 $SET_TURN:  

 {"playerId":1} 
 Player 2 02:29:08 $START_TURN:  

 {"playerId":1} 
 Player 2 02:29:08 $UPDATE_ACTIONS:  
 Player 2 02:29:09 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:29:09 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:29:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 02:29:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 02:29:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 02:29:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 02:29:09 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 02:29:09 $MOVE_CARD_END:  

 {"moveIndex":7,"cardId":28,"flipIfFlipped":false,"playerId":1} 
 Player 2 02:29:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 02:29:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 02:29:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 02:29:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 02:29:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 02:29:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 02:29:10 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 02:29:25 $MOVE_CARD:  

 {"moveIndex":8,"cardId":161,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 
 Player 2 02:29:25 $REGISTER_PASSIVE_ITEM:  

 {"cardId":161} 
 Player 2 02:29:25 $MOVE_CARD:  

 {"moveIndex":9,"cardId":161,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 
 Player 2 02:29:25 $ADD_AN_ITEM:  

 {"playerId":2,"cardId":161,"isReward":true} 
 Player 2 02:29:25 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":161}],"result":true,"preventMethod":false,"methodScopeId":289,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 
 Player 2 02:29:33 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:29:33 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:29:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Cod Worm"} 
 Player 2 02:29:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Cod Worm"} 
 Player 2 02:29:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Cod Worm"} 
 Player 2 02:29:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Cod Worm"} 
 Player 2 02:29:33 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 02:29:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Cod Worm"} 
 Player 2 02:29:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Cod Worm"} 
 Player 2 02:29:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Cod Worm"} 
 Player 2 02:29:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Cod Worm"} 
 Player 2 02:29:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Cod Worm"} 
 Player 2 02:29:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Cod Worm"} 
 Player 2 02:29:34 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 02:29:35 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:29:35 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:29:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster>"} 
 Player 2 02:29:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster>"} 
 Player 2 02:29:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster>"} 
 Player 2 02:29:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster>"} 
 Player 2 02:29:37 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 02:29:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster>"} 
 Player 2 02:29:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster>"} 
 Player 2 02:29:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:29:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:29:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:29:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:29:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:29:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:29:38 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[283],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":289,"effectCardPlayer":289},"entityId":4,"creatorCardId":289,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":161,"effectToDo":{"effectName":"LookAtPlayerHand","cardEffectNum":0,"cardPlayerId":2,"cardId":161,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 02:29:38 $END_PUT_ON_STACK:  

 {"playerId":1} 
 Player 2 02:29:38 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 02:29:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:29:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:29:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:29:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:29:38 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":161,"particleType":6} 
 Player 2 02:29:40 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":161,"particleType":6} 
 Player 2 02:29:46 $PLAYER_LOSE_LOOT:  

 {"playerId":1,"cardId":77} 
 Player 2 02:29:46 $MOVE_CARD:  

 {"moveIndex":10,"cardId":77,"placeID":2,"flipIfFlipped":false,"playerId":2,"placeType":"Hand"} 
 Player 2 02:29:46 $FLIP_CARD:  

 {"cardId":77} 
 Player 2 02:29:46 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":77} 
 Player 2 02:29:46 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":{"type":2,"number":3}},{"type":2,"number":{"type":2,"number":2}},{"type":2,"number":{"type":2,"number":5}}],"result":null,"preventMethod":false,"methodScopeId":283,"scopeIsPlayer":false,"index":1},"isAfterActivation":false,"index":1} 
 Player 2 02:29:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:29:46 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[283],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":289,"effectCardPlayer":289},"entityId":4,"creatorCardId":289,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":161,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 02:29:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:29:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:29:47 $FINISH_DO_STACK_EFFECT:  

 {"playerId":1,"newStack":[{"entityId":3,"creatorCardId":283,"numberRolled":5,"rollingPlayerCardId":283,"stackEffectType":2,"attackedMonsterCardId":231},{"effectCollectedData":{"effectTargets":[283],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":289,"effectCardPlayer":289},"entityId":4,"creatorCardId":289,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":161,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}]} 
 Player 2 02:29:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:29:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:29:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:29:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:29:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:29:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:29:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:29:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:29:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:29:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:29:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:29:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:29:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:29:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:29:48 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 02:29:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster>"} 
 Player 2 02:29:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster>"} 
 Player 2 02:29:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Eden combat damage to Cod Worm"} 
 Player 2 02:29:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Eden combat damage to Cod Worm"} 
 Player 2 02:29:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Eden combat damage to Cod Worm"} 
 Player 2 02:29:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Eden combat damage to Cod Worm"} 
 Player 2 02:29:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Eden combat damage to Cod Worm"} 
 Player 2 02:29:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Eden combat damage to Cod Worm"} 
 Player 2 02:29:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Eden combat damage to Cod Worm"} 
 Player 2 02:29:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Eden combat damage to Cod Worm"} 
 Player 2 02:29:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Eden combat damage to Cod Worm"} 
 Player 2 02:29:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Eden combat damage to Cod Worm"} 
 Player 2 02:29:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Eden combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster>"} 
 Player 2 02:29:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Eden combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster>"} 
 Player 2 02:29:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Eden combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster>"} 
 Player 2 02:29:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Eden combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster>"} 
 Player 2 02:29:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Eden combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster>"} 
 Player 2 02:29:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Eden combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster>"} 
 Player 2 02:29:49 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 02:29:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Eden combat damage to Cod Worm"} 
 Player 2 02:29:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Eden combat damage to Cod Worm"} 
 Player 2 02:29:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Eden combat damage to Cod Worm"} 
 Player 2 02:29:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Eden combat damage to Cod Worm"} 
 Player 2 02:29:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Eden combat damage to Cod Worm"} 
 Player 2 02:29:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Eden combat damage to Cod Worm"} 
 Player 2 02:29:50 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 02:30:42 $MATCH: 