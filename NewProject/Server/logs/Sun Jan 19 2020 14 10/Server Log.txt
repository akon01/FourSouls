Start Log 

 Player 1 14:10:08 $MATCH:  

 Player 1 14:10:09 $START_GAME:  

 Player 1 14:10:09 $MOVE_TO_TABLE:  

 Player 2 14:10:09 $MOVE_TO_TABLE:  

 Player 2 14:10:17 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 1 14:10:17 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 14:10:17 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":284,"itemCardId":285} 

 Player 2 14:10:17 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":295}],"result":true,"preventMethod":false,"methodScopeId":294,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 14:10:17 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":294,"itemCardId":295} 

 Player 2 14:10:17 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[130,109,98,132,135,133,24,49,90,25,44,15,80,92,11,28,138,83,61,81,29,21,76,139,18,71,131,46,65,74,125,10,52,51,63,43,126,41,137,31,122,27,89,91,45,47,82,79,100,72,123,53,16,69,116,60,35,127,115,141,93,32,134,99,42,95,108,59,13,77,17,119,103,97,57,19,113,67,114,110,23,12,68,142,36,9,120,96,26,105,88,20,56,78,101,106,75,84,40,7,86,55,37,85,50,8,87,111,58,73,140,112,54,62,33,102,34,107,22,128,38,129,30,104,124,64,48,70,14,136,39,66,121,118,94,117]} 

 Player 2 14:10:18 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[253,244,230,262,234,248,265,280,275,242,233,245,267,255,266,236,281,250,269,237,252,271,228,261,278,251,272,240,246,256,243,249,264,277,254,247,260,241,273,232,238,276,231,274,259,279,270,239,263,258,235,268,229,257]} 

 Player 2 14:10:18 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[174,220,187,213,196,211,160,162,204,210,172,173,149,216,183,206,158,164,167,192,154,146,197,201,215,148,212,175,188,180,198,203,186,177,225,176,153,182,191,170,157,194,165,152,159,217,181,193,200,219,207,171,155,222,156,205,179,150,169,221,224,184,166,189,168,218,190,214,202,161,178,145,209,163,195,185,223,147,208,199,151]} 

 Player 2 14:10:18 $DRAW_CARD:  
{"deckType":5} 

 Player 2 14:10:18 $FLIP_CARD:  
{"cardId":151} 

 Player 2 14:10:18 $ADD_STORE_CARD:  
{"cardId":151} 

 Player 2 14:10:18 $DRAW_CARD:  
{"deckType":5} 

 Player 2 14:10:18 $FLIP_CARD:  
{"cardId":199} 

 Player 2 14:10:18 $ADD_STORE_CARD:  
{"cardId":199} 

 Player 2 14:10:18 $DRAW_CARD:  
{"deckType":2} 

 Player 2 14:10:18 $FLIP_CARD:  
{"cardId":257} 

 Player 2 14:10:18 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":257} 

 Player 2 14:10:18 $NEW_MONSTER_ON_PLACE:  
{"cardId":257,"monsterPlaceId":1} 

 Player 2 14:10:18 $DRAW_CARD:  
{"deckType":2} 

 Player 2 14:10:18 $FLIP_CARD:  
{"cardId":229} 

 Player 2 14:10:18 $REGISTER_PASSIVE_ITEM:  
{"cardId":229} 

 Player 2 14:10:18 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":229} 

 Player 2 14:10:18 $NEW_MONSTER_ON_PLACE:  
{"cardId":229,"monsterPlaceId":2} 

 Player 2 14:10:18 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 14:10:18 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":284,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 14:10:18 $DRAW_CARD:  
{"deckType":1} 

 Player 2 14:10:18 $MOVE_CARD:  
{"moveIndex":1,"cardId":117,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 14:10:18 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":285}],"result":true,"preventMethod":false,"methodScopeId":284,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 14:10:19 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":117,"flipIfFlipped":false,"playerId":2} 

 Player 2 14:10:19 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":117} 

 Player 2 14:10:19 $FLIP_CARD:  
{"cardId":117} 

 Player 2 14:10:19 $FLIP_CARD:  
{"cardId":117} 

 Player 2 14:10:19 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":117} 

 Player 2 14:10:19 $DRAW_CARD:  
{"deckType":1} 

 Player 2 14:10:19 $MOVE_CARD:  
{"moveIndex":2,"cardId":94,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 14:10:19 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":94,"flipIfFlipped":false,"playerId":2} 

 Player 2 14:10:19 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":94} 

 Player 2 14:10:19 $FLIP_CARD:  
{"cardId":94} 

 Player 2 14:10:19 $FLIP_CARD:  
{"cardId":94} 

 Player 2 14:10:19 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":94} 

 Player 2 14:10:19 $DRAW_CARD:  
{"deckType":1} 

 Player 2 14:10:19 $MOVE_CARD:  
{"moveIndex":3,"cardId":118,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 14:10:20 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":118,"flipIfFlipped":false,"playerId":2} 

 Player 2 14:10:20 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":118} 

 Player 2 14:10:20 $FLIP_CARD:  
{"cardId":118} 

 Player 2 14:10:20 $FLIP_CARD:  
{"cardId":118} 

 Player 2 14:10:20 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":118} 

 Player 2 14:10:20 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 14:10:20 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":294,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 14:10:20 $DRAW_CARD:  
{"deckType":1} 

 Player 2 14:10:20 $MOVE_CARD:  
{"moveIndex":4,"cardId":121,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 14:10:20 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":121,"flipIfFlipped":false,"playerId":2} 

 Player 2 14:10:20 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":121} 

 Player 2 14:10:20 $FLIP_CARD:  
{"cardId":121} 

 Player 2 14:10:20 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":121} 

 Player 2 14:10:20 $DRAW_CARD:  
{"deckType":1} 

 Player 2 14:10:20 $MOVE_CARD:  
{"moveIndex":5,"cardId":66,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 14:10:21 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":66,"flipIfFlipped":false,"playerId":2} 

 Player 2 14:10:21 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":66} 

 Player 2 14:10:21 $FLIP_CARD:  
{"cardId":66} 

 Player 2 14:10:21 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":66} 

 Player 2 14:10:21 $DRAW_CARD:  
{"deckType":1} 

 Player 2 14:10:21 $MOVE_CARD:  
{"moveIndex":6,"cardId":39,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 14:10:21 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":39,"flipIfFlipped":false,"playerId":2} 

 Player 2 14:10:21 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":39} 

 Player 2 14:10:21 $FLIP_CARD:  
{"cardId":39} 

 Player 2 14:10:21 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":39} 

 Player 2 14:10:21 $GAME_HAS_STARTED:  

 Player 2 14:10:21 $SET_TURN:  
{"playerId":1} 

 Player 2 14:10:21 $START_TURN:  
{"playerId":1} 

 Player 2 14:10:21 $UPDATE_ACTIONS:  

 Player 1 14:10:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 14:10:22 $NEXT_STACK_ID:  

 Player 1 14:10:22 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 14:10:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 14:10:22 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":284,"turnPlayerCardId":284,"stackEffectType":13}} 

 Player 1 14:10:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 14:10:22 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":284,"turnPlayerCardId":284,"stackEffectType":13}} 

 Player 1 14:10:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 1 14:10:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 14:10:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 14:10:22 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":284,"turnPlayerCardId":284,"stackEffectType":13}} 

 Player 1 14:10:22 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 14:10:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 1 14:10:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 1 14:10:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 14:10:22 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 14:10:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 1 14:10:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 14:10:22 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 14:10:22 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 14:10:22 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 14:10:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 14:10:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 14:10:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 14:10:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 14:10:22 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 14:10:22 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 14:10:22 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 14:10:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 1 14:10:22 $DRAW_CARD:  
{"deckType":1} 

 Player 1 14:10:22 $MOVE_CARD:  
{"moveIndex":7,"cardId":136,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 14:10:23 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":136,"flipIfFlipped":false,"playerId":1} 

 Player 1 14:10:23 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":136} 

 Player 1 14:10:23 $FLIP_CARD:  
{"cardId":136} 

 Player 1 14:10:23 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":136} 

 Player 1 14:10:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 14:10:23 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":284,"turnPlayerCardId":284,"stackEffectType":13}} 

 Player 1 14:10:23 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 14:10:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 14:10:23 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":284,"turnPlayerCardId":284,"stackEffectType":13}} 

 Player 1 14:10:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 1 14:10:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 14:10:23 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":284,"turnPlayerCardId":284,"stackEffectType":13}} 

 Player 1 14:10:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 1 14:10:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 1 14:10:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 14:10:23 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 14:10:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 14:10:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 14:10:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 14:10:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 14:10:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 14:10:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 14:10:23 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 14:10:23 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 1 14:10:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 1 14:10:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 14:10:23 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 1 14:10:23 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 1 14:10:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 1 14:10:24 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 14:10:24 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 14:10:24 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 14:10:24 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 14:10:24 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 14:10:24 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 14:10:24 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 14:10:24 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 14:10:25 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 14:10:26 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 14:10:37 $SHOW_DECISION:  
{"startCardId":284,"endCardId":229} 

 Player 1 14:10:40 $NEXT_STACK_ID:  

 Player 1 14:10:40 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 14:10:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Begotten"} 

 Player 1 14:10:40 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":284,"attackingPlayerCardId":284,"idOfCardBeingAttacked":229,"stackEffectType":4}} 

 Player 1 14:10:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Begotten"} 

 Player 1 14:10:40 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":284,"attackingPlayerCardId":284,"idOfCardBeingAttacked":229,"stackEffectType":4}} 

 Player 1 14:10:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add DeclareAttack 2 "}} 

 Player 1 14:10:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 14:10:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Begotten"} 

 Player 1 14:10:40 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":284,"attackingPlayerCardId":284,"idOfCardBeingAttacked":229,"stackEffectType":4}} 

 Player 1 14:10:40 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 14:10:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding DeclareAttack 2"},"childOfId":10} 

 Player 1 14:10:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 1 14:10:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 14:10:40 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 1 14:10:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 1 14:10:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 14:10:40 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 14:10:40 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 14:10:40 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 14:10:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Begotten"} 

 Player 2 14:10:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Begotten"} 

 Player 2 14:10:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Begotten"} 

 Player 2 14:10:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Begotten"} 

 Player 2 14:10:40 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 14:10:40 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 1 14:10:40 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 1 14:10:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve DeclareAttack 2 "}} 

 Player 1 14:10:41 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":229,"particleType":5} 

 Player 1 14:10:41 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":284,"scopeIsPlayer":true,"index":2,"originStackId":2},"isAfterActivation":true,"index":2} 

 Player 1 14:10:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Begotten"} 

 Player 1 14:10:41 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":284,"attackingPlayerCardId":284,"idOfCardBeingAttacked":229,"stackEffectType":4}} 

 Player 1 14:10:41 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 14:10:41 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 14:10:41 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":284,"attackingPlayerCardId":284,"idOfCardBeingAttacked":229,"stackEffectType":4}} 

 Player 1 14:10:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve DeclareAttack 2  "}} 

 Player 1 14:10:41 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 14:10:41 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":284,"attackingPlayerCardId":284,"idOfCardBeingAttacked":229,"stackEffectType":4}} 

 Player 1 14:10:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve DeclareAttack 2"},"childOfId":15} 

 Player 1 14:10:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 1 14:10:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 14:10:41 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 14:10:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Begotten"} 

 Player 2 14:10:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Begotten"} 

 Player 2 14:10:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Begotten"} 

 Player 2 14:10:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Begotten"} 

 Player 2 14:10:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Begotten"} 

 Player 2 14:10:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Begotten"} 

 Player 2 14:10:41 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 14:10:41 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 1 14:10:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 1 14:10:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 14:10:41 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 1 14:10:41 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 1 14:10:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 1 14:10:41 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 14:10:41 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 14:10:41 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 14:10:42 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 14:10:42 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 14:10:42 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 14:10:42 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 14:10:42 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 14:10:42 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 14:10:42 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 14:10:42 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 14:10:42 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 14:10:42 $NEXT_STACK_ID:  

 Player 1 14:10:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 14:10:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Begotten<Monster>"} 

 Player 1 14:10:42 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":284,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":229}} 

 Player 1 14:10:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Begotten<Monster>"} 

 Player 1 14:10:42 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":284,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":229}} 

 Player 1 14:10:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add AttackRoll 3 "}} 

 Player 1 14:10:42 $ROLL_DICE:  
{"playerId":1} 

 Player 2 14:10:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 14:10:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 14:10:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Begotten<Monster>"} 

 Player 2 14:10:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Begotten<Monster>"} 

 Player 1 14:10:43 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 14:10:43 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 14:10:44 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":1} 

 Player 1 14:10:44 $UPDATE_STACK_VIS:  
{"stackId":3,"text":"player rolled 1 vs Begotten<Monster>"} 

 Player 1 14:10:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 1 vs Begotten<Monster>"} 

 Player 1 14:10:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 14:10:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 1 vs Begotten<Monster>"} 

 Player 1 14:10:44 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":284,"numberRolled":1,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":229}} 

 Player 1 14:10:44 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 14:10:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding AttackRoll 3"},"childOfId":20} 

 Player 1 14:10:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 1 14:10:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 14:10:44 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 1 14:10:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 1 14:10:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 14:10:44 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 14:10:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Begotten<Monster>"} 

 Player 2 14:10:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Begotten<Monster>"} 

 Player 2 14:10:44 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 14:10:45 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 1 14:10:45 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 1 14:10:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve AttackRoll 3 "}} 

 Player 1 14:10:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Added 0 to original roll"}} 

 Player 1 14:10:45 $NEXT_STACK_ID:  

 Player 1 14:10:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 1 vs Begotten<Monster>"} 

 Player 1 14:10:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 14:10:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby \n2:Player 1 rolled 1 vs Begotten<Monster>"} 

 Player 1 14:10:45 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":284,"entityToDoDamageCardId":229,"entityToTakeDamageCardId":284,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 14:10:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby \n2:Player 1 rolled 1 vs Begotten<Monster>"} 

 Player 1 14:10:45 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":284,"numberRolled":1,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":229}} 

 Player 1 14:10:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby \n2:Player 1 rolled 1 vs Begotten<Monster>"} 

 Player 1 14:10:45 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":284,"entityToDoDamageCardId":229,"entityToTakeDamageCardId":284,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 14:10:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby \n2:Player 1 rolled 1 vs Begotten<Monster>"} 

 Player 1 14:10:45 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":284,"numberRolled":1,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":229}} 

 Player 1 14:10:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby \n2:Player 1 rolled 1 vs Begotten<Monster>"} 

 Player 1 14:10:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby \n2:Player 1 rolled 1 vs Begotten<Monster>"} 

 Player 1 14:10:45 $REPLACE_STACK:  
{"currentStack":[{"entityId":4,"creatorCardId":284,"entityToDoDamageCardId":229,"entityToTakeDamageCardId":284,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":3,"creatorCardId":284,"numberRolled":1,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":229}]} 

 Player 1 14:10:45 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":284,"scopeIsPlayer":true,"index":3,"originStackId":3},"isAfterActivation":true,"index":3} 

 Player 1 14:10:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby \n2:Player 1 rolled 1 vs Begotten<Monster>"} 

 Player 1 14:10:45 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":284,"numberRolled":1,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":229}} 

 Player 1 14:10:45 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 14:10:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby"} 

 Player 1 14:10:45 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":284,"numberRolled":1,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":229}} 

 Player 1 14:10:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Remove After Resolve AttackRoll 3  "}} 

 Player 1 14:10:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby"} 

 Player 1 14:10:45 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":284,"numberRolled":1,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":229}} 

 Player 1 14:10:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Response Remove After Resolve AttackRoll 3"},"childOfId":26} 

 Player 1 14:10:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 1 "},"childOfId":26} 

 Player 1 14:10:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 14:10:45 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 1 14:10:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Wait For Response From Player 2 "},"childOfId":26} 

 Player 1 14:10:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 14:10:46 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 14:10:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Begotten<Monster>"} 

 Player 2 14:10:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Begotten<Monster>"} 

 Player 2 14:10:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby"} 

 Player 2 14:10:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby"} 

 Player 2 14:10:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby"} 

 Player 2 14:10:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby"} 

 Player 2 14:10:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby"} 

 Player 2 14:10:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby"} 

 Player 2 14:10:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby"} 

 Player 2 14:10:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby"} 

 Player 2 14:10:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby"} 

 Player 2 14:10:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby"} 

 Player 2 14:10:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby \n2:Player 1 is rolling against Begotten<Monster>"} 

 Player 2 14:10:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby \n2:Player 1 is rolling against Begotten<Monster>"} 

 Player 2 14:10:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby \n2:Player 1 is rolling against Begotten<Monster>"} 

 Player 2 14:10:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby \n2:Player 1 is rolling against Begotten<Monster>"} 

 Player 2 14:10:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby \n2:Player 1 is rolling against Begotten<Monster>"} 

 Player 2 14:10:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby \n2:Player 1 is rolling against Begotten<Monster>"} 

 Player 2 14:10:46 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 14:10:46 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 1 14:10:46 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 1 14:10:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Resolve CombatDamage 4 "}} 

 Player 1 14:10:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten 1 combat damage to Blue Baby"} 

 Player 1 14:10:46 $UPDATE_STACK_VIS:  
{"stackId":4,"text":"Begotten will deal 1 combat damage to Blue Baby"} 

 Player 1 14:10:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten 1 combat damage to Blue Baby"} 

 Player 1 14:10:46 $PLAYER_GET_HIT:  
{"playerId":1,"damage":1,"damageDealerId":229} 

 Player 1 14:10:46 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":229}],"result":null,"preventMethod":false,"methodScopeId":284,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 1 14:10:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten 1 combat damage to Blue Baby"} 

 Player 1 14:10:46 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":284,"entityToDoDamageCardId":229,"entityToTakeDamageCardId":284,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 14:10:47 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 14:10:47 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 14:10:47 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":284,"entityToDoDamageCardId":229,"entityToTakeDamageCardId":284,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 14:10:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Remove After Resolve CombatDamage 4  "}} 

 Player 1 14:10:47 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 14:10:47 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":284,"entityToDoDamageCardId":229,"entityToTakeDamageCardId":284,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 14:10:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Response Remove After Resolve CombatDamage 4"},"childOfId":31} 

 Player 1 14:10:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 2 "},"childOfId":31} 

 Player 1 14:10:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 14:10:47 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 14:10:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby"} 

 Player 2 14:10:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby"} 

 Player 2 14:10:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby"} 

 Player 2 14:10:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby"} 

 Player 2 14:10:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby"} 

 Player 2 14:10:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby"} 

 Player 2 14:10:47 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 14:10:47 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 1 14:10:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Wait For Response From Player 1 "},"childOfId":31} 

 Player 1 14:10:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 14:10:47 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 1 14:10:47 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 1 14:10:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Stack Was Emptied "}} 

 Player 1 14:10:47 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 14:10:47 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 14:10:47 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 14:10:47 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 14:10:47 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 14:10:47 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 14:10:47 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 14:10:47 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 14:10:47 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 14:10:48 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 14:10:48 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 14:10:48 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 14:10:48 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 14:10:48 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 14:10:48 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 14:10:48 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 1 14:10:48 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 14:10:48 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 1 14:10:48 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 1 14:10:48 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 14:10:48 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 1 14:10:49 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 1 14:10:49 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 2 16:18:10 $MATCH: 