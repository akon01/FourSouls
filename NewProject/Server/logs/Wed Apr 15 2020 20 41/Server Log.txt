Start Log 

 Player 1 20:41:57 $MATCH:  

 Player 1 20:41:58 $START_GAME:  

 Player 2 20:41:58 $MOVE_TO_TABLE:  

 Player 1 20:41:58 $MOVE_TO_TABLE:  

 Player 2 20:42:07 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 1 20:42:07 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 20:42:07 $SET_CHAR:  
{"originPlayerId":2,"playerId":1,"charCardId":313,"itemCardId":314} 

 Player 1 20:42:07 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":313,"itemCardId":314} 

 Player 1 20:42:07 $SET_CHAR_END:  
{"playerId":2} 

 Player 2 20:42:07 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":323,"itemCardId":324} 

 Player 2 20:42:07 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[49,21,103,42,35,121,11,59,41,9,94,13,126,99,112,46,5,47,86,39,58,100,48,53,56,83,90,55,36,85,24,124,75,136,138,135,61,23,57,106,129,113,63,98,139,117,69,52,18,76,96,19,77,111,123,40,72,109,70,119,15,116,110,134,29,88,44,87,84,31,79,68,45,91,71,43,105,115,51,65,27,78,34,120,101,122,133,60,114,7,25,22,33,131,6,54,118,89,137,30,127,8,102,32,28,67,50,10,73,14,104,80,17,12,95,66,107,37,108,26,128,4,20,62,16,92,82,74,81,93,132,125,64,38,130,97]} 

 Player 2 20:42:07 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[257,294,253,255,284,287,304,250,275,227,237,251,272,299,277,240,230,232,281,233,276,238,289,229,271,259,307,234,245,236,269,288,278,235,283,266,254,258,270,252,260,308,243,309,282,301,280,226,305,303,241,297,279,264,296,228,262,225,267,268,291,249,310,263,242,306,265,248,246,286,273,223,293,295,244,247,302,300,256,224,231,239,290,298,261,285,292,274]} 

 Player 2 20:42:08 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[208,150,212,218,197,206,215,151,163,217,213,145,176,216,147,199,180,198,170,162,175,192,167,211,155,153,203,184,156,196,172,177,186,190,143,168,148,193,149,209,164,189,165,144,183,166,161,181,207,159,158,182,171,160,178,157,202,179,195,194,188,210,152,191,220,169,204,185,141,146,200,187,219,214,142,173,154,221,174,205,201]} 

 Player 2 20:42:08 $DRAW_CARD:  
{"deckType":5} 

 Player 2 20:42:08 $FLIP_CARD:  
{"cardId":201} 

 Player 2 20:42:08 $ADD_STORE_CARD:  
{"cardId":201} 

 Player 2 20:42:08 $DRAW_CARD:  
{"deckType":5} 

 Player 2 20:42:08 $FLIP_CARD:  
{"cardId":205} 

 Player 2 20:42:08 $ADD_STORE_CARD:  
{"cardId":205} 

 Player 2 20:42:08 $DRAW_CARD:  
{"deckType":2} 

 Player 2 20:42:08 $FLIP_CARD:  
{"cardId":274} 

 Player 2 20:42:08 $REGISTER_PASSIVE_ITEM:  
{"cardId":274} 

 Player 2 20:42:08 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":274} 

 Player 2 20:42:08 $NEW_MONSTER_ON_PLACE:  
{"cardId":274,"monsterPlaceId":1} 

 Player 2 20:42:08 $DRAW_CARD:  
{"deckType":2} 

 Player 2 20:42:08 $FLIP_CARD:  
{"cardId":292} 

 Player 2 20:42:08 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":292} 

 Player 2 20:42:08 $NEW_MONSTER_ON_PLACE:  
{"cardId":292,"monsterPlaceId":2} 

 Player 2 20:42:08 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 20:42:08 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 20:42:08 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:42:08 $MOVE_CARD:  
{"moveIndex":1,"cardId":97,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:42:08 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":97,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:42:08 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":97} 

 Player 2 20:42:08 $FLIP_CARD:  
{"cardId":97} 

 Player 2 20:42:08 $FLIP_CARD:  
{"cardId":97} 

 Player 2 20:42:08 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":97} 

 Player 2 20:42:08 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:42:09 $MOVE_CARD:  
{"moveIndex":2,"cardId":130,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:42:09 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":130,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:42:09 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":130} 

 Player 2 20:42:09 $FLIP_CARD:  
{"cardId":130} 

 Player 2 20:42:09 $FLIP_CARD:  
{"cardId":130} 

 Player 2 20:42:09 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":130} 

 Player 2 20:42:09 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:42:09 $MOVE_CARD:  
{"moveIndex":3,"cardId":38,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:42:09 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":38,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:42:09 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":38} 

 Player 2 20:42:09 $FLIP_CARD:  
{"cardId":38} 

 Player 2 20:42:09 $FLIP_CARD:  
{"cardId":38} 

 Player 2 20:42:09 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":38} 

 Player 2 20:42:10 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 20:42:10 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":323,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 20:42:10 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:42:10 $MOVE_CARD:  
{"moveIndex":4,"cardId":64,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:42:10 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":64,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:42:10 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":64} 

 Player 2 20:42:10 $FLIP_CARD:  
{"cardId":64} 

 Player 2 20:42:10 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":64} 

 Player 2 20:42:10 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:42:10 $MOVE_CARD:  
{"moveIndex":5,"cardId":125,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:42:10 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":125,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:42:10 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":125} 

 Player 2 20:42:10 $FLIP_CARD:  
{"cardId":125} 

 Player 2 20:42:10 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":125} 

 Player 2 20:42:11 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:42:11 $MOVE_CARD:  
{"moveIndex":6,"cardId":132,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:42:11 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":132,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:42:11 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":132} 

 Player 2 20:42:11 $FLIP_CARD:  
{"cardId":132} 

 Player 2 20:42:11 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":132} 

 Player 2 20:42:11 $GAME_HAS_STARTED:  

 Player 2 20:42:11 $SET_TURN:  
{"playerId":2} 

 Player 2 20:42:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:42:11 $NEXT_STACK_ID:  

 Player 2 20:42:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:42:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 

 Player 2 20:42:11 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13}} 

 Player 2 20:42:11 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13}} 

 Player 2 20:42:11 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 20:42:11 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 1 20:42:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:42:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 

 Player 2 20:42:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 2 20:42:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:42:14 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13}} 

 Player 2 20:42:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 2 20:42:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 2 20:42:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:42:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 2 20:42:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:42:14 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:42:14 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[313,314]} 

 Player 1 20:42:14 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:42:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 2 20:42:14 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13}} 

 Player 2 20:42:14 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:42:14 $MOVE_CARD:  
{"moveIndex":7,"cardId":93,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:42:15 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":93,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:42:15 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":93} 

 Player 2 20:42:15 $FLIP_CARD:  
{"cardId":93} 

 Player 2 20:42:15 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":93} 

 Player 2 20:42:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Has Drawen Loot For Start Turn"} 

 Player 2 20:42:15 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13}} 

 Player 2 20:42:15 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":1} 

 Player 2 20:42:15 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 20:42:15 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 1 20:42:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 

 Player 2 20:42:18 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":1} 

 Player 2 20:42:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 2 20:42:18 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:42:18 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13}} 

 Player 2 20:42:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 2 20:42:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 2 20:42:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:42:18 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:42:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 

 Player 1 20:42:18 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[313,314]} 

 Player 1 20:42:18 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:42:18 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 2 20:42:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 2 20:42:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:42:18 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 2 20:42:18 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 2 20:42:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 2 20:42:18 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:42:18 $CLEAR_SE_VIS:  

 Player 2 20:42:18 $UPDATE_ACTIONS:  

 Player 2 20:42:22 $MOVE_CARD:  
{"moveIndex":8,"cardId":281,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 

 Player 1 20:42:23 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":281,"flipIfFlipped":true,"playerId":2} 

 Player 2 20:42:23 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[257,294,253,255,284,287,304,250,275,227,237,251,272,299,277,240,230,232,233,276,238,289,229,271,259,307,234,245,236,269,288,278,235,283,266,254,258,270,252,260,308,243,309,282,301,280,226,305,303,241,297,279,264,296,228,262,225,267,268,291,249,310,263,242,306,265,248,246,286,273,223,293,295,244,247,302,300,256,224,231,239,290,298,261,285]} 

 Player 2 20:42:23 $FLIP_CARD:  
{"cardId":281} 

 Player 2 20:42:23 $REGISTER_PASSIVE_ITEM:  
{"cardId":281} 

 Player 2 20:42:23 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":281} 

 Player 2 20:42:23 $NEW_MONSTER_ON_PLACE:  
{"cardId":281,"monsterPlaceId":1} 

 Player 2 20:42:27 $NEXT_STACK_ID:  

 Player 2 20:42:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 declared attack on Isaac!"} 

 Player 2 20:42:27 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":323,"attackingPlayerCardId":323,"idOfCardBeingAttacked":281,"stackEffectType":4}} 

 Player 2 20:42:27 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":323,"attackingPlayerCardId":323,"idOfCardBeingAttacked":281,"stackEffectType":4}} 

 Player 2 20:42:27 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 20:42:27 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 1 20:42:27 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:42:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 declared attack on Isaac!"} 

 Player 2 20:42:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add DeclareAttack 2 "}} 

 Player 2 20:42:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:42:30 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":323,"attackingPlayerCardId":323,"idOfCardBeingAttacked":281,"stackEffectType":4}} 

 Player 2 20:42:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding DeclareAttack 2"},"childOfId":10} 

 Player 2 20:42:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 2 20:42:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:42:30 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 2 20:42:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 2 20:42:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:42:30 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:42:30 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[313,314]} 

 Player 1 20:42:30 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:42:30 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 2 20:42:30 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 2 20:42:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve DeclareAttack 2 "}} 

 Player 2 20:42:31 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":323,"attackingPlayerCardId":323,"idOfCardBeingAttacked":281,"stackEffectType":4}} 

 Player 2 20:42:31 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":281,"particleType":5} 

 Player 2 20:42:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Has Entered Battle with Isaac!"} 

 Player 2 20:42:31 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":323,"scopeIsPlayer":true,"index":3,"originStackId":2},"isAfterActivation":true,"index":3} 

 Player 2 20:42:31 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":323,"attackingPlayerCardId":323,"idOfCardBeingAttacked":281,"stackEffectType":4}} 

 Player 2 20:42:31 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":2} 

 Player 2 20:42:31 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 20:42:31 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 1 20:42:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 declared attack on Isaac!"} 

 Player 2 20:42:33 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":2} 

 Player 2 20:42:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve DeclareAttack 2  "}} 

 Player 2 20:42:34 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:42:34 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":323,"attackingPlayerCardId":323,"idOfCardBeingAttacked":281,"stackEffectType":4}} 

 Player 2 20:42:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve DeclareAttack 2"},"childOfId":15} 

 Player 2 20:42:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 2 20:42:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:42:34 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:42:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 declared attack on Isaac!"} 

 Player 1 20:42:34 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[313,314]} 

 Player 1 20:42:34 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:42:34 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 20:42:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 2 20:42:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:42:34 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 2 20:42:34 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 2 20:42:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 2 20:42:34 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:42:34 $CLEAR_SE_VIS:  

 Player 2 20:42:36 $NEXT_STACK_ID:  

 Player 2 20:42:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 

 Player 2 20:42:36 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":323,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 20:42:36 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":323,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 20:42:36 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 20:42:36 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 1 20:42:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:42:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 

 Player 2 20:42:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add AttackRoll 3 "}} 

 Player 2 20:42:39 $ROLL_DICE:  
{"playerId":2} 

 Player 2 20:42:41 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":1} 

 Player 2 20:42:41 $UPDATE_STACK_VIS:  
{"stackId":3,"text":"player rolled 1 vs Isaac!<Monster>"} 

 Player 2 20:42:41 $SHOW_DICE_ROLL:  
{"stackId":3} 

 Player 2 20:42:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Isaac!<Monster>"} 

 Player 2 20:42:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:42:45 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":323,"numberRolled":1,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 20:42:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding AttackRoll 3"},"childOfId":20} 

 Player 2 20:42:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 2 20:42:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:42:45 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 2 20:42:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 2 20:42:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:42:45 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:42:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 

 Player 1 20:42:45 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[313,314]} 

 Player 1 20:42:45 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:42:45 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 2 20:42:45 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 2 20:42:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve AttackRoll 3 "}} 

 Player 2 20:42:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Isaac!<Monster>"} 

 Player 2 20:42:45 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":323,"numberRolled":1,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 20:42:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Added 0 to original roll"}} 

 Player 2 20:42:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Rolled 4 Against Isaac!<Monster> 3"} 

 Player 2 20:42:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Roll Hit"} 

 Player 2 20:42:45 $NEXT_STACK_ID:  

 Player 2 20:42:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:42:45 $CLEAR_SE_VIS:  

 Player 2 20:42:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Player 2 Roll Hit"} 

 Player 2 20:42:45 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 2 20:42:45 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":323,"numberRolled":1,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 20:42:45 $REPLACE_STACK:  
{"currentStack":[{"entityId":4,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":3,"creatorCardId":323,"numberRolled":1,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":281}]} 

 Player 2 20:42:45 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 20:42:45 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 1 20:42:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 

 Player 1 20:42:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 

 Player 2 20:42:48 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":323,"scopeIsPlayer":true,"index":4,"originStackId":3},"isAfterActivation":true,"index":4} 

 Player 2 20:42:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Player 2 Roll Hit"} 

 Player 2 20:42:48 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":323,"numberRolled":1,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 20:42:48 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":3} 

 Player 2 20:42:48 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 20:42:48 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 1 20:42:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Player 2 is rolling against Isaac!<Monster>"} 

 Player 2 20:42:51 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":3} 

 Player 2 20:42:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Remove After Resolve AttackRoll 3  "}} 

 Player 2 20:42:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac!"} 

 Player 2 20:42:51 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":323,"numberRolled":1,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 20:42:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Response Remove After Resolve AttackRoll 3"},"childOfId":26} 

 Player 2 20:42:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":26} 

 Player 2 20:42:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:42:51 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 2 20:42:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Wait For Response From Player 1 "},"childOfId":26} 

 Player 2 20:42:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:42:51 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:42:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Player 2 is rolling against Isaac!<Monster>"} 

 Player 1 20:42:51 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[313,314]} 

 Player 1 20:42:51 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:42:51 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 20:42:51 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 2 20:42:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Resolve CombatDamage 4 "}} 

 Player 2 20:42:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac!"} 

 Player 2 20:42:51 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 2 20:42:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy will deal 1 combat damage to Isaac! "} 

 Player 2 20:42:51 $UPDATE_STACK_VIS:  
{"stackId":4,"text":"Maggy will deal 1 combat damage to Isaac!"} 

 Player 2 20:42:51 $MONSTER_GET_DAMAGED:  
{"cardId":281,"hpLeft":6,"damageDealerId":323} 

 Player 2 20:42:52 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":323},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 2 20:42:52 $NEXT_STACK_ID:  

 Player 2 20:42:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy will deal 1 combat damage to Isaac!  \n2:Activate Isaac! Effect DealDamage<DealDamage>"} 

 Player 2 20:42:52 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":5,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":true,"index":5,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 20:42:52 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":5,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":true,"index":5,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 20:42:52 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 20:42:52 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 1 20:42:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac!"} 

 Player 1 20:42:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Activate Isaac! "} 

 Player 2 20:42:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Add ActivatePassiveEffect 5 "}} 

 Player 2 20:43:03 $SHOW_DECISION:  
{"startCardId":281,"endCardId":313} 

 Player 2 20:43:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy will deal 1 combat damage to Isaac!  \n2:Activate Isaac! effect DealDamage<DealDamage>"} 

 Player 2 20:43:06 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[313],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":5,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":true,"index":5,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 20:43:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Response Adding ActivatePassiveEffect 5"},"childOfId":31} 

 Player 2 20:43:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":31} 

 Player 2 20:43:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:43:06 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:43:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Activate Isaac! "} 

 Player 1 20:43:06 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[313,314]} 

 Player 1 20:43:06 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:43:06 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 2 20:43:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Wait For Response From Player 2 "},"childOfId":31} 

 Player 2 20:43:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:43:06 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 20:43:06 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 2 20:43:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Resolve ActivatePassiveEffect 5 "}} 

 Player 2 20:43:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy will deal 1 combat damage to Isaac!  \n2:Activate Isaac! effect DealDamage<DealDamage>"} 

 Player 2 20:43:06 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[313],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":5,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":true,"index":5,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 20:43:06 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":281,"particleType":6} 

 Player 1 20:43:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Activate Isaac! "} 

 Player 2 20:43:08 $DISABLE_PARTICLE_EFFECT:  
{"cardId":281,"particleType":6} 

 Player 2 20:43:08 $PLAYER_GET_HIT:  
{"playerId":1,"damage":1,"damageDealerId":281} 

 Player 2 20:43:08 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":281}],"result":null,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 

 Player 2 20:43:08 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":323},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 2 20:43:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy will deal 1 combat damage to Isaac!  \n2:Activated Isaac! Effect"} 

 Player 2 20:43:08 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[313],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":5,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"isAfterActivation":true,"index":5,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 20:43:08 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":5} 

 Player 2 20:43:08 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 20:43:08 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 1 20:43:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Activate Isaac! "} 

 Player 2 20:43:11 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":5} 

 Player 2 20:43:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Remove After Resolve ActivatePassiveEffect 5  "}} 

 Player 2 20:43:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy will deal 1 combat damage to Isaac! "} 

 Player 2 20:43:11 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[313],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":5,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"isAfterActivation":true,"index":5,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 20:43:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Response Remove After Resolve ActivatePassiveEffect 5"},"childOfId":36} 

 Player 2 20:43:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 2 "},"childOfId":36} 

 Player 2 20:43:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:43:11 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 2 20:43:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Wait For Response From Player 1 "},"childOfId":36} 

 Player 2 20:43:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:43:11 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:43:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Activate Isaac! "} 

 Player 1 20:43:11 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[313,314]} 

 Player 1 20:43:11 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:43:11 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 20:43:11 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 2 20:43:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Resolve CombatDamage 4 "}} 

 Player 2 20:43:12 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":4},{"type":0,"number":323},{"type":0,"number":281}],"result":null,"preventMethod":false,"methodScopeId":323,"scopeIsPlayer":true,"index":7,"originStackId":4},"isAfterActivation":true,"index":7} 

 Player 2 20:43:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy will deal 1 combat damage to Isaac! "} 

 Player 2 20:43:12 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 2 20:43:12 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":4} 

 Player 2 20:43:12 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 20:43:12 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 1 20:43:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac!"} 

 Player 2 20:43:14 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":4} 

 Player 2 20:43:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Remove After Resolve CombatDamage 4  "}} 

 Player 2 20:43:14 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:43:15 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 2 20:43:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Response Remove After Resolve CombatDamage 4"},"childOfId":41} 

 Player 2 20:43:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 1 "},"childOfId":41} 

 Player 2 20:43:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:43:15 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:43:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac!"} 

 Player 1 20:43:15 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[313,314]} 

 Player 1 20:43:15 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:43:15 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 2 20:43:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Wait For Response From Player 2 "},"childOfId":41} 

 Player 2 20:43:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:43:15 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 20:43:15 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 2 20:43:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Stack Was Emptied "}} 

 Player 2 20:43:15 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:43:15 $CLEAR_SE_VIS:  

 Player 2 20:43:18 $NEXT_STACK_ID:  

 Player 2 20:43:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 

 Player 2 20:43:18 $ADD_TO_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":323,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 20:43:18 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":323,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 20:43:18 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 20:43:18 $SHOW_STACK_EFFECT:  
{"effectId":6} 

 Player 1 20:43:18 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:43:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 

 Player 2 20:43:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Add AttackRoll 6 "}} 

 Player 2 20:43:21 $ROLL_DICE:  
{"playerId":2} 

 Player 2 20:43:22 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":3} 

 Player 2 20:43:22 $UPDATE_STACK_VIS:  
{"stackId":6,"text":"player rolled 3 vs Isaac!<Monster>"} 

 Player 2 20:43:22 $SHOW_DICE_ROLL:  
{"stackId":6} 

 Player 2 20:43:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 3 vs Isaac!<Monster>"} 

 Player 2 20:43:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:43:25 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":323,"numberRolled":3,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 20:43:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Response Adding AttackRoll 6"},"childOfId":46} 

 Player 2 20:43:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Wait For Response From Player 2 "},"childOfId":46} 

 Player 2 20:43:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:43:25 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 2 20:43:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Wait For Response From Player 1 "},"childOfId":46} 

 Player 2 20:43:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:43:25 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:43:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 

 Player 1 20:43:25 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[313,314]} 

 Player 1 20:43:25 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:43:25 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 2 20:43:25 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 2 20:43:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Resolve AttackRoll 6 "}} 

 Player 2 20:43:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 3 vs Isaac!<Monster>"} 

 Player 2 20:43:25 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":323,"numberRolled":3,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 20:43:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Added 0 to original roll"}} 

 Player 2 20:43:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Rolled 4 Against Isaac!<Monster> 3"} 

 Player 2 20:43:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Roll Hit"} 

 Player 2 20:43:25 $NEXT_STACK_ID:  

 Player 2 20:43:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:43:25 $CLEAR_SE_VIS:  

 Player 2 20:43:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Player 2 Roll Hit"} 

 Player 2 20:43:26 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 2 20:43:26 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":323,"numberRolled":3,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 20:43:26 $REPLACE_STACK:  
{"currentStack":[{"entityId":7,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":6,"creatorCardId":323,"numberRolled":3,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":281}]} 

 Player 2 20:43:26 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 20:43:26 $SHOW_STACK_EFFECT:  
{"effectId":7} 

 Player 1 20:43:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 

 Player 1 20:43:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 

 Player 2 20:43:28 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":1},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":323,"scopeIsPlayer":true,"index":8,"originStackId":6},"isAfterActivation":true,"index":8} 

 Player 2 20:43:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Player 2 Roll Hit"} 

 Player 2 20:43:28 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":323,"numberRolled":3,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 20:43:28 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":6} 

 Player 2 20:43:28 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 20:43:28 $SHOW_STACK_EFFECT:  
{"effectId":6} 

 Player 1 20:43:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Player 2 is rolling against Isaac!<Monster>"} 

 Player 2 20:43:31 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":6} 

 Player 2 20:43:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Remove After Resolve AttackRoll 6  "}} 

 Player 2 20:43:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac!"} 

 Player 2 20:43:31 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":323,"numberRolled":3,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 20:43:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Response Remove After Resolve AttackRoll 6"},"childOfId":52} 

 Player 2 20:43:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Wait For Response From Player 2 "},"childOfId":52} 

 Player 2 20:43:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:43:31 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 2 20:43:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Wait For Response From Player 1 "},"childOfId":52} 

 Player 2 20:43:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:43:32 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:43:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Player 2 is rolling against Isaac!<Monster>"} 

 Player 1 20:43:32 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[313,314]} 

 Player 1 20:43:32 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:43:32 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 2 20:43:32 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 2 20:43:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":56,"_text":"Resolve CombatDamage 7 "}} 

 Player 2 20:43:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac!"} 

 Player 2 20:43:32 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 2 20:43:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy will deal 1 combat damage to Isaac! "} 

 Player 2 20:43:32 $UPDATE_STACK_VIS:  
{"stackId":7,"text":"Maggy will deal 1 combat damage to Isaac!"} 

 Player 2 20:43:32 $MONSTER_GET_DAMAGED:  
{"cardId":281,"hpLeft":5,"damageDealerId":323} 

 Player 2 20:43:32 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":323},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":9,"originStackId":-1},"isAfterActivation":true,"index":9} 

 Player 2 20:43:32 $NEXT_STACK_ID:  

 Player 2 20:43:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy will deal 1 combat damage to Isaac!  \n2:Activate Isaac! Effect DealDamage<DealDamage>"} 

 Player 2 20:43:32 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":8,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":true,"index":9,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 20:43:32 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":8,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":true,"index":9,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 20:43:32 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 20:43:32 $SHOW_STACK_EFFECT:  
{"effectId":8} 

 Player 1 20:43:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac!"} 

 Player 1 20:43:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Activate Isaac! "} 

 Player 2 20:43:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":57,"_text":"Add ActivatePassiveEffect 8 "}} 

 Player 2 20:44:08 $SHOW_DECISION:  
{"startCardId":281,"endCardId":313} 

 Player 2 20:44:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy will deal 1 combat damage to Isaac!  \n2:Activate Isaac! effect DealDamage<DealDamage>"} 

 Player 2 20:44:11 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[313],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":8,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":true,"index":9,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 20:44:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":58,"_text":"Response Adding ActivatePassiveEffect 8"},"childOfId":57} 

 Player 2 20:44:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":59,"_text":"Wait For Response From Player 1 "},"childOfId":57} 

 Player 2 20:44:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:44:11 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:44:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Activate Isaac! "} 

 Player 1 20:44:11 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[313,314]} 

 Player 1 20:44:11 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:44:11 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 2 20:44:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":60,"_text":"Wait For Response From Player 2 "},"childOfId":57} 

 Player 2 20:44:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:44:11 $SHOW_REACTIONS:  
{"playerId":2,"cardsIds":[323,324,64,125,132,93]} 

 Player 2 20:44:31 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[323,324,64,125,132,93]} 

 Player 2 20:44:31 $ACTION_MASSAGE_REMOVE:  
{"id":60} 

 Player 2 20:44:31 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 2 20:44:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":61,"_text":"Resolve ActivatePassiveEffect 8 "}} 

 Player 2 20:44:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy will deal 1 combat damage to Isaac!  \n2:Activate Isaac! effect DealDamage<DealDamage>"} 

 Player 2 20:44:31 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[313],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":8,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":true,"index":9,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 20:44:31 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":281,"particleType":6} 

 Player 1 20:44:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Activate Isaac! "} 

 Player 2 20:44:33 $DISABLE_PARTICLE_EFFECT:  
{"cardId":281,"particleType":6} 

 Player 2 20:44:33 $PLAYER_GET_HIT:  
{"playerId":1,"damage":1,"damageDealerId":281} 

 Player 2 20:44:33 $NEXT_STACK_ID:  

 Player 2 20:44:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy will deal 1 combat damage to Isaac!  \n2:Activate Isaac! effect DealDamage<DealDamage>"} 

 Player 2 20:44:33 $CLEAR_SE_VIS:  

 Player 2 20:44:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy will deal 1 combat damage to Isaac!  \n2:Activate Isaac! effect DealDamage<DealDamage> \n3:Player 1 Is About To Die"} 

 Player 2 20:44:33 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 2 20:44:33 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[313],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":8,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"effectPassiveMeta":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":323},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":9,"originStackId":-1},"isAfterActivation":true,"index":9,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 20:44:33 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":313,"playerToDieCardId":313,"stackEffectType":15,"killerId":281}} 

 Player 2 20:44:33 $REPLACE_STACK:  
{"currentStack":[{"entityId":7,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"effectCollectedData":{"effectTargets":[313],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":8,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"effectPassiveMeta":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":323},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":9,"originStackId":-1},"isAfterActivation":true,"index":9,"hasDataBeenCollectedYet":true,"stackEffectType":14},{"entityId":9,"creatorCardId":313,"playerToDieCardId":313,"stackEffectType":15,"killerId":281}]} 

 Player 2 20:44:33 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":313,"playerToDieCardId":313,"stackEffectType":15,"killerId":281}} 

 Player 2 20:44:33 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 20:44:33 $SHOW_STACK_EFFECT:  
{"effectId":9} 

 Player 1 20:44:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Activate Isaac! "} 

 Player 1 20:44:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Activate Isaac!  \n3:Player 1 Is About To Die"} 

 Player 2 20:44:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:44:36 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":281}],"result":null,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":10,"originStackId":-1},"isAfterActivation":true,"index":10} 

 Player 2 20:44:36 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":323},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":9,"originStackId":-1},"isAfterActivation":true,"index":9} 

 Player 2 20:44:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy will deal 1 combat damage to Isaac!  \n2:Activated Isaac! Effect \n3:Player 1 Is About To Die"} 

 Player 2 20:44:36 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[313],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":8,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"isAfterActivation":true,"index":9,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 20:44:36 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":8} 

 Player 2 20:44:36 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 20:44:36 $SHOW_STACK_EFFECT:  
{"effectId":8} 

 Player 1 20:44:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Activate Isaac!  \n3:Player 1 Is About To Die"} 

 Player 2 20:44:39 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":8} 

 Player 2 20:44:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":62,"_text":"Remove After Resolve ActivatePassiveEffect 8  "}} 

 Player 2 20:44:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy will deal 1 combat damage to Isaac!  \n2:Player 1 Is About To Die"} 

 Player 2 20:44:39 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[313],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":8,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"isAfterActivation":true,"index":9,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 20:44:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":63,"_text":"Response Remove After Resolve ActivatePassiveEffect 8"},"childOfId":62} 

 Player 2 20:44:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":64,"_text":"Wait For Response From Player 2 "},"childOfId":62} 

 Player 2 20:44:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:44:39 $SHOW_REACTIONS:  
{"playerId":2,"cardsIds":[323,324,64,125,132,93]} 

 Player 1 20:44:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Activate Isaac!  \n3:Player 1 Is About To Die"} 

 Player 2 20:46:09 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[323,324,64,125,132,93]} 

 Player 2 20:46:09 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 2 20:46:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":65,"_text":"Wait For Response From Player 1 "},"childOfId":62} 

 Player 2 20:46:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:46:09 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:46:09 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[313,314]} 

 Player 1 20:46:09 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:46:09 $ACTION_MASSAGE_REMOVE:  
{"id":65} 

 Player 2 20:46:09 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 2 20:46:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":66,"_text":"Resolve PlayerDeath 9 "}} 

 Player 2 20:46:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy will deal 1 combat damage to Isaac!  \n2:Player 1 Is About To Die"} 

 Player 2 20:46:09 $DO_STACK_EFFECT:  
{"originPlayerId":2,"playerId":1,"currentStack":[{"entityId":7,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":9,"creatorCardId":313,"playerToDieCardId":313,"stackEffectType":15,"killerId":281}]} 

 Player 1 20:46:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Activate Isaac! "} 

 Player 1 20:46:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Player 1 Has Died"} 

 Player 1 20:46:09 $NEXT_STACK_ID:  

 Player 1 20:46:09 $CLEAR_SE_VIS:  

 Player 1 20:46:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Player 1 Has Died \n3:Player 1 Is About To Pay Death Penalties"} 

 Player 1 20:46:09 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 1 20:46:09 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":313,"playerToDieCardId":313,"stackEffectType":15,"killerId":281}} 

 Player 1 20:46:09 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":313,"playerToPayCardId":313,"stackEffectType":16}} 

 Player 1 20:46:09 $REPLACE_STACK:  
{"currentStack":[{"entityId":7,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":9,"creatorCardId":313,"playerToDieCardId":313,"stackEffectType":15,"killerId":281},{"entityId":10,"creatorCardId":313,"playerToPayCardId":313,"stackEffectType":16}]} 

 Player 1 20:46:09 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":313,"playerToPayCardId":313,"stackEffectType":16}} 

 Player 1 20:46:09 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 20:46:09 $SHOW_STACK_EFFECT:  
{"effectId":10} 

 Player 2 20:46:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy will deal 1 combat damage to Isaac!  \n2:Player 1 Is About To Die"} 

 Player 2 20:46:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Player 1 Is About To Die \n3:Player 1 Is About To Pay Death Penalties"} 

 Player 1 20:46:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:46:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Player 1 Has Died \n3:Player 1 Is About To Pay Death Penalties"} 

 Player 1 20:46:12 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":313,"playerToDieCardId":313,"stackEffectType":15,"killerId":281}} 

 Player 1 20:46:12 $FINISH_DO_STACK_EFFECT:  
{"playerId":2,"newStack":[{"entityId":7,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":9,"creatorCardId":313,"playerToDieCardId":313,"stackEffectType":15,"killerId":281},{"entityId":10,"creatorCardId":313,"playerToPayCardId":313,"stackEffectType":16}]} 

 Player 2 20:46:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Player 1 Is About To Die \n3:Player 1 Is About To Pay Death Penalties"} 

 Player 2 20:46:12 $CLEAR_SE_VIS:  

 Player 2 20:46:12 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 2 20:46:12 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":313,"playerToDieCardId":313,"stackEffectType":15,"killerId":281}} 

 Player 2 20:46:12 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":313,"playerToPayCardId":313,"stackEffectType":16}} 

 Player 2 20:46:12 $REPLACE_STACK:  
{"currentStack":[{"entityId":7,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":9,"creatorCardId":313,"playerToDieCardId":313,"stackEffectType":15,"killerId":281},{"entityId":10,"creatorCardId":313,"playerToPayCardId":313,"stackEffectType":16}]} 

 Player 2 20:46:12 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 20:46:12 $SHOW_STACK_EFFECT:  
{"effectId":9} 

 Player 1 20:46:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Player 1 Has Died \n3:Player 1 Is About To Pay Death Penalties"} 

 Player 2 20:46:15 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":9} 

 Player 2 20:46:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":67,"_text":"Remove After Resolve PlayerDeath 9  "}} 

 Player 2 20:46:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Player 1 Is About To Pay Death Penalties"} 

 Player 2 20:46:15 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":9,"creatorCardId":313,"playerToDieCardId":313,"stackEffectType":15,"killerId":281}} 

 Player 2 20:46:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":68,"_text":"Response Remove After Resolve PlayerDeath 9"},"childOfId":67} 

 Player 2 20:46:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":69,"_text":"Wait For Response From Player 2 "},"childOfId":67} 

 Player 2 20:46:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:46:15 $SHOW_REACTIONS:  
{"playerId":2,"cardsIds":[323,324,64,125,132,93]} 

 Player 1 20:46:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Player 1 Is About To Die \n3:Player 1 Is About To Pay Death Penalties"} 

 Player 2 20:47:45 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[323,324,64,125,132,93]} 

 Player 2 20:47:45 $ACTION_MASSAGE_REMOVE:  
{"id":69} 

 Player 2 20:47:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":70,"_text":"Wait For Response From Player 1 "},"childOfId":67} 

 Player 2 20:47:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:47:45 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:47:45 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[313,314]} 

 Player 1 20:47:45 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:47:45 $ACTION_MASSAGE_REMOVE:  
{"id":70} 

 Player 2 20:47:45 $ACTION_MASSAGE_REMOVE:  
{"id":68} 

 Player 2 20:47:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":71,"_text":"Resolve PlayerDeathPenalties 10 "}} 

 Player 2 20:47:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Player 1 Is About To Pay Death Penalties"} 

 Player 2 20:47:46 $DO_STACK_EFFECT:  
{"originPlayerId":2,"playerId":1,"currentStack":[{"entityId":7,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":10,"creatorCardId":313,"playerToPayCardId":313,"stackEffectType":16}]} 

 Player 1 20:47:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Player 1 Is About To Die"} 

 Player 1 20:47:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":72,"_text":"Player 1 pays Penalties"}} 

 Player 1 20:47:46 $SET_MONEY:  
{"playerId":1,"numOfCoins":2} 

 Player 1 20:47:46 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-1}],"result":null,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 20:52:57 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":38} 

 Player 1 20:52:57 $MOVE_CARD:  
{"moveIndex":9,"cardId":38,"placeID":330,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 20:52:57 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":38,"flipIfFlipped":true,"playerId":1} 

 Player 1 20:52:57 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":38} 

 Player 1 20:52:58 $USE_ITEM:  
{"cardId":313} 

 Player 1 20:52:58 $USE_ITEM:  
{"cardId":314} 

 Player 1 20:52:58 $PLAYER_DIED:  
{"playerId":1} 

 Player 1 20:52:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Player 1 Paid Death Penalties"} 

 Player 1 20:52:58 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":313,"playerToPayCardId":313,"stackEffectType":16}} 

 Player 1 20:52:58 $FINISH_DO_STACK_EFFECT:  
{"playerId":2,"newStack":[{"entityId":7,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":10,"creatorCardId":313,"playerToPayCardId":313,"stackEffectType":16}]} 

 Player 2 20:52:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Player 1 Is About To Pay Death Penalties"} 

 Player 2 20:52:58 $CLEAR_SE_VIS:  

 Player 2 20:52:58 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 2 20:52:58 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":313,"playerToPayCardId":313,"stackEffectType":16}} 

 Player 2 20:52:58 $REPLACE_STACK:  
{"currentStack":[{"entityId":7,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":10,"creatorCardId":313,"playerToPayCardId":313,"stackEffectType":16}]} 

 Player 2 20:52:58 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 20:52:58 $SHOW_STACK_EFFECT:  
{"effectId":10} 

 Player 1 20:52:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Player 1 Paid Death Penalties"} 

 Player 2 20:53:01 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":10} 

 Player 2 20:53:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":73,"_text":"Remove After Resolve PlayerDeathPenalties 10  "}} 

 Player 2 20:53:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac!"} 

 Player 2 20:53:01 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":10,"creatorCardId":313,"playerToPayCardId":313,"stackEffectType":16}} 

 Player 2 20:53:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":74,"_text":"Response Remove After Resolve PlayerDeathPenalties 10"},"childOfId":73} 

 Player 2 20:53:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":75,"_text":"Wait For Response From Player 1 "},"childOfId":73} 

 Player 2 20:53:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:53:01 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:53:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Player 1 Is About To Pay Death Penalties"} 

 Player 1 20:53:01 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[]} 

 Player 1 20:53:01 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:53:01 $ACTION_MASSAGE_REMOVE:  
{"id":75} 

 Player 2 20:53:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":76,"_text":"Wait For Response From Player 2 "},"childOfId":73} 

 Player 2 20:53:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:53:01 $SHOW_REACTIONS:  
{"playerId":2,"cardsIds":[323,324,64,125,132,93]} 

 Player 2 20:53:17 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[323,324,64,125,132,93]} 

 Player 2 20:53:18 $ACTION_MASSAGE_REMOVE:  
{"id":76} 

 Player 2 20:53:18 $ACTION_MASSAGE_REMOVE:  
{"id":74} 

 Player 2 20:53:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":77,"_text":"Resolve CombatDamage 7 "}} 

 Player 2 20:53:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac!"} 

 Player 2 20:53:18 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 2 20:53:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy will deal 1 combat damage to Isaac! "} 

 Player 2 20:53:18 $UPDATE_STACK_VIS:  
{"stackId":7,"text":"Maggy will deal 1 combat damage to Isaac!"} 

 Player 2 20:53:18 $MONSTER_GET_DAMAGED:  
{"cardId":281,"hpLeft":4,"damageDealerId":323} 

 Player 2 20:53:18 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":323},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":11,"originStackId":-1},"isAfterActivation":true,"index":11} 

 Player 2 20:53:18 $NEXT_STACK_ID:  

 Player 2 20:53:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy will deal 1 combat damage to Isaac!  \n2:Activate Isaac! Effect DealDamage<DealDamage>"} 

 Player 2 20:53:18 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":11,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":true,"index":11,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 20:53:18 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":11,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":true,"index":11,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 20:53:18 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 20:53:18 $SHOW_STACK_EFFECT:  
{"effectId":11} 

 Player 1 20:53:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac!"} 

 Player 1 20:53:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Activate Isaac! "} 

 Player 2 20:53:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":78,"_text":"Add ActivatePassiveEffect 11 "}} 

 Player 2 20:53:21 $SHOW_DECISION:  
{"startCardId":281,"endCardId":323} 

 Player 2 20:53:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy will deal 1 combat damage to Isaac!  \n2:Activate Isaac! effect DealDamage<DealDamage>"} 

 Player 2 20:53:24 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[323],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":11,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":true,"index":11,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 20:53:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":79,"_text":"Response Adding ActivatePassiveEffect 11"},"childOfId":78} 

 Player 2 20:53:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":80,"_text":"Wait For Response From Player 2 "},"childOfId":78} 

 Player 2 20:53:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:53:24 $SHOW_REACTIONS:  
{"playerId":2,"cardsIds":[323,324,64,125,132,93]} 

 Player 1 20:53:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Activate Isaac! "} 

 Player 2 20:54:54 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[323,324,64,125,132,93]} 

 Player 2 20:54:54 $ACTION_MASSAGE_REMOVE:  
{"id":80} 

 Player 2 20:54:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":81,"_text":"Wait For Response From Player 1 "},"childOfId":78} 

 Player 2 20:54:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:54:54 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:54:54 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[]} 

 Player 1 20:54:54 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:54:54 $ACTION_MASSAGE_REMOVE:  
{"id":81} 

 Player 2 20:54:54 $ACTION_MASSAGE_REMOVE:  
{"id":79} 

 Player 2 20:54:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":82,"_text":"Resolve ActivatePassiveEffect 11 "}} 

 Player 2 20:54:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy will deal 1 combat damage to Isaac!  \n2:Activate Isaac! effect DealDamage<DealDamage>"} 

 Player 2 20:54:54 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[323],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":11,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":true,"index":11,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 20:54:54 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":281,"particleType":6} 

 Player 1 20:54:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Activate Isaac! "} 

 Player 2 20:54:56 $DISABLE_PARTICLE_EFFECT:  
{"cardId":281,"particleType":6} 

 Player 2 20:54:56 $PLAYER_GET_HIT:  
{"playerId":2,"damage":1,"damageDealerId":281} 

 Player 2 20:54:56 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":281}],"result":null,"preventMethod":false,"methodScopeId":323,"scopeIsPlayer":true,"index":12,"originStackId":-1},"isAfterActivation":true,"index":12} 

 Player 2 20:54:56 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":323},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":11,"originStackId":-1},"isAfterActivation":true,"index":11} 

 Player 2 20:54:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy will deal 1 combat damage to Isaac!  \n2:Activated Isaac! Effect"} 

 Player 2 20:54:56 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[323],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":11,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"isAfterActivation":true,"index":11,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 20:54:56 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":11} 

 Player 2 20:54:56 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 20:54:56 $SHOW_STACK_EFFECT:  
{"effectId":11} 

 Player 1 20:54:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Activate Isaac! "} 

 Player 2 20:54:59 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":11} 

 Player 2 20:54:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":83,"_text":"Remove After Resolve ActivatePassiveEffect 11  "}} 

 Player 2 20:54:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy will deal 1 combat damage to Isaac! "} 

 Player 2 20:54:59 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[323],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":11,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"isAfterActivation":true,"index":11,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 20:54:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":84,"_text":"Response Remove After Resolve ActivatePassiveEffect 11"},"childOfId":83} 

 Player 2 20:54:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":85,"_text":"Wait For Response From Player 1 "},"childOfId":83} 

 Player 2 20:54:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:54:59 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:54:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Activate Isaac! "} 

 Player 1 20:54:59 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[]} 

 Player 1 20:54:59 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:54:59 $ACTION_MASSAGE_REMOVE:  
{"id":85} 

 Player 2 20:54:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":86,"_text":"Wait For Response From Player 2 "},"childOfId":83} 

 Player 2 20:54:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:54:59 $SHOW_REACTIONS:  
{"playerId":2,"cardsIds":[323,324,64,125,132,93]} 

 Player 2 20:56:29 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[323,324,64,125,132,93]} 

 Player 2 20:56:29 $ACTION_MASSAGE_REMOVE:  
{"id":86} 

 Player 2 20:56:29 $ACTION_MASSAGE_REMOVE:  
{"id":84} 

 Player 2 20:56:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":87,"_text":"Resolve CombatDamage 7 "}} 

 Player 2 20:56:29 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":4},{"type":0,"number":323},{"type":0,"number":281}],"result":null,"preventMethod":false,"methodScopeId":323,"scopeIsPlayer":true,"index":13,"originStackId":7},"isAfterActivation":true,"index":13} 

 Player 2 20:56:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy will deal 1 combat damage to Isaac! "} 

 Player 2 20:56:29 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 2 20:56:29 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":7} 

 Player 2 20:56:30 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 20:56:30 $SHOW_STACK_EFFECT:  
{"effectId":7} 

 Player 1 20:56:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac!"} 

 Player 2 20:56:32 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":7} 

 Player 2 20:56:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":88,"_text":"Remove After Resolve CombatDamage 7  "}} 

 Player 2 20:56:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:56:32 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 2 20:56:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":89,"_text":"Response Remove After Resolve CombatDamage 7"},"childOfId":88} 

 Player 2 20:56:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":90,"_text":"Wait For Response From Player 2 "},"childOfId":88} 

 Player 2 20:56:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:56:33 $SHOW_REACTIONS:  
{"playerId":2,"cardsIds":[323,324,64,125,132,93]} 

 Player 1 20:56:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac!"} 

 Player 2 20:58:02 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[323,324,64,125,132,93]} 

 Player 2 20:58:02 $ACTION_MASSAGE_REMOVE:  
{"id":90} 

 Player 2 20:58:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":91,"_text":"Wait For Response From Player 1 "},"childOfId":88} 

 Player 2 20:58:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:58:02 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:58:02 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[]} 

 Player 1 20:58:02 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:58:03 $ACTION_MASSAGE_REMOVE:  
{"id":91} 

 Player 2 20:58:03 $ACTION_MASSAGE_REMOVE:  
{"id":89} 

 Player 2 20:58:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":92,"_text":"Stack Was Emptied "}} 

 Player 2 20:58:03 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:58:03 $CLEAR_SE_VIS:  

 Player 2 20:58:03 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":4},{"type":0,"number":323},{"type":0,"number":281}],"result":null,"preventMethod":false,"methodScopeId":323,"scopeIsPlayer":true,"index":14,"originStackId":7},"isAfterActivation":true,"index":14} 

 Player 2 20:58:03 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":7} 

 Player 2 20:58:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":93,"_text":"Stack Was Emptied "}} 

 Player 2 20:58:03 $CLEAR_SE_VIS:  

 Player 2 21:07:58 $MATCH: 