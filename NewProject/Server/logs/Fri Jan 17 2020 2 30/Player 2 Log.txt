Start Log 
 Player 2 02:30:43 $MOVE_TO_TABLE:  
 Player 2 02:30:52 $FINISH_LOAD:  

 {"id":2,"turnPlayerId":2} 
 Player 2 02:30:52 $ASSIGN_CHAR_TO_PLAYER:  

 {"playerId":1,"charCardId":287,"itemCardId":288} 
 Player 2 02:30:52 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":284}],"result":true,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 02:30:52 $ASSIGN_CHAR_TO_PLAYER:  

 {"playerId":2,"charCardId":281,"itemCardId":284} 
 Player 2 02:30:52 $DECK_ARRAGMENT:  

 {"deckType":1,"arrangement":[9,17,68,103,73,121,21,113,58,12,108,114,123,115,95,87,70,57,31,15,72,80,98,127,59,116,52,104,79,42,112,67,137,132,45,71,13,130,39,81,30,105,34,117,119,94,138,29,63,78,69,54,8,37,139,101,110,111,56,43,41,107,128,61,124,89,99,74,10,28,47,109,14,7,88,35,22,118,84,44,135,77,46,126,91,86,93,131,19,48,125,75,16,32,40,38,27,23,25,20,106,142,136,140,92,122,129,90,55,53,141,134,82,18,97,24,66,83,33,65,102,36,62,60,49,51,96,100,26,76,120,85,11,64,50,133]} 
 Player 2 02:30:52 $DECK_ARRAGMENT:  

 {"deckType":2,"arrangement":[223,240,234,227,226,266,245,255,272,274,259,230,250,249,271,242,264,267,270,261,269,260,238,256,265,258,252,236,241,248,254,229,224,246,243,225,262,257,228,268,233,251,275,239,231,253,263,235,276,244,232,273,237,247]} 
 Player 2 02:30:52 $DECK_ARRAGMENT:  

 {"deckType":5,"arrangement":[180,200,216,152,156,160,147,193,175,182,149,187,171,196,150,212,167,217,191,189,145,188,153,163,202,174,155,186,162,172,219,170,154,213,192,184,206,209,194,185,168,158,178,198,220,169,151,203,183,205,161,210,199,201,166,159,195,146,197,211,207,181,208,177,157,165,179,204,215,148,190,214,173,176,164,218]} 
 Player 2 02:30:52 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 02:30:53 $FLIP_CARD:  

 {"cardId":218} 
 Player 2 02:30:53 $ADD_STORE_CARD:  

 {"cardId":218} 
 Player 2 02:30:53 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 02:30:53 $FLIP_CARD:  

 {"cardId":164} 
 Player 2 02:30:53 $ADD_STORE_CARD:  

 {"cardId":164} 
 Player 2 02:30:53 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 02:30:53 $FLIP_CARD:  

 {"cardId":247} 
 Player 2 02:30:53 $ADD_MONSTER:  

 {"monsterPlaceId":1,"monsterId":247} 
 Player 2 02:30:53 $NEW_MONSTER_ON_PLACE:  

 {"cardId":247,"monsterPlaceId":1} 
 Player 2 02:30:53 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 02:30:53 $DECK_ADD_TO_BOTTOM:  

 {"deckType":2,"cardId":237} 
 Player 2 02:30:53 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 02:30:53 $DECK_ADD_TO_BOTTOM:  

 {"deckType":2,"cardId":273} 
 Player 2 02:30:53 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 02:30:53 $FLIP_CARD:  

 {"cardId":232} 
 Player 2 02:30:53 $ADD_MONSTER:  

 {"monsterPlaceId":2,"monsterId":232} 
 Player 2 02:30:53 $NEW_MONSTER_ON_PLACE:  

 {"cardId":232,"monsterPlaceId":2} 
 Player 2 02:30:53 $SET_MONEY:  

 {"playerId":1,"numOfCoins":3} 
 Player 2 02:30:53 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":287,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 2 02:30:53 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 02:30:53 $MOVE_CARD:  

 {"moveIndex":1,"cardId":133,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 02:30:54 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":133} 
 Player 2 02:30:54 $FLIP_CARD:  

 {"cardId":133} 
 Player 2 02:30:54 $FLIP_CARD:  

 {"cardId":133} 
 Player 2 02:30:54 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":133} 
 Player 2 02:30:54 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 02:30:54 $MOVE_CARD:  

 {"moveIndex":2,"cardId":50,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 02:30:54 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":50} 
 Player 2 02:30:54 $FLIP_CARD:  

 {"cardId":50} 
 Player 2 02:30:54 $FLIP_CARD:  

 {"cardId":50} 
 Player 2 02:30:54 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":50} 
 Player 2 02:30:54 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 02:30:54 $MOVE_CARD:  

 {"moveIndex":3,"cardId":64,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 02:30:55 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":64} 
 Player 2 02:30:55 $FLIP_CARD:  

 {"cardId":64} 
 Player 2 02:30:55 $FLIP_CARD:  

 {"cardId":64} 
 Player 2 02:30:55 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":64} 
 Player 2 02:30:55 $SET_MONEY:  

 {"playerId":2,"numOfCoins":3} 
 Player 2 02:30:55 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Player 2 02:30:55 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 02:30:55 $MOVE_CARD:  

 {"moveIndex":4,"cardId":11,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 02:30:55 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":11} 
 Player 2 02:30:55 $FLIP_CARD:  

 {"cardId":11} 
 Player 2 02:30:55 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":11} 
 Player 2 02:30:55 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 02:30:55 $MOVE_CARD:  

 {"moveIndex":5,"cardId":85,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 02:30:56 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":85} 
 Player 2 02:30:56 $FLIP_CARD:  

 {"cardId":85} 
 Player 2 02:30:56 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":85} 
 Player 2 02:30:56 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 02:30:56 $MOVE_CARD:  

 {"moveIndex":6,"cardId":120,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 02:30:56 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":120} 
 Player 2 02:30:56 $FLIP_CARD:  

 {"cardId":120} 
 Player 2 02:30:56 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":120} 
 Player 2 02:30:56 $GAME_HAS_STARTED:  
 Player 2 02:30:56 $SET_TURN:  

 {"playerId":2} 
 Player 2 02:30:56 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:30:56 $NEXT_STACK_ID:  
 Player 2 02:30:56 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:30:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 02:30:56 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":281,"turnPlayerCardId":281,"stackEffectType":13}} 
 Player 2 02:30:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 02:30:57 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":1,"creatorCardId":281,"turnPlayerCardId":281,"stackEffectType":13}} 
 Player 2 02:30:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 
 Player 2 02:30:57 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:30:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 02:30:57 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":281,"turnPlayerCardId":281,"stackEffectType":13}} 
 Player 2 02:30:57 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 2 02:30:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 
 Player 2 02:30:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 2 02:30:57 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:30:57 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 2 02:30:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 2 02:30:57 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:30:57 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:30:57 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 2 02:30:57 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 2 02:30:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 
 Player 2 02:30:57 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 02:30:57 $MOVE_CARD:  

 {"moveIndex":7,"cardId":76,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 02:30:57 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":76} 
 Player 2 02:30:57 $FLIP_CARD:  

 {"cardId":76} 
 Player 2 02:30:58 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":76} 
 Player 2 02:30:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 02:30:58 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":281,"turnPlayerCardId":281,"stackEffectType":13}} 
 Player 2 02:30:58 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 2 02:30:58 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:30:58 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":1,"creatorCardId":281,"turnPlayerCardId":281,"stackEffectType":13}} 
 Player 2 02:30:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 
 Player 2 02:30:58 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:30:58 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":281,"turnPlayerCardId":281,"stackEffectType":13}} 
 Player 2 02:30:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 
 Player 2 02:30:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Player 2 02:30:58 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:30:58 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:30:58 $ACTION_MASSAGE_REMOVE:  

 {"id":7} 
 Player 2 02:30:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Player 2 02:30:58 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:30:58 $ACTION_MASSAGE_REMOVE:  

 {"id":8} 
 Player 2 02:30:58 $ACTION_MASSAGE_REMOVE:  

 {"id":6} 
 Player 2 02:30:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":9,"_text":"Stack Was Emptied "}} 
 Player 2 02:30:58 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:30:58 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 2 02:30:58 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 2 02:30:58 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 2 02:30:58 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 2 02:30:58 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 2 02:30:58 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 2 02:30:58 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 2 02:30:58 $UPDATE_ACTIONS:  
 Player 2 02:30:59 $MOVE_CARD_END:  

 {"moveIndex":8,"cardId":161,"flipIfFlipped":true,"playerId":1} 
 Player 2 02:31:00 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 2 02:31:00 $MOVE_CARD_END:  

 {"moveIndex":9,"cardId":161,"flipIfFlipped":true,"playerId":1} 
 Player 2 02:31:00 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 2 02:31:05 $SHOW_DECISION:  

 {"startCardId":281,"endCardId":232} 
 Player 2 02:31:08 $NEXT_STACK_ID:  
 Player 2 02:31:08 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:31:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Conjoined Fatty"} 
 Player 2 02:31:08 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":281,"attackingPlayerCardId":281,"idOfCardBeingAttacked":232,"stackEffectType":4}} 
 Player 2 02:31:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Conjoined Fatty"} 
 Player 2 02:31:08 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":2,"creatorCardId":281,"attackingPlayerCardId":281,"idOfCardBeingAttacked":232,"stackEffectType":4}} 
 Player 2 02:31:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":10,"_text":"Add DeclareAttack 2 "}} 
 Player 2 02:31:08 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:31:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Conjoined Fatty"} 
 Player 2 02:31:08 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":281,"attackingPlayerCardId":281,"idOfCardBeingAttacked":232,"stackEffectType":4}} 
 Player 2 02:31:08 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 2 02:31:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":11,"_text":"Response Adding DeclareAttack 2"},"childOfId":10} 
 Player 2 02:31:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 
 Player 2 02:31:08 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:31:08 $ACTION_MASSAGE_REMOVE:  

 {"id":12} 
 Player 2 02:31:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 
 Player 2 02:31:08 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:31:08 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:31:08 $ACTION_MASSAGE_REMOVE:  

 {"id":13} 
 Player 2 02:31:08 $ACTION_MASSAGE_REMOVE:  

 {"id":11} 
 Player 2 02:31:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":14,"_text":"Resolve DeclareAttack 2 "}} 
 Player 2 02:31:08 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":232,"particleType":5} 
 Player 2 02:31:08 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":true,"index":4,"originStackId":2},"isAfterActivation":true,"index":4} 
 Player 2 02:31:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Conjoined Fatty"} 
 Player 2 02:31:08 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":281,"attackingPlayerCardId":281,"idOfCardBeingAttacked":232,"stackEffectType":4}} 
 Player 2 02:31:08 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 2 02:31:08 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:31:09 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":2,"creatorCardId":281,"attackingPlayerCardId":281,"idOfCardBeingAttacked":232,"stackEffectType":4}} 
 Player 2 02:31:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":15,"_text":"Remove After Resolve DeclareAttack 2  "}} 
 Player 2 02:31:09 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:31:09 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":281,"attackingPlayerCardId":281,"idOfCardBeingAttacked":232,"stackEffectType":4}} 
 Player 2 02:31:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":16,"_text":"Response Remove After Resolve DeclareAttack 2"},"childOfId":15} 
 Player 2 02:31:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 
 Player 2 02:31:09 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:31:09 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:31:09 $ACTION_MASSAGE_REMOVE:  

 {"id":17} 
 Player 2 02:31:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 
 Player 2 02:31:09 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:31:09 $ACTION_MASSAGE_REMOVE:  

 {"id":18} 
 Player 2 02:31:09 $ACTION_MASSAGE_REMOVE:  

 {"id":16} 
 Player 2 02:31:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":19,"_text":"Stack Was Emptied "}} 
 Player 2 02:31:09 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:31:09 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 2 02:31:09 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 2 02:31:09 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 2 02:31:09 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 2 02:31:09 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 2 02:31:09 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 2 02:31:09 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 2 02:31:09 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 2 02:31:09 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 2 02:31:09 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 2 02:31:09 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 2 02:31:10 $NEXT_STACK_ID:  
 Player 2 02:31:10 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:31:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 02:31:10 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":281,"rollingPlayerCardId":281,"stackEffectType":2,"attackedMonsterCardId":232}} 
 Player 2 02:31:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 02:31:10 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":281,"rollingPlayerCardId":281,"stackEffectType":2,"attackedMonsterCardId":232}} 
 Player 2 02:31:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":20,"_text":"Add AttackRoll 3 "}} 
 Player 2 02:31:10 $ROLL_DICE:  

 {"playerId":2} 
 Player 2 02:31:10 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 2 02:31:11 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 2 02:31:12 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":6} 
 Player 2 02:31:12 $UPDATE_STACK_VIS:  

 {"stackId":3,"text":"player rolled 6 vs Conjoined Fatty<Monster>"} 
 Player 2 02:31:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Conjoined Fatty<Monster>"} 
 Player 2 02:31:12 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:31:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Conjoined Fatty<Monster>"} 
 Player 2 02:31:12 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":281,"numberRolled":6,"rollingPlayerCardId":281,"stackEffectType":2,"attackedMonsterCardId":232}} 
 Player 2 02:31:12 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 2 02:31:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":21,"_text":"Response Adding AttackRoll 3"},"childOfId":20} 
 Player 2 02:31:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 
 Player 2 02:31:12 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:31:12 $ACTION_MASSAGE_REMOVE:  

 {"id":22} 
 Player 2 02:31:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 
 Player 2 02:31:12 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:31:12 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:31:12 $ACTION_MASSAGE_REMOVE:  

 {"id":23} 
 Player 2 02:31:12 $ACTION_MASSAGE_REMOVE:  

 {"id":21} 
 Player 2 02:31:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":24,"_text":"Resolve AttackRoll 3 "}} 
 Player 2 02:31:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":25,"_text":"Added 0 to original roll"}} 
 Player 2 02:31:12 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":3},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":true,"index":1,"originStackId":3},"isAfterActivation":false,"index":1} 
 Player 2 02:31:12 $NEXT_STACK_ID:  
 Player 2 02:31:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Conjoined Fatty<Monster>"} 
 Player 2 02:31:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Conjoined Fatty<Monster> \n2:Activate Dead Bird effect LookAtPlayerHand<LookAtPlayerHand>"} 
 Player 2 02:31:12 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":287,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":161,"effectToDo":{"effectName":"LookAtPlayerHand","cardEffectNum":0,"cardPlayerId":1,"cardId":161,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 02:31:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Conjoined Fatty<Monster> \n2:Activate Dead Bird effect LookAtPlayerHand<LookAtPlayerHand>"} 
 Player 2 02:31:12 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":287,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":161,"effectToDo":{"effectName":"LookAtPlayerHand","cardEffectNum":0,"cardPlayerId":1,"cardId":161,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 02:31:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":26,"_text":"Add ActivatePassiveEffect 4 "}} 
 Player 2 02:31:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Conjoined Fatty<Monster> \n2:Activate Dead Bird effect LookAtPlayerHand<LookAtPlayerHand>"} 
 Player 2 02:31:12 $PUT_ON_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":287,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":161,"effectToDo":{"effectName":"LookAtPlayerHand","cardEffectNum":0,"cardPlayerId":1,"cardId":161,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14},"playerId":1,"originPlayerId":2} 
 Player 2 02:31:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Conjoined Fatty<Monster> \n2:Activate Dead Bird effect LookAtPlayerHand<LookAtPlayerHand>"} 
 Player 2 02:31:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Conjoined Fatty<Monster> \n2:Activate Dead Bird effect LookAtPlayerHand<LookAtPlayerHand>"} 
 Player 2 02:31:13 $ACTION_MASSAGE_REMOVE:  

 {"id":26} 
 Player 2 02:31:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":27,"_text":"Response Adding ActivatePassiveEffect 4"},"childOfId":26} 
 Player 2 02:31:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":28,"_text":"Wait For Response From Player 1 "},"childOfId":26} 
 Player 2 02:31:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:31:13 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:31:13 $ACTION_MASSAGE_REMOVE:  

 {"id":28} 
 Player 2 02:31:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":29,"_text":"Wait For Response From Player 2 "},"childOfId":26} 
 Player 2 02:31:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:31:13 $ACTION_MASSAGE_REMOVE:  

 {"id":29} 
 Player 2 02:31:13 $ACTION_MASSAGE_REMOVE:  

 {"id":27} 
 Player 2 02:31:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":30,"_text":"Resolve ActivatePassiveEffect 4 "}} 
 Player 2 02:31:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Conjoined Fatty<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:31:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Conjoined Fatty<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:31:13 $DO_STACK_EFFECT:  

 {"originPlayerId":2,"playerId":1,"currentStack":[{"entityId":3,"creatorCardId":281,"numberRolled":6,"rollingPlayerCardId":281,"stackEffectType":2,"attackedMonsterCardId":232},{"effectCollectedData":{"effectTargets":[281],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":287,"effectCardPlayer":287},"entityId":4,"creatorCardId":287,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":161,"effectToDo":{"effectName":"LookAtPlayerHand","cardEffectNum":0,"cardPlayerId":1,"cardId":161,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}]} 
 Player 2 02:31:15 $ACTION_MASSAGE_REMOVE:  

 {"id":25} 
 Player 2 02:31:29 $MOVE_CARD_END:  

 {"moveIndex":10,"cardId":76,"flipIfFlipped":false,"playerId":1} 
 Player 2 02:31:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Conjoined Fatty<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:31:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Conjoined Fatty<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:31:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Conjoined Fatty<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:31:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Conjoined Fatty<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:31:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Conjoined Fatty<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:31:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Conjoined Fatty<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:31:29 $ACTION_MASSAGE_REMOVE:  

 {"id":30} 
 Player 2 02:31:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:31:29 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":281,"numberRolled":6,"rollingPlayerCardId":281,"stackEffectType":2,"attackedMonsterCardId":232}} 
 Player 2 02:31:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:31:29 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":281,"numberRolled":6,"rollingPlayerCardId":281,"stackEffectType":2,"attackedMonsterCardId":232}} 
 Player 2 02:31:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:31:30 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":287,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":161,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 02:31:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:31:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Activate Dead Bird "} 
 Player 2 02:31:30 $REPLACE_STACK:  

 {"currentStack":[{"entityId":3,"creatorCardId":281,"numberRolled":6,"rollingPlayerCardId":281,"stackEffectType":2,"attackedMonsterCardId":232},{"effectCollectedData":null,"entityId":4,"creatorCardId":287,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":161,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}]} 
 Player 2 02:31:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 02:31:30 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":287,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":161,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 02:31:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":31,"_text":"Remove After Resolve ActivatePassiveEffect 4  "}} 
 Player 2 02:31:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 02:31:30 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":287,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":161,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 02:31:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":32,"_text":"Response Remove After Resolve ActivatePassiveEffect 4"},"childOfId":31} 
 Player 2 02:31:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":33,"_text":"Wait For Response From Player 2 "},"childOfId":31} 
 Player 2 02:31:30 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:31:30 $ACTION_MASSAGE_REMOVE:  

 {"id":33} 
 Player 2 02:31:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":34,"_text":"Wait For Response From Player 1 "},"childOfId":31} 
 Player 2 02:31:30 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:31:30 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:31:30 $ACTION_MASSAGE_REMOVE:  

 {"id":34} 
 Player 2 02:31:30 $ACTION_MASSAGE_REMOVE:  

 {"id":32} 
 Player 2 02:31:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":35,"_text":"Resolve AttackRoll 3 "}} 
 Player 2 02:31:30 $NEXT_STACK_ID:  
 Player 2 02:31:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 02:31:31 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:31:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Conjoined Fatty \n2:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 02:31:31 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":5,"creatorCardId":281,"entityToDoDamageCardId":281,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 02:31:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Conjoined Fatty \n2:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 02:31:31 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":281,"numberRolled":6,"rollingPlayerCardId":281,"stackEffectType":2,"attackedMonsterCardId":232}} 
 Player 2 02:31:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Conjoined Fatty \n2:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 02:31:31 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":5,"creatorCardId":281,"entityToDoDamageCardId":281,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 02:31:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Conjoined Fatty \n2:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 02:31:31 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":281,"numberRolled":6,"rollingPlayerCardId":281,"stackEffectType":2,"attackedMonsterCardId":232}} 
 Player 2 02:31:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Conjoined Fatty \n2:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 02:31:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Conjoined Fatty \n2:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 02:31:31 $REPLACE_STACK:  

 {"currentStack":[{"entityId":5,"creatorCardId":281,"entityToDoDamageCardId":281,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":3,"creatorCardId":281,"numberRolled":6,"rollingPlayerCardId":281,"stackEffectType":2,"attackedMonsterCardId":232}]} 
 Player 2 02:31:31 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":{"type":2,"number":{"type":2,"number":3}}},{"type":2,"number":2},{"type":2,"number":{"type":2,"number":{"type":2,"number":3}}}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":true,"index":1,"originStackId":3},"isAfterActivation":true,"index":1} 
 Player 2 02:31:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Conjoined Fatty \n2:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 02:31:31 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":281,"numberRolled":6,"rollingPlayerCardId":281,"stackEffectType":2,"attackedMonsterCardId":232}} 
 Player 2 02:31:31 $ACTION_MASSAGE_REMOVE:  

 {"id":24} 
 Player 2 02:31:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Conjoined Fatty"} 
 Player 2 02:31:31 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":281,"numberRolled":6,"rollingPlayerCardId":281,"stackEffectType":2,"attackedMonsterCardId":232}} 
 Player 2 02:31:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":36,"_text":"Remove After Resolve AttackRoll 3  "}} 
 Player 2 02:31:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Conjoined Fatty"} 
 Player 2 02:31:31 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":281,"numberRolled":6,"rollingPlayerCardId":281,"stackEffectType":2,"attackedMonsterCardId":232}} 
 Player 2 02:31:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":37,"_text":"Response Remove After Resolve AttackRoll 3"},"childOfId":36} 
 Player 2 02:31:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":38,"_text":"Wait For Response From Player 2 "},"childOfId":36} 
 Player 2 02:31:31 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:31:31 $ACTION_MASSAGE_REMOVE:  

 {"id":38} 
 Player 2 02:31:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":39,"_text":"Wait For Response From Player 1 "},"childOfId":36} 
 Player 2 02:31:31 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:31:31 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:31:32 $ACTION_MASSAGE_REMOVE:  

 {"id":39} 
 Player 2 02:31:32 $ACTION_MASSAGE_REMOVE:  

 {"id":37} 
 Player 2 02:31:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":40,"_text":"Resolve CombatDamage 5 "}} 
 Player 2 02:31:32 $UPDATE_STACK_VIS:  

 {"stackId":5,"text":"Cain will deal 1 combat damage to Conjoined Fatty"} 
 Player 2 02:31:32 $MONSTER_GET_DAMAGED:  

 {"cardId":232,"hpLeft":3,"damageDealerId":281} 
 Player 2 02:31:32 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":281}],"result":null,"preventMethod":false,"methodScopeId":232,"scopeIsPlayer":false,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 
 Player 2 02:31:32 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":{"type":2,"number":{"type":2,"number":3}}},{"type":0,"number":281},{"type":0,"number":232}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":true,"index":6,"originStackId":5},"isAfterActivation":true,"index":6} 
 Player 2 02:31:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Conjoined Fatty"} 
 Player 2 02:31:32 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":5,"creatorCardId":281,"entityToDoDamageCardId":281,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 02:31:32 $ACTION_MASSAGE_REMOVE:  

 {"id":40} 
 Player 2 02:31:32 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:31:32 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":5,"creatorCardId":281,"entityToDoDamageCardId":281,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 02:31:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":41,"_text":"Remove After Resolve CombatDamage 5  "}} 
 Player 2 02:31:32 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:31:32 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":5,"creatorCardId":281,"entityToDoDamageCardId":281,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 02:31:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":42,"_text":"Response Remove After Resolve CombatDamage 5"},"childOfId":41} 
 Player 2 02:31:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":43,"_text":"Wait For Response From Player 1 "},"childOfId":41} 
 Player 2 02:31:32 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:31:32 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:31:32 $ACTION_MASSAGE_REMOVE:  

 {"id":31} 
 Player 2 02:31:32 $ACTION_MASSAGE_REMOVE:  

 {"id":43} 
 Player 2 02:31:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":44,"_text":"Wait For Response From Player 2 "},"childOfId":41} 
 Player 2 02:31:33 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:31:33 $ACTION_MASSAGE_REMOVE:  

 {"id":44} 
 Player 2 02:31:33 $ACTION_MASSAGE_REMOVE:  

 {"id":42} 
 Player 2 02:31:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":45,"_text":"Stack Was Emptied "}} 
 Player 2 02:31:33 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:31:33 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 2 02:31:33 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 2 02:31:33 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 2 02:31:33 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 2 02:31:33 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 2 02:31:33 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 2 02:31:33 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 2 02:31:33 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 2 02:31:33 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 2 02:31:33 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 2 02:31:33 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 2 02:31:33 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 2 02:31:33 $ACTION_MASSAGE_REMOVE:  

 {"id":24} 
 Player 2 02:31:33 $ACTION_MASSAGE_REMOVE:  

 {"id":25} 
 Player 2 02:31:33 $ACTION_MASSAGE_REMOVE:  

 {"id":26} 
 Player 2 02:31:33 $ACTION_MASSAGE_REMOVE:  

 {"id":30} 
 Player 2 02:31:33 $ACTION_MASSAGE_REMOVE:  

 {"id":31} 
 Player 2 02:31:33 $ACTION_MASSAGE_REMOVE:  

 {"id":35} 
 Player 2 02:31:33 $ACTION_MASSAGE_REMOVE:  

 {"id":36} 
 Player 2 02:31:33 $ACTION_MASSAGE_REMOVE:  

 {"id":40} 
 Player 2 02:31:33 $ACTION_MASSAGE_REMOVE:  

 {"id":41} 
 Player 2 02:31:33 $ACTION_MASSAGE_REMOVE:  

 {"id":45} 
 Player 2 02:31:33 $ACTION_MASSAGE_REMOVE:  

 {"id":36} 
 Player 2 02:31:34 $ACTION_MASSAGE_REMOVE:  

 {"id":45} 
 Player 2 02:31:35 $ACTION_MASSAGE_REMOVE:  

 {"id":41} 
 Player 2 02:35:11 $MATCH: 