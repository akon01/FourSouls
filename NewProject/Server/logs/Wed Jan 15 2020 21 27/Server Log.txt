Start Log 

 Player 1 21:27:15 $MATCH:  

 Player 1 21:27:16 $START_GAME:  

 Player 2 21:27:16 $MOVE_TO_TABLE:  

 Player 1 21:27:16 $MOVE_TO_TABLE:  

 Player 2 21:27:24 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 1 21:27:24 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 21:27:24 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":285,"itemCardId":286} 

 Player 2 21:27:24 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":278}],"result":true,"preventMethod":false,"methodScopeId":277,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 21:27:24 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":277,"itemCardId":278} 

 Player 2 21:27:24 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[73,118,129,114,135,124,134,31,95,39,64,72,142,68,101,30,92,49,10,27,133,21,87,83,137,125,74,48,8,112,97,52,110,28,115,63,105,11,119,15,90,26,85,106,14,36,35,84,40,126,62,123,127,79,130,57,42,47,18,54,100,16,17,69,139,33,53,104,67,99,59,45,34,132,71,94,128,7,29,77,66,107,117,37,121,70,116,78,12,81,23,9,65,24,76,103,109,102,22,60,44,111,19,122,38,96,88,108,56,138,113,55,46,89,86,131,50,13,20,136,32,75,93,25,140,41,43,51,120,61,141,58,82,98,80,91]} 

 Player 2 21:27:24 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[232,252,267,243,254,262,231,257,276,266,273,236,255,265,256,245,239,237,247,253,235,270,230,234,242,223,263,228,224,246,250,259,229,240,258,269,248,233,226,244,264,275,241,225,260,272,261,274,271,249,268,238,227,251]} 

 Player 2 21:27:24 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[170,185,179,182,208,211,168,150,178,160,161,191,183,196,149,217,162,174,167,158,152,153,189,148,173,206,146,199,207,155,193,205,151,200,197,145,159,184,181,202,180,171,177,219,220,186,188,172,164,215,203,187,212,216,190,209,213,192,218,147,157,156,194,214,198,204,210,165,176,169,154,163,166,195,201,175]} 

 Player 2 21:27:24 $DRAW_CARD:  
{"deckType":5} 

 Player 2 21:27:24 $FLIP_CARD:  
{"cardId":175} 

 Player 2 21:27:24 $ADD_STORE_CARD:  
{"cardId":175} 

 Player 2 21:27:24 $DRAW_CARD:  
{"deckType":5} 

 Player 2 21:27:24 $FLIP_CARD:  
{"cardId":201} 

 Player 2 21:27:24 $ADD_STORE_CARD:  
{"cardId":201} 

 Player 2 21:27:24 $DRAW_CARD:  
{"deckType":2} 

 Player 2 21:27:25 $FLIP_CARD:  
{"cardId":251} 

 Player 2 21:27:25 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":251} 

 Player 2 21:27:25 $NEW_MONSTER_ON_PLACE:  
{"cardId":251,"monsterPlaceId":1} 

 Player 2 21:27:25 $DRAW_CARD:  
{"deckType":2} 

 Player 2 21:27:25 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":227} 

 Player 2 21:27:25 $DRAW_CARD:  
{"deckType":2} 

 Player 2 21:27:25 $FLIP_CARD:  
{"cardId":238} 

 Player 2 21:27:25 $REGISTER_PASSIVE_ITEM:  
{"cardId":238} 

 Player 2 21:27:25 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":238} 

 Player 2 21:27:25 $NEW_MONSTER_ON_PLACE:  
{"cardId":238,"monsterPlaceId":2} 

 Player 2 21:27:25 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 21:27:25 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":285,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 21:27:25 $DRAW_CARD:  
{"deckType":1} 

 Player 2 21:27:25 $MOVE_CARD:  
{"moveIndex":1,"cardId":91,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 21:27:25 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":286}],"result":true,"preventMethod":false,"methodScopeId":285,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 21:27:25 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":91,"flipIfFlipped":false,"playerId":2} 

 Player 2 21:27:25 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":91} 

 Player 2 21:27:25 $FLIP_CARD:  
{"cardId":91} 

 Player 2 21:27:25 $FLIP_CARD:  
{"cardId":91} 

 Player 2 21:27:26 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":91} 

 Player 2 21:27:26 $DRAW_CARD:  
{"deckType":1} 

 Player 2 21:27:26 $MOVE_CARD:  
{"moveIndex":2,"cardId":80,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 21:27:26 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":80,"flipIfFlipped":false,"playerId":2} 

 Player 2 21:27:26 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":80} 

 Player 2 21:27:26 $FLIP_CARD:  
{"cardId":80} 

 Player 2 21:27:26 $FLIP_CARD:  
{"cardId":80} 

 Player 2 21:27:26 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":80} 

 Player 2 21:27:26 $DRAW_CARD:  
{"deckType":1} 

 Player 2 21:27:26 $MOVE_CARD:  
{"moveIndex":3,"cardId":98,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 21:27:26 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":98,"flipIfFlipped":false,"playerId":2} 

 Player 2 21:27:26 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":98} 

 Player 2 21:27:26 $FLIP_CARD:  
{"cardId":98} 

 Player 2 21:27:26 $FLIP_CARD:  
{"cardId":98} 

 Player 2 21:27:27 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":98} 

 Player 2 21:27:27 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 21:27:27 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":277,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 21:27:27 $DRAW_CARD:  
{"deckType":1} 

 Player 2 21:27:27 $MOVE_CARD:  
{"moveIndex":4,"cardId":82,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 21:27:27 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":82,"flipIfFlipped":false,"playerId":2} 

 Player 2 21:27:27 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":82} 

 Player 2 21:27:27 $FLIP_CARD:  
{"cardId":82} 

 Player 2 21:27:27 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":82} 

 Player 2 21:27:27 $DRAW_CARD:  
{"deckType":1} 

 Player 2 21:27:27 $MOVE_CARD:  
{"moveIndex":5,"cardId":58,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 21:27:27 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":58,"flipIfFlipped":false,"playerId":2} 

 Player 2 21:27:27 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":58} 

 Player 2 21:27:28 $FLIP_CARD:  
{"cardId":58} 

 Player 2 21:27:28 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":58} 

 Player 2 21:27:28 $DRAW_CARD:  
{"deckType":1} 

 Player 2 21:27:28 $MOVE_CARD:  
{"moveIndex":6,"cardId":141,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 21:27:28 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":141,"flipIfFlipped":false,"playerId":2} 

 Player 2 21:27:28 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":141} 

 Player 2 21:27:28 $FLIP_CARD:  
{"cardId":141} 

 Player 2 21:27:28 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":141} 

 Player 2 21:27:28 $GAME_HAS_STARTED:  

 Player 2 21:27:28 $SET_TURN:  
{"playerId":1} 

 Player 2 21:27:28 $START_TURN:  
{"playerId":1} 

 Player 2 21:27:28 $UPDATE_ACTIONS:  

 Player 1 21:27:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:27:28 $NEXT_STACK_ID:  

 Player 1 21:27:28 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:27:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 21:27:28 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":285,"turnPlayerCardId":285,"stackEffectType":13}} 

 Player 1 21:27:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 21:27:28 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":285,"turnPlayerCardId":285,"stackEffectType":13}} 

 Player 1 21:27:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 1 21:27:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:27:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 21:27:28 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":285,"turnPlayerCardId":285,"stackEffectType":13}} 

 Player 1 21:27:28 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 21:27:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 1 21:27:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 1 21:27:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:27:28 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 21:27:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 1 21:27:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:27:29 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:27:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 21:27:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 21:27:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 21:27:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 21:27:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 21:27:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 21:27:29 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:27:29 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 21:27:29 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 21:27:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 1 21:27:29 $DRAW_CARD:  
{"deckType":1} 

 Player 1 21:27:29 $MOVE_CARD:  
{"moveIndex":7,"cardId":61,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 21:27:29 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":61,"flipIfFlipped":false,"playerId":1} 

 Player 1 21:27:29 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":61} 

 Player 1 21:27:29 $FLIP_CARD:  
{"cardId":61} 

 Player 1 21:27:29 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":61} 

 Player 1 21:27:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 21:27:29 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":285,"turnPlayerCardId":285,"stackEffectType":13}} 

 Player 1 21:27:29 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 21:27:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:27:29 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":285,"turnPlayerCardId":285,"stackEffectType":13}} 

 Player 1 21:27:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 1 21:27:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:27:30 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":285,"turnPlayerCardId":285,"stackEffectType":13}} 

 Player 1 21:27:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 1 21:27:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 1 21:27:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:27:30 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:27:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 21:27:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 21:27:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 21:27:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 21:27:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 21:27:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 21:27:30 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:27:30 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 1 21:27:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 1 21:27:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:27:30 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 1 21:27:30 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 1 21:27:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 1 21:27:30 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:27:30 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 21:27:30 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 21:27:30 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 21:27:30 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 21:27:30 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 21:27:30 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 21:27:30 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 21:27:31 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 21:27:32 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 21:27:36 $MOVE_CARD:  
{"moveIndex":8,"cardId":161,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 

 Player 1 21:27:36 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":161,"flipIfFlipped":true,"playerId":2} 

 Player 2 21:27:36 $REGISTER_PASSIVE_ITEM:  
{"cardId":161} 

 Player 2 21:27:36 $MOVE_CARD:  
{"moveIndex":9,"cardId":161,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 

 Player 1 21:27:37 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":161,"flipIfFlipped":true,"playerId":2} 

 Player 2 21:27:37 $ADD_AN_ITEM:  
{"playerId":2,"cardId":161,"isReward":true} 

 Player 2 21:27:37 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":161}],"result":true,"preventMethod":false,"methodScopeId":277,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 1 21:27:45 $SHOW_DECISION:  
{"startCardId":285,"endCardId":238} 

 Player 1 21:27:48 $NEXT_STACK_ID:  

 Player 1 21:27:48 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:27:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Dark One"} 

 Player 1 21:27:48 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":285,"attackingPlayerCardId":285,"idOfCardBeingAttacked":238,"stackEffectType":4}} 

 Player 1 21:27:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Dark One"} 

 Player 1 21:27:48 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":285,"attackingPlayerCardId":285,"idOfCardBeingAttacked":238,"stackEffectType":4}} 

 Player 1 21:27:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add DeclareAttack 2 "}} 

 Player 1 21:27:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:27:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Dark One"} 

 Player 1 21:27:48 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":285,"attackingPlayerCardId":285,"idOfCardBeingAttacked":238,"stackEffectType":4}} 

 Player 1 21:27:48 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 21:27:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding DeclareAttack 2"},"childOfId":10} 

 Player 1 21:27:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 1 21:27:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:27:48 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 1 21:27:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 1 21:27:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:27:49 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:27:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 21:27:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 21:27:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Dark One"} 

 Player 2 21:27:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Dark One"} 

 Player 2 21:27:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Dark One"} 

 Player 2 21:27:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Dark One"} 

 Player 2 21:27:49 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:27:49 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 1 21:27:49 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 1 21:27:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve DeclareAttack 2 "}} 

 Player 1 21:27:49 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":238,"particleType":5} 

 Player 1 21:27:49 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":285,"scopeIsPlayer":true,"index":2,"originStackId":2},"isAfterActivation":true,"index":2} 

 Player 1 21:27:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Dark One"} 

 Player 1 21:27:49 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":285,"attackingPlayerCardId":285,"idOfCardBeingAttacked":238,"stackEffectType":4}} 

 Player 1 21:27:49 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 21:27:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:27:49 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":285,"attackingPlayerCardId":285,"idOfCardBeingAttacked":238,"stackEffectType":4}} 

 Player 1 21:27:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve DeclareAttack 2  "}} 

 Player 1 21:27:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:27:49 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":285,"attackingPlayerCardId":285,"idOfCardBeingAttacked":238,"stackEffectType":4}} 

 Player 1 21:27:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve DeclareAttack 2"},"childOfId":15} 

 Player 1 21:27:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 1 21:27:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:27:49 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:27:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Dark One"} 

 Player 2 21:27:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Dark One"} 

 Player 2 21:27:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Dark One"} 

 Player 2 21:27:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Dark One"} 

 Player 2 21:27:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Dark One"} 

 Player 2 21:27:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Dark One"} 

 Player 2 21:27:49 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:27:49 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 1 21:27:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 1 21:27:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:27:50 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 1 21:27:50 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 1 21:27:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 1 21:27:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:27:50 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 21:27:50 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 21:27:50 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 21:27:50 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 21:27:50 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 21:27:50 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 21:27:50 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 21:27:50 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 21:27:50 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 21:27:50 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 21:27:50 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 21:27:51 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 21:27:52 $NEXT_STACK_ID:  

 Player 1 21:27:52 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:27:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster>"} 

 Player 1 21:27:52 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":285,"rollingPlayerCardId":285,"stackEffectType":2,"attackedMonsterCardId":238}} 

 Player 1 21:27:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster>"} 

 Player 1 21:27:52 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":285,"rollingPlayerCardId":285,"stackEffectType":2,"attackedMonsterCardId":238}} 

 Player 1 21:27:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add AttackRoll 3 "}} 

 Player 1 21:27:52 $ROLL_DICE:  
{"playerId":1} 

 Player 1 21:27:52 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 21:27:52 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 21:27:52 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 21:27:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster>"} 

 Player 2 21:27:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster>"} 

 Player 1 21:27:53 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":5} 

 Player 1 21:27:53 $UPDATE_STACK_VIS:  
{"stackId":3,"text":"player rolled 5 vs Dark One<Monster>"} 

 Player 1 21:27:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 5 vs Dark One<Monster>"} 

 Player 1 21:27:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:27:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 5 vs Dark One<Monster>"} 

 Player 1 21:27:53 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":285,"numberRolled":5,"rollingPlayerCardId":285,"stackEffectType":2,"attackedMonsterCardId":238}} 

 Player 1 21:27:53 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 21:27:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding AttackRoll 3"},"childOfId":20} 

 Player 1 21:27:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 1 21:27:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:27:53 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 1 21:27:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 1 21:27:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:27:54 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:27:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster>"} 

 Player 2 21:27:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster>"} 

 Player 2 21:27:54 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:27:54 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 1 21:27:54 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 1 21:27:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve AttackRoll 3 "}} 

 Player 1 21:27:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Added 0 to original roll"}} 

 Player 1 21:27:54 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":3},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":285,"scopeIsPlayer":true,"index":1,"originStackId":3},"isAfterActivation":false,"index":1} 

 Player 1 21:27:54 $NEXT_STACK_ID:  

 Player 1 21:27:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 5 vs Dark One<Monster>"} 

 Player 1 21:27:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 5 vs Dark One<Monster> \n2:Activate Dead Bird effect ChainEffects<ChainEffects>"} 

 Player 1 21:27:54 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":277,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":161,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":161,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 21:27:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 5 vs Dark One<Monster> \n2:Activate Dead Bird effect ChainEffects<ChainEffects>"} 

 Player 1 21:27:54 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":277,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":161,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":161,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 21:27:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Add ActivatePassiveEffect 4 "}} 

 Player 1 21:27:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 5 vs Dark One<Monster> \n2:Activate Dead Bird effect ChainEffects<ChainEffects>"} 

 Player 1 21:27:54 $PUT_ON_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":277,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":161,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":161,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14},"playerId":2,"originPlayerId":1} 

 Player 2 21:27:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster>"} 

 Player 2 21:27:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster>"} 

 Player 2 21:27:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 2 21:27:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 2 21:27:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 2 21:27:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 2 21:27:54 $LOG_ERROR:  
"no MetaIndex" 
//////Error From Player 2////
  

 Player 2 21:27:54 $LOG_ERROR:  
//////Error From Player 2////
 [object Object]
////// 

 Player 2 21:27:54 $LOG_ERROR:  
"no MetaIndex" 
//////Error From Player 2////
  

 Player 2 21:27:54 $LOG_ERROR:  
//////Error From Player 2////
 [object Object]
////// 

 Player 2 21:27:54 $LOG_ERROR:  
"no MetaIndex" 
//////Error From Player 2////
  

 Player 2 21:27:54 $LOG_ERROR:  
//////Error From Player 2////
 [object Object]
////// 

 Player 2 21:27:55 $LOG_ERROR:  
{"message":"\"Cannot read property 'getComponent' of undefined\"","stack":"\"TypeError: Cannot read property 'getComponent' of undefined\\n    at http://localhost:7456/preview-scripts/assets/Script/Managers/DataInterpreter.js:159:56\\n    at Array.map (<anonymous>)\\n    at Function.DataInterpreter.convertToServerData (http://localhost:7456/preview-scripts/assets/Script/Managers/DataInterpreter.js:152:75)\\n    at CardEffect.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/CardEffect.js:362:62)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.throw (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\\n    at rejected (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89794:36)\""} 
//////Error From Player 2////
  

 Player 2 21:27:55 $LOG_ERROR:  
//////Error From Player 2////

 "\"Cannot read property 'getComponent' of undefined\""

 + "\"TypeError: Cannot read property 'getComponent' of undefined\
    at http://localhost:7456/preview-scripts/assets/Script/Managers/DataInterpreter.js:159:56\
    at Array.map (<anonymous>)\
    at Function.DataInterpreter.convertToServerData (http://localhost:7456/preview-scripts/assets/Script/Managers/DataInterpreter.js:152:75)\
    at CardEffect.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/CardEffect.js:362:62)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.throw (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at rejected (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89794:36)\""

////// 
//////Error From Player 2////

 "\"Cannot read property 'getComponent' of undefined\""

 + "\"TypeError: Cannot read property 'getComponent' of undefined\
    at http://localhost:7456/preview-scripts/assets/Script/Managers/DataInterpreter.js:159:56\
    at Array.map (<anonymous>)\
    at Function.DataInterpreter.convertToServerData (http://localhost:7456/preview-scripts/assets/Script/Managers/DataInterpreter.js:152:75)\
    at CardEffect.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/CardEffect.js:362:62)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.throw (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at rejected (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89794:36)\""

////// 

 Player 2 21:27:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 2 21:27:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 2 21:27:55 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":277,"effectCardPlayer":277},"entityId":4,"creatorCardId":277,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":161,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":161,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 21:27:55 $END_PUT_ON_STACK:  
{"playerId":1} 

 Player 1 21:27:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 5 vs Dark One<Monster> \n2:Activate Dead Bird effect ChainEffects<ChainEffects>"} 

 Player 1 21:27:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 5 vs Dark One<Monster> \n2:Activate Dead Bird effect ChainEffects<ChainEffects>"} 

 Player 1 21:27:55 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 1 21:27:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Response Adding ActivatePassiveEffect 4"},"childOfId":26} 

 Player 1 21:27:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":26} 

 Player 1 21:27:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:27:55 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:27:55 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:27:55 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 1 21:27:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Wait For Response From Player 1 "},"childOfId":26} 

 Player 1 21:27:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:27:55 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 1 21:27:55 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 1 21:27:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Resolve ActivatePassiveEffect 4 "}} 

 Player 1 21:27:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 5 vs Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 1 21:27:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 5 vs Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 1 21:27:55 $DO_STACK_EFFECT:  
{"originPlayerId":1,"playerId":2,"currentStack":[{"entityId":3,"creatorCardId":285,"numberRolled":5,"rollingPlayerCardId":285,"stackEffectType":2,"attackedMonsterCardId":238},{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":277,"effectCardPlayer":277},"entityId":4,"creatorCardId":277,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":161,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":161,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}]} 

 Player 2 21:27:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 2 21:27:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 2 21:27:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 2 21:27:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 2 21:27:56 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":161,"particleType":6} 

 Player 1 21:27:57 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 21:27:57 $DISABLE_PARTICLE_EFFECT:  
{"cardId":161,"particleType":6} 

 Player 2 21:42:47 $LOG_ERROR:  
{"message":"\"Cannot read property 'getTargets' of undefined\"","stack":"\"TypeError: Cannot read property 'getTargets' of undefined\\n    at TakeLootFromPlayer.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardEffects/TakeLootFromPlayer.js:31:40)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\\n    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\\n    at new Promise (<anonymous>)\\n    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\\n    at TakeLootFromPlayer.doEffect (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardEffects/TakeLootFromPlayer.js:25:16)\\n    at ChainEffects.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardEffects/ChainEffects.js:78:53)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\""} 
//////Error From Player 2////
  

 Player 2 21:42:47 $LOG_ERROR:  
//////Error From Player 2////

 "\"Cannot read property 'getTargets' of undefined\""

 + "\"TypeError: Cannot read property 'getTargets' of undefined\
    at TakeLootFromPlayer.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardEffects/TakeLootFromPlayer.js:31:40)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\
    at new Promise (<anonymous>)\
    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\
    at TakeLootFromPlayer.doEffect (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardEffects/TakeLootFromPlayer.js:25:16)\
    at ChainEffects.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardEffects/ChainEffects.js:78:53)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\""

////// 
//////Error From Player 2////

 "\"Cannot read property 'getTargets' of undefined\""

 + "\"TypeError: Cannot read property 'getTargets' of undefined\
    at TakeLootFromPlayer.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardEffects/TakeLootFromPlayer.js:31:40)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\
    at new Promise (<anonymous>)\
    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\
    at TakeLootFromPlayer.doEffect (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardEffects/TakeLootFromPlayer.js:25:16)\
    at ChainEffects.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardEffects/ChainEffects.js:78:53)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\""

////// 

 Player 2 21:42:47 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":{"type":2,"number":3}},{"type":2,"number":{"type":2,"number":2}},{"type":2,"number":{"type":2,"number":4}}],"result":null,"preventMethod":false,"methodScopeId":285,"scopeIsPlayer":true,"index":1},"isAfterActivation":false,"index":1} 

 Player 2 21:42:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 2 21:42:47 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":277,"effectCardPlayer":277},"entityId":4,"creatorCardId":277,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":161,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 21:42:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 2 21:42:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 2 21:42:47 $FINISH_DO_STACK_EFFECT:  
{"playerId":1,"newStack":[{"entityId":3,"creatorCardId":285,"numberRolled":5,"rollingPlayerCardId":285,"stackEffectType":2,"attackedMonsterCardId":238},{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":277,"effectCardPlayer":277},"entityId":4,"creatorCardId":277,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":161,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}]} 

 Player 1 21:42:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 5 vs Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 1 21:42:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 5 vs Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 1 21:42:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 5 vs Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 1 21:42:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 5 vs Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 1 21:42:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 5 vs Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 1 21:42:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 5 vs Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 1 21:42:47 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 21:42:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 1 21:42:47 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":285,"numberRolled":5,"rollingPlayerCardId":285,"stackEffectType":2,"attackedMonsterCardId":238}} 

 Player 1 21:42:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 1 21:42:48 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":285,"numberRolled":5,"rollingPlayerCardId":285,"stackEffectType":2,"attackedMonsterCardId":238}} 

 Player 1 21:42:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 1 21:42:48 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":277,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":161,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 21:42:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 1 21:42:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 1 21:42:48 $REPLACE_STACK:  
{"currentStack":[{"entityId":3,"creatorCardId":285,"numberRolled":5,"rollingPlayerCardId":285,"stackEffectType":2,"attackedMonsterCardId":238},{"effectCollectedData":null,"entityId":4,"creatorCardId":277,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":161,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}]} 

 Player 1 21:42:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster>"} 

 Player 1 21:42:48 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":277,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":161,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 21:42:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Remove After Resolve ActivatePassiveEffect 4  "}} 

 Player 1 21:42:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster>"} 

 Player 1 21:42:48 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":277,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":161,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 21:42:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Response Remove After Resolve ActivatePassiveEffect 4"},"childOfId":31} 

 Player 1 21:42:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":31} 

 Player 1 21:42:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:42:48 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 1 21:42:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Wait For Response From Player 2 "},"childOfId":31} 

 Player 1 21:42:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:42:48 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:42:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 2 21:42:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 2 21:42:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 2 21:42:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 2 21:42:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 2 21:42:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 2 21:42:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 2 21:42:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 2 21:42:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 2 21:42:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 2 21:42:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 2 21:42:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 2 21:42:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 2 21:42:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 2 21:42:49 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:42:49 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 1 21:42:49 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 1 21:42:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Resolve AttackRoll 3 "}} 

 Player 1 21:42:49 $NEXT_STACK_ID:  

 Player 1 21:42:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster>"} 

 Player 1 21:42:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:42:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One \n2:Player 1 is rolling against Dark One<Monster>"} 

 Player 1 21:42:49 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":285,"entityToDoDamageCardId":285,"entityToTakeDamageCardId":238,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 21:42:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One \n2:Player 1 is rolling against Dark One<Monster>"} 

 Player 1 21:42:49 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":285,"numberRolled":5,"rollingPlayerCardId":285,"stackEffectType":2,"attackedMonsterCardId":238}} 

 Player 1 21:42:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One \n2:Player 1 is rolling against Dark One<Monster>"} 

 Player 1 21:42:49 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":285,"entityToDoDamageCardId":285,"entityToTakeDamageCardId":238,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 21:42:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One \n2:Player 1 is rolling against Dark One<Monster>"} 

 Player 1 21:42:49 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":285,"numberRolled":5,"rollingPlayerCardId":285,"stackEffectType":2,"attackedMonsterCardId":238}} 

 Player 1 21:42:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One \n2:Player 1 is rolling against Dark One<Monster>"} 

 Player 1 21:42:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One \n2:Player 1 is rolling against Dark One<Monster>"} 

 Player 1 21:42:49 $REPLACE_STACK:  
{"currentStack":[{"entityId":5,"creatorCardId":285,"entityToDoDamageCardId":285,"entityToTakeDamageCardId":238,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":3,"creatorCardId":285,"numberRolled":5,"rollingPlayerCardId":285,"stackEffectType":2,"attackedMonsterCardId":238}]} 

 Player 1 21:42:49 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":{"type":2,"number":{"type":2,"number":3}}},{"type":2,"number":2},{"type":2,"number":{"type":2,"number":{"type":2,"number":4}}}],"result":null,"preventMethod":false,"methodScopeId":285,"scopeIsPlayer":true,"index":1,"originStackId":3},"isAfterActivation":true,"index":1} 

 Player 1 21:42:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One \n2:Player 1 is rolling against Dark One<Monster>"} 

 Player 1 21:42:49 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":285,"numberRolled":5,"rollingPlayerCardId":285,"stackEffectType":2,"attackedMonsterCardId":238}} 

 Player 1 21:42:49 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 21:42:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One"} 

 Player 1 21:42:49 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":285,"numberRolled":5,"rollingPlayerCardId":285,"stackEffectType":2,"attackedMonsterCardId":238}} 

 Player 1 21:42:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Remove After Resolve AttackRoll 3  "}} 

 Player 1 21:42:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One"} 

 Player 1 21:42:49 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":285,"numberRolled":5,"rollingPlayerCardId":285,"stackEffectType":2,"attackedMonsterCardId":238}} 

 Player 1 21:42:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Response Remove After Resolve AttackRoll 3"},"childOfId":36} 

 Player 1 21:42:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 1 "},"childOfId":36} 

 Player 1 21:42:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:42:49 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 1 21:42:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Wait For Response From Player 2 "},"childOfId":36} 

 Player 1 21:42:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:42:49 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:42:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster>"} 

 Player 2 21:42:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster>"} 

 Player 2 21:42:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One"} 

 Player 2 21:42:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One"} 

 Player 2 21:42:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One"} 

 Player 2 21:42:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One"} 

 Player 2 21:42:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One"} 

 Player 2 21:42:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One"} 

 Player 2 21:42:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One"} 

 Player 2 21:42:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One"} 

 Player 2 21:42:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One"} 

 Player 2 21:42:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One"} 

 Player 2 21:42:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One \n2:Player 1 is rolling against Dark One<Monster>"} 

 Player 2 21:42:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One \n2:Player 1 is rolling against Dark One<Monster>"} 

 Player 2 21:42:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One \n2:Player 1 is rolling against Dark One<Monster>"} 

 Player 2 21:42:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One \n2:Player 1 is rolling against Dark One<Monster>"} 

 Player 2 21:42:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One \n2:Player 1 is rolling against Dark One<Monster>"} 

 Player 2 21:42:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One \n2:Player 1 is rolling against Dark One<Monster>"} 

 Player 2 21:42:50 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:42:50 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 1 21:42:50 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 1 21:42:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Resolve CombatDamage 5 "}} 

 Player 1 21:42:50 $UPDATE_STACK_VIS:  
{"stackId":5,"text":"Isaac will deal 1 combat damage to Dark One"} 

 Player 1 21:42:50 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":285}],"result":null,"preventMethod":false,"methodScopeId":238,"scopeIsPlayer":false,"index":2,"originStackId":-1},"isAfterActivation":false,"index":2} 

 Player 1 21:42:50 $NEXT_STACK_ID:  

 Player 1 21:42:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One"} 

 Player 1 21:42:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One \n2:Activate Dark One effect GainStats<GainStats>"} 

 Player 1 21:42:50 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":6,"creatorCardId":285,"hasLockingStackEffect":false,"cardActivatorId":238,"cardWithEffectId":238,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":238,"cardId":238,"effctType":0},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 21:42:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One \n2:Activate Dark One effect GainStats<GainStats>"} 

 Player 1 21:42:50 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":6,"creatorCardId":285,"hasLockingStackEffect":false,"cardActivatorId":238,"cardWithEffectId":238,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":238,"cardId":238,"effctType":0},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 21:42:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Add ActivatePassiveEffect 6 "}} 

 Player 1 21:42:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One \n2:Activate Dark One effect GainStats<GainStats>"} 

 Player 1 21:42:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One \n2:Activate Dark One effect GainStats<GainStats>"} 

 Player 1 21:42:50 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[238],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":238,"effectCardPlayer":238},"entityId":6,"creatorCardId":285,"hasLockingStackEffect":false,"cardActivatorId":238,"cardWithEffectId":238,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":238,"cardId":238,"effctType":0},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 21:42:50 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 1 21:42:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Response Adding ActivatePassiveEffect 6"},"childOfId":41} 

 Player 1 21:42:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 2 "},"childOfId":41} 

 Player 1 21:42:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:42:51 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 1 21:42:51 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 2 21:42:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One"} 

 Player 2 21:42:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One"} 

 Player 2 21:42:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One \n2:Activate Dark One "} 

 Player 2 21:42:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One \n2:Activate Dark One "} 

 Player 2 21:42:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One \n2:Activate Dark One "} 

 Player 2 21:42:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One \n2:Activate Dark One "} 

 Player 2 21:42:51 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:42:51 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 1 21:42:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Wait For Response From Player 1 "},"childOfId":41} 

 Player 1 21:42:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:42:51 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 1 21:42:51 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 1 21:42:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Resolve ActivatePassiveEffect 6 "}} 

 Player 1 21:42:51 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":238,"particleType":6} 

 Player 1 21:42:52 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 1 21:42:53 $DISABLE_PARTICLE_EFFECT:  
{"cardId":238,"particleType":6} 

 Player 1 21:42:53 $MONSTER_GAIN_DMG:  
{"cardId":238,"DMGToGain":1} 

 Player 1 21:42:53 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":285}],"result":null,"preventMethod":false,"methodScopeId":238,"scopeIsPlayer":false,"index":2,"originStackId":-1},"isAfterActivation":false,"index":2} 

 Player 1 21:42:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One \n2:Activate Dark One effect GainStats<GainStats>"} 

 Player 1 21:42:53 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[238],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":238,"effectCardPlayer":238},"entityId":6,"creatorCardId":285,"hasLockingStackEffect":false,"cardActivatorId":238,"cardWithEffectId":238,"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 21:42:53 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 1 21:42:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One"} 

 Player 1 21:42:53 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[238],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":238,"effectCardPlayer":238},"entityId":6,"creatorCardId":285,"hasLockingStackEffect":false,"cardActivatorId":238,"cardWithEffectId":238,"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 21:42:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Remove After Resolve ActivatePassiveEffect 6  "}} 

 Player 1 21:42:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One"} 

 Player 1 21:42:53 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[238],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":238,"effectCardPlayer":238},"entityId":6,"creatorCardId":285,"hasLockingStackEffect":false,"cardActivatorId":238,"cardWithEffectId":238,"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 21:42:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Response Remove After Resolve ActivatePassiveEffect 6"},"childOfId":46} 

 Player 1 21:42:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Wait For Response From Player 1 "},"childOfId":46} 

 Player 1 21:42:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:42:53 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 1 21:42:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Wait For Response From Player 2 "},"childOfId":46} 

 Player 1 21:42:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:42:53 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:42:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One \n2:Activate Dark One "} 

 Player 2 21:42:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One \n2:Activate Dark One "} 

 Player 2 21:42:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One \n2:Activate Dark One "} 

 Player 2 21:42:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One \n2:Activate Dark One "} 

 Player 2 21:42:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One \n2:Activate Dark One "} 

 Player 2 21:42:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One \n2:Activate Dark One "} 

 Player 2 21:42:53 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:42:53 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 1 21:42:54 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 1 21:42:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Resolve CombatDamage 5 "}} 

 Player 1 21:42:54 $MONSTER_GET_DAMAGED:  
{"cardId":238,"hpLeft":2,"damageDealerId":285} 

 Player 1 21:42:54 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":285}],"result":null,"preventMethod":false,"methodScopeId":238,"scopeIsPlayer":false,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 1 21:42:54 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":{"type":2,"number":{"type":2,"number":3}}},{"type":0,"number":285},{"type":0,"number":238}],"result":null,"preventMethod":false,"methodScopeId":285,"scopeIsPlayer":true,"index":3,"originStackId":5},"isAfterActivation":true,"index":3} 

 Player 1 21:42:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One"} 

 Player 1 21:42:54 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":285,"entityToDoDamageCardId":285,"entityToTakeDamageCardId":238,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 21:42:54 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 1 21:42:54 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:42:54 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":285,"entityToDoDamageCardId":285,"entityToTakeDamageCardId":238,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 21:42:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Remove After Resolve CombatDamage 5  "}} 

 Player 1 21:42:54 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:42:54 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":285,"entityToDoDamageCardId":285,"entityToTakeDamageCardId":238,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 21:42:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Response Remove After Resolve CombatDamage 5"},"childOfId":51} 

 Player 1 21:42:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Wait For Response From Player 2 "},"childOfId":51} 

 Player 1 21:42:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:42:54 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:42:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One"} 

 Player 2 21:42:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One"} 

 Player 2 21:42:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One"} 

 Player 2 21:42:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One"} 

 Player 2 21:42:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One"} 

 Player 2 21:42:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One"} 

 Player 2 21:42:54 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:42:54 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 1 21:42:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Wait For Response From Player 1 "},"childOfId":51} 

 Player 1 21:42:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:42:54 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 1 21:42:54 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 1 21:42:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Stack Was Emptied "}} 

 Player 1 21:42:54 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:42:55 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 21:42:55 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 21:42:55 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 21:42:55 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 21:42:55 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 21:42:55 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 21:42:55 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 21:42:55 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 21:42:55 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 21:42:55 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 21:42:55 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 21:42:55 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 21:42:55 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 21:42:55 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 21:42:55 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 1 21:42:55 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 21:42:55 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 1 21:42:55 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 1 21:42:55 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 1 21:42:55 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 1 21:42:55 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 1 21:42:55 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 1 21:42:55 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 1 21:42:55 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 1 21:42:55 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 1 21:42:55 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 1 21:42:56 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 1 21:42:56 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 1 21:42:56 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 1 21:43:04 $NEXT_STACK_ID:  

 Player 1 21:43:04 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:43:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster>"} 

 Player 1 21:43:04 $ADD_TO_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":285,"rollingPlayerCardId":285,"stackEffectType":2,"attackedMonsterCardId":238}} 

 Player 1 21:43:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster>"} 

 Player 1 21:43:04 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":285,"rollingPlayerCardId":285,"stackEffectType":2,"attackedMonsterCardId":238}} 

 Player 1 21:43:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":56,"_text":"Add AttackRoll 7 "}} 

 Player 1 21:43:04 $ROLL_DICE:  
{"playerId":1} 

 Player 2 21:43:04 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 21:43:04 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 21:43:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster>"} 

 Player 2 21:43:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster>"} 

 Player 1 21:43:05 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":6} 

 Player 1 21:43:05 $UPDATE_STACK_VIS:  
{"stackId":7,"text":"player rolled 6 vs Dark One<Monster>"} 

 Player 1 21:43:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Dark One<Monster>"} 

 Player 1 21:43:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:43:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Dark One<Monster>"} 

 Player 1 21:43:05 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":285,"numberRolled":6,"rollingPlayerCardId":285,"stackEffectType":2,"attackedMonsterCardId":238}} 

 Player 1 21:43:05 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 1 21:43:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":57,"_text":"Response Adding AttackRoll 7"},"childOfId":56} 

 Player 1 21:43:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":58,"_text":"Wait For Response From Player 1 "},"childOfId":56} 

 Player 1 21:43:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:43:06 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 1 21:43:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":59,"_text":"Wait For Response From Player 2 "},"childOfId":56} 

 Player 1 21:43:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:43:06 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:43:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster>"} 

 Player 2 21:43:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster>"} 

 Player 2 21:43:06 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:43:06 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 1 21:43:06 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 1 21:43:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":60,"_text":"Resolve AttackRoll 7 "}} 

 Player 1 21:43:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":61,"_text":"Added 0 to original roll"}} 

 Player 1 21:43:06 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":3},{"type":2,"number":1},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":285,"scopeIsPlayer":true,"index":3,"originStackId":7},"isAfterActivation":false,"index":3} 

 Player 1 21:43:06 $NEXT_STACK_ID:  

 Player 1 21:43:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Dark One<Monster>"} 

 Player 1 21:43:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Dark One<Monster> \n2:Activate Dead Bird effect ChainEffects<ChainEffects>"} 

 Player 1 21:43:06 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":8,"creatorCardId":277,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":161,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":161,"effctType":0},"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 21:43:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Dark One<Monster> \n2:Activate Dead Bird effect ChainEffects<ChainEffects>"} 

 Player 1 21:43:06 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":8,"creatorCardId":277,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":161,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":161,"effctType":0},"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 21:43:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":62,"_text":"Add ActivatePassiveEffect 8 "}} 

 Player 1 21:43:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Dark One<Monster> \n2:Activate Dead Bird effect ChainEffects<ChainEffects>"} 

 Player 1 21:43:06 $PUT_ON_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":8,"creatorCardId":277,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":161,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":161,"effctType":0},"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":false,"stackEffectType":14},"playerId":2,"originPlayerId":1} 

 Player 2 21:43:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster>"} 

 Player 2 21:43:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster>"} 

 Player 2 21:43:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 2 21:43:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 2 21:43:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 2 21:43:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 2 21:43:07 $LOG_ERROR:  
"no MetaIndex" 
//////Error From Player 2////
  

 Player 2 21:43:07 $LOG_ERROR:  
//////Error From Player 2////
 [object Object]
////// 

 Player 2 21:43:07 $LOG_ERROR:  
"no MetaIndex" 
//////Error From Player 2////
  

 Player 2 21:43:07 $LOG_ERROR:  
//////Error From Player 2////
 [object Object]
////// 

 Player 2 21:43:07 $LOG_ERROR:  
"no MetaIndex" 
//////Error From Player 2////
  

 Player 2 21:43:07 $LOG_ERROR:  
//////Error From Player 2////
 [object Object]
////// 

 Player 2 21:43:07 $LOG_ERROR:  
{"message":"\"Cannot read property 'getComponent' of undefined\"","stack":"\"TypeError: Cannot read property 'getComponent' of undefined\\n    at http://localhost:7456/preview-scripts/assets/Script/Managers/DataInterpreter.js:159:56\\n    at Array.map (<anonymous>)\\n    at Function.DataInterpreter.convertToServerData (http://localhost:7456/preview-scripts/assets/Script/Managers/DataInterpreter.js:152:75)\\n    at CardEffect.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/CardEffect.js:362:62)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.throw (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\\n    at rejected (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89794:36)\""} 
//////Error From Player 2////
  

 Player 2 21:43:07 $LOG_ERROR:  
//////Error From Player 2////

 "\"Cannot read property 'getComponent' of undefined\""

 + "\"TypeError: Cannot read property 'getComponent' of undefined\
    at http://localhost:7456/preview-scripts/assets/Script/Managers/DataInterpreter.js:159:56\
    at Array.map (<anonymous>)\
    at Function.DataInterpreter.convertToServerData (http://localhost:7456/preview-scripts/assets/Script/Managers/DataInterpreter.js:152:75)\
    at CardEffect.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/CardEffect.js:362:62)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.throw (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at rejected (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89794:36)\""

////// 
//////Error From Player 2////

 "\"Cannot read property 'getComponent' of undefined\""

 + "\"TypeError: Cannot read property 'getComponent' of undefined\
    at http://localhost:7456/preview-scripts/assets/Script/Managers/DataInterpreter.js:159:56\
    at Array.map (<anonymous>)\
    at Function.DataInterpreter.convertToServerData (http://localhost:7456/preview-scripts/assets/Script/Managers/DataInterpreter.js:152:75)\
    at CardEffect.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/CardEffect.js:362:62)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.throw (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at rejected (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89794:36)\""

////// 

 Player 2 21:43:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 2 21:43:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 2 21:43:07 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":277,"effectCardPlayer":277},"entityId":8,"creatorCardId":277,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":161,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":161,"effctType":0},"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 21:43:07 $END_PUT_ON_STACK:  
{"playerId":1} 

 Player 1 21:43:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Dark One<Monster> \n2:Activate Dead Bird effect ChainEffects<ChainEffects>"} 

 Player 1 21:43:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Dark One<Monster> \n2:Activate Dead Bird effect ChainEffects<ChainEffects>"} 

 Player 1 21:43:07 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 1 21:43:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":63,"_text":"Response Adding ActivatePassiveEffect 8"},"childOfId":62} 

 Player 1 21:43:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":64,"_text":"Wait For Response From Player 2 "},"childOfId":62} 

 Player 1 21:43:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:43:07 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:43:07 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:43:07 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 1 21:43:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":65,"_text":"Wait For Response From Player 1 "},"childOfId":62} 

 Player 1 21:43:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:43:08 $ACTION_MASSAGE_REMOVE:  
{"id":65} 

 Player 1 21:43:08 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 1 21:43:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":66,"_text":"Resolve ActivatePassiveEffect 8 "}} 

 Player 1 21:43:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 1 21:43:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 1 21:43:08 $DO_STACK_EFFECT:  
{"originPlayerId":1,"playerId":2,"currentStack":[{"entityId":7,"creatorCardId":285,"numberRolled":6,"rollingPlayerCardId":285,"stackEffectType":2,"attackedMonsterCardId":238},{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":277,"effectCardPlayer":277},"entityId":8,"creatorCardId":277,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":161,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":161,"effctType":0},"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":true,"stackEffectType":14}]} 

 Player 2 21:43:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 2 21:43:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 2 21:43:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 2 21:43:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 2 21:43:08 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":161,"particleType":6} 

 Player 1 21:43:09 $ACTION_MASSAGE_REMOVE:  
{"id":61} 

 Player 2 21:43:10 $DISABLE_PARTICLE_EFFECT:  
{"cardId":161,"particleType":6} 

 Player 2 21:43:12 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":{"type":2,"number":3}},{"type":2,"number":{"type":2,"number":1}},{"type":2,"number":{"type":2,"number":4}}],"result":null,"preventMethod":false,"methodScopeId":285,"scopeIsPlayer":true,"index":3},"isAfterActivation":false,"index":3} 

 Player 2 21:43:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 2 21:43:12 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":277,"effectCardPlayer":277},"entityId":8,"creatorCardId":277,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":161,"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 21:43:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 2 21:43:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 2 21:43:12 $FINISH_DO_STACK_EFFECT:  
{"playerId":1,"newStack":[{"entityId":7,"creatorCardId":285,"numberRolled":6,"rollingPlayerCardId":285,"stackEffectType":2,"attackedMonsterCardId":238},{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":277,"effectCardPlayer":277},"entityId":8,"creatorCardId":277,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":161,"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":true,"stackEffectType":14}]} 

 Player 1 21:43:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 1 21:43:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 1 21:43:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 1 21:43:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 1 21:43:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 1 21:43:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 1 21:43:12 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 1 21:43:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 1 21:43:12 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":285,"numberRolled":6,"rollingPlayerCardId":285,"stackEffectType":2,"attackedMonsterCardId":238}} 

 Player 1 21:43:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 1 21:43:12 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":285,"numberRolled":6,"rollingPlayerCardId":285,"stackEffectType":2,"attackedMonsterCardId":238}} 

 Player 1 21:43:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 1 21:43:12 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":8,"creatorCardId":277,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":161,"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 21:43:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 1 21:43:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 1 21:43:13 $REPLACE_STACK:  
{"currentStack":[{"entityId":7,"creatorCardId":285,"numberRolled":6,"rollingPlayerCardId":285,"stackEffectType":2,"attackedMonsterCardId":238},{"effectCollectedData":null,"entityId":8,"creatorCardId":277,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":161,"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":true,"stackEffectType":14}]} 

 Player 1 21:43:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster>"} 

 Player 1 21:43:13 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":8,"creatorCardId":277,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":161,"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 21:43:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":67,"_text":"Remove After Resolve ActivatePassiveEffect 8  "}} 

 Player 1 21:43:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster>"} 

 Player 1 21:43:13 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":8,"creatorCardId":277,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":161,"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 21:43:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":68,"_text":"Response Remove After Resolve ActivatePassiveEffect 8"},"childOfId":67} 

 Player 1 21:43:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":69,"_text":"Wait For Response From Player 1 "},"childOfId":67} 

 Player 1 21:43:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:43:13 $ACTION_MASSAGE_REMOVE:  
{"id":69} 

 Player 1 21:43:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":70,"_text":"Wait For Response From Player 2 "},"childOfId":67} 

 Player 1 21:43:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:43:13 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:43:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 2 21:43:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 2 21:43:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 2 21:43:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 2 21:43:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 2 21:43:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 2 21:43:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 2 21:43:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 2 21:43:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 2 21:43:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 2 21:43:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 2 21:43:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 2 21:43:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 2 21:43:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster> \n2:Activate Dead Bird "} 

 Player 2 21:43:13 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:43:13 $ACTION_MASSAGE_REMOVE:  
{"id":70} 

 Player 1 21:43:14 $ACTION_MASSAGE_REMOVE:  
{"id":68} 

 Player 1 21:43:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":71,"_text":"Resolve AttackRoll 7 "}} 

 Player 1 21:43:14 $NEXT_STACK_ID:  

 Player 1 21:43:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster>"} 

 Player 1 21:43:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:43:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One \n2:Player 1 is rolling against Dark One<Monster>"} 

 Player 1 21:43:14 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":285,"entityToDoDamageCardId":285,"entityToTakeDamageCardId":238,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 21:43:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One \n2:Player 1 is rolling against Dark One<Monster>"} 

 Player 1 21:43:14 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":285,"numberRolled":6,"rollingPlayerCardId":285,"stackEffectType":2,"attackedMonsterCardId":238}} 

 Player 1 21:43:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One \n2:Player 1 is rolling against Dark One<Monster>"} 

 Player 1 21:43:14 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":285,"entityToDoDamageCardId":285,"entityToTakeDamageCardId":238,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 21:43:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One \n2:Player 1 is rolling against Dark One<Monster>"} 

 Player 1 21:43:14 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":285,"numberRolled":6,"rollingPlayerCardId":285,"stackEffectType":2,"attackedMonsterCardId":238}} 

 Player 1 21:43:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One \n2:Player 1 is rolling against Dark One<Monster>"} 

 Player 1 21:43:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One \n2:Player 1 is rolling against Dark One<Monster>"} 

 Player 1 21:43:14 $REPLACE_STACK:  
{"currentStack":[{"entityId":9,"creatorCardId":285,"entityToDoDamageCardId":285,"entityToTakeDamageCardId":238,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":7,"creatorCardId":285,"numberRolled":6,"rollingPlayerCardId":285,"stackEffectType":2,"attackedMonsterCardId":238}]} 

 Player 1 21:43:14 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":{"type":2,"number":{"type":2,"number":3}}},{"type":2,"number":1},{"type":2,"number":{"type":2,"number":{"type":2,"number":4}}}],"result":null,"preventMethod":false,"methodScopeId":285,"scopeIsPlayer":true,"index":3,"originStackId":7},"isAfterActivation":true,"index":3} 

 Player 1 21:43:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One \n2:Player 1 is rolling against Dark One<Monster>"} 

 Player 1 21:43:14 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":285,"numberRolled":6,"rollingPlayerCardId":285,"stackEffectType":2,"attackedMonsterCardId":238}} 

 Player 1 21:43:14 $ACTION_MASSAGE_REMOVE:  
{"id":60} 

 Player 1 21:43:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One"} 

 Player 1 21:43:14 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":285,"numberRolled":6,"rollingPlayerCardId":285,"stackEffectType":2,"attackedMonsterCardId":238}} 

 Player 1 21:43:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":72,"_text":"Remove After Resolve AttackRoll 7  "}} 

 Player 1 21:43:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One"} 

 Player 1 21:43:14 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":285,"numberRolled":6,"rollingPlayerCardId":285,"stackEffectType":2,"attackedMonsterCardId":238}} 

 Player 1 21:43:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":73,"_text":"Response Remove After Resolve AttackRoll 7"},"childOfId":72} 

 Player 1 21:43:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":74,"_text":"Wait For Response From Player 1 "},"childOfId":72} 

 Player 1 21:43:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:43:14 $ACTION_MASSAGE_REMOVE:  
{"id":74} 

 Player 1 21:43:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":75,"_text":"Wait For Response From Player 2 "},"childOfId":72} 

 Player 1 21:43:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:43:15 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:43:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster>"} 

 Player 2 21:43:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Dark One<Monster>"} 

 Player 2 21:43:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One"} 

 Player 2 21:43:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One"} 

 Player 2 21:43:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One"} 

 Player 2 21:43:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One"} 

 Player 2 21:43:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One"} 

 Player 2 21:43:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One"} 

 Player 2 21:43:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One"} 

 Player 2 21:43:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One"} 

 Player 2 21:43:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One"} 

 Player 2 21:43:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One"} 

 Player 2 21:43:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One \n2:Player 1 is rolling against Dark One<Monster>"} 

 Player 2 21:43:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One \n2:Player 1 is rolling against Dark One<Monster>"} 

 Player 2 21:43:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One \n2:Player 1 is rolling against Dark One<Monster>"} 

 Player 2 21:43:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One \n2:Player 1 is rolling against Dark One<Monster>"} 

 Player 2 21:43:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One \n2:Player 1 is rolling against Dark One<Monster>"} 

 Player 2 21:43:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One \n2:Player 1 is rolling against Dark One<Monster>"} 

 Player 2 21:43:15 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:43:15 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 1 21:43:15 $ACTION_MASSAGE_REMOVE:  
{"id":75} 

 Player 1 21:43:15 $ACTION_MASSAGE_REMOVE:  
{"id":73} 

 Player 1 21:43:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":76,"_text":"Resolve CombatDamage 9 "}} 

 Player 1 21:43:15 $UPDATE_STACK_VIS:  
{"stackId":9,"text":"Isaac will deal 1 combat damage to Dark One"} 

 Player 1 21:43:15 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":285}],"result":null,"preventMethod":false,"methodScopeId":238,"scopeIsPlayer":false,"index":4,"originStackId":-1},"isAfterActivation":false,"index":4} 

 Player 1 21:43:15 $NEXT_STACK_ID:  

 Player 1 21:43:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One"} 

 Player 1 21:43:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One \n2:Activate Dark One effect GainStats<GainStats>"} 

 Player 1 21:43:15 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":10,"creatorCardId":285,"hasLockingStackEffect":false,"cardActivatorId":238,"cardWithEffectId":238,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":238,"cardId":238,"effctType":0},"isAfterActivation":false,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 21:43:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One \n2:Activate Dark One effect GainStats<GainStats>"} 

 Player 1 21:43:16 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":10,"creatorCardId":285,"hasLockingStackEffect":false,"cardActivatorId":238,"cardWithEffectId":238,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":238,"cardId":238,"effctType":0},"isAfterActivation":false,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 21:43:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":77,"_text":"Add ActivatePassiveEffect 10 "}} 

 Player 1 21:43:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One \n2:Activate Dark One effect GainStats<GainStats>"} 

 Player 1 21:43:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One \n2:Activate Dark One effect GainStats<GainStats>"} 

 Player 1 21:43:16 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[238],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":238,"effectCardPlayer":238},"entityId":10,"creatorCardId":285,"hasLockingStackEffect":false,"cardActivatorId":238,"cardWithEffectId":238,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":238,"cardId":238,"effctType":0},"isAfterActivation":false,"index":4,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 21:43:16 $ACTION_MASSAGE_REMOVE:  
{"id":77} 

 Player 1 21:43:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":78,"_text":"Response Adding ActivatePassiveEffect 10"},"childOfId":77} 

 Player 1 21:43:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":79,"_text":"Wait For Response From Player 2 "},"childOfId":77} 

 Player 1 21:43:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:43:16 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:43:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One"} 

 Player 2 21:43:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One"} 

 Player 2 21:43:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One \n2:Activate Dark One "} 

 Player 2 21:43:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One \n2:Activate Dark One "} 

 Player 2 21:43:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One \n2:Activate Dark One "} 

 Player 2 21:43:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One \n2:Activate Dark One "} 

 Player 2 21:43:16 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:43:16 $ACTION_MASSAGE_REMOVE:  
{"id":79} 

 Player 1 21:43:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":80,"_text":"Wait For Response From Player 1 "},"childOfId":77} 

 Player 1 21:43:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:43:16 $ACTION_MASSAGE_REMOVE:  
{"id":80} 

 Player 1 21:43:16 $ACTION_MASSAGE_REMOVE:  
{"id":78} 

 Player 1 21:43:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":81,"_text":"Resolve ActivatePassiveEffect 10 "}} 

 Player 1 21:43:16 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":238,"particleType":6} 

 Player 1 21:43:16 $ACTION_MASSAGE_REMOVE:  
{"id":72} 

 Player 1 21:43:18 $DISABLE_PARTICLE_EFFECT:  
{"cardId":238,"particleType":6} 

 Player 1 21:43:18 $MONSTER_GAIN_DMG:  
{"cardId":238,"DMGToGain":1} 

 Player 1 21:43:18 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":285}],"result":null,"preventMethod":false,"methodScopeId":238,"scopeIsPlayer":false,"index":4,"originStackId":-1},"isAfterActivation":false,"index":4} 

 Player 1 21:43:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One \n2:Activate Dark One effect GainStats<GainStats>"} 

 Player 1 21:43:18 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[238],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":238,"effectCardPlayer":238},"entityId":10,"creatorCardId":285,"hasLockingStackEffect":false,"cardActivatorId":238,"cardWithEffectId":238,"isAfterActivation":false,"index":4,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 21:43:18 $ACTION_MASSAGE_REMOVE:  
{"id":81} 

 Player 1 21:43:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One"} 

 Player 1 21:43:18 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[238],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":238,"effectCardPlayer":238},"entityId":10,"creatorCardId":285,"hasLockingStackEffect":false,"cardActivatorId":238,"cardWithEffectId":238,"isAfterActivation":false,"index":4,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 21:43:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":82,"_text":"Remove After Resolve ActivatePassiveEffect 10  "}} 

 Player 1 21:43:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One"} 

 Player 1 21:43:18 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[238],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":238,"effectCardPlayer":238},"entityId":10,"creatorCardId":285,"hasLockingStackEffect":false,"cardActivatorId":238,"cardWithEffectId":238,"isAfterActivation":false,"index":4,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 21:43:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":83,"_text":"Response Remove After Resolve ActivatePassiveEffect 10"},"childOfId":82} 

 Player 1 21:43:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":84,"_text":"Wait For Response From Player 1 "},"childOfId":82} 

 Player 1 21:43:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:43:19 $ACTION_MASSAGE_REMOVE:  
{"id":84} 

 Player 1 21:43:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":85,"_text":"Wait For Response From Player 2 "},"childOfId":82} 

 Player 1 21:43:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:43:19 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:43:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One \n2:Activate Dark One "} 

 Player 2 21:43:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One \n2:Activate Dark One "} 

 Player 2 21:43:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One \n2:Activate Dark One "} 

 Player 2 21:43:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One \n2:Activate Dark One "} 

 Player 2 21:43:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One \n2:Activate Dark One "} 

 Player 2 21:43:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One \n2:Activate Dark One "} 

 Player 2 21:43:19 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:43:19 $ACTION_MASSAGE_REMOVE:  
{"id":85} 

 Player 1 21:43:19 $ACTION_MASSAGE_REMOVE:  
{"id":83} 

 Player 1 21:43:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":86,"_text":"Resolve CombatDamage 9 "}} 

 Player 1 21:43:19 $MONSTER_GET_DAMAGED:  
{"cardId":238,"hpLeft":1,"damageDealerId":285} 

 Player 1 21:43:19 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":285}],"result":null,"preventMethod":false,"methodScopeId":238,"scopeIsPlayer":false,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 1 21:43:19 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":{"type":2,"number":{"type":2,"number":3}}},{"type":0,"number":285},{"type":0,"number":238}],"result":null,"preventMethod":false,"methodScopeId":285,"scopeIsPlayer":true,"index":4,"originStackId":9},"isAfterActivation":true,"index":4} 

 Player 1 21:43:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One"} 

 Player 1 21:43:19 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":285,"entityToDoDamageCardId":285,"entityToTakeDamageCardId":238,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 21:43:19 $ACTION_MASSAGE_REMOVE:  
{"id":76} 

 Player 1 21:43:19 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:43:19 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":285,"entityToDoDamageCardId":285,"entityToTakeDamageCardId":238,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 21:43:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":87,"_text":"Remove After Resolve CombatDamage 9  "}} 

 Player 1 21:43:19 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:43:19 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":9,"creatorCardId":285,"entityToDoDamageCardId":285,"entityToTakeDamageCardId":238,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 21:43:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":88,"_text":"Response Remove After Resolve CombatDamage 9"},"childOfId":87} 

 Player 1 21:43:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":89,"_text":"Wait For Response From Player 2 "},"childOfId":87} 

 Player 1 21:43:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:43:19 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:43:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One"} 

 Player 2 21:43:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One"} 

 Player 2 21:43:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One"} 

 Player 2 21:43:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One"} 

 Player 2 21:43:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One"} 

 Player 2 21:43:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Dark One"} 

 Player 2 21:43:20 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:43:20 $ACTION_MASSAGE_REMOVE:  
{"id":89} 

 Player 1 21:43:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":90,"_text":"Wait For Response From Player 1 "},"childOfId":87} 

 Player 1 21:43:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:43:20 $ACTION_MASSAGE_REMOVE:  
{"id":90} 

 Player 1 21:43:20 $ACTION_MASSAGE_REMOVE:  
{"id":88} 

 Player 1 21:43:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":91,"_text":"Stack Was Emptied "}} 

 Player 1 21:43:20 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:43:20 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 21:43:20 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 21:43:20 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 21:43:20 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 21:43:20 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 21:43:20 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 21:43:20 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 21:43:20 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 21:43:20 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 21:43:20 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 21:43:20 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 21:43:20 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 21:43:20 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 21:43:20 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 21:43:20 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 1 21:43:20 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 21:43:20 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 1 21:43:20 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 1 21:43:20 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 1 21:43:20 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 1 21:43:20 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 1 21:43:20 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 1 21:43:20 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 1 21:43:20 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 1 21:43:20 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 1 21:43:21 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 1 21:43:21 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 1 21:43:21 $ACTION_MASSAGE_REMOVE:  
{"id":60} 

 Player 1 21:43:21 $ACTION_MASSAGE_REMOVE:  
{"id":61} 

 Player 1 21:43:21 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 1 21:43:21 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 1 21:43:21 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 1 21:43:21 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 1 21:43:21 $ACTION_MASSAGE_REMOVE:  
{"id":72} 

 Player 1 21:43:21 $ACTION_MASSAGE_REMOVE:  
{"id":76} 

 Player 1 21:43:21 $ACTION_MASSAGE_REMOVE:  
{"id":77} 

 Player 1 21:43:21 $ACTION_MASSAGE_REMOVE:  
{"id":81} 

 Player 1 21:43:21 $ACTION_MASSAGE_REMOVE:  
{"id":82} 

 Player 1 21:43:21 $ACTION_MASSAGE_REMOVE:  
{"id":86} 

 Player 1 21:43:21 $ACTION_MASSAGE_REMOVE:  
{"id":87} 

 Player 1 21:43:21 $ACTION_MASSAGE_REMOVE:  
{"id":91} 

 Player 1 21:43:21 $ACTION_MASSAGE_REMOVE:  
{"id":82} 

 Player 1 21:43:21 $ACTION_MASSAGE_REMOVE:  
{"id":91} 

 Player 1 21:43:22 $ACTION_MASSAGE_REMOVE:  
{"id":87}