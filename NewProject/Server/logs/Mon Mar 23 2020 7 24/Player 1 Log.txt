Start Log 
 Player 1 07:24:07 $START_GAME:  
 Player 1 07:24:07 $MOVE_TO_TABLE:  
 Player 1 07:24:17 $FINISH_LOAD:  

 {"id":1,"turnPlayerId":2} 
 Player 1 07:24:19 $ASSIGN_CHAR_TO_PLAYER:  

 {"playerId":1,"charCardId":314,"itemCardId":317} 
 Player 1 07:24:19 $SET_CHAR_END:  

 {"playerId":2} 
 Player 1 07:24:21 $MOVE_CARD_END:  

 {"moveIndex":1,"cardId":16,"flipIfFlipped":false,"playerId":2} 
 Player 1 07:24:22 $MOVE_CARD_END:  

 {"moveIndex":2,"cardId":125,"flipIfFlipped":false,"playerId":2} 
 Player 1 07:24:22 $MOVE_CARD_END:  

 {"moveIndex":3,"cardId":90,"flipIfFlipped":false,"playerId":2} 
 Player 1 07:24:23 $MOVE_CARD_END:  

 {"moveIndex":4,"cardId":79,"flipIfFlipped":false,"playerId":2} 
 Player 1 07:24:24 $MOVE_CARD_END:  

 {"moveIndex":5,"cardId":97,"flipIfFlipped":false,"playerId":2} 
 Player 1 07:24:25 $MOVE_CARD_END:  

 {"moveIndex":6,"cardId":38,"flipIfFlipped":false,"playerId":2} 
 Player 1 07:24:25 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 07:24:25 $NEXT_STACK_ID:  
 Player 1 07:24:25 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 07:24:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 07:24:25 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":314,"turnPlayerCardId":314,"stackEffectType":13}} 
 Player 1 07:24:25 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":1,"creatorCardId":314,"turnPlayerCardId":314,"stackEffectType":13}} 
 Player 1 07:24:25 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 07:24:25 $SHOW_STACK_EFFECT:  

 {"effectId":1} 
 Player 1 07:24:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 
 Player 1 07:24:28 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 07:24:28 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":314,"turnPlayerCardId":314,"stackEffectType":13}} 
 Player 1 07:24:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 
 Player 1 07:24:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 1 07:24:28 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 07:24:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 1 07:24:28 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 07:24:28 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 07:24:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 
 Player 1 07:24:29 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":314,"turnPlayerCardId":314,"stackEffectType":13}} 
 Player 1 07:24:29 $DRAW_CARD:  

 {"deckType":1} 
 Player 1 07:24:29 $MOVE_CARD:  

 {"moveIndex":7,"cardId":120,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 1 07:24:29 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":120} 
 Player 1 07:24:29 $FLIP_CARD:  

 {"cardId":120} 
 Player 1 07:24:29 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":120} 
 Player 1 07:24:29 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":314,"turnPlayerCardId":314,"stackEffectType":13}} 
 Player 1 07:24:29 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":1} 
 Player 1 07:24:29 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 07:24:29 $SHOW_STACK_EFFECT:  

 {"effectId":1} 
 Player 1 07:24:32 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":1} 
 Player 1 07:24:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 
 Player 1 07:24:32 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 07:24:32 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":314,"turnPlayerCardId":314,"stackEffectType":13}} 
 Player 1 07:24:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 
 Player 1 07:24:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Player 1 07:24:32 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 07:24:33 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 07:24:33 $ACTION_MASSAGE_REMOVE:  

 {"id":7} 
 Player 1 07:24:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Player 1 07:24:33 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 07:24:33 $ACTION_MASSAGE_REMOVE:  

 {"id":8} 
 Player 1 07:24:33 $ACTION_MASSAGE_REMOVE:  

 {"id":6} 
 Player 1 07:24:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":9,"_text":"Stack Was Emptied "}} 
 Player 1 07:24:33 $CLEAR_SE_VIS:  
 Player 1 07:24:33 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 07:24:47 $MOVE_CARD:  

 {"moveIndex":8,"cardId":248,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Hand"} 
 Player 1 07:24:47 $REGISTER_PASSIVE_ITEM:  

 {"cardId":248} 
 Player 1 07:24:47 $ADD_MONSTER:  

 {"monsterPlaceId":1,"monsterId":248} 
 Player 1 07:24:47 $NEW_MONSTER_ON_PLACE:  

 {"cardId":248,"monsterPlaceId":1} 
 Player 1 07:25:03 $NEXT_STACK_ID:  
 Player 1 07:25:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Cursed Keeper Head"} 
 Player 1 07:25:03 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":314,"attackingPlayerCardId":314,"idOfCardBeingAttacked":244,"stackEffectType":4}} 
 Player 1 07:25:03 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":2,"creatorCardId":314,"attackingPlayerCardId":314,"idOfCardBeingAttacked":244,"stackEffectType":4}} 
 Player 1 07:25:03 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 07:25:03 $SHOW_STACK_EFFECT:  

 {"effectId":2} 
 Player 1 07:25:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":10,"_text":"Add DeclareAttack 2 "}} 
 Player 1 07:25:06 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 07:25:06 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":314,"attackingPlayerCardId":314,"idOfCardBeingAttacked":244,"stackEffectType":4}} 
 Player 1 07:25:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":11,"_text":"Response Adding DeclareAttack 2"},"childOfId":10} 
 Player 1 07:25:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 
 Player 1 07:25:06 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 07:25:07 $ACTION_MASSAGE_REMOVE:  

 {"id":12} 
 Player 1 07:25:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 
 Player 1 07:25:07 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 07:25:07 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 07:25:07 $ACTION_MASSAGE_REMOVE:  

 {"id":13} 
 Player 1 07:25:07 $ACTION_MASSAGE_REMOVE:  

 {"id":11} 
 Player 1 07:25:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":14,"_text":"Resolve DeclareAttack 2 "}} 
 Player 1 07:25:07 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":314,"attackingPlayerCardId":314,"idOfCardBeingAttacked":244,"stackEffectType":4}} 
 Player 1 07:25:07 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":244,"particleType":5} 
 Player 1 07:25:07 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":314,"scopeIsPlayer":true,"index":1,"originStackId":2},"isAfterActivation":true,"index":1} 
 Player 1 07:25:07 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":314,"attackingPlayerCardId":314,"idOfCardBeingAttacked":244,"stackEffectType":4}} 
 Player 1 07:25:07 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":2} 
 Player 1 07:25:07 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 07:25:07 $SHOW_STACK_EFFECT:  

 {"effectId":2} 
 Player 1 07:25:10 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":2} 
 Player 1 07:25:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":15,"_text":"Remove After Resolve DeclareAttack 2  "}} 
 Player 1 07:25:10 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 07:25:10 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":314,"attackingPlayerCardId":314,"idOfCardBeingAttacked":244,"stackEffectType":4}} 
 Player 1 07:25:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":16,"_text":"Response Remove After Resolve DeclareAttack 2"},"childOfId":15} 
 Player 1 07:25:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 
 Player 1 07:25:10 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 07:25:10 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 07:25:10 $ACTION_MASSAGE_REMOVE:  

 {"id":17} 
 Player 1 07:25:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 
 Player 1 07:25:10 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 07:25:11 $ACTION_MASSAGE_REMOVE:  

 {"id":18} 
 Player 1 07:25:11 $ACTION_MASSAGE_REMOVE:  

 {"id":16} 
 Player 1 07:25:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":19,"_text":"Stack Was Emptied "}} 
 Player 1 07:25:11 $CLEAR_SE_VIS:  
 Player 1 07:25:11 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 07:25:12 $NEXT_STACK_ID:  
 Player 1 07:25:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cursed Keeper Head<Monster>"} 
 Player 1 07:25:12 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":314,"rollingPlayerCardId":314,"stackEffectType":2,"attackedMonsterCardId":244}} 
 Player 1 07:25:12 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":314,"rollingPlayerCardId":314,"stackEffectType":2,"attackedMonsterCardId":244}} 
 Player 1 07:25:12 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 07:25:12 $SHOW_STACK_EFFECT:  

 {"effectId":3} 
 Player 1 07:25:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":20,"_text":"Add AttackRoll 3 "}} 
 Player 1 07:25:15 $ROLL_DICE:  

 {"playerId":1} 
 Player 1 07:25:17 $ROLL_DICE_ENDED:  

 {"playerId":1,"numberRolled":1} 
 Player 1 07:25:17 $UPDATE_STACK_VIS:  

 {"stackId":3,"text":"player rolled 1 vs Cursed Keeper Head<Monster>"} 
 Player 1 07:25:17 $SHOW_DICE_ROLL:  

 {"stackId":3} 
 Player 1 07:25:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 1 vs Cursed Keeper Head<Monster>"} 
 Player 1 07:25:20 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 07:25:20 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":314,"numberRolled":1,"rollingPlayerCardId":314,"stackEffectType":2,"attackedMonsterCardId":244}} 
 Player 1 07:25:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":21,"_text":"Response Adding AttackRoll 3"},"childOfId":20} 
 Player 1 07:25:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":22,"_text":"Wait For Response From Player 1 "},"childOfId":20} 
 Player 1 07:25:20 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 07:25:20 $ACTION_MASSAGE_REMOVE:  

 {"id":22} 
 Player 1 07:25:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":23,"_text":"Wait For Response From Player 2 "},"childOfId":20} 
 Player 1 07:25:20 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 07:25:20 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 07:25:20 $ACTION_MASSAGE_REMOVE:  

 {"id":23} 
 Player 1 07:25:20 $ACTION_MASSAGE_REMOVE:  

 {"id":21} 
 Player 1 07:25:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":24,"_text":"Resolve AttackRoll 3 "}} 
 Player 1 07:25:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 1 vs Cursed Keeper Head<Monster>"} 
 Player 1 07:25:21 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":314,"numberRolled":1,"rollingPlayerCardId":314,"stackEffectType":2,"attackedMonsterCardId":244}} 
 Player 1 07:25:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":25,"_text":"Added 0 to original roll"}} 
 Player 1 07:25:21 $NEXT_STACK_ID:  
 Player 1 07:25:21 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 07:25:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cursed Keeper Head combat damage to Cain \n2:Player 1 rolled 1 vs Cursed Keeper Head<Monster>"} 
 Player 1 07:25:21 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":4,"creatorCardId":314,"entityToDoDamageCardId":244,"entityToTakeDamageCardId":314,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1}} 
 Player 1 07:25:21 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 07:25:21 $SHOW_STACK_EFFECT:  

 {"effectId":4} 
 Player 1 07:25:23 $CLEAR_SE_VIS:  
 Player 1 07:25:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cursed Keeper Head combat damage to Cain \n2:Player 1 rolled 1 vs Cursed Keeper Head<Monster>"} 
 Player 1 07:25:24 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":4,"creatorCardId":314,"entityToDoDamageCardId":244,"entityToTakeDamageCardId":314,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1}} 
 Player 1 07:25:24 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":314,"numberRolled":1,"rollingPlayerCardId":314,"stackEffectType":2,"attackedMonsterCardId":244}} 
 Player 1 07:25:24 $REPLACE_STACK:  

 {"currentStack":[{"entityId":4,"creatorCardId":314,"entityToDoDamageCardId":244,"entityToTakeDamageCardId":314,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1},{"entityId":3,"creatorCardId":314,"numberRolled":1,"rollingPlayerCardId":314,"stackEffectType":2,"attackedMonsterCardId":244}]} 
 Player 1 07:25:24 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":314,"scopeIsPlayer":true,"index":2,"originStackId":3},"isAfterActivation":true,"index":2} 
 Player 1 07:25:24 $NEXT_STACK_ID:  
 Player 1 07:25:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cursed Keeper Head combat damage to Cain \n2:Player 1 rolled 1 vs Cursed Keeper Head<Monster> \n3:Activate Daddy Long Legs effect GainStats<GainStats>"} 
 Player 1 07:25:24 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":5,"creatorCardId":314,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":248,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":1,"cardId":248,"effctType":0},"isAfterActivation":true,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 07:25:24 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":5,"creatorCardId":314,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":248,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":1,"cardId":248,"effctType":0},"isAfterActivation":true,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 07:25:24 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 07:25:24 $SHOW_STACK_EFFECT:  

 {"effectId":5} 
 Player 1 07:25:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":26,"_text":"Add ActivatePassiveEffect 5 "}} 
 Player 1 07:25:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cursed Keeper Head combat damage to Cain \n2:Player 1 rolled 1 vs Cursed Keeper Head<Monster> \n3:Activate Daddy Long Legs effect GainStats<GainStats>"} 
 Player 1 07:25:27 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[244,248],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":248,"effectCardPlayer":248},"entityId":5,"creatorCardId":314,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":248,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":1,"cardId":248,"effctType":0},"isAfterActivation":true,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 07:25:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":27,"_text":"Response Adding ActivatePassiveEffect 5"},"childOfId":26} 
 Player 1 07:25:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":28,"_text":"Wait For Response From Player 1 "},"childOfId":26} 
 Player 1 07:25:27 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 07:25:27 $ACTION_MASSAGE_REMOVE:  

 {"id":28} 
 Player 1 07:25:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":29,"_text":"Wait For Response From Player 2 "},"childOfId":26} 
 Player 1 07:25:27 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 07:25:27 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 07:25:27 $ACTION_MASSAGE_REMOVE:  

 {"id":29} 
 Player 1 07:25:27 $ACTION_MASSAGE_REMOVE:  

 {"id":27} 
 Player 1 07:25:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":30,"_text":"Resolve ActivatePassiveEffect 5 "}} 
 Player 1 07:25:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cursed Keeper Head combat damage to Cain \n2:Player 1 rolled 1 vs Cursed Keeper Head<Monster> \n3:Activate Daddy Long Legs effect GainStats<GainStats>"} 
 Player 1 07:25:27 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[244,248],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":248,"effectCardPlayer":248},"entityId":5,"creatorCardId":314,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":248,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":1,"cardId":248,"effctType":0},"isAfterActivation":true,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 07:25:27 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":248,"particleType":6} 
 Player 1 07:25:29 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":248,"particleType":6} 
 Player 1 07:25:29 $MONSTER_GAIN_ROLL_BONUS:  

 {"cardId":244,"bonusToGain":1} 
 Player 1 07:25:29 $MONSTER_GAIN_ROLL_BONUS:  

 {"cardId":248,"bonusToGain":1} 
 Player 1 07:25:29 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":314,"scopeIsPlayer":true,"index":2,"originStackId":3},"isAfterActivation":true,"index":2} 
 Player 1 07:25:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cursed Keeper Head combat damage to Cain \n2:Player 1 rolled 1 vs Cursed Keeper Head<Monster> \n3:Activate Daddy Long Legs effect GainStats<GainStats>"} 
 Player 1 07:25:29 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[244,248],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":248,"effectCardPlayer":248},"entityId":5,"creatorCardId":314,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":248,"isAfterActivation":true,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 07:25:29 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":5} 
 Player 1 07:25:29 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 07:25:29 $SHOW_STACK_EFFECT:  

 {"effectId":5} 
 Player 1 07:25:32 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":5} 
 Player 1 07:25:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":31,"_text":"Remove After Resolve ActivatePassiveEffect 5  "}} 
 Player 1 07:25:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cursed Keeper Head combat damage to Cain \n2:Player 1 rolled 1 vs Cursed Keeper Head<Monster>"} 
 Player 1 07:25:32 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[244,248],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":248,"effectCardPlayer":248},"entityId":5,"creatorCardId":314,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":248,"isAfterActivation":true,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 07:25:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":32,"_text":"Response Remove After Resolve ActivatePassiveEffect 5"},"childOfId":31} 
 Player 1 07:25:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":33,"_text":"Wait For Response From Player 2 "},"childOfId":31} 
 Player 1 07:25:32 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 07:25:32 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 07:25:32 $ACTION_MASSAGE_REMOVE:  

 {"id":33} 
 Player 1 07:25:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":34,"_text":"Wait For Response From Player 1 "},"childOfId":31} 
 Player 1 07:25:33 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 07:25:33 $ACTION_MASSAGE_REMOVE:  

 {"id":34} 
 Player 1 07:25:33 $ACTION_MASSAGE_REMOVE:  

 {"id":32} 
 Player 1 07:25:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":35,"_text":"Resolve AttackRoll 3 "}} 
 Player 1 07:25:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cursed Keeper Head combat damage to Cain \n2:Player 1 rolled 1 vs Cursed Keeper Head<Monster>"} 
 Player 1 07:25:33 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":314,"numberRolled":1,"rollingPlayerCardId":314,"stackEffectType":2,"attackedMonsterCardId":244}} 
 Player 1 07:25:33 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":3} 
 Player 1 07:25:33 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 07:25:33 $SHOW_STACK_EFFECT:  

 {"effectId":3} 
 Player 1 07:25:35 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":3} 
 Player 1 07:25:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":36,"_text":"Remove After Resolve AttackRoll 3  "}} 
 Player 1 07:25:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cursed Keeper Head combat damage to Cain"} 
 Player 1 07:25:36 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":314,"numberRolled":1,"rollingPlayerCardId":314,"stackEffectType":2,"attackedMonsterCardId":244}} 
 Player 1 07:25:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":37,"_text":"Response Remove After Resolve AttackRoll 3"},"childOfId":36} 
 Player 1 07:25:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":38,"_text":"Wait For Response From Player 1 "},"childOfId":36} 
 Player 1 07:25:36 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 07:25:36 $ACTION_MASSAGE_REMOVE:  

 {"id":38} 
 Player 1 07:25:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":39,"_text":"Wait For Response From Player 2 "},"childOfId":36} 
 Player 1 07:25:36 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 07:25:36 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 07:25:36 $ACTION_MASSAGE_REMOVE:  

 {"id":39} 
 Player 1 07:25:36 $ACTION_MASSAGE_REMOVE:  

 {"id":37} 
 Player 1 07:25:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":40,"_text":"Resolve CombatDamage 4 "}} 
 Player 1 07:25:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cursed Keeper Head combat damage to Cain"} 
 Player 1 07:25:36 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":4,"creatorCardId":314,"entityToDoDamageCardId":244,"entityToTakeDamageCardId":314,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1}} 
 Player 1 07:25:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cursed Keeper Head 1 combat damage to Cain"} 
 Player 1 07:25:36 $UPDATE_STACK_VIS:  

 {"stackId":4,"text":"Cursed Keeper Head will deal 1 combat damage to Cain"} 
 Player 1 07:25:36 $PLAYER_GET_HIT:  

 {"playerId":1,"damage":1,"damageDealerId":244} 
 Player 1 07:25:36 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":244}],"result":null,"preventMethod":false,"methodScopeId":314,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Player 1 07:25:36 $LOG_ERROR:  

 {"message":"\"Cannot read property 'name' of null\"","stack":"\"TypeError: Cannot read property 'name' of null\\n    at AtSpecificHp.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardConditions/AtSpecificHP.js:59:73)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113111:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113055:18)\\n    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113033:71\\n    at new Promise (<anonymous>)\\n    at 486.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113013:14)\\n    at AtSpecificHp.testCondition (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardConditions/AtSpecificHP.js:38:16)\\n    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:310:56)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113111:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113055:18)\""} 
 Player 1 07:25:37 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_TAKEN","args":[{"type":2,"number":1},{"type":2,"number":1},{"type":0,"number":244}],"result":null,"preventMethod":false,"methodScopeId":314,"scopeIsPlayer":true,"index":4,"originStackId":4},"isAfterActivation":true,"index":4} 
 Player 1 07:25:37 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":4,"creatorCardId":314,"entityToDoDamageCardId":244,"entityToTakeDamageCardId":314,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1}} 
 Player 1 07:25:37 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":4} 
 Player 1 07:25:37 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 07:25:37 $SHOW_STACK_EFFECT:  

 {"effectId":4} 
 Player 1 07:25:39 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":4} 
 Player 1 07:25:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":41,"_text":"Remove After Resolve CombatDamage 4  "}} 
 Player 1 07:25:39 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 07:25:39 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":4,"creatorCardId":314,"entityToDoDamageCardId":244,"entityToTakeDamageCardId":314,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1}} 
 Player 1 07:25:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":42,"_text":"Response Remove After Resolve CombatDamage 4"},"childOfId":41} 
 Player 1 07:25:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":43,"_text":"Wait For Response From Player 2 "},"childOfId":41} 
 Player 1 07:25:39 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 07:25:39 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 07:25:40 $ACTION_MASSAGE_REMOVE:  

 {"id":43} 
 Player 1 07:25:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":44,"_text":"Wait For Response From Player 1 "},"childOfId":41} 
 Player 1 07:25:40 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 07:25:40 $ACTION_MASSAGE_REMOVE:  

 {"id":44} 
 Player 1 07:25:40 $ACTION_MASSAGE_REMOVE:  

 {"id":42} 
 Player 1 07:25:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":45,"_text":"Stack Was Emptied "}} 
 Player 1 07:25:40 $CLEAR_SE_VIS:  
 Player 1 07:25:40 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"}