Start Log 

 Player 1 20:26:18 $MATCH:  

 Player 1 20:26:19 $START_GAME:  

 Player 2 20:26:19 $MOVE_TO_TABLE:  

 Player 1 20:26:19 $MOVE_TO_TABLE:  

 Player 2 20:26:28 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 1 20:26:28 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 20:26:28 $SET_CHAR:  
{"originPlayerId":2,"playerId":1,"charCardId":313,"itemCardId":314} 

 Player 1 20:26:28 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":313,"itemCardId":314} 

 Player 1 20:26:28 $SET_CHAR_END:  
{"playerId":2} 

 Player 2 20:26:28 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":323,"itemCardId":324} 

 Player 2 20:26:28 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[9,62,12,35,55,129,108,127,112,103,37,93,136,47,68,33,125,46,66,17,15,95,45,106,99,73,44,48,52,117,113,56,90,115,124,64,18,102,121,50,14,86,61,116,70,126,78,94,31,88,96,59,110,109,132,83,104,11,26,60,87,133,82,27,5,111,131,75,32,38,42,41,138,130,21,97,20,16,67,120,39,58,8,77,54,128,81,118,119,23,29,36,24,135,53,43,92,134,7,122,13,98,85,84,69,4,57,105,139,63,25,89,114,76,49,72,22,100,71,137,34,28,79,123,40,91,74,51,80,10,101,19,65,30,107,6]} 

 Player 2 20:26:28 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[234,279,297,307,289,299,231,251,247,264,229,241,226,252,225,291,245,276,280,277,272,265,243,274,290,228,271,303,269,301,255,261,292,230,246,306,295,233,309,273,263,235,284,304,310,286,260,308,268,253,275,278,287,270,240,250,258,236,296,302,238,294,283,254,293,242,266,256,227,239,249,282,244,267,257,224,305,232,285,237,281,300,248,259,262,298,223,288]} 

 Player 2 20:26:28 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[164,176,221,220,211,210,146,166,213,151,141,206,162,157,201,202,207,152,184,147,183,144,172,169,203,218,208,204,200,197,161,216,205,190,192,160,187,167,185,177,199,189,165,149,217,196,191,179,175,145,181,171,209,186,153,170,156,143,178,155,215,158,150,174,180,188,195,173,212,219,193,168,148,194,182,154,198,159,163,142,214]} 

 Player 2 20:26:28 $DRAW_CARD:  
{"deckType":5} 

 Player 2 20:26:28 $FLIP_CARD:  
{"cardId":214} 

 Player 2 20:26:28 $ADD_STORE_CARD:  
{"cardId":214} 

 Player 2 20:26:28 $DRAW_CARD:  
{"deckType":5} 

 Player 2 20:26:28 $FLIP_CARD:  
{"cardId":142} 

 Player 2 20:26:28 $ADD_STORE_CARD:  
{"cardId":142} 

 Player 2 20:26:28 $DRAW_CARD:  
{"deckType":2} 

 Player 2 20:26:28 $FLIP_CARD:  
{"cardId":288} 

 Player 2 20:26:28 $REGISTER_PASSIVE_ITEM:  
{"cardId":288} 

 Player 2 20:26:28 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":288} 

 Player 2 20:26:28 $NEW_MONSTER_ON_PLACE:  
{"cardId":288,"monsterPlaceId":1} 

 Player 2 20:26:28 $DRAW_CARD:  
{"deckType":2} 

 Player 2 20:26:28 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":223} 

 Player 2 20:26:29 $DRAW_CARD:  
{"deckType":2} 

 Player 2 20:26:29 $FLIP_CARD:  
{"cardId":298} 

 Player 2 20:26:29 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":298} 

 Player 2 20:26:29 $NEW_MONSTER_ON_PLACE:  
{"cardId":298,"monsterPlaceId":2} 

 Player 2 20:26:29 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 20:26:29 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 20:26:29 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:26:29 $MOVE_CARD:  
{"moveIndex":1,"cardId":6,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:26:29 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":6,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:26:29 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":6} 

 Player 2 20:26:29 $FLIP_CARD:  
{"cardId":6} 

 Player 2 20:26:29 $FLIP_CARD:  
{"cardId":6} 

 Player 2 20:26:29 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":6} 

 Player 2 20:26:29 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:26:29 $MOVE_CARD:  
{"moveIndex":2,"cardId":107,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:26:30 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":107,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:26:30 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":107} 

 Player 2 20:26:30 $FLIP_CARD:  
{"cardId":107} 

 Player 2 20:26:30 $FLIP_CARD:  
{"cardId":107} 

 Player 2 20:26:30 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":107} 

 Player 2 20:26:30 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:26:30 $MOVE_CARD:  
{"moveIndex":3,"cardId":30,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:26:30 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":30,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:26:30 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":30} 

 Player 2 20:26:30 $FLIP_CARD:  
{"cardId":30} 

 Player 2 20:26:30 $FLIP_CARD:  
{"cardId":30} 

 Player 2 20:26:30 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":30} 

 Player 2 20:26:30 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 20:26:30 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":323,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 20:26:30 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:26:30 $MOVE_CARD:  
{"moveIndex":4,"cardId":65,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:26:31 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":65,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:26:31 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":65} 

 Player 2 20:26:31 $FLIP_CARD:  
{"cardId":65} 

 Player 2 20:26:31 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":65} 

 Player 2 20:26:31 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:26:31 $MOVE_CARD:  
{"moveIndex":5,"cardId":19,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:26:31 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":19,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:26:31 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":19} 

 Player 2 20:26:31 $FLIP_CARD:  
{"cardId":19} 

 Player 2 20:26:31 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":19} 

 Player 2 20:26:31 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:26:31 $MOVE_CARD:  
{"moveIndex":6,"cardId":101,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:26:32 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":101,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:26:32 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":101} 

 Player 2 20:26:32 $FLIP_CARD:  
{"cardId":101} 

 Player 2 20:26:32 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":101} 

 Player 2 20:26:32 $GAME_HAS_STARTED:  

 Player 2 20:26:32 $SET_TURN:  
{"playerId":2} 

 Player 2 20:26:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:26:32 $NEXT_STACK_ID:  

 Player 2 20:26:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:26:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 

 Player 2 20:26:32 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13}} 

 Player 2 20:26:32 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13}} 

 Player 2 20:26:32 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 20:26:32 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 1 20:26:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:26:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 

 Player 2 20:26:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 2 20:26:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:26:35 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13}} 

 Player 2 20:26:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 2 20:26:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 2 20:26:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:26:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 2 20:26:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:26:35 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:26:35 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[313,314]} 

 Player 1 20:26:35 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:26:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 2 20:26:35 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13}} 

 Player 2 20:26:35 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:26:35 $MOVE_CARD:  
{"moveIndex":7,"cardId":10,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:26:35 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":10,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:26:36 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":10} 

 Player 2 20:26:36 $FLIP_CARD:  
{"cardId":10} 

 Player 2 20:26:36 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":10} 

 Player 2 20:26:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Has Drawen Loot For Start Turn"} 

 Player 2 20:26:36 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13}} 

 Player 2 20:26:36 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":1} 

 Player 2 20:26:36 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 20:26:36 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 1 20:26:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 

 Player 2 20:26:39 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":1} 

 Player 2 20:26:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 2 20:26:39 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:26:39 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13}} 

 Player 2 20:26:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 2 20:26:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 2 20:26:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:26:39 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:26:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 

 Player 1 20:26:39 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[313,314]} 

 Player 1 20:26:39 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:26:39 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 2 20:26:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 2 20:26:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:26:39 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 2 20:26:39 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 2 20:26:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 2 20:26:39 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:26:39 $CLEAR_SE_VIS:  

 Player 2 20:26:39 $UPDATE_ACTIONS:  

 Player 2 20:26:45 $MOVE_CARD:  
{"moveIndex":8,"cardId":319,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 

 Player 1 20:26:45 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":319,"flipIfFlipped":true,"playerId":2} 

 Player 2 20:26:47 $MOVE_CARD:  
{"moveIndex":9,"cardId":281,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 

 Player 1 20:26:48 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":281,"flipIfFlipped":true,"playerId":2} 

 Player 2 20:26:48 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[223,234,279,297,307,289,299,231,251,247,264,229,241,226,252,225,291,245,276,280,277,272,265,243,274,290,228,271,303,269,301,255,261,292,230,246,306,295,233,309,273,263,235,284,304,310,286,260,308,268,253,275,278,287,270,240,250,258,236,296,302,238,294,283,254,293,242,266,256,227,239,249,282,244,267,257,224,305,232,285,237,300,248,259,262]} 

 Player 2 20:26:48 $FLIP_CARD:  
{"cardId":281} 

 Player 2 20:26:48 $REGISTER_PASSIVE_ITEM:  
{"cardId":281} 

 Player 2 20:26:48 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":281} 

 Player 2 20:26:48 $NEW_MONSTER_ON_PLACE:  
{"cardId":281,"monsterPlaceId":1} 

 Player 2 20:26:53 $NEXT_STACK_ID:  

 Player 2 20:26:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 declared attack on Isaac!"} 

 Player 2 20:26:53 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":323,"attackingPlayerCardId":323,"idOfCardBeingAttacked":281,"stackEffectType":4}} 

 Player 2 20:26:53 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":323,"attackingPlayerCardId":323,"idOfCardBeingAttacked":281,"stackEffectType":4}} 

 Player 2 20:26:53 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 20:26:53 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 1 20:26:53 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:26:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 declared attack on Isaac!"} 

 Player 2 20:26:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add DeclareAttack 2 "}} 

 Player 2 20:26:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:26:56 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":323,"attackingPlayerCardId":323,"idOfCardBeingAttacked":281,"stackEffectType":4}} 

 Player 2 20:26:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding DeclareAttack 2"},"childOfId":10} 

 Player 2 20:26:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 2 20:26:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:26:56 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 2 20:26:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 2 20:26:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:26:56 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:26:56 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[313,314]} 

 Player 1 20:26:57 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:26:57 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 2 20:26:57 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 2 20:26:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve DeclareAttack 2 "}} 

 Player 2 20:26:57 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":323,"attackingPlayerCardId":323,"idOfCardBeingAttacked":281,"stackEffectType":4}} 

 Player 2 20:26:57 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":281,"particleType":5} 

 Player 2 20:26:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Has Entered Battle with Isaac!"} 

 Player 2 20:26:57 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":323,"scopeIsPlayer":true,"index":3,"originStackId":2},"isAfterActivation":true,"index":3} 

 Player 2 20:26:57 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":323,"attackingPlayerCardId":323,"idOfCardBeingAttacked":281,"stackEffectType":4}} 

 Player 2 20:26:57 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":2} 

 Player 2 20:26:57 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 20:26:57 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 1 20:26:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 declared attack on Isaac!"} 

 Player 2 20:27:00 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":2} 

 Player 2 20:27:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve DeclareAttack 2  "}} 

 Player 2 20:27:00 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:27:00 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":323,"attackingPlayerCardId":323,"idOfCardBeingAttacked":281,"stackEffectType":4}} 

 Player 2 20:27:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve DeclareAttack 2"},"childOfId":15} 

 Player 2 20:27:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 2 20:27:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:27:00 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:27:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 declared attack on Isaac!"} 

 Player 1 20:27:00 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[313,314]} 

 Player 1 20:27:00 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:27:00 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 20:27:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 2 20:27:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:27:00 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 2 20:27:00 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 2 20:27:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 2 20:27:00 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:27:00 $CLEAR_SE_VIS:  

 Player 2 20:27:07 $NEXT_STACK_ID:  

 Player 2 20:27:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 

 Player 2 20:27:07 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":323,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 20:27:07 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":323,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 20:27:07 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 20:27:07 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 1 20:27:07 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:27:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 

 Player 2 20:27:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add AttackRoll 3 "}} 

 Player 2 20:27:10 $ROLL_DICE:  
{"playerId":2} 

 Player 2 20:27:12 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":6} 

 Player 2 20:27:12 $UPDATE_STACK_VIS:  
{"stackId":3,"text":"player rolled 6 vs Isaac!<Monster>"} 

 Player 2 20:27:12 $SHOW_DICE_ROLL:  
{"stackId":3} 

 Player 2 20:27:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 6 vs Isaac!<Monster>"} 

 Player 2 20:27:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:27:15 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":323,"numberRolled":6,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 20:27:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding AttackRoll 3"},"childOfId":20} 

 Player 2 20:27:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 2 20:27:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:27:15 $SHOW_REACTIONS:  
{"playerId":2,"cardsIds":[323,324,65,19,101,10]} 

 Player 1 20:27:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 

 Player 2 20:27:16 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[323,324,65,19,101,10]} 

 Player 2 20:27:16 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 2 20:27:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 2 20:27:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:27:17 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:27:17 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[313,314]} 

 Player 1 20:27:17 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:27:17 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 2 20:27:17 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 2 20:27:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve AttackRoll 3 "}} 

 Player 2 20:27:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 6 vs Isaac!<Monster>"} 

 Player 2 20:27:17 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":323,"numberRolled":6,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 20:27:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Added 0 to original roll"}} 

 Player 2 20:27:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Rolled 4 Against Isaac!<Monster> 3"} 

 Player 2 20:27:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Roll Hit"} 

 Player 2 20:27:17 $NEXT_STACK_ID:  

 Player 2 20:27:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:27:17 $CLEAR_SE_VIS:  

 Player 2 20:27:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Player 2 Roll Hit"} 

 Player 2 20:27:17 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 2 20:27:17 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":323,"numberRolled":6,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 20:27:17 $REPLACE_STACK:  
{"currentStack":[{"entityId":4,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":3,"creatorCardId":323,"numberRolled":6,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":281}]} 

 Player 2 20:27:17 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 20:27:17 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 1 20:27:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 

 Player 1 20:27:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 

 Player 2 20:27:20 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":323,"scopeIsPlayer":true,"index":4,"originStackId":3},"isAfterActivation":true,"index":4} 

 Player 2 20:27:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Player 2 Roll Hit"} 

 Player 2 20:27:20 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":323,"numberRolled":6,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 20:27:20 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":3} 

 Player 2 20:27:20 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 20:27:20 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 1 20:27:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Player 2 is rolling against Isaac!<Monster>"} 

 Player 2 20:27:23 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":3} 

 Player 2 20:27:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Remove After Resolve AttackRoll 3  "}} 

 Player 2 20:27:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac!"} 

 Player 2 20:27:23 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":323,"numberRolled":6,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 20:27:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Response Remove After Resolve AttackRoll 3"},"childOfId":26} 

 Player 2 20:27:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":26} 

 Player 2 20:27:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:27:23 $SHOW_REACTIONS:  
{"playerId":2,"cardsIds":[323,324,65,19,101,10]} 

 Player 1 20:27:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Player 2 is rolling against Isaac!<Monster>"} 

 Player 2 20:27:33 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[323,324,65,19,101,10]} 

 Player 2 20:27:33 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 2 20:27:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Wait For Response From Player 1 "},"childOfId":26} 

 Player 2 20:27:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:27:34 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:27:34 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[313,314]} 

 Player 1 20:27:34 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:27:34 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 20:27:34 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 2 20:27:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Resolve CombatDamage 4 "}} 

 Player 2 20:27:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac!"} 

 Player 2 20:27:34 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 2 20:27:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy will deal 1 combat damage to Isaac! "} 

 Player 2 20:27:34 $UPDATE_STACK_VIS:  
{"stackId":4,"text":"Maggy will deal 1 combat damage to Isaac!"} 

 Player 2 20:27:34 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":323},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1} 

 Player 2 20:27:34 $NEXT_STACK_ID:  

 Player 2 20:27:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy will deal 1 combat damage to Isaac!  \n2:Activate Isaac! Effect DealDamage<DealDamage>"} 

 Player 2 20:27:34 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":5,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 20:27:34 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":5,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 20:27:34 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 20:27:34 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 1 20:27:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac!"} 

 Player 1 20:27:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Activate Isaac! "} 

 Player 2 20:27:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Add ActivatePassiveEffect 5 "}} 

 Player 2 20:28:29 $SHOW_DECISION:  
{"startCardId":281,"endCardId":313} 

 Player 2 20:28:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy will deal 1 combat damage to Isaac!  \n2:Activate Isaac! effect DealDamage<DealDamage>"} 

 Player 2 20:28:32 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[313],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":5,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 20:28:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Response Adding ActivatePassiveEffect 5"},"childOfId":31} 

 Player 2 20:28:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":31} 

 Player 2 20:28:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:28:32 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:28:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Activate Isaac! "} 

 Player 1 20:28:32 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[313,314]} 

 Player 1 20:28:32 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:28:32 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 2 20:28:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Wait For Response From Player 2 "},"childOfId":31} 

 Player 2 20:28:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:28:32 $SHOW_REACTIONS:  
{"playerId":2,"cardsIds":[323,324,65,19,101,10]} 

 Player 2 20:28:44 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[323,324,65,19,101,10]} 

 Player 2 20:28:44 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 20:28:44 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 2 20:28:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Resolve ActivatePassiveEffect 5 "}} 

 Player 2 20:28:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy will deal 1 combat damage to Isaac!  \n2:Activate Isaac! effect DealDamage<DealDamage>"} 

 Player 2 20:28:44 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[313],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":5,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 20:28:44 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":281,"particleType":6} 

 Player 1 20:28:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Activate Isaac! "} 

 Player 2 20:28:46 $DISABLE_PARTICLE_EFFECT:  
{"cardId":281,"particleType":6} 

 Player 2 20:28:46 $PLAYER_GET_HIT:  
{"playerId":1,"damage":1,"damageDealerId":281} 

 Player 2 20:28:46 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":281}],"result":null,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 2 20:28:46 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":323},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1} 

 Player 2 20:28:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy will deal 1 combat damage to Isaac!  \n2:Activated Isaac! Effect"} 

 Player 2 20:28:46 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[313],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":5,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 20:28:46 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":5} 

 Player 2 20:28:46 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 20:28:46 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 1 20:28:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Activate Isaac! "} 

 Player 2 20:28:49 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":5} 

 Player 2 20:28:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Remove After Resolve ActivatePassiveEffect 5  "}} 

 Player 2 20:28:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy will deal 1 combat damage to Isaac! "} 

 Player 2 20:28:49 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[313],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":5,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 20:28:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Response Remove After Resolve ActivatePassiveEffect 5"},"childOfId":36} 

 Player 2 20:28:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 2 "},"childOfId":36} 

 Player 2 20:28:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:28:49 $SHOW_REACTIONS:  
{"playerId":2,"cardsIds":[323,324,65,19,101,10]} 

 Player 1 20:28:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Activate Isaac! "} 

 Player 2 20:28:55 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[323,324,65,19,101,10]} 

 Player 2 20:28:56 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 2 20:28:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Wait For Response From Player 1 "},"childOfId":36} 

 Player 2 20:28:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:28:56 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:28:56 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[313,314]} 

 Player 1 20:28:56 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:28:56 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 20:28:56 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 2 20:28:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Resolve CombatDamage 4 "}} 

 Player 2 20:28:56 $MONSTER_GET_DAMAGED:  
{"cardId":281,"hpLeft":6,"damageDealerId":323} 

 Player 2 20:28:56 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":323},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 20:28:56 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":4},{"type":0,"number":323},{"type":0,"number":281}],"result":null,"preventMethod":false,"methodScopeId":323,"scopeIsPlayer":true,"index":6,"originStackId":4},"isAfterActivation":true,"index":6} 

 Player 2 20:28:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy will deal 1 combat damage to Isaac! "} 

 Player 2 20:28:56 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 2 20:28:56 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":4} 

 Player 2 20:28:56 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 20:28:56 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 1 20:28:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac!"} 

 Player 2 20:28:59 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":4} 

 Player 2 20:28:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Remove After Resolve CombatDamage 4  "}} 

 Player 2 20:28:59 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:28:59 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 2 20:28:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Response Remove After Resolve CombatDamage 4"},"childOfId":41} 

 Player 2 20:28:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 1 "},"childOfId":41} 

 Player 2 20:28:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:28:59 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:28:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac!"} 

 Player 1 20:28:59 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[313,314]} 

 Player 1 20:28:59 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:28:59 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 2 20:28:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Wait For Response From Player 2 "},"childOfId":41} 

 Player 2 20:28:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:28:59 $SHOW_REACTIONS:  
{"playerId":2,"cardsIds":[323,324,65,19,101,10]} 

 Player 2 20:29:05 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[323,324,65,19,101,10]} 

 Player 2 20:29:05 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 20:29:05 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 2 20:29:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Stack Was Emptied "}} 

 Player 2 20:29:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:29:05 $CLEAR_SE_VIS:  

 Player 2 20:29:24 $MATCH: 