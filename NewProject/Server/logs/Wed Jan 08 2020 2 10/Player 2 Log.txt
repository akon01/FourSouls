Start Log 
 Player 2 02:10:26 $MOVE_TO_TABLE:  
 Player 2 02:10:33 $FINISH_LOAD:  

 {"id":2,"turnPlayerId":2} 
 Player 2 02:10:33 $ASSIGN_CHAR_TO_PLAYER:  

 {"playerId":1,"charCardId":274,"itemCardId":275} 
 Player 2 02:10:33 $CHOOSE_FOR_EDEN:  

 {"playerId":2,"originPlayerId":2} 
 Player 2 02:10:34 $DECK_ARRAGMENT:  

 {"deckType":1,"arrangement":[184,172,168,180,158,179,164,194,176,170,199,152,178,200,190,197,151,177,165,166,188,181,182,160,149,156,159,198,173,171,196,154,203,162,167,187,189,186,193,153,201,185,157,148,146,202,192,161,183,147,150,175,174,195,155,163,169,191]} 
 Player 2 02:10:41 $EDEN_CHOSEN:  

 {"cardId":180,"playerId":2} 
 Player 2 02:10:41 $DECK_ARRAGMENT:  

 {"deckType":1,"arrangement":[184,172,168,158,179,164,194,176,170,199,152,178,200,190,197,151,177,165,166,188,181,182,160,149,156,159,198,173,171,196,154,203,162,167,187,189,186,193,153,201,185,157,148,146,202,192,161,183,147,150,175,174,195,155,163,169,191]} 
 Player 2 02:10:41 $FLIP_CARD:  

 {"cardId":180} 
 Player 2 02:10:41 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":180}],"result":true,"preventMethod":false,"methodScopeId":266,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 02:10:41 $ASSIGN_CHAR_TO_PLAYER:  

 {"playerId":2,"charCardId":266,"itemCardId":180} 
 Player 2 02:10:41 $DECK_ARRAGMENT:  

 {"deckType":1,"arrangement":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143]} 
 Player 2 02:10:41 $DECK_ARRAGMENT:  

 {"deckType":1,"arrangement":[206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259]} 
 Player 2 02:10:41 $DECK_ARRAGMENT:  

 {"deckType":1,"arrangement":[184,172,168,158,179,164,194,176,170,199,152,178,200,190,197,151,177,165,166,188,181,182,160,149,156,159,198,173,171,196,154,203,162,167,187,189,186,193,153,201,185,157,148,146,202,192,161,183,147,150,175,174,195,155,163,169,191]} 
 Player 2 02:10:41 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 02:10:41 $FLIP_CARD:  

 {"cardId":191} 
 Player 2 02:10:41 $ADD_STORE_CARD:  

 {"cardId":191} 
 Player 2 02:10:41 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 02:10:41 $FLIP_CARD:  

 {"cardId":169} 
 Player 2 02:10:41 $ADD_STORE_CARD:  

 {"cardId":169} 
 Player 2 02:10:41 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 02:10:41 $DECK_ADD_TO_BOTTOM:  

 {"deckType":1,"cardId":259} 
 Player 2 02:10:42 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 02:10:42 $FLIP_CARD:  

 {"cardId":258} 
 Player 2 02:10:42 $ADD_MONSTER:  

 {"monsterPlaceId":1,"monsterId":258} 
 Player 2 02:10:42 $NEW_MONSTER_ON_PLACE:  

 {"cardId":258,"monsterPlaceId":1} 
 Player 2 02:10:42 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 02:10:42 $FLIP_CARD:  

 {"cardId":257} 
 Player 2 02:10:42 $REGISTER_PASSIVE_ITEM:  

 {"cardId":257} 
 Player 2 02:10:42 $ADD_MONSTER:  

 {"monsterPlaceId":2,"monsterId":257} 
 Player 2 02:10:42 $NEW_MONSTER_ON_PLACE:  

 {"cardId":257,"monsterPlaceId":2} 
 Player 2 02:10:42 $SET_MONEY:  

 {"playerId":1,"numOfCoins":3} 
 Player 2 02:10:42 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":274,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 2 02:10:42 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 02:10:42 $MOVE_CARD:  

 {"moveIndex":1,"cardId":143,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 02:10:42 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":143} 
 Player 2 02:10:42 $FLIP_CARD:  

 {"cardId":143} 
 Player 2 02:10:42 $FLIP_CARD:  

 {"cardId":143} 
 Player 2 02:10:42 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":143} 
 Player 2 02:10:42 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 02:10:42 $MOVE_CARD:  

 {"moveIndex":2,"cardId":142,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 02:10:43 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":142} 
 Player 2 02:10:43 $FLIP_CARD:  

 {"cardId":142} 
 Player 2 02:10:43 $FLIP_CARD:  

 {"cardId":142} 
 Player 2 02:10:43 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":142} 
 Player 2 02:10:43 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 02:10:43 $MOVE_CARD:  

 {"moveIndex":3,"cardId":141,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 02:10:43 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":141} 
 Player 2 02:10:43 $FLIP_CARD:  

 {"cardId":141} 
 Player 2 02:10:43 $FLIP_CARD:  

 {"cardId":141} 
 Player 2 02:10:43 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":141} 
 Player 2 02:10:43 $SET_MONEY:  

 {"playerId":2,"numOfCoins":3} 
 Player 2 02:10:43 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":266,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Player 2 02:10:43 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 02:10:43 $MOVE_CARD:  

 {"moveIndex":4,"cardId":140,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 02:10:44 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":140} 
 Player 2 02:10:44 $FLIP_CARD:  

 {"cardId":140} 
 Player 2 02:10:44 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":140} 
 Player 2 02:10:44 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 02:10:44 $MOVE_CARD:  

 {"moveIndex":5,"cardId":139,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 02:10:44 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":139} 
 Player 2 02:10:44 $FLIP_CARD:  

 {"cardId":139} 
 Player 2 02:10:44 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":139} 
 Player 2 02:10:44 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 02:10:44 $MOVE_CARD:  

 {"moveIndex":6,"cardId":138,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 02:10:45 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":138} 
 Player 2 02:10:45 $FLIP_CARD:  

 {"cardId":138} 
 Player 2 02:10:45 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":138} 
 Player 2 02:10:45 $GAME_HAS_STARTED:  
 Player 2 02:10:45 $SET_TURN:  

 {"playerId":2} 
 Player 2 02:10:45 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:10:45 $NEXT_STACK_ID:  
 Player 2 02:10:45 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:10:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 02:10:45 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":266,"turnPlayerCardId":266,"stackEffectType":13}} 
 Player 2 02:10:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 02:10:45 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":1,"creatorCardId":266,"turnPlayerCardId":266,"stackEffectType":13}} 
 Player 2 02:10:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 
 Player 2 02:10:45 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:10:45 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 2 02:10:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 02:10:45 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":266,"turnPlayerCardId":266,"stackEffectType":13}} 
 Player 2 02:10:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 
 Player 2 02:10:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 2 02:10:45 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:10:45 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 2 02:10:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 2 02:10:45 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:10:45 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:10:46 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 2 02:10:46 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 2 02:10:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 
 Player 2 02:10:46 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 02:10:46 $MOVE_CARD:  

 {"moveIndex":7,"cardId":137,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 02:10:46 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":137} 
 Player 2 02:10:46 $FLIP_CARD:  

 {"cardId":137} 
 Player 2 02:10:46 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":137} 
 Player 2 02:10:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 02:10:46 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":266,"turnPlayerCardId":266,"stackEffectType":13}} 
 Player 2 02:10:46 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 2 02:10:46 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:10:46 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":1,"creatorCardId":266,"turnPlayerCardId":266,"stackEffectType":13}} 
 Player 2 02:10:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 
 Player 2 02:10:46 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:10:46 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":266,"turnPlayerCardId":266,"stackEffectType":13}} 
 Player 2 02:10:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 
 Player 2 02:10:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Player 2 02:10:46 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:10:46 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:10:47 $ACTION_MASSAGE_REMOVE:  

 {"id":7} 
 Player 2 02:10:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Player 2 02:10:47 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:10:47 $ACTION_MASSAGE_REMOVE:  

 {"id":8} 
 Player 2 02:10:47 $ACTION_MASSAGE_REMOVE:  

 {"id":6} 
 Player 2 02:10:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":9,"_text":"Stack Was Emptied "}} 
 Player 2 02:10:47 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:10:47 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 2 02:10:47 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 2 02:10:47 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 2 02:10:47 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 2 02:10:47 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 2 02:10:47 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 2 02:10:47 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 2 02:10:47 $UPDATE_ACTIONS:  
 Player 2 02:10:48 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 2 02:10:49 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 2 02:10:59 $SHOW_DECISION:  

 {"startCardId":266,"endCardId":257} 
 Player 2 02:11:02 $NEXT_STACK_ID:  
 Player 2 02:11:02 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:11:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on War"} 
 Player 2 02:11:02 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":266,"attackingPlayerCardId":266,"idOfCardBeingAttacked":257,"stackEffectType":4}} 
 Player 2 02:11:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on War"} 
 Player 2 02:11:02 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":2,"creatorCardId":266,"attackingPlayerCardId":266,"idOfCardBeingAttacked":257,"stackEffectType":4}} 
 Player 2 02:11:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":10,"_text":"Add DeclareAttack 2 "}} 
 Player 2 02:11:03 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:11:03 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 2 02:11:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on War"} 
 Player 2 02:11:03 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":266,"attackingPlayerCardId":266,"idOfCardBeingAttacked":257,"stackEffectType":4}} 
 Player 2 02:11:03 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":11,"_text":"Response Adding DeclareAttack 2"},"childOfId":10} 
 Player 2 02:11:03 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 
 Player 2 02:11:03 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:11:03 $ACTION_MASSAGE_REMOVE:  

 {"id":12} 
 Player 2 02:11:03 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 
 Player 2 02:11:03 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:11:03 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:11:03 $ACTION_MASSAGE_REMOVE:  

 {"id":13} 
 Player 2 02:11:03 $ACTION_MASSAGE_REMOVE:  

 {"id":11} 
 Player 2 02:11:03 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":14,"_text":"Resolve DeclareAttack 2 "}} 
 Player 2 02:11:03 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":257,"particleType":5} 
 Player 2 02:11:03 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":266,"scopeIsPlayer":true,"index":4,"originStackId":2},"isAfterActivation":true,"index":4} 
 Player 2 02:11:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on War"} 
 Player 2 02:11:03 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":266,"attackingPlayerCardId":266,"idOfCardBeingAttacked":257,"stackEffectType":4}} 
 Player 2 02:11:03 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 2 02:11:03 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:11:03 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":2,"creatorCardId":266,"attackingPlayerCardId":266,"idOfCardBeingAttacked":257,"stackEffectType":4}} 
 Player 2 02:11:03 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":15,"_text":"Remove After Resolve DeclareAttack 2  "}} 
 Player 2 02:11:03 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:11:03 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":266,"attackingPlayerCardId":266,"idOfCardBeingAttacked":257,"stackEffectType":4}} 
 Player 2 02:11:03 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":16,"_text":"Response Remove After Resolve DeclareAttack 2"},"childOfId":15} 
 Player 2 02:11:03 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 
 Player 2 02:11:03 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:11:03 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:11:04 $ACTION_MASSAGE_REMOVE:  

 {"id":17} 
 Player 2 02:11:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 
 Player 2 02:11:04 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:11:04 $ACTION_MASSAGE_REMOVE:  

 {"id":18} 
 Player 2 02:11:04 $ACTION_MASSAGE_REMOVE:  

 {"id":16} 
 Player 2 02:11:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":19,"_text":"Stack Was Emptied "}} 
 Player 2 02:11:04 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:11:04 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 2 02:11:04 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 2 02:11:04 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 2 02:11:04 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 2 02:11:04 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 2 02:11:04 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 2 02:11:04 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 2 02:11:04 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 2 02:11:04 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 2 02:11:04 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 2 02:11:04 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 2 02:11:05 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 2 02:11:06 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 2 02:11:09 $NEXT_STACK_ID:  
 Player 2 02:11:09 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:11:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against War<Monster>"} 
 Player 2 02:11:09 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":266,"rollingPlayerCardId":266,"stackEffectType":2,"attackedMonsterCardId":257}} 
 Player 2 02:11:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against War<Monster>"} 
 Player 2 02:11:09 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":266,"rollingPlayerCardId":266,"stackEffectType":2,"attackedMonsterCardId":257}} 
 Player 2 02:11:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":20,"_text":"Add AttackRoll 3 "}} 
 Player 2 02:11:09 $ROLL_DICE:  

 {"playerId":2} 
 Player 2 02:11:11 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":3} 
 Player 2 02:11:11 $UPDATE_STACK_VIS:  

 {"stackId":3,"text":"player rolled 3 vs War<Monster>"} 
 Player 2 02:11:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 3 vs War<Monster>"} 
 Player 2 02:11:11 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:11:11 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 2 02:11:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 3 vs War<Monster>"} 
 Player 2 02:11:11 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":266,"numberRolled":3,"rollingPlayerCardId":266,"stackEffectType":2,"attackedMonsterCardId":257}} 
 Player 2 02:11:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":21,"_text":"Response Adding AttackRoll 3"},"childOfId":20} 
 Player 2 02:11:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 
 Player 2 02:11:11 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:11:11 $ACTION_MASSAGE_REMOVE:  

 {"id":22} 
 Player 2 02:11:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 
 Player 2 02:11:11 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:11:11 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:11:11 $ACTION_MASSAGE_REMOVE:  

 {"id":23} 
 Player 2 02:11:11 $ACTION_MASSAGE_REMOVE:  

 {"id":21} 
 Player 2 02:11:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":24,"_text":"Resolve AttackRoll 3 "}} 
 Player 2 02:11:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":25,"_text":"Added 0 to original roll"}} 
 Player 2 02:11:11 $NEXT_STACK_ID:  
 Player 2 02:11:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 3 vs War<Monster>"} 
 Player 2 02:11:11 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:11:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Eden combat damage to War \n2:Player 2 rolled 3 vs War<Monster>"} 
 Player 2 02:11:11 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":4,"creatorCardId":266,"entityToDoDamageCardId":266,"entityToTakeDamageCardId":257,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 02:11:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Eden combat damage to War \n2:Player 2 rolled 3 vs War<Monster>"} 
 Player 2 02:11:11 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":266,"numberRolled":3,"rollingPlayerCardId":266,"stackEffectType":2,"attackedMonsterCardId":257}} 
 Player 2 02:11:11 $LOG_ERROR:  

 "error while resolving stack effect 3" 
//////Error From Player 2////
 [object Object]
////// 
 Player 2 02:11:12 $LOG_ERROR:  

 {"message":"\"Cannot read property 'node' of null\"","stack":"\"TypeError: Cannot read property 'node' of null\\n    at StackEffectPreview.showExtraInfo (http://localhost:7456/preview-scripts/assets/Script/StackEffects/StackEffectVisualRepresentation/StackEffectPreview.js:71:24)\\n    at StackEffectPreview.setStackEffect (http://localhost:7456/preview-scripts/assets/Script/StackEffects/StackEffectVisualRepresentation/StackEffectPreview.js:46:18)\\n    at StackEffectVisManager.addPreview (http://localhost:7456/preview-scripts/assets/Script/Managers/StackEffectVisManager.js:94:67)\\n    at StackEffectVisManager.setPreviews (http://localhost:7456/preview-scripts/assets/Script/Managers/StackEffectVisManager.js:112:18)\\n    at Function.Stack.replaceStack (http://localhost:7456/preview-scripts/assets/Script/Entites/Stack.js:504:47)\\n    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/Stack.js:208:51)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\\n    at fulfilled (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89787:28)\""} 
 Player 2 02:11:12 $ACTION_MASSAGE_REMOVE:  

 {"id":24} 
 Player 2 02:11:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Eden combat damage to War"} 
 Player 2 02:11:12 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":266,"numberRolled":3,"rollingPlayerCardId":266,"stackEffectType":2,"attackedMonsterCardId":257}} 
 Player 2 02:11:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":26,"_text":"Remove After Resolve AttackRoll 3  "}} 
 Player 2 02:11:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Eden combat damage to War"} 
 Player 2 02:11:12 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":266,"numberRolled":3,"rollingPlayerCardId":266,"stackEffectType":2,"attackedMonsterCardId":257}} 
 Player 2 02:11:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":27,"_text":"Response Remove After Resolve AttackRoll 3"},"childOfId":26} 
 Player 2 02:11:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":26} 
 Player 2 02:11:12 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:11:12 $ACTION_MASSAGE_REMOVE:  

 {"id":28} 
 Player 2 02:11:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":29,"_text":"Wait For Response From Player 1 "},"childOfId":26} 
 Player 2 02:11:12 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:11:12 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:11:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Eden combat damage to War"} 
 Player 2 02:11:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Eden combat damage to War"} 
 Player 2 02:11:13 $LOG_ERROR:  

 "error while resolving stack effect 4" 
//////Error From Player 2////
 [object Object]
////// 
 Player 2 02:11:13 $LOG_ERROR:  

 {"message":"\"trying to update stack effect 4 preview with text: Eden will deal 1 combat damage to War\"","stack":"\"Error: trying to update stack effect 4 preview with text: Eden will deal 1 combat damage to War\\n    at StackEffectVisManager.updatePreviewByStackId (http://localhost:7456/preview-scripts/assets/Script/Managers/StackEffectVisManager.js:86:19)\\n    at CombatDamage.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/StackEffects/Combat%20Damage.js:136:59)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\\n    at fulfilled (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89787:28)\""} 
 Player 2 02:11:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Eden combat damage to War"} 
 Player 2 02:11:13 $FINISH_DO_STACK_EFFECT:  

 {"playerId":1,"newStack":[{"entityId":4,"creatorCardId":266,"entityToDoDamageCardId":266,"entityToTakeDamageCardId":257,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}]} 
 Player 2 02:11:13 $ACTION_MASSAGE_REMOVE:  

 {"id":29} 
 Player 2 02:11:13 $ACTION_MASSAGE_REMOVE:  

 {"id":27} 
 Player 2 02:11:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":30,"_text":"Resolve CombatDamage 4 "}} 
 Player 2 02:11:13 $LOG_ERROR:  

 "error while resolving stack effect 4" 
//////Error From Player 2////
 [object Object]
////// 
 Player 2 02:11:13 $LOG_ERROR:  

 {"message":"\"trying to update stack effect 4 preview with text: Eden will deal 1 combat damage to War\"","stack":"\"Error: trying to update stack effect 4 preview with text: Eden will deal 1 combat damage to War\\n    at StackEffectVisManager.updatePreviewByStackId (http://localhost:7456/preview-scripts/assets/Script/Managers/StackEffectVisManager.js:86:19)\\n    at CombatDamage.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/StackEffects/Combat%20Damage.js:136:59)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\\n    at fulfilled (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89787:28)\""} 
 Player 2 02:11:13 $ACTION_MASSAGE_REMOVE:  

 {"id":30} 
 Player 2 02:11:13 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:11:13 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":4,"creatorCardId":266,"entityToDoDamageCardId":266,"entityToTakeDamageCardId":257,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 02:11:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":31,"_text":"Remove After Resolve CombatDamage 4  "}} 
 Player 2 02:11:13 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:11:14 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":4,"creatorCardId":266,"entityToDoDamageCardId":266,"entityToTakeDamageCardId":257,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 02:11:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":32,"_text":"Response Remove After Resolve CombatDamage 4"},"childOfId":31} 
 Player 2 02:11:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":31} 
 Player 2 02:11:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:11:14 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:11:14 $ACTION_MASSAGE_REMOVE:  

 {"id":33} 
 Player 2 02:11:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":34,"_text":"Wait For Response From Player 2 "},"childOfId":31} 
 Player 2 02:11:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:11:14 $ACTION_MASSAGE_REMOVE:  

 {"id":34} 
 Player 2 02:11:14 $ACTION_MASSAGE_REMOVE:  

 {"id":32} 
 Player 2 02:11:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":35,"_text":"Stack Was Emptied "}} 
 Player 2 02:11:14 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:11:14 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 2 02:11:14 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 2 02:11:14 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 2 02:11:14 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 2 02:11:15 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 2 02:11:15 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 2 02:11:15 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 2 02:11:15 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 2 02:11:15 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 2 02:11:15 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 2 02:11:15 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 2 02:11:15 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 2 02:11:15 $ACTION_MASSAGE_REMOVE:  

 {"id":24} 
 Player 2 02:11:15 $ACTION_MASSAGE_REMOVE:  

 {"id":25} 
 Player 2 02:11:15 $ACTION_MASSAGE_REMOVE:  

 {"id":26} 
 Player 2 02:11:15 $ACTION_MASSAGE_REMOVE:  

 {"id":30} 
 Player 2 02:11:15 $ACTION_MASSAGE_REMOVE:  

 {"id":31} 
 Player 2 02:11:15 $ACTION_MASSAGE_REMOVE:  

 {"id":35} 
 Player 2 02:11:15 $ACTION_MASSAGE_REMOVE:  

 {"id":25} 
 Player 2 02:11:15 $ACTION_MASSAGE_REMOVE:  

 {"id":26} 
 Player 2 02:11:16 $ACTION_MASSAGE_REMOVE:  

 {"id":35} 
 Player 2 02:11:16 $ACTION_MASSAGE_REMOVE:  

 {"id":31} 
 Player 2 02:13:55 $MATCH: 