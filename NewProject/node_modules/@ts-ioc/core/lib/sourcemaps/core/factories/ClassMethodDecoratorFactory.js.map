{"version":3,"sources":["core/factories/ClassMethodDecoratorFactory.ts"],"names":[],"mappings":";;AAEA,uDAAsF;AACtF,iDAAgD;AAwBhD;;;;;;;;;GASG;AACH,SAAgB,0BAA0B,CAAyB,IAAY,EAAE,OAAyB,EAAE,eAAoC;IAC5I,IAAI,SAAS,GAAG,kCAAe,CAAI,IAAI,EAAE,OAAO,EAAE,eAAe,CAAC,CAAC;IACnE,SAAS,CAAC,aAAa,GAAG,6BAAa,CAAC,KAAK,GAAG,6BAAa,CAAC,MAAM,CAAC;IACrE,OAAO,SAAS,CAAC;AACrB,CAAC;AAJD,gEAIC","file":"../../../core/factories/ClassMethodDecoratorFactory.js","sourcesContent":["import { Type } from '../../types';\r\nimport { TypeMetadata } from '../metadatas';\r\nimport { createDecorator, MetadataAdapter, MetadataExtends } from './DecoratorFactory'\r\nimport { DecoratorType } from './DecoratorType';\r\n\r\n\r\nexport type ClassMethodDecorator = (target: Object | Type<any>, propertyKey?: string | symbol, descriptor?: TypedPropertyDescriptor<any>) => void;\r\n\r\n/**\r\n * class method decorator\r\n *\r\n * @export\r\n * @interface IClassMethodDecorator\r\n * @template T\r\n */\r\nexport interface IClassMethodDecorator<T extends TypeMetadata> {\r\n    /**\r\n     * create decorator with metadata map. for class or method decorator.\r\n     *\r\n     * @param {T} [metadata] metadata map.\r\n     */\r\n    (metadata?: T): ClassMethodDecorator;\r\n\r\n    (target: Type<any>): void;\r\n    (target: Object, propertyKey: string | symbol, descriptor: TypedPropertyDescriptor<any>): void;\r\n}\r\n\r\n/**\r\n * create decorator for class and method.\r\n *\r\n * @export\r\n * @template T\r\n * @param {string} name\r\n * @param {MetadataAdapter} [adapter]  metadata adapter\r\n * @param {MetadataExtends<T>} [metadataExtends] add extents for metadata.\r\n * @returns {IClassMethodDecorator<T>}\r\n */\r\nexport function createClassMethodDecorator<T extends TypeMetadata>(name: string, adapter?: MetadataAdapter, metadataExtends?: MetadataExtends<T>): IClassMethodDecorator<T> {\r\n    let decorator = createDecorator<T>(name, adapter, metadataExtends);\r\n    decorator.decoratorType = DecoratorType.Class | DecoratorType.Method;\r\n    return decorator;\r\n}\r\n\r\n"]}