Start Log 

 Player 1 15:45:07 $MATCH:  

 Player 1 15:45:07 $START_GAME:  

 Player 1 15:45:07 $MOVE_TO_TABLE:  

 Player 2 15:45:07 $MOVE_TO_TABLE:  

 Player 1 15:45:19 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 15:45:19 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 2 15:45:19 $SET_CHAR:  
{"originPlayerId":2,"playerId":1,"charCardId":317,"itemCardId":320} 

 Player 1 15:45:19 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":317,"itemCardId":320} 

 Player 1 15:45:19 $SET_CHAR_END:  
{"playerId":2} 

 Player 2 15:45:19 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":329,"itemCardId":330} 

 Player 2 15:45:19 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[75,116,66,7,33,54,80,114,30,87,70,127,86,27,23,90,57,77,45,122,98,72,55,120,121,79,21,43,141,112,19,26,91,62,125,53,85,69,10,25,110,119,17,111,58,124,61,68,118,20,38,96,52,129,14,128,46,42,9,60,139,88,95,37,78,36,138,13,134,131,18,16,35,41,99,49,47,44,126,28,108,104,97,105,71,94,103,59,101,89,107,63,48,73,142,132,123,29,130,24,22,31,117,109,40,92,34,56,8,106,39,135,12,32,11,102,83,137,15,74,113,93,84,65,82,50,81,136,140,76,64,133,100,115,51,67]} 

 Player 2 15:45:19 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[253,311,306,257,312,272,239,260,263,234,244,274,294,242,249,259,230,286,237,302,265,270,243,236,308,289,282,290,309,251,277,258,238,248,305,299,298,291,280,276,256,233,275,293,296,301,284,288,307,247,303,283,300,267,261,240,254,292,310,228,232,262,235,245,304,264,250,255,227,297,268,287,229,241,266,252,285,231,269,273,279,295,281,246,271,278]} 

 Player 2 15:45:19 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[154,164,203,169,147,210,223,208,194,207,198,217,196,171,149,152,206,184,159,191,214,202,204,218,170,167,220,177,162,216,146,187,195,161,145,156,211,212,178,188,219,151,186,221,201,150,179,163,185,180,183,148,222,189,209,205,175,182,190,166,174,173,172,176,165,160,224,158,215,200,157,168,181,193,155,197,213,153,192,199]} 

 Player 2 15:45:19 $DRAW_CARD:  
{"deckType":5} 

 Player 2 15:45:19 $FLIP_CARD:  
{"cardId":199} 

 Player 2 15:45:19 $ADD_STORE_CARD:  
{"cardId":199} 

 Player 2 15:45:19 $DRAW_CARD:  
{"deckType":5} 

 Player 2 15:45:20 $FLIP_CARD:  
{"cardId":192} 

 Player 2 15:45:20 $ADD_STORE_CARD:  
{"cardId":192} 

 Player 2 15:45:20 $DRAW_CARD:  
{"deckType":2} 

 Player 2 15:45:20 $FLIP_CARD:  
{"cardId":278} 

 Player 2 15:45:20 $REGISTER_PASSIVE_ITEM:  
{"cardId":278} 

 Player 2 15:45:20 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":278} 

 Player 2 15:45:20 $NEW_MONSTER_ON_PLACE:  
{"cardId":278,"monsterPlaceId":1} 

 Player 2 15:45:20 $DRAW_CARD:  
{"deckType":2} 

 Player 2 15:45:20 $FLIP_CARD:  
{"cardId":271} 

 Player 2 15:45:20 $REGISTER_PASSIVE_ITEM:  
{"cardId":271} 

 Player 2 15:45:20 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":271} 

 Player 2 15:45:20 $NEW_MONSTER_ON_PLACE:  
{"cardId":271,"monsterPlaceId":2} 

 Player 2 15:45:20 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 15:45:20 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":317,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 15:45:20 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:45:20 $MOVE_CARD:  
{"moveIndex":1,"cardId":67,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:45:21 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":67,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:45:21 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":67} 

 Player 2 15:45:21 $FLIP_CARD:  
{"cardId":67} 

 Player 2 15:45:21 $FLIP_CARD:  
{"cardId":67} 

 Player 2 15:45:21 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":67} 

 Player 2 15:45:21 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:45:21 $MOVE_CARD:  
{"moveIndex":2,"cardId":51,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:45:21 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":51,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:45:21 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":51} 

 Player 2 15:45:21 $FLIP_CARD:  
{"cardId":51} 

 Player 2 15:45:22 $FLIP_CARD:  
{"cardId":51} 

 Player 2 15:45:22 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":51} 

 Player 2 15:45:22 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:45:22 $MOVE_CARD:  
{"moveIndex":3,"cardId":115,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:45:22 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":115,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:45:22 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":115} 

 Player 2 15:45:22 $FLIP_CARD:  
{"cardId":115} 

 Player 2 15:45:22 $FLIP_CARD:  
{"cardId":115} 

 Player 2 15:45:22 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":115} 

 Player 2 15:45:22 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 15:45:22 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":329,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 15:45:22 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:45:22 $MOVE_CARD:  
{"moveIndex":4,"cardId":100,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:45:23 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":100,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:45:23 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":100} 

 Player 2 15:45:23 $FLIP_CARD:  
{"cardId":100} 

 Player 2 15:45:23 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":100} 

 Player 2 15:45:23 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:45:23 $MOVE_CARD:  
{"moveIndex":5,"cardId":133,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:45:23 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":133,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:45:23 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":133} 

 Player 2 15:45:23 $FLIP_CARD:  
{"cardId":133} 

 Player 2 15:45:24 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":133} 

 Player 2 15:45:24 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:45:24 $MOVE_CARD:  
{"moveIndex":6,"cardId":64,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:45:24 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":64,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:45:24 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":64} 

 Player 2 15:45:24 $FLIP_CARD:  
{"cardId":64} 

 Player 2 15:45:24 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":64} 

 Player 2 15:45:24 $GAME_HAS_STARTED:  

 Player 2 15:45:24 $SET_TURN:  
{"playerId":1} 

 Player 2 15:45:24 $START_TURN:  
{"playerId":1} 

 Player 2 15:45:24 $UPDATE_ACTIONS:  

 Player 1 15:45:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:45:24 $NEXT_STACK_ID:  

 Player 1 15:45:24 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:45:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 15:45:24 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":317,"turnPlayerCardId":317,"stackEffectType":13}} 

 Player 1 15:45:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 15:45:25 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":317,"turnPlayerCardId":317,"stackEffectType":13}} 

 Player 1 15:45:25 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 15:45:25 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 2 15:45:25 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:45:25 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:45:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 15:45:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 15:45:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 1 15:45:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:45:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 15:45:27 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":317,"turnPlayerCardId":317,"stackEffectType":13}} 

 Player 1 15:45:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 1 15:45:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 1 15:45:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:45:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 1 15:45:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 15:45:28 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 15:45:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 15:45:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 15:45:28 $HIDE_REACTIONS:  
{"cardsIds":[329,330]} 

 Player 2 15:45:28 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 15:45:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 1 15:45:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 15:45:28 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":317,"turnPlayerCardId":317,"stackEffectType":13}} 

 Player 1 15:45:28 $DRAW_CARD:  
{"deckType":1} 

 Player 1 15:45:28 $MOVE_CARD:  
{"moveIndex":7,"cardId":76,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 15:45:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 15:45:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 15:45:28 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":76,"flipIfFlipped":false,"playerId":1} 

 Player 1 15:45:28 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":76} 

 Player 1 15:45:29 $FLIP_CARD:  
{"cardId":76} 

 Player 1 15:45:29 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":76} 

 Player 1 15:45:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 15:45:29 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":317,"turnPlayerCardId":317,"stackEffectType":13}} 

 Player 1 15:45:29 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":1} 

 Player 1 15:45:29 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 15:45:29 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 2 15:45:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 15:45:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 15:45:31 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":1} 

 Player 1 15:45:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 1 15:45:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:45:32 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":317,"turnPlayerCardId":317,"stackEffectType":13}} 

 Player 1 15:45:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 1 15:45:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 1 15:45:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 15:45:32 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 15:45:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 15:45:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 15:45:32 $HIDE_REACTIONS:  
{"cardsIds":[329,330]} 

 Player 2 15:45:32 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 15:45:32 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 1 15:45:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 1 15:45:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:45:32 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 1 15:45:32 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 1 15:45:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 1 15:45:32 $CLEAR_SE_VIS:  

 Player 1 15:45:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:46:26 $NEXT_STACK_ID:  

 Player 1 15:46:26 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:46:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(7) "} 

 Player 1 15:46:27 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":317,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":67,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 15:46:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(7) "} 

 Player 1 15:46:27 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":317,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":67,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 15:46:27 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 15:46:27 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 2 15:46:27 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:46:27 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:46:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(7) "} 

 Player 2 15:46:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(7) "} 

 Player 1 15:46:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add PlayLootCardStackEffect 2 "}} 

 Player 1 15:46:30 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":67} 

 Player 1 15:46:30 $MOVE_CARD:  
{"moveIndex":8,"cardId":67,"placeID":331,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 15:46:30 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":67,"flipIfFlipped":true,"playerId":1} 

 Player 1 15:46:30 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":67} 

 Player 1 15:46:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(7): addMoney"} 

 Player 1 15:46:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:46:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(7): addMoney"} 

 Player 1 15:46:30 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":317,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":67,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":67,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 15:46:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding PlayLootCardStackEffect 2"},"childOfId":10} 

 Player 1 15:46:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 1 15:46:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:46:30 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 1 15:46:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 1 15:46:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 15:46:31 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 15:46:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(7) "} 

 Player 2 15:46:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(7) "} 

 Player 2 15:46:31 $HIDE_REACTIONS:  
{"cardsIds":[329,330]} 

 Player 2 15:46:31 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 15:46:31 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 1 15:46:31 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 1 15:46:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve PlayLootCardStackEffect 2 "}} 

 Player 1 15:46:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(7): addMoney"} 

 Player 1 15:46:31 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":317,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":67,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":67,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 15:46:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(7): addMoney"} 

 Player 1 15:46:31 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":67,"particleType":6} 

 Player 2 15:46:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(7) "} 

 Player 2 15:46:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(7) "} 

 Player 1 15:46:33 $DISABLE_PARTICLE_EFFECT:  
{"cardId":67,"particleType":6} 

 Player 1 15:46:33 $SET_MONEY:  
{"playerId":1,"numOfCoins":7} 

 Player 1 15:46:33 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":317,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 15:46:33 $REMOVE_FROM_PILE:  
{"cardId":67} 

 Player 1 15:46:57 $MOVE_CARD:  
{"moveIndex":9,"cardId":67,"placeID":332,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 15:47:23 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":67,"flipIfFlipped":true,"playerId":1} 

 Player 1 15:47:23 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":67} 

 Player 1 15:47:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(7): addMoney"} 

 Player 1 15:47:23 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":317,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":67,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 15:47:23 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":2} 

 Player 1 15:47:23 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 15:47:23 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 2 15:47:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(7) "} 

 Player 2 15:47:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(7) "} 

 Player 1 15:47:26 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":2} 

 Player 1 15:47:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve PlayLootCardStackEffect 2  "}} 

 Player 1 15:47:26 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:47:26 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":317,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":67,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 15:47:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve PlayLootCardStackEffect 2"},"childOfId":15} 

 Player 1 15:47:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 1 15:47:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 15:47:26 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 15:47:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(7) "} 

 Player 2 15:47:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(7) "} 

 Player 2 15:47:26 $HIDE_REACTIONS:  
{"cardsIds":[329,330]} 

 Player 2 15:47:26 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 15:47:26 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 1 15:47:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 1 15:47:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:47:26 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 1 15:47:26 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 1 15:47:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 1 15:47:26 $CLEAR_SE_VIS:  

 Player 1 15:47:26 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:47:38 $NEXT_STACK_ID:  

 Player 1 15:47:38 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:47:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Cain"} 

 Player 1 15:47:38 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":317,"hasLockingStackEffect":false,"itemToPlayCardId":317,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 15:47:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Cain"} 

 Player 1 15:47:38 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":317,"hasLockingStackEffect":false,"itemToPlayCardId":317,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 15:47:38 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 15:47:38 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 2 15:47:38 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:47:38 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:47:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Cain"} 

 Player 2 15:47:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Cain"} 

 Player 1 15:47:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add ActivateItem 3 "}} 

 Player 1 15:47:44 $SHOW_DECISION:  
{"startCardId":317,"endCardId":51,"flipEndCard":true} 

 Player 1 15:47:47 $USE_ITEM:  
{"cardId":317} 

 Player 1 15:47:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:47:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Cain"} 

 Player 1 15:47:47 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":317,"hasLockingStackEffect":false,"itemToPlayCardId":317,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 15:47:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding ActivateItem 3"},"childOfId":20} 

 Player 1 15:47:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 1 15:47:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:47:47 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 1 15:47:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 1 15:47:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 15:47:47 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 15:47:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Cain"} 

 Player 2 15:47:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Cain"} 

 Player 2 15:47:47 $HIDE_REACTIONS:  
{"cardsIds":[329,330]} 

 Player 2 15:47:47 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 15:47:47 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 1 15:47:47 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 1 15:47:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve ActivateItem 3 "}} 

 Player 1 15:47:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Cain"} 

 Player 1 15:47:47 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":317,"hasLockingStackEffect":false,"itemToPlayCardId":317,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 15:47:47 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":317,"particleType":6} 

 Player 2 15:47:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Cain"} 

 Player 2 15:47:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Cain"} 

 Player 1 15:47:49 $DISABLE_PARTICLE_EFFECT:  
{"cardId":317,"particleType":6} 

 Player 1 15:47:49 $NEXT_STACK_ID:  

 Player 1 15:47:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Cain"} 

 Player 1 15:47:49 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":51} 

 Player 1 15:47:49 $MOVE_CARD:  
{"moveIndex":10,"cardId":51,"placeID":331,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 15:47:50 $MOVE_CARD_END:  
{"moveIndex":10,"cardId":51,"flipIfFlipped":true,"playerId":1} 

 Player 1 15:47:50 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":51} 

 Player 1 15:47:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(13): addMoney \n2:Player 1 activated Cain"} 

 Player 1 15:47:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:47:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(13): addMoney \n2:Player 1 activated Cain"} 

 Player 1 15:47:50 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":317,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":51,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":51,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 15:47:50 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 15:47:50 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 2 15:47:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Cain"} 

 Player 2 15:47:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Cain"} 

 Player 1 15:47:53 $CLEAR_SE_VIS:  

 Player 1 15:47:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(13): addMoney \n2:Player 1 activated Cain"} 

 Player 1 15:47:53 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":317,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":51,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":51,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 15:47:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(13): addMoney \n2:Player 1 activated Cain"} 

 Player 1 15:47:53 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":317,"hasLockingStackEffect":false,"itemToPlayCardId":317,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 15:47:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(13): addMoney \n2:Player 1 activated Cain"} 

 Player 1 15:47:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(13): addMoney \n2:Player 1 activated Cain"} 

 Player 1 15:47:53 $REPLACE_STACK:  
{"currentStack":[{"entityId":4,"creatorCardId":317,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":51,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":51,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":3,"creatorCardId":317,"hasLockingStackEffect":false,"itemToPlayCardId":317,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 

 Player 1 15:47:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(13): addMoney \n2:Player 1 activated Cain"} 

 Player 1 15:47:53 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":317,"hasLockingStackEffect":false,"itemToPlayCardId":317,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 15:47:53 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":3} 

 Player 1 15:47:53 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 15:47:53 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 2 15:47:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Cain"} 

 Player 2 15:47:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Cain"} 

 Player 2 15:47:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Cain"} 

 Player 2 15:47:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Cain"} 

 Player 2 15:47:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Cain"} 

 Player 2 15:47:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Cain"} 

 Player 2 15:47:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Cain"} 

 Player 2 15:47:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Cain"} 

 Player 2 15:47:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(13)  \n2:Player 1 activated Cain"} 

 Player 2 15:47:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(13)  \n2:Player 1 activated Cain"} 

 Player 1 15:47:56 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":3} 

 Player 1 15:47:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Remove After Resolve ActivateItem 3  "}} 

 Player 1 15:47:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(13): addMoney"} 

 Player 1 15:47:56 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":317,"hasLockingStackEffect":false,"itemToPlayCardId":317,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 15:47:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Response Remove After Resolve ActivateItem 3"},"childOfId":25} 

 Player 1 15:47:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Wait For Response From Player 1 "},"childOfId":25} 

 Player 1 15:47:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:47:56 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 1 15:47:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":25} 

 Player 1 15:47:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 15:47:56 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 15:47:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(13)  \n2:Player 1 activated Cain"} 

 Player 2 15:47:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(13)  \n2:Player 1 activated Cain"} 

 Player 2 15:47:56 $HIDE_REACTIONS:  
{"cardsIds":[329,330]} 

 Player 2 15:47:56 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 15:47:56 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 1 15:47:56 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 1 15:47:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Resolve PlayLootCardStackEffect 4 "}} 

 Player 1 15:47:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(13): addMoney"} 

 Player 1 15:47:56 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":317,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":51,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":51,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 15:47:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(13): addMoney"} 

 Player 1 15:47:57 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":51,"particleType":6} 

 Player 2 15:47:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(13) "} 

 Player 2 15:47:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(13) "} 

 Player 1 15:47:58 $DISABLE_PARTICLE_EFFECT:  
{"cardId":51,"particleType":6} 

 Player 1 15:47:58 $SET_MONEY:  
{"playerId":1,"numOfCoins":10} 

 Player 1 15:47:58 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":317,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 1 15:47:58 $REMOVE_FROM_PILE:  
{"cardId":51} 

 Player 1 15:48:23 $MOVE_CARD:  
{"moveIndex":11,"cardId":51,"placeID":332,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 15:48:49 $MOVE_CARD_END:  
{"moveIndex":11,"cardId":51,"flipIfFlipped":true,"playerId":1} 

 Player 1 15:48:49 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":51} 

 Player 1 15:48:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(13): addMoney"} 

 Player 1 15:48:49 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":317,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":51,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 15:48:49 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":4} 

 Player 1 15:48:49 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 15:48:49 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 2 15:48:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(13) "} 

 Player 2 15:48:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(13) "} 

 Player 1 15:48:52 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":4} 

 Player 1 15:48:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Remove After Resolve PlayLootCardStackEffect 4  "}} 

 Player 1 15:48:52 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:48:52 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":317,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":51,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 15:48:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Response Remove After Resolve PlayLootCardStackEffect 4"},"childOfId":30} 

 Player 1 15:48:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Wait For Response From Player 2 "},"childOfId":30} 

 Player 1 15:48:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 15:48:52 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 15:48:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(13) "} 

 Player 2 15:48:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(13) "} 

 Player 2 15:48:52 $HIDE_REACTIONS:  
{"cardsIds":[329,330]} 

 Player 2 15:48:52 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 15:48:52 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 1 15:48:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":30} 

 Player 1 15:48:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:48:53 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 1 15:48:53 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 1 15:48:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Stack Was Emptied "}} 

 Player 1 15:48:53 $CLEAR_SE_VIS:  

 Player 1 15:48:53 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:49:07 $NEXT_STACK_ID:  

 Player 1 15:49:07 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:49:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10"} 

 Player 1 15:49:08 $ADD_TO_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":317,"itemToPurchaseCardId":199,"playerWhoBuysCardId":317,"cost":10,"stackEffectType":9}} 

 Player 1 15:49:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10"} 

 Player 1 15:49:08 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":317,"itemToPurchaseCardId":199,"playerWhoBuysCardId":317,"cost":10,"stackEffectType":9}} 

 Player 1 15:49:08 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 15:49:08 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 2 15:49:08 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:49:08 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:49:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10"} 

 Player 2 15:49:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10"} 

 Player 1 15:49:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Add PurchaseItem 5 "}} 

 Player 1 15:49:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:49:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10"} 

 Player 1 15:49:11 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":317,"itemToPurchaseCardId":199,"playerWhoBuysCardId":317,"cost":10,"stackEffectType":9}} 

 Player 1 15:49:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Response Adding PurchaseItem 5"},"childOfId":35} 

 Player 1 15:49:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Wait For Response From Player 1 "},"childOfId":35} 

 Player 1 15:49:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:49:11 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 1 15:49:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 2 "},"childOfId":35} 

 Player 1 15:49:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 15:49:11 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 15:49:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10"} 

 Player 2 15:49:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10"} 

 Player 2 15:49:11 $HIDE_REACTIONS:  
{"cardsIds":[329,330]} 

 Player 2 15:49:11 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 15:49:11 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 1 15:49:11 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 1 15:49:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Resolve PurchaseItem 5 "}} 

 Player 1 15:49:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10"} 

 Player 1 15:49:11 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":317,"itemToPurchaseCardId":199,"playerWhoBuysCardId":317,"cost":10,"stackEffectType":9}} 

 Player 1 15:49:11 $SET_MONEY:  
{"playerId":1,"numOfCoins":0} 

 Player 1 15:49:11 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-10}],"result":null,"preventMethod":false,"methodScopeId":317,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 1 15:49:11 $REMOVE_ITEM_FROM_SHOP:  
{"cardId":199} 

 Player 1 15:49:11 $NEXT_STACK_ID:  

 Player 1 15:49:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10"} 

 Player 1 15:49:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:49:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10 \n2:Refill Store slot"} 

 Player 1 15:49:11 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":317,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 1 15:49:11 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 15:49:11 $SHOW_STACK_EFFECT:  
{"effectId":6} 

 Player 2 15:49:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10"} 

 Player 2 15:49:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10"} 

 Player 2 15:49:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10"} 

 Player 2 15:49:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10"} 

 Player 1 15:49:14 $CLEAR_SE_VIS:  

 Player 1 15:49:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10 \n2:Refill Store slot"} 

 Player 1 15:49:14 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":317,"itemToPurchaseCardId":199,"playerWhoBuysCardId":317,"cost":10,"stackEffectType":9}} 

 Player 1 15:49:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10 \n2:Refill Store slot"} 

 Player 1 15:49:14 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":317,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 1 15:49:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10 \n2:Refill Store slot"} 

 Player 1 15:49:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10 \n2:Refill Store slot"} 

 Player 1 15:49:14 $REPLACE_STACK:  
{"currentStack":[{"entityId":5,"creatorCardId":317,"itemToPurchaseCardId":199,"playerWhoBuysCardId":317,"cost":10,"stackEffectType":9},{"entityId":6,"creatorCardId":317,"slotType":5,"slotToFillId":0,"stackEffectType":10}]} 

 Player 1 15:49:14 $REGISTER_PASSIVE_ITEM:  
{"cardId":199} 

 Player 1 15:49:14 $MOVE_CARD:  
{"moveIndex":12,"cardId":199,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 

 Player 2 15:49:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10"} 

 Player 2 15:49:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10"} 

 Player 2 15:49:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10"} 

 Player 2 15:49:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10"} 

 Player 2 15:49:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10"} 

 Player 2 15:49:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10"} 

 Player 2 15:49:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10"} 

 Player 2 15:49:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10"} 

 Player 2 15:49:15 $MOVE_CARD_END:  
{"moveIndex":12,"cardId":199,"flipIfFlipped":true,"playerId":1} 

 Player 1 15:49:15 $ADD_AN_ITEM:  
{"playerId":1,"cardId":199,"isReward":false} 

 Player 1 15:49:15 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":199}],"result":true,"preventMethod":false,"methodScopeId":317,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 1 15:49:15 $NEXT_STACK_ID:  

 Player 1 15:49:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10 \n2:Refill Store slot"} 

 Player 1 15:49:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus effect GainStats<GainStats>"} 

 Player 1 15:49:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus effect GainStats<GainStats>"} 

 Player 1 15:49:15 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[317],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":317,"effectCardPlayer":317},"entityId":7,"creatorCardId":317,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":199,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":1,"cardId":199,"effctType":0},"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 15:49:15 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 15:49:15 $SHOW_STACK_EFFECT:  
{"effectId":7} 

 Player 2 15:49:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10 \n2:Refill Store slot"} 

 Player 2 15:49:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10 \n2:Refill Store slot"} 

 Player 1 15:49:18 $CLEAR_SE_VIS:  

 Player 1 15:49:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus effect GainStats<GainStats>"} 

 Player 1 15:49:18 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":317,"itemToPurchaseCardId":199,"playerWhoBuysCardId":317,"cost":10,"stackEffectType":9}} 

 Player 1 15:49:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus effect GainStats<GainStats>"} 

 Player 1 15:49:18 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":317,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 1 15:49:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus effect GainStats<GainStats>"} 

 Player 1 15:49:18 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[317],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":317,"effectCardPlayer":317},"entityId":7,"creatorCardId":317,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":199,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":1,"cardId":199,"effctType":0},"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 15:49:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus effect GainStats<GainStats>"} 

 Player 1 15:49:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus effect GainStats<GainStats>"} 

 Player 1 15:49:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus effect GainStats<GainStats>"} 

 Player 1 15:49:18 $REPLACE_STACK:  
{"currentStack":[{"entityId":5,"creatorCardId":317,"itemToPurchaseCardId":199,"playerWhoBuysCardId":317,"cost":10,"stackEffectType":9},{"entityId":6,"creatorCardId":317,"slotType":5,"slotToFillId":0,"stackEffectType":10},{"effectCollectedData":{"effectTargets":[317],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":317,"effectCardPlayer":317},"entityId":7,"creatorCardId":317,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":199,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":1,"cardId":199,"effctType":0},"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":true,"stackEffectType":14}]} 

 Player 1 15:49:18 $NEXT_STACK_ID:  

 Player 1 15:49:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus effect GainStats<GainStats>"} 

 Player 1 15:49:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus effect GainStats<GainStats> \n4:Activate Polyphemus effect GainStats<GainStats>"} 

 Player 1 15:49:18 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":8,"creatorCardId":317,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":199,"effectToDo":{"effectName":"GainStats","cardEffectNum":1,"cardPlayerId":1,"cardId":199,"effctType":0},"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 15:49:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus effect GainStats<GainStats> \n4:Activate Polyphemus effect GainStats<GainStats>"} 

 Player 1 15:49:18 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":8,"creatorCardId":317,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":199,"effectToDo":{"effectName":"GainStats","cardEffectNum":1,"cardPlayerId":1,"cardId":199,"effctType":0},"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 15:49:18 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 15:49:18 $SHOW_STACK_EFFECT:  
{"effectId":8} 

 Player 2 15:49:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10 \n2:Refill Store slot"} 

 Player 2 15:49:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10 \n2:Refill Store slot"} 

 Player 2 15:49:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10 \n2:Refill Store slot"} 

 Player 2 15:49:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10 \n2:Refill Store slot"} 

 Player 2 15:49:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10 \n2:Refill Store slot"} 

 Player 2 15:49:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10 \n2:Refill Store slot"} 

 Player 2 15:49:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10 \n2:Refill Store slot"} 

 Player 2 15:49:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10 \n2:Refill Store slot"} 

 Player 2 15:49:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10 \n2:Refill Store slot"} 

 Player 2 15:49:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10 \n2:Refill Store slot"} 

 Player 2 15:49:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10 \n2:Refill Store slot"} 

 Player 2 15:49:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10 \n2:Refill Store slot"} 

 Player 2 15:49:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus "} 

 Player 2 15:49:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus "} 

 Player 2 15:49:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus  \n4:Activate Polyphemus "} 

 Player 2 15:49:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus  \n4:Activate Polyphemus "} 

 Player 1 15:49:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Add ActivatePassiveEffect 8 "}} 

 Player 1 15:49:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus effect GainStats<GainStats> \n4:Activate Polyphemus effect GainStats<GainStats>"} 

 Player 1 15:49:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus effect GainStats<GainStats> \n4:Activate Polyphemus effect GainStats<GainStats>"} 

 Player 1 15:49:21 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[317],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":317,"effectCardPlayer":317},"entityId":8,"creatorCardId":317,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":199,"effectToDo":{"effectName":"GainStats","cardEffectNum":1,"cardPlayerId":1,"cardId":199,"effctType":0},"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 15:49:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Response Adding ActivatePassiveEffect 8"},"childOfId":40} 

 Player 1 15:49:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Wait For Response From Player 1 "},"childOfId":40} 

 Player 1 15:49:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:49:21 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 1 15:49:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 2 "},"childOfId":40} 

 Player 1 15:49:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 15:49:21 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 15:49:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus  \n4:Activate Polyphemus "} 

 Player 2 15:49:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus  \n4:Activate Polyphemus "} 

 Player 2 15:49:21 $HIDE_REACTIONS:  
{"cardsIds":[329,330]} 

 Player 2 15:49:21 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 15:49:21 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 1 15:49:21 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 1 15:49:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Resolve ActivatePassiveEffect 8 "}} 

 Player 1 15:49:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus effect GainStats<GainStats> \n4:Activate Polyphemus effect GainStats<GainStats>"} 

 Player 1 15:49:21 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[317],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":317,"effectCardPlayer":317},"entityId":8,"creatorCardId":317,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":199,"effectToDo":{"effectName":"GainStats","cardEffectNum":1,"cardPlayerId":1,"cardId":199,"effctType":0},"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 15:49:21 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":199,"particleType":6} 

 Player 2 15:49:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus  \n4:Activate Polyphemus "} 

 Player 2 15:49:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus  \n4:Activate Polyphemus "} 

 Player 1 15:49:23 $DISABLE_PARTICLE_EFFECT:  
{"cardId":199,"particleType":6} 

 Player 1 15:49:23 $PLAYER_GAIN_ATTACK_ROLL_BONUS:  
{"playerId":1,"bonusToGain":-1,"isTemp":false} 

 Player 1 15:49:23 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":199}],"result":true,"preventMethod":false,"methodScopeId":317,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 1 15:49:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus effect GainStats<GainStats> \n4:Activate Polyphemus effect GainStats<GainStats>"} 

 Player 1 15:49:23 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[317],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":317,"effectCardPlayer":317},"entityId":8,"creatorCardId":317,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":199,"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 15:49:23 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":8} 

 Player 1 15:49:24 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 15:49:24 $SHOW_STACK_EFFECT:  
{"effectId":8} 

 Player 2 15:49:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus  \n4:Activate Polyphemus "} 

 Player 2 15:49:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus  \n4:Activate Polyphemus "} 

 Player 1 15:49:26 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":8} 

 Player 1 15:49:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Remove After Resolve ActivatePassiveEffect 8  "}} 

 Player 1 15:49:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus effect GainStats<GainStats>"} 

 Player 1 15:49:26 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[317],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":317,"effectCardPlayer":317},"entityId":8,"creatorCardId":317,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":199,"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 15:49:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Response Remove After Resolve ActivatePassiveEffect 8"},"childOfId":45} 

 Player 1 15:49:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Wait For Response From Player 2 "},"childOfId":45} 

 Player 1 15:49:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 15:49:27 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 15:49:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus  \n4:Activate Polyphemus "} 

 Player 2 15:49:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus  \n4:Activate Polyphemus "} 

 Player 2 15:49:27 $HIDE_REACTIONS:  
{"cardsIds":[329,330]} 

 Player 2 15:49:27 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 15:49:27 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 1 15:49:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Wait For Response From Player 1 "},"childOfId":45} 

 Player 1 15:49:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:49:27 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 1 15:49:27 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 1 15:49:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Resolve ActivatePassiveEffect 7 "}} 

 Player 1 15:49:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus effect GainStats<GainStats>"} 

 Player 1 15:49:27 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[317],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":317,"effectCardPlayer":317},"entityId":7,"creatorCardId":317,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":199,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":1,"cardId":199,"effctType":0},"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 15:49:27 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":199,"particleType":6} 

 Player 2 15:49:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus "} 

 Player 2 15:49:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus "} 

 Player 1 15:49:29 $DISABLE_PARTICLE_EFFECT:  
{"cardId":199,"particleType":6} 

 Player 1 15:49:29 $PLAYER_GAIN_DMG:  
{"playerId":1,"DMGToGain":2,"isTemp":false} 

 Player 1 15:49:29 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":199}],"result":true,"preventMethod":false,"methodScopeId":317,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 1 15:49:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus effect GainStats<GainStats>"} 

 Player 1 15:49:29 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[317],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":317,"effectCardPlayer":317},"entityId":7,"creatorCardId":317,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":199,"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 15:49:29 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":7} 

 Player 1 15:49:29 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 15:49:29 $SHOW_STACK_EFFECT:  
{"effectId":7} 

 Player 2 15:49:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus "} 

 Player 2 15:49:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus "} 

 Player 1 15:49:32 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":7} 

 Player 1 15:49:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Remove After Resolve ActivatePassiveEffect 7  "}} 

 Player 1 15:49:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10 \n2:Refill Store slot"} 

 Player 1 15:49:32 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[317],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":317,"effectCardPlayer":317},"entityId":7,"creatorCardId":317,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":199,"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 15:49:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Response Remove After Resolve ActivatePassiveEffect 7"},"childOfId":50} 

 Player 1 15:49:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Wait For Response From Player 1 "},"childOfId":50} 

 Player 1 15:49:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:49:32 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 1 15:49:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Wait For Response From Player 2 "},"childOfId":50} 

 Player 1 15:49:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 15:49:32 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 15:49:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus "} 

 Player 2 15:49:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus "} 

 Player 2 15:49:32 $HIDE_REACTIONS:  
{"cardsIds":[329,330]} 

 Player 2 15:49:32 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 15:49:32 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 1 15:49:32 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 1 15:49:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Resolve RefillEmptySlot 6 "}} 

 Player 1 15:49:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10 \n2:Refill Store slot"} 

 Player 1 15:49:32 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":317,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 1 15:49:32 $DRAW_CARD:  
{"deckType":5} 

 Player 1 15:49:32 $FLIP_CARD:  
{"cardId":153} 

 Player 1 15:49:32 $ADD_STORE_CARD:  
{"cardId":153} 

 Player 1 15:49:32 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":6} 

 Player 1 15:49:32 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 15:49:33 $SHOW_STACK_EFFECT:  
{"effectId":6} 

 Player 2 15:49:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10 \n2:Refill Store slot"} 

 Player 2 15:49:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10 \n2:Refill Store slot"} 

 Player 1 15:49:35 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":6} 

 Player 1 15:49:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Remove After Resolve RefillEmptySlot 6  "}} 

 Player 1 15:49:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10"} 

 Player 1 15:49:35 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":317,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 1 15:49:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":56,"_text":"Response Remove After Resolve RefillEmptySlot 6"},"childOfId":55} 

 Player 1 15:49:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":57,"_text":"Wait For Response From Player 2 "},"childOfId":55} 

 Player 1 15:49:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 15:49:35 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 15:49:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10 \n2:Refill Store slot"} 

 Player 2 15:49:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10 \n2:Refill Store slot"} 

 Player 2 15:49:36 $HIDE_REACTIONS:  
{"cardsIds":[329,330]} 

 Player 2 15:49:36 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 15:49:36 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 1 15:49:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":58,"_text":"Wait For Response From Player 1 "},"childOfId":55} 

 Player 1 15:49:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:49:36 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 1 15:49:36 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 1 15:49:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":59,"_text":"Resolve PurchaseItem 5 "}} 

 Player 1 15:49:36 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":5} 

 Player 1 15:49:36 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 15:49:36 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 1 15:49:39 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":5} 

 Player 1 15:49:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":60,"_text":"Remove After Resolve PurchaseItem 5  "}} 

 Player 1 15:49:39 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:49:39 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":317,"itemToPurchaseCardId":199,"playerWhoBuysCardId":317,"cost":10,"stackEffectType":9}} 

 Player 1 15:49:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":61,"_text":"Response Remove After Resolve PurchaseItem 5"},"childOfId":60} 

 Player 1 15:49:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":62,"_text":"Wait For Response From Player 1 "},"childOfId":60} 

 Player 1 15:49:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:49:39 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 1 15:49:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":63,"_text":"Wait For Response From Player 2 "},"childOfId":60} 

 Player 1 15:49:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 15:49:39 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 15:49:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10"} 

 Player 2 15:49:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Polyphemus for 10"} 

 Player 2 15:49:39 $HIDE_REACTIONS:  
{"cardsIds":[329,330]} 

 Player 2 15:49:39 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 15:49:39 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 1 15:49:39 $ACTION_MASSAGE_REMOVE:  
{"id":61} 

 Player 1 15:49:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":64,"_text":"Stack Was Emptied "}} 

 Player 1 15:49:39 $CLEAR_SE_VIS:  

 Player 1 15:49:39 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:50:09 $NEXT_STACK_ID:  

 Player 1 15:50:09 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:50:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 1 15:50:09 $ADD_TO_STACK:  
{"stackEffect":{"entityId":9,"creatorCardId":317,"hasLockingStackEffect":false,"itemToPlayCardId":320,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 15:50:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 1 15:50:10 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":317,"hasLockingStackEffect":false,"itemToPlayCardId":320,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 15:50:10 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 15:50:10 $SHOW_STACK_EFFECT:  
{"effectId":9} 

 Player 2 15:50:10 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:50:10 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:50:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 15:50:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 1 15:50:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":65,"_text":"Add ActivateItem 9 "}} 

 Player 1 15:50:18 $SHOW_DECISION:  
{"startCardId":320,"endCardId":226} 

 Player 1 15:50:21 $USE_ITEM:  
{"cardId":320} 

 Player 1 15:50:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:50:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 1 15:50:21 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":317,"hasLockingStackEffect":false,"itemToPlayCardId":320,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 15:50:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":66,"_text":"Response Adding ActivateItem 9"},"childOfId":65} 

 Player 1 15:50:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":67,"_text":"Wait For Response From Player 1 "},"childOfId":65} 

 Player 1 15:50:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:50:21 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 1 15:50:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":68,"_text":"Wait For Response From Player 2 "},"childOfId":65} 

 Player 1 15:50:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 15:50:21 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 15:50:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 15:50:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 15:50:21 $HIDE_REACTIONS:  
{"cardsIds":[329,330]} 

 Player 2 15:50:21 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 15:50:21 $ACTION_MASSAGE_REMOVE:  
{"id":68} 

 Player 1 15:50:22 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 1 15:50:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":69,"_text":"Resolve ActivateItem 9 "}} 

 Player 1 15:50:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 1 15:50:22 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":317,"hasLockingStackEffect":false,"itemToPlayCardId":320,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 15:50:22 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":320,"particleType":6} 

 Player 2 15:50:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 15:50:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 1 15:50:23 $DISABLE_PARTICLE_EFFECT:  
{"cardId":320,"particleType":6} 

 Player 1 15:50:36 $DECK_ADD_TO_TOP:  
{"deckType":2,"cardId":246} 

 Player 1 15:50:36 $DECK_ADD_TO_TOP:  
{"deckType":2,"cardId":281} 

 Player 1 15:50:36 $DECK_ADD_TO_TOP:  
{"deckType":2,"cardId":295} 

 Player 1 15:50:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 1 15:50:36 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":317,"hasLockingStackEffect":false,"itemToPlayCardId":320,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 15:50:36 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":9} 

 Player 1 15:50:36 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 15:50:36 $SHOW_STACK_EFFECT:  
{"effectId":9} 

 Player 2 15:50:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 15:50:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 1 15:50:39 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":9} 

 Player 1 15:50:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":70,"_text":"Remove After Resolve ActivateItem 9  "}} 

 Player 1 15:50:39 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:50:39 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":9,"creatorCardId":317,"hasLockingStackEffect":false,"itemToPlayCardId":320,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 15:50:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":71,"_text":"Response Remove After Resolve ActivateItem 9"},"childOfId":70} 

 Player 1 15:50:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":72,"_text":"Wait For Response From Player 2 "},"childOfId":70} 

 Player 1 15:50:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 15:50:39 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 15:50:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 15:50:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 15:50:39 $HIDE_REACTIONS:  
{"cardsIds":[329,330]} 

 Player 2 15:50:39 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 15:50:39 $ACTION_MASSAGE_REMOVE:  
{"id":72} 

 Player 1 15:50:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":73,"_text":"Wait For Response From Player 1 "},"childOfId":70} 

 Player 1 15:50:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:50:39 $ACTION_MASSAGE_REMOVE:  
{"id":73} 

 Player 1 15:50:39 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 1 15:50:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":74,"_text":"Stack Was Emptied "}} 

 Player 1 15:50:39 $CLEAR_SE_VIS:  

 Player 1 15:50:39 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:50:50 $NEXT_STACK_ID:  

 Player 1 15:50:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:50:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 1 15:50:50 $ADD_TO_STACK:  
{"stackEffect":{"entityId":10,"creatorCardId":317,"attackingPlayerCardId":317,"idOfCardBeingAttacked":226,"stackEffectType":4}} 

 Player 1 15:50:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 1 15:50:50 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":317,"attackingPlayerCardId":317,"idOfCardBeingAttacked":226,"stackEffectType":4}} 

 Player 1 15:50:50 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 15:50:50 $SHOW_STACK_EFFECT:  
{"effectId":10} 

 Player 2 15:50:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:50:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:50:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 2 15:50:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 1 15:50:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":75,"_text":"Add DeclareAttack 10 "}} 

 Player 1 15:50:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:50:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 1 15:50:53 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":317,"attackingPlayerCardId":317,"idOfCardBeingAttacked":226,"stackEffectType":4}} 

 Player 1 15:50:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":76,"_text":"Response Adding DeclareAttack 10"},"childOfId":75} 

 Player 1 15:50:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":77,"_text":"Wait For Response From Player 1 "},"childOfId":75} 

 Player 1 15:50:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:50:53 $ACTION_MASSAGE_REMOVE:  
{"id":77} 

 Player 1 15:50:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":78,"_text":"Wait For Response From Player 2 "},"childOfId":75} 

 Player 1 15:50:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 15:50:53 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 15:50:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 2 15:50:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 2 15:50:53 $HIDE_REACTIONS:  
{"cardsIds":[329,330]} 

 Player 2 15:50:53 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 15:50:53 $ACTION_MASSAGE_REMOVE:  
{"id":78} 

 Player 1 15:50:53 $ACTION_MASSAGE_REMOVE:  
{"id":76} 

 Player 1 15:50:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":79,"_text":"Resolve DeclareAttack 10 "}} 

 Player 1 15:50:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 1 15:50:53 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":317,"attackingPlayerCardId":317,"idOfCardBeingAttacked":226,"stackEffectType":4}} 

 Player 1 15:50:53 $DRAW_CARD:  
{"deckType":2} 

 Player 1 15:50:54 $SHOW_CARD_PREVIEW:  
{"cardToShowId":295,"playerId":1} 

 Player 2 15:50:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 2 15:50:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 1 15:50:59 $FLIP_CARD:  
{"cardId":295} 

 Player 1 15:50:59 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":295} 

 Player 1 15:50:59 $NEW_MONSTER_ON_PLACE:  
{"cardId":295,"monsterPlaceId":2} 

 Player 1 15:50:59 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":295,"particleType":5} 

 Player 1 15:50:59 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":317,"scopeIsPlayer":true,"index":5,"originStackId":10},"isAfterActivation":true,"index":5} 

 Player 1 15:50:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 1 15:50:59 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":317,"attackingPlayerCardId":317,"idOfCardBeingAttacked":295,"stackEffectType":4}} 

 Player 1 15:50:59 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":10} 

 Player 1 15:50:59 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 15:50:59 $SHOW_STACK_EFFECT:  
{"effectId":10} 

 Player 2 15:50:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 2 15:50:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 1 15:51:02 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":10} 

 Player 1 15:51:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":80,"_text":"Remove After Resolve DeclareAttack 10  "}} 

 Player 1 15:51:02 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:51:02 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":10,"creatorCardId":317,"attackingPlayerCardId":317,"idOfCardBeingAttacked":295,"stackEffectType":4}} 

 Player 1 15:51:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":81,"_text":"Response Remove After Resolve DeclareAttack 10"},"childOfId":80} 

 Player 1 15:51:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":82,"_text":"Wait For Response From Player 2 "},"childOfId":80} 

 Player 1 15:51:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 15:51:02 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 15:51:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Pooter"} 

 Player 2 15:51:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Pooter"} 

 Player 2 15:51:02 $HIDE_REACTIONS:  
{"cardsIds":[329,330]} 

 Player 2 15:51:02 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 15:51:02 $ACTION_MASSAGE_REMOVE:  
{"id":82} 

 Player 1 15:51:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":83,"_text":"Wait For Response From Player 1 "},"childOfId":80} 

 Player 1 15:51:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:51:02 $ACTION_MASSAGE_REMOVE:  
{"id":83} 

 Player 1 15:51:02 $ACTION_MASSAGE_REMOVE:  
{"id":81} 

 Player 1 15:51:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":84,"_text":"Stack Was Emptied "}} 

 Player 1 15:51:02 $CLEAR_SE_VIS:  

 Player 1 15:51:02 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:51:09 $NEXT_STACK_ID:  

 Player 1 15:51:09 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:51:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Pooter<Monster>"} 

 Player 1 15:51:09 $ADD_TO_STACK:  
{"stackEffect":{"entityId":11,"creatorCardId":317,"rollingPlayerCardId":317,"stackEffectType":2,"attackedMonsterCardId":295}} 

 Player 1 15:51:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Pooter<Monster>"} 

 Player 1 15:51:09 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":317,"rollingPlayerCardId":317,"stackEffectType":2,"attackedMonsterCardId":295}} 

 Player 1 15:51:09 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 15:51:09 $SHOW_STACK_EFFECT:  
{"effectId":11} 

 Player 2 15:51:09 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:51:09 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:51:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Pooter<Monster>"} 

 Player 2 15:51:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Pooter<Monster>"} 

 Player 1 15:51:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":85,"_text":"Add AttackRoll 11 "}} 

 Player 1 15:51:12 $ROLL_DICE:  
{"playerId":1} 

 Player 1 15:51:13 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":4} 

 Player 1 15:51:13 $UPDATE_STACK_VIS:  
{"stackId":11,"text":"player rolled 4 vs Pooter<Monster>"} 

 Player 1 15:51:13 $SHOW_DICE_ROLL:  
{"stackId":11} 

 Player 1 15:51:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs Pooter<Monster>"} 

 Player 1 15:51:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:51:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs Pooter<Monster>"} 

 Player 1 15:51:16 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":11,"creatorCardId":317,"numberRolled":4,"rollingPlayerCardId":317,"stackEffectType":2,"attackedMonsterCardId":295}} 

 Player 1 15:51:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":86,"_text":"Response Adding AttackRoll 11"},"childOfId":85} 

 Player 1 15:51:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":87,"_text":"Wait For Response From Player 1 "},"childOfId":85} 

 Player 1 15:51:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:51:16 $ACTION_MASSAGE_REMOVE:  
{"id":87} 

 Player 1 15:51:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":88,"_text":"Wait For Response From Player 2 "},"childOfId":85} 

 Player 1 15:51:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 15:51:17 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 15:51:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Pooter<Monster>"} 

 Player 2 15:51:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Pooter<Monster>"} 

 Player 2 15:51:17 $HIDE_REACTIONS:  
{"cardsIds":[329,330]} 

 Player 2 15:51:17 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 15:51:17 $ACTION_MASSAGE_REMOVE:  
{"id":88} 

 Player 1 15:51:17 $ACTION_MASSAGE_REMOVE:  
{"id":86} 

 Player 1 15:51:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":89,"_text":"Resolve AttackRoll 11 "}} 

 Player 1 15:51:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs Pooter<Monster>"} 

 Player 1 15:51:17 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":11,"creatorCardId":317,"numberRolled":4,"rollingPlayerCardId":317,"stackEffectType":2,"attackedMonsterCardId":295}} 

 Player 1 15:51:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":90,"_text":"Added -1 to original roll"}} 

 Player 1 15:51:17 $NEXT_STACK_ID:  

 Player 1 15:51:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs Pooter<Monster>"} 

 Player 1 15:51:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:51:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Pooter \n2:Player 1 rolled 4 vs Pooter<Monster>"} 

 Player 1 15:51:17 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":12,"creatorCardId":317,"entityToDoDamageCardId":317,"entityToTakeDamageCardId":295,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 

 Player 1 15:51:17 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 15:51:17 $SHOW_STACK_EFFECT:  
{"effectId":12} 

 Player 2 15:51:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Pooter<Monster>"} 

 Player 2 15:51:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Pooter<Monster>"} 

 Player 2 15:51:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Pooter<Monster>"} 

 Player 2 15:51:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Pooter<Monster>"} 

 Player 1 15:51:20 $CLEAR_SE_VIS:  

 Player 1 15:51:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Pooter \n2:Player 1 rolled 4 vs Pooter<Monster>"} 

 Player 1 15:51:20 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":12,"creatorCardId":317,"entityToDoDamageCardId":317,"entityToTakeDamageCardId":295,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 

 Player 1 15:51:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Pooter \n2:Player 1 rolled 4 vs Pooter<Monster>"} 

 Player 1 15:51:20 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":317,"numberRolled":4,"rollingPlayerCardId":317,"stackEffectType":2,"attackedMonsterCardId":295}} 

 Player 1 15:51:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Pooter \n2:Player 1 rolled 4 vs Pooter<Monster>"} 

 Player 1 15:51:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Pooter \n2:Player 1 rolled 4 vs Pooter<Monster>"} 

 Player 1 15:51:20 $REPLACE_STACK:  
{"currentStack":[{"entityId":12,"creatorCardId":317,"entityToDoDamageCardId":317,"entityToTakeDamageCardId":295,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3},{"entityId":11,"creatorCardId":317,"numberRolled":4,"rollingPlayerCardId":317,"stackEffectType":2,"attackedMonsterCardId":295}]} 

 Player 1 15:51:20 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":3},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":317,"scopeIsPlayer":true,"index":6,"originStackId":11},"isAfterActivation":true,"index":6} 

 Player 1 15:51:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Pooter \n2:Player 1 rolled 4 vs Pooter<Monster>"} 

 Player 1 15:51:20 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":11,"creatorCardId":317,"numberRolled":4,"rollingPlayerCardId":317,"stackEffectType":2,"attackedMonsterCardId":295}} 

 Player 1 15:51:20 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":11} 

 Player 1 15:51:20 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 15:51:20 $SHOW_STACK_EFFECT:  
{"effectId":11} 

 Player 2 15:51:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Pooter<Monster>"} 

 Player 2 15:51:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Pooter<Monster>"} 

 Player 2 15:51:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Pooter<Monster>"} 

 Player 2 15:51:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Pooter<Monster>"} 

 Player 2 15:51:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Pooter<Monster>"} 

 Player 2 15:51:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Pooter<Monster>"} 

 Player 2 15:51:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Pooter<Monster>"} 

 Player 2 15:51:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Pooter<Monster>"} 

 Player 2 15:51:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Pooter \n2:Player 1 is rolling against Pooter<Monster>"} 

 Player 2 15:51:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Pooter \n2:Player 1 is rolling against Pooter<Monster>"} 

 Player 1 15:51:23 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":11} 

 Player 1 15:51:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":91,"_text":"Remove After Resolve AttackRoll 11  "}} 

 Player 1 15:51:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Pooter"} 

 Player 1 15:51:23 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":11,"creatorCardId":317,"numberRolled":4,"rollingPlayerCardId":317,"stackEffectType":2,"attackedMonsterCardId":295}} 

 Player 1 15:51:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":92,"_text":"Response Remove After Resolve AttackRoll 11"},"childOfId":91} 

 Player 1 15:51:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":93,"_text":"Wait For Response From Player 1 "},"childOfId":91} 

 Player 1 15:51:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:51:23 $ACTION_MASSAGE_REMOVE:  
{"id":93} 

 Player 1 15:51:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":94,"_text":"Wait For Response From Player 2 "},"childOfId":91} 

 Player 1 15:51:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 15:51:23 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 15:51:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Pooter \n2:Player 1 is rolling against Pooter<Monster>"} 

 Player 2 15:51:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Pooter \n2:Player 1 is rolling against Pooter<Monster>"} 

 Player 2 15:51:23 $HIDE_REACTIONS:  
{"cardsIds":[329,330]} 

 Player 2 15:51:23 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 15:51:23 $ACTION_MASSAGE_REMOVE:  
{"id":94} 

 Player 1 15:51:23 $ACTION_MASSAGE_REMOVE:  
{"id":92} 

 Player 1 15:51:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":95,"_text":"Resolve CombatDamage 12 "}} 

 Player 1 15:51:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Pooter"} 

 Player 1 15:51:24 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":12,"creatorCardId":317,"entityToDoDamageCardId":317,"entityToTakeDamageCardId":295,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 

 Player 1 15:51:24 $UPDATE_STACK_VIS:  
{"stackId":12,"text":"Cain will deal 3 combat damage to Pooter"} 

 Player 1 15:51:24 $MONSTER_GET_DAMAGED:  
{"cardId":295,"hpLeft":0,"damageDealerId":317} 

 Player 1 15:51:24 $NEXT_STACK_ID:  

 Player 1 15:51:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Pooter"} 

 Player 1 15:51:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:51:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Pooter \n2:[object Object] killed by Cain"} 

 Player 1 15:51:24 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":13,"creatorCardId":317,"monsterToDieCardId":295,"stackEffectType":5,"killerId":317}} 

 Player 1 15:51:24 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 15:51:24 $SHOW_STACK_EFFECT:  
{"effectId":13} 

 Player 2 15:51:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Pooter"} 

 Player 2 15:51:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Pooter"} 

 Player 2 15:51:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Pooter"} 

 Player 2 15:51:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Pooter"} 

 Player 1 15:51:26 $CLEAR_SE_VIS:  

 Player 1 15:51:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Pooter \n2:[object Object] killed by Cain"} 

 Player 1 15:51:26 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":12,"creatorCardId":317,"entityToDoDamageCardId":317,"entityToTakeDamageCardId":295,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 

 Player 1 15:51:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Pooter \n2:[object Object] killed by Cain"} 

 Player 1 15:51:27 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":13,"creatorCardId":317,"monsterToDieCardId":295,"stackEffectType":5,"killerId":317}} 

 Player 1 15:51:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Pooter \n2:[object Object] killed by Cain"} 

 Player 1 15:51:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Pooter \n2:[object Object] killed by Cain"} 

 Player 1 15:51:27 $REPLACE_STACK:  
{"currentStack":[{"entityId":12,"creatorCardId":317,"entityToDoDamageCardId":317,"entityToTakeDamageCardId":295,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3},{"entityId":13,"creatorCardId":317,"monsterToDieCardId":295,"stackEffectType":5,"killerId":317}]} 

 Player 1 15:51:27 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":3},{"type":0,"number":317},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":295,"scopeIsPlayer":false,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 

 Player 1 15:51:27 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":3},{"type":2,"number":3},{"type":0,"number":317},{"type":0,"number":295}],"result":null,"preventMethod":false,"methodScopeId":317,"scopeIsPlayer":true,"index":8,"originStackId":12},"isAfterActivation":true,"index":8} 

 Player 1 15:51:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Pooter \n2:[object Object] killed by Cain"} 

 Player 1 15:51:27 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":12,"creatorCardId":317,"entityToDoDamageCardId":317,"entityToTakeDamageCardId":295,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 

 Player 1 15:51:27 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":12} 

 Player 1 15:51:27 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 15:51:27 $SHOW_STACK_EFFECT:  
{"effectId":12} 

 Player 2 15:51:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Pooter"} 

 Player 2 15:51:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Pooter"} 

 Player 2 15:51:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Pooter"} 

 Player 2 15:51:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Pooter"} 

 Player 2 15:51:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Pooter"} 

 Player 2 15:51:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Pooter"} 

 Player 2 15:51:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Pooter"} 

 Player 2 15:51:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Pooter"} 

 Player 2 15:51:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Pooter \n2:[object Object] killed by Cain"} 

 Player 2 15:51:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Pooter \n2:[object Object] killed by Cain"} 

 Player 1 15:51:29 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":12} 

 Player 1 15:51:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":96,"_text":"Remove After Resolve CombatDamage 12  "}} 

 Player 1 15:51:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Cain"} 

 Player 1 15:51:29 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":12,"creatorCardId":317,"entityToDoDamageCardId":317,"entityToTakeDamageCardId":295,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 

 Player 1 15:51:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":97,"_text":"Response Remove After Resolve CombatDamage 12"},"childOfId":96} 

 Player 1 15:51:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":98,"_text":"Wait For Response From Player 1 "},"childOfId":96} 

 Player 1 15:51:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:51:30 $ACTION_MASSAGE_REMOVE:  
{"id":98} 

 Player 1 15:51:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":99,"_text":"Wait For Response From Player 2 "},"childOfId":96} 

 Player 1 15:51:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 15:51:30 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 15:51:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Pooter \n2:[object Object] killed by Cain"} 

 Player 2 15:51:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Pooter \n2:[object Object] killed by Cain"} 

 Player 2 15:51:30 $HIDE_REACTIONS:  
{"cardsIds":[329,330]} 

 Player 2 15:51:30 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 15:51:30 $ACTION_MASSAGE_REMOVE:  
{"id":99} 

 Player 1 15:51:30 $ACTION_MASSAGE_REMOVE:  
{"id":97} 

 Player 1 15:51:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":100,"_text":"Resolve MonsterDeath 13 "}} 

 Player 1 15:51:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Cain"} 

 Player 1 15:51:30 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":13,"creatorCardId":317,"monsterToDieCardId":295,"stackEffectType":5,"killerId":317}} 

 Player 1 15:51:30 $DISABLE_PARTICLE_EFFECT:  
{"cardId":295,"particleType":5} 

 Player 1 15:51:30 $CANCEL_ATTACK:  

 Player 1 15:51:30 $NEXT_STACK_ID:  

 Player 1 15:51:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Cain"} 

 Player 1 15:51:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:51:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Pooter<Monster> reward \n2:[object Object] killed by Cain"} 

 Player 1 15:51:30 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":14,"creatorCardId":317,"monsterCardWithRewardId":295,"playerCardIdToReward":317,"stackEffectType":7}} 

 Player 1 15:51:30 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 15:51:30 $SHOW_STACK_EFFECT:  
{"effectId":14} 

 Player 2 15:51:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Pooter"} 

 Player 2 15:51:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Pooter"} 

 Player 2 15:51:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Pooter"} 

 Player 2 15:51:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Pooter"} 

 Player 1 15:51:33 $CLEAR_SE_VIS:  

 Player 1 15:51:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Pooter<Monster> reward \n2:[object Object] killed by Cain"} 

 Player 1 15:51:33 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":14,"creatorCardId":317,"monsterCardWithRewardId":295,"playerCardIdToReward":317,"stackEffectType":7}} 

 Player 1 15:51:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Pooter<Monster> reward \n2:[object Object] killed by Cain"} 

 Player 1 15:51:33 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":13,"creatorCardId":317,"monsterToDieCardId":295,"stackEffectType":5,"killerId":317}} 

 Player 1 15:51:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Pooter<Monster> reward \n2:[object Object] killed by Cain"} 

 Player 1 15:51:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Pooter<Monster> reward \n2:[object Object] killed by Cain"} 

 Player 1 15:51:33 $REPLACE_STACK:  
{"currentStack":[{"entityId":14,"creatorCardId":317,"monsterCardWithRewardId":295,"playerCardIdToReward":317,"stackEffectType":7},{"entityId":13,"creatorCardId":317,"monsterToDieCardId":295,"stackEffectType":5,"killerId":317}]} 

 Player 1 15:51:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Pooter<Monster> reward \n2:[object Object] killed by Cain"} 

 Player 1 15:51:33 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":13,"creatorCardId":317,"monsterToDieCardId":295,"stackEffectType":5,"killerId":317}} 

 Player 1 15:51:33 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":13} 

 Player 1 15:51:33 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 15:51:33 $SHOW_STACK_EFFECT:  
{"effectId":13} 

 Player 2 15:51:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Pooter"} 

 Player 2 15:51:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Pooter"} 

 Player 2 15:51:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Pooter"} 

 Player 2 15:51:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Pooter"} 

 Player 2 15:51:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Pooter"} 

 Player 2 15:51:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Pooter"} 

 Player 2 15:51:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Pooter"} 

 Player 2 15:51:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Pooter"} 

 Player 2 15:51:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Pooter<Monster> reward \n2:[object Object] killed by Cain"} 

 Player 2 15:51:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Pooter<Monster> reward \n2:[object Object] killed by Cain"} 

 Player 1 15:51:36 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":13} 

 Player 1 15:51:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":101,"_text":"Remove After Resolve MonsterDeath 13  "}} 

 Player 1 15:51:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Pooter<Monster> reward"} 

 Player 1 15:51:36 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":13,"creatorCardId":317,"monsterToDieCardId":295,"stackEffectType":5,"killerId":317}} 

 Player 1 15:51:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":102,"_text":"Response Remove After Resolve MonsterDeath 13"},"childOfId":101} 

 Player 1 15:51:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":103,"_text":"Wait For Response From Player 1 "},"childOfId":101} 

 Player 1 15:51:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:51:36 $ACTION_MASSAGE_REMOVE:  
{"id":103} 

 Player 1 15:51:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":104,"_text":"Wait For Response From Player 2 "},"childOfId":101} 

 Player 1 15:51:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 15:51:36 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 15:51:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Pooter<Monster> reward \n2:[object Object] killed by Cain"} 

 Player 2 15:51:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Pooter<Monster> reward \n2:[object Object] killed by Cain"} 

 Player 2 15:51:36 $HIDE_REACTIONS:  
{"cardsIds":[329,330]} 

 Player 2 15:51:36 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 15:51:36 $ACTION_MASSAGE_REMOVE:  
{"id":104} 

 Player 1 15:51:36 $ACTION_MASSAGE_REMOVE:  
{"id":102} 

 Player 1 15:51:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":105,"_text":"Resolve MonsterRewardStackEffect 14 "}} 

 Player 1 15:51:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Pooter<Monster> reward"} 

 Player 1 15:51:37 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":14,"creatorCardId":317,"monsterCardWithRewardId":295,"playerCardIdToReward":317,"stackEffectType":7}} 

 Player 1 15:51:37 $DRAW_CARD:  
{"deckType":1} 

 Player 1 15:51:37 $MOVE_CARD:  
{"moveIndex":13,"cardId":140,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 15:51:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Pooter<Monster> reward"} 

 Player 2 15:51:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Pooter<Monster> reward"} 

 Player 2 15:51:37 $MOVE_CARD_END:  
{"moveIndex":13,"cardId":140,"flipIfFlipped":false,"playerId":1} 

 Player 1 15:51:37 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":140} 

 Player 1 15:51:37 $FLIP_CARD:  
{"cardId":140} 

 Player 1 15:51:37 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":140} 

 Player 1 15:51:37 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":295,"scopeIsPlayer":false,"index":9,"originStackId":14},"isAfterActivation":true,"index":9} 

 Player 1 15:51:37 $CLEAR_SE_VIS:  

 Player 1 15:51:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:51:37 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":14} 

 Player 1 15:51:37 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":14} 

 Player 1 15:51:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":106,"_text":"Fizzle MonsterRewardStackEffect 14"}} 

 Player 1 15:51:37 $FIZZLE_STACK_EFFECT:  
{"entityId":14} 

 Player 2 15:51:37 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 15:51:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:53:17 $MOVE_CARD:  
{"moveIndex":14,"cardId":295,"placeID":334,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 1 15:53:17 $CLEAR_SE_VIS:  

 Player 2 15:55:01 $MOVE_CARD_END:  
{"moveIndex":14,"cardId":295,"flipIfFlipped":true,"playerId":1} 

 Player 1 15:55:01 $MOVE_CARD_TO_PILE:  
{"type":2,"cardId":295} 

 Player 1 15:55:01 $REMOVE_MONSTER:  
{"holderId":2,"monsterId":295} 

 Player 1 15:55:01 $GET_NEXT_MONSTER:  
{"monsterPlaceId":2} 

 Player 1 15:55:01 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":14} 

 Player 1 15:55:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":107,"_text":"Stack Was Emptied "}} 

 Player 1 15:55:01 $CLEAR_SE_VIS:  

 Player 1 15:55:01 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:57:18 $MATCH: 