Start Log 
 Player 1 20:11:37 $START_GAME:  
 Player 1 20:11:37 $MOVE_TO_TABLE:  
 Player 1 20:11:45 $FINISH_LOAD:  

 {"id":1,"turnPlayerId":2} 
 Player 1 20:11:45 $ASSIGN_CHAR_TO_PLAYER:  

 {"playerId":1,"charCardId":317,"itemCardId":320} 
 Player 1 20:11:45 $SET_CHAR_END:  

 {"playerId":2} 
 Player 1 20:11:47 $MOVE_CARD_END:  

 {"moveIndex":1,"cardId":136,"flipIfFlipped":false,"playerId":2} 
 Player 1 20:11:47 $MOVE_CARD_END:  

 {"moveIndex":2,"cardId":42,"flipIfFlipped":false,"playerId":2} 
 Player 1 20:11:48 $MOVE_CARD_END:  

 {"moveIndex":3,"cardId":127,"flipIfFlipped":false,"playerId":2} 
 Player 1 20:11:49 $MOVE_CARD_END:  

 {"moveIndex":4,"cardId":20,"flipIfFlipped":false,"playerId":2} 
 Player 1 20:11:49 $MOVE_CARD_END:  

 {"moveIndex":5,"cardId":102,"flipIfFlipped":false,"playerId":2} 
 Player 1 20:11:50 $MOVE_CARD_END:  

 {"moveIndex":6,"cardId":93,"flipIfFlipped":false,"playerId":2} 
 Player 1 20:11:50 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 20:11:50 $NEXT_STACK_ID:  
 Player 1 20:11:50 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 20:11:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 20:11:50 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":317,"turnPlayerCardId":317,"stackEffectType":13}} 
 Player 1 20:11:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 20:11:51 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":1,"creatorCardId":317,"turnPlayerCardId":317,"stackEffectType":13}} 
 Player 1 20:11:51 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 20:11:51 $SHOW_STACK_EFFECT:  

 {"effectId":1} 
 Player 1 20:11:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 
 Player 1 20:11:53 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 20:11:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 20:11:53 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":317,"turnPlayerCardId":317,"stackEffectType":13}} 
 Player 1 20:11:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 
 Player 1 20:11:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 1 20:11:54 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 20:11:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 1 20:11:54 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 20:11:54 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 20:11:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 
 Player 1 20:11:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 20:11:54 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":317,"turnPlayerCardId":317,"stackEffectType":13}} 
 Player 1 20:11:54 $DRAW_CARD:  

 {"deckType":1} 
 Player 1 20:11:54 $MOVE_CARD:  

 {"moveIndex":7,"cardId":90,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 1 20:11:54 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":90} 
 Player 1 20:11:54 $FLIP_CARD:  

 {"cardId":90} 
 Player 1 20:11:54 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":90} 
 Player 1 20:11:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 20:11:54 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":317,"turnPlayerCardId":317,"stackEffectType":13}} 
 Player 1 20:11:54 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":1} 
 Player 1 20:11:55 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 20:11:55 $SHOW_STACK_EFFECT:  

 {"effectId":1} 
 Player 1 20:11:57 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":1} 
 Player 1 20:11:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 
 Player 1 20:11:57 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 20:11:57 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":317,"turnPlayerCardId":317,"stackEffectType":13}} 
 Player 1 20:11:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 
 Player 1 20:11:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Player 1 20:11:58 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 20:11:58 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 20:11:58 $ACTION_MASSAGE_REMOVE:  

 {"id":7} 
 Player 1 20:11:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Player 1 20:11:58 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 20:11:58 $ACTION_MASSAGE_REMOVE:  

 {"id":8} 
 Player 1 20:11:58 $ACTION_MASSAGE_REMOVE:  

 {"id":6} 
 Player 1 20:11:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":9,"_text":"Stack Was Emptied "}} 
 Player 1 20:11:58 $CLEAR_SE_VIS:  
 Player 1 20:11:58 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 20:12:09 $MOVE_CARD:  

 {"moveIndex":8,"cardId":265,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Hand"} 
 Player 1 20:12:10 $REGISTER_PASSIVE_ITEM:  

 {"cardId":265} 
 Player 1 20:12:10 $ADD_MONSTER:  

 {"monsterPlaceId":1,"monsterId":265} 
 Player 1 20:12:10 $NEW_MONSTER_ON_PLACE:  

 {"cardId":265,"monsterPlaceId":1} 
 Player 1 20:12:17 $NEXT_STACK_ID:  
 Player 1 20:12:17 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 20:12:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Gemini"} 
 Player 1 20:12:17 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":317,"attackingPlayerCardId":317,"idOfCardBeingAttacked":265,"stackEffectType":4}} 
 Player 1 20:12:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Gemini"} 
 Player 1 20:12:17 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":2,"creatorCardId":317,"attackingPlayerCardId":317,"idOfCardBeingAttacked":265,"stackEffectType":4}} 
 Player 1 20:12:17 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 20:12:17 $SHOW_STACK_EFFECT:  

 {"effectId":2} 
 Player 1 20:12:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":10,"_text":"Add DeclareAttack 2 "}} 
 Player 1 20:12:20 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 20:12:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Gemini"} 
 Player 1 20:12:20 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":317,"attackingPlayerCardId":317,"idOfCardBeingAttacked":265,"stackEffectType":4}} 
 Player 1 20:12:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":11,"_text":"Response Adding DeclareAttack 2"},"childOfId":10} 
 Player 1 20:12:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 
 Player 1 20:12:20 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 20:12:20 $ACTION_MASSAGE_REMOVE:  

 {"id":12} 
 Player 1 20:12:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 
 Player 1 20:12:20 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 20:12:20 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 20:12:20 $ACTION_MASSAGE_REMOVE:  

 {"id":13} 
 Player 1 20:12:20 $ACTION_MASSAGE_REMOVE:  

 {"id":11} 
 Player 1 20:12:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":14,"_text":"Resolve DeclareAttack 2 "}} 
 Player 1 20:12:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Gemini"} 
 Player 1 20:12:21 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":317,"attackingPlayerCardId":317,"idOfCardBeingAttacked":265,"stackEffectType":4}} 
 Player 1 20:12:21 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":265,"particleType":5} 
 Player 1 20:12:21 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":317,"scopeIsPlayer":true,"index":1,"originStackId":2},"isAfterActivation":true,"index":1} 
 Player 1 20:12:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Gemini"} 
 Player 1 20:12:21 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":317,"attackingPlayerCardId":317,"idOfCardBeingAttacked":265,"stackEffectType":4}} 
 Player 1 20:12:21 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":2} 
 Player 1 20:12:21 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 20:12:21 $SHOW_STACK_EFFECT:  

 {"effectId":2} 
 Player 1 20:12:23 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":2} 
 Player 1 20:12:23 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":15,"_text":"Remove After Resolve DeclareAttack 2  "}} 
 Player 1 20:12:23 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 20:12:23 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":317,"attackingPlayerCardId":317,"idOfCardBeingAttacked":265,"stackEffectType":4}} 
 Player 1 20:12:23 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":16,"_text":"Response Remove After Resolve DeclareAttack 2"},"childOfId":15} 
 Player 1 20:12:23 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 
 Player 1 20:12:23 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 20:12:24 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 20:12:24 $ACTION_MASSAGE_REMOVE:  

 {"id":17} 
 Player 1 20:12:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 
 Player 1 20:12:24 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 20:12:24 $ACTION_MASSAGE_REMOVE:  

 {"id":18} 
 Player 1 20:12:24 $ACTION_MASSAGE_REMOVE:  

 {"id":16} 
 Player 1 20:12:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":19,"_text":"Stack Was Emptied "}} 
 Player 1 20:12:24 $CLEAR_SE_VIS:  
 Player 1 20:12:24 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 20:12:31 $NEXT_STACK_ID:  
 Player 1 20:12:31 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 20:12:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Gemini<Monster>"} 
 Player 1 20:12:31 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":317,"rollingPlayerCardId":317,"stackEffectType":2,"attackedMonsterCardId":265}} 
 Player 1 20:12:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Gemini<Monster>"} 
 Player 1 20:12:31 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":317,"rollingPlayerCardId":317,"stackEffectType":2,"attackedMonsterCardId":265}} 
 Player 1 20:12:31 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 20:12:31 $SHOW_STACK_EFFECT:  

 {"effectId":3} 
 Player 1 20:12:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":20,"_text":"Add AttackRoll 3 "}} 
 Player 1 20:12:34 $ROLL_DICE:  

 {"playerId":1} 
 Player 1 20:12:36 $ROLL_DICE_ENDED:  

 {"playerId":1,"numberRolled":1} 
 Player 1 20:12:36 $UPDATE_STACK_VIS:  

 {"stackId":3,"text":"player rolled 1 vs Gemini<Monster>"} 
 Player 1 20:12:36 $SHOW_DICE_ROLL:  

 {"stackId":3} 
 Player 1 20:12:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 1 vs Gemini<Monster>"} 
 Player 1 20:12:39 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 20:12:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 1 vs Gemini<Monster>"} 
 Player 1 20:12:39 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":317,"numberRolled":1,"rollingPlayerCardId":317,"stackEffectType":2,"attackedMonsterCardId":265}} 
 Player 1 20:12:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":21,"_text":"Response Adding AttackRoll 3"},"childOfId":20} 
 Player 1 20:12:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":22,"_text":"Wait For Response From Player 1 "},"childOfId":20} 
 Player 1 20:12:39 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 20:12:39 $ACTION_MASSAGE_REMOVE:  

 {"id":22} 
 Player 1 20:12:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":23,"_text":"Wait For Response From Player 2 "},"childOfId":20} 
 Player 1 20:12:39 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 20:12:39 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 20:12:39 $ACTION_MASSAGE_REMOVE:  

 {"id":23} 
 Player 1 20:12:39 $ACTION_MASSAGE_REMOVE:  

 {"id":21} 
 Player 1 20:12:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":24,"_text":"Resolve AttackRoll 3 "}} 
 Player 1 20:12:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 1 vs Gemini<Monster>"} 
 Player 1 20:12:40 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":317,"numberRolled":1,"rollingPlayerCardId":317,"stackEffectType":2,"attackedMonsterCardId":265}} 
 Player 1 20:12:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":25,"_text":"Added 0 to original roll"}} 
 Player 1 20:12:40 $NEXT_STACK_ID:  
 Player 1 20:12:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 1 vs Gemini<Monster>"} 
 Player 1 20:12:40 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 20:12:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Gemini \n2:Player 1 rolled 1 vs Gemini<Monster>"} 
 Player 1 20:12:40 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":4,"creatorCardId":317,"entityToDoDamageCardId":317,"entityToTakeDamageCardId":265,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5}} 
 Player 1 20:12:40 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 20:12:40 $SHOW_STACK_EFFECT:  

 {"effectId":4} 
 Player 1 20:12:42 $CLEAR_SE_VIS:  
 Player 1 20:12:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Gemini \n2:Player 1 rolled 1 vs Gemini<Monster>"} 
 Player 1 20:12:42 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":4,"creatorCardId":317,"entityToDoDamageCardId":317,"entityToTakeDamageCardId":265,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5}} 
 Player 1 20:12:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Gemini \n2:Player 1 rolled 1 vs Gemini<Monster>"} 
 Player 1 20:12:43 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":317,"numberRolled":1,"rollingPlayerCardId":317,"stackEffectType":2,"attackedMonsterCardId":265}} 
 Player 1 20:12:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Gemini \n2:Player 1 rolled 1 vs Gemini<Monster>"} 
 Player 1 20:12:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Gemini \n2:Player 1 rolled 1 vs Gemini<Monster>"} 
 Player 1 20:12:43 $REPLACE_STACK:  

 {"currentStack":[{"entityId":4,"creatorCardId":317,"entityToDoDamageCardId":317,"entityToTakeDamageCardId":265,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5},{"entityId":3,"creatorCardId":317,"numberRolled":1,"rollingPlayerCardId":317,"stackEffectType":2,"attackedMonsterCardId":265}]} 
 Player 1 20:12:43 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":317,"scopeIsPlayer":true,"index":2,"originStackId":3},"isAfterActivation":true,"index":2} 
 Player 1 20:12:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Gemini \n2:Player 1 rolled 1 vs Gemini<Monster>"} 
 Player 1 20:12:43 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":317,"numberRolled":1,"rollingPlayerCardId":317,"stackEffectType":2,"attackedMonsterCardId":265}} 
 Player 1 20:12:43 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":3} 
 Player 1 20:12:43 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 20:12:43 $SHOW_STACK_EFFECT:  

 {"effectId":3} 
 Player 1 20:12:45 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":3} 
 Player 1 20:12:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":26,"_text":"Remove After Resolve AttackRoll 3  "}} 
 Player 1 20:12:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Gemini"} 
 Player 1 20:12:46 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":317,"numberRolled":1,"rollingPlayerCardId":317,"stackEffectType":2,"attackedMonsterCardId":265}} 
 Player 1 20:12:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":27,"_text":"Response Remove After Resolve AttackRoll 3"},"childOfId":26} 
 Player 1 20:12:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":28,"_text":"Wait For Response From Player 1 "},"childOfId":26} 
 Player 1 20:12:46 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 20:12:46 $ACTION_MASSAGE_REMOVE:  

 {"id":28} 
 Player 1 20:12:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":29,"_text":"Wait For Response From Player 2 "},"childOfId":26} 
 Player 1 20:12:46 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 20:12:46 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 20:12:46 $ACTION_MASSAGE_REMOVE:  

 {"id":29} 
 Player 1 20:12:46 $ACTION_MASSAGE_REMOVE:  

 {"id":27} 
 Player 1 20:12:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":30,"_text":"Resolve CombatDamage 4 "}} 
 Player 1 20:12:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Gemini"} 
 Player 1 20:12:46 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":4,"creatorCardId":317,"entityToDoDamageCardId":317,"entityToTakeDamageCardId":265,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5}} 
 Player 1 20:12:46 $UPDATE_STACK_VIS:  

 {"stackId":4,"text":"Cain will deal 1 combat damage to Gemini"} 
 Player 1 20:12:46 $MONSTER_GET_DAMAGED:  

 {"cardId":265,"hpLeft":2,"damageDealerId":317} 
 Player 1 20:12:46 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":317},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":265,"scopeIsPlayer":false,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Player 1 20:12:46 $LOG_ERROR:  

 {"message":"\"Cannot read property 'node' of null\"","stack":"\"TypeError: Cannot read property 'node' of null\\n    at AtSpecificHp.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardConditions/AtSpecificHP.js:43:78)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113111:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113055:18)\\n    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113033:71\\n    at new Promise (<anonymous>)\\n    at 486.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113013:14)\\n    at AtSpecificHp.testCondition (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardConditions/AtSpecificHP.js:38:16)\\n    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:310:56)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113111:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113055:18)\""} 
 Player 1 20:12:46 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":5},{"type":0,"number":317},{"type":0,"number":265}],"result":null,"preventMethod":false,"methodScopeId":317,"scopeIsPlayer":true,"index":4,"originStackId":4},"isAfterActivation":true,"index":4} 
 Player 1 20:12:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Gemini"} 
 Player 1 20:12:46 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":4,"creatorCardId":317,"entityToDoDamageCardId":317,"entityToTakeDamageCardId":265,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5}} 
 Player 1 20:12:46 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":4} 
 Player 1 20:12:46 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 20:12:47 $SHOW_STACK_EFFECT:  

 {"effectId":4} 
 Player 1 20:12:49 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":4} 
 Player 1 20:12:49 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":31,"_text":"Remove After Resolve CombatDamage 4  "}} 
 Player 1 20:12:49 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 20:12:49 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":4,"creatorCardId":317,"entityToDoDamageCardId":317,"entityToTakeDamageCardId":265,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5}} 
 Player 1 20:12:49 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":32,"_text":"Response Remove After Resolve CombatDamage 4"},"childOfId":31} 
 Player 1 20:12:49 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":33,"_text":"Wait For Response From Player 2 "},"childOfId":31} 
 Player 1 20:12:49 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 20:12:49 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 20:12:49 $ACTION_MASSAGE_REMOVE:  

 {"id":33} 
 Player 1 20:12:49 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":34,"_text":"Wait For Response From Player 1 "},"childOfId":31} 
 Player 1 20:12:50 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 20:12:50 $ACTION_MASSAGE_REMOVE:  

 {"id":34} 
 Player 1 20:12:50 $ACTION_MASSAGE_REMOVE:  

 {"id":32} 
 Player 1 20:12:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":35,"_text":"Stack Was Emptied "}} 
 Player 1 20:12:50 $CLEAR_SE_VIS:  
 Player 1 20:12:50 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 20:13:01 $NEXT_STACK_ID:  
 Player 1 20:13:01 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 20:13:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Gemini<Monster>"} 
 Player 1 20:13:01 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":5,"creatorCardId":317,"rollingPlayerCardId":317,"stackEffectType":2,"attackedMonsterCardId":265}} 
 Player 1 20:13:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Gemini<Monster>"} 
 Player 1 20:13:01 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":5,"creatorCardId":317,"rollingPlayerCardId":317,"stackEffectType":2,"attackedMonsterCardId":265}} 
 Player 1 20:13:01 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 20:13:01 $SHOW_STACK_EFFECT:  

 {"effectId":5} 
 Player 1 20:13:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":36,"_text":"Add AttackRoll 5 "}} 
 Player 1 20:13:04 $ROLL_DICE:  

 {"playerId":1} 
 Player 1 20:13:05 $ROLL_DICE_ENDED:  

 {"playerId":1,"numberRolled":3} 
 Player 1 20:13:05 $UPDATE_STACK_VIS:  

 {"stackId":5,"text":"player rolled 3 vs Gemini<Monster>"} 
 Player 1 20:13:05 $SHOW_DICE_ROLL:  

 {"stackId":5} 
 Player 1 20:13:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 3 vs Gemini<Monster>"} 
 Player 1 20:13:08 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 20:13:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 3 vs Gemini<Monster>"} 
 Player 1 20:13:08 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":5,"creatorCardId":317,"numberRolled":3,"rollingPlayerCardId":317,"stackEffectType":2,"attackedMonsterCardId":265}} 
 Player 1 20:13:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":37,"_text":"Response Adding AttackRoll 5"},"childOfId":36} 
 Player 1 20:13:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":38,"_text":"Wait For Response From Player 1 "},"childOfId":36} 
 Player 1 20:13:09 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 20:13:09 $ACTION_MASSAGE_REMOVE:  

 {"id":38} 
 Player 1 20:13:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":39,"_text":"Wait For Response From Player 2 "},"childOfId":36} 
 Player 1 20:13:09 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 20:13:09 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 20:13:09 $ACTION_MASSAGE_REMOVE:  

 {"id":39} 
 Player 1 20:13:09 $ACTION_MASSAGE_REMOVE:  

 {"id":37} 
 Player 1 20:13:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":40,"_text":"Resolve AttackRoll 5 "}} 
 Player 1 20:13:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 3 vs Gemini<Monster>"} 
 Player 1 20:13:09 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":5,"creatorCardId":317,"numberRolled":3,"rollingPlayerCardId":317,"stackEffectType":2,"attackedMonsterCardId":265}} 
 Player 1 20:13:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":41,"_text":"Added 0 to original roll"}} 
 Player 1 20:13:09 $NEXT_STACK_ID:  
 Player 1 20:13:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 3 vs Gemini<Monster>"} 
 Player 1 20:13:09 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 20:13:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Gemini \n2:Player 1 rolled 3 vs Gemini<Monster>"} 
 Player 1 20:13:09 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":6,"creatorCardId":317,"entityToDoDamageCardId":317,"entityToTakeDamageCardId":265,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5}} 
 Player 1 20:13:09 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 20:13:09 $SHOW_STACK_EFFECT:  

 {"effectId":6} 
 Player 1 20:13:12 $CLEAR_SE_VIS:  
 Player 1 20:13:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Gemini \n2:Player 1 rolled 3 vs Gemini<Monster>"} 
 Player 1 20:13:12 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":6,"creatorCardId":317,"entityToDoDamageCardId":317,"entityToTakeDamageCardId":265,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5}} 
 Player 1 20:13:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Gemini \n2:Player 1 rolled 3 vs Gemini<Monster>"} 
 Player 1 20:13:12 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":5,"creatorCardId":317,"numberRolled":3,"rollingPlayerCardId":317,"stackEffectType":2,"attackedMonsterCardId":265}} 
 Player 1 20:13:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Gemini \n2:Player 1 rolled 3 vs Gemini<Monster>"} 
 Player 1 20:13:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Gemini \n2:Player 1 rolled 3 vs Gemini<Monster>"} 
 Player 1 20:13:12 $REPLACE_STACK:  

 {"currentStack":[{"entityId":6,"creatorCardId":317,"entityToDoDamageCardId":317,"entityToTakeDamageCardId":265,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5},{"entityId":5,"creatorCardId":317,"numberRolled":3,"rollingPlayerCardId":317,"stackEffectType":2,"attackedMonsterCardId":265}]} 
 Player 1 20:13:12 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":1},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":317,"scopeIsPlayer":true,"index":5,"originStackId":5},"isAfterActivation":true,"index":5} 
 Player 1 20:13:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Gemini \n2:Player 1 rolled 3 vs Gemini<Monster>"} 
 Player 1 20:13:12 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":5,"creatorCardId":317,"numberRolled":3,"rollingPlayerCardId":317,"stackEffectType":2,"attackedMonsterCardId":265}} 
 Player 1 20:13:12 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":5} 
 Player 1 20:13:12 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 20:13:12 $SHOW_STACK_EFFECT:  

 {"effectId":5} 
 Player 1 20:13:15 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":5} 
 Player 1 20:13:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":42,"_text":"Remove After Resolve AttackRoll 5  "}} 
 Player 1 20:13:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Gemini"} 
 Player 1 20:13:15 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":5,"creatorCardId":317,"numberRolled":3,"rollingPlayerCardId":317,"stackEffectType":2,"attackedMonsterCardId":265}} 
 Player 1 20:13:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":43,"_text":"Response Remove After Resolve AttackRoll 5"},"childOfId":42} 
 Player 1 20:13:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":44,"_text":"Wait For Response From Player 1 "},"childOfId":42} 
 Player 1 20:13:15 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 20:13:15 $ACTION_MASSAGE_REMOVE:  

 {"id":44} 
 Player 1 20:13:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":45,"_text":"Wait For Response From Player 2 "},"childOfId":42} 
 Player 1 20:13:15 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 20:13:15 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 20:13:15 $ACTION_MASSAGE_REMOVE:  

 {"id":45} 
 Player 1 20:13:15 $ACTION_MASSAGE_REMOVE:  

 {"id":43} 
 Player 1 20:13:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":46,"_text":"Resolve CombatDamage 6 "}} 
 Player 1 20:13:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Gemini"} 
 Player 1 20:13:15 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":6,"creatorCardId":317,"entityToDoDamageCardId":317,"entityToTakeDamageCardId":265,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5}} 
 Player 1 20:13:15 $UPDATE_STACK_VIS:  

 {"stackId":6,"text":"Cain will deal 1 combat damage to Gemini"} 
 Player 1 20:13:16 $MONSTER_GET_DAMAGED:  

 {"cardId":265,"hpLeft":1,"damageDealerId":317} 
 Player 1 20:13:16 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":317},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":265,"scopeIsPlayer":false,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 
 Player 1 20:13:16 $LOG_ERROR:  

 {"message":"\"Cannot read property 'node' of null\"","stack":"\"TypeError: Cannot read property 'node' of null\\n    at AtSpecificHp.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardConditions/AtSpecificHP.js:43:78)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113111:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113055:18)\\n    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113033:71\\n    at new Promise (<anonymous>)\\n    at 486.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113013:14)\\n    at AtSpecificHp.testCondition (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardConditions/AtSpecificHP.js:38:16)\\n    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:310:56)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113111:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113055:18)\""} 
 Player 1 20:13:16 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":5},{"type":0,"number":317},{"type":0,"number":265}],"result":null,"preventMethod":false,"methodScopeId":317,"scopeIsPlayer":true,"index":7,"originStackId":6},"isAfterActivation":true,"index":7} 
 Player 1 20:13:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Gemini"} 
 Player 1 20:13:16 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":6,"creatorCardId":317,"entityToDoDamageCardId":317,"entityToTakeDamageCardId":265,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5}} 
 Player 1 20:13:16 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":6} 
 Player 1 20:13:16 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 20:13:16 $SHOW_STACK_EFFECT:  

 {"effectId":6} 
 Player 1 20:13:18 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":6} 
 Player 1 20:13:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":47,"_text":"Remove After Resolve CombatDamage 6  "}} 
 Player 1 20:13:18 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 20:13:18 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":6,"creatorCardId":317,"entityToDoDamageCardId":317,"entityToTakeDamageCardId":265,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5}} 
 Player 1 20:13:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":48,"_text":"Response Remove After Resolve CombatDamage 6"},"childOfId":47} 
 Player 1 20:13:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":49,"_text":"Wait For Response From Player 2 "},"childOfId":47} 
 Player 1 20:13:19 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 20:13:19 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 20:13:19 $ACTION_MASSAGE_REMOVE:  

 {"id":49} 
 Player 1 20:13:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":50,"_text":"Wait For Response From Player 1 "},"childOfId":47} 
 Player 1 20:13:19 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 20:13:19 $ACTION_MASSAGE_REMOVE:  

 {"id":50} 
 Player 1 20:13:19 $ACTION_MASSAGE_REMOVE:  

 {"id":48} 
 Player 1 20:13:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":51,"_text":"Stack Was Emptied "}} 
 Player 1 20:13:19 $CLEAR_SE_VIS:  
 Player 1 20:13:19 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"}