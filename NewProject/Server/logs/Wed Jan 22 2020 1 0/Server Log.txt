Start Log 

 Player 1 01:00:33 $MATCH:  

 Player 1 01:00:33 $START_GAME:  

 Player 2 01:00:33 $MOVE_TO_TABLE:  

 Player 1 01:00:33 $MOVE_TO_TABLE:  

 Player 1 01:00:41 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 01:00:42 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 2 01:00:42 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":298,"itemCardId":299} 

 Player 2 01:00:42 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":283}],"result":true,"preventMethod":false,"methodScopeId":282,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 01:00:42 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":282,"itemCardId":283} 

 Player 2 01:00:42 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[83,74,121,128,70,19,15,52,104,71,87,132,112,22,20,106,120,38,110,86,55,40,134,14,80,23,122,53,90,89,130,69,45,109,100,96,46,65,61,138,116,117,124,66,78,118,84,98,8,62,43,21,123,119,108,129,136,47,35,16,105,7,48,60,11,12,30,131,27,115,56,82,111,58,107,64,72,81,39,36,63,32,92,91,114,33,133,88,25,73,102,113,31,141,79,126,68,93,127,95,54,34,67,142,24,42,37,51,9,101,28,140,10,26,97,94,135,125,103,75,59,76,137,85,139,77,44,29,49,18,57,41,50,13,99,17]} 

 Player 2 01:00:42 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[257,273,267,232,274,256,247,269,231,236,276,272,280,249,278,254,265,237,244,233,266,228,243,270,279,248,264,258,262,242,241,238,246,263,230,261,259,268,235,245,255,252,260,250,229,271,234,277,275,240,253,239,281,251]} 

 Player 2 01:00:42 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[153,170,208,171,177,186,201,156,150,216,203,158,198,183,204,196,225,146,172,166,192,218,152,165,207,219,221,174,163,211,180,173,184,190,220,188,197,151,167,149,222,155,182,160,185,175,169,191,147,200,212,159,206,210,154,189,181,199,179,164,157,223,176,202,168,161,178,217,214,205,187,209,162,213,224,194,215,148,145,195,193]} 

 Player 2 01:00:42 $DRAW_CARD:  
{"deckType":5} 

 Player 2 01:00:42 $FLIP_CARD:  
{"cardId":193} 

 Player 2 01:00:42 $ADD_STORE_CARD:  
{"cardId":193} 

 Player 2 01:00:42 $DRAW_CARD:  
{"deckType":5} 

 Player 2 01:00:42 $FLIP_CARD:  
{"cardId":195} 

 Player 2 01:00:42 $ADD_STORE_CARD:  
{"cardId":195} 

 Player 2 01:00:42 $DRAW_CARD:  
{"deckType":2} 

 Player 2 01:00:42 $FLIP_CARD:  
{"cardId":251} 

 Player 2 01:00:42 $REGISTER_PASSIVE_ITEM:  
{"cardId":251} 

 Player 2 01:00:42 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":251} 

 Player 2 01:00:42 $NEW_MONSTER_ON_PLACE:  
{"cardId":251,"monsterPlaceId":1} 

 Player 2 01:00:42 $DRAW_CARD:  
{"deckType":2} 

 Player 2 01:00:42 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":281} 

 Player 2 01:00:42 $DRAW_CARD:  
{"deckType":2} 

 Player 2 01:00:42 $FLIP_CARD:  
{"cardId":239} 

 Player 2 01:00:42 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":239} 

 Player 2 01:00:42 $NEW_MONSTER_ON_PLACE:  
{"cardId":239,"monsterPlaceId":2} 

 Player 2 01:00:42 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 01:00:42 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 01:00:42 $DRAW_CARD:  
{"deckType":1} 

 Player 2 01:00:43 $MOVE_CARD:  
{"moveIndex":1,"cardId":17,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 01:00:43 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":299}],"result":true,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 01:00:43 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":17,"flipIfFlipped":false,"playerId":2} 

 Player 2 01:00:43 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":17} 

 Player 2 01:00:43 $FLIP_CARD:  
{"cardId":17} 

 Player 2 01:00:43 $FLIP_CARD:  
{"cardId":17} 

 Player 2 01:00:43 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":17} 

 Player 2 01:00:43 $DRAW_CARD:  
{"deckType":1} 

 Player 2 01:00:43 $MOVE_CARD:  
{"moveIndex":2,"cardId":99,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 01:00:43 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":99,"flipIfFlipped":false,"playerId":2} 

 Player 2 01:00:43 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":99} 

 Player 2 01:00:43 $FLIP_CARD:  
{"cardId":99} 

 Player 2 01:00:43 $FLIP_CARD:  
{"cardId":99} 

 Player 2 01:00:44 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":99} 

 Player 2 01:00:44 $DRAW_CARD:  
{"deckType":1} 

 Player 2 01:00:44 $MOVE_CARD:  
{"moveIndex":3,"cardId":13,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 01:00:44 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":13,"flipIfFlipped":false,"playerId":2} 

 Player 2 01:00:44 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":13} 

 Player 2 01:00:44 $FLIP_CARD:  
{"cardId":13} 

 Player 2 01:00:44 $FLIP_CARD:  
{"cardId":13} 

 Player 2 01:00:44 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":13} 

 Player 2 01:00:44 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 01:00:44 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":282,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 01:00:44 $DRAW_CARD:  
{"deckType":1} 

 Player 2 01:00:44 $MOVE_CARD:  
{"moveIndex":4,"cardId":50,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 01:00:45 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":50,"flipIfFlipped":false,"playerId":2} 

 Player 2 01:00:45 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":50} 

 Player 2 01:00:45 $FLIP_CARD:  
{"cardId":50} 

 Player 2 01:00:45 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":50} 

 Player 2 01:00:45 $DRAW_CARD:  
{"deckType":1} 

 Player 2 01:00:45 $MOVE_CARD:  
{"moveIndex":5,"cardId":41,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 01:00:45 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":41,"flipIfFlipped":false,"playerId":2} 

 Player 2 01:00:45 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":41} 

 Player 2 01:00:45 $FLIP_CARD:  
{"cardId":41} 

 Player 2 01:00:45 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":41} 

 Player 2 01:00:45 $DRAW_CARD:  
{"deckType":1} 

 Player 2 01:00:45 $MOVE_CARD:  
{"moveIndex":6,"cardId":57,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 01:00:46 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":57,"flipIfFlipped":false,"playerId":2} 

 Player 2 01:00:46 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":57} 

 Player 2 01:00:46 $FLIP_CARD:  
{"cardId":57} 

 Player 2 01:00:46 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":57} 

 Player 2 01:00:46 $GAME_HAS_STARTED:  

 Player 2 01:00:46 $SET_TURN:  
{"playerId":1} 

 Player 2 01:00:46 $START_TURN:  
{"playerId":1} 

 Player 2 01:00:46 $UPDATE_ACTIONS:  

 Player 1 01:00:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:00:46 $NEXT_STACK_ID:  

 Player 1 01:00:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:00:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 01:00:46 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":298,"turnPlayerCardId":298,"stackEffectType":13}} 

 Player 1 01:00:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 01:00:46 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":298,"turnPlayerCardId":298,"stackEffectType":13}} 

 Player 1 01:00:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 1 01:00:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:00:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 01:00:46 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":298,"turnPlayerCardId":298,"stackEffectType":13}} 

 Player 1 01:00:46 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 01:00:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 1 01:00:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 1 01:00:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:00:46 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 01:00:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 1 01:00:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:00:46 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:00:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:00:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:00:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 01:00:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 01:00:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 01:00:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 01:00:46 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 01:00:46 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 01:00:47 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 01:00:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 1 01:00:47 $DRAW_CARD:  
{"deckType":1} 

 Player 1 01:00:47 $MOVE_CARD:  
{"moveIndex":7,"cardId":18,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 01:00:47 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":18,"flipIfFlipped":false,"playerId":1} 

 Player 1 01:00:47 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":18} 

 Player 1 01:00:47 $FLIP_CARD:  
{"cardId":18} 

 Player 1 01:00:47 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":18} 

 Player 1 01:00:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 01:00:47 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":298,"turnPlayerCardId":298,"stackEffectType":13}} 

 Player 1 01:00:47 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 01:00:47 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:00:47 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":298,"turnPlayerCardId":298,"stackEffectType":13}} 

 Player 1 01:00:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 1 01:00:47 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:00:47 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":298,"turnPlayerCardId":298,"stackEffectType":13}} 

 Player 1 01:00:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 1 01:00:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 1 01:00:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:00:47 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:00:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 01:00:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 01:00:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 01:00:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 01:00:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 01:00:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 01:00:48 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 01:00:48 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 1 01:00:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 1 01:00:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:00:48 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 1 01:00:48 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 1 01:00:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 1 01:00:48 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:00:48 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 01:00:48 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 01:00:48 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 01:00:48 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 01:00:48 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 01:00:48 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 01:00:48 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 01:00:49 $SHOW_DECISION:  
{"startCardId":298,"endCardId":251} 

 Player 1 01:00:49 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 01:00:50 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 01:00:52 $NEXT_STACK_ID:  

 Player 1 01:00:52 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:00:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Greed"} 

 Player 1 01:00:52 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":298,"attackingPlayerCardId":298,"idOfCardBeingAttacked":251,"stackEffectType":4}} 

 Player 1 01:00:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Greed"} 

 Player 1 01:00:52 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":298,"attackingPlayerCardId":298,"idOfCardBeingAttacked":251,"stackEffectType":4}} 

 Player 1 01:00:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add DeclareAttack 2 "}} 

 Player 1 01:00:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:00:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Greed"} 

 Player 1 01:00:52 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":298,"attackingPlayerCardId":298,"idOfCardBeingAttacked":251,"stackEffectType":4}} 

 Player 1 01:00:52 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 01:00:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding DeclareAttack 2"},"childOfId":10} 

 Player 1 01:00:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 1 01:00:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 01:00:52 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:00:52 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:00:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Greed"} 

 Player 2 01:00:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Greed"} 

 Player 2 01:00:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Greed"} 

 Player 2 01:00:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Greed"} 

 Player 1 01:00:53 $SHOW_DECISION:  
{"startCardId":298,"endCardId":299} 

 Player 1 01:00:56 $NEXT_STACK_ID:  

 Player 1 01:00:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Greed"} 

 Player 1 01:00:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Greed \n2:Player 1 activated HolyMantle"} 

 Player 1 01:00:56 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":298,"hasLockingStackEffect":false,"itemToPlayCardId":299,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 01:00:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Greed \n2:Player 1 activated HolyMantle"} 

 Player 1 01:00:56 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":298,"hasLockingStackEffect":false,"itemToPlayCardId":299,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 01:00:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Add ActivateItem 3 "}} 

 Player 2 01:00:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Greed"} 

 Player 2 01:00:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Greed"} 

 Player 2 01:00:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Greed \n2:Player 1 activated HolyMantle"} 

 Player 2 01:00:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Greed \n2:Player 1 activated HolyMantle"} 

 Player 1 01:00:58 $SHOW_DECISION:  
{"startCardId":299,"endCardId":298} 

 Player 1 01:00:59 $RESPOND_TO:  
{"playerId":-1,"stackEffectResponse":false} 

 Player 1 01:01:01 $USE_ITEM:  
{"cardId":299} 

 Player 1 01:01:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:01:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Greed \n2:Player 1 activated HolyMantle"} 

 Player 1 01:01:01 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":298,"hasLockingStackEffect":false,"itemToPlayCardId":299,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 01:01:01 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 1 01:01:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Response Adding ActivateItem 3"},"childOfId":13} 

 Player 1 01:01:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Wait For Response From Player 1 "},"childOfId":13} 

 Player 1 01:01:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:01:01 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 01:01:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Wait For Response From Player 2 "},"childOfId":13} 

 Player 1 01:01:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:01:01 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:01:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Greed \n2:Player 1 activated HolyMantle"} 

 Player 2 01:01:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Greed \n2:Player 1 activated HolyMantle"} 

 Player 2 01:01:01 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 01:01:01 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 1 01:01:01 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 01:01:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Resolve ActivateItem 3 "}} 

 Player 1 01:01:01 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":299,"particleType":6} 

 Player 1 01:01:03 $DISABLE_PARTICLE_EFFECT:  
{"cardId":299,"particleType":6} 

 Player 1 01:01:03 $REGISTER_ONE_TURN_PASSIVE_EFFECT:  
{"cardId":299,"effectIndex":{"type":3,"index":0},"conditionData":[{"effectTargets":[298],"chainEffectsData":[],"methodArgs":[],"isPassive":false,"effectCard":299,"effectCardOwner":298,"effectCardPlayer":298}]} 

 Player 1 01:01:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Greed \n2:Player 1 activated HolyMantle"} 

 Player 1 01:01:03 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":298,"hasLockingStackEffect":false,"itemToPlayCardId":299,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 01:01:03 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 1 01:01:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Greed"} 

 Player 1 01:01:03 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":298,"hasLockingStackEffect":false,"itemToPlayCardId":299,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 01:01:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Remove After Resolve ActivateItem 3  "}} 

 Player 1 01:01:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Greed"} 

 Player 1 01:01:04 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":298,"hasLockingStackEffect":false,"itemToPlayCardId":299,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 01:01:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Response Remove After Resolve ActivateItem 3"},"childOfId":18} 

 Player 1 01:01:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Wait For Response From Player 2 "},"childOfId":18} 

 Player 1 01:01:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:01:04 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:01:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Greed \n2:Player 1 activated HolyMantle"} 

 Player 2 01:01:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Greed \n2:Player 1 activated HolyMantle"} 

 Player 2 01:01:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Greed \n2:Player 1 activated HolyMantle"} 

 Player 2 01:01:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Greed \n2:Player 1 activated HolyMantle"} 

 Player 2 01:01:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Greed \n2:Player 1 activated HolyMantle"} 

 Player 2 01:01:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Greed \n2:Player 1 activated HolyMantle"} 

 Player 2 01:01:04 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 01:01:04 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 01:01:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Wait For Response From Player 1 "},"childOfId":18} 

 Player 1 01:01:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:01:04 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 1 01:01:04 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 01:01:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Resolve DeclareAttack 2 "}} 

 Player 1 01:01:04 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":251,"particleType":5} 

 Player 1 01:01:04 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":2,"originStackId":2},"isAfterActivation":true,"index":2} 

 Player 1 01:01:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Greed"} 

 Player 1 01:01:04 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":298,"attackingPlayerCardId":298,"idOfCardBeingAttacked":251,"stackEffectType":4}} 

 Player 1 01:01:04 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 1 01:01:04 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:01:04 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":298,"attackingPlayerCardId":298,"idOfCardBeingAttacked":251,"stackEffectType":4}} 

 Player 1 01:01:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Remove After Resolve DeclareAttack 2  "}} 

 Player 1 01:01:04 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:01:04 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":298,"attackingPlayerCardId":298,"idOfCardBeingAttacked":251,"stackEffectType":4}} 

 Player 1 01:01:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Response Remove After Resolve DeclareAttack 2"},"childOfId":23} 

 Player 1 01:01:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Wait For Response From Player 1 "},"childOfId":23} 

 Player 1 01:01:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:01:04 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 01:01:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Wait For Response From Player 2 "},"childOfId":23} 

 Player 1 01:01:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:01:04 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:01:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Greed"} 

 Player 2 01:01:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Greed"} 

 Player 2 01:01:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Greed"} 

 Player 2 01:01:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Greed"} 

 Player 2 01:01:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Greed"} 

 Player 2 01:01:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Greed"} 

 Player 2 01:01:05 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 01:01:05 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 1 01:01:05 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 01:01:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Stack Was Emptied "}} 

 Player 1 01:01:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:01:05 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 01:01:05 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 01:01:05 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 01:01:05 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 01:01:05 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 01:01:05 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 01:01:05 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 01:01:05 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 01:01:05 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 1 01:01:05 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 1 01:01:05 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 1 01:01:05 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 1 01:01:05 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 1 01:01:05 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 1 01:01:05 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 1 01:01:05 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 1 01:01:05 $NEXT_STACK_ID:  

 Player 1 01:01:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:01:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Greed<Monster>"} 

 Player 1 01:01:05 $ADD_TO_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":298,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 1 01:01:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Greed<Monster>"} 

 Player 1 01:01:05 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":298,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 1 01:01:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Add AttackRoll 4 "}} 

 Player 1 01:01:05 $ROLL_DICE:  
{"playerId":1} 

 Player 2 01:01:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:01:06 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:01:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Greed<Monster>"} 

 Player 2 01:01:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Greed<Monster>"} 

 Player 1 01:01:06 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 1 01:01:06 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 1 01:01:07 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 1 01:01:07 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":4} 

 Player 1 01:01:07 $UPDATE_STACK_VIS:  
{"stackId":4,"text":"player rolled 4 vs Greed<Monster>"} 

 Player 1 01:01:07 $SHOW_DICE_ROLL:  
{"stackId":4} 

 Player 1 01:01:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs Greed<Monster>"} 

 Player 1 01:01:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:01:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs Greed<Monster>"} 

 Player 1 01:01:10 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":298,"numberRolled":4,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 1 01:01:10 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 1 01:01:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Response Adding AttackRoll 4"},"childOfId":28} 

 Player 1 01:01:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Wait For Response From Player 1 "},"childOfId":28} 

 Player 1 01:01:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:01:10 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 01:01:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Wait For Response From Player 2 "},"childOfId":28} 

 Player 1 01:01:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:01:10 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:01:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Greed<Monster>"} 

 Player 2 01:01:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Greed<Monster>"} 

 Player 2 01:01:10 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 01:01:11 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 1 01:01:11 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 1 01:01:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Resolve AttackRoll 4 "}} 

 Player 1 01:01:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Added 0 to original roll"}} 

 Player 1 01:01:11 $NEXT_STACK_ID:  

 Player 1 01:01:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs Greed<Monster>"} 

 Player 1 01:01:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:01:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed \n2:Player 1 rolled 4 vs Greed<Monster>"} 

 Player 1 01:01:11 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":298,"entityToDoDamageCardId":298,"entityToTakeDamageCardId":251,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 01:01:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed \n2:Player 1 rolled 4 vs Greed<Monster>"} 

 Player 1 01:01:11 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":298,"numberRolled":4,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 1 01:01:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed \n2:Player 1 rolled 4 vs Greed<Monster>"} 

 Player 1 01:01:11 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":298,"entityToDoDamageCardId":298,"entityToTakeDamageCardId":251,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 01:01:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed \n2:Player 1 rolled 4 vs Greed<Monster>"} 

 Player 1 01:01:11 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":298,"numberRolled":4,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 1 01:01:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed \n2:Player 1 rolled 4 vs Greed<Monster>"} 

 Player 1 01:01:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed \n2:Player 1 rolled 4 vs Greed<Monster>"} 

 Player 1 01:01:11 $REPLACE_STACK:  
{"currentStack":[{"entityId":5,"creatorCardId":298,"entityToDoDamageCardId":298,"entityToTakeDamageCardId":251,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":4,"creatorCardId":298,"numberRolled":4,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":251}]} 

 Player 1 01:01:11 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":3,"originStackId":4},"isAfterActivation":true,"index":3} 

 Player 1 01:01:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed \n2:Player 1 rolled 4 vs Greed<Monster>"} 

 Player 1 01:01:11 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":298,"numberRolled":4,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 1 01:01:11 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 1 01:01:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed"} 

 Player 1 01:01:11 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":298,"numberRolled":4,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 1 01:01:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Remove After Resolve AttackRoll 4  "}} 

 Player 1 01:01:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed"} 

 Player 1 01:01:11 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":298,"numberRolled":4,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 1 01:01:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Response Remove After Resolve AttackRoll 4"},"childOfId":34} 

 Player 1 01:01:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Wait For Response From Player 1 "},"childOfId":34} 

 Player 1 01:01:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:01:11 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 1 01:01:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Wait For Response From Player 2 "},"childOfId":34} 

 Player 1 01:01:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:01:11 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:01:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Greed<Monster>"} 

 Player 2 01:01:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Greed<Monster>"} 

 Player 2 01:01:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed"} 

 Player 2 01:01:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed"} 

 Player 2 01:01:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed"} 

 Player 2 01:01:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed"} 

 Player 2 01:01:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed"} 

 Player 2 01:01:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed"} 

 Player 2 01:01:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed"} 

 Player 2 01:01:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed"} 

 Player 2 01:01:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed"} 

 Player 2 01:01:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed"} 

 Player 2 01:01:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed \n2:Player 1 is rolling against Greed<Monster>"} 

 Player 2 01:01:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed \n2:Player 1 is rolling against Greed<Monster>"} 

 Player 2 01:01:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed \n2:Player 1 is rolling against Greed<Monster>"} 

 Player 2 01:01:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed \n2:Player 1 is rolling against Greed<Monster>"} 

 Player 2 01:01:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed \n2:Player 1 is rolling against Greed<Monster>"} 

 Player 2 01:01:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed \n2:Player 1 is rolling against Greed<Monster>"} 

 Player 2 01:01:12 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 01:01:12 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 1 01:01:12 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 1 01:01:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Resolve CombatDamage 5 "}} 

 Player 1 01:01:12 $UPDATE_STACK_VIS:  
{"stackId":5,"text":"The Lost will deal 1 combat damage to Greed"} 

 Player 1 01:01:12 $MONSTER_GET_DAMAGED:  
{"cardId":251,"hpLeft":2,"damageDealerId":298} 

 Player 1 01:01:12 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":298}],"result":null,"preventMethod":false,"methodScopeId":251,"scopeIsPlayer":false,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 1 01:01:12 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":4},{"type":0,"number":298},{"type":0,"number":251}],"result":null,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":5,"originStackId":5},"isAfterActivation":true,"index":5} 

 Player 1 01:01:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed"} 

 Player 1 01:01:12 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":298,"entityToDoDamageCardId":298,"entityToTakeDamageCardId":251,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 01:01:12 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 1 01:01:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:01:12 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":298,"entityToDoDamageCardId":298,"entityToTakeDamageCardId":251,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 01:01:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Remove After Resolve CombatDamage 5  "}} 

 Player 1 01:01:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:01:12 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":298,"entityToDoDamageCardId":298,"entityToTakeDamageCardId":251,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 01:01:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Response Remove After Resolve CombatDamage 5"},"childOfId":39} 

 Player 1 01:01:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Wait For Response From Player 2 "},"childOfId":39} 

 Player 1 01:01:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:01:12 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:01:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed"} 

 Player 2 01:01:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed"} 

 Player 2 01:01:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed"} 

 Player 2 01:01:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed"} 

 Player 2 01:01:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed"} 

 Player 2 01:01:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed"} 

 Player 2 01:01:13 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 01:01:13 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 1 01:01:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Wait For Response From Player 1 "},"childOfId":39} 

 Player 1 01:01:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:01:13 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 1 01:01:13 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 1 01:01:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Stack Was Emptied "}} 

 Player 1 01:01:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:01:13 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 01:01:13 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 01:01:13 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 01:01:13 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 01:01:13 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 01:01:13 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 01:01:13 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 01:01:13 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 01:01:13 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 1 01:01:13 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 1 01:01:13 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 1 01:01:13 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 1 01:01:13 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 1 01:01:13 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 1 01:01:13 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 1 01:01:13 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 1 01:01:13 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 1 01:01:13 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 1 01:01:13 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 1 01:01:13 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 1 01:01:13 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 1 01:01:14 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 1 01:01:14 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 1 01:01:14 $NEXT_STACK_ID:  

 Player 1 01:01:14 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:01:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Greed<Monster>"} 

 Player 1 01:01:14 $ADD_TO_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":298,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 1 01:01:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Greed<Monster>"} 

 Player 1 01:01:14 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":298,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 1 01:01:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Add AttackRoll 6 "}} 

 Player 1 01:01:14 $ROLL_DICE:  
{"playerId":1} 

 Player 2 01:01:14 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:01:14 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:01:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Greed<Monster>"} 

 Player 2 01:01:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Greed<Monster>"} 

 Player 1 01:01:14 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 1 01:01:15 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 1 01:01:16 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":4} 

 Player 1 01:01:16 $UPDATE_STACK_VIS:  
{"stackId":6,"text":"player rolled 4 vs Greed<Monster>"} 

 Player 1 01:01:16 $SHOW_DICE_ROLL:  
{"stackId":6} 

 Player 1 01:01:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs Greed<Monster>"} 

 Player 1 01:01:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:01:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs Greed<Monster>"} 

 Player 1 01:01:19 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":298,"numberRolled":4,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 1 01:01:19 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 1 01:01:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Response Adding AttackRoll 6"},"childOfId":44} 

 Player 1 01:01:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Wait For Response From Player 1 "},"childOfId":44} 

 Player 1 01:01:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:01:19 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 1 01:01:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Wait For Response From Player 2 "},"childOfId":44} 

 Player 1 01:01:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:01:20 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:01:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Greed<Monster>"} 

 Player 2 01:01:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Greed<Monster>"} 

 Player 2 01:01:20 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 01:01:20 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 1 01:01:20 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 1 01:01:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Resolve AttackRoll 6 "}} 

 Player 1 01:01:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Added 0 to original roll"}} 

 Player 1 01:01:20 $NEXT_STACK_ID:  

 Player 1 01:01:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs Greed<Monster>"} 

 Player 1 01:01:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:01:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed \n2:Player 1 rolled 4 vs Greed<Monster>"} 

 Player 1 01:01:20 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":298,"entityToDoDamageCardId":298,"entityToTakeDamageCardId":251,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 01:01:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed \n2:Player 1 rolled 4 vs Greed<Monster>"} 

 Player 1 01:01:20 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":298,"numberRolled":4,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 1 01:01:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed \n2:Player 1 rolled 4 vs Greed<Monster>"} 

 Player 1 01:01:20 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":298,"entityToDoDamageCardId":298,"entityToTakeDamageCardId":251,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 01:01:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed \n2:Player 1 rolled 4 vs Greed<Monster>"} 

 Player 1 01:01:20 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":298,"numberRolled":4,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 1 01:01:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed \n2:Player 1 rolled 4 vs Greed<Monster>"} 

 Player 1 01:01:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed \n2:Player 1 rolled 4 vs Greed<Monster>"} 

 Player 1 01:01:20 $REPLACE_STACK:  
{"currentStack":[{"entityId":7,"creatorCardId":298,"entityToDoDamageCardId":298,"entityToTakeDamageCardId":251,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":6,"creatorCardId":298,"numberRolled":4,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":251}]} 

 Player 1 01:01:20 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":1},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":6,"originStackId":6},"isAfterActivation":true,"index":6} 

 Player 1 01:01:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed \n2:Player 1 rolled 4 vs Greed<Monster>"} 

 Player 1 01:01:20 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":298,"numberRolled":4,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 1 01:01:20 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 1 01:01:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed"} 

 Player 1 01:01:20 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":298,"numberRolled":4,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 1 01:01:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Remove After Resolve AttackRoll 6  "}} 

 Player 1 01:01:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed"} 

 Player 1 01:01:20 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":298,"numberRolled":4,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 1 01:01:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Response Remove After Resolve AttackRoll 6"},"childOfId":50} 

 Player 1 01:01:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Wait For Response From Player 1 "},"childOfId":50} 

 Player 1 01:01:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:01:20 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 1 01:01:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Wait For Response From Player 2 "},"childOfId":50} 

 Player 1 01:01:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:01:21 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:01:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Greed<Monster>"} 

 Player 2 01:01:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Greed<Monster>"} 

 Player 2 01:01:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed"} 

 Player 2 01:01:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed"} 

 Player 2 01:01:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed"} 

 Player 2 01:01:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed"} 

 Player 2 01:01:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed"} 

 Player 2 01:01:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed"} 

 Player 2 01:01:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed"} 

 Player 2 01:01:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed"} 

 Player 2 01:01:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed"} 

 Player 2 01:01:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed"} 

 Player 2 01:01:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed \n2:Player 1 is rolling against Greed<Monster>"} 

 Player 2 01:01:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed \n2:Player 1 is rolling against Greed<Monster>"} 

 Player 2 01:01:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed \n2:Player 1 is rolling against Greed<Monster>"} 

 Player 2 01:01:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed \n2:Player 1 is rolling against Greed<Monster>"} 

 Player 2 01:01:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed \n2:Player 1 is rolling against Greed<Monster>"} 

 Player 2 01:01:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed \n2:Player 1 is rolling against Greed<Monster>"} 

 Player 2 01:01:21 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 01:01:21 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 1 01:01:21 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 1 01:01:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Resolve CombatDamage 7 "}} 

 Player 1 01:01:21 $UPDATE_STACK_VIS:  
{"stackId":7,"text":"The Lost will deal 1 combat damage to Greed"} 

 Player 1 01:01:21 $MONSTER_GET_DAMAGED:  
{"cardId":251,"hpLeft":1,"damageDealerId":298} 

 Player 1 01:01:21 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":298}],"result":null,"preventMethod":false,"methodScopeId":251,"scopeIsPlayer":false,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 

 Player 1 01:01:21 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":4},{"type":0,"number":298},{"type":0,"number":251}],"result":null,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":8,"originStackId":7},"isAfterActivation":true,"index":8} 

 Player 1 01:01:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed"} 

 Player 1 01:01:21 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":298,"entityToDoDamageCardId":298,"entityToTakeDamageCardId":251,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 01:01:21 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 1 01:01:21 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:01:21 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":298,"entityToDoDamageCardId":298,"entityToTakeDamageCardId":251,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 01:01:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Remove After Resolve CombatDamage 7  "}} 

 Player 1 01:01:21 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:01:21 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":298,"entityToDoDamageCardId":298,"entityToTakeDamageCardId":251,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 01:01:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":56,"_text":"Response Remove After Resolve CombatDamage 7"},"childOfId":55} 

 Player 1 01:01:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":57,"_text":"Wait For Response From Player 2 "},"childOfId":55} 

 Player 1 01:01:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:01:22 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:01:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed"} 

 Player 2 01:01:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed"} 

 Player 2 01:01:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed"} 

 Player 2 01:01:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed"} 

 Player 2 01:01:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed"} 

 Player 2 01:01:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Lost combat damage to Greed"} 

 Player 2 01:01:22 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 01:01:22 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 1 01:01:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":58,"_text":"Wait For Response From Player 1 "},"childOfId":55} 

 Player 1 01:01:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:01:22 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 1 01:01:22 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 1 01:01:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":59,"_text":"Stack Was Emptied "}} 

 Player 1 01:01:22 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:01:22 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 01:01:22 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 01:01:22 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 01:01:22 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 01:01:22 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 01:01:22 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 01:01:22 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 01:01:22 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 01:01:22 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 1 01:01:22 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 1 01:01:22 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 1 01:01:22 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 1 01:01:22 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 1 01:01:22 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 1 01:01:22 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 1 01:01:22 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 1 01:01:22 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 1 01:01:22 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 1 01:01:22 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 1 01:01:22 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 1 01:01:22 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 1 01:01:22 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 1 01:01:23 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 1 01:01:23 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 1 01:01:23 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 1 01:01:23 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 1 01:01:23 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 1 01:01:23 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 1 01:01:23 $NEXT_STACK_ID:  

 Player 1 01:01:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:01:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Greed<Monster>"} 

 Player 1 01:01:23 $ADD_TO_STACK:  
{"stackEffect":{"entityId":8,"creatorCardId":298,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 1 01:01:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Greed<Monster>"} 

 Player 1 01:01:23 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":298,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 1 01:01:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":60,"_text":"Add AttackRoll 8 "}} 

 Player 1 01:01:23 $ROLL_DICE:  
{"playerId":1} 

 Player 1 01:01:23 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 1 01:01:23 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 2 01:01:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:01:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:01:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Greed<Monster>"} 

 Player 2 01:01:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Greed<Monster>"} 

 Player 1 01:01:23 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 1 01:01:24 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 1 01:01:25 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":2} 

 Player 1 01:01:25 $UPDATE_STACK_VIS:  
{"stackId":8,"text":"player rolled 2 vs Greed<Monster>"} 

 Player 1 01:01:25 $SHOW_DICE_ROLL:  
{"stackId":8} 

 Player 1 01:01:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Greed<Monster>"} 

 Player 1 01:01:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:01:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Greed<Monster>"} 

 Player 1 01:01:28 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":298,"numberRolled":2,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 1 01:01:28 $ACTION_MASSAGE_REMOVE:  
{"id":60} 

 Player 1 01:01:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":61,"_text":"Response Adding AttackRoll 8"},"childOfId":60} 

 Player 1 01:01:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":62,"_text":"Wait For Response From Player 1 "},"childOfId":60} 

 Player 1 01:01:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:01:28 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 1 01:01:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":63,"_text":"Wait For Response From Player 2 "},"childOfId":60} 

 Player 1 01:01:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:01:28 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:01:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Greed<Monster>"} 

 Player 2 01:01:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Greed<Monster>"} 

 Player 2 01:01:28 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 01:01:28 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 1 01:01:28 $ACTION_MASSAGE_REMOVE:  
{"id":61} 

 Player 1 01:01:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":64,"_text":"Resolve AttackRoll 8 "}} 

 Player 1 01:01:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":65,"_text":"Added 0 to original roll"}} 

 Player 1 01:01:28 $NEXT_STACK_ID:  

 Player 1 01:01:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Greed<Monster>"} 

 Player 1 01:01:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:01:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to The Lost \n2:Player 1 rolled 2 vs Greed<Monster>"} 

 Player 1 01:01:29 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":298,"entityToDoDamageCardId":251,"entityToTakeDamageCardId":298,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 01:01:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to The Lost \n2:Player 1 rolled 2 vs Greed<Monster>"} 

 Player 1 01:01:29 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":298,"numberRolled":2,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 1 01:01:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to The Lost \n2:Player 1 rolled 2 vs Greed<Monster>"} 

 Player 1 01:01:29 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":298,"entityToDoDamageCardId":251,"entityToTakeDamageCardId":298,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 01:01:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to The Lost \n2:Player 1 rolled 2 vs Greed<Monster>"} 

 Player 1 01:01:29 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":298,"numberRolled":2,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 1 01:01:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to The Lost \n2:Player 1 rolled 2 vs Greed<Monster>"} 

 Player 1 01:01:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to The Lost \n2:Player 1 rolled 2 vs Greed<Monster>"} 

 Player 1 01:01:29 $REPLACE_STACK:  
{"currentStack":[{"entityId":9,"creatorCardId":298,"entityToDoDamageCardId":251,"entityToTakeDamageCardId":298,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":8,"creatorCardId":298,"numberRolled":2,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":251}]} 

 Player 1 01:01:29 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":2},{"type":2,"number":1},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":9,"originStackId":8},"isAfterActivation":true,"index":9} 

 Player 1 01:01:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to The Lost \n2:Player 1 rolled 2 vs Greed<Monster>"} 

 Player 1 01:01:29 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":298,"numberRolled":2,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 1 01:01:29 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 1 01:01:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to The Lost"} 

 Player 1 01:01:29 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":298,"numberRolled":2,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 1 01:01:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":66,"_text":"Remove After Resolve AttackRoll 8  "}} 

 Player 1 01:01:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to The Lost"} 

 Player 1 01:01:29 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":8,"creatorCardId":298,"numberRolled":2,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 1 01:01:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":67,"_text":"Response Remove After Resolve AttackRoll 8"},"childOfId":66} 

 Player 1 01:01:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":68,"_text":"Wait For Response From Player 1 "},"childOfId":66} 

 Player 1 01:01:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:01:29 $ACTION_MASSAGE_REMOVE:  
{"id":68} 

 Player 1 01:01:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":69,"_text":"Wait For Response From Player 2 "},"childOfId":66} 

 Player 1 01:01:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:01:29 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:01:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Greed<Monster>"} 

 Player 2 01:01:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Greed<Monster>"} 

 Player 2 01:01:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to The Lost"} 

 Player 2 01:01:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to The Lost"} 

 Player 2 01:01:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to The Lost"} 

 Player 2 01:01:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to The Lost"} 

 Player 2 01:01:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to The Lost"} 

 Player 2 01:01:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to The Lost"} 

 Player 2 01:01:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to The Lost"} 

 Player 2 01:01:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to The Lost"} 

 Player 2 01:01:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to The Lost"} 

 Player 2 01:01:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to The Lost"} 

 Player 2 01:01:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to The Lost \n2:Player 1 is rolling against Greed<Monster>"} 

 Player 2 01:01:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to The Lost \n2:Player 1 is rolling against Greed<Monster>"} 

 Player 2 01:01:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to The Lost \n2:Player 1 is rolling against Greed<Monster>"} 

 Player 2 01:01:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to The Lost \n2:Player 1 is rolling against Greed<Monster>"} 

 Player 2 01:01:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to The Lost \n2:Player 1 is rolling against Greed<Monster>"} 

 Player 2 01:01:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to The Lost \n2:Player 1 is rolling against Greed<Monster>"} 

 Player 2 01:01:30 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 01:01:30 $ACTION_MASSAGE_REMOVE:  
{"id":69} 

 Player 1 01:01:30 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 1 01:01:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":70,"_text":"Resolve CombatDamage 9 "}} 

 Player 1 01:01:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed 1 combat damage to The Lost"} 

 Player 1 01:01:30 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_TAKEN","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":0,"number":251}],"result":null,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":1,"originStackId":9},"isAfterActivation":false,"index":1} 

 Player 1 01:01:30 $NEXT_STACK_ID:  

 Player 1 01:01:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed 1 combat damage to The Lost"} 

 Player 1 01:01:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed 1 combat damage to The Lost \n2:Activate Greed effect AddMoney<AddMoney>"} 

 Player 1 01:01:30 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":10,"creatorCardId":298,"hasLockingStackEffect":false,"cardActivatorId":251,"cardWithEffectId":251,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":251,"cardId":251,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 01:01:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed 1 combat damage to The Lost \n2:Activate Greed effect AddMoney<AddMoney>"} 

 Player 1 01:01:30 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":10,"creatorCardId":298,"hasLockingStackEffect":false,"cardActivatorId":251,"cardWithEffectId":251,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":251,"cardId":251,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 01:01:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":71,"_text":"Add ActivatePassiveEffect 10 "}} 

 Player 1 01:01:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed 1 combat damage to The Lost \n2:Activate Greed effect AddMoney<AddMoney>"} 

 Player 1 01:01:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed 1 combat damage to The Lost \n2:Activate Greed effect AddMoney<AddMoney>"} 

 Player 1 01:01:30 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[298,282],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":251,"effectCardPlayer":251},"entityId":10,"creatorCardId":298,"hasLockingStackEffect":false,"cardActivatorId":251,"cardWithEffectId":251,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":251,"cardId":251,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 01:01:30 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 1 01:01:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":72,"_text":"Response Adding ActivatePassiveEffect 10"},"childOfId":71} 

 Player 1 01:01:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":73,"_text":"Wait For Response From Player 2 "},"childOfId":71} 

 Player 1 01:01:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:01:30 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:01:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to The Lost"} 

 Player 2 01:01:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to The Lost"} 

 Player 2 01:01:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to The Lost \n2:Activate Greed "} 

 Player 2 01:01:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to The Lost \n2:Activate Greed "} 

 Player 2 01:01:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to The Lost \n2:Activate Greed "} 

 Player 2 01:01:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to The Lost \n2:Activate Greed "} 

 Player 2 01:01:30 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 01:01:31 $ACTION_MASSAGE_REMOVE:  
{"id":73} 

 Player 1 01:01:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":74,"_text":"Wait For Response From Player 1 "},"childOfId":71} 

 Player 1 01:01:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:01:31 $ACTION_MASSAGE_REMOVE:  
{"id":74} 

 Player 1 01:01:31 $ACTION_MASSAGE_REMOVE:  
{"id":72} 

 Player 1 01:01:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":75,"_text":"Resolve ActivatePassiveEffect 10 "}} 

 Player 1 01:01:31 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":251,"particleType":6} 

 Player 1 01:01:31 $ACTION_MASSAGE_REMOVE:  
{"id":65} 

 Player 1 01:01:31 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 1 01:01:33 $DISABLE_PARTICLE_EFFECT:  
{"cardId":251,"particleType":6} 

 Player 1 01:01:33 $SET_MONEY:  
{"playerId":1,"numOfCoins":0} 

 Player 1 01:01:33 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-4}],"result":null,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":10,"originStackId":-1},"isAfterActivation":true,"index":10} 

 Player 1 01:01:33 $SET_MONEY:  
{"playerId":2,"numOfCoins":0} 

 Player 1 01:01:33 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-4}],"result":null,"preventMethod":false,"methodScopeId":282,"scopeIsPlayer":true,"index":11,"originStackId":-1},"isAfterActivation":true,"index":11} 

 Player 1 01:01:33 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_TAKEN","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":0,"number":251}],"result":null,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":1,"originStackId":9},"isAfterActivation":false,"index":1} 

 Player 1 01:01:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed 1 combat damage to The Lost \n2:Activate Greed effect AddMoney<AddMoney>"} 

 Player 1 01:01:33 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[298,282],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":251,"effectCardPlayer":251},"entityId":10,"creatorCardId":298,"hasLockingStackEffect":false,"cardActivatorId":251,"cardWithEffectId":251,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 01:01:33 $ACTION_MASSAGE_REMOVE:  
{"id":75} 

 Player 1 01:01:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed 1 combat damage to The Lost"} 

 Player 1 01:01:33 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[298,282],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":251,"effectCardPlayer":251},"entityId":10,"creatorCardId":298,"hasLockingStackEffect":false,"cardActivatorId":251,"cardWithEffectId":251,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 01:01:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":76,"_text":"Remove After Resolve ActivatePassiveEffect 10  "}} 

 Player 1 01:01:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed 1 combat damage to The Lost"} 

 Player 1 01:01:33 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[298,282],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":251,"effectCardPlayer":251},"entityId":10,"creatorCardId":298,"hasLockingStackEffect":false,"cardActivatorId":251,"cardWithEffectId":251,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 01:01:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":77,"_text":"Response Remove After Resolve ActivatePassiveEffect 10"},"childOfId":76} 

 Player 1 01:01:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":78,"_text":"Wait For Response From Player 1 "},"childOfId":76} 

 Player 1 01:01:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:01:33 $ACTION_MASSAGE_REMOVE:  
{"id":78} 

 Player 1 01:01:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":79,"_text":"Wait For Response From Player 2 "},"childOfId":76} 

 Player 1 01:01:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:01:33 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:01:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to The Lost \n2:Activate Greed "} 

 Player 2 01:01:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to The Lost \n2:Activate Greed "} 

 Player 2 01:01:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to The Lost \n2:Activate Greed "} 

 Player 2 01:01:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to The Lost \n2:Activate Greed "} 

 Player 2 01:01:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to The Lost \n2:Activate Greed "} 

 Player 2 01:01:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to The Lost \n2:Activate Greed "} 

 Player 2 01:01:33 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 01:01:33 $ACTION_MASSAGE_REMOVE:  
{"id":79} 

 Player 1 01:01:33 $ACTION_MASSAGE_REMOVE:  
{"id":77} 

 Player 1 01:01:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":80,"_text":"Resolve CombatDamage 9 "}} 

 Player 1 01:01:33 $UPDATE_STACK_VIS:  
{"stackId":9,"text":"Greed will deal 1 combat damage to The Lost"} 

 Player 1 01:01:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed 1 combat damage to The Lost"} 

 Player 1 01:01:34 $PLAYER_GET_HIT:  
{"playerId":1,"damage":1,"damageDealerId":251} 

 Player 1 01:01:34 $NEXT_STACK_ID:  

 Player 1 01:01:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed 1 combat damage to The Lost"} 

 Player 1 01:01:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:01:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed 1 combat damage to The Lost \n2:Player 1 is about to die"} 

 Player 1 01:01:34 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":11,"creatorCardId":298,"playerToDieCardId":298,"stackEffectType":15,"killerId":251}} 

 Player 1 01:01:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed 1 combat damage to The Lost \n2:Player 1 is about to die"} 

 Player 1 01:01:34 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":298,"entityToDoDamageCardId":251,"entityToTakeDamageCardId":298,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 01:01:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed 1 combat damage to The Lost \n2:Player 1 is about to die"} 

 Player 1 01:01:34 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":298,"entityToDoDamageCardId":251,"entityToTakeDamageCardId":298,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 01:01:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed 1 combat damage to The Lost \n2:Player 1 is about to die"} 

 Player 1 01:01:34 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":298,"playerToDieCardId":298,"stackEffectType":15,"killerId":251}} 

 Player 1 01:01:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed 1 combat damage to The Lost \n2:Player 1 is about to die"} 

 Player 1 01:01:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed 1 combat damage to The Lost \n2:Player 1 is about to die"} 

 Player 1 01:01:34 $REPLACE_STACK:  
{"currentStack":[{"entityId":9,"creatorCardId":298,"entityToDoDamageCardId":251,"entityToTakeDamageCardId":298,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":11,"creatorCardId":298,"playerToDieCardId":298,"stackEffectType":15,"killerId":251}]} 

 Player 1 01:01:34 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":251}],"result":null,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":12,"originStackId":-1},"isAfterActivation":true,"index":12} 

 Player 1 01:01:34 $ACTION_MASSAGE_REMOVE:  
{"id":70} 

 Player 1 01:01:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 1 01:01:34 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":298,"entityToDoDamageCardId":251,"entityToTakeDamageCardId":298,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 01:01:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":81,"_text":"Remove After Resolve CombatDamage 9  "}} 

 Player 1 01:01:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 1 01:01:34 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":9,"creatorCardId":298,"entityToDoDamageCardId":251,"entityToTakeDamageCardId":298,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 01:01:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":82,"_text":"Response Remove After Resolve CombatDamage 9"},"childOfId":81} 

 Player 1 01:01:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":83,"_text":"Wait For Response From Player 1 "},"childOfId":81} 

 Player 1 01:01:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:01:34 $ACTION_MASSAGE_REMOVE:  
{"id":83} 

 Player 1 01:01:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":84,"_text":"Wait For Response From Player 2 "},"childOfId":81} 

 Player 1 01:01:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:01:34 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:01:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to The Lost"} 

 Player 2 01:01:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to The Lost"} 

 Player 2 01:01:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 01:01:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 01:01:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 01:01:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 01:01:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 01:01:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 01:01:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 01:01:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 01:01:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 01:01:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 01:01:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to The Lost \n2:Player 1 is about to die"} 

 Player 2 01:01:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to The Lost \n2:Player 1 is about to die"} 

 Player 2 01:01:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to The Lost \n2:Player 1 is about to die"} 

 Player 2 01:01:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to The Lost \n2:Player 1 is about to die"} 

 Player 2 01:01:35 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 01:01:35 $ACTION_MASSAGE_REMOVE:  
{"id":84} 

 Player 1 01:01:35 $ACTION_MASSAGE_REMOVE:  
{"id":82} 

 Player 1 01:01:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":85,"_text":"Resolve PlayerDeath 11 "}} 

 Player 1 01:01:35 $DISABLE_PARTICLE_EFFECT:  
{"cardId":251,"particleType":5} 

 Player 1 01:01:35 $CANCEL_ATTACK:  

 Player 1 01:01:35 $NEXT_STACK_ID:  

 Player 1 01:01:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 1 01:01:35 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_PAY_DEATH_PANELTIES","args":[],"result":null,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":2,"originStackId":12},"isAfterActivation":false,"index":2} 

 Player 1 01:01:35 $NEXT_STACK_ID:  

 Player 1 01:01:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 01:01:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 1 01:01:35 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":13,"creatorCardId":298,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":299,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":1,"cardId":299,"effctType":3},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 01:01:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 1 01:01:35 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":13,"creatorCardId":298,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":299,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":1,"cardId":299,"effctType":3},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 01:01:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":86,"_text":"Add ActivatePassiveEffect 13 "}} 

 Player 1 01:01:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 1 01:01:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 1 01:01:35 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":13,"creatorCardId":298,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":299,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":1,"cardId":299,"effctType":3},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 01:01:35 $ACTION_MASSAGE_REMOVE:  
{"id":86} 

 Player 1 01:01:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":87,"_text":"Response Adding ActivatePassiveEffect 13"},"childOfId":86} 

 Player 1 01:01:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":88,"_text":"Wait For Response From Player 2 "},"childOfId":86} 

 Player 1 01:01:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:01:35 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:01:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 01:01:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 01:01:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Activate HolyMantle "} 

 Player 2 01:01:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Activate HolyMantle "} 

 Player 2 01:01:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Activate HolyMantle "} 

 Player 2 01:01:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Activate HolyMantle "} 

 Player 2 01:01:36 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 01:01:36 $ACTION_MASSAGE_REMOVE:  
{"id":76} 

 Player 1 01:01:36 $ACTION_MASSAGE_REMOVE:  
{"id":88} 

 Player 1 01:01:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":89,"_text":"Wait For Response From Player 1 "},"childOfId":86} 

 Player 1 01:01:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:01:36 $ACTION_MASSAGE_REMOVE:  
{"id":89} 

 Player 1 01:01:36 $ACTION_MASSAGE_REMOVE:  
{"id":87} 

 Player 1 01:01:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":90,"_text":"Resolve ActivatePassiveEffect 13 "}} 

 Player 1 01:01:36 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":299,"particleType":6} 

 Player 1 01:01:36 $ACTION_MASSAGE_REMOVE:  
{"id":81} 

 Player 1 01:01:38 $DISABLE_PARTICLE_EFFECT:  
{"cardId":299,"particleType":6} 

 Player 1 01:01:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 1 01:01:38 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":12,"creatorCardId":298,"playerToPayCardId":298,"stackEffectType":16}} 

 Player 1 01:01:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":91,"_text":"Fizzle PlayerDeathPenalties 12"}} 

 Player 1 01:01:38 $FIZZLE_STACK_EFFECT:  
{"entityId":12} 

 Player 1 01:01:38 $PLAYER_HEAL:  
{"playerId":1,"hpToHeal":1,"healDown":true} 

 Player 1 01:01:38 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_PAY_DEATH_PANELTIES","args":[],"result":null,"preventMethod":true,"methodScopeId":298,"scopeIsPlayer":true,"index":2,"originStackId":12},"isAfterActivation":false,"index":2} 

 Player 1 01:01:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 1 01:01:38 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":13,"creatorCardId":298,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":299,"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 01:01:38 $ACTION_MASSAGE_REMOVE:  
{"id":90} 

 Player 1 01:01:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 1 01:01:38 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":13,"creatorCardId":298,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":299,"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 01:01:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":92,"_text":"Remove After Resolve ActivatePassiveEffect 13  "}} 

 Player 1 01:01:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 1 01:01:38 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":13,"creatorCardId":298,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":299,"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 01:01:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":93,"_text":"Response Remove After Resolve ActivatePassiveEffect 13"},"childOfId":92} 

 Player 1 01:01:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":94,"_text":"Wait For Response From Player 1 "},"childOfId":92} 

 Player 1 01:01:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:01:38 $ACTION_MASSAGE_REMOVE:  
{"id":94} 

 Player 1 01:01:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":95,"_text":"Wait For Response From Player 2 "},"childOfId":92} 

 Player 1 01:01:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:01:38 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:01:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Activate HolyMantle "} 

 Player 2 01:01:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Activate HolyMantle "} 

 Player 2 01:01:38 $PLAYER_HEAL:  
{"playerId":1,"hpToHeal":1} 

 Player 2 01:01:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Activate HolyMantle "} 

 Player 2 01:01:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Activate HolyMantle "} 

 Player 2 01:01:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Activate HolyMantle "} 

 Player 2 01:01:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Activate HolyMantle "} 

 Player 2 01:01:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Activate HolyMantle "} 

 Player 2 01:01:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Activate HolyMantle "} 

 Player 2 01:01:38 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 01:01:38 $ACTION_MASSAGE_REMOVE:  
{"id":95} 

 Player 1 01:01:38 $ACTION_MASSAGE_REMOVE:  
{"id":93} 

 Player 1 01:01:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":96,"_text":"Resolve PlayerDeath 11 "}} 

 Player 1 01:01:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 1 01:01:39 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":12,"creatorCardId":298,"playerToPayCardId":298,"stackEffectType":16}} 

 Player 1 01:01:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 1 01:01:39 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":298,"playerToDieCardId":298,"stackEffectType":15,"killerId":251}} 

 Player 1 01:01:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 1 01:01:39 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":298,"playerToDieCardId":298,"stackEffectType":15,"killerId":251}} 

 Player 1 01:01:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 1 01:01:39 $REPLACE_STACK:  
{"currentStack":[{"entityId":11,"creatorCardId":298,"playerToDieCardId":298,"stackEffectType":15,"killerId":251}]} 

 Player 1 01:01:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 1 01:01:39 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":11,"creatorCardId":298,"playerToDieCardId":298,"stackEffectType":15,"killerId":251}} 

 Player 1 01:01:39 $ACTION_MASSAGE_REMOVE:  
{"id":85} 

 Player 1 01:01:39 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:01:39 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":298,"playerToDieCardId":298,"stackEffectType":15,"killerId":251}} 

 Player 1 01:01:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":97,"_text":"Remove After Resolve PlayerDeath 11  "}} 

 Player 1 01:01:39 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:01:39 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":11,"creatorCardId":298,"playerToDieCardId":298,"stackEffectType":15,"killerId":251}} 

 Player 1 01:01:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":98,"_text":"Response Remove After Resolve PlayerDeath 11"},"childOfId":97} 

 Player 1 01:01:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":99,"_text":"Wait For Response From Player 2 "},"childOfId":97} 

 Player 1 01:01:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:01:39 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:01:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 01:01:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 01:01:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 01:01:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 01:01:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 01:01:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 01:01:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 01:01:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 01:01:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 01:01:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 01:01:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 01:01:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 01:01:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 01:01:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 01:01:40 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 01:01:40 $ACTION_MASSAGE_REMOVE:  
{"id":99} 

 Player 1 01:01:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":100,"_text":"Wait For Response From Player 1 "},"childOfId":97} 

 Player 1 01:01:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:01:40 $ACTION_MASSAGE_REMOVE:  
{"id":100} 

 Player 1 01:01:40 $ACTION_MASSAGE_REMOVE:  
{"id":98} 

 Player 1 01:01:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":101,"_text":"Stack Was Emptied "}} 

 Player 1 01:01:40 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:01:40 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 01:01:40 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 01:01:40 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 01:01:40 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 01:01:40 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 01:01:40 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 01:01:40 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 01:01:40 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 01:01:40 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 1 01:01:40 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 1 01:01:40 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 1 01:01:40 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 1 01:01:40 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 1 01:01:40 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 1 01:01:40 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 1 01:01:40 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 1 01:01:40 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 1 01:01:40 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 1 01:01:40 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 1 01:01:40 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 1 01:01:40 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 1 01:01:40 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 1 01:01:40 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 1 01:01:40 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 1 01:01:40 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 1 01:01:40 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 1 01:01:40 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 1 01:01:40 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  
{"id":60} 

 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  
{"id":65} 

 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  
{"id":70} 

 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  
{"id":75} 

 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  
{"id":76} 

 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  
{"id":80} 

 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  
{"id":81} 

 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  
{"id":85} 

 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  
{"id":86} 

 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  
{"id":90} 

 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  
{"id":91} 

 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  
{"id":92} 

 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  
{"id":96} 

 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  
{"id":97} 

 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  
{"id":101} 

 Player 1 01:01:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:01:41 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 1 01:01:42 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 1 01:01:42 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 1 01:01:42 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 1 01:01:42 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 1 01:01:42 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 1 01:01:42 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 1 01:01:42 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 1 01:01:42 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 1 01:01:42 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 1 01:01:42 $ACTION_MASSAGE_REMOVE:  
{"id":60} 

 Player 1 01:01:42 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 1 01:01:42 $ACTION_MASSAGE_REMOVE:  
{"id":65} 

 Player 1 01:01:42 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 1 01:01:42 $ACTION_MASSAGE_REMOVE:  
{"id":70} 

 Player 1 01:01:42 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 1 01:01:42 $ACTION_MASSAGE_REMOVE:  
{"id":75} 

 Player 1 01:01:42 $ACTION_MASSAGE_REMOVE:  
{"id":76} 

 Player 1 01:01:42 $ACTION_MASSAGE_REMOVE:  
{"id":80} 

 Player 1 01:01:42 $ACTION_MASSAGE_REMOVE:  
{"id":81} 

 Player 1 01:01:42 $ACTION_MASSAGE_REMOVE:  
{"id":85} 

 Player 1 01:01:42 $ACTION_MASSAGE_REMOVE:  
{"id":86} 

 Player 1 01:01:42 $ACTION_MASSAGE_REMOVE:  
{"id":90} 

 Player 1 01:01:42 $ACTION_MASSAGE_REMOVE:  
{"id":91} 

 Player 1 01:01:42 $ACTION_MASSAGE_REMOVE:  
{"id":92} 

 Player 1 01:01:42 $ACTION_MASSAGE_REMOVE:  
{"id":96} 

 Player 1 01:01:42 $ACTION_MASSAGE_REMOVE:  
{"id":97} 

 Player 1 01:01:42 $ACTION_MASSAGE_REMOVE:  
{"id":101} 

 Player 1 01:01:42 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 1 01:01:42 $END_TURN:  

 Player 1 01:01:42 $SET_TURN:  
{"playerId":2} 

 Player 1 01:01:42 $START_TURN:  
{"playerId":2} 

 Player 1 01:01:42 $ACTION_MASSAGE_REMOVE:  
{"id":91} 

 Player 1 01:01:42 $ACTION_MASSAGE_REMOVE:  
{"id":92} 

 Player 1 01:01:42 $ACTION_MASSAGE_REMOVE:  
{"id":101} 

 Player 1 01:01:42 $ACTION_MASSAGE_REMOVE:  
{"id":97} 

 Player 2 01:01:42 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 01:01:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:01:43 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 01:01:43 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 01:01:43 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 01:01:43 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 01:01:43 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 01:01:43 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 01:01:43 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 01:01:43 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 01:01:43 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 2 01:01:43 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 01:01:43 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 2 01:01:43 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 2 01:01:43 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 2 01:01:43 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 2 01:01:43 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 2 01:01:43 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 2 01:01:43 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 2 01:01:43 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 01:01:43 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 2 01:01:43 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 01:01:43 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 2 01:01:43 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 01:01:43 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 2 01:01:43 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 2 01:01:43 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 2 01:01:43 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 2 01:01:43 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 2 01:01:43 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 2 01:01:43 $ACTION_MASSAGE_REMOVE:  
{"id":60} 

 Player 2 01:01:43 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 2 01:01:43 $ACTION_MASSAGE_REMOVE:  
{"id":65} 

 Player 2 01:01:43 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 2 01:01:43 $ACTION_MASSAGE_REMOVE:  
{"id":70} 

 Player 2 01:01:43 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 2 01:01:43 $ACTION_MASSAGE_REMOVE:  
{"id":75} 

 Player 2 01:01:43 $ACTION_MASSAGE_REMOVE:  
{"id":76} 

 Player 2 01:01:43 $ACTION_MASSAGE_REMOVE:  
{"id":80} 

 Player 2 01:01:43 $ACTION_MASSAGE_REMOVE:  
{"id":81} 

 Player 2 01:01:43 $ACTION_MASSAGE_REMOVE:  
{"id":85} 

 Player 2 01:01:43 $ACTION_MASSAGE_REMOVE:  
{"id":86} 

 Player 2 01:01:43 $ACTION_MASSAGE_REMOVE:  
{"id":90} 

 Player 2 01:01:43 $ACTION_MASSAGE_REMOVE:  
{"id":91} 

 Player 2 01:01:43 $ACTION_MASSAGE_REMOVE:  
{"id":92} 

 Player 2 01:01:44 $ACTION_MASSAGE_REMOVE:  
{"id":96} 

 Player 2 01:01:44 $ACTION_MASSAGE_REMOVE:  
{"id":97} 

 Player 2 01:01:44 $ACTION_MASSAGE_REMOVE:  
{"id":101} 

 Player 2 01:01:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:01:44 $NEXT_STACK_ID:  

 Player 2 01:01:44 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:01:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 01:01:44 $ADD_TO_STACK:  
{"stackEffect":{"entityId":14,"creatorCardId":282,"turnPlayerCardId":282,"stackEffectType":13}} 

 Player 2 01:01:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 01:01:44 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":14,"creatorCardId":282,"turnPlayerCardId":282,"stackEffectType":13}} 

 Player 2 01:01:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":102,"_text":"Add StartTurnLoot 14 "}} 

 Player 2 01:01:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:01:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 01:01:44 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":14,"creatorCardId":282,"turnPlayerCardId":282,"stackEffectType":13}} 

 Player 2 01:01:44 $ACTION_MASSAGE_REMOVE:  
{"id":102} 

 Player 2 01:01:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":103,"_text":"Response Adding StartTurnLoot 14"},"childOfId":102} 

 Player 2 01:01:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":104,"_text":"Wait For Response From Player 2 "},"childOfId":102} 

 Player 2 01:01:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:01:44 $ACTION_MASSAGE_REMOVE:  
{"id":104} 

 Player 2 01:01:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":105,"_text":"Wait For Response From Player 1 "},"childOfId":102} 

 Player 2 01:01:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 01:01:44 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 01:01:44 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 01:01:44 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:01:44 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:01:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 01:01:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 01:01:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 01:01:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 01:01:44 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 01:01:44 $ACTION_MASSAGE_REMOVE:  
{"id":105} 

 Player 2 01:01:44 $ACTION_MASSAGE_REMOVE:  
{"id":103} 

 Player 2 01:01:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":106,"_text":"Resolve StartTurnLoot 14 "}} 

 Player 2 01:01:44 $DRAW_CARD:  
{"deckType":1} 

 Player 2 01:01:44 $MOVE_CARD:  
{"moveIndex":8,"cardId":49,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 01:01:45 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":49,"flipIfFlipped":false,"playerId":2} 

 Player 2 01:01:45 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":49} 

 Player 2 01:01:45 $FLIP_CARD:  
{"cardId":49} 

 Player 2 01:01:45 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":49} 

 Player 2 01:01:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 01:01:45 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":14,"creatorCardId":282,"turnPlayerCardId":282,"stackEffectType":13}} 

 Player 2 01:01:45 $ACTION_MASSAGE_REMOVE:  
{"id":106} 

 Player 2 01:01:45 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:01:45 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":14,"creatorCardId":282,"turnPlayerCardId":282,"stackEffectType":13}} 

 Player 2 01:01:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":107,"_text":"Remove After Resolve StartTurnLoot 14  "}} 

 Player 2 01:01:45 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:01:45 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":14,"creatorCardId":282,"turnPlayerCardId":282,"stackEffectType":13}} 

 Player 2 01:01:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":108,"_text":"Response Remove After Resolve StartTurnLoot 14"},"childOfId":107} 

 Player 2 01:01:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":109,"_text":"Wait For Response From Player 1 "},"childOfId":107} 

 Player 2 01:01:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 01:01:45 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 01:01:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 01:01:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 01:01:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 01:01:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 01:01:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 01:01:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 01:01:45 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 01:01:45 $ACTION_MASSAGE_REMOVE:  
{"id":109} 

 Player 2 01:01:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":110,"_text":"Wait For Response From Player 2 "},"childOfId":107} 

 Player 2 01:01:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:01:46 $ACTION_MASSAGE_REMOVE:  
{"id":110} 

 Player 2 01:01:46 $ACTION_MASSAGE_REMOVE:  
{"id":108} 

 Player 2 01:01:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":111,"_text":"Stack Was Emptied "}} 

 Player 2 01:01:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:01:46 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 01:01:46 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 01:01:46 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 01:01:46 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 01:01:46 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 01:01:46 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 01:01:46 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 01:01:46 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 01:01:46 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 2 01:01:46 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 01:01:46 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 2 01:01:46 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 2 01:01:46 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 2 01:01:46 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 2 01:01:46 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 2 01:01:46 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 2 01:01:46 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 2 01:01:46 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 01:01:46 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 2 01:01:46 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 01:01:46 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 2 01:01:46 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 01:01:46 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 2 01:01:46 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 2 01:01:46 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 2 01:01:46 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 2 01:01:46 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 2 01:01:46 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 2 01:01:46 $ACTION_MASSAGE_REMOVE:  
{"id":60} 

 Player 2 01:01:46 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 2 01:01:47 $ACTION_MASSAGE_REMOVE:  
{"id":65} 

 Player 2 01:01:47 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 2 01:01:47 $ACTION_MASSAGE_REMOVE:  
{"id":70} 

 Player 2 01:01:47 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 2 01:01:47 $ACTION_MASSAGE_REMOVE:  
{"id":75} 

 Player 2 01:01:47 $ACTION_MASSAGE_REMOVE:  
{"id":76} 

 Player 2 01:01:47 $ACTION_MASSAGE_REMOVE:  
{"id":80} 

 Player 2 01:01:47 $ACTION_MASSAGE_REMOVE:  
{"id":81} 

 Player 2 01:01:47 $ACTION_MASSAGE_REMOVE:  
{"id":85} 

 Player 2 01:01:47 $ACTION_MASSAGE_REMOVE:  
{"id":86} 

 Player 2 01:01:47 $ACTION_MASSAGE_REMOVE:  
{"id":90} 

 Player 2 01:01:47 $ACTION_MASSAGE_REMOVE:  
{"id":91} 

 Player 2 01:01:47 $ACTION_MASSAGE_REMOVE:  
{"id":92} 

 Player 2 01:01:47 $ACTION_MASSAGE_REMOVE:  
{"id":96} 

 Player 2 01:01:47 $ACTION_MASSAGE_REMOVE:  
{"id":97} 

 Player 2 01:01:47 $ACTION_MASSAGE_REMOVE:  
{"id":101} 

 Player 2 01:01:47 $ACTION_MASSAGE_REMOVE:  
{"id":102} 

 Player 2 01:01:47 $ACTION_MASSAGE_REMOVE:  
{"id":106} 

 Player 2 01:01:47 $ACTION_MASSAGE_REMOVE:  
{"id":107} 

 Player 2 01:01:47 $ACTION_MASSAGE_REMOVE:  
{"id":111} 

 Player 2 01:01:47 $ACTION_MASSAGE_REMOVE:  
{"id":111} 

 Player 2 01:01:48 $ACTION_MASSAGE_REMOVE:  
{"id":107} 

 Player 2 01:01:52 $SHOW_DECISION:  
{"startCardId":282,"endCardId":251} 

 Player 2 01:01:55 $NEXT_STACK_ID:  

 Player 2 01:01:55 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:01:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Greed"} 

 Player 2 01:01:55 $ADD_TO_STACK:  
{"stackEffect":{"entityId":15,"creatorCardId":282,"attackingPlayerCardId":282,"idOfCardBeingAttacked":251,"stackEffectType":4}} 

 Player 2 01:01:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Greed"} 

 Player 2 01:01:55 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":15,"creatorCardId":282,"attackingPlayerCardId":282,"idOfCardBeingAttacked":251,"stackEffectType":4}} 

 Player 2 01:01:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":112,"_text":"Add DeclareAttack 15 "}} 

 Player 2 01:01:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:01:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Greed"} 

 Player 2 01:01:55 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":15,"creatorCardId":282,"attackingPlayerCardId":282,"idOfCardBeingAttacked":251,"stackEffectType":4}} 

 Player 2 01:01:55 $ACTION_MASSAGE_REMOVE:  
{"id":112} 

 Player 2 01:01:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":113,"_text":"Response Adding DeclareAttack 15"},"childOfId":112} 

 Player 2 01:01:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":114,"_text":"Wait For Response From Player 2 "},"childOfId":112} 

 Player 2 01:01:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:01:55 $ACTION_MASSAGE_REMOVE:  
{"id":114} 

 Player 2 01:01:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":115,"_text":"Wait For Response From Player 1 "},"childOfId":112} 

 Player 2 01:01:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 01:01:55 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 01:01:55 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:01:56 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:01:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Greed"} 

 Player 1 01:01:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Greed"} 

 Player 1 01:01:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Greed"} 

 Player 1 01:01:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Greed"} 

 Player 1 01:01:56 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 01:01:56 $ACTION_MASSAGE_REMOVE:  
{"id":115} 

 Player 2 01:01:56 $ACTION_MASSAGE_REMOVE:  
{"id":113} 

 Player 2 01:01:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":116,"_text":"Resolve DeclareAttack 15 "}} 

 Player 2 01:01:56 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":251,"particleType":5} 

 Player 2 01:01:56 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":282,"scopeIsPlayer":true,"index":4,"originStackId":15},"isAfterActivation":true,"index":4} 

 Player 2 01:01:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Greed"} 

 Player 2 01:01:56 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":15,"creatorCardId":282,"attackingPlayerCardId":282,"idOfCardBeingAttacked":251,"stackEffectType":4}} 

 Player 2 01:01:56 $ACTION_MASSAGE_REMOVE:  
{"id":116} 

 Player 2 01:01:56 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:01:56 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":15,"creatorCardId":282,"attackingPlayerCardId":282,"idOfCardBeingAttacked":251,"stackEffectType":4}} 

 Player 2 01:01:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":117,"_text":"Remove After Resolve DeclareAttack 15  "}} 

 Player 2 01:01:56 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:01:56 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":15,"creatorCardId":282,"attackingPlayerCardId":282,"idOfCardBeingAttacked":251,"stackEffectType":4}} 

 Player 2 01:01:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":118,"_text":"Response Remove After Resolve DeclareAttack 15"},"childOfId":117} 

 Player 2 01:01:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":119,"_text":"Wait For Response From Player 1 "},"childOfId":117} 

 Player 2 01:01:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 01:01:56 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 01:01:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Greed"} 

 Player 1 01:01:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Greed"} 

 Player 1 01:01:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Greed"} 

 Player 1 01:01:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Greed"} 

 Player 1 01:01:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Greed"} 

 Player 1 01:01:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Greed"} 

 Player 1 01:01:56 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 01:01:56 $ACTION_MASSAGE_REMOVE:  
{"id":119} 

 Player 2 01:01:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":120,"_text":"Wait For Response From Player 2 "},"childOfId":117} 

 Player 2 01:01:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:01:56 $ACTION_MASSAGE_REMOVE:  
{"id":120} 

 Player 2 01:01:56 $ACTION_MASSAGE_REMOVE:  
{"id":118} 

 Player 2 01:01:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":121,"_text":"Stack Was Emptied "}} 

 Player 2 01:01:56 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:01:57 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 01:01:57 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 01:01:57 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 01:01:57 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 01:01:57 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 01:01:57 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 01:01:57 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 01:01:57 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 01:01:57 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 2 01:01:57 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 01:01:57 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 2 01:01:57 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 2 01:01:57 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 2 01:01:57 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 2 01:01:57 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 2 01:01:57 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 2 01:01:57 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 2 01:01:57 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 01:01:57 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 2 01:01:57 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 01:01:57 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 2 01:01:57 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 01:01:57 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 2 01:01:57 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 2 01:01:57 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 2 01:01:57 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 2 01:01:57 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 2 01:01:57 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 2 01:01:57 $ACTION_MASSAGE_REMOVE:  
{"id":60} 

 Player 2 01:01:57 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 2 01:01:57 $ACTION_MASSAGE_REMOVE:  
{"id":65} 

 Player 2 01:01:57 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 2 01:01:57 $ACTION_MASSAGE_REMOVE:  
{"id":70} 

 Player 2 01:01:57 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 2 01:01:57 $ACTION_MASSAGE_REMOVE:  
{"id":75} 

 Player 2 01:01:57 $ACTION_MASSAGE_REMOVE:  
{"id":76} 

 Player 2 01:01:57 $ACTION_MASSAGE_REMOVE:  
{"id":80} 

 Player 2 01:01:57 $ACTION_MASSAGE_REMOVE:  
{"id":81} 

 Player 2 01:01:57 $ACTION_MASSAGE_REMOVE:  
{"id":85} 

 Player 2 01:01:57 $ACTION_MASSAGE_REMOVE:  
{"id":86} 

 Player 2 01:01:57 $ACTION_MASSAGE_REMOVE:  
{"id":90} 

 Player 2 01:01:58 $ACTION_MASSAGE_REMOVE:  
{"id":91} 

 Player 2 01:01:58 $ACTION_MASSAGE_REMOVE:  
{"id":92} 

 Player 2 01:01:58 $ACTION_MASSAGE_REMOVE:  
{"id":96} 

 Player 2 01:01:58 $ACTION_MASSAGE_REMOVE:  
{"id":97} 

 Player 2 01:01:58 $ACTION_MASSAGE_REMOVE:  
{"id":101} 

 Player 2 01:01:58 $ACTION_MASSAGE_REMOVE:  
{"id":102} 

 Player 2 01:01:58 $ACTION_MASSAGE_REMOVE:  
{"id":106} 

 Player 2 01:01:58 $ACTION_MASSAGE_REMOVE:  
{"id":107} 

 Player 2 01:01:58 $ACTION_MASSAGE_REMOVE:  
{"id":111} 

 Player 2 01:01:58 $ACTION_MASSAGE_REMOVE:  
{"id":112} 

 Player 2 01:01:58 $ACTION_MASSAGE_REMOVE:  
{"id":116} 

 Player 2 01:01:58 $ACTION_MASSAGE_REMOVE:  
{"id":117} 

 Player 2 01:01:58 $ACTION_MASSAGE_REMOVE:  
{"id":121} 

 Player 2 01:01:58 $NEXT_STACK_ID:  

 Player 2 01:01:58 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:01:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 

 Player 2 01:01:58 $ADD_TO_STACK:  
{"stackEffect":{"entityId":16,"creatorCardId":282,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 2 01:01:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 

 Player 2 01:01:58 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":16,"creatorCardId":282,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 2 01:01:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":122,"_text":"Add AttackRoll 16 "}} 

 Player 2 01:01:58 $ROLL_DICE:  
{"playerId":2} 

 Player 2 01:01:58 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":2} 

 Player 2 01:01:58 $UPDATE_STACK_VIS:  
{"stackId":16,"text":"player rolled 2 vs Greed<Monster>"} 

 Player 2 01:01:58 $SHOW_DICE_ROLL:  
{"stackId":16} 

 Player 2 01:01:58 $ACTION_MASSAGE_REMOVE:  
{"id":121} 

 Player 1 01:01:58 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:01:58 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:01:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 

 Player 1 01:01:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 

 Player 2 01:01:59 $ACTION_MASSAGE_REMOVE:  
{"id":117} 

 Player 2 01:02:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 2 vs Greed<Monster>"} 

 Player 2 01:02:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:02:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 2 vs Greed<Monster>"} 

 Player 2 01:02:01 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":16,"creatorCardId":282,"numberRolled":2,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 2 01:02:01 $ACTION_MASSAGE_REMOVE:  
{"id":122} 

 Player 2 01:02:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":123,"_text":"Response Adding AttackRoll 16"},"childOfId":122} 

 Player 2 01:02:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":124,"_text":"Wait For Response From Player 2 "},"childOfId":122} 

 Player 2 01:02:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:02:01 $ACTION_MASSAGE_REMOVE:  
{"id":124} 

 Player 2 01:02:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":125,"_text":"Wait For Response From Player 1 "},"childOfId":122} 

 Player 2 01:02:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 01:02:01 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 01:02:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 

 Player 1 01:02:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 

 Player 1 01:02:01 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 01:02:01 $ACTION_MASSAGE_REMOVE:  
{"id":125} 

 Player 2 01:02:01 $ACTION_MASSAGE_REMOVE:  
{"id":123} 

 Player 2 01:02:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":126,"_text":"Resolve AttackRoll 16 "}} 

 Player 2 01:02:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":127,"_text":"Added 0 to original roll"}} 

 Player 2 01:02:01 $NEXT_STACK_ID:  

 Player 2 01:02:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 2 vs Greed<Monster>"} 

 Player 2 01:02:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:02:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed \n2:Player 2 rolled 2 vs Greed<Monster>"} 

 Player 2 01:02:01 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":17,"creatorCardId":282,"entityToDoDamageCardId":282,"entityToTakeDamageCardId":251,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 01:02:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed \n2:Player 2 rolled 2 vs Greed<Monster>"} 

 Player 2 01:02:01 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":16,"creatorCardId":282,"numberRolled":2,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 2 01:02:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed \n2:Player 2 rolled 2 vs Greed<Monster>"} 

 Player 2 01:02:01 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":17,"creatorCardId":282,"entityToDoDamageCardId":282,"entityToTakeDamageCardId":251,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 01:02:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed \n2:Player 2 rolled 2 vs Greed<Monster>"} 

 Player 2 01:02:01 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":16,"creatorCardId":282,"numberRolled":2,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 2 01:02:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed \n2:Player 2 rolled 2 vs Greed<Monster>"} 

 Player 2 01:02:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed \n2:Player 2 rolled 2 vs Greed<Monster>"} 

 Player 2 01:02:01 $REPLACE_STACK:  
{"currentStack":[{"entityId":17,"creatorCardId":282,"entityToDoDamageCardId":282,"entityToTakeDamageCardId":251,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":16,"creatorCardId":282,"numberRolled":2,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":251}]} 

 Player 2 01:02:01 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":282,"scopeIsPlayer":true,"index":5,"originStackId":16},"isAfterActivation":true,"index":5} 

 Player 2 01:02:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed \n2:Player 2 rolled 2 vs Greed<Monster>"} 

 Player 2 01:02:01 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":16,"creatorCardId":282,"numberRolled":2,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 2 01:02:02 $ACTION_MASSAGE_REMOVE:  
{"id":126} 

 Player 2 01:02:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed"} 

 Player 2 01:02:02 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":16,"creatorCardId":282,"numberRolled":2,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 2 01:02:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":128,"_text":"Remove After Resolve AttackRoll 16  "}} 

 Player 2 01:02:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed"} 

 Player 2 01:02:02 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":16,"creatorCardId":282,"numberRolled":2,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 2 01:02:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":129,"_text":"Response Remove After Resolve AttackRoll 16"},"childOfId":128} 

 Player 2 01:02:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":130,"_text":"Wait For Response From Player 2 "},"childOfId":128} 

 Player 2 01:02:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:02:02 $ACTION_MASSAGE_REMOVE:  
{"id":130} 

 Player 2 01:02:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":131,"_text":"Wait For Response From Player 1 "},"childOfId":128} 

 Player 2 01:02:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 01:02:02 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 01:02:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 

 Player 1 01:02:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 

 Player 1 01:02:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed"} 

 Player 1 01:02:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed"} 

 Player 1 01:02:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed"} 

 Player 1 01:02:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed"} 

 Player 1 01:02:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed"} 

 Player 1 01:02:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed"} 

 Player 1 01:02:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed"} 

 Player 1 01:02:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed"} 

 Player 1 01:02:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed"} 

 Player 1 01:02:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed"} 

 Player 1 01:02:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed \n2:Player 2 is rolling against Greed<Monster>"} 

 Player 1 01:02:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed \n2:Player 2 is rolling against Greed<Monster>"} 

 Player 1 01:02:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed \n2:Player 2 is rolling against Greed<Monster>"} 

 Player 1 01:02:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed \n2:Player 2 is rolling against Greed<Monster>"} 

 Player 1 01:02:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed \n2:Player 2 is rolling against Greed<Monster>"} 

 Player 1 01:02:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed \n2:Player 2 is rolling against Greed<Monster>"} 

 Player 1 01:02:02 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 01:02:02 $ACTION_MASSAGE_REMOVE:  
{"id":131} 

 Player 2 01:02:02 $ACTION_MASSAGE_REMOVE:  
{"id":129} 

 Player 2 01:02:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":132,"_text":"Resolve CombatDamage 17 "}} 

 Player 2 01:02:02 $UPDATE_STACK_VIS:  
{"stackId":17,"text":"Azazel will deal 1 combat damage to Greed"} 

 Player 2 01:02:03 $MONSTER_GET_DAMAGED:  
{"cardId":251,"hpLeft":2,"damageDealerId":282} 

 Player 2 01:02:03 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":282}],"result":null,"preventMethod":false,"methodScopeId":251,"scopeIsPlayer":false,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 

 Player 2 01:02:03 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":5},{"type":0,"number":282},{"type":0,"number":251}],"result":null,"preventMethod":false,"methodScopeId":282,"scopeIsPlayer":true,"index":7,"originStackId":17},"isAfterActivation":true,"index":7} 

 Player 2 01:02:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed"} 

 Player 2 01:02:03 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":17,"creatorCardId":282,"entityToDoDamageCardId":282,"entityToTakeDamageCardId":251,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 01:02:03 $ACTION_MASSAGE_REMOVE:  
{"id":132} 

 Player 2 01:02:03 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:02:03 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":17,"creatorCardId":282,"entityToDoDamageCardId":282,"entityToTakeDamageCardId":251,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 01:02:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":133,"_text":"Remove After Resolve CombatDamage 17  "}} 

 Player 2 01:02:03 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:02:03 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":17,"creatorCardId":282,"entityToDoDamageCardId":282,"entityToTakeDamageCardId":251,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 01:02:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":134,"_text":"Response Remove After Resolve CombatDamage 17"},"childOfId":133} 

 Player 2 01:02:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":135,"_text":"Wait For Response From Player 1 "},"childOfId":133} 

 Player 2 01:02:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 01:02:03 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 01:02:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed"} 

 Player 1 01:02:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed"} 

 Player 1 01:02:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed"} 

 Player 1 01:02:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed"} 

 Player 1 01:02:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed"} 

 Player 1 01:02:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed"} 

 Player 1 01:02:03 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 01:02:03 $ACTION_MASSAGE_REMOVE:  
{"id":135} 

 Player 2 01:02:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":136,"_text":"Wait For Response From Player 2 "},"childOfId":133} 

 Player 2 01:02:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:02:03 $ACTION_MASSAGE_REMOVE:  
{"id":136} 

 Player 2 01:02:03 $ACTION_MASSAGE_REMOVE:  
{"id":134} 

 Player 2 01:02:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":137,"_text":"Stack Was Emptied "}} 

 Player 2 01:02:03 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:02:03 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 01:02:03 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 01:02:03 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 01:02:03 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 01:02:03 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 01:02:03 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 01:02:03 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 01:02:03 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 01:02:03 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 2 01:02:04 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 01:02:04 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 2 01:02:04 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 2 01:02:04 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 2 01:02:04 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 2 01:02:04 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 2 01:02:04 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 2 01:02:04 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 2 01:02:04 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 01:02:04 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 2 01:02:04 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 01:02:04 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 2 01:02:04 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 01:02:04 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 2 01:02:04 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 2 01:02:04 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 2 01:02:04 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 2 01:02:04 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 2 01:02:04 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 2 01:02:04 $ACTION_MASSAGE_REMOVE:  
{"id":60} 

 Player 2 01:02:04 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 2 01:02:04 $ACTION_MASSAGE_REMOVE:  
{"id":65} 

 Player 2 01:02:04 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 2 01:02:04 $ACTION_MASSAGE_REMOVE:  
{"id":70} 

 Player 2 01:02:04 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 2 01:02:04 $ACTION_MASSAGE_REMOVE:  
{"id":75} 

 Player 2 01:02:04 $ACTION_MASSAGE_REMOVE:  
{"id":76} 

 Player 2 01:02:04 $ACTION_MASSAGE_REMOVE:  
{"id":80} 

 Player 2 01:02:04 $ACTION_MASSAGE_REMOVE:  
{"id":81} 

 Player 2 01:02:04 $ACTION_MASSAGE_REMOVE:  
{"id":85} 

 Player 2 01:02:04 $ACTION_MASSAGE_REMOVE:  
{"id":86} 

 Player 2 01:02:04 $ACTION_MASSAGE_REMOVE:  
{"id":90} 

 Player 2 01:02:04 $ACTION_MASSAGE_REMOVE:  
{"id":91} 

 Player 2 01:02:04 $ACTION_MASSAGE_REMOVE:  
{"id":92} 

 Player 2 01:02:04 $ACTION_MASSAGE_REMOVE:  
{"id":96} 

 Player 2 01:02:04 $ACTION_MASSAGE_REMOVE:  
{"id":97} 

 Player 2 01:02:04 $ACTION_MASSAGE_REMOVE:  
{"id":101} 

 Player 2 01:02:05 $ACTION_MASSAGE_REMOVE:  
{"id":102} 

 Player 2 01:02:05 $ACTION_MASSAGE_REMOVE:  
{"id":106} 

 Player 2 01:02:05 $ACTION_MASSAGE_REMOVE:  
{"id":107} 

 Player 2 01:02:05 $ACTION_MASSAGE_REMOVE:  
{"id":111} 

 Player 2 01:02:05 $ACTION_MASSAGE_REMOVE:  
{"id":112} 

 Player 2 01:02:05 $ACTION_MASSAGE_REMOVE:  
{"id":116} 

 Player 2 01:02:05 $ACTION_MASSAGE_REMOVE:  
{"id":117} 

 Player 2 01:02:05 $ACTION_MASSAGE_REMOVE:  
{"id":121} 

 Player 2 01:02:05 $ACTION_MASSAGE_REMOVE:  
{"id":122} 

 Player 2 01:02:05 $ACTION_MASSAGE_REMOVE:  
{"id":126} 

 Player 2 01:02:05 $ACTION_MASSAGE_REMOVE:  
{"id":127} 

 Player 2 01:02:05 $ACTION_MASSAGE_REMOVE:  
{"id":128} 

 Player 2 01:02:05 $ACTION_MASSAGE_REMOVE:  
{"id":132} 

 Player 2 01:02:05 $ACTION_MASSAGE_REMOVE:  
{"id":133} 

 Player 2 01:02:05 $ACTION_MASSAGE_REMOVE:  
{"id":137} 

 Player 2 01:02:05 $ACTION_MASSAGE_REMOVE:  
{"id":127} 

 Player 2 01:02:05 $ACTION_MASSAGE_REMOVE:  
{"id":128} 

 Player 2 01:02:05 $ACTION_MASSAGE_REMOVE:  
{"id":137} 

 Player 2 01:02:05 $ACTION_MASSAGE_REMOVE:  
{"id":133} 

 Player 2 01:02:31 $NEXT_STACK_ID:  

 Player 2 01:02:31 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:02:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 

 Player 2 01:02:31 $ADD_TO_STACK:  
{"stackEffect":{"entityId":18,"creatorCardId":282,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 2 01:02:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 

 Player 2 01:02:31 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":18,"creatorCardId":282,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 2 01:02:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":138,"_text":"Add AttackRoll 18 "}} 

 Player 2 01:02:31 $ROLL_DICE:  
{"playerId":2} 

 Player 1 01:02:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:02:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:02:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 

 Player 1 01:02:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 

 Player 2 01:02:33 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":3} 

 Player 2 01:02:33 $UPDATE_STACK_VIS:  
{"stackId":18,"text":"player rolled 3 vs Greed<Monster>"} 

 Player 2 01:02:33 $SHOW_DICE_ROLL:  
{"stackId":18} 

 Player 2 01:02:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 3 vs Greed<Monster>"} 

 Player 2 01:02:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:02:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 3 vs Greed<Monster>"} 

 Player 2 01:02:36 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":18,"creatorCardId":282,"numberRolled":3,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 2 01:02:36 $ACTION_MASSAGE_REMOVE:  
{"id":138} 

 Player 2 01:02:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":139,"_text":"Response Adding AttackRoll 18"},"childOfId":138} 

 Player 2 01:02:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":140,"_text":"Wait For Response From Player 2 "},"childOfId":138} 

 Player 2 01:02:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:02:37 $ACTION_MASSAGE_REMOVE:  
{"id":140} 

 Player 2 01:02:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":141,"_text":"Wait For Response From Player 1 "},"childOfId":138} 

 Player 2 01:02:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 01:02:37 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 01:02:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 

 Player 1 01:02:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 

 Player 1 01:02:37 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 01:02:37 $ACTION_MASSAGE_REMOVE:  
{"id":141} 

 Player 2 01:02:37 $ACTION_MASSAGE_REMOVE:  
{"id":139} 

 Player 2 01:02:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":142,"_text":"Resolve AttackRoll 18 "}} 

 Player 2 01:02:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":143,"_text":"Added 0 to original roll"}} 

 Player 2 01:02:37 $NEXT_STACK_ID:  

 Player 2 01:02:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 3 vs Greed<Monster>"} 

 Player 2 01:02:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:02:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed \n2:Player 2 rolled 3 vs Greed<Monster>"} 

 Player 2 01:02:37 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":19,"creatorCardId":282,"entityToDoDamageCardId":282,"entityToTakeDamageCardId":251,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 01:02:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed \n2:Player 2 rolled 3 vs Greed<Monster>"} 

 Player 2 01:02:37 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":18,"creatorCardId":282,"numberRolled":3,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 2 01:02:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed \n2:Player 2 rolled 3 vs Greed<Monster>"} 

 Player 2 01:02:37 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":19,"creatorCardId":282,"entityToDoDamageCardId":282,"entityToTakeDamageCardId":251,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 01:02:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed \n2:Player 2 rolled 3 vs Greed<Monster>"} 

 Player 2 01:02:37 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":18,"creatorCardId":282,"numberRolled":3,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 2 01:02:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed \n2:Player 2 rolled 3 vs Greed<Monster>"} 

 Player 2 01:02:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed \n2:Player 2 rolled 3 vs Greed<Monster>"} 

 Player 2 01:02:37 $REPLACE_STACK:  
{"currentStack":[{"entityId":19,"creatorCardId":282,"entityToDoDamageCardId":282,"entityToTakeDamageCardId":251,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":18,"creatorCardId":282,"numberRolled":3,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":251}]} 

 Player 2 01:02:37 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":1},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":282,"scopeIsPlayer":true,"index":8,"originStackId":18},"isAfterActivation":true,"index":8} 

 Player 2 01:02:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed \n2:Player 2 rolled 3 vs Greed<Monster>"} 

 Player 2 01:02:37 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":18,"creatorCardId":282,"numberRolled":3,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 2 01:02:37 $ACTION_MASSAGE_REMOVE:  
{"id":142} 

 Player 2 01:02:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed"} 

 Player 2 01:02:37 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":18,"creatorCardId":282,"numberRolled":3,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 2 01:02:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":144,"_text":"Remove After Resolve AttackRoll 18  "}} 

 Player 2 01:02:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed"} 

 Player 2 01:02:37 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":18,"creatorCardId":282,"numberRolled":3,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 2 01:02:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":145,"_text":"Response Remove After Resolve AttackRoll 18"},"childOfId":144} 

 Player 2 01:02:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":146,"_text":"Wait For Response From Player 2 "},"childOfId":144} 

 Player 2 01:02:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:02:38 $ACTION_MASSAGE_REMOVE:  
{"id":146} 

 Player 2 01:02:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":147,"_text":"Wait For Response From Player 1 "},"childOfId":144} 

 Player 2 01:02:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 01:02:38 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 01:02:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 

 Player 1 01:02:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 

 Player 1 01:02:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed"} 

 Player 1 01:02:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed"} 

 Player 1 01:02:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed"} 

 Player 1 01:02:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed"} 

 Player 1 01:02:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed"} 

 Player 1 01:02:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed"} 

 Player 1 01:02:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed"} 

 Player 1 01:02:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed"} 

 Player 1 01:02:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed"} 

 Player 1 01:02:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed"} 

 Player 1 01:02:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed \n2:Player 2 is rolling against Greed<Monster>"} 

 Player 1 01:02:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed \n2:Player 2 is rolling against Greed<Monster>"} 

 Player 1 01:02:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed \n2:Player 2 is rolling against Greed<Monster>"} 

 Player 1 01:02:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed \n2:Player 2 is rolling against Greed<Monster>"} 

 Player 1 01:02:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed \n2:Player 2 is rolling against Greed<Monster>"} 

 Player 1 01:02:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed \n2:Player 2 is rolling against Greed<Monster>"} 

 Player 1 01:02:38 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 01:02:38 $ACTION_MASSAGE_REMOVE:  
{"id":147} 

 Player 2 01:02:38 $ACTION_MASSAGE_REMOVE:  
{"id":145} 

 Player 2 01:02:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":148,"_text":"Resolve CombatDamage 19 "}} 

 Player 2 01:02:38 $UPDATE_STACK_VIS:  
{"stackId":19,"text":"Azazel will deal 1 combat damage to Greed"} 

 Player 2 01:02:38 $MONSTER_GET_DAMAGED:  
{"cardId":251,"hpLeft":1,"damageDealerId":282} 

 Player 2 01:02:38 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":282}],"result":null,"preventMethod":false,"methodScopeId":251,"scopeIsPlayer":false,"index":9,"originStackId":-1},"isAfterActivation":true,"index":9} 

 Player 2 01:02:38 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":5},{"type":0,"number":282},{"type":0,"number":251}],"result":null,"preventMethod":false,"methodScopeId":282,"scopeIsPlayer":true,"index":10,"originStackId":19},"isAfterActivation":true,"index":10} 

 Player 2 01:02:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed"} 

 Player 2 01:02:38 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":19,"creatorCardId":282,"entityToDoDamageCardId":282,"entityToTakeDamageCardId":251,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 01:02:38 $ACTION_MASSAGE_REMOVE:  
{"id":148} 

 Player 2 01:02:38 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:02:38 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":19,"creatorCardId":282,"entityToDoDamageCardId":282,"entityToTakeDamageCardId":251,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 01:02:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":149,"_text":"Remove After Resolve CombatDamage 19  "}} 

 Player 2 01:02:38 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:02:39 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":19,"creatorCardId":282,"entityToDoDamageCardId":282,"entityToTakeDamageCardId":251,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 01:02:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":150,"_text":"Response Remove After Resolve CombatDamage 19"},"childOfId":149} 

 Player 2 01:02:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":151,"_text":"Wait For Response From Player 1 "},"childOfId":149} 

 Player 2 01:02:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 01:02:39 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 01:02:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed"} 

 Player 1 01:02:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed"} 

 Player 1 01:02:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed"} 

 Player 1 01:02:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed"} 

 Player 1 01:02:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed"} 

 Player 1 01:02:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Greed"} 

 Player 1 01:02:39 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 01:02:39 $ACTION_MASSAGE_REMOVE:  
{"id":151} 

 Player 2 01:02:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":152,"_text":"Wait For Response From Player 2 "},"childOfId":149} 

 Player 2 01:02:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:02:39 $ACTION_MASSAGE_REMOVE:  
{"id":152} 

 Player 2 01:02:39 $ACTION_MASSAGE_REMOVE:  
{"id":150} 

 Player 2 01:02:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":153,"_text":"Stack Was Emptied "}} 

 Player 2 01:02:39 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:02:39 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 01:02:39 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 01:02:39 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 01:02:39 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 01:02:39 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 01:02:39 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 01:02:39 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 01:02:39 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 01:02:39 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 2 01:02:39 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 01:02:39 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 2 01:02:39 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 2 01:02:39 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 2 01:02:39 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 2 01:02:39 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 2 01:02:39 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 2 01:02:39 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 2 01:02:40 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 01:02:40 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 2 01:02:40 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 01:02:40 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 2 01:02:40 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 01:02:40 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 2 01:02:40 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 2 01:02:40 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 2 01:02:40 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 2 01:02:40 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 2 01:02:40 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 2 01:02:40 $ACTION_MASSAGE_REMOVE:  
{"id":60} 

 Player 2 01:02:40 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 2 01:02:40 $ACTION_MASSAGE_REMOVE:  
{"id":65} 

 Player 2 01:02:40 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 2 01:02:40 $ACTION_MASSAGE_REMOVE:  
{"id":70} 

 Player 2 01:02:40 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 2 01:02:40 $ACTION_MASSAGE_REMOVE:  
{"id":75} 

 Player 2 01:02:40 $ACTION_MASSAGE_REMOVE:  
{"id":76} 

 Player 2 01:02:40 $ACTION_MASSAGE_REMOVE:  
{"id":80} 

 Player 2 01:02:40 $ACTION_MASSAGE_REMOVE:  
{"id":81} 

 Player 2 01:02:40 $ACTION_MASSAGE_REMOVE:  
{"id":85} 

 Player 2 01:02:40 $ACTION_MASSAGE_REMOVE:  
{"id":86} 

 Player 2 01:02:40 $ACTION_MASSAGE_REMOVE:  
{"id":90} 

 Player 2 01:02:40 $ACTION_MASSAGE_REMOVE:  
{"id":91} 

 Player 2 01:02:40 $ACTION_MASSAGE_REMOVE:  
{"id":92} 

 Player 2 01:02:40 $ACTION_MASSAGE_REMOVE:  
{"id":96} 

 Player 2 01:02:40 $ACTION_MASSAGE_REMOVE:  
{"id":97} 

 Player 2 01:02:40 $ACTION_MASSAGE_REMOVE:  
{"id":101} 

 Player 2 01:02:40 $ACTION_MASSAGE_REMOVE:  
{"id":102} 

 Player 2 01:02:40 $ACTION_MASSAGE_REMOVE:  
{"id":106} 

 Player 2 01:02:40 $ACTION_MASSAGE_REMOVE:  
{"id":107} 

 Player 2 01:02:40 $ACTION_MASSAGE_REMOVE:  
{"id":111} 

 Player 2 01:02:40 $ACTION_MASSAGE_REMOVE:  
{"id":112} 

 Player 2 01:02:40 $ACTION_MASSAGE_REMOVE:  
{"id":116} 

 Player 2 01:02:40 $ACTION_MASSAGE_REMOVE:  
{"id":117} 

 Player 2 01:02:41 $ACTION_MASSAGE_REMOVE:  
{"id":121} 

 Player 2 01:02:41 $ACTION_MASSAGE_REMOVE:  
{"id":122} 

 Player 2 01:02:41 $ACTION_MASSAGE_REMOVE:  
{"id":126} 

 Player 2 01:02:41 $ACTION_MASSAGE_REMOVE:  
{"id":127} 

 Player 2 01:02:41 $ACTION_MASSAGE_REMOVE:  
{"id":128} 

 Player 2 01:02:41 $ACTION_MASSAGE_REMOVE:  
{"id":132} 

 Player 2 01:02:41 $ACTION_MASSAGE_REMOVE:  
{"id":133} 

 Player 2 01:02:41 $ACTION_MASSAGE_REMOVE:  
{"id":137} 

 Player 2 01:02:41 $ACTION_MASSAGE_REMOVE:  
{"id":138} 

 Player 2 01:02:41 $ACTION_MASSAGE_REMOVE:  
{"id":142} 

 Player 2 01:02:41 $ACTION_MASSAGE_REMOVE:  
{"id":143} 

 Player 2 01:02:41 $ACTION_MASSAGE_REMOVE:  
{"id":144} 

 Player 2 01:02:41 $ACTION_MASSAGE_REMOVE:  
{"id":148} 

 Player 2 01:02:41 $ACTION_MASSAGE_REMOVE:  
{"id":149} 

 Player 2 01:02:41 $ACTION_MASSAGE_REMOVE:  
{"id":153} 

 Player 2 01:02:41 $ACTION_MASSAGE_REMOVE:  
{"id":143} 

 Player 2 01:02:41 $ACTION_MASSAGE_REMOVE:  
{"id":144} 

 Player 2 01:02:41 $ACTION_MASSAGE_REMOVE:  
{"id":153} 

 Player 2 01:02:41 $ACTION_MASSAGE_REMOVE:  
{"id":149} 

 Player 2 01:02:49 $NEXT_STACK_ID:  

 Player 2 01:02:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:02:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 

 Player 2 01:02:49 $ADD_TO_STACK:  
{"stackEffect":{"entityId":20,"creatorCardId":282,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 2 01:02:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 

 Player 2 01:02:49 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":20,"creatorCardId":282,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 2 01:02:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":154,"_text":"Add AttackRoll 20 "}} 

 Player 2 01:02:49 $ROLL_DICE:  
{"playerId":2} 

 Player 1 01:02:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:02:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:02:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 

 Player 1 01:02:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 

 Player 2 01:02:50 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":2} 

 Player 2 01:02:50 $UPDATE_STACK_VIS:  
{"stackId":20,"text":"player rolled 2 vs Greed<Monster>"} 

 Player 2 01:02:50 $SHOW_DICE_ROLL:  
{"stackId":20} 

 Player 2 01:02:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 2 vs Greed<Monster>"} 

 Player 2 01:02:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:02:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 2 vs Greed<Monster>"} 

 Player 2 01:02:53 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":20,"creatorCardId":282,"numberRolled":2,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 2 01:02:53 $ACTION_MASSAGE_REMOVE:  
{"id":154} 

 Player 2 01:02:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":155,"_text":"Response Adding AttackRoll 20"},"childOfId":154} 

 Player 2 01:02:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":156,"_text":"Wait For Response From Player 2 "},"childOfId":154} 

 Player 2 01:02:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:02:53 $ACTION_MASSAGE_REMOVE:  
{"id":156} 

 Player 2 01:02:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":157,"_text":"Wait For Response From Player 1 "},"childOfId":154} 

 Player 2 01:02:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 01:02:53 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 01:02:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 

 Player 1 01:02:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 

 Player 1 01:02:54 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 01:02:54 $ACTION_MASSAGE_REMOVE:  
{"id":157} 

 Player 2 01:02:54 $ACTION_MASSAGE_REMOVE:  
{"id":155} 

 Player 2 01:02:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":158,"_text":"Resolve AttackRoll 20 "}} 

 Player 2 01:02:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":159,"_text":"Added 0 to original roll"}} 

 Player 2 01:02:54 $NEXT_STACK_ID:  

 Player 2 01:02:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 2 vs Greed<Monster>"} 

 Player 2 01:02:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:02:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel \n2:Player 2 rolled 2 vs Greed<Monster>"} 

 Player 2 01:02:54 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":21,"creatorCardId":282,"entityToDoDamageCardId":251,"entityToTakeDamageCardId":282,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 01:02:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel \n2:Player 2 rolled 2 vs Greed<Monster>"} 

 Player 2 01:02:54 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":20,"creatorCardId":282,"numberRolled":2,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 2 01:02:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel \n2:Player 2 rolled 2 vs Greed<Monster>"} 

 Player 2 01:02:54 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":21,"creatorCardId":282,"entityToDoDamageCardId":251,"entityToTakeDamageCardId":282,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 01:02:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel \n2:Player 2 rolled 2 vs Greed<Monster>"} 

 Player 2 01:02:54 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":20,"creatorCardId":282,"numberRolled":2,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 2 01:02:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel \n2:Player 2 rolled 2 vs Greed<Monster>"} 

 Player 2 01:02:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel \n2:Player 2 rolled 2 vs Greed<Monster>"} 

 Player 2 01:02:54 $REPLACE_STACK:  
{"currentStack":[{"entityId":21,"creatorCardId":282,"entityToDoDamageCardId":251,"entityToTakeDamageCardId":282,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":20,"creatorCardId":282,"numberRolled":2,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":251}]} 

 Player 2 01:02:54 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":1},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":282,"scopeIsPlayer":true,"index":11,"originStackId":20},"isAfterActivation":true,"index":11} 

 Player 2 01:02:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel \n2:Player 2 rolled 2 vs Greed<Monster>"} 

 Player 2 01:02:54 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":20,"creatorCardId":282,"numberRolled":2,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 2 01:02:54 $ACTION_MASSAGE_REMOVE:  
{"id":158} 

 Player 2 01:02:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel"} 

 Player 2 01:02:54 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":20,"creatorCardId":282,"numberRolled":2,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 2 01:02:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":160,"_text":"Remove After Resolve AttackRoll 20  "}} 

 Player 2 01:02:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel"} 

 Player 2 01:02:54 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":20,"creatorCardId":282,"numberRolled":2,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 2 01:02:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":161,"_text":"Response Remove After Resolve AttackRoll 20"},"childOfId":160} 

 Player 2 01:02:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":162,"_text":"Wait For Response From Player 2 "},"childOfId":160} 

 Player 2 01:02:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:02:54 $ACTION_MASSAGE_REMOVE:  
{"id":162} 

 Player 2 01:02:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":163,"_text":"Wait For Response From Player 1 "},"childOfId":160} 

 Player 2 01:02:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 01:02:54 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 01:02:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 

 Player 1 01:02:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 

 Player 1 01:02:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel"} 

 Player 1 01:02:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel"} 

 Player 1 01:02:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel"} 

 Player 1 01:02:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel"} 

 Player 1 01:02:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel"} 

 Player 1 01:02:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel"} 

 Player 1 01:02:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel"} 

 Player 1 01:02:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel"} 

 Player 1 01:02:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel"} 

 Player 1 01:02:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel"} 

 Player 1 01:02:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel \n2:Player 2 is rolling against Greed<Monster>"} 

 Player 1 01:02:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel \n2:Player 2 is rolling against Greed<Monster>"} 

 Player 1 01:02:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel \n2:Player 2 is rolling against Greed<Monster>"} 

 Player 1 01:02:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel \n2:Player 2 is rolling against Greed<Monster>"} 

 Player 1 01:02:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel \n2:Player 2 is rolling against Greed<Monster>"} 

 Player 1 01:02:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel \n2:Player 2 is rolling against Greed<Monster>"} 

 Player 1 01:02:55 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 01:02:55 $ACTION_MASSAGE_REMOVE:  
{"id":163} 

 Player 2 01:02:55 $ACTION_MASSAGE_REMOVE:  
{"id":161} 

 Player 2 01:02:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":164,"_text":"Resolve CombatDamage 21 "}} 

 Player 2 01:02:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed 1 combat damage to Azazel"} 

 Player 2 01:02:55 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_TAKEN","args":[{"type":2,"number":1},{"type":2,"number":1},{"type":0,"number":251}],"result":null,"preventMethod":false,"methodScopeId":282,"scopeIsPlayer":true,"index":1,"originStackId":21},"isAfterActivation":false,"index":1} 

 Player 2 01:02:55 $NEXT_STACK_ID:  

 Player 2 01:02:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed 1 combat damage to Azazel"} 

 Player 2 01:02:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed 1 combat damage to Azazel \n2:Activate Greed effect AddMoney<AddMoney>"} 

 Player 2 01:02:55 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":22,"creatorCardId":282,"hasLockingStackEffect":false,"cardActivatorId":251,"cardWithEffectId":251,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":251,"cardId":251,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 01:02:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed 1 combat damage to Azazel \n2:Activate Greed effect AddMoney<AddMoney>"} 

 Player 2 01:02:55 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":22,"creatorCardId":282,"hasLockingStackEffect":false,"cardActivatorId":251,"cardWithEffectId":251,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":251,"cardId":251,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 01:02:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":165,"_text":"Add ActivatePassiveEffect 22 "}} 

 Player 2 01:02:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed 1 combat damage to Azazel \n2:Activate Greed effect AddMoney<AddMoney>"} 

 Player 2 01:02:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed 1 combat damage to Azazel \n2:Activate Greed effect AddMoney<AddMoney>"} 

 Player 2 01:02:55 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[298,282],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":251,"effectCardPlayer":251},"entityId":22,"creatorCardId":282,"hasLockingStackEffect":false,"cardActivatorId":251,"cardWithEffectId":251,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":251,"cardId":251,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 01:02:55 $ACTION_MASSAGE_REMOVE:  
{"id":165} 

 Player 2 01:02:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":166,"_text":"Response Adding ActivatePassiveEffect 22"},"childOfId":165} 

 Player 2 01:02:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":167,"_text":"Wait For Response From Player 1 "},"childOfId":165} 

 Player 2 01:02:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 01:02:56 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 01:02:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel"} 

 Player 1 01:02:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel"} 

 Player 1 01:02:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel \n2:Activate Greed "} 

 Player 1 01:02:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel \n2:Activate Greed "} 

 Player 1 01:02:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel \n2:Activate Greed "} 

 Player 1 01:02:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel \n2:Activate Greed "} 

 Player 1 01:02:56 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 01:02:56 $ACTION_MASSAGE_REMOVE:  
{"id":167} 

 Player 2 01:02:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":168,"_text":"Wait For Response From Player 2 "},"childOfId":165} 

 Player 2 01:02:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:02:56 $ACTION_MASSAGE_REMOVE:  
{"id":168} 

 Player 2 01:02:56 $ACTION_MASSAGE_REMOVE:  
{"id":166} 

 Player 2 01:02:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":169,"_text":"Resolve ActivatePassiveEffect 22 "}} 

 Player 2 01:02:56 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":251,"particleType":6} 

 Player 2 01:02:57 $ACTION_MASSAGE_REMOVE:  
{"id":159} 

 Player 2 01:02:57 $ACTION_MASSAGE_REMOVE:  
{"id":160} 

 Player 2 01:02:58 $DISABLE_PARTICLE_EFFECT:  
{"cardId":251,"particleType":6} 

 Player 2 01:02:58 $SET_MONEY:  
{"playerId":1,"numOfCoins":0} 

 Player 2 01:02:58 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-4}],"result":null,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":12,"originStackId":-1},"isAfterActivation":true,"index":12} 

 Player 2 01:02:58 $SET_MONEY:  
{"playerId":2,"numOfCoins":0} 

 Player 2 01:02:58 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-4}],"result":null,"preventMethod":false,"methodScopeId":282,"scopeIsPlayer":true,"index":13,"originStackId":-1},"isAfterActivation":true,"index":13} 

 Player 2 01:02:58 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_TAKEN","args":[{"type":2,"number":1},{"type":2,"number":1},{"type":0,"number":251}],"result":null,"preventMethod":false,"methodScopeId":282,"scopeIsPlayer":true,"index":1,"originStackId":21},"isAfterActivation":false,"index":1} 

 Player 2 01:02:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed 1 combat damage to Azazel \n2:Activate Greed effect AddMoney<AddMoney>"} 

 Player 2 01:02:58 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[298,282],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":251,"effectCardPlayer":251},"entityId":22,"creatorCardId":282,"hasLockingStackEffect":false,"cardActivatorId":251,"cardWithEffectId":251,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 01:02:58 $ACTION_MASSAGE_REMOVE:  
{"id":169} 

 Player 2 01:02:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed 1 combat damage to Azazel"} 

 Player 2 01:02:58 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[298,282],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":251,"effectCardPlayer":251},"entityId":22,"creatorCardId":282,"hasLockingStackEffect":false,"cardActivatorId":251,"cardWithEffectId":251,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 01:02:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":170,"_text":"Remove After Resolve ActivatePassiveEffect 22  "}} 

 Player 2 01:02:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed 1 combat damage to Azazel"} 

 Player 2 01:02:58 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[298,282],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":251,"effectCardPlayer":251},"entityId":22,"creatorCardId":282,"hasLockingStackEffect":false,"cardActivatorId":251,"cardWithEffectId":251,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 01:02:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":171,"_text":"Response Remove After Resolve ActivatePassiveEffect 22"},"childOfId":170} 

 Player 2 01:02:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":172,"_text":"Wait For Response From Player 2 "},"childOfId":170} 

 Player 2 01:02:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:02:58 $ACTION_MASSAGE_REMOVE:  
{"id":172} 

 Player 2 01:02:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":173,"_text":"Wait For Response From Player 1 "},"childOfId":170} 

 Player 2 01:02:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 01:02:58 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 01:02:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel \n2:Activate Greed "} 

 Player 1 01:02:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel \n2:Activate Greed "} 

 Player 1 01:02:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel \n2:Activate Greed "} 

 Player 1 01:02:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel \n2:Activate Greed "} 

 Player 1 01:02:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel \n2:Activate Greed "} 

 Player 1 01:02:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel \n2:Activate Greed "} 

 Player 1 01:02:58 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 01:02:58 $ACTION_MASSAGE_REMOVE:  
{"id":173} 

 Player 2 01:02:59 $ACTION_MASSAGE_REMOVE:  
{"id":171} 

 Player 2 01:02:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":174,"_text":"Resolve CombatDamage 21 "}} 

 Player 2 01:02:59 $UPDATE_STACK_VIS:  
{"stackId":21,"text":"Greed will deal 1 combat damage to Azazel"} 

 Player 2 01:02:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed 1 combat damage to Azazel"} 

 Player 2 01:02:59 $PLAYER_GET_HIT:  
{"playerId":2,"damage":1,"damageDealerId":251} 

 Player 2 01:02:59 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":251}],"result":null,"preventMethod":false,"methodScopeId":282,"scopeIsPlayer":true,"index":14,"originStackId":-1},"isAfterActivation":true,"index":14} 

 Player 2 01:02:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed 1 combat damage to Azazel"} 

 Player 2 01:02:59 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":21,"creatorCardId":282,"entityToDoDamageCardId":251,"entityToTakeDamageCardId":282,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 01:02:59 $ACTION_MASSAGE_REMOVE:  
{"id":164} 

 Player 2 01:02:59 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:02:59 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":21,"creatorCardId":282,"entityToDoDamageCardId":251,"entityToTakeDamageCardId":282,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 01:02:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":175,"_text":"Remove After Resolve CombatDamage 21  "}} 

 Player 2 01:02:59 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:02:59 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":21,"creatorCardId":282,"entityToDoDamageCardId":251,"entityToTakeDamageCardId":282,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 01:02:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":176,"_text":"Response Remove After Resolve CombatDamage 21"},"childOfId":175} 

 Player 2 01:02:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":177,"_text":"Wait For Response From Player 1 "},"childOfId":175} 

 Player 2 01:02:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 01:02:59 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 01:02:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel"} 

 Player 1 01:02:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel"} 

 Player 1 01:02:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel"} 

 Player 1 01:02:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel"} 

 Player 1 01:02:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel"} 

 Player 1 01:02:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel"} 

 Player 1 01:02:59 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 01:02:59 $ACTION_MASSAGE_REMOVE:  
{"id":177} 

 Player 2 01:02:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":178,"_text":"Wait For Response From Player 2 "},"childOfId":175} 

 Player 2 01:02:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:02:59 $ACTION_MASSAGE_REMOVE:  
{"id":178} 

 Player 2 01:02:59 $ACTION_MASSAGE_REMOVE:  
{"id":176} 

 Player 2 01:02:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":179,"_text":"Stack Was Emptied "}} 

 Player 2 01:02:59 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:02:59 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 01:02:59 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 01:02:59 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 01:02:59 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 01:02:59 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 01:03:00 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 01:03:00 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 01:03:00 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 01:03:00 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 2 01:03:00 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 01:03:00 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 2 01:03:00 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 2 01:03:00 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 2 01:03:00 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 2 01:03:00 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 2 01:03:00 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 2 01:03:00 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 2 01:03:00 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 01:03:00 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 2 01:03:00 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 01:03:00 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 2 01:03:00 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 01:03:00 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 2 01:03:00 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 2 01:03:00 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 2 01:03:00 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 2 01:03:00 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 2 01:03:00 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 2 01:03:00 $ACTION_MASSAGE_REMOVE:  
{"id":60} 

 Player 2 01:03:00 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 2 01:03:00 $ACTION_MASSAGE_REMOVE:  
{"id":65} 

 Player 2 01:03:00 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 2 01:03:00 $ACTION_MASSAGE_REMOVE:  
{"id":70} 

 Player 2 01:03:00 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 2 01:03:00 $ACTION_MASSAGE_REMOVE:  
{"id":75} 

 Player 2 01:03:00 $ACTION_MASSAGE_REMOVE:  
{"id":76} 

 Player 2 01:03:00 $ACTION_MASSAGE_REMOVE:  
{"id":80} 

 Player 2 01:03:00 $ACTION_MASSAGE_REMOVE:  
{"id":81} 

 Player 2 01:03:00 $ACTION_MASSAGE_REMOVE:  
{"id":85} 

 Player 2 01:03:00 $ACTION_MASSAGE_REMOVE:  
{"id":86} 

 Player 2 01:03:00 $ACTION_MASSAGE_REMOVE:  
{"id":90} 

 Player 2 01:03:00 $ACTION_MASSAGE_REMOVE:  
{"id":91} 

 Player 2 01:03:00 $ACTION_MASSAGE_REMOVE:  
{"id":92} 

 Player 2 01:03:00 $ACTION_MASSAGE_REMOVE:  
{"id":96} 

 Player 2 01:03:01 $ACTION_MASSAGE_REMOVE:  
{"id":97} 

 Player 2 01:03:01 $ACTION_MASSAGE_REMOVE:  
{"id":101} 

 Player 2 01:03:01 $ACTION_MASSAGE_REMOVE:  
{"id":102} 

 Player 2 01:03:01 $ACTION_MASSAGE_REMOVE:  
{"id":106} 

 Player 2 01:03:01 $ACTION_MASSAGE_REMOVE:  
{"id":107} 

 Player 2 01:03:01 $ACTION_MASSAGE_REMOVE:  
{"id":111} 

 Player 2 01:03:01 $ACTION_MASSAGE_REMOVE:  
{"id":112} 

 Player 2 01:03:01 $ACTION_MASSAGE_REMOVE:  
{"id":116} 

 Player 2 01:03:01 $ACTION_MASSAGE_REMOVE:  
{"id":117} 

 Player 2 01:03:01 $ACTION_MASSAGE_REMOVE:  
{"id":121} 

 Player 2 01:03:01 $ACTION_MASSAGE_REMOVE:  
{"id":122} 

 Player 2 01:03:01 $ACTION_MASSAGE_REMOVE:  
{"id":126} 

 Player 2 01:03:01 $ACTION_MASSAGE_REMOVE:  
{"id":127} 

 Player 2 01:03:01 $ACTION_MASSAGE_REMOVE:  
{"id":128} 

 Player 2 01:03:01 $ACTION_MASSAGE_REMOVE:  
{"id":132} 

 Player 2 01:03:01 $ACTION_MASSAGE_REMOVE:  
{"id":133} 

 Player 2 01:03:01 $ACTION_MASSAGE_REMOVE:  
{"id":137} 

 Player 2 01:03:01 $ACTION_MASSAGE_REMOVE:  
{"id":138} 

 Player 2 01:03:01 $ACTION_MASSAGE_REMOVE:  
{"id":142} 

 Player 2 01:03:01 $ACTION_MASSAGE_REMOVE:  
{"id":143} 

 Player 2 01:03:01 $ACTION_MASSAGE_REMOVE:  
{"id":144} 

 Player 2 01:03:01 $ACTION_MASSAGE_REMOVE:  
{"id":148} 

 Player 2 01:03:01 $ACTION_MASSAGE_REMOVE:  
{"id":149} 

 Player 2 01:03:01 $ACTION_MASSAGE_REMOVE:  
{"id":153} 

 Player 2 01:03:01 $ACTION_MASSAGE_REMOVE:  
{"id":154} 

 Player 2 01:03:01 $ACTION_MASSAGE_REMOVE:  
{"id":158} 

 Player 2 01:03:01 $ACTION_MASSAGE_REMOVE:  
{"id":159} 

 Player 2 01:03:01 $ACTION_MASSAGE_REMOVE:  
{"id":160} 

 Player 2 01:03:01 $ACTION_MASSAGE_REMOVE:  
{"id":164} 

 Player 2 01:03:01 $ACTION_MASSAGE_REMOVE:  
{"id":165} 

 Player 2 01:03:01 $ACTION_MASSAGE_REMOVE:  
{"id":169} 

 Player 2 01:03:01 $ACTION_MASSAGE_REMOVE:  
{"id":170} 

 Player 2 01:03:01 $ACTION_MASSAGE_REMOVE:  
{"id":174} 

 Player 2 01:03:01 $ACTION_MASSAGE_REMOVE:  
{"id":175} 

 Player 2 01:03:01 $ACTION_MASSAGE_REMOVE:  
{"id":179} 

 Player 2 01:03:01 $NEXT_STACK_ID:  

 Player 2 01:03:01 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:03:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 

 Player 2 01:03:01 $ADD_TO_STACK:  
{"stackEffect":{"entityId":23,"creatorCardId":282,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 2 01:03:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 

 Player 2 01:03:01 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":23,"creatorCardId":282,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 2 01:03:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":180,"_text":"Add AttackRoll 23 "}} 

 Player 2 01:03:02 $ROLL_DICE:  
{"playerId":2} 

 Player 2 01:03:02 $ACTION_MASSAGE_REMOVE:  
{"id":179} 

 Player 2 01:03:02 $ACTION_MASSAGE_REMOVE:  
{"id":170} 

 Player 2 01:03:02 $ACTION_MASSAGE_REMOVE:  
{"id":175} 

 Player 1 01:03:02 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:03:02 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:03:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 

 Player 1 01:03:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 

 Player 2 01:03:02 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":1} 

 Player 2 01:03:02 $UPDATE_STACK_VIS:  
{"stackId":23,"text":"player rolled 1 vs Greed<Monster>"} 

 Player 2 01:03:02 $SHOW_DICE_ROLL:  
{"stackId":23} 

 Player 2 01:03:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Greed<Monster>"} 

 Player 2 01:03:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:03:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Greed<Monster>"} 

 Player 2 01:03:05 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":23,"creatorCardId":282,"numberRolled":1,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 2 01:03:05 $ACTION_MASSAGE_REMOVE:  
{"id":180} 

 Player 2 01:03:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":181,"_text":"Response Adding AttackRoll 23"},"childOfId":180} 

 Player 2 01:03:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":182,"_text":"Wait For Response From Player 2 "},"childOfId":180} 

 Player 2 01:03:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:03:05 $ACTION_MASSAGE_REMOVE:  
{"id":182} 

 Player 2 01:03:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":183,"_text":"Wait For Response From Player 1 "},"childOfId":180} 

 Player 2 01:03:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 01:03:06 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 01:03:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 

 Player 1 01:03:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 

 Player 1 01:03:06 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 01:03:06 $ACTION_MASSAGE_REMOVE:  
{"id":183} 

 Player 2 01:03:06 $ACTION_MASSAGE_REMOVE:  
{"id":181} 

 Player 2 01:03:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":184,"_text":"Resolve AttackRoll 23 "}} 

 Player 2 01:03:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":185,"_text":"Added 0 to original roll"}} 

 Player 2 01:03:06 $NEXT_STACK_ID:  

 Player 2 01:03:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Greed<Monster>"} 

 Player 2 01:03:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:03:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel \n2:Player 2 rolled 1 vs Greed<Monster>"} 

 Player 2 01:03:06 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":24,"creatorCardId":282,"entityToDoDamageCardId":251,"entityToTakeDamageCardId":282,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 01:03:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel \n2:Player 2 rolled 1 vs Greed<Monster>"} 

 Player 2 01:03:06 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":23,"creatorCardId":282,"numberRolled":1,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 2 01:03:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel \n2:Player 2 rolled 1 vs Greed<Monster>"} 

 Player 2 01:03:06 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":24,"creatorCardId":282,"entityToDoDamageCardId":251,"entityToTakeDamageCardId":282,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 01:03:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel \n2:Player 2 rolled 1 vs Greed<Monster>"} 

 Player 2 01:03:06 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":23,"creatorCardId":282,"numberRolled":1,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 2 01:03:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel \n2:Player 2 rolled 1 vs Greed<Monster>"} 

 Player 2 01:03:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel \n2:Player 2 rolled 1 vs Greed<Monster>"} 

 Player 2 01:03:06 $REPLACE_STACK:  
{"currentStack":[{"entityId":24,"creatorCardId":282,"entityToDoDamageCardId":251,"entityToTakeDamageCardId":282,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":23,"creatorCardId":282,"numberRolled":1,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":251}]} 

 Player 2 01:03:06 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":1},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":282,"scopeIsPlayer":true,"index":15,"originStackId":23},"isAfterActivation":true,"index":15} 

 Player 2 01:03:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel \n2:Player 2 rolled 1 vs Greed<Monster>"} 

 Player 2 01:03:06 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":23,"creatorCardId":282,"numberRolled":1,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 2 01:03:06 $ACTION_MASSAGE_REMOVE:  
{"id":184} 

 Player 2 01:03:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel"} 

 Player 2 01:03:06 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":23,"creatorCardId":282,"numberRolled":1,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 2 01:03:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":186,"_text":"Remove After Resolve AttackRoll 23  "}} 

 Player 2 01:03:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel"} 

 Player 2 01:03:06 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":23,"creatorCardId":282,"numberRolled":1,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 2 01:03:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":187,"_text":"Response Remove After Resolve AttackRoll 23"},"childOfId":186} 

 Player 2 01:03:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":188,"_text":"Wait For Response From Player 2 "},"childOfId":186} 

 Player 2 01:03:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:03:07 $ACTION_MASSAGE_REMOVE:  
{"id":188} 

 Player 2 01:03:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":189,"_text":"Wait For Response From Player 1 "},"childOfId":186} 

 Player 2 01:03:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 01:03:07 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 01:03:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 

 Player 1 01:03:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 

 Player 1 01:03:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel"} 

 Player 1 01:03:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel"} 

 Player 1 01:03:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel"} 

 Player 1 01:03:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel"} 

 Player 1 01:03:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel"} 

 Player 1 01:03:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel"} 

 Player 1 01:03:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel"} 

 Player 1 01:03:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel"} 

 Player 1 01:03:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel"} 

 Player 1 01:03:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel"} 

 Player 1 01:03:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel \n2:Player 2 is rolling against Greed<Monster>"} 

 Player 1 01:03:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel \n2:Player 2 is rolling against Greed<Monster>"} 

 Player 1 01:03:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel \n2:Player 2 is rolling against Greed<Monster>"} 

 Player 1 01:03:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel \n2:Player 2 is rolling against Greed<Monster>"} 

 Player 1 01:03:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel \n2:Player 2 is rolling against Greed<Monster>"} 

 Player 1 01:03:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel \n2:Player 2 is rolling against Greed<Monster>"} 

 Player 1 01:03:07 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 01:03:07 $ACTION_MASSAGE_REMOVE:  
{"id":189} 

 Player 2 01:03:07 $ACTION_MASSAGE_REMOVE:  
{"id":187} 

 Player 2 01:03:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":190,"_text":"Resolve CombatDamage 24 "}} 

 Player 2 01:03:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed 1 combat damage to Azazel"} 

 Player 2 01:03:07 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_TAKEN","args":[{"type":2,"number":1},{"type":2,"number":1},{"type":0,"number":251}],"result":null,"preventMethod":false,"methodScopeId":282,"scopeIsPlayer":true,"index":2,"originStackId":24},"isAfterActivation":false,"index":2} 

 Player 2 01:03:07 $NEXT_STACK_ID:  

 Player 2 01:03:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed 1 combat damage to Azazel"} 

 Player 2 01:03:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed 1 combat damage to Azazel \n2:Activate Greed effect AddMoney<AddMoney>"} 

 Player 2 01:03:07 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":25,"creatorCardId":282,"hasLockingStackEffect":false,"cardActivatorId":251,"cardWithEffectId":251,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":251,"cardId":251,"effctType":0},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 01:03:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed 1 combat damage to Azazel \n2:Activate Greed effect AddMoney<AddMoney>"} 

 Player 2 01:03:07 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":25,"creatorCardId":282,"hasLockingStackEffect":false,"cardActivatorId":251,"cardWithEffectId":251,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":251,"cardId":251,"effctType":0},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 01:03:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":191,"_text":"Add ActivatePassiveEffect 25 "}} 

 Player 2 01:03:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed 1 combat damage to Azazel \n2:Activate Greed effect AddMoney<AddMoney>"} 

 Player 2 01:03:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed 1 combat damage to Azazel \n2:Activate Greed effect AddMoney<AddMoney>"} 

 Player 2 01:03:07 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[298,282],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":251,"effectCardPlayer":251},"entityId":25,"creatorCardId":282,"hasLockingStackEffect":false,"cardActivatorId":251,"cardWithEffectId":251,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":251,"cardId":251,"effctType":0},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 01:03:08 $ACTION_MASSAGE_REMOVE:  
{"id":191} 

 Player 2 01:03:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":192,"_text":"Response Adding ActivatePassiveEffect 25"},"childOfId":191} 

 Player 2 01:03:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":193,"_text":"Wait For Response From Player 1 "},"childOfId":191} 

 Player 2 01:03:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 01:03:08 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 01:03:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel"} 

 Player 1 01:03:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel"} 

 Player 1 01:03:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel \n2:Activate Greed "} 

 Player 1 01:03:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel \n2:Activate Greed "} 

 Player 1 01:03:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel \n2:Activate Greed "} 

 Player 1 01:03:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel \n2:Activate Greed "} 

 Player 1 01:03:08 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 01:03:08 $ACTION_MASSAGE_REMOVE:  
{"id":193} 

 Player 2 01:03:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":194,"_text":"Wait For Response From Player 2 "},"childOfId":191} 

 Player 2 01:03:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:03:08 $ACTION_MASSAGE_REMOVE:  
{"id":194} 

 Player 2 01:03:08 $ACTION_MASSAGE_REMOVE:  
{"id":192} 

 Player 2 01:03:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":195,"_text":"Resolve ActivatePassiveEffect 25 "}} 

 Player 2 01:03:08 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":251,"particleType":6} 

 Player 2 01:03:09 $ACTION_MASSAGE_REMOVE:  
{"id":185} 

 Player 2 01:03:09 $ACTION_MASSAGE_REMOVE:  
{"id":186} 

 Player 2 01:03:10 $DISABLE_PARTICLE_EFFECT:  
{"cardId":251,"particleType":6} 

 Player 2 01:03:10 $SET_MONEY:  
{"playerId":1,"numOfCoins":0} 

 Player 2 01:03:10 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-4}],"result":null,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":16,"originStackId":-1},"isAfterActivation":true,"index":16} 

 Player 2 01:03:10 $SET_MONEY:  
{"playerId":2,"numOfCoins":0} 

 Player 2 01:03:10 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-4}],"result":null,"preventMethod":false,"methodScopeId":282,"scopeIsPlayer":true,"index":17,"originStackId":-1},"isAfterActivation":true,"index":17} 

 Player 2 01:03:10 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_TAKEN","args":[{"type":2,"number":1},{"type":2,"number":1},{"type":0,"number":251}],"result":null,"preventMethod":false,"methodScopeId":282,"scopeIsPlayer":true,"index":2,"originStackId":24},"isAfterActivation":false,"index":2} 

 Player 2 01:03:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed 1 combat damage to Azazel \n2:Activate Greed effect AddMoney<AddMoney>"} 

 Player 2 01:03:10 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[298,282],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":251,"effectCardPlayer":251},"entityId":25,"creatorCardId":282,"hasLockingStackEffect":false,"cardActivatorId":251,"cardWithEffectId":251,"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 01:03:10 $ACTION_MASSAGE_REMOVE:  
{"id":195} 

 Player 2 01:03:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed 1 combat damage to Azazel"} 

 Player 2 01:03:10 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[298,282],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":251,"effectCardPlayer":251},"entityId":25,"creatorCardId":282,"hasLockingStackEffect":false,"cardActivatorId":251,"cardWithEffectId":251,"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 01:03:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":196,"_text":"Remove After Resolve ActivatePassiveEffect 25  "}} 

 Player 2 01:03:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed 1 combat damage to Azazel"} 

 Player 2 01:03:10 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[298,282],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":251,"effectCardPlayer":251},"entityId":25,"creatorCardId":282,"hasLockingStackEffect":false,"cardActivatorId":251,"cardWithEffectId":251,"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 01:03:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":197,"_text":"Response Remove After Resolve ActivatePassiveEffect 25"},"childOfId":196} 

 Player 2 01:03:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":198,"_text":"Wait For Response From Player 2 "},"childOfId":196} 

 Player 2 01:03:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:03:10 $ACTION_MASSAGE_REMOVE:  
{"id":198} 

 Player 2 01:03:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":199,"_text":"Wait For Response From Player 1 "},"childOfId":196} 

 Player 2 01:03:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 01:03:10 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 01:03:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel \n2:Activate Greed "} 

 Player 1 01:03:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel \n2:Activate Greed "} 

 Player 1 01:03:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel \n2:Activate Greed "} 

 Player 1 01:03:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel \n2:Activate Greed "} 

 Player 1 01:03:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel \n2:Activate Greed "} 

 Player 1 01:03:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel \n2:Activate Greed "} 

 Player 1 01:03:11 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 01:03:11 $ACTION_MASSAGE_REMOVE:  
{"id":199} 

 Player 2 01:03:11 $ACTION_MASSAGE_REMOVE:  
{"id":197} 

 Player 2 01:03:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":200,"_text":"Resolve CombatDamage 24 "}} 

 Player 2 01:03:11 $UPDATE_STACK_VIS:  
{"stackId":24,"text":"Greed will deal 1 combat damage to Azazel"} 

 Player 2 01:03:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed 1 combat damage to Azazel"} 

 Player 2 01:03:11 $PLAYER_GET_HIT:  
{"playerId":2,"damage":1,"damageDealerId":251} 

 Player 2 01:03:11 $NEXT_STACK_ID:  

 Player 2 01:03:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed 1 combat damage to Azazel"} 

 Player 2 01:03:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:03:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed 1 combat damage to Azazel \n2:Player 2 is about to die"} 

 Player 2 01:03:11 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":26,"creatorCardId":282,"playerToDieCardId":282,"stackEffectType":15,"killerId":251}} 

 Player 2 01:03:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed 1 combat damage to Azazel \n2:Player 2 is about to die"} 

 Player 2 01:03:11 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":24,"creatorCardId":282,"entityToDoDamageCardId":251,"entityToTakeDamageCardId":282,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 01:03:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed 1 combat damage to Azazel \n2:Player 2 is about to die"} 

 Player 2 01:03:11 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":24,"creatorCardId":282,"entityToDoDamageCardId":251,"entityToTakeDamageCardId":282,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 01:03:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed 1 combat damage to Azazel \n2:Player 2 is about to die"} 

 Player 2 01:03:11 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":26,"creatorCardId":282,"playerToDieCardId":282,"stackEffectType":15,"killerId":251}} 

 Player 2 01:03:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed 1 combat damage to Azazel \n2:Player 2 is about to die"} 

 Player 2 01:03:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed 1 combat damage to Azazel \n2:Player 2 is about to die"} 

 Player 2 01:03:11 $REPLACE_STACK:  
{"currentStack":[{"entityId":24,"creatorCardId":282,"entityToDoDamageCardId":251,"entityToTakeDamageCardId":282,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":26,"creatorCardId":282,"playerToDieCardId":282,"stackEffectType":15,"killerId":251}]} 

 Player 2 01:03:11 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":251}],"result":null,"preventMethod":false,"methodScopeId":282,"scopeIsPlayer":true,"index":18,"originStackId":-1},"isAfterActivation":true,"index":18} 

 Player 2 01:03:11 $ACTION_MASSAGE_REMOVE:  
{"id":190} 

 Player 2 01:03:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 01:03:11 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":24,"creatorCardId":282,"entityToDoDamageCardId":251,"entityToTakeDamageCardId":282,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 01:03:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":201,"_text":"Remove After Resolve CombatDamage 24  "}} 

 Player 2 01:03:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 01:03:11 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":24,"creatorCardId":282,"entityToDoDamageCardId":251,"entityToTakeDamageCardId":282,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 01:03:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":202,"_text":"Response Remove After Resolve CombatDamage 24"},"childOfId":201} 

 Player 2 01:03:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":203,"_text":"Wait For Response From Player 2 "},"childOfId":201} 

 Player 2 01:03:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:03:11 $ACTION_MASSAGE_REMOVE:  
{"id":203} 

 Player 2 01:03:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":204,"_text":"Wait For Response From Player 1 "},"childOfId":201} 

 Player 2 01:03:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 01:03:12 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 01:03:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel"} 

 Player 1 01:03:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel"} 

 Player 1 01:03:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 01:03:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 01:03:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 01:03:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 01:03:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 01:03:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 01:03:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 01:03:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 01:03:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 01:03:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 01:03:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel \n2:Player 2 is about to die"} 

 Player 1 01:03:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel \n2:Player 2 is about to die"} 

 Player 1 01:03:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel \n2:Player 2 is about to die"} 

 Player 1 01:03:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Greed combat damage to Azazel \n2:Player 2 is about to die"} 

 Player 1 01:03:12 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 01:03:12 $ACTION_MASSAGE_REMOVE:  
{"id":204} 

 Player 2 01:03:12 $ACTION_MASSAGE_REMOVE:  
{"id":202} 

 Player 2 01:03:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":205,"_text":"Resolve PlayerDeath 26 "}} 

 Player 2 01:03:12 $DISABLE_PARTICLE_EFFECT:  
{"cardId":251,"particleType":5} 

 Player 2 01:03:12 $CANCEL_ATTACK:  

 Player 2 01:03:12 $NEXT_STACK_ID:  

 Player 2 01:03:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 01:03:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:03:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 

 Player 2 01:03:12 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":27,"creatorCardId":282,"playerToPayCardId":282,"stackEffectType":16}} 

 Player 2 01:03:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 

 Player 2 01:03:12 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":26,"creatorCardId":282,"playerToDieCardId":282,"stackEffectType":15,"killerId":251}} 

 Player 2 01:03:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 

 Player 2 01:03:12 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":26,"creatorCardId":282,"playerToDieCardId":282,"stackEffectType":15,"killerId":251}} 

 Player 2 01:03:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 

 Player 2 01:03:12 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":27,"creatorCardId":282,"playerToPayCardId":282,"stackEffectType":16}} 

 Player 2 01:03:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 

 Player 2 01:03:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 

 Player 2 01:03:12 $REPLACE_STACK:  
{"currentStack":[{"entityId":26,"creatorCardId":282,"playerToDieCardId":282,"stackEffectType":15,"killerId":251},{"entityId":27,"creatorCardId":282,"playerToPayCardId":282,"stackEffectType":16}]} 

 Player 2 01:03:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 

 Player 2 01:03:13 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":26,"creatorCardId":282,"playerToDieCardId":282,"stackEffectType":15,"killerId":251}} 

 Player 2 01:03:13 $ACTION_MASSAGE_REMOVE:  
{"id":205} 

 Player 2 01:03:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to pay death penalties"} 

 Player 2 01:03:13 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":26,"creatorCardId":282,"playerToDieCardId":282,"stackEffectType":15,"killerId":251}} 

 Player 2 01:03:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":206,"_text":"Remove After Resolve PlayerDeath 26  "}} 

 Player 2 01:03:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to pay death penalties"} 

 Player 2 01:03:13 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":26,"creatorCardId":282,"playerToDieCardId":282,"stackEffectType":15,"killerId":251}} 

 Player 2 01:03:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":207,"_text":"Response Remove After Resolve PlayerDeath 26"},"childOfId":206} 

 Player 2 01:03:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":208,"_text":"Wait For Response From Player 2 "},"childOfId":206} 

 Player 2 01:03:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:03:13 $ACTION_MASSAGE_REMOVE:  
{"id":208} 

 Player 2 01:03:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":209,"_text":"Wait For Response From Player 1 "},"childOfId":206} 

 Player 2 01:03:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 01:03:13 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 2 01:03:13 $ACTION_MASSAGE_REMOVE:  
{"id":196} 

 Player 1 01:03:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 01:03:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 01:03:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to pay death penalties"} 

 Player 1 01:03:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to pay death penalties"} 

 Player 1 01:03:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to pay death penalties"} 

 Player 1 01:03:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to pay death penalties"} 

 Player 1 01:03:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to pay death penalties"} 

 Player 1 01:03:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to pay death penalties"} 

 Player 1 01:03:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to pay death penalties"} 

 Player 1 01:03:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to pay death penalties"} 

 Player 1 01:03:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to pay death penalties"} 

 Player 1 01:03:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to pay death penalties"} 

 Player 1 01:03:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 

 Player 1 01:03:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 

 Player 1 01:03:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 

 Player 1 01:03:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 

 Player 1 01:03:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 

 Player 1 01:03:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 

 Player 1 01:03:13 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 01:03:13 $ACTION_MASSAGE_REMOVE:  
{"id":209} 

 Player 2 01:03:13 $ACTION_MASSAGE_REMOVE:  
{"id":207} 

 Player 2 01:03:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":210,"_text":"Resolve PlayerDeathPenalties 27 "}} 

 Player 2 01:03:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":211,"_text":"Player 2 pays Penalties"}} 

 Player 2 01:03:14 $ACTION_MASSAGE_REMOVE:  
{"id":201} 

 Player 2 01:03:15 $ACTION_MASSAGE_REMOVE:  
{"id":206} 

 Player 2 01:05:57 $MATCH: 