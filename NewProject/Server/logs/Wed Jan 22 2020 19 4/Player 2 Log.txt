Start Log 
 Player 2 19:04:39 $MOVE_TO_TABLE:  
 Player 2 19:04:48 $FINISH_LOAD:  

 {"id":2,"turnPlayerId":2} 
 Player 2 19:04:48 $ASSIGN_CHAR_TO_PLAYER:  

 {"playerId":1,"charCardId":292,"itemCardId":293} 
 Player 2 19:04:48 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":289}],"result":true,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 19:04:48 $ASSIGN_CHAR_TO_PLAYER:  

 {"playerId":2,"charCardId":286,"itemCardId":289} 
 Player 2 19:04:48 $DECK_ARRAGMENT:  

 {"deckType":1,"arrangement":[50,32,75,30,42,129,92,126,134,44,68,118,57,90,112,8,7,27,127,115,136,63,86,82,41,56,123,99,100,109,81,67,125,16,137,69,61,40,64,84,88,139,87,71,45,39,13,24,110,77,37,102,117,52,132,101,66,11,60,54,74,19,124,55,47,9,98,12,79,53,96,59,76,70,10,65,34,23,140,29,105,121,22,17,28,91,104,72,138,14,93,26,120,131,49,78,36,113,103,95,15,108,111,89,135,18,107,85,73,38,97,51,25,116,21,83,106,133,58,128,130,43,80,33,31,35,46,119,62,94,114,142,48,20,141,122]} 
 Player 2 19:04:48 $DECK_ARRAGMENT:  

 {"deckType":2,"arrangement":[250,263,277,258,238,278,232,271,241,260,255,245,240,248,266,246,247,243,236,280,256,272,231,235,254,242,281,229,234,265,233,257,264,276,267,261,262,273,252,275,251,249,230,279,268,259,253,269,270,244,237,239,274,228]} 
 Player 2 19:04:48 $DECK_ARRAGMENT:  

 {"deckType":5,"arrangement":[215,158,159,196,187,149,179,163,148,150,217,165,222,182,186,192,224,214,151,181,221,193,199,153,194,206,166,154,216,167,190,189,195,219,184,177,207,161,205,200,169,172,188,160,171,223,210,157,178,202,220,145,218,147,168,225,173,208,176,174,162,212,152,156,155,146,191,209,201,204,185,170,164,197,203,198,213,183,180,211,175]} 
 Player 2 19:04:48 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 19:04:48 $FLIP_CARD:  

 {"cardId":175} 
 Player 2 19:04:48 $ADD_STORE_CARD:  

 {"cardId":175} 
 Player 2 19:04:48 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 19:04:48 $FLIP_CARD:  

 {"cardId":211} 
 Player 2 19:04:48 $ADD_STORE_CARD:  

 {"cardId":211} 
 Player 2 19:04:48 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 19:04:49 $DECK_ADD_TO_BOTTOM:  

 {"deckType":2,"cardId":228} 
 Player 2 19:04:49 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 19:04:49 $FLIP_CARD:  

 {"cardId":274} 
 Player 2 19:04:49 $ADD_MONSTER:  

 {"monsterPlaceId":1,"monsterId":274} 
 Player 2 19:04:49 $NEW_MONSTER_ON_PLACE:  

 {"cardId":274,"monsterPlaceId":1} 
 Player 2 19:04:49 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 19:04:49 $FLIP_CARD:  

 {"cardId":239} 
 Player 2 19:04:49 $ADD_MONSTER:  

 {"monsterPlaceId":2,"monsterId":239} 
 Player 2 19:04:49 $NEW_MONSTER_ON_PLACE:  

 {"cardId":239,"monsterPlaceId":2} 
 Player 2 19:04:49 $SET_MONEY:  

 {"playerId":1,"numOfCoins":3} 
 Player 2 19:04:49 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 2 19:04:49 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 19:04:49 $MOVE_CARD:  

 {"moveIndex":1,"cardId":122,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 19:04:50 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":122} 
 Player 2 19:04:50 $FLIP_CARD:  

 {"cardId":122} 
 Player 2 19:04:50 $FLIP_CARD:  

 {"cardId":122} 
 Player 2 19:04:50 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":122} 
 Player 2 19:04:50 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 19:04:50 $MOVE_CARD:  

 {"moveIndex":2,"cardId":141,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 19:04:50 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":141} 
 Player 2 19:04:50 $FLIP_CARD:  

 {"cardId":141} 
 Player 2 19:04:50 $FLIP_CARD:  

 {"cardId":141} 
 Player 2 19:04:50 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":141} 
 Player 2 19:04:51 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 19:04:51 $MOVE_CARD:  

 {"moveIndex":3,"cardId":20,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 19:04:51 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":20} 
 Player 2 19:04:51 $FLIP_CARD:  

 {"cardId":20} 
 Player 2 19:04:51 $FLIP_CARD:  

 {"cardId":20} 
 Player 2 19:04:51 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":20} 
 Player 2 19:04:51 $SET_MONEY:  

 {"playerId":2,"numOfCoins":3} 
 Player 2 19:04:51 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Player 2 19:04:51 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 19:04:51 $MOVE_CARD:  

 {"moveIndex":4,"cardId":48,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 19:04:52 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":48} 
 Player 2 19:04:52 $FLIP_CARD:  

 {"cardId":48} 
 Player 2 19:04:52 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":48} 
 Player 2 19:04:52 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 19:04:52 $MOVE_CARD:  

 {"moveIndex":5,"cardId":142,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 19:04:52 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":142} 
 Player 2 19:04:52 $FLIP_CARD:  

 {"cardId":142} 
 Player 2 19:04:52 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":142} 
 Player 2 19:04:52 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 19:04:52 $MOVE_CARD:  

 {"moveIndex":6,"cardId":114,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 19:04:53 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":114} 
 Player 2 19:04:53 $FLIP_CARD:  

 {"cardId":114} 
 Player 2 19:04:53 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":114} 
 Player 2 19:04:53 $GAME_HAS_STARTED:  
 Player 2 19:04:53 $SET_TURN:  

 {"playerId":2} 
 Player 2 19:04:53 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:04:53 $NEXT_STACK_ID:  
 Player 2 19:04:53 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:04:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 19:04:53 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 
 Player 2 19:04:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 19:04:53 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":1,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 
 Player 2 19:04:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 
 Player 2 19:04:53 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:04:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 19:04:53 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 
 Player 2 19:04:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 
 Player 2 19:04:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 2 19:04:53 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:04:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 2 19:04:53 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:04:53 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:04:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 
 Player 2 19:04:53 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 19:04:53 $MOVE_CARD:  

 {"moveIndex":7,"cardId":94,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 19:04:54 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":94} 
 Player 2 19:04:54 $FLIP_CARD:  

 {"cardId":94} 
 Player 2 19:04:54 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":94} 
 Player 2 19:04:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 19:04:54 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 
 Player 2 19:04:54 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:04:54 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":1,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 
 Player 2 19:04:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 
 Player 2 19:04:54 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:04:54 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 
 Player 2 19:04:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 
 Player 2 19:04:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Player 2 19:04:54 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:04:54 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:04:54 $ACTION_MASSAGE_REMOVE:  

 {"id":7} 
 Player 2 19:04:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Player 2 19:04:55 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:04:55 $ACTION_MASSAGE_REMOVE:  

 {"id":8} 
 Player 2 19:04:55 $ACTION_MASSAGE_REMOVE:  

 {"id":6} 
 Player 2 19:04:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":9,"_text":"Stack Was Emptied "}} 
 Player 2 19:04:55 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:04:55 $UPDATE_ACTIONS:  
 Player 2 19:05:00 $MOVE_CARD:  

 {"moveIndex":8,"cardId":273,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 
 Player 2 19:05:00 $REGISTER_PASSIVE_ITEM:  

 {"cardId":273} 
 Player 2 19:05:00 $ADD_MONSTER:  

 {"monsterPlaceId":1,"monsterId":273} 
 Player 2 19:05:00 $NEW_MONSTER_ON_PLACE:  

 {"cardId":273,"monsterPlaceId":1} 
 Player 2 19:05:03 $SHOW_DECISION:  

 {"startCardId":286,"endCardId":273} 
 Player 2 19:05:06 $NEXT_STACK_ID:  
 Player 2 19:05:06 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:05:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on The Bloat"} 
 Player 2 19:05:06 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":286,"attackingPlayerCardId":286,"idOfCardBeingAttacked":273,"stackEffectType":4}} 
 Player 2 19:05:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on The Bloat"} 
 Player 2 19:05:06 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":2,"creatorCardId":286,"attackingPlayerCardId":286,"idOfCardBeingAttacked":273,"stackEffectType":4}} 
 Player 2 19:05:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":10,"_text":"Add DeclareAttack 2 "}} 
 Player 2 19:05:06 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:05:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on The Bloat"} 
 Player 2 19:05:06 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":286,"attackingPlayerCardId":286,"idOfCardBeingAttacked":273,"stackEffectType":4}} 
 Player 2 19:05:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":11,"_text":"Response Adding DeclareAttack 2"},"childOfId":10} 
 Player 2 19:05:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 
 Player 2 19:05:06 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:05:06 $ACTION_MASSAGE_REMOVE:  

 {"id":12} 
 Player 2 19:05:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 
 Player 2 19:05:06 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:05:06 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:05:06 $ACTION_MASSAGE_REMOVE:  

 {"id":13} 
 Player 2 19:05:06 $ACTION_MASSAGE_REMOVE:  

 {"id":11} 
 Player 2 19:05:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":14,"_text":"Resolve DeclareAttack 2 "}} 
 Player 2 19:05:06 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":273,"particleType":5} 
 Player 2 19:05:06 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":4,"originStackId":2},"isAfterActivation":true,"index":4} 
 Player 2 19:05:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on The Bloat"} 
 Player 2 19:05:07 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":286,"attackingPlayerCardId":286,"idOfCardBeingAttacked":273,"stackEffectType":4}} 
 Player 2 19:05:07 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:05:07 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":2,"creatorCardId":286,"attackingPlayerCardId":286,"idOfCardBeingAttacked":273,"stackEffectType":4}} 
 Player 2 19:05:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":15,"_text":"Remove After Resolve DeclareAttack 2  "}} 
 Player 2 19:05:07 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:05:07 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":286,"attackingPlayerCardId":286,"idOfCardBeingAttacked":273,"stackEffectType":4}} 
 Player 2 19:05:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":16,"_text":"Response Remove After Resolve DeclareAttack 2"},"childOfId":15} 
 Player 2 19:05:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 
 Player 2 19:05:07 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:05:07 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:05:07 $ACTION_MASSAGE_REMOVE:  

 {"id":17} 
 Player 2 19:05:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 
 Player 2 19:05:07 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:05:07 $ACTION_MASSAGE_REMOVE:  

 {"id":18} 
 Player 2 19:05:07 $ACTION_MASSAGE_REMOVE:  

 {"id":16} 
 Player 2 19:05:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":19,"_text":"Stack Was Emptied "}} 
 Player 2 19:05:07 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:05:08 $NEXT_STACK_ID:  
 Player 2 19:05:08 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:05:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against The Bloat<Monster>"} 
 Player 2 19:05:08 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":286,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":273}} 
 Player 2 19:05:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against The Bloat<Monster>"} 
 Player 2 19:05:08 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":286,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":273}} 
 Player 2 19:05:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":20,"_text":"Add AttackRoll 3 "}} 
 Player 2 19:05:08 $ROLL_DICE:  

 {"playerId":2} 
 Player 2 19:05:10 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":3} 
 Player 2 19:05:10 $UPDATE_STACK_VIS:  

 {"stackId":3,"text":"player rolled 3 vs The Bloat<Monster>"} 
 Player 2 19:05:10 $SHOW_DICE_ROLL:  

 {"stackId":3} 
 Player 2 19:05:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 3 vs The Bloat<Monster>"} 
 Player 2 19:05:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:05:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 3 vs The Bloat<Monster>"} 
 Player 2 19:05:13 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":286,"numberRolled":3,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":273}} 
 Player 2 19:05:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":21,"_text":"Response Adding AttackRoll 3"},"childOfId":20} 
 Player 2 19:05:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 
 Player 2 19:05:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:05:13 $ACTION_MASSAGE_REMOVE:  

 {"id":22} 
 Player 2 19:05:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 
 Player 2 19:05:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:05:13 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:05:13 $ACTION_MASSAGE_REMOVE:  

 {"id":23} 
 Player 2 19:05:13 $ACTION_MASSAGE_REMOVE:  

 {"id":21} 
 Player 2 19:05:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":24,"_text":"Resolve AttackRoll 3 "}} 
 Player 2 19:05:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":25,"_text":"Added 0 to original roll"}} 
 Player 2 19:05:14 $NEXT_STACK_ID:  
 Player 2 19:05:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 3 vs The Bloat<Monster>"} 
 Player 2 19:05:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:05:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Cain \n2:Player 2 rolled 3 vs The Bloat<Monster>"} 
 Player 2 19:05:14 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":4,"creatorCardId":286,"entityToDoDamageCardId":273,"entityToTakeDamageCardId":286,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 19:05:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Cain \n2:Player 2 rolled 3 vs The Bloat<Monster>"} 
 Player 2 19:05:14 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":286,"numberRolled":3,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":273}} 
 Player 2 19:05:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Cain \n2:Player 2 rolled 3 vs The Bloat<Monster>"} 
 Player 2 19:05:14 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":4,"creatorCardId":286,"entityToDoDamageCardId":273,"entityToTakeDamageCardId":286,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 19:05:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Cain \n2:Player 2 rolled 3 vs The Bloat<Monster>"} 
 Player 2 19:05:14 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":286,"numberRolled":3,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":273}} 
 Player 2 19:05:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Cain \n2:Player 2 rolled 3 vs The Bloat<Monster>"} 
 Player 2 19:05:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Cain \n2:Player 2 rolled 3 vs The Bloat<Monster>"} 
 Player 2 19:05:14 $REPLACE_STACK:  

 {"currentStack":[{"entityId":4,"creatorCardId":286,"entityToDoDamageCardId":273,"entityToTakeDamageCardId":286,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":3,"creatorCardId":286,"numberRolled":3,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":273}]} 
 Player 2 19:05:14 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":5,"originStackId":3},"isAfterActivation":true,"index":5} 
 Player 2 19:05:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Cain \n2:Player 2 rolled 3 vs The Bloat<Monster>"} 
 Player 2 19:05:14 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":286,"numberRolled":3,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":273}} 
 Player 2 19:05:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Cain"} 
 Player 2 19:05:14 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":286,"numberRolled":3,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":273}} 
 Player 2 19:05:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":26,"_text":"Remove After Resolve AttackRoll 3  "}} 
 Player 2 19:05:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Cain"} 
 Player 2 19:05:14 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":286,"numberRolled":3,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":273}} 
 Player 2 19:05:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":27,"_text":"Response Remove After Resolve AttackRoll 3"},"childOfId":26} 
 Player 2 19:05:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":26} 
 Player 2 19:05:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:05:14 $ACTION_MASSAGE_REMOVE:  

 {"id":28} 
 Player 2 19:05:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":29,"_text":"Wait For Response From Player 1 "},"childOfId":26} 
 Player 2 19:05:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:05:14 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:05:15 $ACTION_MASSAGE_REMOVE:  

 {"id":29} 
 Player 2 19:05:15 $ACTION_MASSAGE_REMOVE:  

 {"id":27} 
 Player 2 19:05:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":30,"_text":"Resolve CombatDamage 4 "}} 
 Player 2 19:05:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat 2 combat damage to Cain"} 
 Player 2 19:05:15 $UPDATE_STACK_VIS:  

 {"stackId":4,"text":"The Bloat will deal 2 combat damage to Cain"} 
 Player 2 19:05:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat 2 combat damage to Cain"} 
 Player 2 19:05:15 $PLAYER_GET_HIT:  

 {"playerId":2,"damage":2,"damageDealerId":273} 
 Player 2 19:05:15 $NEXT_STACK_ID:  
 Player 2 19:05:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat 2 combat damage to Cain"} 
 Player 2 19:05:15 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:05:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat 2 combat damage to Cain \n2:Player 2 is about to die"} 
 Player 2 19:05:15 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":5,"creatorCardId":286,"playerToDieCardId":286,"stackEffectType":15,"killerId":273}} 
 Player 2 19:05:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat 2 combat damage to Cain \n2:Player 2 is about to die"} 
 Player 2 19:05:15 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":4,"creatorCardId":286,"entityToDoDamageCardId":273,"entityToTakeDamageCardId":286,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 19:05:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat 2 combat damage to Cain \n2:Player 2 is about to die"} 
 Player 2 19:05:15 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":4,"creatorCardId":286,"entityToDoDamageCardId":273,"entityToTakeDamageCardId":286,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 19:05:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat 2 combat damage to Cain \n2:Player 2 is about to die"} 
 Player 2 19:05:15 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":5,"creatorCardId":286,"playerToDieCardId":286,"stackEffectType":15,"killerId":273}} 
 Player 2 19:05:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat 2 combat damage to Cain \n2:Player 2 is about to die"} 
 Player 2 19:05:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat 2 combat damage to Cain \n2:Player 2 is about to die"} 
 Player 2 19:05:15 $REPLACE_STACK:  

 {"currentStack":[{"entityId":4,"creatorCardId":286,"entityToDoDamageCardId":273,"entityToTakeDamageCardId":286,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":5,"creatorCardId":286,"playerToDieCardId":286,"stackEffectType":15,"killerId":273}]} 
 Player 2 19:05:15 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":273}],"result":null,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 
 Player 2 19:05:15 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_TAKEN","args":[{"type":2,"number":2},{"type":2,"number":1},{"type":0,"number":273}],"result":null,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":7,"originStackId":4},"isAfterActivation":true,"index":7} 
 Player 2 19:05:15 $NEXT_STACK_ID:  
 Player 2 19:05:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat 2 combat damage to Cain \n2:Player 2 is about to die"} 
 Player 2 19:05:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat 2 combat damage to Cain \n2:Player 2 is about to die \n3:Activate The Bloat effect DealDamage<DealDamage>"} 
 Player 2 19:05:15 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":6,"creatorCardId":273,"hasLockingStackEffect":false,"cardActivatorId":273,"cardWithEffectId":273,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":273,"cardId":273,"effctType":0},"isAfterActivation":true,"index":7,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 19:05:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat 2 combat damage to Cain \n2:Player 2 is about to die \n3:Activate The Bloat effect DealDamage<DealDamage>"} 
 Player 2 19:05:16 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":6,"creatorCardId":273,"hasLockingStackEffect":false,"cardActivatorId":273,"cardWithEffectId":273,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":273,"cardId":273,"effctType":0},"isAfterActivation":true,"index":7,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 19:05:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":31,"_text":"Add ActivatePassiveEffect 6 "}} 
 Player 2 19:05:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat 2 combat damage to Cain \n2:Player 2 is about to die \n3:Activate The Bloat effect DealDamage<DealDamage>"} 
 Player 2 19:05:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat 2 combat damage to Cain \n2:Player 2 is about to die \n3:Activate The Bloat effect DealDamage<DealDamage>"} 
 Player 2 19:05:16 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[292,286],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":273,"effectCardPlayer":273},"entityId":6,"creatorCardId":273,"hasLockingStackEffect":false,"cardActivatorId":273,"cardWithEffectId":273,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":273,"cardId":273,"effctType":0},"isAfterActivation":true,"index":7,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 19:05:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":32,"_text":"Response Adding ActivatePassiveEffect 6"},"childOfId":31} 
 Player 2 19:05:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":33,"_text":"Wait For Response From Player 2 "},"childOfId":31} 
 Player 2 19:05:16 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:05:16 $ACTION_MASSAGE_REMOVE:  

 {"id":33} 
 Player 2 19:05:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":34,"_text":"Wait For Response From Player 1 "},"childOfId":31} 
 Player 2 19:05:16 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:05:16 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:05:16 $ACTION_MASSAGE_REMOVE:  

 {"id":34} 
 Player 2 19:05:16 $ACTION_MASSAGE_REMOVE:  

 {"id":32} 
 Player 2 19:05:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":35,"_text":"Resolve ActivatePassiveEffect 6 "}} 
 Player 2 19:05:16 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":273,"particleType":6} 
 Player 2 19:05:18 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":273,"particleType":6} 
 Player 2 19:05:18 $PLAYER_GET_HIT:  

 {"playerId":1,"damage":1,"damageDealerId":273} 
 Player 2 19:05:18 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":273}],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":8,"originStackId":-1},"isAfterActivation":true,"index":8} 
 Player 2 19:05:18 $PLAYER_GET_HIT:  

 {"playerId":2,"damage":1,"damageDealerId":273} 
 Player 2 19:05:18 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":273}],"result":null,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":9,"originStackId":-1},"isAfterActivation":true,"index":9} 
 Player 2 19:05:19 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_TAKEN","args":[{"type":2,"number":2},{"type":2,"number":1},{"type":0,"number":273}],"result":null,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":7,"originStackId":4},"isAfterActivation":true,"index":7} 
 Player 2 19:05:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat 2 combat damage to Cain \n2:Player 2 is about to die \n3:Activate The Bloat effect DealDamage<DealDamage>"} 
 Player 2 19:05:19 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[292,286],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":273,"effectCardPlayer":273},"entityId":6,"creatorCardId":273,"hasLockingStackEffect":false,"cardActivatorId":273,"cardWithEffectId":273,"isAfterActivation":true,"index":7,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 19:05:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat 2 combat damage to Cain \n2:Player 2 is about to die"} 
 Player 2 19:05:19 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[292,286],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":273,"effectCardPlayer":273},"entityId":6,"creatorCardId":273,"hasLockingStackEffect":false,"cardActivatorId":273,"cardWithEffectId":273,"isAfterActivation":true,"index":7,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 19:05:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":36,"_text":"Remove After Resolve ActivatePassiveEffect 6  "}} 
 Player 2 19:05:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat 2 combat damage to Cain \n2:Player 2 is about to die"} 
 Player 2 19:05:19 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[292,286],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":273,"effectCardPlayer":273},"entityId":6,"creatorCardId":273,"hasLockingStackEffect":false,"cardActivatorId":273,"cardWithEffectId":273,"isAfterActivation":true,"index":7,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 19:05:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":37,"_text":"Response Remove After Resolve ActivatePassiveEffect 6"},"childOfId":36} 
 Player 2 19:05:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":38,"_text":"Wait For Response From Player 1 "},"childOfId":36} 
 Player 2 19:05:19 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:05:19 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:05:19 $ACTION_MASSAGE_REMOVE:  

 {"id":38} 
 Player 2 19:05:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":39,"_text":"Wait For Response From Player 2 "},"childOfId":36} 
 Player 2 19:05:19 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:05:19 $ACTION_MASSAGE_REMOVE:  

 {"id":39} 
 Player 2 19:05:19 $ACTION_MASSAGE_REMOVE:  

 {"id":37} 
 Player 2 19:05:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":40,"_text":"Resolve PlayerDeath 5 "}} 
 Player 2 19:05:19 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":273,"particleType":5} 
 Player 2 19:05:19 $CANCEL_ATTACK:  
 Player 2 19:05:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 19:05:19 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":4,"creatorCardId":286,"entityToDoDamageCardId":273,"entityToTakeDamageCardId":286,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 19:05:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":41,"_text":"Fizzle CombatDamage 4"}} 
 Player 2 19:05:20 $FIZZLE_STACK_EFFECT:  

 {"entityId":4} 
 Player 2 19:05:20 $NEXT_STACK_ID:  
 Player 2 19:05:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 19:05:20 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:05:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 2 19:05:20 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":7,"creatorCardId":286,"playerToPayCardId":286,"stackEffectType":16}} 
 Player 2 19:05:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 2 19:05:20 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":5,"creatorCardId":286,"playerToDieCardId":286,"stackEffectType":15,"killerId":273}} 
 Player 2 19:05:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 2 19:05:20 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":5,"creatorCardId":286,"playerToDieCardId":286,"stackEffectType":15,"killerId":273}} 
 Player 2 19:05:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 2 19:05:20 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":286,"playerToPayCardId":286,"stackEffectType":16}} 
 Player 2 19:05:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 2 19:05:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 2 19:05:20 $REPLACE_STACK:  

 {"currentStack":[{"entityId":5,"creatorCardId":286,"playerToDieCardId":286,"stackEffectType":15,"killerId":273},{"entityId":7,"creatorCardId":286,"playerToPayCardId":286,"stackEffectType":16}]} 
 Player 2 19:05:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 2 19:05:20 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":5,"creatorCardId":286,"playerToDieCardId":286,"stackEffectType":15,"killerId":273}} 
 Player 2 19:05:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 2 19:05:20 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":5,"creatorCardId":286,"playerToDieCardId":286,"stackEffectType":15,"killerId":273}} 
 Player 2 19:05:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":42,"_text":"Remove After Resolve PlayerDeath 5  "}} 
 Player 2 19:05:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 2 19:05:20 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":5,"creatorCardId":286,"playerToDieCardId":286,"stackEffectType":15,"killerId":273}} 
 Player 2 19:05:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":43,"_text":"Response Remove After Resolve PlayerDeath 5"},"childOfId":42} 
 Player 2 19:05:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":44,"_text":"Wait For Response From Player 2 "},"childOfId":42} 
 Player 2 19:05:20 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:05:20 $ACTION_MASSAGE_REMOVE:  

 {"id":44} 
 Player 2 19:05:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":45,"_text":"Wait For Response From Player 1 "},"childOfId":42} 
 Player 2 19:05:20 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:05:20 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:05:21 $ACTION_MASSAGE_REMOVE:  

 {"id":45} 
 Player 2 19:05:21 $ACTION_MASSAGE_REMOVE:  

 {"id":43} 
 Player 2 19:05:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":46,"_text":"Resolve PlayerDeathPenalties 7 "}} 
 Player 2 19:05:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":47,"_text":"Player 2 pays Penalties"}} 
 Player 2 19:05:21 $SET_MONEY:  

 {"playerId":2,"numOfCoins":2} 
 Player 2 19:05:21 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-1}],"result":null,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":10,"originStackId":-1},"isAfterActivation":true,"index":10} 
 Player 2 19:05:28 $PLAYER_LOSE_LOOT:  

 {"playerId":2,"cardId":48} 
 Player 2 19:05:28 $MOVE_CARD:  

 {"moveIndex":9,"cardId":48,"placeID":301,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 19:05:28 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":48} 
 Player 2 19:05:28 $USE_ITEM:  

 {"cardId":286} 
 Player 2 19:05:28 $USE_ITEM:  

 {"cardId":289} 
 Player 2 19:05:28 $PLAYER_DIED:  

 {"playerId":2} 
 Player 2 19:05:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 2 19:05:28 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":7,"creatorCardId":286,"playerToPayCardId":286,"stackEffectType":16}} 
 Player 2 19:05:28 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:05:28 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":286,"playerToPayCardId":286,"stackEffectType":16}} 
 Player 2 19:05:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":48,"_text":"Remove After Resolve PlayerDeathPenalties 7  "}} 
 Player 2 19:05:28 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:05:28 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":7,"creatorCardId":286,"playerToPayCardId":286,"stackEffectType":16}} 
 Player 2 19:05:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":49,"_text":"Response Remove After Resolve PlayerDeathPenalties 7"},"childOfId":48} 
 Player 2 19:05:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":50,"_text":"Wait For Response From Player 1 "},"childOfId":48} 
 Player 2 19:05:28 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 19:05:28 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 19:05:29 $ACTION_MASSAGE_REMOVE:  

 {"id":50} 
 Player 2 19:05:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":51,"_text":"Wait For Response From Player 2 "},"childOfId":48} 
 Player 2 19:05:29 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:05:29 $ACTION_MASSAGE_REMOVE:  

 {"id":51} 
 Player 2 19:05:29 $ACTION_MASSAGE_REMOVE:  

 {"id":49} 
 Player 2 19:05:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":52,"_text":"Stack Was Emptied "}} 
 Player 2 19:05:29 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:05:29 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 19:05:29 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:05:29 $REPLACE_STACK:  

 {"currentStack":[]} 
 Player 2 19:05:29 $END_TURN:  
 Player 2 19:05:29 $SET_TURN:  

 {"playerId":1} 
 Player 2 19:05:29 $START_TURN:  

 {"playerId":1} 
 Player 2 19:05:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":53,"_text":"Stack Was Emptied "}} 
 Player 2 19:05:29 $STACK_EMPTIED:  

 {"playerId":1} 
 Player 2 19:05:29 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:05:29 $TURN_PLAYER_DO_STACK_EFFECT:  

 {"playerId":1} 
 Player 2 19:05:30 $STACK_EMPTIED:  

 {"playerId":1} 
 Player 2 19:05:30 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:05:30 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:05:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 19:05:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 19:05:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 19:05:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 19:05:30 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:05:30 $MOVE_CARD_END:  

 {"moveIndex":10,"cardId":62,"flipIfFlipped":false,"playerId":1} 
 Player 2 19:05:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 19:05:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 19:05:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 19:05:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 19:05:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 19:05:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 19:05:31 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:05:43 $MOVE_CARD_END:  

 {"moveIndex":11,"cardId":106,"flipIfFlipped":true,"playerId":1} 
 Player 2 19:05:48 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:05:48 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:05:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Guppys Hairball "} 
 Player 2 19:05:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Guppys Hairball "} 
 Player 2 19:05:48 $MOVE_CARD_END:  

 {"moveIndex":12,"cardId":106,"flipIfFlipped":true,"playerId":1} 
 Player 2 19:05:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Guppys Hairball "} 
 Player 2 19:05:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Guppys Hairball "} 
 Player 2 19:05:49 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:05:51 $MOVE_CARD_END:  

 {"moveIndex":13,"cardId":106,"flipIfFlipped":true,"playerId":1} 
 Player 2 19:05:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Guppys Hairball "} 
 Player 2 19:05:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Guppys Hairball "} 
 Player 2 19:05:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Guppys Hairball "} 
 Player 2 19:05:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Guppys Hairball "} 
 Player 2 19:05:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Guppys Hairball "} 
 Player 2 19:05:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Guppys Hairball "} 
 Player 2 19:05:52 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:06:02 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:06:02 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:06:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on The Bloat"} 
 Player 2 19:06:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on The Bloat"} 
 Player 2 19:06:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on The Bloat"} 
 Player 2 19:06:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on The Bloat"} 
 Player 2 19:06:02 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:06:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on The Bloat"} 
 Player 2 19:06:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on The Bloat"} 
 Player 2 19:06:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on The Bloat"} 
 Player 2 19:06:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on The Bloat"} 
 Player 2 19:06:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on The Bloat"} 
 Player 2 19:06:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on The Bloat"} 
 Player 2 19:06:03 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:06:04 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:06:04 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 19:06:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against The Bloat<Monster>"} 
 Player 2 19:06:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against The Bloat<Monster>"} 
 Player 2 19:06:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against The Bloat<Monster>"} 
 Player 2 19:06:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against The Bloat<Monster>"} 
 Player 2 19:06:09 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:06:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against The Bloat<Monster>"} 
 Player 2 19:06:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against The Bloat<Monster>"} 
 Player 2 19:06:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith"} 
 Player 2 19:06:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith"} 
 Player 2 19:06:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith"} 
 Player 2 19:06:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith"} 
 Player 2 19:06:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith"} 
 Player 2 19:06:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith"} 
 Player 2 19:06:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith"} 
 Player 2 19:06:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith"} 
 Player 2 19:06:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith"} 
 Player 2 19:06:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith"} 
 Player 2 19:06:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith \n2:Player 1 is rolling against The Bloat<Monster>"} 
 Player 2 19:06:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith \n2:Player 1 is rolling against The Bloat<Monster>"} 
 Player 2 19:06:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith \n2:Player 1 is rolling against The Bloat<Monster>"} 
 Player 2 19:06:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith \n2:Player 1 is rolling against The Bloat<Monster>"} 
 Player 2 19:06:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith \n2:Player 1 is rolling against The Bloat<Monster>"} 
 Player 2 19:06:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith \n2:Player 1 is rolling against The Bloat<Monster>"} 
 Player 2 19:06:11 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:06:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith"} 
 Player 2 19:06:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith"} 
 Player 2 19:06:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith \n2:Activate Guppys Hairball "} 
 Player 2 19:06:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith \n2:Activate Guppys Hairball "} 
 Player 2 19:06:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith \n2:Activate Guppys Hairball "} 
 Player 2 19:06:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith \n2:Activate Guppys Hairball "} 
 Player 2 19:06:12 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:06:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith \n2:Activate Guppys Hairball "} 
 Player 2 19:06:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith \n2:Activate Guppys Hairball "} 
 Player 2 19:06:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith \n2:Activate Guppys Hairball "} 
 Player 2 19:06:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith \n2:Activate Guppys Hairball "} 
 Player 2 19:06:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith \n2:Activate Guppys Hairball  \n3:Player 1 roll a dice"} 
 Player 2 19:06:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith \n2:Activate Guppys Hairball  \n3:Player 1 roll a dice"} 
 Player 2 19:06:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith \n2:Activate Guppys Hairball  \n3:Player 1 roll a dice"} 
 Player 2 19:06:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith \n2:Activate Guppys Hairball  \n3:Player 1 roll a dice"} 
 Player 2 19:06:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith \n2:Activate Guppys Hairball  \n3:Player 1 roll a dice"} 
 Player 2 19:06:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith \n2:Activate Guppys Hairball  \n3:Player 1 roll a dice"} 
 Player 2 19:06:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith \n2:Activate Guppys Hairball  \n3:Player 1 roll a dice"} 
 Player 2 19:06:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith \n2:Activate Guppys Hairball  \n3:Player 1 roll a dice"} 
 Player 2 19:06:18 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:06:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith \n2:Activate Guppys Hairball  \n3:Player 1 roll a dice"} 
 Player 2 19:06:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith \n2:Activate Guppys Hairball  \n3:Player 1 roll a dice"} 
 Player 2 19:06:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith \n2:Activate Guppys Hairball  \n3:Player 1 roll a dice"} 
 Player 2 19:06:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith \n2:Activate Guppys Hairball  \n3:Player 1 roll a dice"} 
 Player 2 19:06:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith \n2:Activate Guppys Hairball  \n3:Player 1 roll a dice"} 
 Player 2 19:06:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith \n2:Activate Guppys Hairball  \n3:Player 1 roll a dice"} 
 Player 2 19:06:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith \n2:Activate Guppys Hairball  \n3:Player 1 roll a dice"} 
 Player 2 19:06:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith \n2:Activate Guppys Hairball  \n3:Player 1 roll a dice"} 
 Player 2 19:06:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith \n2:Activate Guppys Hairball  \n3:Player 1 roll a dice"} 
 Player 2 19:06:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith \n2:Activate Guppys Hairball  \n3:Player 1 roll a dice"} 
 Player 2 19:06:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith \n2:Activate Guppys Hairball  \n3:Player 1 roll a dice"} 
 Player 2 19:06:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith \n2:Activate Guppys Hairball  \n3:Player 1 roll a dice"} 
 Player 2 19:06:18 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:06:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith \n2:Activate Guppys Hairball "} 
 Player 2 19:06:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith \n2:Activate Guppys Hairball "} 
 Player 2 19:06:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith \n2:Activate Guppys Hairball "} 
 Player 2 19:06:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith \n2:Activate Guppys Hairball "} 
 Player 2 19:06:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith \n2:Activate Guppys Hairball "} 
 Player 2 19:06:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith \n2:Activate Guppys Hairball "} 
 Player 2 19:06:21 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:06:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith"} 
 Player 2 19:06:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith"} 
 Player 2 19:06:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith"} 
 Player 2 19:06:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith"} 
 Player 2 19:06:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith"} 
 Player 2 19:06:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith"} 
 Player 2 19:06:22 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 19:11:50 $MATCH: 