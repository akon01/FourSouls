{"version":3,"sources":["decorators/Around.ts"],"names":[],"mappings":";;AACA,mCAAmE;AACnE,qCAAwC;AAsBxC;;;;GAIG;AACU,QAAA,MAAM,GACf,8BAAqB,CACjB,QAAQ,EACR,IAAI,EACJ,UAAA,IAAI;IACA,IAAI,CAAC,IAAI,CAAiB;QACtB,KAAK,EAAE,UAAC,GAAG,IAAK,OAAA,eAAQ,CAAC,GAAG,CAAC,EAAb,CAAa;QAC7B,WAAW,EAAE,UAAC,QAAQ,EAAE,GAAG;YACvB,QAAQ,CAAC,IAAI,GAAG,GAAG,CAAC;QACxB,CAAC;KACJ,CAAC,CAAC;IAEH,IAAI,CAAC,IAAI,CAAiB;QACtB,KAAK,EAAE,UAAC,GAAG,IAAK,OAAA,eAAQ,CAAC,GAAG,CAAC,EAAb,CAAa;QAC7B,WAAW,EAAE,UAAC,QAAQ,EAAE,GAAG;YACvB,QAAQ,CAAC,SAAS,GAAG,GAAG,CAAC;QAC7B,CAAC;KACJ,CAAC,CAAC;IAEH,IAAI,CAAC,IAAI,CAAiB;QACtB,KAAK,EAAE,UAAC,GAAG,IAAK,OAAA,eAAQ,CAAC,GAAG,CAAC,EAAb,CAAa;QAC7B,WAAW,EAAE,UAAC,QAAQ,EAAE,GAAG;YACvB,QAAQ,CAAC,QAAQ,GAAG,GAAG,CAAC;QAC5B,CAAC;KACJ,CAAC,CAAC;AACP,CAAC,CAAqC,CAAC","file":"../../decorators/Around.js","sourcesContent":["import { AroundMetadata } from '../metadatas';\r\nimport { IAdviceDecorator, createAdviceDecorator } from './Advice';\r\nimport { isString } from '@ts-ioc/core';\r\n\r\n/**\r\n * aop around decorator.\r\n *\r\n * @export\r\n * @interface IAroundDecorator\r\n * @extends {IAdviceDecorator<T>}\r\n * @template T\r\n */\r\nexport interface IAroundDecorator<T extends AroundMetadata> extends IAdviceDecorator<T> {\r\n    /**\r\n     * define aop around advice.\r\n     *\r\n     * @param {(string | RegExp)} [pointcut] define advice match express for pointcut.\r\n     * @param {string} [returning] set name provider of pointcut returing data for advices.\r\n     * @param {string} [throwing] set name provider of pointcut throwing error for advices.\r\n     * @param {string} [annotation] annotation name, special annotation metadata for annotation advices.\r\n     */\r\n    (pointcut?: string | RegExp, args?: string, returning?: string, throwing?: string, annotation?: string): MethodDecorator\r\n}\r\n\r\n/**\r\n * aop Around advice decorator.\r\n *\r\n * @Around\r\n */\r\nexport const Around: IAroundDecorator<AroundMetadata> =\r\n    createAdviceDecorator<AroundMetadata>(\r\n        'Around',\r\n        null,\r\n        args => {\r\n            args.next<AroundMetadata>({\r\n                match: (arg) => isString(arg),\r\n                setMetadata: (metadata, arg) => {\r\n                    metadata.args = arg;\r\n                }\r\n            });\r\n\r\n            args.next<AroundMetadata>({\r\n                match: (arg) => isString(arg),\r\n                setMetadata: (metadata, arg) => {\r\n                    metadata.returning = arg;\r\n                }\r\n            });\r\n\r\n            args.next<AroundMetadata>({\r\n                match: (arg) => isString(arg),\r\n                setMetadata: (metadata, arg) => {\r\n                    metadata.throwing = arg;\r\n                }\r\n            });\r\n        }) as IAroundDecorator<AroundMetadata>;\r\n"]}