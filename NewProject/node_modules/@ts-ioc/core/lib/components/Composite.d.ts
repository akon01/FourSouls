import { Mode, Express } from '../types';
import { IComponent } from './IComponent';
import { GComposite } from './GComposite';
/**
 * compoiste.
 *
 * @export
 * @class Composite
 * @implements {IComponent}
 */
export declare class Composite extends GComposite<IComponent> implements IComponent {
    constructor(name: string);
    find<T extends IComponent>(express: T | Express<T, boolean>, mode?: Mode): T;
    filter<T extends IComponent>(express: Express<T, boolean | void>, mode?: Mode): T[];
    each<T extends IComponent>(express: Express<T, boolean | void>, mode?: Mode): any;
    eachChildren<T extends IComponent>(express: Express<T, void | boolean>): void;
    static getClassAnnations(): any;
}
