Start Log 
 Player 1 13:44:34 $START_GAME:  
 Player 1 13:44:34 $MOVE_TO_TABLE:  
 Player 1 13:44:42 $FINISH_LOAD:  

 {"id":1,"turnPlayerId":2} 
 Player 1 13:44:43 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":260}],"result":true,"preventMethod":false,"methodScopeId":259,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 1 13:44:43 $MOVE_CARD_END:  

 {"moveIndex":1,"cardId":107,"flipIfFlipped":false,"playerId":2} 
 Player 1 13:44:44 $MOVE_CARD_END:  

 {"moveIndex":2,"cardId":38,"flipIfFlipped":false,"playerId":2} 
 Player 1 13:44:44 $MOVE_CARD_END:  

 {"moveIndex":3,"cardId":10,"flipIfFlipped":false,"playerId":2} 
 Player 1 13:44:45 $MOVE_CARD_END:  

 {"moveIndex":4,"cardId":28,"flipIfFlipped":false,"playerId":2} 
 Player 1 13:44:45 $MOVE_CARD_END:  

 {"moveIndex":5,"cardId":115,"flipIfFlipped":false,"playerId":2} 
 Player 1 13:44:46 $MOVE_CARD_END:  

 {"moveIndex":6,"cardId":37,"flipIfFlipped":false,"playerId":2} 
 Player 1 13:44:47 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 13:44:47 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 13:44:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 13:44:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 13:44:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 13:44:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 13:44:47 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 13:44:47 $MOVE_CARD_END:  

 {"moveIndex":7,"cardId":42,"flipIfFlipped":false,"playerId":2} 
 Player 1 13:44:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 13:44:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 13:44:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 13:44:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 13:44:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 13:44:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 13:44:48 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 13:44:53 $MOVE_CARD:  

 {"moveIndex":8,"cardId":184,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Hand"} 
 Player 1 13:44:53 $REGISTER_PASSIVE_ITEM:  

 {"cardId":184} 
 Player 1 13:44:53 $MOVE_CARD:  

 {"moveIndex":9,"cardId":184,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 
 Player 1 13:44:54 $ADD_AN_ITEM:  

 {"playerId":1,"cardId":184,"isReward":true} 
 Player 1 13:44:54 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":184}],"result":true,"preventMethod":false,"methodScopeId":259,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 1 13:44:54 $NEXT_STACK_ID:  
 Player 1 13:44:54 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 13:44:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 
 Player 1 13:44:54 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":2,"creatorCardId":259,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"effectToDo":{"effectName":"AddPlayLootOpportunity","cardEffectNum":0,"cardPlayerId":1,"cardId":184,"effctType":0},"isAfterActivation":true,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 13:44:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 
 Player 1 13:44:54 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":2,"creatorCardId":259,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"effectToDo":{"effectName":"AddPlayLootOpportunity","cardEffectNum":0,"cardPlayerId":1,"cardId":184,"effctType":0},"isAfterActivation":true,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 13:44:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":10,"_text":"Add ActivatePassiveEffect 2 "}} 
 Player 1 13:44:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 
 Player 1 13:44:54 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 1 13:44:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 
 Player 1 13:44:54 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":2,"creatorCardId":259,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"effectToDo":{"effectName":"AddPlayLootOpportunity","cardEffectNum":0,"cardPlayerId":1,"cardId":184,"effctType":0},"isAfterActivation":true,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 13:44:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":11,"_text":"Response Adding ActivatePassiveEffect 2"},"childOfId":10} 
 Player 1 13:44:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 
 Player 1 13:44:54 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 13:44:54 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 13:44:54 $ACTION_MASSAGE_REMOVE:  

 {"id":12} 
 Player 1 13:44:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 
 Player 1 13:44:54 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 13:44:54 $ACTION_MASSAGE_REMOVE:  

 {"id":13} 
 Player 1 13:44:54 $ACTION_MASSAGE_REMOVE:  

 {"id":11} 
 Player 1 13:44:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":14,"_text":"Resolve ActivatePassiveEffect 2 "}} 
 Player 1 13:44:54 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":184,"particleType":6} 
 Player 1 13:44:56 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":184,"particleType":6} 
 Player 1 13:44:56 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":184}],"result":true,"preventMethod":false,"methodScopeId":259,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 1 13:44:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 
 Player 1 13:44:56 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":2,"creatorCardId":259,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"isAfterActivation":true,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 13:44:56 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 1 13:44:56 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 13:44:56 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":2,"creatorCardId":259,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"isAfterActivation":true,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 13:44:56 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":15,"_text":"Remove After Resolve ActivatePassiveEffect 2  "}} 
 Player 1 13:44:57 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 13:44:57 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":2,"creatorCardId":259,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"isAfterActivation":true,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 13:44:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":16,"_text":"Response Remove After Resolve ActivatePassiveEffect 2"},"childOfId":15} 
 Player 1 13:44:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 
 Player 1 13:44:57 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 13:44:57 $ACTION_MASSAGE_REMOVE:  

 {"id":17} 
 Player 1 13:44:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 
 Player 1 13:44:57 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 13:44:57 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 13:44:57 $ACTION_MASSAGE_REMOVE:  

 {"id":18} 
 Player 1 13:44:57 $ACTION_MASSAGE_REMOVE:  

 {"id":16} 
 Player 1 13:44:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":19,"_text":"Stack Was Emptied "}} 
 Player 1 13:44:57 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 13:44:57 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 1 13:44:57 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 1 13:44:57 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 1 13:44:57 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 1 13:44:57 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 1 13:44:57 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 1 13:44:57 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 1 13:44:57 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 1 13:44:57 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 1 13:44:57 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 1 13:44:57 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 1 13:44:57 $TURN_PLAYER_DO_STACK_EFFECT:  

 {"playerId":2} 
 Player 1 13:44:58 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 1 13:44:59 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 1 13:45:04 $MOVE_CARD_END:  

 {"moveIndex":10,"cardId":131,"flipIfFlipped":true,"playerId":2} 
 Player 1 13:45:10 $MOVE_CARD_END:  

 {"moveIndex":11,"cardId":194,"flipIfFlipped":true,"playerId":2} 
 Player 1 13:45:10 $MOVE_CARD_END:  

 {"moveIndex":12,"cardId":194,"flipIfFlipped":true,"playerId":2} 
 Player 1 13:45:10 $MOVE_CARD_END:  

 {"moveIndex":13,"cardId":194,"flipIfFlipped":true,"playerId":2} 
 Player 1 13:45:37 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 13:45:37 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 13:45:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil "} 
 Player 1 13:45:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil "} 
 Player 1 13:45:37 $MOVE_CARD_END:  

 {"moveIndex":14,"cardId":131,"flipIfFlipped":true,"playerId":2} 
 Player 1 13:45:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil "} 
 Player 1 13:45:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil "} 
 Player 1 13:45:43 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 13:45:46 $MOVE_CARD_END:  

 {"moveIndex":15,"cardId":194,"flipIfFlipped":true,"playerId":2} 
 Player 1 13:45:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil "} 
 Player 1 13:45:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil "} 
 Player 1 13:45:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 13:45:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 13:45:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 13:45:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 13:45:46 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 13:45:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 13:45:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 13:45:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 13:45:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 13:45:47 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":184,"particleType":6} 
 Player 1 13:45:49 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":184,"particleType":6} 
 Player 1 13:45:49 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_LOSE_ITEM","args":[{"type":0,"number":184}],"result":null,"preventMethod":false,"methodScopeId":259,"scopeIsPlayer":true,"index":1},"isAfterActivation":false,"index":1} 
 Player 1 13:45:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 13:45:49 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":259,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 13:45:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 13:45:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 13:45:49 $FINISH_DO_STACK_EFFECT:  

 {"playerId":2,"newStack":[{"entityId":3,"creatorCardId":275,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":2,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":131,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"effectCollectedData":null,"entityId":4,"creatorCardId":259,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}]} 
 Player 1 13:45:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 13:45:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 13:45:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 13:45:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 13:45:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 13:45:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 13:45:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 13:45:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 13:45:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 13:45:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 13:45:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 13:45:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 13:45:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 13:45:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 13:45:50 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 13:45:51 $MOVE_CARD_END:  

 {"moveIndex":16,"cardId":184,"flipIfFlipped":true,"playerId":2} 
 Player 1 13:45:51 $MOVE_CARD_END:  

 {"moveIndex":17,"cardId":131,"flipIfFlipped":true,"playerId":2} 
 Player 1 13:45:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil "} 
 Player 1 13:45:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil "} 
 Player 1 13:45:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil "} 
 Player 1 13:45:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil "} 
 Player 1 13:45:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil "} 
 Player 1 13:45:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil "} 
 Player 1 13:45:51 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 13:50:45 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 13:50:45 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 13:50:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Conjoined Fatty"} 
 Player 1 13:50:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Conjoined Fatty"} 
 Player 1 13:50:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Conjoined Fatty"} 
 Player 1 13:50:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Conjoined Fatty"} 
 Player 1 13:50:45 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 13:50:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Conjoined Fatty"} 
 Player 1 13:50:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Conjoined Fatty"} 
 Player 1 13:50:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Conjoined Fatty"} 
 Player 1 13:50:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Conjoined Fatty"} 
 Player 1 13:50:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Conjoined Fatty"} 
 Player 1 13:50:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Conjoined Fatty"} 
 Player 1 13:50:46 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 13:50:49 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 13:50:49 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 13:50:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 13:50:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 13:50:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 13:50:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 13:50:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 13:50:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 13:50:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 1 13:50:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 1 13:51:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 1 13:51:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 1 13:51:09 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":true} 
 Player 1 13:51:09 $SHOW_DECISION:  

 {"startCardId":259,"endCardId":259} 
 Player 1 13:51:11 $RESPOND_TO:  

 {"playerId":-1,"stackEffectResponse":false} 
 Player 1 13:51:12 $NEXT_STACK_ID:  
 Player 1 13:51:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 1 13:51:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 activated Azazel"} 
 Player 1 13:51:12 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":8,"creatorCardId":259,"hasLockingStackEffect":false,"itemToPlayCardId":259,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 1 13:51:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 activated Azazel"} 
 Player 1 13:51:12 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":8,"creatorCardId":259,"hasLockingStackEffect":false,"itemToPlayCardId":259,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 1 13:51:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":57,"_text":"Add ActivateItem 8 "}} 
 Player 1 13:51:15 $SHOW_DECISION:  

 {"startCardId":259,"endCardId":38} 
 Player 1 13:51:18 $USE_ITEM:  

 {"cardId":259} 
 Player 1 13:51:18 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 13:51:18 $ACTION_MASSAGE_REMOVE:  

 {"id":57} 
 Player 1 13:51:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 activated Azazel"} 
 Player 1 13:51:18 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":8,"creatorCardId":259,"hasLockingStackEffect":false,"itemToPlayCardId":259,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 13:51:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":58,"_text":"Response Adding ActivateItem 8"},"childOfId":57} 
 Player 1 13:51:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":59,"_text":"Wait For Response From Player 2 "},"childOfId":57} 
 Player 1 13:51:18 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 13:51:18 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 13:51:18 $ACTION_MASSAGE_REMOVE:  

 {"id":59} 
 Player 1 13:51:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":60,"_text":"Wait For Response From Player 1 "},"childOfId":57} 
 Player 1 13:51:18 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 13:51:18 $ACTION_MASSAGE_REMOVE:  

 {"id":60} 
 Player 1 13:51:18 $ACTION_MASSAGE_REMOVE:  

 {"id":58} 
 Player 1 13:51:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":61,"_text":"Resolve ActivateItem 8 "}} 
 Player 1 13:51:18 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":259,"particleType":6} 
 Player 1 13:51:20 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":259,"particleType":6} 
 Player 1 13:51:20 $NEXT_STACK_ID:  
 Player 1 13:51:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 activated Azazel"} 
 Player 1 13:51:20 $PLAYER_LOSE_LOOT:  

 {"playerId":1,"cardId":38} 
 Player 1 13:51:20 $MOVE_CARD:  

 {"moveIndex":18,"cardId":38,"placeID":277,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 13:51:21 $MOVE_CARD_TO_PILE:  

 {"type":7,"cardId":38} 
 Player 1 13:51:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 3 Cents(0): addMoney \n4:Player 1 activated Azazel"} 
 Player 1 13:51:21 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 13:51:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 3 Cents(0): addMoney \n4:Player 1 activated Azazel"} 
 Player 1 13:51:21 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":9,"creatorCardId":259,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":38,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":38,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 13:51:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 3 Cents(0): addMoney \n4:Player 1 activated Azazel"} 
 Player 1 13:51:21 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":6,"creatorCardId":275,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":214}} 
 Player 1 13:51:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 3 Cents(0): addMoney \n4:Player 1 activated Azazel"} 
 Player 1 13:51:21 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":8,"creatorCardId":259,"hasLockingStackEffect":false,"itemToPlayCardId":259,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 13:51:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 3 Cents(0): addMoney \n4:Player 1 activated Azazel"} 
 Player 1 13:51:21 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":6,"creatorCardId":275,"numberRolled":6,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":214}} 
 Player 1 13:51:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 3 Cents(0): addMoney \n4:Player 1 activated Azazel"} 
 Player 1 13:51:21 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 13:51:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 3 Cents(0): addMoney \n4:Player 1 activated Azazel"} 
 Player 1 13:51:21 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":9,"creatorCardId":259,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":38,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":38,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 13:51:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 3 Cents(0): addMoney \n4:Player 1 activated Azazel"} 
 Player 1 13:51:21 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":8,"creatorCardId":259,"hasLockingStackEffect":false,"itemToPlayCardId":259,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 13:51:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 3 Cents(0): addMoney \n4:Player 1 activated Azazel"} 
 Player 1 13:51:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 3 Cents(0): addMoney \n4:Player 1 activated Azazel"} 
 Player 1 13:51:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 3 Cents(0): addMoney \n4:Player 1 activated Azazel"} 
 Player 1 13:51:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 3 Cents(0): addMoney \n4:Player 1 activated Azazel"} 
 Player 1 13:51:21 $REPLACE_STACK:  

 {"currentStack":[{"entityId":6,"creatorCardId":275,"numberRolled":6,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":214},{"entityId":7,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1},{"entityId":9,"creatorCardId":259,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":38,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":38,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":8,"creatorCardId":259,"hasLockingStackEffect":false,"itemToPlayCardId":259,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 
 Player 1 13:51:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 3 Cents(0): addMoney \n4:Player 1 activated Azazel"} 
 Player 1 13:51:21 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":8,"creatorCardId":259,"hasLockingStackEffect":false,"itemToPlayCardId":259,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 13:51:21 $ACTION_MASSAGE_REMOVE:  

 {"id":61} 
 Player 1 13:51:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 3 Cents(0): addMoney"} 
 Player 1 13:51:21 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":8,"creatorCardId":259,"hasLockingStackEffect":false,"itemToPlayCardId":259,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 13:51:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":62,"_text":"Remove After Resolve ActivateItem 8  "}} 
 Player 1 13:51:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 3 Cents(0): addMoney"} 
 Player 1 13:51:21 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":8,"creatorCardId":259,"hasLockingStackEffect":false,"itemToPlayCardId":259,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 13:51:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":63,"_text":"Response Remove After Resolve ActivateItem 8"},"childOfId":62} 
 Player 1 13:51:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":64,"_text":"Wait For Response From Player 2 "},"childOfId":62} 
 Player 1 13:51:22 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 13:51:22 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 13:51:22 $ACTION_MASSAGE_REMOVE:  

 {"id":64} 
 Player 1 13:51:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":65,"_text":"Wait For Response From Player 1 "},"childOfId":62} 
 Player 1 13:51:22 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 13:51:22 $ACTION_MASSAGE_REMOVE:  

 {"id":65} 
 Player 1 13:51:22 $ACTION_MASSAGE_REMOVE:  

 {"id":63} 
 Player 1 13:51:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":66,"_text":"Resolve PlayLootCardStackEffect 9 "}} 
 Player 1 13:51:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 3 Cents(0): addMoney"} 
 Player 1 13:51:22 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":38,"particleType":6} 
 Player 1 13:51:24 $ACTION_MASSAGE_REMOVE:  

 {"id":62} 
 Player 1 13:51:24 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":38,"particleType":6} 
 Player 1 13:51:24 $SET_MONEY:  

 {"playerId":1,"numOfCoins":6} 
 Player 1 13:51:24 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":259,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Player 1 13:51:24 $REMOVE_FROM_PILE:  

 {"cardId":38} 
 Player 1 13:51:24 $MOVE_CARD:  

 {"moveIndex":19,"cardId":38,"placeID":278,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 13:51:25 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":38} 
 Player 1 13:51:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 3 Cents(0): addMoney"} 
 Player 1 13:51:25 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":9,"creatorCardId":259,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":38,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 13:51:25 $ACTION_MASSAGE_REMOVE:  

 {"id":66} 
 Player 1 13:51:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 1 13:51:25 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":9,"creatorCardId":259,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":38,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 13:51:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":67,"_text":"Remove After Resolve PlayLootCardStackEffect 9  "}} 
 Player 1 13:51:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 1 13:51:25 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":9,"creatorCardId":259,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":38,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 13:51:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":68,"_text":"Response Remove After Resolve PlayLootCardStackEffect 9"},"childOfId":67} 
 Player 1 13:51:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":69,"_text":"Wait For Response From Player 1 "},"childOfId":67} 
 Player 1 13:51:25 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 13:51:25 $ACTION_MASSAGE_REMOVE:  

 {"id":69} 
 Player 1 13:51:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":70,"_text":"Wait For Response From Player 2 "},"childOfId":67} 
 Player 1 13:51:25 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 13:51:25 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 13:51:25 $ACTION_MASSAGE_REMOVE:  

 {"id":70} 
 Player 1 13:51:25 $ACTION_MASSAGE_REMOVE:  

 {"id":68} 
 Player 1 13:51:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":71,"_text":"Resolve ActivateItem 7 "}} 
 Player 1 13:51:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 1 13:51:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 1 13:51:26 $DO_STACK_EFFECT:  

 {"originPlayerId":1,"playerId":2,"currentStack":[{"entityId":6,"creatorCardId":275,"numberRolled":6,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":214},{"entityId":7,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 
 Player 1 13:51:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 1 13:51:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 1 13:51:28 $ACTION_MASSAGE_REMOVE:  

 {"id":67} 
 Player 1 13:51:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 1 13:51:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 1 13:51:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 1 13:51:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 1 13:51:28 $ACTION_MASSAGE_REMOVE:  

 {"id":71} 
 Player 1 13:51:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 1 13:51:28 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":6,"creatorCardId":275,"numberRolled":6,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":214}} 
 Player 1 13:51:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 1 13:51:28 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":6,"creatorCardId":275,"numberRolled":6,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":214}} 
 Player 1 13:51:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 1 13:51:28 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 13:51:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 1 13:51:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 1 13:51:28 $REPLACE_STACK:  

 {"currentStack":[{"entityId":6,"creatorCardId":275,"numberRolled":6,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":214},{"entityId":7,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 
 Player 1 13:51:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 13:51:28 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 13:51:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":72,"_text":"Remove After Resolve ActivateItem 7  "}} 
 Player 1 13:51:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 13:51:28 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":7,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 13:51:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":73,"_text":"Response Remove After Resolve ActivateItem 7"},"childOfId":72} 
 Player 1 13:51:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":74,"_text":"Wait For Response From Player 2 "},"childOfId":72} 
 Player 1 13:51:28 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 13:51:28 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 13:51:29 $ACTION_MASSAGE_REMOVE:  

 {"id":74} 
 Player 1 13:51:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":75,"_text":"Wait For Response From Player 1 "},"childOfId":72} 
 Player 1 13:51:29 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 13:51:29 $ACTION_MASSAGE_REMOVE:  

 {"id":75} 
 Player 1 13:51:29 $ACTION_MASSAGE_REMOVE:  

 {"id":73} 
 Player 1 13:51:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":76,"_text":"Resolve AttackRoll 6 "}} 
 Player 1 13:51:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 13:51:29 $DO_STACK_EFFECT:  

 {"originPlayerId":1,"playerId":2,"currentStack":[{"entityId":6,"creatorCardId":275,"numberRolled":6,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":214}]} 
 Player 1 13:51:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 13:51:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 13:51:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost"} 
 Player 1 13:51:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost"} 
 Player 1 13:51:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost"} 
 Player 1 13:51:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost"} 
 Player 1 13:51:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost"} 
 Player 1 13:51:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost"} 
 Player 1 13:51:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost"} 
 Player 1 13:51:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost"} 
 Player 1 13:51:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost"} 
 Player 1 13:51:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost"} 
 Player 1 13:51:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 13:51:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 13:51:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 13:51:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 13:51:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 13:51:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 13:51:30 $ACTION_MASSAGE_REMOVE:  

 {"id":76} 
 Player 1 13:51:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 13:51:30 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":10,"creatorCardId":275,"entityToDoDamageCardId":214,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 13:51:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 13:51:30 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":10,"creatorCardId":275,"entityToDoDamageCardId":214,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 13:51:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 13:51:30 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":6,"creatorCardId":275,"numberRolled":6,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":214}} 
 Player 1 13:51:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 13:51:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 13:51:30 $REPLACE_STACK:  

 {"currentStack":[{"entityId":10,"creatorCardId":275,"entityToDoDamageCardId":214,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":6,"creatorCardId":275,"numberRolled":6,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":214}]} 
 Player 1 13:51:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost"} 
 Player 1 13:51:30 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":6,"creatorCardId":275,"numberRolled":6,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":214}} 
 Player 1 13:51:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":78,"_text":"Remove After Resolve AttackRoll 6  "}} 
 Player 1 13:51:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost"} 
 Player 1 13:51:31 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":6,"creatorCardId":275,"numberRolled":6,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":214}} 
 Player 1 13:51:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":79,"_text":"Response Remove After Resolve AttackRoll 6"},"childOfId":78} 
 Player 1 13:51:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":80,"_text":"Wait For Response From Player 2 "},"childOfId":78} 
 Player 1 13:51:31 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 13:51:31 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 13:51:31 $ACTION_MASSAGE_REMOVE:  

 {"id":72} 
 Player 1 13:51:31 $ACTION_MASSAGE_REMOVE:  

 {"id":80} 
 Player 1 13:51:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":81,"_text":"Wait For Response From Player 1 "},"childOfId":78} 
 Player 1 13:51:31 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 13:51:31 $ACTION_MASSAGE_REMOVE:  

 {"id":81} 
 Player 1 13:51:31 $ACTION_MASSAGE_REMOVE:  

 {"id":79} 
 Player 1 13:51:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":82,"_text":"Resolve CombatDamage 10 "}} 
 Player 1 13:51:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost"} 
 Player 1 13:51:31 $DO_STACK_EFFECT:  

 {"originPlayerId":1,"playerId":2,"currentStack":[{"entityId":10,"creatorCardId":275,"entityToDoDamageCardId":214,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}]} 
 Player 1 13:51:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost"} 
 Player 1 13:51:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost"} 
 Player 1 13:51:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 13:51:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 13:51:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 13:51:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 13:51:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 13:51:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 13:51:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 13:51:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 13:51:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 13:51:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 13:51:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 1 13:51:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 1 13:51:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 1 13:51:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 1 13:51:32 $ACTION_MASSAGE_REMOVE:  

 {"id":82} 
 Player 1 13:51:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 1 13:51:32 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":10,"creatorCardId":275,"entityToDoDamageCardId":214,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 13:51:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 1 13:51:32 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":10,"creatorCardId":275,"entityToDoDamageCardId":214,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 13:51:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 1 13:51:33 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":11,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":214}} 
 Player 1 13:51:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 1 13:51:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 1 13:51:33 $REPLACE_STACK:  

 {"currentStack":[{"entityId":10,"creatorCardId":275,"entityToDoDamageCardId":214,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":11,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":214}]} 
 Player 1 13:51:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 13:51:33 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":10,"creatorCardId":275,"entityToDoDamageCardId":214,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 13:51:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":83,"_text":"Remove After Resolve CombatDamage 10  "}} 
 Player 1 13:51:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 13:51:33 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":10,"creatorCardId":275,"entityToDoDamageCardId":214,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 13:51:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":84,"_text":"Response Remove After Resolve CombatDamage 10"},"childOfId":83} 
 Player 1 13:51:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":85,"_text":"Wait For Response From Player 2 "},"childOfId":83} 
 Player 1 13:51:33 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 13:51:33 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 13:51:33 $ACTION_MASSAGE_REMOVE:  

 {"id":78} 
 Player 1 13:51:33 $ACTION_MASSAGE_REMOVE:  

 {"id":85} 
 Player 1 13:51:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":86,"_text":"Wait For Response From Player 1 "},"childOfId":83} 
 Player 1 13:51:33 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 13:51:33 $ACTION_MASSAGE_REMOVE:  

 {"id":86} 
 Player 1 13:51:33 $ACTION_MASSAGE_REMOVE:  

 {"id":84} 
 Player 1 13:51:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":87,"_text":"Resolve PlayerDeath 11 "}} 
 Player 1 13:51:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 13:51:34 $DO_STACK_EFFECT:  

 {"originPlayerId":1,"playerId":2,"currentStack":[{"entityId":11,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":214}]} 
 Player 1 13:51:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 13:51:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 13:51:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 
 Player 1 13:51:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 
 Player 1 13:51:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 
 Player 1 13:51:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 
 Player 1 13:51:34 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 13:51:35 $ACTION_MASSAGE_REMOVE:  

 {"id":83} 
 Player 1 13:51:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 
 Player 1 13:51:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 
 Player 1 13:51:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 
 Player 1 13:51:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 
 Player 1 13:51:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 
 Player 1 13:51:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 
 Player 1 13:51:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 
 Player 1 13:51:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 
 Player 1 13:51:37 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 13:51:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 13:51:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 13:51:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 13:51:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 13:51:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 13:51:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 13:51:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 13:51:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 13:51:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 13:51:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 13:51:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 13:51:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 13:51:38 $ACTION_MASSAGE_REMOVE:  

 {"id":87} 
 Player 1 13:51:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 13:51:38 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":11,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":214}} 
 Player 1 13:51:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 13:51:38 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":11,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":214}} 
 Player 1 13:51:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 13:51:38 $REPLACE_STACK:  

 {"currentStack":[{"entityId":11,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":214}]} 
 Player 1 13:51:38 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 13:51:38 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":11,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":214}} 
 Player 1 13:51:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":99,"_text":"Remove After Resolve PlayerDeath 11  "}} 
 Player 1 13:51:38 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 13:51:38 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":11,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":214}} 
 Player 1 13:51:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":100,"_text":"Response Remove After Resolve PlayerDeath 11"},"childOfId":99} 
 Player 1 13:51:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":101,"_text":"Wait For Response From Player 1 "},"childOfId":99} 
 Player 1 13:51:38 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 13:51:38 $ACTION_MASSAGE_REMOVE:  

 {"id":101} 
 Player 1 13:51:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":102,"_text":"Wait For Response From Player 2 "},"childOfId":99} 
 Player 1 13:51:38 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 13:51:38 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 13:51:39 $ACTION_MASSAGE_REMOVE:  

 {"id":102} 
 Player 1 13:51:39 $ACTION_MASSAGE_REMOVE:  

 {"id":100} 
 Player 1 13:51:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":103,"_text":"Stack Was Emptied "}} 
 Player 1 13:51:39 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 13:51:39 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 1 13:51:39 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 1 13:51:39 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 1 13:51:39 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 1 13:51:39 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 1 13:51:39 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 1 13:51:39 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 1 13:51:39 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 1 13:51:39 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 1 13:51:39 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 1 13:51:39 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 1 13:51:39 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 1 13:51:39 $ACTION_MASSAGE_REMOVE:  

 {"id":24} 
 Player 1 13:51:39 $ACTION_MASSAGE_REMOVE:  

 {"id":25} 
 Player 1 13:51:39 $ACTION_MASSAGE_REMOVE:  

 {"id":29} 
 Player 1 13:51:39 $ACTION_MASSAGE_REMOVE:  

 {"id":30} 
 Player 1 13:51:39 $ACTION_MASSAGE_REMOVE:  

 {"id":34} 
 Player 1 13:51:39 $ACTION_MASSAGE_REMOVE:  

 {"id":35} 
 Player 1 13:51:39 $ACTION_MASSAGE_REMOVE:  

 {"id":39} 
 Player 1 13:51:39 $ACTION_MASSAGE_REMOVE:  

 {"id":40} 
 Player 1 13:51:39 $ACTION_MASSAGE_REMOVE:  

 {"id":44} 
 Player 1 13:51:39 $ACTION_MASSAGE_REMOVE:  

 {"id":45} 
 Player 1 13:51:39 $ACTION_MASSAGE_REMOVE:  

 {"id":49} 
 Player 1 13:51:39 $ACTION_MASSAGE_REMOVE:  

 {"id":50} 
 Player 1 13:51:39 $ACTION_MASSAGE_REMOVE:  

 {"id":53} 
 Player 1 13:51:39 $ACTION_MASSAGE_REMOVE:  

 {"id":57} 
 Player 1 13:51:39 $ACTION_MASSAGE_REMOVE:  

 {"id":61} 
 Player 1 13:51:40 $ACTION_MASSAGE_REMOVE:  

 {"id":62} 
 Player 1 13:51:40 $ACTION_MASSAGE_REMOVE:  

 {"id":66} 
 Player 1 13:51:40 $ACTION_MASSAGE_REMOVE:  

 {"id":67} 
 Player 1 13:51:40 $ACTION_MASSAGE_REMOVE:  

 {"id":71} 
 Player 1 13:51:40 $ACTION_MASSAGE_REMOVE:  

 {"id":72} 
 Player 1 13:51:40 $ACTION_MASSAGE_REMOVE:  

 {"id":76} 
 Player 1 13:51:40 $ACTION_MASSAGE_REMOVE:  

 {"id":77} 
 Player 1 13:51:40 $ACTION_MASSAGE_REMOVE:  

 {"id":78} 
 Player 1 13:51:40 $ACTION_MASSAGE_REMOVE:  

 {"id":82} 
 Player 1 13:51:40 $ACTION_MASSAGE_REMOVE:  

 {"id":83} 
 Player 1 13:51:40 $ACTION_MASSAGE_REMOVE:  

 {"id":87} 
 Player 1 13:51:40 $ACTION_MASSAGE_REMOVE:  

 {"id":88} 
 Player 1 13:51:40 $ACTION_MASSAGE_REMOVE:  

 {"id":92} 
 Player 1 13:51:40 $ACTION_MASSAGE_REMOVE:  

 {"id":93} 
 Player 1 13:51:40 $ACTION_MASSAGE_REMOVE:  

 {"id":94} 
 Player 1 13:51:40 $ACTION_MASSAGE_REMOVE:  

 {"id":98} 
 Player 1 13:51:40 $ACTION_MASSAGE_REMOVE:  

 {"id":99} 
 Player 1 13:51:40 $ACTION_MASSAGE_REMOVE:  

 {"id":103} 
 Player 1 13:51:40 $TURN_PLAYER_DO_STACK_EFFECT:  

 {"playerId":2} 
 Player 1 13:51:40 $ACTION_MASSAGE_REMOVE:  

 {"id":103} 
 Player 1 13:51:41 $ACTION_MASSAGE_REMOVE:  

 {"id":99}