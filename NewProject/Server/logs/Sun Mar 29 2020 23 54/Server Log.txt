Start Log 

 Player 1 23:54:45 $MATCH:  

 Player 1 23:54:46 $START_GAME:  

 Player 1 23:54:46 $MOVE_TO_TABLE:  

 Player 2 23:54:46 $MOVE_TO_TABLE:  

 Player 2 23:54:56 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 1 23:54:56 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 23:54:56 $SET_CHAR:  
{"originPlayerId":2,"playerId":1,"charCardId":324,"itemCardId":325} 

 Player 1 23:54:56 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":324,"itemCardId":325} 

 Player 1 23:54:56 $SET_CHAR_END:  
{"playerId":2} 

 Player 2 23:54:56 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":322,"itemCardId":323} 

 Player 2 23:54:56 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[103,118,102,82,44,122,90,117,77,25,27,99,106,135,53,8,67,54,115,73,136,70,48,49,133,10,51,52,26,84,13,72,81,31,46,23,33,45,12,55,59,58,47,61,32,129,96,112,93,68,87,110,18,79,30,109,114,42,66,141,126,22,76,34,111,39,140,40,17,120,128,132,56,15,11,130,65,41,134,101,123,125,105,29,19,104,139,20,64,78,92,137,14,124,62,63,98,80,97,138,119,35,85,94,116,91,88,113,86,83,21,107,57,6,43,108,36,71,89,74,24,16,131,50,75,121,7,38,100,9,95,69,60,37,28,127]} 

 Player 2 23:54:56 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[266,287,230,225,252,275,260,292,232,286,258,273,248,280,281,308,245,240,263,298,299,294,243,271,301,269,233,305,262,250,300,257,247,224,228,288,259,229,279,306,255,274,303,234,282,235,227,237,309,241,295,277,302,296,285,251,242,283,238,304,253,244,297,278,291,284,236,264,276,256,265,226,290,289,268,270,261,293,254,272,231,239,307,249,267,246]} 

 Player 2 23:54:56 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[191,221,207,194,166,158,170,212,172,165,176,189,216,159,155,163,187,205,164,150,196,181,218,145,148,151,143,192,217,173,152,161,219,209,180,154,199,202,201,174,175,188,215,193,171,162,168,195,206,147,197,198,190,210,153,211,146,203,177,169,178,182,222,184,220,214,204,183,144,213,157,156,185,200,160,167,186,179,149,208]} 

 Player 2 23:54:56 $DRAW_CARD:  
{"deckType":5} 

 Player 2 23:54:56 $FLIP_CARD:  
{"cardId":208} 

 Player 2 23:54:56 $ADD_STORE_CARD:  
{"cardId":208} 

 Player 2 23:54:56 $DRAW_CARD:  
{"deckType":5} 

 Player 2 23:54:56 $FLIP_CARD:  
{"cardId":149} 

 Player 2 23:54:57 $ADD_STORE_CARD:  
{"cardId":149} 

 Player 2 23:54:57 $DRAW_CARD:  
{"deckType":2} 

 Player 2 23:54:57 $FLIP_CARD:  
{"cardId":246} 

 Player 2 23:54:57 $REGISTER_PASSIVE_ITEM:  
{"cardId":246} 

 Player 2 23:54:57 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":246} 

 Player 2 23:54:57 $NEW_MONSTER_ON_PLACE:  
{"cardId":246,"monsterPlaceId":1} 

 Player 2 23:54:57 $DRAW_CARD:  
{"deckType":2} 

 Player 2 23:54:57 $FLIP_CARD:  
{"cardId":267} 

 Player 2 23:54:57 $REGISTER_PASSIVE_ITEM:  
{"cardId":267} 

 Player 2 23:54:57 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":267} 

 Player 2 23:54:57 $NEW_MONSTER_ON_PLACE:  
{"cardId":267,"monsterPlaceId":2} 

 Player 2 23:54:57 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 23:54:57 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":324,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 23:54:57 $DRAW_CARD:  
{"deckType":1} 

 Player 2 23:54:57 $MOVE_CARD:  
{"moveIndex":1,"cardId":127,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 23:54:57 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":127,"flipIfFlipped":false,"playerId":2} 

 Player 2 23:54:57 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":127} 

 Player 2 23:54:57 $FLIP_CARD:  
{"cardId":127} 

 Player 2 23:54:57 $FLIP_CARD:  
{"cardId":127} 

 Player 2 23:54:57 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":127} 

 Player 2 23:54:57 $DRAW_CARD:  
{"deckType":1} 

 Player 2 23:54:57 $MOVE_CARD:  
{"moveIndex":2,"cardId":28,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 23:54:58 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":28,"flipIfFlipped":false,"playerId":2} 

 Player 2 23:54:58 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":28} 

 Player 2 23:54:58 $FLIP_CARD:  
{"cardId":28} 

 Player 2 23:54:58 $FLIP_CARD:  
{"cardId":28} 

 Player 2 23:54:58 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":28} 

 Player 2 23:54:58 $DRAW_CARD:  
{"deckType":1} 

 Player 2 23:54:58 $MOVE_CARD:  
{"moveIndex":3,"cardId":37,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 23:54:58 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":37,"flipIfFlipped":false,"playerId":2} 

 Player 2 23:54:58 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":37} 

 Player 2 23:54:58 $FLIP_CARD:  
{"cardId":37} 

 Player 2 23:54:58 $FLIP_CARD:  
{"cardId":37} 

 Player 2 23:54:58 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":37} 

 Player 2 23:54:58 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 23:54:58 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":322,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 23:54:58 $DRAW_CARD:  
{"deckType":1} 

 Player 2 23:54:58 $MOVE_CARD:  
{"moveIndex":4,"cardId":60,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 23:54:59 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":60,"flipIfFlipped":false,"playerId":2} 

 Player 2 23:54:59 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":60} 

 Player 2 23:54:59 $FLIP_CARD:  
{"cardId":60} 

 Player 2 23:54:59 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":60} 

 Player 2 23:54:59 $DRAW_CARD:  
{"deckType":1} 

 Player 2 23:54:59 $MOVE_CARD:  
{"moveIndex":5,"cardId":69,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 23:54:59 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":69,"flipIfFlipped":false,"playerId":2} 

 Player 2 23:54:59 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":69} 

 Player 2 23:54:59 $FLIP_CARD:  
{"cardId":69} 

 Player 2 23:54:59 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":69} 

 Player 2 23:54:59 $DRAW_CARD:  
{"deckType":1} 

 Player 2 23:54:59 $MOVE_CARD:  
{"moveIndex":6,"cardId":95,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 23:55:00 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":95,"flipIfFlipped":false,"playerId":2} 

 Player 2 23:55:00 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":95} 

 Player 2 23:55:00 $FLIP_CARD:  
{"cardId":95} 

 Player 2 23:55:00 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":95} 

 Player 2 23:55:00 $GAME_HAS_STARTED:  

 Player 2 23:55:00 $SET_TURN:  
{"playerId":1} 

 Player 2 23:55:00 $START_TURN:  
{"playerId":1} 

 Player 2 23:55:00 $UPDATE_ACTIONS:  

 Player 1 23:55:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:55:00 $NEXT_STACK_ID:  

 Player 1 23:55:00 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:55:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 23:55:00 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":324,"turnPlayerCardId":324,"stackEffectType":13}} 

 Player 1 23:55:00 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":324,"turnPlayerCardId":324,"stackEffectType":13}} 

 Player 1 23:55:00 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 23:55:00 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 2 23:55:00 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:55:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 23:55:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 1 23:55:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:55:03 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":324,"turnPlayerCardId":324,"stackEffectType":13}} 

 Player 1 23:55:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 1 23:55:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 1 23:55:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:55:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 1 23:55:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 23:55:03 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 23:55:03 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[322,323]} 

 Player 2 23:55:03 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 23:55:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 1 23:55:03 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":324,"turnPlayerCardId":324,"stackEffectType":13}} 

 Player 1 23:55:03 $DRAW_CARD:  
{"deckType":1} 

 Player 1 23:55:03 $MOVE_CARD:  
{"moveIndex":7,"cardId":9,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 23:55:03 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":9,"flipIfFlipped":false,"playerId":1} 

 Player 1 23:55:04 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":9} 

 Player 1 23:55:04 $FLIP_CARD:  
{"cardId":9} 

 Player 1 23:55:04 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":9} 

 Player 1 23:55:04 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":324,"turnPlayerCardId":324,"stackEffectType":13}} 

 Player 1 23:55:04 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":1} 

 Player 1 23:55:04 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 23:55:04 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 1 23:55:07 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":1} 

 Player 1 23:55:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 1 23:55:07 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:55:07 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":324,"turnPlayerCardId":324,"stackEffectType":13}} 

 Player 1 23:55:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 1 23:55:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 1 23:55:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 23:55:07 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 23:55:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 23:55:07 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[322,323]} 

 Player 2 23:55:07 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 23:55:07 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 1 23:55:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 1 23:55:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:55:07 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 1 23:55:07 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 1 23:55:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 1 23:55:07 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:55:07 $CLEAR_SE_VIS:  

 Player 1 23:55:12 $MOVE_CARD:  
{"moveIndex":8,"cardId":96,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Hand"} 

 Player 2 23:55:13 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":96,"flipIfFlipped":true,"playerId":1} 

 Player 1 23:55:13 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":96} 

 Player 1 23:55:16 $NEXT_STACK_ID:  

 Player 1 23:55:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Credit Card "} 

 Player 1 23:55:16 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":324,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":96,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 23:55:16 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":324,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":96,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 23:55:16 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 23:55:16 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 2 23:55:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:55:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Credit Card "} 

 Player 1 23:55:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add PlayLootCardStackEffect 2 "}} 

 Player 1 23:55:19 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":96} 

 Player 1 23:55:19 $MOVE_CARD:  
{"moveIndex":9,"cardId":96,"placeID":328,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 23:55:19 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":96,"flipIfFlipped":true,"playerId":1} 

 Player 1 23:55:19 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":96} 

 Player 1 23:55:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Credit Card: ChainEffects"} 

 Player 1 23:55:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:55:19 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":324,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":96,"lootPlayerId":1,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":96,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 23:55:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding PlayLootCardStackEffect 2"},"childOfId":10} 

 Player 1 23:55:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 1 23:55:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:55:19 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 1 23:55:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 1 23:55:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 23:55:19 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 23:55:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Credit Card "} 

 Player 2 23:55:19 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[322,323]} 

 Player 2 23:55:19 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 23:55:19 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 1 23:55:19 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 1 23:55:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve PlayLootCardStackEffect 2 "}} 

 Player 1 23:55:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Credit Card: ChainEffects"} 

 Player 1 23:55:20 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":324,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":96,"lootPlayerId":1,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":96,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 23:55:20 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":96,"particleType":6} 

 Player 2 23:55:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Credit Card "} 

 Player 1 23:55:21 $DISABLE_PARTICLE_EFFECT:  
{"cardId":96,"particleType":6} 

 Player 1 23:55:21 $REGISTER_ONE_TURN_PASSIVE_EFFECT:  
{"cardId":96,"effectIndex":{"type":3,"index":0},"conditionData":[null]} 

 Player 1 23:55:22 $REMOVE_FROM_PILE:  
{"cardId":96} 

 Player 1 23:55:22 $MOVE_CARD:  
{"moveIndex":10,"cardId":96,"placeID":329,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 23:55:22 $MOVE_CARD_END:  
{"moveIndex":10,"cardId":96,"flipIfFlipped":true,"playerId":1} 

 Player 1 23:55:22 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":96} 

 Player 1 23:55:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Credit Card: ChainEffects"} 

 Player 1 23:55:22 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":324,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":96,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 23:55:22 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":2} 

 Player 1 23:55:22 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 23:55:22 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 2 23:55:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Credit Card "} 

 Player 1 23:55:25 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":2} 

 Player 1 23:55:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve PlayLootCardStackEffect 2  "}} 

 Player 1 23:55:25 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:55:25 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":324,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":96,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 23:55:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve PlayLootCardStackEffect 2"},"childOfId":15} 

 Player 1 23:55:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 1 23:55:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 23:55:25 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 23:55:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Credit Card "} 

 Player 2 23:55:25 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[322,323]} 

 Player 2 23:55:25 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 23:55:25 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 1 23:55:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 1 23:55:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:55:25 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 1 23:55:25 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 1 23:55:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 1 23:55:25 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:55:25 $CLEAR_SE_VIS:  

 Player 1 23:56:05 $NEXT_STACK_ID:  

 Player 1 23:56:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Brimstone for 0"} 

 Player 1 23:56:05 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":324,"itemToPurchaseCardId":149,"playerWhoBuysCardId":324,"cost":10,"stackEffectType":9}} 

 Player 1 23:56:05 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":324,"itemToPurchaseCardId":149,"playerWhoBuysCardId":324,"cost":10,"stackEffectType":9}} 

 Player 1 23:56:05 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 23:56:05 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 2 23:56:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:56:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Brimstone for 10"} 

 Player 1 23:56:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add PurchaseItem 3 "}} 

 Player 1 23:56:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:56:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Brimstone for 0"} 

 Player 1 23:56:08 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":324,"itemToPurchaseCardId":149,"playerWhoBuysCardId":324,"cost":10,"stackEffectType":9}} 

 Player 1 23:56:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding PurchaseItem 3"},"childOfId":20} 

 Player 1 23:56:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 1 23:56:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:56:08 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 1 23:56:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 1 23:56:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 23:56:08 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 23:56:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Brimstone for 10"} 

 Player 2 23:56:08 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[322,323]} 

 Player 2 23:56:08 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 23:56:08 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 1 23:56:08 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 1 23:56:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve PurchaseItem 3 "}} 

 Player 1 23:56:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Brimstone for 0"} 

 Player 1 23:56:08 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":324,"itemToPurchaseCardId":149,"playerWhoBuysCardId":324,"cost":10,"stackEffectType":9}} 

 Player 1 23:56:08 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 1 23:56:09 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":0}],"result":null,"preventMethod":false,"methodScopeId":324,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 23:56:09 $REMOVE_ITEM_FROM_SHOP:  
{"cardId":149} 

 Player 1 23:56:09 $NEXT_STACK_ID:  

 Player 1 23:56:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:56:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Brimstone for 0 \n2:Refill Store slot"} 

 Player 1 23:56:09 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":324,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 1 23:56:09 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 23:56:09 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 2 23:56:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Brimstone for 10"} 

 Player 2 23:56:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Brimstone for 10"} 

 Player 1 23:56:11 $CLEAR_SE_VIS:  

 Player 1 23:56:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Brimstone for 0 \n2:Refill Store slot"} 

 Player 1 23:56:11 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":324,"itemToPurchaseCardId":149,"playerWhoBuysCardId":324,"cost":10,"stackEffectType":9}} 

 Player 1 23:56:11 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":324,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 1 23:56:11 $REPLACE_STACK:  
{"currentStack":[{"entityId":3,"creatorCardId":324,"itemToPurchaseCardId":149,"playerWhoBuysCardId":324,"cost":10,"stackEffectType":9},{"entityId":4,"creatorCardId":324,"slotType":5,"slotToFillId":0,"stackEffectType":10}]} 

 Player 1 23:56:11 $REGISTER_PASSIVE_ITEM:  
{"cardId":149} 

 Player 1 23:56:12 $MOVE_CARD:  
{"moveIndex":11,"cardId":149,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 

 Player 2 23:56:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Brimstone for 10"} 

 Player 2 23:56:12 $MOVE_CARD_END:  
{"moveIndex":11,"cardId":149,"flipIfFlipped":true,"playerId":1} 

 Player 1 23:56:12 $ADD_AN_ITEM:  
{"playerId":1,"cardId":149,"isReward":false} 

 Player 1 23:56:12 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":149}],"result":true,"preventMethod":false,"methodScopeId":324,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 1 23:56:12 $NEXT_STACK_ID:  

 Player 1 23:56:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Brimstone for 0 \n2:Refill Store slot"} 

 Player 1 23:56:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Brimstone for 0 \n2:Refill Store slot \n3:Activate Brimstone effect GainStats<GainStats>"} 

 Player 1 23:56:12 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":5,"creatorCardId":324,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":149,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":1,"cardId":149,"effctType":0},"isAfterActivation":true,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 23:56:12 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":5,"creatorCardId":324,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":149,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":1,"cardId":149,"effctType":0},"isAfterActivation":true,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 23:56:12 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 23:56:12 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 2 23:56:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Brimstone for 10 \n2:Refill Store slot"} 

 Player 2 23:56:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Brimstone for 10 \n2:Refill Store slot \n3:Activate Brimstone "} 

 Player 1 23:56:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Add ActivatePassiveEffect 5 "}} 

 Player 1 23:56:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Brimstone for 0 \n2:Refill Store slot \n3:Activate Brimstone effect GainStats<GainStats>"} 

 Player 1 23:56:15 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[324],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":324,"effectCardPlayer":324},"entityId":5,"creatorCardId":324,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":149,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":1,"cardId":149,"effctType":0},"isAfterActivation":true,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 23:56:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Response Adding ActivatePassiveEffect 5"},"childOfId":25} 

 Player 1 23:56:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Wait For Response From Player 1 "},"childOfId":25} 

 Player 1 23:56:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:56:15 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 1 23:56:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":25} 

 Player 1 23:56:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 23:56:15 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 23:56:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Brimstone for 10 \n2:Refill Store slot \n3:Activate Brimstone "} 

 Player 2 23:56:15 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[322,323]} 

 Player 2 23:56:15 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 23:56:15 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 1 23:56:15 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 1 23:56:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Resolve ActivatePassiveEffect 5 "}} 

 Player 1 23:56:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Brimstone for 0 \n2:Refill Store slot \n3:Activate Brimstone effect GainStats<GainStats>"} 

 Player 1 23:56:15 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[324],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":324,"effectCardPlayer":324},"entityId":5,"creatorCardId":324,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":149,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":1,"cardId":149,"effctType":0},"isAfterActivation":true,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 23:56:15 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":149,"particleType":6} 

 Player 2 23:56:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Brimstone for 10 \n2:Refill Store slot \n3:Activate Brimstone "} 

 Player 1 23:56:17 $DISABLE_PARTICLE_EFFECT:  
{"cardId":149,"particleType":6} 

 Player 1 23:56:17 $PLAYER_GAIN_DMG:  
{"playerId":1,"DMGToGain":1,"isTemp":false} 

 Player 1 23:56:17 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":149}],"result":true,"preventMethod":false,"methodScopeId":324,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 1 23:56:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Brimstone for 0 \n2:Refill Store slot \n3:Activate Brimstone effect GainStats<GainStats>"} 

 Player 1 23:56:17 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[324],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":324,"effectCardPlayer":324},"entityId":5,"creatorCardId":324,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":149,"isAfterActivation":true,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 23:56:17 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":5} 

 Player 1 23:56:17 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 23:56:17 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 2 23:56:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Brimstone for 10 \n2:Refill Store slot \n3:Activate Brimstone "} 

 Player 1 23:56:20 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":5} 

 Player 1 23:56:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Remove After Resolve ActivatePassiveEffect 5  "}} 

 Player 1 23:56:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Brimstone for 0 \n2:Refill Store slot"} 

 Player 1 23:56:20 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[324],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":324,"effectCardPlayer":324},"entityId":5,"creatorCardId":324,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":149,"isAfterActivation":true,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 23:56:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Response Remove After Resolve ActivatePassiveEffect 5"},"childOfId":30} 

 Player 1 23:56:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Wait For Response From Player 2 "},"childOfId":30} 

 Player 1 23:56:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 23:56:20 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 23:56:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Brimstone for 10 \n2:Refill Store slot \n3:Activate Brimstone "} 

 Player 2 23:56:21 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[322,323]} 

 Player 2 23:56:21 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 23:56:21 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 1 23:56:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":30} 

 Player 1 23:56:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:56:21 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 1 23:56:21 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 1 23:56:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Resolve RefillEmptySlot 4 "}} 

 Player 1 23:56:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Brimstone for 0 \n2:Refill Store slot"} 

 Player 1 23:56:21 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":324,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 1 23:56:21 $DRAW_CARD:  
{"deckType":5} 

 Player 1 23:56:21 $FLIP_CARD:  
{"cardId":179} 

 Player 1 23:56:21 $ADD_STORE_CARD:  
{"cardId":179} 

 Player 1 23:56:21 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":4} 

 Player 1 23:56:21 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 23:56:21 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 2 23:56:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Brimstone for 10 \n2:Refill Store slot"} 

 Player 1 23:56:24 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":4} 

 Player 1 23:56:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Remove After Resolve RefillEmptySlot 4  "}} 

 Player 1 23:56:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Brimstone for 0"} 

 Player 1 23:56:24 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":324,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 1 23:56:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Response Remove After Resolve RefillEmptySlot 4"},"childOfId":35} 

 Player 1 23:56:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Wait For Response From Player 1 "},"childOfId":35} 

 Player 1 23:56:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:56:24 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 1 23:56:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 2 "},"childOfId":35} 

 Player 1 23:56:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 23:56:24 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 23:56:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Brimstone for 10 \n2:Refill Store slot"} 

 Player 2 23:56:24 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[322,323]} 

 Player 2 23:56:24 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 23:56:24 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 1 23:56:24 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 1 23:56:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Resolve PurchaseItem 3 "}} 

 Player 1 23:56:24 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":3} 

 Player 1 23:56:24 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 23:56:24 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 1 23:56:27 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":3} 

 Player 1 23:56:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Remove After Resolve PurchaseItem 3  "}} 

 Player 1 23:56:27 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:56:27 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":324,"itemToPurchaseCardId":149,"playerWhoBuysCardId":324,"cost":10,"stackEffectType":9}} 

 Player 1 23:56:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Response Remove After Resolve PurchaseItem 3"},"childOfId":40} 

 Player 1 23:56:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Wait For Response From Player 2 "},"childOfId":40} 

 Player 1 23:56:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 23:56:27 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 23:56:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Brimstone for 10"} 

 Player 2 23:56:27 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[322,323]} 

 Player 2 23:56:27 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 23:56:27 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 1 23:56:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 1 "},"childOfId":40} 

 Player 1 23:56:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:56:27 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 1 23:56:27 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 1 23:56:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Stack Was Emptied "}} 

 Player 1 23:56:27 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:56:27 $CLEAR_SE_VIS:  

 Player 2 00:10:32 $MATCH: 