Start Log 

 Player 1 02:13:13 $MATCH:  

 Player 2 02:13:24 $START_GAME:  

 Player 2 02:13:24 $MOVE_TO_TABLE:  

 Player 1 02:13:25 $MOVE_TO_TABLE:  

 Player 1 02:13:29 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 02:13:29 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 2 02:13:29 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":268,"itemCardId":269} 

 Player 2 02:13:29 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":267}],"result":true,"preventMethod":false,"methodScopeId":264,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 02:13:29 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":264,"itemCardId":267} 

 Player 2 02:13:29 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[122,128,135,95,142,73,138,120,62,58,60,80,36,56,68,117,41,40,78,46,37,72,114,129,116,111,81,47,42,12,77,44,105,30,28,17,112,86,113,53,90,39,76,63,64,127,14,51,143,131,65,29,34,33,79,55,75,70,82,38,130,21,59,119,102,87,96,45,66,26,48,92,9,20,32,16,101,50,136,74,19,25,137,43,125,91,52,133,121,89,8,94,49,88,106,141,54,100,27,109,98,108,13,132,103,99,23,31,139,134,124,123,118,97,126,11,24,57,7,61,140,110,35,93,22,104,69,115,85,83,67,71,18,10,15,84,107]} 

 Player 2 02:13:29 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[224,254,214,247,238,227,255,236,259,233,217,251,208,210,226,257,244,250,241,220,229,231,207,235,248,215,240,252,239,216,232,242,221,234,213,219,223,228,253,218,206,209,246,256,212,245,211,243,230,225,222,237,258,249]} 

 Player 2 02:13:30 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[156,159,184,171,196,164,189,190,153,182,198,150,202,172,167,146,180,199,197,185,187,174,186,191,179,166,176,183,201,161,154,163,192,160,194,168,173,157,175,148,181,195,170,147,165,177,200,151,155,188,169,193,152,158,203,149,178,162]} 

 Player 2 02:13:30 $DRAW_CARD:  
{"deckType":5} 

 Player 2 02:13:30 $FLIP_CARD:  
{"cardId":162} 

 Player 2 02:13:30 $ADD_STORE_CARD:  
{"cardId":162} 

 Player 2 02:13:30 $DRAW_CARD:  
{"deckType":5} 

 Player 2 02:13:30 $FLIP_CARD:  
{"cardId":178} 

 Player 2 02:13:30 $ADD_STORE_CARD:  
{"cardId":178} 

 Player 2 02:13:30 $DRAW_CARD:  
{"deckType":2} 

 Player 2 02:13:30 $FLIP_CARD:  
{"cardId":249} 

 Player 2 02:13:30 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":249} 

 Player 2 02:13:30 $NEW_MONSTER_ON_PLACE:  
{"cardId":249,"monsterPlaceId":1} 

 Player 2 02:13:30 $DRAW_CARD:  
{"deckType":2} 

 Player 2 02:13:30 $FLIP_CARD:  
{"cardId":258} 

 Player 2 02:13:30 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":258} 

 Player 2 02:13:30 $NEW_MONSTER_ON_PLACE:  
{"cardId":258,"monsterPlaceId":2} 

 Player 2 02:13:30 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 02:13:30 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":268,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 02:13:30 $DRAW_CARD:  
{"deckType":1} 

 Player 2 02:13:30 $MOVE_CARD:  
{"moveIndex":1,"cardId":107,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 02:13:30 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":269}],"result":true,"preventMethod":false,"methodScopeId":268,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 02:13:30 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":107,"flipIfFlipped":false,"playerId":2} 

 Player 2 02:13:30 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":107} 

 Player 2 02:13:30 $FLIP_CARD:  
{"cardId":107} 

 Player 2 02:13:30 $FLIP_CARD:  
{"cardId":107} 

 Player 2 02:13:30 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":107} 

 Player 2 02:13:30 $DRAW_CARD:  
{"deckType":1} 

 Player 2 02:13:30 $MOVE_CARD:  
{"moveIndex":2,"cardId":84,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 02:13:31 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":84,"flipIfFlipped":false,"playerId":2} 

 Player 2 02:13:31 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":84} 

 Player 2 02:13:31 $FLIP_CARD:  
{"cardId":84} 

 Player 2 02:13:31 $FLIP_CARD:  
{"cardId":84} 

 Player 2 02:13:31 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":84} 

 Player 2 02:13:31 $DRAW_CARD:  
{"deckType":1} 

 Player 2 02:13:31 $MOVE_CARD:  
{"moveIndex":3,"cardId":15,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 02:13:31 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":15,"flipIfFlipped":false,"playerId":2} 

 Player 2 02:13:31 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":15} 

 Player 2 02:13:31 $FLIP_CARD:  
{"cardId":15} 

 Player 2 02:13:31 $FLIP_CARD:  
{"cardId":15} 

 Player 2 02:13:31 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":15} 

 Player 2 02:13:31 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 02:13:31 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":264,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 02:13:31 $DRAW_CARD:  
{"deckType":1} 

 Player 2 02:13:31 $MOVE_CARD:  
{"moveIndex":4,"cardId":10,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 02:13:32 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":10,"flipIfFlipped":false,"playerId":2} 

 Player 2 02:13:32 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":10} 

 Player 2 02:13:32 $FLIP_CARD:  
{"cardId":10} 

 Player 2 02:13:32 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":10} 

 Player 2 02:13:32 $DRAW_CARD:  
{"deckType":1} 

 Player 2 02:13:32 $MOVE_CARD:  
{"moveIndex":5,"cardId":18,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 02:13:32 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":18,"flipIfFlipped":false,"playerId":2} 

 Player 2 02:13:32 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":18} 

 Player 2 02:13:32 $FLIP_CARD:  
{"cardId":18} 

 Player 2 02:13:32 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":18} 

 Player 2 02:13:33 $DRAW_CARD:  
{"deckType":1} 

 Player 2 02:13:33 $MOVE_CARD:  
{"moveIndex":6,"cardId":71,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 02:13:33 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":71,"flipIfFlipped":false,"playerId":2} 

 Player 2 02:13:33 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":71} 

 Player 2 02:13:33 $FLIP_CARD:  
{"cardId":71} 

 Player 2 02:13:33 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":71} 

 Player 2 02:13:33 $GAME_HAS_STARTED:  

 Player 2 02:13:33 $SET_TURN:  
{"playerId":2} 

 Player 2 02:13:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:13:33 $NEXT_STACK_ID:  

 Player 2 02:13:33 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:13:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 02:13:33 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":264,"turnPlayerCardId":264,"stackEffectType":13}} 

 Player 2 02:13:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 2 02:13:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:13:33 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 02:13:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 02:13:33 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":264,"turnPlayerCardId":264,"stackEffectType":13}} 

 Player 2 02:13:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 2 02:13:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 2 02:13:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:13:33 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 02:13:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 2 02:13:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:13:33 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:13:33 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:13:33 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:13:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 02:13:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 02:13:34 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:13:34 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 02:13:34 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 02:13:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 2 02:13:34 $DRAW_CARD:  
{"deckType":1} 

 Player 2 02:13:34 $MOVE_CARD:  
{"moveIndex":7,"cardId":67,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 02:13:34 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":67,"flipIfFlipped":false,"playerId":2} 

 Player 2 02:13:34 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":67} 

 Player 2 02:13:34 $FLIP_CARD:  
{"cardId":67} 

 Player 2 02:13:34 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":67} 

 Player 2 02:13:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 02:13:34 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":264,"turnPlayerCardId":264,"stackEffectType":13}} 

 Player 2 02:13:34 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 02:13:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 2 02:13:34 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:13:34 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":264,"turnPlayerCardId":264,"stackEffectType":13}} 

 Player 2 02:13:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 2 02:13:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 2 02:13:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:13:34 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:13:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 02:13:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 02:13:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 02:13:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 02:13:35 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:13:35 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 2 02:13:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 2 02:13:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:13:35 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 2 02:13:35 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 2 02:13:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 2 02:13:35 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:13:35 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 02:13:35 $UPDATE_ACTIONS:  

 Player 2 02:13:36 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 02:13:37 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 02:14:08 $NEXT_STACK_ID:  

 Player 2 02:14:08 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:14:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(11) "} 

 Player 2 02:14:08 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":264,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":71,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 02:14:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add PlayLootCardStackEffect 2 "}} 

 Player 2 02:14:08 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":71} 

 Player 2 02:14:08 $MOVE_CARD:  
{"moveIndex":8,"cardId":71,"placeID":278,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 02:14:08 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:14:08 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:14:08 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":71,"flipIfFlipped":true,"playerId":2} 

 Player 2 02:14:08 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":71} 

 Player 2 02:14:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(11): addMoney"} 

 Player 2 02:14:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(11): addMoney"} 

 Player 2 02:14:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:14:08 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 02:14:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(11): addMoney"} 

 Player 2 02:14:08 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":264,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":71,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":71,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 02:14:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding PlayLootCardStackEffect 2"},"childOfId":10} 

 Player 2 02:14:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 2 02:14:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:14:08 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 2 02:14:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 2 02:14:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:14:08 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:14:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(11) "} 

 Player 1 02:14:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(11) "} 

 Player 1 02:14:09 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:14:09 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 2 02:14:09 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 2 02:14:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve PlayLootCardStackEffect 2 "}} 

 Player 2 02:14:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(11): addMoney"} 

 Player 2 02:14:09 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":71,"particleType":6} 

 Player 2 02:14:11 $DISABLE_PARTICLE_EFFECT:  
{"cardId":71,"particleType":6} 

 Player 2 02:14:11 $SET_MONEY:  
{"playerId":2,"numOfCoins":4} 

 Player 2 02:14:11 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":264,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 2 02:14:11 $REMOVE_FROM_PILE:  
{"cardId":71} 

 Player 2 02:14:11 $MOVE_CARD:  
{"moveIndex":9,"cardId":71,"placeID":279,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 02:14:11 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":71,"flipIfFlipped":true,"playerId":2} 

 Player 2 02:14:11 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":71} 

 Player 2 02:14:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(11): addMoney"} 

 Player 2 02:14:11 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":264,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":71,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 02:14:11 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 02:14:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve PlayLootCardStackEffect 2  "}} 

 Player 2 02:14:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:14:11 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":264,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":71,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 02:14:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve PlayLootCardStackEffect 2"},"childOfId":15} 

 Player 2 02:14:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 2 02:14:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:14:11 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:14:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(11) "} 

 Player 1 02:14:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(11) "} 

 Player 1 02:14:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(11) "} 

 Player 1 02:14:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(11) "} 

 Player 1 02:14:12 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:14:12 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 02:14:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 2 02:14:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:14:12 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 2 02:14:12 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 2 02:14:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 2 02:14:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:14:12 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 02:14:13 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 02:14:14 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 02:14:16 $NEXT_STACK_ID:  

 Player 2 02:14:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:14:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Cain"} 

 Player 2 02:14:16 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":264,"hasLockingStackEffect":false,"itemToPlayCardId":264,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 02:14:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add ActivateItem 3 "}} 

 Player 1 02:14:17 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:14:17 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:14:18 $USE_ITEM:  
{"cardId":264} 

 Player 2 02:14:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:14:18 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 02:14:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Cain"} 

 Player 2 02:14:18 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":264,"hasLockingStackEffect":false,"itemToPlayCardId":264,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 02:14:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding ActivateItem 3"},"childOfId":20} 

 Player 2 02:14:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 2 02:14:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:14:18 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 2 02:14:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 2 02:14:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:14:18 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:14:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Cain"} 

 Player 1 02:14:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Cain"} 

 Player 1 02:14:19 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:14:19 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 2 02:14:19 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 2 02:14:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve ActivateItem 3 "}} 

 Player 2 02:14:19 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":264,"particleType":6} 

 Player 2 02:14:21 $DISABLE_PARTICLE_EFFECT:  
{"cardId":264,"particleType":6} 

 Player 2 02:14:21 $NEXT_STACK_ID:  

 Player 2 02:14:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Cain"} 

 Player 2 02:14:21 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":67} 

 Player 2 02:14:21 $MOVE_CARD:  
{"moveIndex":10,"cardId":67,"placeID":278,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 02:14:21 $MOVE_CARD_END:  
{"moveIndex":10,"cardId":67,"flipIfFlipped":true,"playerId":2} 

 Player 2 02:14:21 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":67} 

 Player 2 02:14:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(7): addMoney \n2:Player 2 activated Cain"} 

 Player 2 02:14:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(7): addMoney \n2:Player 2 activated Cain"} 

 Player 2 02:14:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:14:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(7): addMoney \n2:Player 2 activated Cain"} 

 Player 2 02:14:21 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":264,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":67,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":67,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 02:14:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(7): addMoney \n2:Player 2 activated Cain"} 

 Player 2 02:14:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(7): addMoney \n2:Player 2 activated Cain"} 

 Player 2 02:14:21 $REPLACE_STACK:  
{"currentStack":[{"entityId":4,"creatorCardId":264,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":67,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":67,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":3,"creatorCardId":264,"hasLockingStackEffect":false,"itemToPlayCardId":264,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 

 Player 2 02:14:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(7): addMoney \n2:Player 2 activated Cain"} 

 Player 2 02:14:21 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":264,"hasLockingStackEffect":false,"itemToPlayCardId":264,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 02:14:21 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 02:14:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Remove After Resolve ActivateItem 3  "}} 

 Player 2 02:14:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(7): addMoney"} 

 Player 2 02:14:21 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":264,"hasLockingStackEffect":false,"itemToPlayCardId":264,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 02:14:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Response Remove After Resolve ActivateItem 3"},"childOfId":25} 

 Player 2 02:14:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Wait For Response From Player 2 "},"childOfId":25} 

 Player 2 02:14:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:14:22 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 2 02:14:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 1 "},"childOfId":25} 

 Player 2 02:14:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:14:22 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:14:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Cain"} 

 Player 1 02:14:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Cain"} 

 Player 1 02:14:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(7) "} 

 Player 1 02:14:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(7) "} 

 Player 1 02:14:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(7) "} 

 Player 1 02:14:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(7) "} 

 Player 1 02:14:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(7)  \n2:Player 2 activated Cain"} 

 Player 1 02:14:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(7)  \n2:Player 2 activated Cain"} 

 Player 1 02:14:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(7)  \n2:Player 2 activated Cain"} 

 Player 1 02:14:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(7)  \n2:Player 2 activated Cain"} 

 Player 1 02:14:22 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:14:22 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 2 02:14:22 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 2 02:14:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Resolve PlayLootCardStackEffect 4 "}} 

 Player 2 02:14:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(7): addMoney"} 

 Player 2 02:14:22 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":67,"particleType":6} 

 Player 2 02:14:24 $DISABLE_PARTICLE_EFFECT:  
{"cardId":67,"particleType":6} 

 Player 2 02:14:24 $SET_MONEY:  
{"playerId":2,"numOfCoins":4} 

 Player 2 02:14:24 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":264,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 2 02:14:24 $REMOVE_FROM_PILE:  
{"cardId":67} 

 Player 2 02:14:24 $MOVE_CARD:  
{"moveIndex":11,"cardId":67,"placeID":279,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 2 02:14:24 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 02:14:25 $MOVE_CARD_END:  
{"moveIndex":11,"cardId":67,"flipIfFlipped":true,"playerId":2} 

 Player 2 02:14:25 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":67} 

 Player 2 02:14:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(7): addMoney"} 

 Player 2 02:14:25 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":264,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":67,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 02:14:25 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 02:14:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Remove After Resolve PlayLootCardStackEffect 4  "}} 

 Player 2 02:14:25 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:14:25 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":264,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":67,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 02:14:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Response Remove After Resolve PlayLootCardStackEffect 4"},"childOfId":30} 

 Player 2 02:14:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Wait For Response From Player 1 "},"childOfId":30} 

 Player 2 02:14:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:14:25 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:14:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(7) "} 

 Player 1 02:14:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(7) "} 

 Player 1 02:14:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(7) "} 

 Player 1 02:14:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(7) "} 

 Player 1 02:14:25 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:14:25 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 2 02:14:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 2 "},"childOfId":30} 

 Player 2 02:14:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:14:25 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 2 02:14:25 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 2 02:14:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Stack Was Emptied "}} 

 Player 2 02:14:25 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:14:25 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 02:14:27 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 02:14:28 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 02:14:28 $NEXT_STACK_ID:  

 Player 2 02:14:28 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:14:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Sleight Of Hand"} 

 Player 2 02:14:29 $ADD_TO_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":264,"hasLockingStackEffect":false,"itemToPlayCardId":267,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 02:14:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Add ActivateItem 5 "}} 

 Player 1 02:14:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:14:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:14:31 $USE_ITEM:  
{"cardId":267} 

 Player 2 02:14:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:14:31 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 02:14:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Sleight Of Hand"} 

 Player 2 02:14:31 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":264,"hasLockingStackEffect":false,"itemToPlayCardId":267,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 02:14:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Response Adding ActivateItem 5"},"childOfId":35} 

 Player 2 02:14:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Wait For Response From Player 2 "},"childOfId":35} 

 Player 2 02:14:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:14:31 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 2 02:14:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 1 "},"childOfId":35} 

 Player 2 02:14:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:14:31 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:14:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Sleight Of Hand"} 

 Player 1 02:14:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Sleight Of Hand"} 

 Player 1 02:14:31 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:14:31 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 2 02:14:31 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 2 02:14:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Resolve ActivateItem 5 "}} 

 Player 2 02:14:31 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":267,"particleType":6} 

 Player 2 02:14:33 $DISABLE_PARTICLE_EFFECT:  
{"cardId":267,"particleType":6} 

 Player 2 02:14:58 $DECK_ADD_TO_TOP:  
{"deckType":5,"cardId":203} 

 Player 2 02:14:58 $DECK_ADD_TO_TOP:  
{"deckType":5,"cardId":149} 

 Player 2 02:14:58 $DECK_ADD_TO_TOP:  
{"deckType":5,"cardId":158} 

 Player 2 02:14:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Sleight Of Hand"} 

 Player 2 02:14:58 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":264,"hasLockingStackEffect":false,"itemToPlayCardId":267,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 02:14:58 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 02:14:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Remove After Resolve ActivateItem 5  "}} 

 Player 2 02:14:58 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:14:58 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":264,"hasLockingStackEffect":false,"itemToPlayCardId":267,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 02:14:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Response Remove After Resolve ActivateItem 5"},"childOfId":40} 

 Player 2 02:14:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Wait For Response From Player 1 "},"childOfId":40} 

 Player 2 02:14:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:14:58 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:14:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Sleight Of Hand"} 

 Player 1 02:14:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Sleight Of Hand"} 

 Player 1 02:14:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Sleight Of Hand"} 

 Player 1 02:14:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Sleight Of Hand"} 

 Player 1 02:14:59 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:14:59 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 2 02:14:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 2 "},"childOfId":40} 

 Player 2 02:14:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:14:59 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 2 02:14:59 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 2 02:14:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Stack Was Emptied "}} 

 Player 2 02:14:59 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:14:59 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 02:15:01 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 02:15:01 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 02:15:06 $NEXT_STACK_ID:  

 Player 2 02:15:06 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:15:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy TopBlankCard for 10"} 

 Player 2 02:15:06 $ADD_TO_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":264,"itemToPurchaseCardId":0,"playerWhoBuysCardId":264,"cost":10,"stackEffectType":9}} 

 Player 2 02:15:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Add PurchaseItem 6 "}} 

 Player 2 02:15:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:15:06 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 2 02:15:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy TopBlankCard for 10"} 

 Player 2 02:15:06 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":264,"itemToPurchaseCardId":0,"playerWhoBuysCardId":264,"cost":10,"stackEffectType":9}} 

 Player 2 02:15:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Response Adding PurchaseItem 6"},"childOfId":45} 

 Player 2 02:15:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Wait For Response From Player 2 "},"childOfId":45} 

 Player 2 02:15:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:15:06 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 2 02:15:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Wait For Response From Player 1 "},"childOfId":45} 

 Player 2 02:15:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:15:06 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:15:06 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:15:06 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:15:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy TopBlankCard for 10"} 

 Player 1 02:15:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy TopBlankCard for 10"} 

 Player 1 02:15:07 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:15:07 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 2 02:15:07 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 2 02:15:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Resolve PurchaseItem 6 "}} 

 Player 2 02:15:07 $SET_MONEY:  
{"playerId":2,"numOfCoins":-10} 

 Player 2 02:15:07 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-10}],"result":null,"preventMethod":false,"methodScopeId":264,"scopeIsPlayer":true,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 

 Player 2 02:15:07 $DRAW_CARD:  
{"deckType":5} 

 Player 2 02:15:07 $MOVE_CARD:  
{"moveIndex":12,"cardId":158,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 

 Player 1 02:15:07 $MOVE_CARD_END:  
{"moveIndex":12,"cardId":158,"flipIfFlipped":true,"playerId":2} 

 Player 2 02:15:07 $ADD_AN_ITEM:  
{"playerId":2,"cardId":158,"isReward":false} 

 Player 2 02:15:07 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":158}],"result":true,"preventMethod":false,"methodScopeId":264,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 

 Player 2 02:15:07 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 2 02:15:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Remove After Resolve PurchaseItem 6  "}} 

 Player 2 02:15:07 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:15:07 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":264,"itemToPurchaseCardId":0,"playerWhoBuysCardId":264,"cost":10,"stackEffectType":9}} 

 Player 2 02:15:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Response Remove After Resolve PurchaseItem 6"},"childOfId":50} 

 Player 2 02:15:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Wait For Response From Player 1 "},"childOfId":50} 

 Player 2 02:15:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:15:07 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:15:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy TopBlankCard for 10"} 

 Player 1 02:15:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy TopBlankCard for 10"} 

 Player 1 02:15:08 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:15:08 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 2 02:15:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Wait For Response From Player 2 "},"childOfId":50} 

 Player 2 02:15:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:15:08 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 2 02:15:08 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 2 02:15:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Stack Was Emptied "}} 

 Player 2 02:15:08 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:15:08 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 2 02:15:09 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 2 02:15:10 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 2 02:15:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:15:10 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:15:10 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 2 02:15:10 $END_TURN:  

 Player 2 02:15:10 $SET_TURN:  
{"playerId":1} 

 Player 2 02:15:10 $START_TURN:  
{"playerId":1} 

 Player 1 02:15:10 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:15:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:15:11 $NEXT_STACK_ID:  

 Player 1 02:15:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:15:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 02:15:11 $ADD_TO_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":268,"turnPlayerCardId":268,"stackEffectType":13}} 

 Player 1 02:15:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 7 "}} 

 Player 1 02:15:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:15:11 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 02:15:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 02:15:11 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":268,"turnPlayerCardId":268,"stackEffectType":13}} 

 Player 1 02:15:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 7"},"childOfId":0} 

 Player 1 02:15:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 1 02:15:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:15:11 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 02:15:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 1 02:15:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:15:11 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:15:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:15:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:15:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:15:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:15:11 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:15:11 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 02:15:11 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 02:15:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 7 "}} 

 Player 1 02:15:11 $DRAW_CARD:  
{"deckType":1} 

 Player 1 02:15:11 $MOVE_CARD:  
{"moveIndex":13,"cardId":83,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 02:15:12 $MOVE_CARD_END:  
{"moveIndex":13,"cardId":83,"flipIfFlipped":false,"playerId":1} 

 Player 1 02:15:12 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":83} 

 Player 1 02:15:12 $FLIP_CARD:  
{"cardId":83} 

 Player 1 02:15:12 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":83} 

 Player 1 02:15:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 02:15:12 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":268,"turnPlayerCardId":268,"stackEffectType":13}} 

 Player 1 02:15:12 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 02:15:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 7  "}} 

 Player 1 02:15:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:15:12 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":268,"turnPlayerCardId":268,"stackEffectType":13}} 

 Player 1 02:15:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 7"},"childOfId":5} 

 Player 1 02:15:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 1 02:15:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:15:12 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:15:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:15:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:15:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:15:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:15:12 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:15:12 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 1 02:15:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 1 02:15:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:15:12 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 1 02:15:12 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 1 02:15:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 1 02:15:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:15:13 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 02:15:14 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 02:15:15 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 02:15:32 $NEXT_STACK_ID:  

 Player 1 02:15:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:15:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Blank Rune "} 

 Player 1 02:15:32 $ADD_TO_STACK:  
{"stackEffect":{"entityId":8,"creatorCardId":268,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"lootToPlayCardId":84,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 02:15:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add PlayLootCardStackEffect 8 "}} 

 Player 1 02:15:33 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":84} 

 Player 1 02:15:33 $MOVE_CARD:  
{"moveIndex":14,"cardId":84,"placeID":278,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 02:15:33 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:15:33 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:15:33 $MOVE_CARD_END:  
{"moveIndex":14,"cardId":84,"flipIfFlipped":true,"playerId":1} 

 Player 1 02:15:33 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":84} 

 Player 1 02:15:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:15:33 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 02:15:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Blank Rune "} 

 Player 1 02:15:33 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":268,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"lootToPlayCardId":84,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 02:15:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding PlayLootCardStackEffect 8"},"childOfId":10} 

 Player 1 02:15:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 1 02:15:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:15:33 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 1 02:15:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 1 02:15:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:15:33 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:15:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Blank Rune "} 

 Player 2 02:15:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Blank Rune "} 

 Player 2 02:15:33 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:15:33 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 1 02:15:34 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 1 02:15:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve PlayLootCardStackEffect 8 "}} 

 Player 1 02:15:34 $NEXT_STACK_ID:  

 Player 1 02:15:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Blank Rune "} 

 Player 1 02:15:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Blank Rune  \n2:Player 1 roll a dice"} 

 Player 1 02:15:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Blank Rune  \n2:Player 1 roll a dice"} 

 Player 1 02:15:34 $ADD_TO_STACK:  
{"stackEffect":{"entityId":9,"creatorCardId":268,"stackEffectToLock":{"entityId":8,"creatorCardId":268,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"lootToPlayCardId":84,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8},"hasLockingStackEffect":false,"stackEffectType":11}} 

 Player 1 02:15:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Add RollDiceStackEffect 9 "}} 

 Player 1 02:15:34 $ROLL_DICE:  
{"playerId":1} 

 Player 2 02:15:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Blank Rune "} 

 Player 2 02:15:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Blank Rune "} 

 Player 2 02:15:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Blank Rune "} 

 Player 2 02:15:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Blank Rune "} 

 Player 1 02:15:35 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":6} 

 Player 1 02:15:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Blank Rune  \n2:Player 1 rolled 6"} 

 Player 1 02:15:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:15:35 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 02:15:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Blank Rune  \n2:Player 1 rolled 6"} 

 Player 1 02:15:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Blank Rune  \n2:Player 1 rolled 6"} 

 Player 1 02:15:35 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":268,"stackEffectToLock":{"entityId":8,"creatorCardId":268,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"lootToPlayCardId":84,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8},"hasLockingStackEffect":false,"numberRolled":6,"stackEffectType":11}} 

 Player 1 02:15:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Adding RollDiceStackEffect 9"},"childOfId":15} 

 Player 1 02:15:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 1 02:15:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:15:35 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 1 02:15:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 1 02:15:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:15:35 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:15:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Blank Rune  \n2:Player 1 roll a dice"} 

 Player 2 02:15:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Blank Rune  \n2:Player 1 roll a dice"} 

 Player 2 02:15:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Blank Rune  \n2:Player 1 roll a dice"} 

 Player 2 02:15:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Blank Rune  \n2:Player 1 roll a dice"} 

 Player 2 02:15:35 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:15:35 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 1 02:15:35 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 1 02:15:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Resolve RollDiceStackEffect 9 "}} 

 Player 1 02:15:35 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":6},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":268,"scopeIsPlayer":true,"index":2,"originStackId":9},"isAfterActivation":true,"index":2} 

 Player 1 02:15:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Blank Rune  \n2:Player 1 rolled 6"} 

 Player 1 02:15:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Blank Rune  \n2:Player 1 rolled 6"} 

 Player 1 02:15:36 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":268,"stackEffectToLock":{"entityId":8,"creatorCardId":268,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"lootToPlayCardId":84,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8},"hasLockingStackEffect":false,"numberRolled":6,"stackEffectType":11}} 

 Player 1 02:15:36 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 02:15:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Remove After Resolve RollDiceStackEffect 9  "}} 

 Player 1 02:15:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Blank Rune "} 

 Player 1 02:15:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Blank Rune "} 

 Player 1 02:15:36 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":9,"creatorCardId":268,"stackEffectToLock":{"entityId":8,"creatorCardId":268,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"lootToPlayCardId":84,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8},"hasLockingStackEffect":false,"numberRolled":6,"stackEffectType":11}} 

 Player 1 02:15:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Remove After Resolve RollDiceStackEffect 9"},"childOfId":20} 

 Player 1 02:15:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 1 02:15:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:15:36 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:15:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Blank Rune  \n2:Player 1 roll a dice"} 

 Player 2 02:15:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Blank Rune  \n2:Player 1 roll a dice"} 

 Player 2 02:15:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Blank Rune  \n2:Player 1 roll a dice"} 

 Player 2 02:15:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Blank Rune  \n2:Player 1 roll a dice"} 

 Player 2 02:15:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Blank Rune  \n2:Player 1 roll a dice"} 

 Player 2 02:15:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Blank Rune  \n2:Player 1 roll a dice"} 

 Player 2 02:15:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Blank Rune  \n2:Player 1 roll a dice"} 

 Player 2 02:15:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Blank Rune  \n2:Player 1 roll a dice"} 

 Player 2 02:15:36 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:15:36 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 1 02:15:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 1 02:15:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:15:36 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 1 02:15:36 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 1 02:15:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve PlayLootCardStackEffect 8 "}} 

 Player 1 02:15:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Blank Rune: addMoney"} 

 Player 1 02:15:36 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":84,"particleType":6} 

 Player 1 02:15:38 $DISABLE_PARTICLE_EFFECT:  
{"cardId":84,"particleType":6} 

 Player 1 02:15:38 $SET_MONEY:  
{"playerId":1,"numOfCoins":6} 

 Player 1 02:15:38 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":6}],"result":null,"preventMethod":false,"methodScopeId":268,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 1 02:15:38 $SET_MONEY:  
{"playerId":2,"numOfCoins":6} 

 Player 1 02:15:38 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":6}],"result":null,"preventMethod":false,"methodScopeId":264,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 1 02:15:38 $REMOVE_FROM_PILE:  
{"cardId":84} 

 Player 1 02:15:38 $MOVE_CARD:  
{"moveIndex":15,"cardId":84,"placeID":279,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 1 02:15:38 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 02:15:39 $MOVE_CARD_END:  
{"moveIndex":15,"cardId":84,"flipIfFlipped":true,"playerId":1} 

 Player 1 02:15:39 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":84} 

 Player 1 02:15:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Blank Rune: addMoney"} 

 Player 1 02:15:39 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":268,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"lootToPlayCardId":84,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 02:15:39 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 02:15:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Remove After Resolve PlayLootCardStackEffect 8  "}} 

 Player 1 02:15:39 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:15:39 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":8,"creatorCardId":268,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"lootToPlayCardId":84,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 02:15:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Response Remove After Resolve PlayLootCardStackEffect 8"},"childOfId":25} 

 Player 1 02:15:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Wait For Response From Player 1 "},"childOfId":25} 

 Player 1 02:15:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:15:39 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 1 02:15:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":25} 

 Player 1 02:15:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:15:39 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:15:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Blank Rune "} 

 Player 2 02:15:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Blank Rune "} 

 Player 2 02:15:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Blank Rune "} 

 Player 2 02:15:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Blank Rune "} 

 Player 2 02:15:39 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:15:39 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 1 02:15:39 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 1 02:15:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Stack Was Emptied "}} 

 Player 1 02:15:39 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:15:39 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 02:15:39 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 02:15:41 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 1 02:15:42 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 02:17:55 $NEXT_STACK_ID:  

 Player 1 02:17:55 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:17:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Isaac"} 

 Player 1 02:17:55 $ADD_TO_STACK:  
{"stackEffect":{"entityId":10,"creatorCardId":268,"hasLockingStackEffect":false,"itemToPlayCardId":268,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 02:17:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Add ActivateItem 10 "}} 

 Player 2 02:17:55 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:17:55 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:17:57 $USE_ITEM:  
{"cardId":268} 

 Player 1 02:17:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:17:57 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 02:17:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Isaac"} 

 Player 1 02:17:57 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":268,"hasLockingStackEffect":false,"itemToPlayCardId":268,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 02:17:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Response Adding ActivateItem 10"},"childOfId":30} 

 Player 1 02:17:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Wait For Response From Player 1 "},"childOfId":30} 

 Player 1 02:17:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:17:58 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 1 02:17:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 2 "},"childOfId":30} 

 Player 1 02:17:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:17:58 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:17:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Isaac"} 

 Player 2 02:17:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Isaac"} 

 Player 2 02:17:58 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:17:58 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 1 02:17:58 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 1 02:17:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Resolve ActivateItem 10 "}} 

 Player 1 02:17:58 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":268,"particleType":6} 

 Player 1 02:18:00 $DISABLE_PARTICLE_EFFECT:  
{"cardId":268,"particleType":6} 

 Player 1 02:18:00 $NEXT_STACK_ID:  

 Player 1 02:18:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Isaac"} 

 Player 1 02:18:00 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":15} 

 Player 1 02:18:00 $MOVE_CARD:  
{"moveIndex":16,"cardId":15,"placeID":278,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 02:18:00 $MOVE_CARD_END:  
{"moveIndex":16,"cardId":15,"flipIfFlipped":true,"playerId":1} 

 Player 1 02:18:00 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":15} 

 Player 1 02:18:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 1 Penny(7): addMoney \n2:Player 1 activated Isaac"} 

 Player 1 02:18:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 1 Penny(7): addMoney \n2:Player 1 activated Isaac"} 

 Player 1 02:18:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:18:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 1 Penny(7): addMoney \n2:Player 1 activated Isaac"} 

 Player 1 02:18:00 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":11,"creatorCardId":268,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":15,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":15,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 02:18:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 1 Penny(7): addMoney \n2:Player 1 activated Isaac"} 

 Player 1 02:18:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 1 Penny(7): addMoney \n2:Player 1 activated Isaac"} 

 Player 1 02:18:01 $REPLACE_STACK:  
{"currentStack":[{"entityId":11,"creatorCardId":268,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":15,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":15,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":10,"creatorCardId":268,"hasLockingStackEffect":false,"itemToPlayCardId":268,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 

 Player 1 02:18:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 1 Penny(7): addMoney \n2:Player 1 activated Isaac"} 

 Player 1 02:18:01 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":268,"hasLockingStackEffect":false,"itemToPlayCardId":268,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 02:18:01 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 1 02:18:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Remove After Resolve ActivateItem 10  "}} 

 Player 1 02:18:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 1 Penny(7): addMoney"} 

 Player 1 02:18:01 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":10,"creatorCardId":268,"hasLockingStackEffect":false,"itemToPlayCardId":268,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 02:18:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Response Remove After Resolve ActivateItem 10"},"childOfId":35} 

 Player 1 02:18:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Wait For Response From Player 1 "},"childOfId":35} 

 Player 1 02:18:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:18:01 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 1 02:18:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 2 "},"childOfId":35} 

 Player 1 02:18:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:18:01 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:18:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Isaac"} 

 Player 2 02:18:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Isaac"} 

 Player 2 02:18:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 1 Penny(7) "} 

 Player 2 02:18:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 1 Penny(7) "} 

 Player 2 02:18:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 1 Penny(7) "} 

 Player 2 02:18:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 1 Penny(7) "} 

 Player 2 02:18:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 1 Penny(7)  \n2:Player 1 activated Isaac"} 

 Player 2 02:18:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 1 Penny(7)  \n2:Player 1 activated Isaac"} 

 Player 2 02:18:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 1 Penny(7)  \n2:Player 1 activated Isaac"} 

 Player 2 02:18:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 1 Penny(7)  \n2:Player 1 activated Isaac"} 

 Player 2 02:18:01 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:18:01 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 1 02:18:01 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 1 02:18:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Resolve PlayLootCardStackEffect 11 "}} 

 Player 1 02:18:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 1 Penny(7): addMoney"} 

 Player 1 02:18:01 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":15,"particleType":6} 

 Player 1 02:18:03 $DISABLE_PARTICLE_EFFECT:  
{"cardId":15,"particleType":6} 

 Player 1 02:18:03 $SET_MONEY:  
{"playerId":1,"numOfCoins":1} 

 Player 1 02:18:03 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":1}],"result":null,"preventMethod":false,"methodScopeId":268,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 1 02:18:03 $REMOVE_FROM_PILE:  
{"cardId":15} 

 Player 1 02:18:03 $MOVE_CARD:  
{"moveIndex":17,"cardId":15,"placeID":279,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 1 02:18:03 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 02:18:04 $MOVE_CARD_END:  
{"moveIndex":17,"cardId":15,"flipIfFlipped":true,"playerId":1} 

 Player 1 02:18:04 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":15} 

 Player 1 02:18:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 1 Penny(7): addMoney"} 

 Player 1 02:18:04 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":11,"creatorCardId":268,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":15,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 02:18:04 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 1 02:18:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Remove After Resolve PlayLootCardStackEffect 11  "}} 

 Player 1 02:18:04 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:18:04 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":11,"creatorCardId":268,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":15,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 02:18:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Response Remove After Resolve PlayLootCardStackEffect 11"},"childOfId":40} 

 Player 1 02:18:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Wait For Response From Player 2 "},"childOfId":40} 

 Player 1 02:18:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:18:04 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:18:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 1 Penny(7) "} 

 Player 2 02:18:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 1 Penny(7) "} 

 Player 2 02:18:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 1 Penny(7) "} 

 Player 2 02:18:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 1 Penny(7) "} 

 Player 2 02:18:04 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:18:04 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 1 02:18:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 1 "},"childOfId":40} 

 Player 1 02:18:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:18:04 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 1 02:18:04 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 1 02:18:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Stack Was Emptied "}} 

 Player 1 02:18:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:18:05 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 1 02:18:06 $NEXT_STACK_ID:  

 Player 1 02:18:06 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:18:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy TopBlankCard for 10"} 

 Player 1 02:18:06 $ADD_TO_STACK:  
{"stackEffect":{"entityId":12,"creatorCardId":268,"itemToPurchaseCardId":0,"playerWhoBuysCardId":268,"cost":10,"stackEffectType":9}} 

 Player 1 02:18:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Add PurchaseItem 12 "}} 

 Player 1 02:18:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:18:06 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 1 02:18:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy TopBlankCard for 10"} 

 Player 1 02:18:06 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":12,"creatorCardId":268,"itemToPurchaseCardId":0,"playerWhoBuysCardId":268,"cost":10,"stackEffectType":9}} 

 Player 1 02:18:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Response Adding PurchaseItem 12"},"childOfId":45} 

 Player 1 02:18:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Wait For Response From Player 1 "},"childOfId":45} 

 Player 1 02:18:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:18:06 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 1 02:18:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Wait For Response From Player 2 "},"childOfId":45} 

 Player 1 02:18:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:18:06 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:18:06 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:18:06 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:18:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy TopBlankCard for 10"} 

 Player 2 02:18:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy TopBlankCard for 10"} 

 Player 2 02:18:06 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:18:06 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 1 02:18:06 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 1 02:18:06 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 1 02:18:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Resolve PurchaseItem 12 "}} 

 Player 1 02:18:06 $SET_MONEY:  
{"playerId":1,"numOfCoins":-10} 

 Player 1 02:18:06 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-10}],"result":null,"preventMethod":false,"methodScopeId":268,"scopeIsPlayer":true,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 

 Player 1 02:18:06 $DRAW_CARD:  
{"deckType":5} 

 Player 1 02:18:07 $MOVE_CARD:  
{"moveIndex":18,"cardId":149,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 

 Player 1 02:18:07 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 02:18:07 $MOVE_CARD_END:  
{"moveIndex":18,"cardId":149,"flipIfFlipped":true,"playerId":1} 

 Player 1 02:18:07 $ADD_AN_ITEM:  
{"playerId":1,"cardId":149,"isReward":false} 

 Player 1 02:18:07 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":149}],"result":true,"preventMethod":false,"methodScopeId":268,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 

 Player 1 02:18:07 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 1 02:18:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Remove After Resolve PurchaseItem 12  "}} 

 Player 1 02:18:07 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:18:07 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":12,"creatorCardId":268,"itemToPurchaseCardId":0,"playerWhoBuysCardId":268,"cost":10,"stackEffectType":9}} 

 Player 1 02:18:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Response Remove After Resolve PurchaseItem 12"},"childOfId":50} 

 Player 1 02:18:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Wait For Response From Player 2 "},"childOfId":50} 

 Player 1 02:18:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:18:07 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:18:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy TopBlankCard for 10"} 

 Player 2 02:18:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy TopBlankCard for 10"} 

 Player 2 02:18:07 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:18:08 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 1 02:18:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Wait For Response From Player 1 "},"childOfId":50} 

 Player 1 02:18:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:18:08 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 1 02:18:08 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 1 02:18:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Stack Was Emptied "}} 

 Player 1 02:18:08 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:18:08 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 1 02:18:09 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 1 02:18:10 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 1 02:18:31 $NEXT_STACK_ID:  

 Player 1 02:18:31 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:18:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Widow"} 

 Player 1 02:18:31 $ADD_TO_STACK:  
{"stackEffect":{"entityId":13,"creatorCardId":268,"attackingPlayerCardId":268,"idOfCardBeingAttacked":258,"stackEffectType":4}} 

 Player 1 02:18:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Add DeclareAttack 13 "}} 

 Player 1 02:18:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:18:31 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 1 02:18:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Widow"} 

 Player 1 02:18:31 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":13,"creatorCardId":268,"attackingPlayerCardId":268,"idOfCardBeingAttacked":258,"stackEffectType":4}} 

 Player 1 02:18:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":56,"_text":"Response Adding DeclareAttack 13"},"childOfId":55} 

 Player 1 02:18:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":57,"_text":"Wait For Response From Player 1 "},"childOfId":55} 

 Player 1 02:18:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:18:31 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 1 02:18:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":58,"_text":"Wait For Response From Player 2 "},"childOfId":55} 

 Player 1 02:18:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:18:31 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:18:31 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:18:31 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:18:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Widow"} 

 Player 2 02:18:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Widow"} 

 Player 2 02:18:31 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:18:31 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 1 02:18:32 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 1 02:18:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":59,"_text":"Resolve DeclareAttack 13 "}} 

 Player 1 02:18:32 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":258,"particleType":5} 

 Player 1 02:18:32 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":268,"scopeIsPlayer":true,"index":8,"originStackId":13},"isAfterActivation":true,"index":8} 

 Player 1 02:18:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Widow"} 

 Player 1 02:18:32 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":13,"creatorCardId":268,"attackingPlayerCardId":268,"idOfCardBeingAttacked":258,"stackEffectType":4}} 

 Player 1 02:18:32 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 1 02:18:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":60,"_text":"Remove After Resolve DeclareAttack 13  "}} 

 Player 1 02:18:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:18:32 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":13,"creatorCardId":268,"attackingPlayerCardId":268,"idOfCardBeingAttacked":258,"stackEffectType":4}} 

 Player 1 02:18:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":61,"_text":"Response Remove After Resolve DeclareAttack 13"},"childOfId":60} 

 Player 1 02:18:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":62,"_text":"Wait For Response From Player 2 "},"childOfId":60} 

 Player 1 02:18:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:18:32 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:18:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Widow"} 

 Player 2 02:18:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Widow"} 

 Player 2 02:18:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Widow"} 

 Player 2 02:18:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Widow"} 

 Player 2 02:18:32 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:18:32 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 1 02:18:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":63,"_text":"Wait For Response From Player 1 "},"childOfId":60} 

 Player 1 02:18:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:18:32 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 1 02:18:32 $ACTION_MASSAGE_REMOVE:  
{"id":61} 

 Player 1 02:18:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":64,"_text":"Stack Was Emptied "}} 

 Player 1 02:18:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:18:32 $ACTION_MASSAGE_REMOVE:  
{"id":60} 

 Player 1 02:18:34 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 1 02:18:35 $ACTION_MASSAGE_REMOVE:  
{"id":60} 

 Player 1 02:18:36 $NEXT_STACK_ID:  

 Player 1 02:18:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:18:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Widow<Monster>"} 

 Player 1 02:18:36 $ADD_TO_STACK:  
{"stackEffect":{"entityId":14,"creatorCardId":268,"rollingPlayerCardId":268,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 1 02:18:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":65,"_text":"Add AttackRoll 14 "}} 

 Player 1 02:18:36 $ROLL_DICE:  
{"playerId":1} 

 Player 2 02:18:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:18:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:18:38 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":6} 

 Player 1 02:18:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Widow<Monster>"} 

 Player 1 02:18:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:18:38 $ACTION_MASSAGE_REMOVE:  
{"id":65} 

 Player 1 02:18:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Widow<Monster>"} 

 Player 1 02:18:38 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":14,"creatorCardId":268,"numberRolled":6,"rollingPlayerCardId":268,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 1 02:18:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":66,"_text":"Response Adding AttackRoll 14"},"childOfId":65} 

 Player 1 02:18:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":67,"_text":"Wait For Response From Player 1 "},"childOfId":65} 

 Player 1 02:18:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:18:38 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 1 02:18:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":68,"_text":"Wait For Response From Player 2 "},"childOfId":65} 

 Player 1 02:18:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:18:38 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:18:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Widow<Monster>"} 

 Player 2 02:18:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Widow<Monster>"} 

 Player 2 02:18:38 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:18:38 $ACTION_MASSAGE_REMOVE:  
{"id":68} 

 Player 1 02:18:38 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 1 02:18:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":69,"_text":"Resolve AttackRoll 14 "}} 

 Player 1 02:18:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":70,"_text":"Added 0 to original roll"}} 

 Player 1 02:18:38 $NEXT_STACK_ID:  

 Player 1 02:18:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Widow<Monster>"} 

 Player 1 02:18:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:18:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 1 rolled 6 vs Widow<Monster>"} 

 Player 1 02:18:39 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":15,"creatorCardId":268,"entityToDoDamageCardId":268,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 02:18:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 1 rolled 6 vs Widow<Monster>"} 

 Player 1 02:18:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 1 rolled 6 vs Widow<Monster>"} 

 Player 1 02:18:39 $REPLACE_STACK:  
{"currentStack":[{"entityId":15,"creatorCardId":268,"entityToDoDamageCardId":268,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":14,"creatorCardId":268,"numberRolled":6,"rollingPlayerCardId":268,"stackEffectType":2,"attackedMonsterCardId":258}]} 

 Player 1 02:18:39 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":6},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":268,"scopeIsPlayer":true,"index":9,"originStackId":14},"isAfterActivation":true,"index":9} 

 Player 1 02:18:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 1 rolled 6 vs Widow<Monster>"} 

 Player 1 02:18:39 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":14,"creatorCardId":268,"numberRolled":6,"rollingPlayerCardId":268,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 1 02:18:39 $ACTION_MASSAGE_REMOVE:  
{"id":69} 

 Player 1 02:18:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":71,"_text":"Remove After Resolve AttackRoll 14  "}} 

 Player 1 02:18:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow"} 

 Player 1 02:18:39 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":14,"creatorCardId":268,"numberRolled":6,"rollingPlayerCardId":268,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 1 02:18:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":72,"_text":"Response Remove After Resolve AttackRoll 14"},"childOfId":71} 

 Player 1 02:18:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":73,"_text":"Wait For Response From Player 1 "},"childOfId":71} 

 Player 1 02:18:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:18:39 $ACTION_MASSAGE_REMOVE:  
{"id":73} 

 Player 1 02:18:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":74,"_text":"Wait For Response From Player 2 "},"childOfId":71} 

 Player 1 02:18:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:18:39 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:18:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Widow<Monster>"} 

 Player 2 02:18:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Widow<Monster>"} 

 Player 2 02:18:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow"} 

 Player 2 02:18:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow"} 

 Player 2 02:18:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow"} 

 Player 2 02:18:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow"} 

 Player 2 02:18:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 1 is rolling against Widow<Monster>"} 

 Player 2 02:18:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 1 is rolling against Widow<Monster>"} 

 Player 2 02:18:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 1 is rolling against Widow<Monster>"} 

 Player 2 02:18:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 1 is rolling against Widow<Monster>"} 

 Player 2 02:18:39 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:18:39 $ACTION_MASSAGE_REMOVE:  
{"id":74} 

 Player 1 02:18:40 $ACTION_MASSAGE_REMOVE:  
{"id":72} 

 Player 1 02:18:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":75,"_text":"Resolve CombatDamage 15 "}} 

 Player 1 02:18:40 $MONSTER_GET_DAMAGED:  
{"cardId":258,"hpLeft":2,"damageDealerId":268} 

 Player 1 02:18:40 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":268}],"result":null,"preventMethod":false,"methodScopeId":258,"scopeIsPlayer":false,"index":10,"originStackId":-1},"isAfterActivation":true,"index":10} 

 Player 1 02:18:40 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":6},{"type":0,"number":268},{"type":0,"number":258}],"result":null,"preventMethod":false,"methodScopeId":268,"scopeIsPlayer":true,"index":11,"originStackId":15},"isAfterActivation":true,"index":11} 

 Player 1 02:18:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow"} 

 Player 1 02:18:40 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":15,"creatorCardId":268,"entityToDoDamageCardId":268,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 02:18:40 $ACTION_MASSAGE_REMOVE:  
{"id":75} 

 Player 1 02:18:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":76,"_text":"Remove After Resolve CombatDamage 15  "}} 

 Player 1 02:18:40 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:18:40 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":15,"creatorCardId":268,"entityToDoDamageCardId":268,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 02:18:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":77,"_text":"Response Remove After Resolve CombatDamage 15"},"childOfId":76} 

 Player 1 02:18:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":78,"_text":"Wait For Response From Player 2 "},"childOfId":76} 

 Player 1 02:18:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:18:40 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:18:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow"} 

 Player 2 02:18:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow"} 

 Player 2 02:18:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow"} 

 Player 2 02:18:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow"} 

 Player 2 02:18:40 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:18:40 $ACTION_MASSAGE_REMOVE:  
{"id":78} 

 Player 1 02:18:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":79,"_text":"Wait For Response From Player 1 "},"childOfId":76} 

 Player 1 02:18:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:18:40 $ACTION_MASSAGE_REMOVE:  
{"id":79} 

 Player 1 02:18:40 $ACTION_MASSAGE_REMOVE:  
{"id":77} 

 Player 1 02:18:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":80,"_text":"Stack Was Emptied "}} 

 Player 1 02:18:40 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:18:40 $ACTION_MASSAGE_REMOVE:  
{"id":69} 

 Player 1 02:18:40 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 1 02:18:41 $ACTION_MASSAGE_REMOVE:  
{"id":70} 

 Player 1 02:18:41 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 1 02:18:42 $ACTION_MASSAGE_REMOVE:  
{"id":80} 

 Player 1 02:18:43 $ACTION_MASSAGE_REMOVE:  
{"id":76} 

 Player 1 02:18:43 $NEXT_STACK_ID:  

 Player 1 02:18:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:18:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Widow<Monster>"} 

 Player 1 02:18:43 $ADD_TO_STACK:  
{"stackEffect":{"entityId":16,"creatorCardId":268,"rollingPlayerCardId":268,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 1 02:18:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":81,"_text":"Add AttackRoll 16 "}} 

 Player 1 02:18:43 $ROLL_DICE:  
{"playerId":1} 

 Player 2 02:18:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:18:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:18:45 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":6} 

 Player 1 02:18:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Widow<Monster>"} 

 Player 1 02:18:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:18:46 $ACTION_MASSAGE_REMOVE:  
{"id":81} 

 Player 1 02:18:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Widow<Monster>"} 

 Player 1 02:18:46 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":16,"creatorCardId":268,"numberRolled":6,"rollingPlayerCardId":268,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 1 02:18:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":82,"_text":"Response Adding AttackRoll 16"},"childOfId":81} 

 Player 1 02:18:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":83,"_text":"Wait For Response From Player 1 "},"childOfId":81} 

 Player 1 02:18:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:18:46 $ACTION_MASSAGE_REMOVE:  
{"id":83} 

 Player 1 02:18:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":84,"_text":"Wait For Response From Player 2 "},"childOfId":81} 

 Player 1 02:18:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:18:46 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:18:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Widow<Monster>"} 

 Player 2 02:18:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Widow<Monster>"} 

 Player 2 02:18:46 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:18:46 $ACTION_MASSAGE_REMOVE:  
{"id":84} 

 Player 1 02:18:46 $ACTION_MASSAGE_REMOVE:  
{"id":82} 

 Player 1 02:18:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":85,"_text":"Resolve AttackRoll 16 "}} 

 Player 1 02:18:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":86,"_text":"Added 0 to original roll"}} 

 Player 1 02:18:46 $NEXT_STACK_ID:  

 Player 1 02:18:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Widow<Monster>"} 

 Player 1 02:18:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:18:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 1 rolled 6 vs Widow<Monster>"} 

 Player 1 02:18:46 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":17,"creatorCardId":268,"entityToDoDamageCardId":268,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 02:18:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 1 rolled 6 vs Widow<Monster>"} 

 Player 1 02:18:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 1 rolled 6 vs Widow<Monster>"} 

 Player 1 02:18:46 $REPLACE_STACK:  
{"currentStack":[{"entityId":17,"creatorCardId":268,"entityToDoDamageCardId":268,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":16,"creatorCardId":268,"numberRolled":6,"rollingPlayerCardId":268,"stackEffectType":2,"attackedMonsterCardId":258}]} 

 Player 1 02:18:46 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":6},{"type":2,"number":1},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":268,"scopeIsPlayer":true,"index":12,"originStackId":16},"isAfterActivation":true,"index":12} 

 Player 1 02:18:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 1 rolled 6 vs Widow<Monster>"} 

 Player 1 02:18:46 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":16,"creatorCardId":268,"numberRolled":6,"rollingPlayerCardId":268,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 1 02:18:46 $ACTION_MASSAGE_REMOVE:  
{"id":85} 

 Player 1 02:18:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":87,"_text":"Remove After Resolve AttackRoll 16  "}} 

 Player 1 02:18:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow"} 

 Player 1 02:18:46 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":16,"creatorCardId":268,"numberRolled":6,"rollingPlayerCardId":268,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 1 02:18:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":88,"_text":"Response Remove After Resolve AttackRoll 16"},"childOfId":87} 

 Player 1 02:18:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":89,"_text":"Wait For Response From Player 1 "},"childOfId":87} 

 Player 1 02:18:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:18:47 $ACTION_MASSAGE_REMOVE:  
{"id":89} 

 Player 1 02:18:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":90,"_text":"Wait For Response From Player 2 "},"childOfId":87} 

 Player 1 02:18:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:18:47 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:18:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Widow<Monster>"} 

 Player 2 02:18:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Widow<Monster>"} 

 Player 2 02:18:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow"} 

 Player 2 02:18:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow"} 

 Player 2 02:18:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow"} 

 Player 2 02:18:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow"} 

 Player 2 02:18:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 1 is rolling against Widow<Monster>"} 

 Player 2 02:18:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 1 is rolling against Widow<Monster>"} 

 Player 2 02:18:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 1 is rolling against Widow<Monster>"} 

 Player 2 02:18:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 1 is rolling against Widow<Monster>"} 

 Player 2 02:18:47 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:18:47 $ACTION_MASSAGE_REMOVE:  
{"id":90} 

 Player 1 02:18:47 $ACTION_MASSAGE_REMOVE:  
{"id":88} 

 Player 1 02:18:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":91,"_text":"Resolve CombatDamage 17 "}} 

 Player 1 02:18:47 $MONSTER_GET_DAMAGED:  
{"cardId":258,"hpLeft":1,"damageDealerId":268} 

 Player 1 02:18:47 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":268}],"result":null,"preventMethod":false,"methodScopeId":258,"scopeIsPlayer":false,"index":13,"originStackId":-1},"isAfterActivation":true,"index":13} 

 Player 1 02:18:47 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":6},{"type":0,"number":268},{"type":0,"number":258}],"result":null,"preventMethod":false,"methodScopeId":268,"scopeIsPlayer":true,"index":14,"originStackId":17},"isAfterActivation":true,"index":14} 

 Player 1 02:18:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow"} 

 Player 1 02:18:47 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":17,"creatorCardId":268,"entityToDoDamageCardId":268,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 02:18:47 $ACTION_MASSAGE_REMOVE:  
{"id":91} 

 Player 1 02:18:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":92,"_text":"Remove After Resolve CombatDamage 17  "}} 

 Player 1 02:18:47 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:18:47 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":17,"creatorCardId":268,"entityToDoDamageCardId":268,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 02:18:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":93,"_text":"Response Remove After Resolve CombatDamage 17"},"childOfId":92} 

 Player 1 02:18:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":94,"_text":"Wait For Response From Player 2 "},"childOfId":92} 

 Player 1 02:18:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:18:48 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:18:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow"} 

 Player 2 02:18:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow"} 

 Player 2 02:18:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow"} 

 Player 2 02:18:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow"} 

 Player 2 02:18:48 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:18:48 $ACTION_MASSAGE_REMOVE:  
{"id":94} 

 Player 1 02:18:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":95,"_text":"Wait For Response From Player 1 "},"childOfId":92} 

 Player 1 02:18:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:18:48 $ACTION_MASSAGE_REMOVE:  
{"id":95} 

 Player 1 02:18:48 $ACTION_MASSAGE_REMOVE:  
{"id":93} 

 Player 1 02:18:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":96,"_text":"Stack Was Emptied "}} 

 Player 1 02:18:48 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:18:48 $ACTION_MASSAGE_REMOVE:  
{"id":85} 

 Player 1 02:18:48 $ACTION_MASSAGE_REMOVE:  
{"id":87} 

 Player 1 02:18:49 $ACTION_MASSAGE_REMOVE:  
{"id":86} 

 Player 1 02:18:49 $ACTION_MASSAGE_REMOVE:  
{"id":87} 

 Player 1 02:18:49 $ACTION_MASSAGE_REMOVE:  
{"id":96} 

 Player 1 02:18:50 $ACTION_MASSAGE_REMOVE:  
{"id":92} 

 Player 1 02:18:50 $NEXT_STACK_ID:  

 Player 1 02:18:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:18:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Widow<Monster>"} 

 Player 1 02:18:50 $ADD_TO_STACK:  
{"stackEffect":{"entityId":18,"creatorCardId":268,"rollingPlayerCardId":268,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 1 02:18:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":97,"_text":"Add AttackRoll 18 "}} 

 Player 1 02:18:50 $ROLL_DICE:  
{"playerId":1} 

 Player 2 02:18:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:18:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:18:52 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":3} 

 Player 1 02:18:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 3 vs Widow<Monster>"} 

 Player 1 02:18:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:18:52 $ACTION_MASSAGE_REMOVE:  
{"id":97} 

 Player 1 02:18:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 3 vs Widow<Monster>"} 

 Player 1 02:18:52 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":18,"creatorCardId":268,"numberRolled":3,"rollingPlayerCardId":268,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 1 02:18:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":98,"_text":"Response Adding AttackRoll 18"},"childOfId":97} 

 Player 1 02:18:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":99,"_text":"Wait For Response From Player 1 "},"childOfId":97} 

 Player 1 02:18:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:18:52 $ACTION_MASSAGE_REMOVE:  
{"id":99} 

 Player 1 02:18:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":100,"_text":"Wait For Response From Player 2 "},"childOfId":97} 

 Player 1 02:18:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:18:52 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:18:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Widow<Monster>"} 

 Player 2 02:18:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Widow<Monster>"} 

 Player 2 02:18:52 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:18:53 $ACTION_MASSAGE_REMOVE:  
{"id":100} 

 Player 1 02:18:53 $ACTION_MASSAGE_REMOVE:  
{"id":98} 

 Player 1 02:18:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":101,"_text":"Resolve AttackRoll 18 "}} 

 Player 1 02:18:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":102,"_text":"Added 0 to original roll"}} 

 Player 1 02:18:53 $NEXT_STACK_ID:  

 Player 1 02:18:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 3 vs Widow<Monster>"} 

 Player 1 02:18:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:18:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Widow combat damage to Isaac \n2:Player 1 rolled 3 vs Widow<Monster>"} 

 Player 1 02:18:53 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":19,"creatorCardId":268,"entityToDoDamageCardId":258,"entityToTakeDamageCardId":268,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 02:18:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Widow combat damage to Isaac \n2:Player 1 rolled 3 vs Widow<Monster>"} 

 Player 1 02:18:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Widow combat damage to Isaac \n2:Player 1 rolled 3 vs Widow<Monster>"} 

 Player 1 02:18:53 $REPLACE_STACK:  
{"currentStack":[{"entityId":19,"creatorCardId":268,"entityToDoDamageCardId":258,"entityToTakeDamageCardId":268,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":18,"creatorCardId":268,"numberRolled":3,"rollingPlayerCardId":268,"stackEffectType":2,"attackedMonsterCardId":258}]} 

 Player 1 02:18:53 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":3},{"type":2,"number":1},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":268,"scopeIsPlayer":true,"index":15,"originStackId":18},"isAfterActivation":true,"index":15} 

 Player 1 02:18:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Widow combat damage to Isaac \n2:Player 1 rolled 3 vs Widow<Monster>"} 

 Player 1 02:18:53 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":18,"creatorCardId":268,"numberRolled":3,"rollingPlayerCardId":268,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 1 02:18:53 $ACTION_MASSAGE_REMOVE:  
{"id":101} 

 Player 1 02:18:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":103,"_text":"Remove After Resolve AttackRoll 18  "}} 

 Player 1 02:18:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Widow combat damage to Isaac"} 

 Player 1 02:18:53 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":18,"creatorCardId":268,"numberRolled":3,"rollingPlayerCardId":268,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 1 02:18:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":104,"_text":"Response Remove After Resolve AttackRoll 18"},"childOfId":103} 

 Player 1 02:18:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":105,"_text":"Wait For Response From Player 1 "},"childOfId":103} 

 Player 1 02:18:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:18:53 $ACTION_MASSAGE_REMOVE:  
{"id":105} 

 Player 1 02:18:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":106,"_text":"Wait For Response From Player 2 "},"childOfId":103} 

 Player 1 02:18:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:18:53 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:18:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Widow<Monster>"} 

 Player 2 02:18:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Widow<Monster>"} 

 Player 2 02:18:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Widow combat damage to Isaac"} 

 Player 2 02:18:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Widow combat damage to Isaac"} 

 Player 2 02:18:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Widow combat damage to Isaac"} 

 Player 2 02:18:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Widow combat damage to Isaac"} 

 Player 2 02:18:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Widow combat damage to Isaac \n2:Player 1 is rolling against Widow<Monster>"} 

 Player 2 02:18:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Widow combat damage to Isaac \n2:Player 1 is rolling against Widow<Monster>"} 

 Player 2 02:18:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Widow combat damage to Isaac \n2:Player 1 is rolling against Widow<Monster>"} 

 Player 2 02:18:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Widow combat damage to Isaac \n2:Player 1 is rolling against Widow<Monster>"} 

 Player 2 02:18:54 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:18:54 $ACTION_MASSAGE_REMOVE:  
{"id":106} 

 Player 1 02:18:54 $ACTION_MASSAGE_REMOVE:  
{"id":104} 

 Player 1 02:18:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":107,"_text":"Resolve CombatDamage 19 "}} 

 Player 1 02:18:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Widow 1 combat damage to Isaac"} 

 Player 1 02:18:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Widow 1 combat damage to Isaac"} 

 Player 1 02:18:54 $PLAYER_GET_HIT:  
{"playerId":1,"damage":1,"damageDealerId":258} 

 Player 1 02:18:54 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":258}],"result":null,"preventMethod":false,"methodScopeId":268,"scopeIsPlayer":true,"index":16,"originStackId":-1},"isAfterActivation":true,"index":16} 

 Player 1 02:18:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Widow 1 combat damage to Isaac"} 

 Player 1 02:18:54 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":19,"creatorCardId":268,"entityToDoDamageCardId":258,"entityToTakeDamageCardId":268,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 02:18:54 $ACTION_MASSAGE_REMOVE:  
{"id":107} 

 Player 1 02:18:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":108,"_text":"Remove After Resolve CombatDamage 19  "}} 

 Player 1 02:18:54 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:18:54 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":19,"creatorCardId":268,"entityToDoDamageCardId":258,"entityToTakeDamageCardId":268,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 02:18:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":109,"_text":"Response Remove After Resolve CombatDamage 19"},"childOfId":108} 

 Player 1 02:18:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":110,"_text":"Wait For Response From Player 2 "},"childOfId":108} 

 Player 1 02:18:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:18:54 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:18:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Widow combat damage to Isaac"} 

 Player 2 02:18:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Widow combat damage to Isaac"} 

 Player 2 02:18:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Widow combat damage to Isaac"} 

 Player 2 02:18:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Widow combat damage to Isaac"} 

 Player 2 02:18:54 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:18:55 $ACTION_MASSAGE_REMOVE:  
{"id":110} 

 Player 1 02:18:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":111,"_text":"Wait For Response From Player 1 "},"childOfId":108} 

 Player 1 02:18:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:18:56 $ACTION_MASSAGE_REMOVE:  
{"id":102} 

 Player 1 02:18:56 $ACTION_MASSAGE_REMOVE:  
{"id":103} 

 Player 1 02:18:57 $ACTION_MASSAGE_REMOVE:  
{"id":108} 

 Player 1 02:19:10 $ACTION_MASSAGE_REMOVE:  
{"id":111} 

 Player 1 02:19:10 $ACTION_MASSAGE_REMOVE:  
{"id":109} 

 Player 1 02:19:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":112,"_text":"Stack Was Emptied "}} 

 Player 1 02:19:10 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:19:10 $ACTION_MASSAGE_REMOVE:  
{"id":112} 

 Player 1 02:19:12 $ACTION_MASSAGE_REMOVE:  
{"id":112} 

 Player 1 02:19:12 $NEXT_STACK_ID:  

 Player 1 02:19:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:19:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Widow<Monster>"} 

 Player 1 02:19:12 $ADD_TO_STACK:  
{"stackEffect":{"entityId":20,"creatorCardId":268,"rollingPlayerCardId":268,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 1 02:19:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":113,"_text":"Add AttackRoll 20 "}} 

 Player 1 02:19:13 $ROLL_DICE:  
{"playerId":1} 

 Player 2 02:19:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:19:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:19:14 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":6} 

 Player 1 02:19:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Widow<Monster>"} 

 Player 1 02:19:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:19:14 $ACTION_MASSAGE_REMOVE:  
{"id":113} 

 Player 1 02:19:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Widow<Monster>"} 

 Player 1 02:19:14 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":20,"creatorCardId":268,"numberRolled":6,"rollingPlayerCardId":268,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 1 02:19:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":114,"_text":"Response Adding AttackRoll 20"},"childOfId":113} 

 Player 1 02:19:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":115,"_text":"Wait For Response From Player 1 "},"childOfId":113} 

 Player 1 02:19:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:19:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Widow<Monster>"} 

 Player 2 02:19:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Widow<Monster>"} 

 Player 1 02:19:21 $ACTION_MASSAGE_REMOVE:  
{"id":115} 

 Player 1 02:19:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":116,"_text":"Wait For Response From Player 2 "},"childOfId":113} 

 Player 1 02:19:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:19:21 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:19:21 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:19:21 $ACTION_MASSAGE_REMOVE:  
{"id":116} 

 Player 1 02:19:21 $ACTION_MASSAGE_REMOVE:  
{"id":114} 

 Player 1 02:19:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":117,"_text":"Resolve AttackRoll 20 "}} 

 Player 1 02:19:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":118,"_text":"Added 0 to original roll"}} 

 Player 1 02:19:21 $NEXT_STACK_ID:  

 Player 1 02:19:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Widow<Monster>"} 

 Player 1 02:19:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:19:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 1 rolled 6 vs Widow<Monster>"} 

 Player 1 02:19:21 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":21,"creatorCardId":268,"entityToDoDamageCardId":268,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 02:19:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 1 rolled 6 vs Widow<Monster>"} 

 Player 1 02:19:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 1 rolled 6 vs Widow<Monster>"} 

 Player 1 02:19:21 $REPLACE_STACK:  
{"currentStack":[{"entityId":21,"creatorCardId":268,"entityToDoDamageCardId":268,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":20,"creatorCardId":268,"numberRolled":6,"rollingPlayerCardId":268,"stackEffectType":2,"attackedMonsterCardId":258}]} 

 Player 1 02:19:21 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":6},{"type":2,"number":1},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":268,"scopeIsPlayer":true,"index":17,"originStackId":20},"isAfterActivation":true,"index":17} 

 Player 1 02:19:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 1 rolled 6 vs Widow<Monster>"} 

 Player 1 02:19:21 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":20,"creatorCardId":268,"numberRolled":6,"rollingPlayerCardId":268,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 1 02:19:21 $ACTION_MASSAGE_REMOVE:  
{"id":117} 

 Player 1 02:19:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":119,"_text":"Remove After Resolve AttackRoll 20  "}} 

 Player 1 02:19:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow"} 

 Player 1 02:19:21 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":20,"creatorCardId":268,"numberRolled":6,"rollingPlayerCardId":268,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 1 02:19:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":120,"_text":"Response Remove After Resolve AttackRoll 20"},"childOfId":119} 

 Player 1 02:19:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":121,"_text":"Wait For Response From Player 1 "},"childOfId":119} 

 Player 1 02:19:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:19:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Widow<Monster>"} 

 Player 2 02:19:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Widow<Monster>"} 

 Player 2 02:19:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow"} 

 Player 2 02:19:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow"} 

 Player 2 02:19:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow"} 

 Player 2 02:19:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow"} 

 Player 2 02:19:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 1 is rolling against Widow<Monster>"} 

 Player 2 02:19:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 1 is rolling against Widow<Monster>"} 

 Player 2 02:19:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 1 is rolling against Widow<Monster>"} 

 Player 2 02:19:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:Player 1 is rolling against Widow<Monster>"} 

 Player 1 02:19:24 $ACTION_MASSAGE_REMOVE:  
{"id":121} 

 Player 1 02:19:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":122,"_text":"Wait For Response From Player 2 "},"childOfId":119} 

 Player 1 02:19:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:19:24 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:19:24 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:19:24 $ACTION_MASSAGE_REMOVE:  
{"id":122} 

 Player 1 02:19:24 $ACTION_MASSAGE_REMOVE:  
{"id":120} 

 Player 1 02:19:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":123,"_text":"Resolve CombatDamage 21 "}} 

 Player 1 02:19:24 $MONSTER_GET_DAMAGED:  
{"cardId":258,"hpLeft":0,"damageDealerId":268} 

 Player 1 02:19:24 $NEXT_STACK_ID:  

 Player 1 02:19:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow"} 

 Player 1 02:19:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:19:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:[object Object] killed by Isaac"} 

 Player 1 02:19:24 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":22,"creatorCardId":268,"monsterToDieCardId":258,"stackEffectType":5,"killerId":268}} 

 Player 1 02:19:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:[object Object] killed by Isaac"} 

 Player 1 02:19:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:[object Object] killed by Isaac"} 

 Player 1 02:19:24 $REPLACE_STACK:  
{"currentStack":[{"entityId":21,"creatorCardId":268,"entityToDoDamageCardId":268,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":22,"creatorCardId":268,"monsterToDieCardId":258,"stackEffectType":5,"killerId":268}]} 

 Player 1 02:19:24 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":268}],"result":null,"preventMethod":false,"methodScopeId":258,"scopeIsPlayer":false,"index":18,"originStackId":-1},"isAfterActivation":true,"index":18} 

 Player 1 02:19:24 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":6},{"type":0,"number":268},{"type":0,"number":258}],"result":null,"preventMethod":false,"methodScopeId":268,"scopeIsPlayer":true,"index":19,"originStackId":21},"isAfterActivation":true,"index":19} 

 Player 1 02:19:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:[object Object] killed by Isaac"} 

 Player 1 02:19:25 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":21,"creatorCardId":268,"entityToDoDamageCardId":268,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 02:19:25 $ACTION_MASSAGE_REMOVE:  
{"id":123} 

 Player 1 02:19:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":124,"_text":"Remove After Resolve CombatDamage 21  "}} 

 Player 1 02:19:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 02:19:25 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":21,"creatorCardId":268,"entityToDoDamageCardId":268,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 02:19:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":125,"_text":"Response Remove After Resolve CombatDamage 21"},"childOfId":124} 

 Player 1 02:19:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":126,"_text":"Wait For Response From Player 1 "},"childOfId":124} 

 Player 1 02:19:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:19:25 $ACTION_MASSAGE_REMOVE:  
{"id":118} 

 Player 1 02:19:25 $ACTION_MASSAGE_REMOVE:  
{"id":119} 

 Player 2 02:19:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow"} 

 Player 2 02:19:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow"} 

 Player 2 02:19:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by undefined"} 

 Player 2 02:19:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by undefined"} 

 Player 2 02:19:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by undefined"} 

 Player 2 02:19:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by undefined"} 

 Player 2 02:19:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:[object Object] killed by undefined"} 

 Player 2 02:19:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:[object Object] killed by undefined"} 

 Player 2 02:19:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:[object Object] killed by undefined"} 

 Player 2 02:19:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Widow \n2:[object Object] killed by undefined"} 

 Player 1 02:19:26 $ACTION_MASSAGE_REMOVE:  
{"id":126} 

 Player 1 02:19:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":127,"_text":"Wait For Response From Player 2 "},"childOfId":124} 

 Player 1 02:19:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:19:26 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:19:26 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:19:26 $ACTION_MASSAGE_REMOVE:  
{"id":127} 

 Player 1 02:19:26 $ACTION_MASSAGE_REMOVE:  
{"id":125} 

 Player 1 02:19:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":128,"_text":"Resolve MonsterDeath 22 "}} 

 Player 1 02:19:26 $DISABLE_PARTICLE_EFFECT:  
{"cardId":258,"particleType":5} 

 Player 1 02:19:26 $CANCEL_ATTACK:  

 Player 1 02:19:26 $NEXT_STACK_ID:  

 Player 1 02:19:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 02:19:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:19:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Widow<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 1 02:19:26 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":23,"creatorCardId":268,"monsterCardWithRewardId":258,"playerCardIdToReward":268,"stackEffectType":7}} 

 Player 1 02:19:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Widow<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 1 02:19:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Widow<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 1 02:19:26 $REPLACE_STACK:  
{"currentStack":[{"entityId":23,"creatorCardId":268,"monsterCardWithRewardId":258,"playerCardIdToReward":268,"stackEffectType":7},{"entityId":22,"creatorCardId":268,"monsterToDieCardId":258,"stackEffectType":5,"killerId":268}]} 

 Player 1 02:19:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Widow<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 1 02:19:26 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":22,"creatorCardId":268,"monsterToDieCardId":258,"stackEffectType":5,"killerId":268}} 

 Player 1 02:19:26 $ACTION_MASSAGE_REMOVE:  
{"id":128} 

 Player 1 02:19:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":129,"_text":"Remove After Resolve MonsterDeath 22  "}} 

 Player 1 02:19:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Widow<Monster> reward"} 

 Player 1 02:19:26 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":22,"creatorCardId":268,"monsterToDieCardId":258,"stackEffectType":5,"killerId":268}} 

 Player 1 02:19:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":130,"_text":"Response Remove After Resolve MonsterDeath 22"},"childOfId":129} 

 Player 1 02:19:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":131,"_text":"Wait For Response From Player 1 "},"childOfId":129} 

 Player 1 02:19:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:19:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by undefined"} 

 Player 2 02:19:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by undefined"} 

 Player 2 02:19:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Widow<Monster> reward"} 

 Player 2 02:19:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Widow<Monster> reward"} 

 Player 2 02:19:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Widow<Monster> reward"} 

 Player 2 02:19:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Widow<Monster> reward"} 

 Player 2 02:19:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Widow<Monster> reward \n2:[object Object] killed by undefined"} 

 Player 2 02:19:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Widow<Monster> reward \n2:[object Object] killed by undefined"} 

 Player 2 02:19:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Widow<Monster> reward \n2:[object Object] killed by undefined"} 

 Player 2 02:19:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Widow<Monster> reward \n2:[object Object] killed by undefined"} 

 Player 1 02:19:27 $ACTION_MASSAGE_REMOVE:  
{"id":131} 

 Player 1 02:19:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":132,"_text":"Wait For Response From Player 2 "},"childOfId":129} 

 Player 1 02:19:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:19:27 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 1 02:19:27 $ACTION_MASSAGE_REMOVE:  
{"id":124} 

 Player 2 02:19:27 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:19:27 $ACTION_MASSAGE_REMOVE:  
{"id":132} 

 Player 1 02:19:27 $ACTION_MASSAGE_REMOVE:  
{"id":130} 

 Player 1 02:19:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":133,"_text":"Resolve MonsterRewardStackEffect 23 "}} 

 Player 1 02:19:27 $DRAW_CARD:  
{"deckType":1} 

 Player 1 02:19:28 $MOVE_CARD:  
{"moveIndex":19,"cardId":85,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 02:19:28 $MOVE_CARD_END:  
{"moveIndex":19,"cardId":85,"flipIfFlipped":false,"playerId":1} 

 Player 1 02:19:28 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":85} 

 Player 1 02:19:28 $FLIP_CARD:  
{"cardId":85} 

 Player 1 02:19:28 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":85} 

 Player 1 02:19:28 $DRAW_CARD:  
{"deckType":1} 

 Player 1 02:19:28 $MOVE_CARD:  
{"moveIndex":20,"cardId":115,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 02:19:28 $MOVE_CARD_END:  
{"moveIndex":20,"cardId":115,"flipIfFlipped":false,"playerId":1} 

 Player 1 02:19:29 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":115} 

 Player 1 02:19:29 $FLIP_CARD:  
{"cardId":115} 

 Player 1 02:19:29 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":115} 

 Player 1 02:19:29 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":258,"scopeIsPlayer":false,"index":20,"originStackId":23},"isAfterActivation":true,"index":20} 

 Player 1 02:19:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:19:29 $ACTION_MASSAGE_REMOVE:  
{"id":117} 

 Player 1 02:19:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":134,"_text":"Fizzle MonsterRewardStackEffect 23"}} 

 Player 1 02:19:29 $MOVE_CARD:  
{"moveIndex":21,"cardId":258,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"soulsLayout"} 

 Player 1 02:19:29 $ACTION_MASSAGE_REMOVE:  
{"id":129} 

 Player 2 02:19:29 $MOVE_CARD_END:  
{"moveIndex":21,"cardId":258,"flipIfFlipped":true,"playerId":1} 

 Player 1 02:19:29 $GET_SOUL:  
{"playerId":1,"cardId":258} 

 Player 1 02:19:29 $REMOVE_MONSTER:  
{"holderId":2,"monsterId":258} 

 Player 1 02:19:29 $NEXT_STACK_ID:  

 Player 1 02:19:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:19:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder2 slot"} 

 Player 1 02:19:29 $ADD_TO_STACK:  
{"stackEffect":{"entityId":24,"creatorCardId":268,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 

 Player 1 02:19:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":135,"_text":"Add RefillEmptySlot 24 "}} 

 Player 1 02:19:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:19:29 $ACTION_MASSAGE_REMOVE:  
{"id":135} 

 Player 1 02:19:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder2 slot"} 

 Player 1 02:19:29 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":24,"creatorCardId":268,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 

 Player 1 02:19:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":136,"_text":"Response Adding RefillEmptySlot 24"},"childOfId":135} 

 Player 1 02:19:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":137,"_text":"Wait For Response From Player 1 "},"childOfId":135} 

 Player 1 02:19:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:19:30 $ACTION_MASSAGE_REMOVE:  
{"id":137} 

 Player 1 02:19:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":138,"_text":"Wait For Response From Player 2 "},"childOfId":135} 

 Player 1 02:19:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:19:30 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:19:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Widow<Monster> reward"} 

 Player 2 02:19:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Widow<Monster> reward"} 

 Player 2 02:19:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Widow<Monster> reward \n2:Refill holder2 slot"} 

 Player 2 02:19:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Widow<Monster> reward \n2:Refill holder2 slot"} 

 Player 2 02:19:30 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:19:30 $ACTION_MASSAGE_REMOVE:  
{"id":138} 

 Player 1 02:19:30 $ACTION_MASSAGE_REMOVE:  
{"id":136} 

 Player 1 02:19:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":139,"_text":"Resolve RefillEmptySlot 24 "}} 

 Player 1 02:19:30 $DRAW_CARD:  
{"deckType":2} 

 Player 1 02:19:30 $FLIP_CARD:  
{"cardId":237} 

 Player 1 02:19:30 $REGISTER_PASSIVE_ITEM:  
{"cardId":237} 

 Player 1 02:19:30 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":237} 

 Player 1 02:19:30 $NEW_MONSTER_ON_PLACE:  
{"cardId":237,"monsterPlaceId":2} 

 Player 1 02:19:30 $ACTION_MASSAGE_REMOVE:  
{"id":139} 

 Player 1 02:19:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":140,"_text":"Remove After Resolve RefillEmptySlot 24  "}} 

 Player 1 02:19:30 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:19:30 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":24,"creatorCardId":268,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 

 Player 1 02:19:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":141,"_text":"Response Remove After Resolve RefillEmptySlot 24"},"childOfId":140} 

 Player 1 02:19:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":142,"_text":"Wait For Response From Player 2 "},"childOfId":140} 

 Player 1 02:19:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:19:30 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:19:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Widow<Monster> reward \n2:Refill holder2 slot"} 

 Player 2 02:19:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Widow<Monster> reward \n2:Refill holder2 slot"} 

 Player 2 02:19:30 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:19:30 $ACTION_MASSAGE_REMOVE:  
{"id":142} 

 Player 1 02:19:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":143,"_text":"Wait For Response From Player 1 "},"childOfId":140} 

 Player 1 02:19:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:19:30 $ACTION_MASSAGE_REMOVE:  
{"id":143} 

 Player 1 02:19:31 $ACTION_MASSAGE_REMOVE:  
{"id":141} 

 Player 1 02:19:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":144,"_text":"Stack Was Emptied "}} 

 Player 1 02:19:31 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:19:31 $ACTION_MASSAGE_REMOVE:  
{"id":117} 

 Player 1 02:19:31 $ACTION_MASSAGE_REMOVE:  
{"id":140} 

 Player 1 02:19:31 $ACTION_MASSAGE_REMOVE:  
{"id":133} 

 Player 1 02:19:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":145,"_text":"Stack Was Emptied "}} 

 Player 1 02:19:31 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:19:31 $ACTION_MASSAGE_REMOVE:  
{"id":145} 

 Player 1 02:19:32 $ACTION_MASSAGE_REMOVE:  
{"id":134} 

 Player 1 02:19:32 $ACTION_MASSAGE_REMOVE:  
{"id":144} 

 Player 1 02:19:32 $ACTION_MASSAGE_REMOVE:  
{"id":145} 

 Player 1 02:19:33 $ACTION_MASSAGE_REMOVE:  
{"id":140} 

 Player 1 02:19:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:19:51 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:19:52 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 1 02:19:52 $END_TURN:  

 Player 1 02:19:52 $SET_TURN:  
{"playerId":2} 

 Player 1 02:19:52 $START_TURN:  
{"playerId":2} 

 Player 2 02:19:52 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:19:52 $RECHARGE_ITEM:  
{"cardId":264} 

 Player 2 02:19:52 $PLAYER_RECHARGE_ITEM:  
{"playerId":2,"cardId":264} 

 Player 2 02:19:52 $RECHARGE_ITEM:  
{"cardId":267} 

 Player 2 02:19:52 $PLAYER_RECHARGE_ITEM:  
{"playerId":2,"cardId":267} 

 Player 2 02:19:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:19:52 $NEXT_STACK_ID:  

 Player 2 02:19:52 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:19:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 02:19:52 $ADD_TO_STACK:  
{"stackEffect":{"entityId":25,"creatorCardId":264,"turnPlayerCardId":264,"stackEffectType":13}} 

 Player 2 02:19:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Add StartTurnLoot 25 "}} 

 Player 2 02:19:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:19:52 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 2 02:19:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 02:19:52 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":25,"creatorCardId":264,"turnPlayerCardId":264,"stackEffectType":13}} 

 Player 2 02:19:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":56,"_text":"Response Adding StartTurnLoot 25"},"childOfId":55} 

 Player 2 02:19:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":57,"_text":"Wait For Response From Player 2 "},"childOfId":55} 

 Player 2 02:19:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:19:52 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 2 02:19:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":58,"_text":"Wait For Response From Player 1 "},"childOfId":55} 

 Player 2 02:19:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:19:52 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:19:52 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:19:52 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:19:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 02:19:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 02:19:52 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:19:52 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 2 02:19:52 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 2 02:19:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":59,"_text":"Resolve StartTurnLoot 25 "}} 

 Player 2 02:19:52 $DRAW_CARD:  
{"deckType":1} 

 Player 2 02:19:52 $MOVE_CARD:  
{"moveIndex":22,"cardId":69,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 02:19:53 $MOVE_CARD_END:  
{"moveIndex":22,"cardId":69,"flipIfFlipped":false,"playerId":2} 

 Player 2 02:19:53 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":69} 

 Player 2 02:19:53 $FLIP_CARD:  
{"cardId":69} 

 Player 2 02:19:53 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":69} 

 Player 2 02:19:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 02:19:53 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":25,"creatorCardId":264,"turnPlayerCardId":264,"stackEffectType":13}} 

 Player 2 02:19:53 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 2 02:19:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":60,"_text":"Remove After Resolve StartTurnLoot 25  "}} 

 Player 2 02:19:53 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:19:53 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":25,"creatorCardId":264,"turnPlayerCardId":264,"stackEffectType":13}} 

 Player 2 02:19:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":61,"_text":"Response Remove After Resolve StartTurnLoot 25"},"childOfId":60} 

 Player 2 02:19:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":62,"_text":"Wait For Response From Player 1 "},"childOfId":60} 

 Player 2 02:19:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:19:53 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:19:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 02:19:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 02:19:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 02:19:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 02:19:53 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:19:53 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 2 02:19:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":63,"_text":"Wait For Response From Player 2 "},"childOfId":60} 

 Player 2 02:19:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:19:53 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 2 02:19:53 $ACTION_MASSAGE_REMOVE:  
{"id":61} 

 Player 2 02:19:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":64,"_text":"Stack Was Emptied "}} 

 Player 2 02:19:54 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:19:54 $ACTION_MASSAGE_REMOVE:  
{"id":60} 

 Player 2 02:19:55 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 2 02:19:56 $ACTION_MASSAGE_REMOVE:  
{"id":60} 

 Player 2 02:20:05 $NEXT_STACK_ID:  

 Player 2 02:20:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:20:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(9) "} 

 Player 2 02:20:05 $ADD_TO_STACK:  
{"stackEffect":{"entityId":26,"creatorCardId":264,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":69,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 02:20:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":65,"_text":"Add PlayLootCardStackEffect 26 "}} 

 Player 2 02:20:05 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":69} 

 Player 2 02:20:05 $MOVE_CARD:  
{"moveIndex":23,"cardId":69,"placeID":278,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 02:20:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:20:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:20:05 $MOVE_CARD_END:  
{"moveIndex":23,"cardId":69,"flipIfFlipped":true,"playerId":2} 

 Player 2 02:20:05 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":69} 

 Player 2 02:20:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(9): addMoney"} 

 Player 2 02:20:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(9): addMoney"} 

 Player 2 02:20:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:20:05 $ACTION_MASSAGE_REMOVE:  
{"id":65} 

 Player 2 02:20:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(9): addMoney"} 

 Player 2 02:20:05 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":26,"creatorCardId":264,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":69,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":69,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 02:20:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":66,"_text":"Response Adding PlayLootCardStackEffect 26"},"childOfId":65} 

 Player 2 02:20:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":67,"_text":"Wait For Response From Player 2 "},"childOfId":65} 

 Player 2 02:20:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:20:05 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 2 02:20:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":68,"_text":"Wait For Response From Player 1 "},"childOfId":65} 

 Player 2 02:20:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:20:05 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:20:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(9) "} 

 Player 1 02:20:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(9) "} 

 Player 1 02:20:06 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:20:06 $ACTION_MASSAGE_REMOVE:  
{"id":68} 

 Player 2 02:20:06 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 2 02:20:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":69,"_text":"Resolve PlayLootCardStackEffect 26 "}} 

 Player 2 02:20:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(9): addMoney"} 

 Player 2 02:20:06 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":69,"particleType":6} 

 Player 2 02:20:08 $DISABLE_PARTICLE_EFFECT:  
{"cardId":69,"particleType":6} 

 Player 2 02:20:08 $SET_MONEY:  
{"playerId":2,"numOfCoins":4} 

 Player 2 02:20:08 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":264,"scopeIsPlayer":true,"index":8,"originStackId":-1},"isAfterActivation":true,"index":8} 

 Player 2 02:20:08 $REMOVE_FROM_PILE:  
{"cardId":69} 

 Player 2 02:20:08 $MOVE_CARD:  
{"moveIndex":24,"cardId":69,"placeID":279,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 02:20:08 $MOVE_CARD_END:  
{"moveIndex":24,"cardId":69,"flipIfFlipped":true,"playerId":2} 

 Player 2 02:20:08 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":69} 

 Player 2 02:20:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(9): addMoney"} 

 Player 2 02:20:08 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":26,"creatorCardId":264,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":69,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 02:20:08 $ACTION_MASSAGE_REMOVE:  
{"id":69} 

 Player 2 02:20:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":70,"_text":"Remove After Resolve PlayLootCardStackEffect 26  "}} 

 Player 2 02:20:08 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:20:08 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":26,"creatorCardId":264,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":69,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 02:20:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":71,"_text":"Response Remove After Resolve PlayLootCardStackEffect 26"},"childOfId":70} 

 Player 2 02:20:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":72,"_text":"Wait For Response From Player 1 "},"childOfId":70} 

 Player 2 02:20:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:20:08 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:20:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(9) "} 

 Player 1 02:20:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(9) "} 

 Player 1 02:20:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(9) "} 

 Player 1 02:20:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(9) "} 

 Player 1 02:20:09 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:20:09 $ACTION_MASSAGE_REMOVE:  
{"id":72} 

 Player 2 02:20:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":73,"_text":"Wait For Response From Player 2 "},"childOfId":70} 

 Player 2 02:20:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:20:09 $ACTION_MASSAGE_REMOVE:  
{"id":73} 

 Player 2 02:20:09 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 2 02:20:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":74,"_text":"Stack Was Emptied "}} 

 Player 2 02:20:09 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:20:09 $ACTION_MASSAGE_REMOVE:  
{"id":70} 

 Player 2 02:20:10 $NEXT_STACK_ID:  

 Player 2 02:20:10 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:20:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Sleight Of Hand"} 

 Player 2 02:20:10 $ADD_TO_STACK:  
{"stackEffect":{"entityId":27,"creatorCardId":264,"hasLockingStackEffect":false,"itemToPlayCardId":267,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 02:20:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":75,"_text":"Add ActivateItem 27 "}} 

 Player 1 02:20:10 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:20:10 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:20:10 $ACTION_MASSAGE_REMOVE:  
{"id":74} 

 Player 2 02:20:11 $ACTION_MASSAGE_REMOVE:  
{"id":70} 

 Player 2 02:20:12 $USE_ITEM:  
{"cardId":267} 

 Player 2 02:20:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:20:12 $ACTION_MASSAGE_REMOVE:  
{"id":75} 

 Player 2 02:20:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Sleight Of Hand"} 

 Player 2 02:20:12 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":27,"creatorCardId":264,"hasLockingStackEffect":false,"itemToPlayCardId":267,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 02:20:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":76,"_text":"Response Adding ActivateItem 27"},"childOfId":75} 

 Player 2 02:20:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":77,"_text":"Wait For Response From Player 2 "},"childOfId":75} 

 Player 2 02:20:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:20:12 $ACTION_MASSAGE_REMOVE:  
{"id":77} 

 Player 2 02:20:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":78,"_text":"Wait For Response From Player 1 "},"childOfId":75} 

 Player 2 02:20:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:20:12 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:20:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Sleight Of Hand"} 

 Player 1 02:20:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Sleight Of Hand"} 

 Player 1 02:20:12 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:20:12 $ACTION_MASSAGE_REMOVE:  
{"id":78} 

 Player 2 02:20:12 $ACTION_MASSAGE_REMOVE:  
{"id":76} 

 Player 2 02:20:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":79,"_text":"Resolve ActivateItem 27 "}} 

 Player 2 02:20:12 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":267,"particleType":6} 

 Player 2 02:20:14 $DISABLE_PARTICLE_EFFECT:  
{"cardId":267,"particleType":6} 

 Player 2 02:20:52 $LOG_ERROR:  
"effect LookAtTopDeckAndPutOnTop failed to execute\nTypeError: Cannot read property 'setParent' of null\neffect data was:" 
//////Error From Player 2////
  

 Player 2 02:20:52 $LOG_ERROR:  
//////Error From Player 2////
 "effect LookAtTopDeckAndPutOnTop failed to execute\nTypeError: Cannot read property 'setParent' of null\neffect data was:"
////// 

 Player 2 02:20:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Sleight Of Hand"} 

 Player 2 02:20:52 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":27,"creatorCardId":264,"hasLockingStackEffect":false,"itemToPlayCardId":267,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 02:20:52 $ACTION_MASSAGE_REMOVE:  
{"id":79} 

 Player 2 02:20:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":80,"_text":"Remove After Resolve ActivateItem 27  "}} 

 Player 2 02:20:52 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:20:52 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":27,"creatorCardId":264,"hasLockingStackEffect":false,"itemToPlayCardId":267,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 02:20:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":81,"_text":"Response Remove After Resolve ActivateItem 27"},"childOfId":80} 

 Player 2 02:20:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":82,"_text":"Wait For Response From Player 1 "},"childOfId":80} 

 Player 2 02:20:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:20:52 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:20:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Sleight Of Hand"} 

 Player 1 02:20:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Sleight Of Hand"} 

 Player 1 02:20:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Sleight Of Hand"} 

 Player 1 02:20:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Sleight Of Hand"} 

 Player 1 02:20:53 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:20:53 $ACTION_MASSAGE_REMOVE:  
{"id":82} 

 Player 2 02:20:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":83,"_text":"Wait For Response From Player 2 "},"childOfId":80} 

 Player 2 02:20:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:20:53 $ACTION_MASSAGE_REMOVE:  
{"id":83} 

 Player 2 02:20:53 $ACTION_MASSAGE_REMOVE:  
{"id":81} 

 Player 2 02:20:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":84,"_text":"Stack Was Emptied "}} 

 Player 2 02:20:54 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:20:54 $ACTION_MASSAGE_REMOVE:  
{"id":80} 

 Player 2 02:20:55 $ACTION_MASSAGE_REMOVE:  
{"id":80} 

 Player 2 02:20:55 $ACTION_MASSAGE_REMOVE:  
{"id":84} 

 Player 2 02:21:04 $NEXT_STACK_ID:  

 Player 2 02:21:04 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:21:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Squirt"} 

 Player 2 02:21:04 $ADD_TO_STACK:  
{"stackEffect":{"entityId":28,"creatorCardId":264,"attackingPlayerCardId":264,"idOfCardBeingAttacked":249,"stackEffectType":4}} 

 Player 2 02:21:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":85,"_text":"Add DeclareAttack 28 "}} 

 Player 2 02:21:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:21:04 $ACTION_MASSAGE_REMOVE:  
{"id":85} 

 Player 2 02:21:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Squirt"} 

 Player 2 02:21:04 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":28,"creatorCardId":264,"attackingPlayerCardId":264,"idOfCardBeingAttacked":249,"stackEffectType":4}} 

 Player 2 02:21:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":86,"_text":"Response Adding DeclareAttack 28"},"childOfId":85} 

 Player 2 02:21:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":87,"_text":"Wait For Response From Player 2 "},"childOfId":85} 

 Player 2 02:21:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:21:04 $ACTION_MASSAGE_REMOVE:  
{"id":87} 

 Player 2 02:21:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":88,"_text":"Wait For Response From Player 1 "},"childOfId":85} 

 Player 2 02:21:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:21:04 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:21:04 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:21:04 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:21:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Squirt"} 

 Player 1 02:21:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Squirt"} 

 Player 1 02:21:05 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:21:05 $ACTION_MASSAGE_REMOVE:  
{"id":88} 

 Player 2 02:21:05 $ACTION_MASSAGE_REMOVE:  
{"id":86} 

 Player 2 02:21:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":89,"_text":"Resolve DeclareAttack 28 "}} 

 Player 2 02:21:05 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":249,"particleType":5} 

 Player 2 02:21:05 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":264,"scopeIsPlayer":true,"index":9,"originStackId":28},"isAfterActivation":true,"index":9} 

 Player 2 02:21:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Squirt"} 

 Player 2 02:21:05 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":28,"creatorCardId":264,"attackingPlayerCardId":264,"idOfCardBeingAttacked":249,"stackEffectType":4}} 

 Player 2 02:21:05 $ACTION_MASSAGE_REMOVE:  
{"id":89} 

 Player 2 02:21:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":90,"_text":"Remove After Resolve DeclareAttack 28  "}} 

 Player 2 02:21:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:21:05 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":28,"creatorCardId":264,"attackingPlayerCardId":264,"idOfCardBeingAttacked":249,"stackEffectType":4}} 

 Player 2 02:21:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":91,"_text":"Response Remove After Resolve DeclareAttack 28"},"childOfId":90} 

 Player 2 02:21:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":92,"_text":"Wait For Response From Player 1 "},"childOfId":90} 

 Player 2 02:21:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:21:05 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:21:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Squirt"} 

 Player 1 02:21:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Squirt"} 

 Player 1 02:21:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Squirt"} 

 Player 1 02:21:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Squirt"} 

 Player 1 02:21:05 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:21:05 $ACTION_MASSAGE_REMOVE:  
{"id":92} 

 Player 2 02:21:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":93,"_text":"Wait For Response From Player 2 "},"childOfId":90} 

 Player 2 02:21:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:21:05 $ACTION_MASSAGE_REMOVE:  
{"id":93} 

 Player 2 02:21:05 $ACTION_MASSAGE_REMOVE:  
{"id":91} 

 Player 2 02:21:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":94,"_text":"Stack Was Emptied "}} 

 Player 2 02:21:06 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:21:06 $ACTION_MASSAGE_REMOVE:  
{"id":90} 

 Player 2 02:21:07 $ACTION_MASSAGE_REMOVE:  
{"id":94} 

 Player 2 02:21:08 $ACTION_MASSAGE_REMOVE:  
{"id":90} 

 Player 2 02:21:09 $NEXT_STACK_ID:  

 Player 2 02:21:09 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:21:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Squirt<Monster>"} 

 Player 2 02:21:09 $ADD_TO_STACK:  
{"stackEffect":{"entityId":29,"creatorCardId":264,"rollingPlayerCardId":264,"stackEffectType":2,"attackedMonsterCardId":249}} 

 Player 2 02:21:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":95,"_text":"Add AttackRoll 29 "}} 

 Player 2 02:21:09 $ROLL_DICE:  
{"playerId":2} 

 Player 1 02:21:09 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:21:09 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:21:11 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":4} 

 Player 2 02:21:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Squirt<Monster>"} 

 Player 2 02:21:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:21:11 $ACTION_MASSAGE_REMOVE:  
{"id":95} 

 Player 2 02:21:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Squirt<Monster>"} 

 Player 2 02:21:11 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":29,"creatorCardId":264,"numberRolled":4,"rollingPlayerCardId":264,"stackEffectType":2,"attackedMonsterCardId":249}} 

 Player 2 02:21:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":96,"_text":"Response Adding AttackRoll 29"},"childOfId":95} 

 Player 2 02:21:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":97,"_text":"Wait For Response From Player 2 "},"childOfId":95} 

 Player 2 02:21:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:21:11 $ACTION_MASSAGE_REMOVE:  
{"id":97} 

 Player 2 02:21:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":98,"_text":"Wait For Response From Player 1 "},"childOfId":95} 

 Player 2 02:21:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:21:11 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:21:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Squirt<Monster>"} 

 Player 1 02:21:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Squirt<Monster>"} 

 Player 1 02:21:12 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:21:12 $ACTION_MASSAGE_REMOVE:  
{"id":98} 

 Player 2 02:21:12 $ACTION_MASSAGE_REMOVE:  
{"id":96} 

 Player 2 02:21:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":99,"_text":"Resolve AttackRoll 29 "}} 

 Player 2 02:21:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":100,"_text":"Added 0 to original roll"}} 

 Player 2 02:21:12 $NEXT_STACK_ID:  

 Player 2 02:21:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Squirt<Monster>"} 

 Player 2 02:21:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:21:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Squirt \n2:Player 2 rolled 4 vs Squirt<Monster>"} 

 Player 2 02:21:12 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":30,"creatorCardId":264,"entityToDoDamageCardId":264,"entityToTakeDamageCardId":249,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 02:21:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Squirt \n2:Player 2 rolled 4 vs Squirt<Monster>"} 

 Player 2 02:21:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Squirt \n2:Player 2 rolled 4 vs Squirt<Monster>"} 

 Player 2 02:21:12 $REPLACE_STACK:  
{"currentStack":[{"entityId":30,"creatorCardId":264,"entityToDoDamageCardId":264,"entityToTakeDamageCardId":249,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":29,"creatorCardId":264,"numberRolled":4,"rollingPlayerCardId":264,"stackEffectType":2,"attackedMonsterCardId":249}]} 

 Player 2 02:21:12 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":264,"scopeIsPlayer":true,"index":10,"originStackId":29},"isAfterActivation":true,"index":10} 

 Player 2 02:21:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Squirt \n2:Player 2 rolled 4 vs Squirt<Monster>"} 

 Player 2 02:21:12 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":29,"creatorCardId":264,"numberRolled":4,"rollingPlayerCardId":264,"stackEffectType":2,"attackedMonsterCardId":249}} 

 Player 2 02:21:12 $ACTION_MASSAGE_REMOVE:  
{"id":99} 

 Player 2 02:21:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":101,"_text":"Remove After Resolve AttackRoll 29  "}} 

 Player 2 02:21:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Squirt"} 

 Player 2 02:21:12 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":29,"creatorCardId":264,"numberRolled":4,"rollingPlayerCardId":264,"stackEffectType":2,"attackedMonsterCardId":249}} 

 Player 2 02:21:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":102,"_text":"Response Remove After Resolve AttackRoll 29"},"childOfId":101} 

 Player 2 02:21:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":103,"_text":"Wait For Response From Player 2 "},"childOfId":101} 

 Player 2 02:21:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:21:12 $ACTION_MASSAGE_REMOVE:  
{"id":103} 

 Player 2 02:21:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":104,"_text":"Wait For Response From Player 1 "},"childOfId":101} 

 Player 2 02:21:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:21:12 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:21:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Squirt<Monster>"} 

 Player 1 02:21:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Squirt<Monster>"} 

 Player 1 02:21:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Squirt"} 

 Player 1 02:21:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Squirt"} 

 Player 1 02:21:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Squirt"} 

 Player 1 02:21:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Squirt"} 

 Player 1 02:21:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Squirt \n2:Player 2 is rolling against Squirt<Monster>"} 

 Player 1 02:21:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Squirt \n2:Player 2 is rolling against Squirt<Monster>"} 

 Player 1 02:21:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Squirt \n2:Player 2 is rolling against Squirt<Monster>"} 

 Player 1 02:21:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Squirt \n2:Player 2 is rolling against Squirt<Monster>"} 

 Player 1 02:21:13 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:21:13 $ACTION_MASSAGE_REMOVE:  
{"id":104} 

 Player 2 02:21:13 $ACTION_MASSAGE_REMOVE:  
{"id":102} 

 Player 2 02:21:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":105,"_text":"Resolve CombatDamage 30 "}} 

 Player 2 02:21:13 $MONSTER_GET_DAMAGED:  
{"cardId":249,"hpLeft":1,"damageDealerId":264} 

 Player 2 02:21:13 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":264}],"result":null,"preventMethod":false,"methodScopeId":249,"scopeIsPlayer":false,"index":11,"originStackId":-1},"isAfterActivation":true,"index":11} 

 Player 2 02:21:13 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":4},{"type":0,"number":264},{"type":0,"number":249}],"result":null,"preventMethod":false,"methodScopeId":264,"scopeIsPlayer":true,"index":12,"originStackId":30},"isAfterActivation":true,"index":12} 

 Player 2 02:21:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Squirt"} 

 Player 2 02:21:13 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":30,"creatorCardId":264,"entityToDoDamageCardId":264,"entityToTakeDamageCardId":249,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 02:21:13 $ACTION_MASSAGE_REMOVE:  
{"id":105} 

 Player 2 02:21:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":106,"_text":"Remove After Resolve CombatDamage 30  "}} 

 Player 2 02:21:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:21:13 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":30,"creatorCardId":264,"entityToDoDamageCardId":264,"entityToTakeDamageCardId":249,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 02:21:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":107,"_text":"Response Remove After Resolve CombatDamage 30"},"childOfId":106} 

 Player 2 02:21:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":108,"_text":"Wait For Response From Player 1 "},"childOfId":106} 

 Player 2 02:21:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:21:13 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:21:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Squirt"} 

 Player 1 02:21:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Squirt"} 

 Player 1 02:21:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Squirt"} 

 Player 1 02:21:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Squirt"} 

 Player 1 02:21:13 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:21:13 $ACTION_MASSAGE_REMOVE:  
{"id":108} 

 Player 2 02:21:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":109,"_text":"Wait For Response From Player 2 "},"childOfId":106} 

 Player 2 02:21:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:21:13 $ACTION_MASSAGE_REMOVE:  
{"id":109} 

 Player 2 02:21:13 $ACTION_MASSAGE_REMOVE:  
{"id":107} 

 Player 2 02:21:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":110,"_text":"Stack Was Emptied "}} 

 Player 2 02:21:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:21:13 $ACTION_MASSAGE_REMOVE:  
{"id":99} 

 Player 2 02:21:13 $ACTION_MASSAGE_REMOVE:  
{"id":101} 

 Player 2 02:21:15 $ACTION_MASSAGE_REMOVE:  
{"id":100} 

 Player 2 02:21:15 $ACTION_MASSAGE_REMOVE:  
{"id":101} 

 Player 2 02:21:15 $ACTION_MASSAGE_REMOVE:  
{"id":110} 

 Player 2 02:21:15 $NEXT_STACK_ID:  

 Player 2 02:21:15 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:21:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Squirt<Monster>"} 

 Player 2 02:21:15 $ADD_TO_STACK:  
{"stackEffect":{"entityId":31,"creatorCardId":264,"rollingPlayerCardId":264,"stackEffectType":2,"attackedMonsterCardId":249}} 

 Player 2 02:21:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":111,"_text":"Add AttackRoll 31 "}} 

 Player 2 02:21:15 $ROLL_DICE:  
{"playerId":2} 

 Player 1 02:21:15 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:21:15 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:21:16 $ACTION_MASSAGE_REMOVE:  
{"id":106} 

 Player 2 02:21:17 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":1} 

 Player 2 02:21:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Squirt<Monster>"} 

 Player 2 02:21:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:21:17 $ACTION_MASSAGE_REMOVE:  
{"id":111} 

 Player 2 02:21:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Squirt<Monster>"} 

 Player 2 02:21:17 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":31,"creatorCardId":264,"numberRolled":1,"rollingPlayerCardId":264,"stackEffectType":2,"attackedMonsterCardId":249}} 

 Player 2 02:21:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":112,"_text":"Response Adding AttackRoll 31"},"childOfId":111} 

 Player 2 02:21:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":113,"_text":"Wait For Response From Player 2 "},"childOfId":111} 

 Player 2 02:21:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:21:18 $ACTION_MASSAGE_REMOVE:  
{"id":113} 

 Player 2 02:21:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":114,"_text":"Wait For Response From Player 1 "},"childOfId":111} 

 Player 2 02:21:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:21:18 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:21:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Squirt<Monster>"} 

 Player 1 02:21:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Squirt<Monster>"} 

 Player 1 02:21:18 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:21:18 $ACTION_MASSAGE_REMOVE:  
{"id":114} 

 Player 2 02:21:18 $ACTION_MASSAGE_REMOVE:  
{"id":112} 

 Player 2 02:21:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":115,"_text":"Resolve AttackRoll 31 "}} 

 Player 2 02:21:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":116,"_text":"Added 0 to original roll"}} 

 Player 2 02:21:18 $NEXT_STACK_ID:  

 Player 2 02:21:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Squirt<Monster>"} 

 Player 2 02:21:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:21:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Squirt combat damage to Cain \n2:Player 2 rolled 1 vs Squirt<Monster>"} 

 Player 2 02:21:18 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":32,"creatorCardId":264,"entityToDoDamageCardId":249,"entityToTakeDamageCardId":264,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 02:21:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Squirt combat damage to Cain \n2:Player 2 rolled 1 vs Squirt<Monster>"} 

 Player 2 02:21:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Squirt combat damage to Cain \n2:Player 2 rolled 1 vs Squirt<Monster>"} 

 Player 2 02:21:18 $REPLACE_STACK:  
{"currentStack":[{"entityId":32,"creatorCardId":264,"entityToDoDamageCardId":249,"entityToTakeDamageCardId":264,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":31,"creatorCardId":264,"numberRolled":1,"rollingPlayerCardId":264,"stackEffectType":2,"attackedMonsterCardId":249}]} 

 Player 2 02:21:18 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":1},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":264,"scopeIsPlayer":true,"index":13,"originStackId":31},"isAfterActivation":true,"index":13} 

 Player 2 02:21:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Squirt combat damage to Cain \n2:Player 2 rolled 1 vs Squirt<Monster>"} 

 Player 2 02:21:18 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":31,"creatorCardId":264,"numberRolled":1,"rollingPlayerCardId":264,"stackEffectType":2,"attackedMonsterCardId":249}} 

 Player 2 02:21:18 $ACTION_MASSAGE_REMOVE:  
{"id":115} 

 Player 2 02:21:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":117,"_text":"Remove After Resolve AttackRoll 31  "}} 

 Player 2 02:21:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Squirt combat damage to Cain"} 

 Player 2 02:21:18 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":31,"creatorCardId":264,"numberRolled":1,"rollingPlayerCardId":264,"stackEffectType":2,"attackedMonsterCardId":249}} 

 Player 2 02:21:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":118,"_text":"Response Remove After Resolve AttackRoll 31"},"childOfId":117} 

 Player 2 02:21:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":119,"_text":"Wait For Response From Player 2 "},"childOfId":117} 

 Player 2 02:21:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:21:18 $ACTION_MASSAGE_REMOVE:  
{"id":119} 

 Player 2 02:21:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":120,"_text":"Wait For Response From Player 1 "},"childOfId":117} 

 Player 2 02:21:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:21:18 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:21:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Squirt<Monster>"} 

 Player 1 02:21:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Squirt<Monster>"} 

 Player 1 02:21:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Squirt combat damage to Cain"} 

 Player 1 02:21:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Squirt combat damage to Cain"} 

 Player 1 02:21:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Squirt combat damage to Cain"} 

 Player 1 02:21:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Squirt combat damage to Cain"} 

 Player 1 02:21:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Squirt combat damage to Cain \n2:Player 2 is rolling against Squirt<Monster>"} 

 Player 1 02:21:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Squirt combat damage to Cain \n2:Player 2 is rolling against Squirt<Monster>"} 

 Player 1 02:21:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Squirt combat damage to Cain \n2:Player 2 is rolling against Squirt<Monster>"} 

 Player 1 02:21:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Squirt combat damage to Cain \n2:Player 2 is rolling against Squirt<Monster>"} 

 Player 1 02:21:19 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:21:19 $ACTION_MASSAGE_REMOVE:  
{"id":120} 

 Player 2 02:21:19 $ACTION_MASSAGE_REMOVE:  
{"id":118} 

 Player 2 02:21:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":121,"_text":"Resolve CombatDamage 32 "}} 

 Player 2 02:21:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Squirt 1 combat damage to Cain"} 

 Player 2 02:21:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Squirt 1 combat damage to Cain"} 

 Player 2 02:21:19 $PLAYER_GET_HIT:  
{"playerId":2,"damage":1,"damageDealerId":249} 

 Player 2 02:21:19 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":249}],"result":null,"preventMethod":false,"methodScopeId":264,"scopeIsPlayer":true,"index":14,"originStackId":-1},"isAfterActivation":true,"index":14} 

 Player 2 02:21:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Squirt 1 combat damage to Cain"} 

 Player 2 02:21:19 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":32,"creatorCardId":264,"entityToDoDamageCardId":249,"entityToTakeDamageCardId":264,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 02:21:19 $ACTION_MASSAGE_REMOVE:  
{"id":121} 

 Player 2 02:21:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":122,"_text":"Remove After Resolve CombatDamage 32  "}} 

 Player 2 02:21:19 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:21:19 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":32,"creatorCardId":264,"entityToDoDamageCardId":249,"entityToTakeDamageCardId":264,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 02:21:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":123,"_text":"Response Remove After Resolve CombatDamage 32"},"childOfId":122} 

 Player 2 02:21:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":124,"_text":"Wait For Response From Player 1 "},"childOfId":122} 

 Player 2 02:21:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:21:19 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:21:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Squirt combat damage to Cain"} 

 Player 1 02:21:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Squirt combat damage to Cain"} 

 Player 1 02:21:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Squirt combat damage to Cain"} 

 Player 1 02:21:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Squirt combat damage to Cain"} 

 Player 1 02:21:20 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:21:20 $ACTION_MASSAGE_REMOVE:  
{"id":124} 

 Player 2 02:21:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":125,"_text":"Wait For Response From Player 2 "},"childOfId":122} 

 Player 2 02:21:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:21:20 $ACTION_MASSAGE_REMOVE:  
{"id":125} 

 Player 2 02:21:20 $ACTION_MASSAGE_REMOVE:  
{"id":123} 

 Player 2 02:21:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":126,"_text":"Stack Was Emptied "}} 

 Player 2 02:21:20 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:21:20 $ACTION_MASSAGE_REMOVE:  
{"id":115} 

 Player 2 02:21:20 $ACTION_MASSAGE_REMOVE:  
{"id":117} 

 Player 2 02:21:21 $NEXT_STACK_ID:  

 Player 2 02:21:21 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:21:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Squirt<Monster>"} 

 Player 2 02:21:21 $ADD_TO_STACK:  
{"stackEffect":{"entityId":33,"creatorCardId":264,"rollingPlayerCardId":264,"stackEffectType":2,"attackedMonsterCardId":249}} 

 Player 2 02:21:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":127,"_text":"Add AttackRoll 33 "}} 

 Player 2 02:21:21 $ROLL_DICE:  
{"playerId":2} 

 Player 2 02:21:21 $ACTION_MASSAGE_REMOVE:  
{"id":116} 

 Player 2 02:21:21 $ACTION_MASSAGE_REMOVE:  
{"id":117} 

 Player 1 02:21:21 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:21:21 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:21:21 $ACTION_MASSAGE_REMOVE:  
{"id":126} 

 Player 2 02:21:22 $ACTION_MASSAGE_REMOVE:  
{"id":122} 

 Player 2 02:21:22 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":6} 

 Player 2 02:21:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 6 vs Squirt<Monster>"} 

 Player 2 02:21:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:21:22 $ACTION_MASSAGE_REMOVE:  
{"id":127} 

 Player 2 02:21:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 6 vs Squirt<Monster>"} 

 Player 2 02:21:22 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":33,"creatorCardId":264,"numberRolled":6,"rollingPlayerCardId":264,"stackEffectType":2,"attackedMonsterCardId":249}} 

 Player 2 02:21:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":128,"_text":"Response Adding AttackRoll 33"},"childOfId":127} 

 Player 2 02:21:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":129,"_text":"Wait For Response From Player 2 "},"childOfId":127} 

 Player 2 02:21:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:21:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Squirt<Monster>"} 

 Player 1 02:21:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Squirt<Monster>"} 

 Player 2 02:21:23 $ACTION_MASSAGE_REMOVE:  
{"id":129} 

 Player 2 02:21:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":130,"_text":"Wait For Response From Player 1 "},"childOfId":127} 

 Player 2 02:21:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:21:23 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:21:23 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:21:23 $ACTION_MASSAGE_REMOVE:  
{"id":130} 

 Player 2 02:21:23 $ACTION_MASSAGE_REMOVE:  
{"id":128} 

 Player 2 02:21:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":131,"_text":"Resolve AttackRoll 33 "}} 

 Player 2 02:21:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":132,"_text":"Added 0 to original roll"}} 

 Player 2 02:21:24 $NEXT_STACK_ID:  

 Player 2 02:21:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 6 vs Squirt<Monster>"} 

 Player 2 02:21:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:21:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Squirt \n2:Player 2 rolled 6 vs Squirt<Monster>"} 

 Player 2 02:21:24 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":34,"creatorCardId":264,"entityToDoDamageCardId":264,"entityToTakeDamageCardId":249,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 02:21:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Squirt \n2:Player 2 rolled 6 vs Squirt<Monster>"} 

 Player 2 02:21:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Squirt \n2:Player 2 rolled 6 vs Squirt<Monster>"} 

 Player 2 02:21:24 $REPLACE_STACK:  
{"currentStack":[{"entityId":34,"creatorCardId":264,"entityToDoDamageCardId":264,"entityToTakeDamageCardId":249,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":33,"creatorCardId":264,"numberRolled":6,"rollingPlayerCardId":264,"stackEffectType":2,"attackedMonsterCardId":249}]} 

 Player 2 02:21:24 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":6},{"type":2,"number":1},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":264,"scopeIsPlayer":true,"index":15,"originStackId":33},"isAfterActivation":true,"index":15} 

 Player 2 02:21:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Squirt \n2:Player 2 rolled 6 vs Squirt<Monster>"} 

 Player 2 02:21:24 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":33,"creatorCardId":264,"numberRolled":6,"rollingPlayerCardId":264,"stackEffectType":2,"attackedMonsterCardId":249}} 

 Player 2 02:21:24 $ACTION_MASSAGE_REMOVE:  
{"id":131} 

 Player 2 02:21:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":133,"_text":"Remove After Resolve AttackRoll 33  "}} 

 Player 2 02:21:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Squirt"} 

 Player 2 02:21:24 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":33,"creatorCardId":264,"numberRolled":6,"rollingPlayerCardId":264,"stackEffectType":2,"attackedMonsterCardId":249}} 

 Player 2 02:21:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":134,"_text":"Response Remove After Resolve AttackRoll 33"},"childOfId":133} 

 Player 2 02:21:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":135,"_text":"Wait For Response From Player 2 "},"childOfId":133} 

 Player 2 02:21:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:21:24 $ACTION_MASSAGE_REMOVE:  
{"id":135} 

 Player 2 02:21:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":136,"_text":"Wait For Response From Player 1 "},"childOfId":133} 

 Player 2 02:21:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:21:24 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:21:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Squirt<Monster>"} 

 Player 1 02:21:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Squirt<Monster>"} 

 Player 1 02:21:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Squirt"} 

 Player 1 02:21:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Squirt"} 

 Player 1 02:21:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Squirt"} 

 Player 1 02:21:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Squirt"} 

 Player 1 02:21:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Squirt \n2:Player 2 is rolling against Squirt<Monster>"} 

 Player 1 02:21:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Squirt \n2:Player 2 is rolling against Squirt<Monster>"} 

 Player 1 02:21:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Squirt \n2:Player 2 is rolling against Squirt<Monster>"} 

 Player 1 02:21:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Squirt \n2:Player 2 is rolling against Squirt<Monster>"} 

 Player 1 02:21:24 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:21:24 $ACTION_MASSAGE_REMOVE:  
{"id":136} 

 Player 2 02:21:25 $ACTION_MASSAGE_REMOVE:  
{"id":134} 

 Player 2 02:21:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":137,"_text":"Resolve CombatDamage 34 "}} 

 Player 2 02:21:25 $MONSTER_GET_DAMAGED:  
{"cardId":249,"hpLeft":0,"damageDealerId":264} 

 Player 2 02:21:25 $NEXT_STACK_ID:  

 Player 2 02:21:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Squirt"} 

 Player 2 02:21:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:21:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Squirt \n2:[object Object] killed by Cain"} 

 Player 2 02:21:25 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":35,"creatorCardId":264,"monsterToDieCardId":249,"stackEffectType":5,"killerId":264}} 

 Player 2 02:21:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Squirt \n2:[object Object] killed by Cain"} 

 Player 2 02:21:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Squirt \n2:[object Object] killed by Cain"} 

 Player 2 02:21:25 $REPLACE_STACK:  
{"currentStack":[{"entityId":34,"creatorCardId":264,"entityToDoDamageCardId":264,"entityToTakeDamageCardId":249,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":35,"creatorCardId":264,"monsterToDieCardId":249,"stackEffectType":5,"killerId":264}]} 

 Player 2 02:21:25 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":264}],"result":null,"preventMethod":false,"methodScopeId":249,"scopeIsPlayer":false,"index":16,"originStackId":-1},"isAfterActivation":true,"index":16} 

 Player 2 02:21:25 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":6},{"type":0,"number":264},{"type":0,"number":249}],"result":null,"preventMethod":false,"methodScopeId":264,"scopeIsPlayer":true,"index":17,"originStackId":34},"isAfterActivation":true,"index":17} 

 Player 2 02:21:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Squirt \n2:[object Object] killed by Cain"} 

 Player 2 02:21:25 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":34,"creatorCardId":264,"entityToDoDamageCardId":264,"entityToTakeDamageCardId":249,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 02:21:25 $ACTION_MASSAGE_REMOVE:  
{"id":137} 

 Player 2 02:21:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":138,"_text":"Remove After Resolve CombatDamage 34  "}} 

 Player 2 02:21:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Cain"} 

 Player 2 02:21:25 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":34,"creatorCardId":264,"entityToDoDamageCardId":264,"entityToTakeDamageCardId":249,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 02:21:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":139,"_text":"Response Remove After Resolve CombatDamage 34"},"childOfId":138} 

 Player 2 02:21:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":140,"_text":"Wait For Response From Player 2 "},"childOfId":138} 

 Player 2 02:21:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:21:25 $ACTION_MASSAGE_REMOVE:  
{"id":140} 

 Player 2 02:21:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":141,"_text":"Wait For Response From Player 1 "},"childOfId":138} 

 Player 2 02:21:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:21:25 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:21:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Squirt"} 

 Player 1 02:21:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Squirt"} 

 Player 1 02:21:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by undefined"} 

 Player 1 02:21:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by undefined"} 

 Player 1 02:21:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by undefined"} 

 Player 1 02:21:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by undefined"} 

 Player 1 02:21:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Squirt \n2:[object Object] killed by undefined"} 

 Player 1 02:21:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Squirt \n2:[object Object] killed by undefined"} 

 Player 1 02:21:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Squirt \n2:[object Object] killed by undefined"} 

 Player 1 02:21:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Squirt \n2:[object Object] killed by undefined"} 

 Player 1 02:21:26 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:21:26 $ACTION_MASSAGE_REMOVE:  
{"id":141} 

 Player 2 02:21:26 $ACTION_MASSAGE_REMOVE:  
{"id":139} 

 Player 2 02:21:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":142,"_text":"Resolve MonsterDeath 35 "}} 

 Player 2 02:21:26 $DISABLE_PARTICLE_EFFECT:  
{"cardId":249,"particleType":5} 

 Player 2 02:21:26 $CANCEL_ATTACK:  

 Player 2 02:21:26 $NEXT_STACK_ID:  

 Player 2 02:21:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Cain"} 

 Player 2 02:21:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:21:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Squirt<Monster> reward \n2:[object Object] killed by Cain"} 

 Player 2 02:21:26 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":36,"creatorCardId":264,"monsterCardWithRewardId":249,"playerCardIdToReward":264,"stackEffectType":7}} 

 Player 2 02:21:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Squirt<Monster> reward \n2:[object Object] killed by Cain"} 

 Player 2 02:21:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Squirt<Monster> reward \n2:[object Object] killed by Cain"} 

 Player 2 02:21:26 $REPLACE_STACK:  
{"currentStack":[{"entityId":36,"creatorCardId":264,"monsterCardWithRewardId":249,"playerCardIdToReward":264,"stackEffectType":7},{"entityId":35,"creatorCardId":264,"monsterToDieCardId":249,"stackEffectType":5,"killerId":264}]} 

 Player 2 02:21:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Squirt<Monster> reward \n2:[object Object] killed by Cain"} 

 Player 2 02:21:26 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":35,"creatorCardId":264,"monsterToDieCardId":249,"stackEffectType":5,"killerId":264}} 

 Player 2 02:21:26 $ACTION_MASSAGE_REMOVE:  
{"id":142} 

 Player 2 02:21:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":143,"_text":"Remove After Resolve MonsterDeath 35  "}} 

 Player 2 02:21:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Squirt<Monster> reward"} 

 Player 2 02:21:26 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":35,"creatorCardId":264,"monsterToDieCardId":249,"stackEffectType":5,"killerId":264}} 

 Player 2 02:21:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":144,"_text":"Response Remove After Resolve MonsterDeath 35"},"childOfId":143} 

 Player 2 02:21:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":145,"_text":"Wait For Response From Player 2 "},"childOfId":143} 

 Player 2 02:21:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:21:26 $ACTION_MASSAGE_REMOVE:  
{"id":145} 

 Player 2 02:21:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":146,"_text":"Wait For Response From Player 1 "},"childOfId":143} 

 Player 2 02:21:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:21:26 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:21:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by undefined"} 

 Player 1 02:21:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by undefined"} 

 Player 1 02:21:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Squirt<Monster> reward"} 

 Player 1 02:21:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Squirt<Monster> reward"} 

 Player 1 02:21:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Squirt<Monster> reward"} 

 Player 1 02:21:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Squirt<Monster> reward"} 

 Player 1 02:21:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Squirt<Monster> reward \n2:[object Object] killed by undefined"} 

 Player 1 02:21:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Squirt<Monster> reward \n2:[object Object] killed by undefined"} 

 Player 1 02:21:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Squirt<Monster> reward \n2:[object Object] killed by undefined"} 

 Player 1 02:21:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Squirt<Monster> reward \n2:[object Object] killed by undefined"} 

 Player 2 02:21:27 $ACTION_MASSAGE_REMOVE:  
{"id":132} 

 Player 2 02:21:27 $ACTION_MASSAGE_REMOVE:  
{"id":133} 

 Player 1 02:21:27 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:21:27 $ACTION_MASSAGE_REMOVE:  
{"id":146} 

 Player 2 02:21:27 $ACTION_MASSAGE_REMOVE:  
{"id":144} 

 Player 2 02:21:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":147,"_text":"Resolve MonsterRewardStackEffect 36 "}} 

 Player 2 02:21:27 $DRAW_CARD:  
{"deckType":1} 

 Player 2 02:21:27 $MOVE_CARD:  
{"moveIndex":25,"cardId":104,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 2 02:21:27 $ACTION_MASSAGE_REMOVE:  
{"id":138} 

 Player 1 02:21:28 $MOVE_CARD_END:  
{"moveIndex":25,"cardId":104,"flipIfFlipped":false,"playerId":2} 

 Player 2 02:21:28 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":104} 

 Player 2 02:21:28 $FLIP_CARD:  
{"cardId":104} 

 Player 2 02:21:28 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":104} 

 Player 2 02:21:28 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":249,"scopeIsPlayer":false,"index":18,"originStackId":36},"isAfterActivation":true,"index":18} 

 Player 2 02:21:28 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:21:28 $ACTION_MASSAGE_REMOVE:  
{"id":131} 

 Player 2 02:21:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":148,"_text":"Fizzle MonsterRewardStackEffect 36"}} 

 Player 2 02:21:28 $MOVE_CARD:  
{"moveIndex":26,"cardId":249,"placeID":281,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 02:21:28 $MOVE_CARD_END:  
{"moveIndex":26,"cardId":249,"flipIfFlipped":true,"playerId":2} 

 Player 2 02:21:28 $MOVE_CARD_TO_PILE:  
{"type":2,"cardId":249} 

 Player 2 02:21:28 $REMOVE_MONSTER:  
{"holderId":1,"monsterId":249} 

 Player 2 02:21:29 $NEXT_STACK_ID:  

 Player 2 02:21:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:21:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 2 02:21:29 $ADD_TO_STACK:  
{"stackEffect":{"entityId":37,"creatorCardId":264,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 2 02:21:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":149,"_text":"Add RefillEmptySlot 37 "}} 

 Player 2 02:21:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:21:29 $ACTION_MASSAGE_REMOVE:  
{"id":149} 

 Player 2 02:21:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 2 02:21:29 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":37,"creatorCardId":264,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 2 02:21:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":150,"_text":"Response Adding RefillEmptySlot 37"},"childOfId":149} 

 Player 2 02:21:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":151,"_text":"Wait For Response From Player 2 "},"childOfId":149} 

 Player 2 02:21:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:21:29 $ACTION_MASSAGE_REMOVE:  
{"id":151} 

 Player 2 02:21:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":152,"_text":"Wait For Response From Player 1 "},"childOfId":149} 

 Player 2 02:21:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:21:29 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 2 02:21:29 $ACTION_MASSAGE_REMOVE:  
{"id":143} 

 Player 1 02:21:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Squirt<Monster> reward"} 

 Player 1 02:21:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Squirt<Monster> reward"} 

 Player 1 02:21:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Squirt<Monster> reward \n2:Refill holder1 slot"} 

 Player 1 02:21:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Squirt<Monster> reward \n2:Refill holder1 slot"} 

 Player 1 02:21:29 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:21:29 $ACTION_MASSAGE_REMOVE:  
{"id":152} 

 Player 2 02:21:29 $ACTION_MASSAGE_REMOVE:  
{"id":150} 

 Player 2 02:21:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":153,"_text":"Resolve RefillEmptySlot 37 "}} 

 Player 2 02:21:29 $DRAW_CARD:  
{"deckType":2} 

 Player 2 02:21:29 $FLIP_CARD:  
{"cardId":222} 

 Player 2 02:21:29 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":222} 

 Player 2 02:21:29 $NEW_MONSTER_ON_PLACE:  
{"cardId":222,"monsterPlaceId":1} 

 Player 2 02:21:29 $ACTION_MASSAGE_REMOVE:  
{"id":153} 

 Player 2 02:21:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":154,"_text":"Remove After Resolve RefillEmptySlot 37  "}} 

 Player 2 02:21:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:21:29 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":37,"creatorCardId":264,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 2 02:21:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":155,"_text":"Response Remove After Resolve RefillEmptySlot 37"},"childOfId":154} 

 Player 2 02:21:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":156,"_text":"Wait For Response From Player 1 "},"childOfId":154} 

 Player 2 02:21:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:21:29 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:21:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Squirt<Monster> reward \n2:Refill holder1 slot"} 

 Player 1 02:21:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Squirt<Monster> reward \n2:Refill holder1 slot"} 

 Player 1 02:21:30 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:21:30 $ACTION_MASSAGE_REMOVE:  
{"id":156} 

 Player 2 02:21:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":157,"_text":"Wait For Response From Player 2 "},"childOfId":154} 

 Player 2 02:21:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:21:30 $ACTION_MASSAGE_REMOVE:  
{"id":157} 

 Player 2 02:21:30 $ACTION_MASSAGE_REMOVE:  
{"id":155} 

 Player 2 02:21:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":158,"_text":"Stack Was Emptied "}} 

 Player 2 02:21:30 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:21:30 $ACTION_MASSAGE_REMOVE:  
{"id":131} 

 Player 2 02:21:30 $ACTION_MASSAGE_REMOVE:  
{"id":154} 

 Player 2 02:21:30 $ACTION_MASSAGE_REMOVE:  
{"id":147} 

 Player 2 02:21:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":159,"_text":"Stack Was Emptied "}} 

 Player 2 02:21:30 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:21:30 $ACTION_MASSAGE_REMOVE:  
{"id":159} 

 Player 2 02:21:31 $ACTION_MASSAGE_REMOVE:  
{"id":148} 

 Player 2 02:21:31 $ACTION_MASSAGE_REMOVE:  
{"id":158} 

 Player 2 02:21:31 $ACTION_MASSAGE_REMOVE:  
{"id":159} 

 Player 2 02:21:32 $ACTION_MASSAGE_REMOVE:  
{"id":154} 

 Player 2 02:21:40 $NEXT_STACK_ID:  

 Player 2 02:21:40 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:21:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy More Options for 10"} 

 Player 2 02:21:40 $ADD_TO_STACK:  
{"stackEffect":{"entityId":38,"creatorCardId":264,"itemToPurchaseCardId":178,"playerWhoBuysCardId":264,"cost":10,"stackEffectType":9}} 

 Player 2 02:21:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":160,"_text":"Add PurchaseItem 38 "}} 

 Player 2 02:21:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:21:40 $ACTION_MASSAGE_REMOVE:  
{"id":160} 

 Player 2 02:21:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy More Options for 10"} 

 Player 2 02:21:40 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":38,"creatorCardId":264,"itemToPurchaseCardId":178,"playerWhoBuysCardId":264,"cost":10,"stackEffectType":9}} 

 Player 2 02:21:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":161,"_text":"Response Adding PurchaseItem 38"},"childOfId":160} 

 Player 2 02:21:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":162,"_text":"Wait For Response From Player 2 "},"childOfId":160} 

 Player 2 02:21:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:21:40 $ACTION_MASSAGE_REMOVE:  
{"id":162} 

 Player 2 02:21:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":163,"_text":"Wait For Response From Player 1 "},"childOfId":160} 

 Player 2 02:21:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:21:40 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:21:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Squirt<Monster> reward"} 

 Player 1 02:21:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Squirt<Monster> reward"} 

 Player 1 02:21:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Squirt<Monster> reward \n2:Player 2 is about to buy More Options for 10"} 

 Player 1 02:21:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Squirt<Monster> reward \n2:Player 2 is about to buy More Options for 10"} 

 Player 1 02:21:41 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:21:41 $ACTION_MASSAGE_REMOVE:  
{"id":163} 

 Player 2 02:21:41 $ACTION_MASSAGE_REMOVE:  
{"id":161} 

 Player 2 02:21:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":164,"_text":"Resolve PurchaseItem 38 "}} 

 Player 2 02:21:41 $SET_MONEY:  
{"playerId":2,"numOfCoins":-10} 

 Player 2 02:21:41 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-10}],"result":null,"preventMethod":false,"methodScopeId":264,"scopeIsPlayer":true,"index":19,"originStackId":-1},"isAfterActivation":true,"index":19} 

 Player 2 02:21:41 $REMOVE_ITEM_FROM_SHOP:  
{"cardId":178} 

 Player 2 02:21:41 $NEXT_STACK_ID:  

 Player 2 02:21:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy More Options for 10"} 

 Player 2 02:21:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:21:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy More Options for 10 \n2:Refill Store slot"} 

 Player 2 02:21:41 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":39,"creatorCardId":264,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 2 02:21:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy More Options for 10 \n2:Refill Store slot"} 

 Player 2 02:21:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy More Options for 10 \n2:Refill Store slot"} 

 Player 2 02:21:41 $REPLACE_STACK:  
{"currentStack":[{"entityId":38,"creatorCardId":264,"itemToPurchaseCardId":178,"playerWhoBuysCardId":264,"cost":10,"stackEffectType":9},{"entityId":39,"creatorCardId":264,"slotType":5,"slotToFillId":0,"stackEffectType":10}]} 

 Player 2 02:21:41 $REGISTER_PASSIVE_ITEM:  
{"cardId":178} 

 Player 2 02:21:41 $MOVE_CARD:  
{"moveIndex":27,"cardId":178,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 

 Player 1 02:21:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Squirt<Monster> reward \n2:Player 2 is about to buy More Options for 10"} 

 Player 1 02:21:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Squirt<Monster> reward \n2:Player 2 is about to buy More Options for 10"} 

 Player 1 02:21:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Squirt<Monster> reward \n2:Refill Store slot"} 

 Player 1 02:21:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Squirt<Monster> reward \n2:Refill Store slot"} 

 Player 1 02:21:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Squirt<Monster> reward \n2:Refill Store slot"} 

 Player 1 02:21:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Squirt<Monster> reward \n2:Refill Store slot"} 

 Player 1 02:21:41 $MOVE_CARD_END:  
{"moveIndex":27,"cardId":178,"flipIfFlipped":true,"playerId":2} 

 Player 2 02:21:41 $ADD_AN_ITEM:  
{"playerId":2,"cardId":178,"isReward":false} 

 Player 2 02:21:41 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":178}],"result":true,"preventMethod":false,"methodScopeId":264,"scopeIsPlayer":true,"index":20,"originStackId":-1},"isAfterActivation":true,"index":20} 

 Player 2 02:21:41 $ACTION_MASSAGE_REMOVE:  
{"id":164} 

 Player 2 02:21:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":165,"_text":"Remove After Resolve PurchaseItem 38  "}} 

 Player 2 02:21:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 2 02:21:41 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":38,"creatorCardId":264,"itemToPurchaseCardId":178,"playerWhoBuysCardId":264,"cost":10,"stackEffectType":9}} 

 Player 2 02:21:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":166,"_text":"Response Remove After Resolve PurchaseItem 38"},"childOfId":165} 

 Player 2 02:21:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":167,"_text":"Wait For Response From Player 2 "},"childOfId":165} 

 Player 2 02:21:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:21:42 $ACTION_MASSAGE_REMOVE:  
{"id":167} 

 Player 2 02:21:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":168,"_text":"Wait For Response From Player 1 "},"childOfId":165} 

 Player 2 02:21:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:21:42 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:21:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy More Options for 10 \n2:Refill Store slot"} 

 Player 1 02:21:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy More Options for 10 \n2:Refill Store slot"} 

 Player 1 02:21:42 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:21:42 $ACTION_MASSAGE_REMOVE:  
{"id":168} 

 Player 2 02:21:42 $ACTION_MASSAGE_REMOVE:  
{"id":166} 

 Player 2 02:21:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":169,"_text":"Resolve RefillEmptySlot 39 "}} 

 Player 2 02:21:42 $LOG_ERROR:  
"error while resolving stack effect 39" 
//////Error From Player 2////
  

 Player 2 02:21:42 $LOG_ERROR:  
//////Error From Player 2////
 "error while resolving stack effect 39"
////// 

 Player 2 02:21:42 $LOG_ERROR:  
{} 
//////Error From Player 2////
  

 Player 2 02:21:42 $LOG_ERROR:  
//////Error From Player 2////
 {}
////// 

 Player 2 02:21:42 $ACTION_MASSAGE_REMOVE:  
{"id":169} 

 Player 2 02:21:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":170,"_text":"Remove After Resolve RefillEmptySlot 39  "}} 

 Player 2 02:21:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:21:43 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":39,"creatorCardId":264,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 2 02:21:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":171,"_text":"Response Remove After Resolve RefillEmptySlot 39"},"childOfId":170} 

 Player 2 02:21:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":172,"_text":"Wait For Response From Player 1 "},"childOfId":170} 

 Player 2 02:21:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:21:43 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:21:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 02:21:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 02:21:43 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:21:43 $ACTION_MASSAGE_REMOVE:  
{"id":172} 

 Player 2 02:21:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":173,"_text":"Wait For Response From Player 2 "},"childOfId":170} 

 Player 2 02:21:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:21:43 $ACTION_MASSAGE_REMOVE:  
{"id":173} 

 Player 2 02:21:44 $ACTION_MASSAGE_REMOVE:  
{"id":171} 

 Player 2 02:21:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":174,"_text":"Stack Was Emptied "}} 

 Player 2 02:21:44 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:21:44 $ACTION_MASSAGE_REMOVE:  
{"id":165} 

 Player 2 02:21:44 $ACTION_MASSAGE_REMOVE:  
{"id":170} 

 Player 2 02:21:44 $ACTION_MASSAGE_REMOVE:  
{"id":165} 

 Player 2 02:21:45 $ACTION_MASSAGE_REMOVE:  
{"id":174} 

 Player 2 02:21:45 $ACTION_MASSAGE_REMOVE:  
{"id":170} 

 Player 2 03:15:20 $MATCH: 