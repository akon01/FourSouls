Start Log 
 Player 1 16:36:29 $START_GAME:  
 Player 1 16:36:29 $MOVE_TO_TABLE:  
 Player 1 16:36:36 $FINISH_LOAD:  

 {"id":1,"turnPlayerId":2} 
 Player 1 16:36:37 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":272}],"result":true,"preventMethod":false,"methodScopeId":271,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 1 16:36:37 $MOVE_CARD_END:  

 {"moveIndex":1,"cardId":58,"flipIfFlipped":false,"playerId":2} 
 Player 1 16:36:38 $MOVE_CARD_END:  

 {"moveIndex":2,"cardId":120,"flipIfFlipped":false,"playerId":2} 
 Player 1 16:36:38 $MOVE_CARD_END:  

 {"moveIndex":3,"cardId":91,"flipIfFlipped":false,"playerId":2} 
 Player 1 16:36:39 $MOVE_CARD_END:  

 {"moveIndex":4,"cardId":60,"flipIfFlipped":false,"playerId":2} 
 Player 1 16:36:39 $MOVE_CARD_END:  

 {"moveIndex":5,"cardId":125,"flipIfFlipped":false,"playerId":2} 
 Player 1 16:36:40 $MOVE_CARD_END:  

 {"moveIndex":6,"cardId":82,"flipIfFlipped":false,"playerId":2} 
 Player 1 16:36:40 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 16:36:40 $NEXT_STACK_ID:  
 Player 1 16:36:40 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 16:36:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 16:36:40 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":271,"turnPlayerCardId":271,"stackEffectType":13}} 
 Player 1 16:36:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 16:36:40 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":1,"creatorCardId":271,"turnPlayerCardId":271,"stackEffectType":13}} 
 Player 1 16:36:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 
 Player 1 16:36:40 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 16:36:40 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 1 16:36:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 16:36:40 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":271,"turnPlayerCardId":271,"stackEffectType":13}} 
 Player 1 16:36:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 
 Player 1 16:36:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 1 16:36:40 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 16:36:40 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 1 16:36:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 1 16:36:40 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 16:36:40 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 16:36:41 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 1 16:36:41 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 1 16:36:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 
 Player 1 16:36:41 $DRAW_CARD:  

 {"deckType":1} 
 Player 1 16:36:41 $MOVE_CARD:  

 {"moveIndex":7,"cardId":24,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"}Start Log 
 Player 1 16:36:52 $START_GAME:  
 Player 1 16:36:52 $MOVE_TO_TABLE:  
 Player 1 16:36:59 $FINISH_LOAD:  

 {"id":1,"turnPlayerId":2} 
 Player 1 16:37:00 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":272}],"result":true,"preventMethod":false,"methodScopeId":271,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 1 16:37:00 $MOVE_CARD_END:  

 {"moveIndex":1,"cardId":15,"flipIfFlipped":false,"playerId":2} 
 Player 1 16:37:01 $MOVE_CARD_END:  

 {"moveIndex":2,"cardId":81,"flipIfFlipped":false,"playerId":2} 
 Player 1 16:37:01 $MOVE_CARD_END:  

 {"moveIndex":3,"cardId":30,"flipIfFlipped":false,"playerId":2} 
 Player 1 16:37:02 $MOVE_CARD_END:  

 {"moveIndex":4,"cardId":29,"flipIfFlipped":false,"playerId":2} 
 Player 1 16:37:02 $MOVE_CARD_END:  

 {"moveIndex":5,"cardId":140,"flipIfFlipped":false,"playerId":2} 
 Player 1 16:37:03 $MOVE_CARD_END:  

 {"moveIndex":6,"cardId":99,"flipIfFlipped":false,"playerId":2} 
 Player 1 16:37:03 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 16:37:03 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 16:37:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 16:37:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 16:37:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 16:37:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 16:37:03 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 16:37:04 $MOVE_CARD_END:  

 {"moveIndex":7,"cardId":107,"flipIfFlipped":false,"playerId":2} 
 Player 1 16:37:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 16:37:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 16:37:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 16:37:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 16:37:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 16:37:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 16:37:04 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 16:45:01 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 16:45:01 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 16:45:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Spider"} 
 Player 1 16:45:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Spider"} 
 Player 1 16:45:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Spider"} 
 Player 1 16:45:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Spider"} 
 Player 1 16:45:01 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 16:45:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Spider"} 
 Player 1 16:45:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Spider"} 
 Player 1 16:45:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Spider"} 
 Player 1 16:45:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Spider"} 
 Player 1 16:45:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Spider"} 
 Player 1 16:45:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Spider"} 
 Player 1 16:45:01 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 16:45:05 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 16:45:05 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 16:45:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Spider<Monster>"} 
 Player 1 16:45:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Spider<Monster>"} 
 Player 1 16:45:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Spider<Monster>"} 
 Player 1 16:45:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Spider<Monster>"} 
 Player 1 16:45:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Spider<Monster>"} 
 Player 1 16:45:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Spider<Monster>"} 
 Player 1 16:45:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 1 16:45:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 1 16:45:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 1 16:45:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 1 16:45:19 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":true} 
 Player 1 16:45:19 $SHOW_DECISION:  

 {"startCardId":271,"endCardId":271} 
 Player 1 16:45:22 $NEXT_STACK_ID:  
 Player 1 16:45:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 1 16:45:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 activated Maggy"} 
 Player 1 16:45:22 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":5,"creatorCardId":271,"hasLockingStackEffect":false,"itemToPlayCardId":271,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 1 16:45:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 activated Maggy"} 
 Player 1 16:45:22 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":5,"creatorCardId":271,"hasLockingStackEffect":false,"itemToPlayCardId":271,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 1 16:45:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":27,"_text":"Add ActivateItem 5 "}} 
 Player 1 16:45:24 $SHOW_DECISION:  

 {"startCardId":271,"endCardId":15} 
 Player 1 16:45:25 $RESPOND_TO:  

 {"playerId":-1,"stackEffectResponse":false} 
 Player 1 16:45:27 $USE_ITEM:  

 {"cardId":271} 
 Player 1 16:45:27 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 16:45:27 $ACTION_MASSAGE_REMOVE:  

 {"id":27} 
 Player 1 16:45:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 activated Maggy"} 
 Player 1 16:45:27 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":5,"creatorCardId":271,"hasLockingStackEffect":false,"itemToPlayCardId":271,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 16:45:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":28,"_text":"Response Adding ActivateItem 5"},"childOfId":27} 
 Player 1 16:45:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":29,"_text":"Wait For Response From Player 2 "},"childOfId":27} 
 Player 1 16:45:27 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 16:45:27 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 16:45:27 $ACTION_MASSAGE_REMOVE:  

 {"id":29} 
 Player 1 16:45:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":30,"_text":"Wait For Response From Player 1 "},"childOfId":27} 
 Player 1 16:45:27 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 16:45:27 $ACTION_MASSAGE_REMOVE:  

 {"id":30} 
 Player 1 16:45:27 $ACTION_MASSAGE_REMOVE:  

 {"id":28} 
 Player 1 16:45:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":31,"_text":"Resolve ActivateItem 5 "}} 
 Player 1 16:45:27 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":271,"particleType":6} 
 Player 1 16:45:29 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":271,"particleType":6} 
 Player 1 16:45:29 $NEXT_STACK_ID:  
 Player 1 16:45:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 activated Maggy"} 
 Player 1 16:45:29 $PLAYER_LOSE_LOOT:  

 {"playerId":1,"cardId":15} 
 Player 1 16:45:29 $MOVE_CARD:  

 {"moveIndex":8,"cardId":15,"placeID":277,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 16:45:30 $MOVE_CARD_TO_PILE:  

 {"type":7,"cardId":15} 
 Player 1 16:45:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7): addMoney \n4:Player 1 activated Maggy"} 
 Player 1 16:45:30 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 16:45:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7): addMoney \n4:Player 1 activated Maggy"} 
 Player 1 16:45:30 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":6,"creatorCardId":271,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":15,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":15,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 16:45:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7): addMoney \n4:Player 1 activated Maggy"} 
 Player 1 16:45:30 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":275,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":246}} 
 Player 1 16:45:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7): addMoney \n4:Player 1 activated Maggy"} 
 Player 1 16:45:30 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":5,"creatorCardId":271,"hasLockingStackEffect":false,"itemToPlayCardId":271,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 16:45:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7): addMoney \n4:Player 1 activated Maggy"} 
 Player 1 16:45:30 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":246}} 
 Player 1 16:45:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7): addMoney \n4:Player 1 activated Maggy"} 
 Player 1 16:45:30 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":4,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 16:45:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7): addMoney \n4:Player 1 activated Maggy"} 
 Player 1 16:45:30 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":6,"creatorCardId":271,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":15,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":15,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 16:45:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7): addMoney \n4:Player 1 activated Maggy"} 
 Player 1 16:45:30 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":5,"creatorCardId":271,"hasLockingStackEffect":false,"itemToPlayCardId":271,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 16:45:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7): addMoney \n4:Player 1 activated Maggy"} 
 Player 1 16:45:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7): addMoney \n4:Player 1 activated Maggy"} 
 Player 1 16:45:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7): addMoney \n4:Player 1 activated Maggy"} 
 Player 1 16:45:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7): addMoney \n4:Player 1 activated Maggy"} 
 Player 1 16:45:30 $REPLACE_STACK:  

 {"currentStack":[{"entityId":3,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":246},{"entityId":4,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1},{"entityId":6,"creatorCardId":271,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":15,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":15,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":5,"creatorCardId":271,"hasLockingStackEffect":false,"itemToPlayCardId":271,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 
 Player 1 16:45:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7): addMoney \n4:Player 1 activated Maggy"} 
 Player 1 16:45:30 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":5,"creatorCardId":271,"hasLockingStackEffect":false,"itemToPlayCardId":271,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 16:45:31 $ACTION_MASSAGE_REMOVE:  

 {"id":31} 
 Player 1 16:45:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7): addMoney"} 
 Player 1 16:45:31 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":5,"creatorCardId":271,"hasLockingStackEffect":false,"itemToPlayCardId":271,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 16:45:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":32,"_text":"Remove After Resolve ActivateItem 5  "}} 
 Player 1 16:45:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7): addMoney"} 
 Player 1 16:45:31 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":5,"creatorCardId":271,"hasLockingStackEffect":false,"itemToPlayCardId":271,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 16:45:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":33,"_text":"Response Remove After Resolve ActivateItem 5"},"childOfId":32} 
 Player 1 16:45:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":34,"_text":"Wait For Response From Player 2 "},"childOfId":32} 
 Player 1 16:45:31 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 16:45:31 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 16:45:31 $ACTION_MASSAGE_REMOVE:  

 {"id":34} 
 Player 1 16:45:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":35,"_text":"Wait For Response From Player 1 "},"childOfId":32} 
 Player 1 16:45:32 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 16:45:32 $ACTION_MASSAGE_REMOVE:  

 {"id":35} 
 Player 1 16:45:32 $ACTION_MASSAGE_REMOVE:  

 {"id":33} 
 Player 1 16:45:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":36,"_text":"Resolve PlayLootCardStackEffect 6 "}} 
 Player 1 16:45:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7): addMoney"} 
 Player 1 16:45:32 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":15,"particleType":6} 
 Player 1 16:45:33 $ACTION_MASSAGE_REMOVE:  

 {"id":32} 
 Player 1 16:45:33 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":15,"particleType":6} 
 Player 1 16:45:34 $SET_MONEY:  

 {"playerId":1,"numOfCoins":4} 
 Player 1 16:45:34 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":1}],"result":null,"preventMethod":false,"methodScopeId":271,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 1 16:45:34 $REMOVE_FROM_PILE:  

 {"cardId":15} 
 Player 1 16:45:34 $MOVE_CARD:  

 {"moveIndex":9,"cardId":15,"placeID":278,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 16:45:34 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":15} 
 Player 1 16:45:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7): addMoney"} 
 Player 1 16:45:34 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":6,"creatorCardId":271,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":15,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 16:45:34 $ACTION_MASSAGE_REMOVE:  

 {"id":36} 
 Player 1 16:45:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 1 16:45:34 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":6,"creatorCardId":271,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":15,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 16:45:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":37,"_text":"Remove After Resolve PlayLootCardStackEffect 6  "}} 
 Player 1 16:45:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 1 16:45:34 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":6,"creatorCardId":271,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":15,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 16:45:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":38,"_text":"Response Remove After Resolve PlayLootCardStackEffect 6"},"childOfId":37} 
 Player 1 16:45:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":39,"_text":"Wait For Response From Player 1 "},"childOfId":37} 
 Player 1 16:45:34 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 16:45:34 $ACTION_MASSAGE_REMOVE:  

 {"id":39} 
 Player 1 16:45:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":40,"_text":"Wait For Response From Player 2 "},"childOfId":37} 
 Player 1 16:45:34 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 16:45:34 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 16:45:35 $ACTION_MASSAGE_REMOVE:  

 {"id":40} 
 Player 1 16:45:35 $ACTION_MASSAGE_REMOVE:  

 {"id":38} 
 Player 1 16:45:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":41,"_text":"Resolve ActivateItem 4 "}} 
 Player 1 16:45:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 1 16:45:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 1 16:45:35 $DO_STACK_EFFECT:  

 {"originPlayerId":1,"playerId":2,"currentStack":[{"entityId":3,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":246},{"entityId":4,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 
 Player 1 16:45:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 1 16:45:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 1 16:45:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 1 16:45:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 1 16:45:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 1 16:45:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 1 16:45:37 $ACTION_MASSAGE_REMOVE:  

 {"id":41} 
 Player 1 16:45:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 1 16:45:37 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":246}} 
 Player 1 16:45:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 1 16:45:37 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":246}} 
 Player 1 16:45:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 1 16:45:37 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":4,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 16:45:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 1 16:45:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 1 16:45:37 $REPLACE_STACK:  

 {"currentStack":[{"entityId":3,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":246},{"entityId":4,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 
 Player 1 16:45:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Spider<Monster>"} 
 Player 1 16:45:37 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":4,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 16:45:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":42,"_text":"Remove After Resolve ActivateItem 4  "}} 
 Player 1 16:45:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Spider<Monster>"} 
 Player 1 16:45:38 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":4,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 16:45:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":43,"_text":"Response Remove After Resolve ActivateItem 4"},"childOfId":42} 
 Player 1 16:45:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":44,"_text":"Wait For Response From Player 2 "},"childOfId":42} 
 Player 1 16:45:38 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 16:45:38 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 16:45:38 $ACTION_MASSAGE_REMOVE:  

 {"id":37} 
 Player 1 16:45:38 $ACTION_MASSAGE_REMOVE:  

 {"id":44} 
 Player 1 16:45:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":45,"_text":"Wait For Response From Player 1 "},"childOfId":42} 
 Player 1 16:45:38 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 16:45:38 $ACTION_MASSAGE_REMOVE:  

 {"id":45} 
 Player 1 16:45:38 $ACTION_MASSAGE_REMOVE:  

 {"id":43} 
 Player 1 16:45:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":46,"_text":"Resolve AttackRoll 3 "}} 
 Player 1 16:45:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Spider<Monster>"} 
 Player 1 16:45:38 $DO_STACK_EFFECT:  

 {"originPlayerId":1,"playerId":2,"currentStack":[{"entityId":3,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":246}]} 
 Player 1 16:45:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Spider<Monster>"} 
 Player 1 16:45:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Spider<Monster>"} 
 Player 1 16:45:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Spider combat damage to The Lost"} 
 Player 1 16:45:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Spider combat damage to The Lost"} 
 Player 1 16:45:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Spider combat damage to The Lost"} 
 Player 1 16:45:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Spider combat damage to The Lost"} 
 Player 1 16:45:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Spider combat damage to The Lost"} 
 Player 1 16:45:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Spider combat damage to The Lost"} 
 Player 1 16:45:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Spider combat damage to The Lost"} 
 Player 1 16:45:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Spider combat damage to The Lost"} 
 Player 1 16:45:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Spider combat damage to The Lost"} 
 Player 1 16:45:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Spider combat damage to The Lost"} 
 Player 1 16:45:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is rolling against Spider<Monster>"} 
 Player 1 16:45:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is rolling against Spider<Monster>"} 
 Player 1 16:45:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is rolling against Spider<Monster>"} 
 Player 1 16:45:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is rolling against Spider<Monster>"} 
 Player 1 16:45:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is rolling against Spider<Monster>"} 
 Player 1 16:45:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is rolling against Spider<Monster>"} 
 Player 1 16:45:39 $ACTION_MASSAGE_REMOVE:  

 {"id":46} 
 Player 1 16:45:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is rolling against Spider<Monster>"} 
 Player 1 16:45:39 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":275,"entityToDoDamageCardId":246,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 16:45:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is rolling against Spider<Monster>"} 
 Player 1 16:45:39 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":275,"entityToDoDamageCardId":246,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 16:45:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is rolling against Spider<Monster>"} 
 Player 1 16:45:40 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":246}} 
 Player 1 16:45:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is rolling against Spider<Monster>"} 
 Player 1 16:45:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is rolling against Spider<Monster>"} 
 Player 1 16:45:40 $REPLACE_STACK:  

 {"currentStack":[{"entityId":7,"creatorCardId":275,"entityToDoDamageCardId":246,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":3,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":246}]} 
 Player 1 16:45:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Spider combat damage to The Lost"} 
 Player 1 16:45:40 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":246}} 
 Player 1 16:45:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":48,"_text":"Remove After Resolve AttackRoll 3  "}} 
 Player 1 16:45:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Spider combat damage to The Lost"} 
 Player 1 16:45:40 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":246}} 
 Player 1 16:45:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":49,"_text":"Response Remove After Resolve AttackRoll 3"},"childOfId":48} 
 Player 1 16:45:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":50,"_text":"Wait For Response From Player 2 "},"childOfId":48} 
 Player 1 16:45:40 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 16:45:40 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 16:45:40 $ACTION_MASSAGE_REMOVE:  

 {"id":42} 
 Player 1 16:45:40 $ACTION_MASSAGE_REMOVE:  

 {"id":50} 
 Player 1 16:45:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":51,"_text":"Wait For Response From Player 1 "},"childOfId":48} 
 Player 1 16:45:40 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 16:45:40 $ACTION_MASSAGE_REMOVE:  

 {"id":51} 
 Player 1 16:45:40 $ACTION_MASSAGE_REMOVE:  

 {"id":49} 
 Player 1 16:45:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":52,"_text":"Resolve CombatDamage 7 "}} 
 Player 1 16:45:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Spider combat damage to The Lost"} 
 Player 1 16:45:40 $DO_STACK_EFFECT:  

 {"originPlayerId":1,"playerId":2,"currentStack":[{"entityId":7,"creatorCardId":275,"entityToDoDamageCardId":246,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}]} 
 Player 1 16:45:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Spider combat damage to The Lost"} 
 Player 1 16:45:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Spider combat damage to The Lost"} 
 Player 1 16:45:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 16:45:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 16:45:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 16:45:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 16:45:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 16:45:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 16:45:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 16:45:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 16:45:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 16:45:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 16:45:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 1 16:45:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 1 16:45:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 1 16:45:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 1 16:45:42 $ACTION_MASSAGE_REMOVE:  

 {"id":52} 
 Player 1 16:45:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 1 16:45:42 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":275,"entityToDoDamageCardId":246,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 16:45:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 1 16:45:42 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":275,"entityToDoDamageCardId":246,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 16:45:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 1 16:45:42 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":8,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":246}} 
 Player 1 16:45:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 1 16:45:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 1 16:45:42 $REPLACE_STACK:  

 {"currentStack":[{"entityId":7,"creatorCardId":275,"entityToDoDamageCardId":246,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":8,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":246}]} 
 Player 1 16:45:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 16:45:42 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":275,"entityToDoDamageCardId":246,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 16:45:42 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":53,"_text":"Remove After Resolve CombatDamage 7  "}} 
 Player 1 16:45:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 16:45:42 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":7,"creatorCardId":275,"entityToDoDamageCardId":246,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 16:45:42 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":54,"_text":"Response Remove After Resolve CombatDamage 7"},"childOfId":53} 
 Player 1 16:45:42 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":55,"_text":"Wait For Response From Player 2 "},"childOfId":53} 
 Player 1 16:45:42 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 16:45:42 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 16:45:42 $ACTION_MASSAGE_REMOVE:  

 {"id":48} 
 Player 1 16:45:42 $ACTION_MASSAGE_REMOVE:  

 {"id":55} 
 Player 1 16:45:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":56,"_text":"Wait For Response From Player 1 "},"childOfId":53} 
 Player 1 16:45:43 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 16:45:43 $ACTION_MASSAGE_REMOVE:  

 {"id":56} 
 Player 1 16:45:43 $ACTION_MASSAGE_REMOVE:  

 {"id":54} 
 Player 1 16:45:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":57,"_text":"Resolve PlayerDeath 8 "}} 
 Player 1 16:45:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 16:45:43 $DO_STACK_EFFECT:  

 {"originPlayerId":1,"playerId":2,"currentStack":[{"entityId":8,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":246}]} 
 Player 1 16:45:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 16:45:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 16:45:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 
 Player 1 16:45:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 
 Player 1 16:45:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 
 Player 1 16:45:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 
 Player 1 16:45:43 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 16:45:44 $ACTION_MASSAGE_REMOVE:  

 {"id":53} 
 Player 1 16:45:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 
 Player 1 16:45:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 
 Player 1 16:45:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 
 Player 1 16:45:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 
 Player 1 16:45:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 
 Player 1 16:45:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 
 Player 1 16:45:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 
 Player 1 16:45:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 
 Player 1 16:45:46 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 16:45:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 16:45:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 16:45:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 16:45:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 16:45:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 16:45:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 16:45:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 16:45:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 16:45:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 16:45:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 16:45:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 16:45:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 16:45:47 $ACTION_MASSAGE_REMOVE:  

 {"id":57} 
 Player 1 16:45:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 16:45:47 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":8,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":246}} 
 Player 1 16:45:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 16:45:47 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":8,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":246}} 
 Player 1 16:45:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 16:45:47 $REPLACE_STACK:  

 {"currentStack":[{"entityId":8,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":246}]} 
 Player 1 16:45:47 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 16:45:47 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":8,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":246}} 
 Player 1 16:45:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":69,"_text":"Remove After Resolve PlayerDeath 8  "}} 
 Player 1 16:45:47 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 16:45:47 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":8,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":246}} 
 Player 1 16:45:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":70,"_text":"Response Remove After Resolve PlayerDeath 8"},"childOfId":69} 
 Player 1 16:45:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":71,"_text":"Wait For Response From Player 1 "},"childOfId":69} 
 Player 1 16:45:47 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 16:45:47 $ACTION_MASSAGE_REMOVE:  

 {"id":71} 
 Player 1 16:45:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":72,"_text":"Wait For Response From Player 2 "},"childOfId":69} 
 Player 1 16:45:47 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 16:45:47 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 16:45:48 $ACTION_MASSAGE_REMOVE:  

 {"id":72} 
 Player 1 16:45:48 $ACTION_MASSAGE_REMOVE:  

 {"id":70} 
 Player 1 16:45:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":73,"_text":"Stack Was Emptied "}} 
 Player 1 16:45:48 $STACK_EMPTIED:  

 {"playerId":2} 
 Player 1 16:45:48 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 16:45:48 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 1 16:45:48 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 1 16:45:48 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 1 16:45:48 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 1 16:45:48 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 1 16:45:48 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 1 16:45:48 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 1 16:45:48 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 1 16:45:48 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 1 16:45:48 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 1 16:45:48 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 1 16:45:48 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 1 16:45:48 $ACTION_MASSAGE_REMOVE:  

 {"id":23} 
 Player 1 16:45:48 $ACTION_MASSAGE_REMOVE:  

 {"id":27} 
 Player 1 16:45:48 $ACTION_MASSAGE_REMOVE:  

 {"id":31} 
 Player 1 16:45:48 $ACTION_MASSAGE_REMOVE:  

 {"id":32} 
 Player 1 16:45:48 $ACTION_MASSAGE_REMOVE:  

 {"id":36} 
 Player 1 16:45:48 $ACTION_MASSAGE_REMOVE:  

 {"id":37} 
 Player 1 16:45:48 $ACTION_MASSAGE_REMOVE:  

 {"id":41} 
 Player 1 16:45:48 $ACTION_MASSAGE_REMOVE:  

 {"id":42} 
 Player 1 16:45:48 $ACTION_MASSAGE_REMOVE:  

 {"id":46} 
 Player 1 16:45:48 $ACTION_MASSAGE_REMOVE:  

 {"id":47} 
 Player 1 16:45:48 $ACTION_MASSAGE_REMOVE:  

 {"id":48} 
 Player 1 16:45:48 $ACTION_MASSAGE_REMOVE:  

 {"id":52} 
 Player 1 16:45:48 $ACTION_MASSAGE_REMOVE:  

 {"id":53} 
 Player 1 16:45:48 $ACTION_MASSAGE_REMOVE:  

 {"id":57} 
 Player 1 16:45:48 $ACTION_MASSAGE_REMOVE:  

 {"id":58} 
 Player 1 16:45:49 $ACTION_MASSAGE_REMOVE:  

 {"id":62} 
 Player 1 16:45:49 $ACTION_MASSAGE_REMOVE:  

 {"id":63} 
 Player 1 16:45:49 $ACTION_MASSAGE_REMOVE:  

 {"id":64} 
 Player 1 16:45:49 $ACTION_MASSAGE_REMOVE:  

 {"id":68} 
 Player 1 16:45:49 $ACTION_MASSAGE_REMOVE:  

 {"id":69} 
 Player 1 16:45:49 $ACTION_MASSAGE_REMOVE:  

 {"id":73} 
 Player 1 16:45:49 $TURN_PLAYER_DO_STACK_EFFECT:  

 {"playerId":2} 
 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  

 {"id":73} 
 Player 1 16:45:50 $STACK_EMPTIED:  

 {"playerId":2} 
 Player 1 16:45:50 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  

 {"id":23} 
 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  

 {"id":27} 
 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  

 {"id":31} 
 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  

 {"id":32} 
 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  

 {"id":36} 
 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  

 {"id":37} 
 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  

 {"id":41} 
 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  

 {"id":42} 
 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  

 {"id":46} 
 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  

 {"id":47} 
 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  

 {"id":48} 
 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  

 {"id":52} 
 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  

 {"id":53} 
 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  

 {"id":57} 
 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  

 {"id":58} 
 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  

 {"id":62} 
 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  

 {"id":63} 
 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  

 {"id":64} 
 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  

 {"id":68} 
 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  

 {"id":69} 
 Player 1 16:45:51 $ACTION_MASSAGE_REMOVE:  

 {"id":73} 
 Player 1 16:45:51 $RECHARGE_ITEM:  

 {"cardId":271} 
 Player 1 16:45:51 $PLAYER_RECHARGE_ITEM:  

 {"playerId":1,"cardId":271} 
 Player 1 16:45:51 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 16:45:51 $NEXT_STACK_ID:  
 Player 1 16:45:51 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 16:45:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 16:45:51 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":11,"creatorCardId":271,"turnPlayerCardId":271,"stackEffectType":13}} 
 Player 1 16:45:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 16:45:51 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":11,"creatorCardId":271,"turnPlayerCardId":271,"stackEffectType":13}} 
 Player 1 16:45:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":74,"_text":"Add StartTurnLoot 11 "}} 
 Player 1 16:45:51 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 16:45:51 $ACTION_MASSAGE_REMOVE:  

 {"id":74} 
 Player 1 16:45:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 16:45:51 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":11,"creatorCardId":271,"turnPlayerCardId":271,"stackEffectType":13}} 
 Player 1 16:45:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":75,"_text":"Response Adding StartTurnLoot 11"},"childOfId":74} 
 Player 1 16:45:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":76,"_text":"Wait For Response From Player 1 "},"childOfId":74} 
 Player 1 16:45:51 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 16:45:51 $ACTION_MASSAGE_REMOVE:  

 {"id":76} 
 Player 1 16:45:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":77,"_text":"Wait For Response From Player 2 "},"childOfId":74} 
 Player 1 16:45:51 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 16:45:51 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 16:45:51 $ACTION_MASSAGE_REMOVE:  

 {"id":69} 
 Player 1 16:45:51 $ACTION_MASSAGE_REMOVE:  

 {"id":77} 
 Player 1 16:45:51 $ACTION_MASSAGE_REMOVE:  

 {"id":75} 
 Player 1 16:45:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":78,"_text":"Resolve StartTurnLoot 11 "}} 
 Player 1 16:45:51 $DRAW_CARD:  

 {"deckType":1} 
 Player 1 16:45:51 $MOVE_CARD:  

 {"moveIndex":10,"cardId":48,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 1 16:45:52 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":48} 
 Player 1 16:45:52 $FLIP_CARD:  

 {"cardId":48} 
 Player 1 16:45:52 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":48} 
 Player 1 16:45:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 16:45:52 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":11,"creatorCardId":271,"turnPlayerCardId":271,"stackEffectType":13}} 
 Player 1 16:45:52 $ACTION_MASSAGE_REMOVE:  

 {"id":78} 
 Player 1 16:45:52 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 16:45:52 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":11,"creatorCardId":271,"turnPlayerCardId":271,"stackEffectType":13}} 
 Player 1 16:45:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":79,"_text":"Remove After Resolve StartTurnLoot 11  "}} 
 Player 1 16:45:52 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 16:45:52 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":11,"creatorCardId":271,"turnPlayerCardId":271,"stackEffectType":13}} 
 Player 1 16:45:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":80,"_text":"Response Remove After Resolve StartTurnLoot 11"},"childOfId":79} 
 Player 1 16:45:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":81,"_text":"Wait For Response From Player 2 "},"childOfId":79} 
 Player 1 16:45:52 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 16:45:52 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 16:45:52 $ACTION_MASSAGE_REMOVE:  

 {"id":81} 
 Player 1 16:45:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":82,"_text":"Wait For Response From Player 1 "},"childOfId":79} 
 Player 1 16:45:52 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 16:45:52 $ACTION_MASSAGE_REMOVE:  

 {"id":82} 
 Player 1 16:45:52 $ACTION_MASSAGE_REMOVE:  

 {"id":80} 
 Player 1 16:45:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":83,"_text":"Stack Was Emptied "}} 
 Player 1 16:45:52 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 16:45:52 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  

 {"id":23} 
 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  

 {"id":27} 
 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  

 {"id":31} 
 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  

 {"id":32} 
 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  

 {"id":36} 
 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  

 {"id":37} 
 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  

 {"id":41} 
 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  

 {"id":42} 
 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  

 {"id":46} 
 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  

 {"id":47} 
 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  

 {"id":48} 
 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  

 {"id":52} 
 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  

 {"id":53} 
 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  

 {"id":57} 
 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  

 {"id":58} 
 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  

 {"id":62} 
 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  

 {"id":63} 
 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  

 {"id":64} 
 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  

 {"id":68} 
 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  

 {"id":69} 
 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  

 {"id":73} 
 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  

 {"id":74} 
 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  

 {"id":78} 
 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  

 {"id":79} 
 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  

 {"id":83} 
 Player 1 16:45:54 $ACTION_MASSAGE_REMOVE:  

 {"id":83} 
 Player 1 16:45:55 $ACTION_MASSAGE_REMOVE:  

 {"id":79} 
 Player 1 16:50:57 $NEXT_STACK_ID:  
 Player 1 16:50:57 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 16:50:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 2 Cents(10) "} 
 Player 1 16:50:58 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":12,"creatorCardId":271,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":30,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 1 16:50:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 2 Cents(10) "} 
 Player 1 16:50:58 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":12,"creatorCardId":271,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":30,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 1 16:50:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":84,"_text":"Add PlayLootCardStackEffect 12 "}} 
 Player 1 16:50:58 $PLAYER_LOSE_LOOT:  

 {"playerId":1,"cardId":30} 
 Player 1 16:50:58 $MOVE_CARD:  

 {"moveIndex":11,"cardId":30,"placeID":277,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 16:50:58 $MOVE_CARD_TO_PILE:  

 {"type":7,"cardId":30} 
 Player 1 16:50:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 2 Cents(10): addMoney"} 
 Player 1 16:50:58 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 16:50:58 $ACTION_MASSAGE_REMOVE:  

 {"id":84} 
 Player 1 16:50:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 2 Cents(10): addMoney"} 
 Player 1 16:50:58 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":12,"creatorCardId":271,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":30,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":30,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 16:50:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":85,"_text":"Response Adding PlayLootCardStackEffect 12"},"childOfId":84} 
 Player 1 16:50:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":86,"_text":"Wait For Response From Player 1 "},"childOfId":84} 
 Player 1 16:50:58 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 16:50:58 $ACTION_MASSAGE_REMOVE:  

 {"id":86} 
 Player 1 16:50:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":87,"_text":"Wait For Response From Player 2 "},"childOfId":84} 
 Player 1 16:50:58 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 16:50:58 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 16:50:58 $ACTION_MASSAGE_REMOVE:  

 {"id":87} 
 Player 1 16:50:59 $ACTION_MASSAGE_REMOVE:  

 {"id":85} 
 Player 1 16:50:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":88,"_text":"Resolve PlayLootCardStackEffect 12 "}} 
 Player 1 16:50:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 2 Cents(10): addMoney"} 
 Player 1 16:50:59 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":30,"particleType":6} 
 Player 1 16:51:01 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":30,"particleType":6} 
 Player 1 16:51:01 $SET_MONEY:  

 {"playerId":1,"numOfCoins":6} 
 Player 1 16:51:01 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":2}],"result":null,"preventMethod":false,"methodScopeId":271,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Player 1 16:51:01 $REMOVE_FROM_PILE:  

 {"cardId":30} 
 Player 1 16:51:01 $MOVE_CARD:  

 {"moveIndex":12,"cardId":30,"placeID":278,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 16:51:01 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":30} 
 Player 1 16:51:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 2 Cents(10): addMoney"} 
 Player 1 16:51:01 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":12,"creatorCardId":271,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":30,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 16:51:01 $ACTION_MASSAGE_REMOVE:  

 {"id":88} 
 Player 1 16:51:01 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 16:51:01 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":12,"creatorCardId":271,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":30,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 16:51:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":89,"_text":"Remove After Resolve PlayLootCardStackEffect 12  "}} 
 Player 1 16:51:01 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 16:51:01 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":12,"creatorCardId":271,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":30,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 16:51:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":90,"_text":"Response Remove After Resolve PlayLootCardStackEffect 12"},"childOfId":89} 
 Player 1 16:51:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":91,"_text":"Wait For Response From Player 2 "},"childOfId":89} 
 Player 1 16:51:01 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 16:51:01 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  

 {"id":91} 
 Player 1 16:51:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":92,"_text":"Wait For Response From Player 1 "},"childOfId":89} 
 Player 1 16:51:02 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  

 {"id":92} 
 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  

 {"id":90} 
 Player 1 16:51:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":93,"_text":"Stack Was Emptied "}} 
 Player 1 16:51:02 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  

 {"id":23} 
 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  

 {"id":27} 
 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  

 {"id":31} 
 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  

 {"id":32} 
 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  

 {"id":36} 
 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  

 {"id":37} 
 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  

 {"id":41} 
 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  

 {"id":42} 
 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  

 {"id":46} 
 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  

 {"id":47} 
 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  

 {"id":48} 
 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  

 {"id":52} 
 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  

 {"id":53} 
 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  

 {"id":57} 
 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  

 {"id":58} 
 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  

 {"id":62} 
 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  

 {"id":63} 
 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  

 {"id":64} 
 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  

 {"id":68} 
 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  

 {"id":69} 
 Player 1 16:51:03 $ACTION_MASSAGE_REMOVE:  

 {"id":73} 
 Player 1 16:51:03 $ACTION_MASSAGE_REMOVE:  

 {"id":74} 
 Player 1 16:51:03 $ACTION_MASSAGE_REMOVE:  

 {"id":78} 
 Player 1 16:51:03 $ACTION_MASSAGE_REMOVE:  

 {"id":79} 
 Player 1 16:51:03 $ACTION_MASSAGE_REMOVE:  

 {"id":83} 
 Player 1 16:51:03 $ACTION_MASSAGE_REMOVE:  

 {"id":84} 
 Player 1 16:51:03 $ACTION_MASSAGE_REMOVE:  

 {"id":88} 
 Player 1 16:51:03 $ACTION_MASSAGE_REMOVE:  

 {"id":89} 
 Player 1 16:51:03 $ACTION_MASSAGE_REMOVE:  

 {"id":93} 
 Player 1 16:51:03 $ACTION_MASSAGE_REMOVE:  

 {"id":93} 
 Player 1 16:51:04 $ACTION_MASSAGE_REMOVE:  

 {"id":89}