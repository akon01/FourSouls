Start Log 
 Player 1 08:40:14 $START_GAME:  
 Player 1 08:40:14 $MOVE_TO_TABLE:  
 Player 1 08:40:21 $FINISH_LOAD:  

 {"id":1,"turnPlayerId":2} 
 Player 1 08:40:23 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":275}],"result":true,"preventMethod":false,"methodScopeId":274,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 1 08:40:23 $MOVE_CARD_END:  

 {"moveIndex":1,"cardId":84,"flipIfFlipped":false,"playerId":2} 
 Player 1 08:40:23 $MOVE_CARD_END:  

 {"moveIndex":2,"cardId":119,"flipIfFlipped":false,"playerId":2} 
 Player 1 08:40:24 $MOVE_CARD_END:  

 {"moveIndex":3,"cardId":127,"flipIfFlipped":false,"playerId":2} 
 Player 1 08:40:25 $MOVE_CARD_END:  

 {"moveIndex":4,"cardId":54,"flipIfFlipped":false,"playerId":2} 
 Player 1 08:40:25 $MOVE_CARD_END:  

 {"moveIndex":5,"cardId":125,"flipIfFlipped":false,"playerId":2} 
 Player 1 08:40:26 $MOVE_CARD_END:  

 {"moveIndex":6,"cardId":114,"flipIfFlipped":false,"playerId":2} 
 Player 1 08:40:26 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 08:40:26 $NEXT_STACK_ID:  
 Player 1 08:40:26 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 08:40:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 08:40:26 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":274,"turnPlayerCardId":274,"stackEffectType":13}} 
 Player 1 08:40:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 
 Player 1 08:40:26 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 08:40:26 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 1 08:40:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 08:40:26 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":274,"turnPlayerCardId":274,"stackEffectType":13}} 
 Player 1 08:40:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 
 Player 1 08:40:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 1 08:40:26 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 08:40:26 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 1 08:40:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 1 08:40:26 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 08:40:26 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 08:40:26 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 1 08:40:26 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 1 08:40:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 
 Player 1 08:40:26 $DRAW_CARD:  

 {"deckType":1} 
 Player 1 08:40:26 $MOVE_CARD:  

 {"moveIndex":7,"cardId":75,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 1 08:40:27 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":75} 
 Player 1 08:40:27 $FLIP_CARD:  

 {"cardId":75} 
 Player 1 08:40:27 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":75} 
 Player 1 08:40:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 08:40:27 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":274,"turnPlayerCardId":274,"stackEffectType":13}} 
 Player 1 08:40:27 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 1 08:40:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 
 Player 1 08:40:27 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 08:40:27 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":274,"turnPlayerCardId":274,"stackEffectType":13}} 
 Player 1 08:40:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 
 Player 1 08:40:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Player 1 08:40:27 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 08:40:27 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 08:40:27 $ACTION_MASSAGE_REMOVE:  

 {"id":7} 
 Player 1 08:40:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Player 1 08:40:27 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 08:40:27 $ACTION_MASSAGE_REMOVE:  

 {"id":8} 
 Player 1 08:40:27 $ACTION_MASSAGE_REMOVE:  

 {"id":6} 
 Player 1 08:40:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":9,"_text":"Stack Was Emptied "}} 
 Player 1 08:40:27 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 08:40:27 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 1 08:40:27 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 1 08:40:28 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 1 08:40:28 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 1 08:40:28 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 1 08:40:28 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 1 08:40:28 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 1 08:40:29 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 1 08:40:30 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 1 08:40:34 $NEXT_STACK_ID:  
 Player 1 08:40:34 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 08:40:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Monster Deck"} 
 Player 1 08:40:35 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":274,"attackingPlayerCardId":274,"idOfCardBeingAttacked":205,"stackEffectType":4}} 
 Player 1 08:40:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":10,"_text":"Add DeclareAttack 2 "}} 
 Player 1 08:40:35 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 08:40:35 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 1 08:40:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Monster Deck"} 
 Player 1 08:40:35 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":274,"attackingPlayerCardId":274,"idOfCardBeingAttacked":205,"stackEffectType":4}} 
 Player 1 08:40:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":11,"_text":"Response Adding DeclareAttack 2"},"childOfId":10} 
 Player 1 08:40:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 
 Player 1 08:40:35 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 08:40:35 $ACTION_MASSAGE_REMOVE:  

 {"id":12} 
 Player 1 08:40:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 
 Player 1 08:40:35 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 08:40:35 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 08:40:35 $ACTION_MASSAGE_REMOVE:  

 {"id":13} 
 Player 1 08:40:35 $ACTION_MASSAGE_REMOVE:  

 {"id":11} 
 Player 1 08:40:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":14,"_text":"Resolve DeclareAttack 2 "}} 
 Player 1 08:40:35 $DRAW_CARD:  

 {"deckType":2} 
 Player 1 08:40:35 $SHOW_CARD_PREVIEW:  

 {"cardToShowId":220,"playerId":1} 
 Player 1 08:40:39 $FLIP_CARD:  

 {"cardId":220} 
 Player 1 08:40:39 $ADD_MONSTER:  

 {"monsterPlaceId":2,"monsterId":220} 
 Player 1 08:40:39 $NEW_MONSTER_ON_PLACE:  

 {"cardId":220,"monsterPlaceId":2} 
 Player 1 08:40:39 $NEXT_STACK_ID:  
 Player 1 08:40:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Monster Deck"} 
 Player 1 08:40:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Monster Deck \n2:Player 1 activated Dark Chest (2)"} 
 Player 1 08:40:39 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":274,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":220,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 1 08:40:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":15,"_text":"Add ActivateItem 3 "}} 
 Player 1 08:40:39 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 08:40:39 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 1 08:40:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Monster Deck \n2:Player 1 activated Dark Chest (2)"} 
 Player 1 08:40:39 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":274,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":220,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 1 08:40:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":16,"_text":"Response Adding ActivateItem 3"},"childOfId":15} 
 Player 1 08:40:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 
 Player 1 08:40:39 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 08:40:39 $ACTION_MASSAGE_REMOVE:  

 {"id":17} 
 Player 1 08:40:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 
 Player 1 08:40:39 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 08:40:39 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 08:40:40 $ACTION_MASSAGE_REMOVE:  

 {"id":18} 
 Player 1 08:40:40 $ACTION_MASSAGE_REMOVE:  

 {"id":16} 
 Player 1 08:40:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":19,"_text":"Resolve ActivateItem 3 "}} 
 Player 1 08:40:40 $NEXT_STACK_ID:  
 Player 1 08:40:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Monster Deck \n2:Player 1 activated Dark Chest (2)"} 
 Player 1 08:40:40 $NEXT_STACK_ID:  
 Player 1 08:40:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Monster Deck \n2:Player 1 activated Dark Chest (2)"} 
 Player 1 08:40:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Monster Deck \n2:Player 1 activated Dark Chest (2) \n3:Player 1 roll a dice"} 
 Player 1 08:40:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Monster Deck \n2:Player 1 activated Dark Chest (2) \n3:Player 1 roll a dice"} 
 Player 1 08:40:40 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":5,"creatorCardId":274,"stackEffectToLock":{"entityId":3,"creatorCardId":274,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":220,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"stackEffectType":11}} 
 Player 1 08:40:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":20,"_text":"Add RollDiceStackEffect 5 "}} 
 Player 1 08:40:40 $ROLL_DICE:  

 {"playerId":1} 
 Player 1 08:40:42 $ROLL_DICE_ENDED:  

 {"playerId":1,"numberRolled":2} 
 Player 1 08:40:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Monster Deck \n2:Player 1 activated Dark Chest (2) \n3:Player 1 rolled 2"} 
 Player 1 08:40:42 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 08:40:42 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 1 08:40:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Monster Deck \n2:Player 1 activated Dark Chest (2) \n3:Player 1 rolled 2"} 
 Player 1 08:40:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Monster Deck \n2:Player 1 activated Dark Chest (2) \n3:Player 1 rolled 2"} 
 Player 1 08:40:42 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":5,"creatorCardId":274,"stackEffectToLock":{"entityId":3,"creatorCardId":274,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":220,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"numberRolled":2,"stackEffectType":11}} 
 Player 1 08:40:42 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":21,"_text":"Response Adding RollDiceStackEffect 5"},"childOfId":20} 
 Player 1 08:40:42 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":22,"_text":"Wait For Response From Player 1 "},"childOfId":20} 
 Player 1 08:40:42 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 08:40:42 $ACTION_MASSAGE_REMOVE:  

 {"id":22} 
 Player 1 08:40:42 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":23,"_text":"Wait For Response From Player 2 "},"childOfId":20} 
 Player 1 08:40:42 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 08:40:42 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 08:40:42 $ACTION_MASSAGE_REMOVE:  

 {"id":23} 
 Player 1 08:40:42 $ACTION_MASSAGE_REMOVE:  

 {"id":21} 
 Player 1 08:40:42 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":24,"_text":"Resolve RollDiceStackEffect 5 "}} 
 Player 1 08:40:42 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":274,"scopeIsPlayer":true,"index":2,"originStackId":5},"isAfterActivation":true,"index":2} 
 Player 1 08:40:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Monster Deck \n2:Player 1 activated Dark Chest (2) \n3:Player 1 rolled 2"} 
 Player 1 08:40:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Monster Deck \n2:Player 1 activated Dark Chest (2) \n3:Player 1 rolled 2"} 
 Player 1 08:40:42 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":5,"creatorCardId":274,"stackEffectToLock":{"entityId":3,"creatorCardId":274,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":220,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"numberRolled":2,"stackEffectType":11}} 
 Player 1 08:40:42 $ACTION_MASSAGE_REMOVE:  

 {"id":24} 
 Player 1 08:40:42 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":25,"_text":"Remove After Resolve RollDiceStackEffect 5  "}} 
 Player 1 08:40:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Monster Deck \n2:Player 1 activated Dark Chest (2)"} 
 Player 1 08:40:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Monster Deck \n2:Player 1 activated Dark Chest (2)"} 
 Player 1 08:40:43 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":5,"creatorCardId":274,"stackEffectToLock":{"entityId":3,"creatorCardId":274,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":220,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"numberRolled":2,"stackEffectType":11}} 
 Player 1 08:40:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":26,"_text":"Response Remove After Resolve RollDiceStackEffect 5"},"childOfId":25} 
 Player 1 08:40:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":27,"_text":"Wait For Response From Player 2 "},"childOfId":25} 
 Player 1 08:40:43 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 08:40:43 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 08:40:43 $ACTION_MASSAGE_REMOVE:  

 {"id":27} 
 Player 1 08:40:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":28,"_text":"Wait For Response From Player 1 "},"childOfId":25} 
 Player 1 08:40:43 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 08:40:43 $ACTION_MASSAGE_REMOVE:  

 {"id":28} 
 Player 1 08:40:43 $ACTION_MASSAGE_REMOVE:  

 {"id":26} 
 Player 1 08:40:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":29,"_text":"Resolve ActivateItem 3 "}} 
 Player 1 08:40:43 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":220,"particleType":6} 
 Player 1 08:40:45 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":220,"particleType":6} 
 Player 1 08:40:45 $SET_MONEY:  

 {"playerId":1,"numOfCoins":4} 
 Player 1 08:40:45 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":1}],"result":null,"preventMethod":false,"methodScopeId":274,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Player 1 08:40:45 $MOVE_CARD:  

 {"moveIndex":8,"cardId":220,"placeID":281,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 08:40:45 $ACTION_MASSAGE_REMOVE:  

 {"id":25} 
 Player 1 08:40:45 $MOVE_CARD_TO_PILE:  

 {"type":2,"cardId":220} 
 Player 1 08:40:45 $REMOVE_MONSTER:  

 {"holderId":2,"monsterId":220} 
 Player 1 08:40:45 $GET_NEXT_MONSTER:  

 {"monsterPlaceId":2} 
 Player 1 08:40:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Monster Deck \n2:Player 1 activated Dark Chest (2)"} 
 Player 1 08:40:46 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":274,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":220,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 1 08:40:46 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 1 08:40:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":30,"_text":"Remove After Resolve ActivateItem 3  "}} 
 Player 1 08:40:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Monster Deck"} 
 Player 1 08:40:46 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":274,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":220,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 1 08:40:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":31,"_text":"Response Remove After Resolve ActivateItem 3"},"childOfId":30} 
 Player 1 08:40:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":32,"_text":"Wait For Response From Player 1 "},"childOfId":30} 
 Player 1 08:40:46 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 08:40:46 $ACTION_MASSAGE_REMOVE:  

 {"id":32} 
 Player 1 08:40:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":33,"_text":"Wait For Response From Player 2 "},"childOfId":30} 
 Player 1 08:40:46 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 08:40:46 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 08:40:46 $ACTION_MASSAGE_REMOVE:  

 {"id":33} 
 Player 1 08:40:46 $ACTION_MASSAGE_REMOVE:  

 {"id":31} 
 Player 1 08:40:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":34,"_text":"Resolve DeclareAttack 2 "}} 
 Player 1 08:40:46 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":274,"scopeIsPlayer":true,"index":4,"originStackId":2},"isAfterActivation":true,"index":4} 
 Player 1 08:40:46 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 1 08:40:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":35,"_text":"Remove After Resolve DeclareAttack 2  "}} 
 Player 1 08:40:46 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 08:40:46 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":274,"attackingPlayerCardId":274,"idOfCardBeingAttacked":220,"stackEffectType":4}} 
 Player 1 08:40:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":36,"_text":"Response Remove After Resolve DeclareAttack 2"},"childOfId":35} 
 Player 1 08:40:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":37,"_text":"Wait For Response From Player 2 "},"childOfId":35} 
 Player 1 08:40:46 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 08:40:46 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 08:40:46 $ACTION_MASSAGE_REMOVE:  

 {"id":37} 
 Player 1 08:40:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":38,"_text":"Wait For Response From Player 1 "},"childOfId":35} 
 Player 1 08:40:46 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 08:40:46 $ACTION_MASSAGE_REMOVE:  

 {"id":38} 
 Player 1 08:40:47 $ACTION_MASSAGE_REMOVE:  

 {"id":36} 
 Player 1 08:40:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":39,"_text":"Stack Was Emptied "}} 
 Player 1 08:40:47 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 08:40:47 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 1 08:40:47 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 1 08:40:47 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 1 08:40:47 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 1 08:40:47 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 1 08:40:47 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 1 08:40:47 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 1 08:40:47 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 1 08:40:47 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 1 08:40:47 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 1 08:40:47 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 1 08:40:47 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 1 08:40:47 $ACTION_MASSAGE_REMOVE:  

 {"id":24} 
 Player 1 08:40:47 $ACTION_MASSAGE_REMOVE:  

 {"id":25} 
 Player 1 08:40:47 $ACTION_MASSAGE_REMOVE:  

 {"id":29} 
 Player 1 08:40:47 $ACTION_MASSAGE_REMOVE:  

 {"id":30} 
 Player 1 08:40:47 $ACTION_MASSAGE_REMOVE:  

 {"id":34} 
 Player 1 08:40:47 $ACTION_MASSAGE_REMOVE:  

 {"id":35} 
 Player 1 08:40:47 $ACTION_MASSAGE_REMOVE:  

 {"id":39} 
 Player 1 08:40:48 $ACTION_MASSAGE_REMOVE:  

 {"id":39} 
 Player 1 08:40:48 $ACTION_MASSAGE_REMOVE:  

 {"id":30} 
 Player 1 08:40:49 $ACTION_MASSAGE_REMOVE:  

 {"id":35} 
 Player 1 08:41:19 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 08:41:19 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 08:41:19 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 1 08:41:19 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 1 08:41:20 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 1 08:41:20 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 1 08:41:20 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 1 08:41:20 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 1 08:41:20 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 1 08:41:20 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 1 08:41:20 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 1 08:41:20 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 1 08:41:20 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 1 08:41:20 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 1 08:41:20 $ACTION_MASSAGE_REMOVE:  

 {"id":24} 
 Player 1 08:41:20 $ACTION_MASSAGE_REMOVE:  

 {"id":25} 
 Player 1 08:41:20 $ACTION_MASSAGE_REMOVE:  

 {"id":29} 
 Player 1 08:41:20 $ACTION_MASSAGE_REMOVE:  

 {"id":30} 
 Player 1 08:41:20 $ACTION_MASSAGE_REMOVE:  

 {"id":34} 
 Player 1 08:41:20 $ACTION_MASSAGE_REMOVE:  

 {"id":35} 
 Player 1 08:41:20 $ACTION_MASSAGE_REMOVE:  

 {"id":39} 
 Player 1 08:41:20 $REPLACE_STACK:  

 {"currentStack":[]} 
 Player 1 08:41:20 $END_TURN:  
 Player 1 08:41:20 $SET_TURN:  

 {"playerId":2} 
 Player 1 08:41:20 $START_TURN:  

 {"playerId":2} 
 Player 1 08:41:21 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 08:41:21 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 08:41:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 08:41:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 08:41:21 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 08:41:22 $MOVE_CARD_END:  

 {"moveIndex":9,"cardId":65,"flipIfFlipped":false,"playerId":2} 
 Player 1 08:41:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 08:41:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 08:41:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 08:41:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 08:41:22 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 08:41:27 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 08:41:27 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 08:41:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 
 Player 1 08:41:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 
 Player 1 08:41:27 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 08:41:28 $MOVE_CARD_END:  

 {"moveIndex":10,"cardId":182,"flipIfFlipped":true,"playerId":2} 
 Player 1 08:41:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 
 Player 1 08:41:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 
 Player 1 08:41:28 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false}