Start Log 

 Player 1 04:10:19 $MATCH:  

 Player 1 04:10:20 $START_GAME:  

 Player 2 04:10:20 $MOVE_TO_TABLE:  

 Player 1 04:10:20 $MOVE_TO_TABLE:  

 Player 1 04:10:28 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 04:10:28 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 2 04:10:28 $SET_CHAR:  
{"originPlayerId":2,"playerId":1,"charCardId":298,"itemCardId":299} 

 Player 1 04:10:28 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":298,"itemCardId":299} 

 Player 1 04:10:28 $SET_CHAR_END:  
{"playerId":2} 

 Player 2 04:10:28 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":292,"itemCardId":293} 

 Player 2 04:10:28 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[46,27,45,18,35,64,100,132,110,59,107,70,102,75,119,116,49,135,98,31,78,65,74,42,7,28,88,51,57,101,8,43,21,13,87,115,104,30,126,66,117,130,120,25,24,44,95,93,141,69,53,79,106,121,16,139,56,97,36,80,122,34,111,112,12,72,17,99,129,23,138,123,140,15,96,142,50,133,81,118,83,124,89,19,14,114,134,91,58,61,125,33,77,40,32,73,55,48,26,137,39,85,47,109,131,84,128,90,71,86,68,76,54,103,63,10,82,9,136,113,60,38,11,20,94,37,67,105,92,127,52,22,41,29,62,108]} 

 Player 2 04:10:28 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[275,273,266,248,247,280,260,251,276,272,242,258,259,239,261,281,277,278,268,265,254,274,236,257,269,250,263,237,267,229,241,231,245,232,253,252,235,279,271,240,255,243,228,262,256,246,270,238,233,234,264,249,230,244]} 

 Player 2 04:10:28 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[177,179,216,167,157,155,208,199,204,196,223,182,180,181,163,188,185,152,158,203,159,183,197,172,222,153,201,209,166,213,171,221,173,195,169,194,186,215,162,160,150,217,178,207,192,164,224,200,161,219,148,211,187,214,168,220,184,189,146,198,174,165,190,170,145,149,151,210,147,202,218,175,225,193,191,206,176,154,212,205,156]} 

 Player 2 04:10:28 $DRAW_CARD:  
{"deckType":5} 

 Player 2 04:10:28 $FLIP_CARD:  
{"cardId":156} 

 Player 2 04:10:28 $ADD_STORE_CARD:  
{"cardId":156} 

 Player 2 04:10:28 $DRAW_CARD:  
{"deckType":5} 

 Player 2 04:10:28 $FLIP_CARD:  
{"cardId":205} 

 Player 2 04:10:28 $ADD_STORE_CARD:  
{"cardId":205} 

 Player 2 04:10:28 $DRAW_CARD:  
{"deckType":2} 

 Player 2 04:10:28 $FLIP_CARD:  
{"cardId":244} 

 Player 2 04:10:29 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":244} 

 Player 2 04:10:29 $NEW_MONSTER_ON_PLACE:  
{"cardId":244,"monsterPlaceId":1} 

 Player 2 04:10:29 $DRAW_CARD:  
{"deckType":2} 

 Player 2 04:10:29 $FLIP_CARD:  
{"cardId":230} 

 Player 2 04:10:29 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":230} 

 Player 2 04:10:29 $NEW_MONSTER_ON_PLACE:  
{"cardId":230,"monsterPlaceId":2} 

 Player 2 04:10:29 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 04:10:29 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 04:10:29 $DRAW_CARD:  
{"deckType":1} 

 Player 2 04:10:29 $MOVE_CARD:  
{"moveIndex":1,"cardId":108,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 04:10:29 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":108,"flipIfFlipped":false,"playerId":2} 

 Player 2 04:10:29 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":108} 

 Player 2 04:10:29 $FLIP_CARD:  
{"cardId":108} 

 Player 2 04:10:29 $FLIP_CARD:  
{"cardId":108} 

 Player 2 04:10:29 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":108} 

 Player 2 04:10:29 $DRAW_CARD:  
{"deckType":1} 

 Player 2 04:10:29 $MOVE_CARD:  
{"moveIndex":2,"cardId":62,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 04:10:30 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":62,"flipIfFlipped":false,"playerId":2} 

 Player 2 04:10:30 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":62} 

 Player 2 04:10:30 $FLIP_CARD:  
{"cardId":62} 

 Player 2 04:10:30 $FLIP_CARD:  
{"cardId":62} 

 Player 2 04:10:30 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":62} 

 Player 2 04:10:30 $DRAW_CARD:  
{"deckType":1} 

 Player 2 04:10:30 $MOVE_CARD:  
{"moveIndex":3,"cardId":29,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 04:10:30 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":29,"flipIfFlipped":false,"playerId":2} 

 Player 2 04:10:30 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":29} 

 Player 2 04:10:30 $FLIP_CARD:  
{"cardId":29} 

 Player 2 04:10:30 $FLIP_CARD:  
{"cardId":29} 

 Player 2 04:10:30 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":29} 

 Player 2 04:10:30 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 04:10:30 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 04:10:30 $DRAW_CARD:  
{"deckType":1} 

 Player 2 04:10:30 $MOVE_CARD:  
{"moveIndex":4,"cardId":41,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 04:10:31 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":41,"flipIfFlipped":false,"playerId":2} 

 Player 2 04:10:31 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":41} 

 Player 2 04:10:31 $FLIP_CARD:  
{"cardId":41} 

 Player 2 04:10:31 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":41} 

 Player 2 04:10:31 $DRAW_CARD:  
{"deckType":1} 

 Player 2 04:10:31 $MOVE_CARD:  
{"moveIndex":5,"cardId":22,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 04:10:31 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":22,"flipIfFlipped":false,"playerId":2} 

 Player 2 04:10:31 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":22} 

 Player 2 04:10:31 $FLIP_CARD:  
{"cardId":22} 

 Player 2 04:10:31 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":22} 

 Player 2 04:10:31 $DRAW_CARD:  
{"deckType":1} 

 Player 2 04:10:31 $MOVE_CARD:  
{"moveIndex":6,"cardId":52,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 04:10:32 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":52,"flipIfFlipped":false,"playerId":2} 

 Player 2 04:10:32 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":52} 

 Player 2 04:10:32 $FLIP_CARD:  
{"cardId":52} 

 Player 2 04:10:32 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":52} 

 Player 2 04:10:32 $GAME_HAS_STARTED:  

 Player 2 04:10:32 $SET_TURN:  
{"playerId":2} 

 Player 2 04:10:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 04:10:32 $NEXT_STACK_ID:  

 Player 2 04:10:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 04:10:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 04:10:32 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 2 04:10:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 04:10:32 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 1 04:10:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 04:10:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 04:10:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 04:10:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 04:10:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 2 04:10:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 04:10:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 04:10:35 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 2 04:10:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 2 04:10:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 2 04:10:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 04:10:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 2 04:10:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 04:10:35 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 04:10:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 04:10:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 04:10:35 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 04:10:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 2 04:10:35 $DRAW_CARD:  
{"deckType":1} 

 Player 2 04:10:35 $MOVE_CARD:  
{"moveIndex":7,"cardId":127,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 04:10:36 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":127,"flipIfFlipped":false,"playerId":2} 

 Player 2 04:10:36 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":127} 

 Player 2 04:10:36 $FLIP_CARD:  
{"cardId":127} 

 Player 2 04:10:36 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":127} 

 Player 2 04:10:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 04:10:36 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 2 04:10:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 04:10:36 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 2 04:10:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 2 04:10:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 04:10:36 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 2 04:10:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 2 04:10:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 2 04:10:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 04:10:36 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 04:10:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 04:10:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 04:10:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 04:10:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 04:10:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 04:10:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 04:10:36 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 04:10:36 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 2 04:10:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 2 04:10:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 04:10:36 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 2 04:10:36 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 2 04:10:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 2 04:10:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 04:10:36 $UPDATE_ACTIONS:  

 Player 2 04:11:26 $SHOW_DECISION:  
{"startCardId":292,"endCardId":244} 

 Player 2 04:11:29 $NEXT_STACK_ID:  

 Player 2 04:11:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 04:11:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Dip"} 

 Player 2 04:11:29 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":292,"attackingPlayerCardId":292,"idOfCardBeingAttacked":244,"stackEffectType":4}} 

 Player 2 04:11:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Dip"} 

 Player 2 04:11:29 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":292,"attackingPlayerCardId":292,"idOfCardBeingAttacked":244,"stackEffectType":4}} 

 Player 1 04:11:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 04:11:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 04:11:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Dip"} 

 Player 1 04:11:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Dip"} 

 Player 2 04:11:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add DeclareAttack 2 "}} 

 Player 2 04:11:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 04:11:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Dip"} 

 Player 2 04:11:32 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":292,"attackingPlayerCardId":292,"idOfCardBeingAttacked":244,"stackEffectType":4}} 

 Player 2 04:11:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding DeclareAttack 2"},"childOfId":10} 

 Player 2 04:11:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 2 04:11:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 04:11:32 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 2 04:11:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 2 04:11:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 04:11:33 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 04:11:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Dip"} 

 Player 1 04:11:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Dip"} 

 Player 1 04:11:33 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 04:11:33 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 2 04:11:33 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 2 04:11:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve DeclareAttack 2 "}} 

 Player 2 04:11:33 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":244,"particleType":5} 

 Player 2 04:11:33 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":3,"originStackId":2},"isAfterActivation":true,"index":3} 

 Player 2 04:11:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Dip"} 

 Player 2 04:11:33 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":292,"attackingPlayerCardId":292,"idOfCardBeingAttacked":244,"stackEffectType":4}} 

 Player 2 04:11:33 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 04:11:33 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":292,"attackingPlayerCardId":292,"idOfCardBeingAttacked":244,"stackEffectType":4}} 

 Player 2 04:11:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve DeclareAttack 2  "}} 

 Player 2 04:11:33 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 04:11:33 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":292,"attackingPlayerCardId":292,"idOfCardBeingAttacked":244,"stackEffectType":4}} 

 Player 2 04:11:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve DeclareAttack 2"},"childOfId":15} 

 Player 2 04:11:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 2 04:11:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 04:11:33 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 04:11:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Dip"} 

 Player 1 04:11:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Dip"} 

 Player 1 04:11:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Dip"} 

 Player 1 04:11:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Dip"} 

 Player 1 04:11:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Dip"} 

 Player 1 04:11:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Dip"} 

 Player 1 04:11:33 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 04:11:33 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 04:11:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 2 04:11:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 04:11:34 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 2 04:11:34 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 2 04:11:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 2 04:11:34 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 04:12:09 $SHOW_DECISION:  
{"startCardId":41,"endCardId":41,"flipEndCard":true} 

 Player 2 04:12:12 $NEXT_STACK_ID:  

 Player 2 04:12:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 04:12:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(3) "} 

 Player 2 04:12:12 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":292,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":41,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 04:12:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(3) "} 

 Player 2 04:12:12 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":292,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":41,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 04:12:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 04:12:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 04:12:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(3) "} 

 Player 1 04:12:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(3) "} 

 Player 2 04:12:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add PlayLootCardStackEffect 3 "}} 

 Player 2 04:12:15 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":41} 

 Player 2 04:12:15 $MOVE_CARD:  
{"moveIndex":8,"cardId":41,"placeID":300,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 04:12:15 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":41,"flipIfFlipped":true,"playerId":2} 

 Player 2 04:12:15 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":41} 

 Player 2 04:12:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(3): addMoney"} 

 Player 2 04:12:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 04:12:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(3): addMoney"} 

 Player 2 04:12:15 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":292,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":41,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":41,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 04:12:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding PlayLootCardStackEffect 3"},"childOfId":20} 

 Player 2 04:12:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 2 04:12:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 04:12:15 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 2 04:12:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 2 04:12:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 04:12:16 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 04:12:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(3) "} 

 Player 1 04:12:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(3) "} 

 Player 1 04:12:16 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 04:12:16 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 2 04:12:16 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 2 04:12:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve PlayLootCardStackEffect 3 "}} 

 Player 2 04:12:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(3): addMoney"} 

 Player 2 04:12:16 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":41,"particleType":6} 

 Player 2 04:12:18 $DISABLE_PARTICLE_EFFECT:  
{"cardId":41,"particleType":6} 

 Player 2 04:12:18 $SET_MONEY:  
{"playerId":2,"numOfCoins":6} 

 Player 2 04:12:18 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 2 04:12:18 $REMOVE_FROM_PILE:  
{"cardId":41} 

 Player 2 04:12:18 $MOVE_CARD:  
{"moveIndex":9,"cardId":41,"placeID":301,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 04:12:18 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":41,"flipIfFlipped":true,"playerId":2} 

 Player 2 04:12:18 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":41} 

 Player 2 04:12:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(3): addMoney"} 

 Player 2 04:12:18 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":292,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":41,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 04:12:18 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 04:12:18 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":292,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":41,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 04:12:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Remove After Resolve PlayLootCardStackEffect 3  "}} 

 Player 2 04:12:18 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 04:12:18 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":292,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":41,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 04:12:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Response Remove After Resolve PlayLootCardStackEffect 3"},"childOfId":25} 

 Player 2 04:12:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Wait For Response From Player 1 "},"childOfId":25} 

 Player 2 04:12:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 04:12:18 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 04:12:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(3) "} 

 Player 1 04:12:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(3) "} 

 Player 1 04:12:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(3) "} 

 Player 1 04:12:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(3) "} 

 Player 1 04:12:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(3) "} 

 Player 1 04:12:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(3) "} 

 Player 1 04:12:19 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 04:12:19 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 2 04:12:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":25} 

 Player 2 04:12:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 04:12:19 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 2 04:12:19 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 2 04:12:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Stack Was Emptied "}} 

 Player 2 04:12:19 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 04:12:31 $NEXT_STACK_ID:  

 Player 2 04:12:31 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 04:12:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Dip<Monster>"} 

 Player 2 04:12:31 $ADD_TO_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":292,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":244}} 

 Player 2 04:12:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Dip<Monster>"} 

 Player 2 04:12:31 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":292,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":244}} 

 Player 1 04:12:31 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 04:12:31 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 04:12:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Dip<Monster>"} 

 Player 1 04:12:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Dip<Monster>"} 

 Player 2 04:12:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Add AttackRoll 4 "}} 

 Player 2 04:12:34 $ROLL_DICE:  
{"playerId":2} 

 Player 2 04:12:36 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":4} 

 Player 2 04:12:36 $UPDATE_STACK_VIS:  
{"stackId":4,"text":"player rolled 4 vs Dip<Monster>"} 

 Player 2 04:12:36 $SHOW_DICE_ROLL:  
{"stackId":4} 

 Player 2 04:12:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Dip<Monster>"} 

 Player 2 04:12:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 04:12:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Dip<Monster>"} 

 Player 2 04:12:39 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":292,"numberRolled":4,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":244}} 

 Player 2 04:12:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Response Adding AttackRoll 4"},"childOfId":30} 

 Player 2 04:12:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Wait For Response From Player 2 "},"childOfId":30} 

 Player 2 04:12:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 04:12:39 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 2 04:12:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":30} 

 Player 2 04:12:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 04:12:39 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 04:12:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Dip<Monster>"} 

 Player 1 04:12:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Dip<Monster>"} 

 Player 1 04:12:39 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 04:12:39 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 2 04:12:39 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 2 04:12:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Resolve AttackRoll 4 "}} 

 Player 2 04:12:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Added 0 to original roll"}} 

 Player 2 04:12:40 $NEXT_STACK_ID:  

 Player 2 04:12:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Dip<Monster>"} 

 Player 2 04:12:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 04:12:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Dip \n2:Player 2 rolled 4 vs Dip<Monster>"} 

 Player 2 04:12:40 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":292,"entityToDoDamageCardId":292,"entityToTakeDamageCardId":244,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 04:12:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Dip \n2:Player 2 rolled 4 vs Dip<Monster>"} 

 Player 2 04:12:40 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":292,"numberRolled":4,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":244}} 

 Player 2 04:12:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Dip \n2:Player 2 rolled 4 vs Dip<Monster>"} 

 Player 2 04:12:40 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":292,"entityToDoDamageCardId":292,"entityToTakeDamageCardId":244,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 04:12:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Dip \n2:Player 2 rolled 4 vs Dip<Monster>"} 

 Player 2 04:12:40 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":292,"numberRolled":4,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":244}} 

 Player 2 04:12:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Dip \n2:Player 2 rolled 4 vs Dip<Monster>"} 

 Player 2 04:12:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Dip \n2:Player 2 rolled 4 vs Dip<Monster>"} 

 Player 2 04:12:40 $REPLACE_STACK:  
{"currentStack":[{"entityId":5,"creatorCardId":292,"entityToDoDamageCardId":292,"entityToTakeDamageCardId":244,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":4,"creatorCardId":292,"numberRolled":4,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":244}]} 

 Player 2 04:12:40 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":5,"originStackId":4},"isAfterActivation":true,"index":5} 

 Player 2 04:12:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Dip \n2:Player 2 rolled 4 vs Dip<Monster>"} 

 Player 2 04:12:40 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":292,"numberRolled":4,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":244}} 

 Player 2 04:12:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Dip"} 

 Player 2 04:12:40 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":292,"numberRolled":4,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":244}} 

 Player 2 04:12:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Remove After Resolve AttackRoll 4  "}} 

 Player 2 04:12:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Dip"} 

 Player 2 04:12:40 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":292,"numberRolled":4,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":244}} 

 Player 2 04:12:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Response Remove After Resolve AttackRoll 4"},"childOfId":36} 

 Player 2 04:12:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 2 "},"childOfId":36} 

 Player 2 04:12:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 04:12:40 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 2 04:12:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Wait For Response From Player 1 "},"childOfId":36} 

 Player 2 04:12:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 04:12:40 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 04:12:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Dip<Monster>"} 

 Player 1 04:12:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Dip<Monster>"} 

 Player 1 04:12:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Dip"} 

 Player 1 04:12:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Dip"} 

 Player 1 04:12:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Dip"} 

 Player 1 04:12:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Dip"} 

 Player 1 04:12:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Dip"} 

 Player 1 04:12:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Dip"} 

 Player 1 04:12:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Dip"} 

 Player 1 04:12:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Dip"} 

 Player 1 04:12:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Dip"} 

 Player 1 04:12:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Dip"} 

 Player 1 04:12:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Dip \n2:Player 2 is rolling against Dip<Monster>"} 

 Player 1 04:12:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Dip \n2:Player 2 is rolling against Dip<Monster>"} 

 Player 1 04:12:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Dip \n2:Player 2 is rolling against Dip<Monster>"} 

 Player 1 04:12:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Dip \n2:Player 2 is rolling against Dip<Monster>"} 

 Player 1 04:12:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Dip \n2:Player 2 is rolling against Dip<Monster>"} 

 Player 1 04:12:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Dip \n2:Player 2 is rolling against Dip<Monster>"} 

 Player 1 04:12:41 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 04:12:41 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 04:12:41 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 2 04:12:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Resolve CombatDamage 5 "}} 

 Player 2 04:12:41 $UPDATE_STACK_VIS:  
{"stackId":5,"text":"Lilith will deal 1 combat damage to Dip"} 

 Player 2 04:12:41 $MONSTER_GET_DAMAGED:  
{"cardId":244,"hpLeft":0,"damageDealerId":292} 

 Player 2 04:12:41 $NEXT_STACK_ID:  

 Player 2 04:12:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Dip"} 

 Player 2 04:12:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 04:12:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Dip \n2:[object Object] killed by Lilith"} 

 Player 2 04:12:41 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":292,"monsterToDieCardId":244,"stackEffectType":5,"killerId":292}} 

 Player 2 04:12:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Dip \n2:[object Object] killed by Lilith"} 

 Player 2 04:12:41 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":292,"entityToDoDamageCardId":292,"entityToTakeDamageCardId":244,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 04:12:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Dip \n2:[object Object] killed by Lilith"} 

 Player 2 04:12:41 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":292,"entityToDoDamageCardId":292,"entityToTakeDamageCardId":244,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 04:12:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Dip \n2:[object Object] killed by Lilith"} 

 Player 2 04:12:41 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":292,"monsterToDieCardId":244,"stackEffectType":5,"killerId":292}} 

 Player 2 04:12:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Dip \n2:[object Object] killed by Lilith"} 

 Player 2 04:12:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Dip \n2:[object Object] killed by Lilith"} 

 Player 2 04:12:42 $REPLACE_STACK:  
{"currentStack":[{"entityId":5,"creatorCardId":292,"entityToDoDamageCardId":292,"entityToTakeDamageCardId":244,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":6,"creatorCardId":292,"monsterToDieCardId":244,"stackEffectType":5,"killerId":292}]} 

 Player 2 04:12:42 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":292}],"result":null,"preventMethod":false,"methodScopeId":244,"scopeIsPlayer":false,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 

 Player 2 04:12:42 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":4},{"type":0,"number":292},{"type":0,"number":244}],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":7,"originStackId":5},"isAfterActivation":true,"index":7} 

 Player 2 04:12:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Dip \n2:[object Object] killed by Lilith"} 

 Player 2 04:12:42 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":292,"entityToDoDamageCardId":292,"entityToTakeDamageCardId":244,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 04:12:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Lilith"} 

 Player 2 04:12:42 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":292,"entityToDoDamageCardId":292,"entityToTakeDamageCardId":244,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 04:12:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Remove After Resolve CombatDamage 5  "}} 

 Player 2 04:12:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Lilith"} 

 Player 2 04:12:42 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":292,"entityToDoDamageCardId":292,"entityToTakeDamageCardId":244,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 04:12:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Response Remove After Resolve CombatDamage 5"},"childOfId":41} 

 Player 2 04:12:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 2 "},"childOfId":41} 

 Player 2 04:12:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 04:12:42 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 2 04:12:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Wait For Response From Player 1 "},"childOfId":41} 

 Player 2 04:12:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 04:12:42 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 04:12:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Dip"} 

 Player 1 04:12:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Dip"} 

 Player 1 04:12:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Lilith"} 

 Player 1 04:12:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Lilith"} 

 Player 1 04:12:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Lilith"} 

 Player 1 04:12:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Lilith"} 

 Player 1 04:12:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Lilith"} 

 Player 1 04:12:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Lilith"} 

 Player 1 04:12:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Lilith"} 

 Player 1 04:12:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Lilith"} 

 Player 1 04:12:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Lilith"} 

 Player 1 04:12:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Lilith"} 

 Player 1 04:12:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Dip \n2:[object Object] killed by Lilith"} 

 Player 1 04:12:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Dip \n2:[object Object] killed by Lilith"} 

 Player 1 04:12:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Dip \n2:[object Object] killed by Lilith"} 

 Player 1 04:12:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Dip \n2:[object Object] killed by Lilith"} 

 Player 1 04:12:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Dip \n2:[object Object] killed by Lilith"} 

 Player 1 04:12:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Dip \n2:[object Object] killed by Lilith"} 

 Player 1 04:12:43 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 04:12:43 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 04:12:43 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 2 04:12:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Resolve MonsterDeath 6 "}} 

 Player 2 04:12:43 $DISABLE_PARTICLE_EFFECT:  
{"cardId":244,"particleType":5} 

 Player 2 04:12:43 $CANCEL_ATTACK:  

 Player 2 04:12:43 $NEXT_STACK_ID:  

 Player 2 04:12:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Lilith"} 

 Player 2 04:12:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 04:12:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Dip<Monster> reward \n2:[object Object] killed by Lilith"} 

 Player 2 04:12:43 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":292,"monsterCardWithRewardId":244,"playerCardIdToReward":292,"stackEffectType":7}} 

 Player 2 04:12:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Dip<Monster> reward \n2:[object Object] killed by Lilith"} 

 Player 2 04:12:43 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":292,"monsterToDieCardId":244,"stackEffectType":5,"killerId":292}} 

 Player 2 04:12:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Dip<Monster> reward \n2:[object Object] killed by Lilith"} 

 Player 2 04:12:43 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":292,"monsterCardWithRewardId":244,"playerCardIdToReward":292,"stackEffectType":7}} 

 Player 2 04:12:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Dip<Monster> reward \n2:[object Object] killed by Lilith"} 

 Player 2 04:12:43 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":292,"monsterToDieCardId":244,"stackEffectType":5,"killerId":292}} 

 Player 2 04:12:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Dip<Monster> reward \n2:[object Object] killed by Lilith"} 

 Player 2 04:12:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Dip<Monster> reward \n2:[object Object] killed by Lilith"} 

 Player 2 04:12:43 $REPLACE_STACK:  
{"currentStack":[{"entityId":7,"creatorCardId":292,"monsterCardWithRewardId":244,"playerCardIdToReward":292,"stackEffectType":7},{"entityId":6,"creatorCardId":292,"monsterToDieCardId":244,"stackEffectType":5,"killerId":292}]} 

 Player 2 04:12:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Dip<Monster> reward \n2:[object Object] killed by Lilith"} 

 Player 2 04:12:43 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":292,"monsterToDieCardId":244,"stackEffectType":5,"killerId":292}} 

 Player 2 04:12:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Dip<Monster> reward"} 

 Player 2 04:12:43 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":292,"monsterToDieCardId":244,"stackEffectType":5,"killerId":292}} 

 Player 2 04:12:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Remove After Resolve MonsterDeath 6  "}} 

 Player 2 04:12:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Dip<Monster> reward"} 

 Player 2 04:12:43 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":292,"monsterToDieCardId":244,"stackEffectType":5,"killerId":292}} 

 Player 2 04:12:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Response Remove After Resolve MonsterDeath 6"},"childOfId":46} 

 Player 2 04:12:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Wait For Response From Player 2 "},"childOfId":46} 

 Player 2 04:12:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 04:12:44 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 2 04:12:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Wait For Response From Player 1 "},"childOfId":46} 

 Player 2 04:12:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 04:12:44 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 04:12:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Lilith"} 

 Player 1 04:12:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Lilith"} 

 Player 1 04:12:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Dip<Monster> reward"} 

 Player 1 04:12:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Dip<Monster> reward"} 

 Player 1 04:12:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Dip<Monster> reward"} 

 Player 1 04:12:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Dip<Monster> reward"} 

 Player 1 04:12:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Dip<Monster> reward"} 

 Player 1 04:12:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Dip<Monster> reward"} 

 Player 1 04:12:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Dip<Monster> reward"} 

 Player 1 04:12:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Dip<Monster> reward"} 

 Player 1 04:12:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Dip<Monster> reward"} 

 Player 1 04:12:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Dip<Monster> reward"} 

 Player 1 04:12:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Dip<Monster> reward \n2:[object Object] killed by Lilith"} 

 Player 1 04:12:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Dip<Monster> reward \n2:[object Object] killed by Lilith"} 

 Player 1 04:12:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Dip<Monster> reward \n2:[object Object] killed by Lilith"} 

 Player 1 04:12:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Dip<Monster> reward \n2:[object Object] killed by Lilith"} 

 Player 1 04:12:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Dip<Monster> reward \n2:[object Object] killed by Lilith"} 

 Player 1 04:12:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Dip<Monster> reward \n2:[object Object] killed by Lilith"} 

 Player 1 04:12:44 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 04:12:44 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 2 04:12:44 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 2 04:12:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Resolve MonsterRewardStackEffect 7 "}} 

 Player 2 04:12:44 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":244,"scopeIsPlayer":false,"index":8,"originStackId":7},"isAfterActivation":true,"index":8} 

 Player 2 04:12:44 $SET_MONEY:  
{"playerId":2,"numOfCoins":7} 

 Player 2 04:12:44 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":1}],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":9,"originStackId":-1},"isAfterActivation":true,"index":9} 

 Player 2 04:12:44 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 04:12:44 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 04:12:44 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":292,"monsterCardWithRewardId":244,"playerCardIdToReward":292,"stackEffectType":7}} 

 Player 2 04:12:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Fizzle MonsterRewardStackEffect 7"}} 

 Player 2 04:12:45 $FIZZLE_STACK_EFFECT:  
{"entityId":7} 

 Player 2 04:12:45 $MOVE_CARD:  
{"moveIndex":10,"cardId":244,"placeID":303,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 04:12:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Dip<Monster> reward"} 

 Player 1 04:12:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Dip<Monster> reward"} 

 Player 1 04:12:45 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 04:12:45 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 04:12:45 $MOVE_CARD_END:  
{"moveIndex":10,"cardId":244,"flipIfFlipped":true,"playerId":2} 

 Player 2 04:12:45 $MOVE_CARD_TO_PILE:  
{"type":2,"cardId":244} 

 Player 2 04:12:45 $REMOVE_MONSTER:  
{"holderId":1,"monsterId":244} 

 Player 2 04:12:45 $NEXT_STACK_ID:  

 Player 2 04:12:45 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 04:12:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 2 04:12:45 $ADD_TO_STACK:  
{"stackEffect":{"entityId":8,"creatorCardId":292,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 2 04:12:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 2 04:12:45 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":292,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 1 04:12:45 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 04:12:45 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 04:12:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 1 04:12:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 2 04:12:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Add RefillEmptySlot 8 "}} 

 Player 2 04:12:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 04:12:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 2 04:12:48 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":292,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 2 04:12:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Response Adding RefillEmptySlot 8"},"childOfId":52} 

 Player 2 04:12:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Wait For Response From Player 2 "},"childOfId":52} 

 Player 2 04:12:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 04:12:48 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 2 04:12:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Wait For Response From Player 1 "},"childOfId":52} 

 Player 2 04:12:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 04:12:48 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 04:12:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 1 04:12:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 1 04:12:48 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 04:12:48 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 2 04:12:48 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 2 04:12:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":56,"_text":"Resolve RefillEmptySlot 8 "}} 

 Player 2 04:12:48 $DRAW_CARD:  
{"deckType":2} 

 Player 2 04:12:48 $FLIP_CARD:  
{"cardId":249} 

 Player 2 04:12:48 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":249} 

 Player 2 04:12:49 $NEW_MONSTER_ON_PLACE:  
{"cardId":249,"monsterPlaceId":1} 

 Player 2 04:12:49 $SHOW_DECISION:  
{"startCardId":292,"endCardId":249} 

 Player 2 04:12:51 $NEXT_STACK_ID:  

 Player 2 04:12:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 2 04:12:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Gold Chest (1)"} 

 Player 2 04:12:51 $ADD_TO_STACK:  
{"stackEffect":{"entityId":9,"creatorCardId":292,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":249,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 04:12:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Gold Chest (1)"} 

 Player 2 04:12:51 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":292,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":249,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 04:12:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 1 04:12:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 1 04:12:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Gold Chest (1)"} 

 Player 1 04:12:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Gold Chest (1)"} 

 Player 2 04:12:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":57,"_text":"Add ActivateItem 9 "}} 

 Player 2 04:12:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 04:12:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Gold Chest (1)"} 

 Player 2 04:12:54 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":292,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":249,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 04:12:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":58,"_text":"Response Adding ActivateItem 9"},"childOfId":57} 

 Player 2 04:12:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":59,"_text":"Wait For Response From Player 2 "},"childOfId":57} 

 Player 2 04:12:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 04:12:55 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 2 04:12:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":60,"_text":"Wait For Response From Player 1 "},"childOfId":57} 

 Player 2 04:12:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 04:12:55 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 04:12:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Gold Chest (1)"} 

 Player 1 04:12:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Gold Chest (1)"} 

 Player 1 04:12:55 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 04:12:55 $ACTION_MASSAGE_REMOVE:  
{"id":60} 

 Player 2 04:12:55 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 2 04:12:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":61,"_text":"Resolve ActivateItem 9 "}} 

 Player 2 04:12:55 $NEXT_STACK_ID:  

 Player 2 04:12:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Gold Chest (1)"} 

 Player 2 04:12:55 $NEXT_STACK_ID:  

 Player 2 04:12:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Gold Chest (1)"} 

 Player 2 04:12:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Gold Chest (1) \n3:Player 2 roll a dice"} 

 Player 2 04:12:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Gold Chest (1) \n3:Player 2 roll a dice"} 

 Player 2 04:12:55 $ADD_TO_STACK:  
{"stackEffect":{"entityId":11,"creatorCardId":292,"stackEffectToLock":{"entityId":9,"creatorCardId":292,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":249,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"stackEffectType":11}} 

 Player 2 04:12:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Gold Chest (1) \n3:Player 2 roll a dice"} 

 Player 2 04:12:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Gold Chest (1) \n3:Player 2 roll a dice"} 

 Player 2 04:12:55 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":292,"stackEffectToLock":{"entityId":9,"creatorCardId":292,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":249,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"stackEffectType":11}} 

 Player 1 04:12:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Gold Chest (1)"} 

 Player 1 04:12:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Gold Chest (1)"} 

 Player 1 04:12:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Gold Chest (1)"} 

 Player 1 04:12:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Gold Chest (1)"} 

 Player 1 04:12:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Gold Chest (1) \n3:Player 2 roll a dice"} 

 Player 1 04:12:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Gold Chest (1) \n3:Player 2 roll a dice"} 

 Player 1 04:12:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Gold Chest (1) \n3:Player 2 roll a dice"} 

 Player 1 04:12:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Gold Chest (1) \n3:Player 2 roll a dice"} 

 Player 2 04:12:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":62,"_text":"Add RollDiceStackEffect 11 "}} 

 Player 2 04:12:58 $ROLL_DICE:  
{"playerId":2} 

 Player 2 04:13:00 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":4} 

 Player 2 04:13:00 $UPDATE_STACK_VIS:  
{"stackId":11,"text":"player 2 rolled 4"} 

 Player 2 04:13:00 $SHOW_DICE_ROLL:  
{"stackId":11} 

 Player 2 04:13:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Gold Chest (1) \n3:Player 2 rolled 4"} 

 Player 2 04:13:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 04:13:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Gold Chest (1) \n3:Player 2 rolled 4"} 

 Player 2 04:13:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Gold Chest (1) \n3:Player 2 rolled 4"} 

 Player 2 04:13:03 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":11,"creatorCardId":292,"stackEffectToLock":{"entityId":9,"creatorCardId":292,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":249,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"numberRolled":4,"stackEffectType":11}} 

 Player 2 04:13:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":63,"_text":"Response Adding RollDiceStackEffect 11"},"childOfId":62} 

 Player 2 04:13:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":64,"_text":"Wait For Response From Player 2 "},"childOfId":62} 

 Player 2 04:13:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 04:13:03 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 2 04:13:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":65,"_text":"Wait For Response From Player 1 "},"childOfId":62} 

 Player 2 04:13:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 04:13:03 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 04:13:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Gold Chest (1) \n3:Player 2 roll a dice"} 

 Player 1 04:13:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Gold Chest (1) \n3:Player 2 roll a dice"} 

 Player 1 04:13:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Gold Chest (1) \n3:Player 2 roll a dice"} 

 Player 1 04:13:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Gold Chest (1) \n3:Player 2 roll a dice"} 

 Player 1 04:13:03 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 04:13:03 $ACTION_MASSAGE_REMOVE:  
{"id":65} 

 Player 2 04:13:04 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 2 04:13:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":66,"_text":"Resolve RollDiceStackEffect 11 "}} 

 Player 2 04:13:04 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":10,"originStackId":11},"isAfterActivation":true,"index":10} 

 Player 2 04:13:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Gold Chest (1) \n3:Player 2 rolled 4"} 

 Player 2 04:13:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Gold Chest (1) \n3:Player 2 rolled 4"} 

 Player 2 04:13:04 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":11,"creatorCardId":292,"stackEffectToLock":{"entityId":9,"creatorCardId":292,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":249,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"numberRolled":4,"stackEffectType":11}} 

 Player 2 04:13:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Gold Chest (1) \n2:Player 2 rolled 4"} 

 Player 2 04:13:04 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":292,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 2 04:13:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":67,"_text":"Remove After Resolve RefillEmptySlot 11  "}} 

 Player 2 04:13:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Gold Chest (1) \n2:Player 2 rolled 4"} 

 Player 2 04:13:04 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":11,"creatorCardId":292,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 2 04:13:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":68,"_text":"Response Remove After Resolve RefillEmptySlot 11"},"childOfId":67} 

 Player 2 04:13:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":69,"_text":"Wait For Response From Player 1 "},"childOfId":67} 

 Player 2 04:13:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 04:13:04 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 04:13:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Gold Chest (1) \n3:Player 2 roll a dice"} 

 Player 1 04:13:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Gold Chest (1) \n3:Player 2 roll a dice"} 

 Player 1 04:13:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Gold Chest (1) \n3:Player 2 roll a dice"} 

 Player 1 04:13:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Gold Chest (1) \n3:Player 2 roll a dice"} 

 Player 1 04:13:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Gold Chest (1) \n3:Player 2 roll a dice"} 

 Player 1 04:13:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Gold Chest (1) \n3:Player 2 roll a dice"} 

 Player 1 04:13:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Gold Chest (1) \n3:Player 2 roll a dice"} 

 Player 1 04:13:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Gold Chest (1) \n3:Player 2 roll a dice"} 

 Player 1 04:13:04 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 04:13:04 $ACTION_MASSAGE_REMOVE:  
{"id":69} 

 Player 2 04:13:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":70,"_text":"Wait For Response From Player 2 "},"childOfId":67} 

 Player 2 04:13:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 04:13:04 $ACTION_MASSAGE_REMOVE:  
{"id":70} 

 Player 2 04:13:04 $ACTION_MASSAGE_REMOVE:  
{"id":68} 

 Player 2 04:13:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":71,"_text":"Resolve RollDiceStackEffect 11 "}} 

 Player 2 04:13:04 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":11,"originStackId":11},"isAfterActivation":true,"index":11} 

 Player 2 04:13:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Gold Chest (1) \n2:Player 2 rolled 4"} 

 Player 2 04:13:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Gold Chest (1) \n2:Player 2 rolled 4"} 

 Player 2 04:13:05 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":11,"creatorCardId":292,"stackEffectToLock":{"entityId":9,"creatorCardId":292,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":249,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"numberRolled":4,"stackEffectType":11}} 

 Player 2 04:13:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Gold Chest (1)"} 

 Player 2 04:13:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Gold Chest (1)"} 

 Player 2 04:13:05 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":292,"stackEffectToLock":{"entityId":9,"creatorCardId":292,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":249,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"numberRolled":4,"stackEffectType":11}} 

 Player 2 04:13:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":72,"_text":"Remove After Resolve RollDiceStackEffect 11  "}} 

 Player 2 04:13:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Gold Chest (1)"} 

 Player 2 04:13:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Gold Chest (1)"} 

 Player 2 04:13:05 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":11,"creatorCardId":292,"stackEffectToLock":{"entityId":9,"creatorCardId":292,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":249,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"numberRolled":4,"stackEffectType":11}} 

 Player 2 04:13:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":73,"_text":"Response Remove After Resolve RollDiceStackEffect 11"},"childOfId":72} 

 Player 2 04:13:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":74,"_text":"Wait For Response From Player 2 "},"childOfId":72} 

 Player 2 04:13:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 04:13:05 $ACTION_MASSAGE_REMOVE:  
{"id":74} 

 Player 2 04:13:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":75,"_text":"Wait For Response From Player 1 "},"childOfId":72} 

 Player 2 04:13:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 04:13:05 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 04:13:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Gold Chest (1)"} 

 Player 1 04:13:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Gold Chest (1)"} 

 Player 1 04:13:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Gold Chest (1)"} 

 Player 1 04:13:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Gold Chest (1)"} 

 Player 1 04:13:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 roll a dice"} 

 Player 1 04:13:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 roll a dice"} 

 Player 1 04:13:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 roll a dice"} 

 Player 1 04:13:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 roll a dice"} 

 Player 1 04:13:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 roll a dice"} 

 Player 1 04:13:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 roll a dice"} 

 Player 1 04:13:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 roll a dice"} 

 Player 1 04:13:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 roll a dice"} 

 Player 1 04:13:05 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 04:13:05 $ACTION_MASSAGE_REMOVE:  
{"id":75} 

 Player 2 04:13:05 $ACTION_MASSAGE_REMOVE:  
{"id":73} 

 Player 2 04:13:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":76,"_text":"Resolve ActivateItem 9 "}} 

 Player 2 04:13:05 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":249,"particleType":6} 

 Player 2 04:13:07 $DISABLE_PARTICLE_EFFECT:  
{"cardId":249,"particleType":6} 

 Player 2 04:13:07 $SET_MONEY:  
{"playerId":2,"numOfCoins":12} 

 Player 2 04:13:07 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":5}],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":12,"originStackId":-1},"isAfterActivation":true,"index":12} 

 Player 2 04:13:07 $MOVE_CARD:  
{"moveIndex":11,"cardId":249,"placeID":303,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 04:13:08 $MOVE_CARD_END:  
{"moveIndex":11,"cardId":249,"flipIfFlipped":true,"playerId":2} 

 Player 2 04:13:08 $MOVE_CARD_TO_PILE:  
{"type":2,"cardId":249} 

 Player 2 04:13:08 $REMOVE_MONSTER:  
{"holderId":1,"monsterId":249} 

 Player 2 04:13:08 $NEXT_STACK_ID:  

 Player 2 04:13:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Gold Chest (1)"} 

 Player 2 04:13:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Gold Chest (1) \n2:Refill holder1 slot"} 

 Player 2 04:13:08 $ADD_TO_STACK:  
{"stackEffect":{"entityId":12,"creatorCardId":292,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 2 04:13:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Gold Chest (1) \n2:Refill holder1 slot"} 

 Player 2 04:13:08 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":12,"creatorCardId":292,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 1 04:13:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 1 04:13:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 1 04:13:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Refill holder1 slot"} 

 Player 1 04:13:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Refill holder1 slot"} 

 Player 2 04:13:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":77,"_text":"Add RefillEmptySlot 12 "}} 

 Player 2 04:13:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 04:13:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Gold Chest (1) \n2:Refill holder1 slot"} 

 Player 2 04:13:11 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":12,"creatorCardId":292,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 2 04:13:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":78,"_text":"Response Adding RefillEmptySlot 12"},"childOfId":77} 

 Player 2 04:13:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":79,"_text":"Wait For Response From Player 2 "},"childOfId":77} 

 Player 2 04:13:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 04:13:11 $ACTION_MASSAGE_REMOVE:  
{"id":79} 

 Player 2 04:13:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":80,"_text":"Wait For Response From Player 1 "},"childOfId":77} 

 Player 2 04:13:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 04:13:11 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 04:13:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Refill holder1 slot"} 

 Player 1 04:13:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Refill holder1 slot"} 

 Player 1 04:13:11 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 04:13:11 $ACTION_MASSAGE_REMOVE:  
{"id":80} 

 Player 2 04:13:11 $ACTION_MASSAGE_REMOVE:  
{"id":78} 

 Player 2 04:13:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":81,"_text":"Resolve RefillEmptySlot 12 "}} 

 Player 2 04:13:11 $DRAW_CARD:  
{"deckType":2} 

 Player 2 04:13:11 $FLIP_CARD:  
{"cardId":264} 

 Player 2 04:13:12 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":264} 

 Player 2 04:13:12 $NEW_MONSTER_ON_PLACE:  
{"cardId":264,"monsterPlaceId":1} 

 Player 2 04:13:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 2 04:13:12 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":12,"creatorCardId":292,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":249,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 04:13:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":82,"_text":"Remove After Resolve ActivateItem 12  "}} 

 Player 2 04:13:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 2 04:13:12 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":12,"creatorCardId":292,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":249,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 04:13:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":83,"_text":"Response Remove After Resolve ActivateItem 12"},"childOfId":82} 

 Player 2 04:13:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":84,"_text":"Wait For Response From Player 1 "},"childOfId":82} 

 Player 2 04:13:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 04:13:12 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 04:13:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Refill holder1 slot"} 

 Player 1 04:13:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Refill holder1 slot"} 

 Player 1 04:13:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Refill holder1 slot"} 

 Player 1 04:13:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Refill holder1 slot"} 

 Player 1 04:13:12 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 04:13:12 $ACTION_MASSAGE_REMOVE:  
{"id":84} 

 Player 2 04:13:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":85,"_text":"Wait For Response From Player 2 "},"childOfId":82} 

 Player 2 04:13:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 04:13:12 $ACTION_MASSAGE_REMOVE:  
{"id":85} 

 Player 2 04:13:12 $ACTION_MASSAGE_REMOVE:  
{"id":83} 

 Player 2 04:13:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":86,"_text":"Resolve RefillEmptySlot 12 "}} 

 Player 2 04:13:12 $DRAW_CARD:  
{"deckType":2} 

 Player 2 04:13:12 $FLIP_CARD:  
{"cardId":234} 

 Player 2 04:13:12 $REGISTER_PASSIVE_ITEM:  
{"cardId":234} 

 Player 2 04:13:12 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":234} 

 Player 2 04:13:12 $NEW_MONSTER_ON_PLACE:  
{"cardId":234,"monsterPlaceId":1} 

 Player 2 04:13:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 04:13:12 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":12,"creatorCardId":292,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 2 04:13:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":87,"_text":"Remove After Resolve RefillEmptySlot 12  "}} 

 Player 2 04:13:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 04:13:13 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":12,"creatorCardId":292,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 2 04:13:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":88,"_text":"Response Remove After Resolve RefillEmptySlot 12"},"childOfId":87} 

 Player 2 04:13:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":89,"_text":"Wait For Response From Player 2 "},"childOfId":87} 

 Player 2 04:13:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 04:13:13 $ACTION_MASSAGE_REMOVE:  
{"id":89} 

 Player 2 04:13:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":90,"_text":"Wait For Response From Player 1 "},"childOfId":87} 

 Player 2 04:13:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 04:13:13 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 04:13:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 1 04:13:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 1 04:13:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 1 04:13:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 1 04:13:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 1 04:13:13 $DO_STACK_EFFECT:  
{"originPlayerId":1,"playerId":2,"currentStack":[{"entityId":8,"creatorCardId":292,"slotType":2,"slotToFillId":1,"stackEffectType":10}]} 

 Player 1 04:13:13 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 04:13:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 04:13:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 04:13:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 2 04:13:13 $FINISH_DO_STACK_EFFECT:  
{"playerId":1,"newStack":[{"entityId":8,"creatorCardId":292,"slotType":2,"slotToFillId":1,"stackEffectType":10}]} 

 Player 2 04:13:13 $ACTION_MASSAGE_REMOVE:  
{"id":90} 

 Player 2 04:13:13 $ACTION_MASSAGE_REMOVE:  
{"id":88} 

 Player 2 04:13:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":91,"_text":"Resolve RefillEmptySlot 8 "}} 

 Player 2 04:13:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":92,"_text":"Resolve RefillEmptySlot 8 "}} 

 Player 2 04:13:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":93,"_text":"Resolve RefillEmptySlot 8 "}} 

 Player 2 04:13:13 $DRAW_CARD:  
{"deckType":2} 

 Player 2 04:13:13 $FLIP_CARD:  
{"cardId":233} 

 Player 2 04:13:13 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":233} 

 Player 2 04:13:13 $NEW_MONSTER_ON_PLACE:  
{"cardId":233,"monsterPlaceId":1} 

 Player 2 04:13:13 $SHOW_DECISION:  
{"startCardId":292,"endCardId":233} 

 Player 1 04:13:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 1 04:13:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 2 04:13:16 $NEXT_STACK_ID:  

 Player 2 04:13:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 2 04:13:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Chest (2)"} 

 Player 2 04:13:16 $ADD_TO_STACK:  
{"stackEffect":{"entityId":13,"creatorCardId":292,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":233,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 04:13:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Chest (2)"} 

 Player 2 04:13:16 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":13,"creatorCardId":292,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":233,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 04:13:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 1 04:13:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 1 04:13:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Chest (2)"} 

 Player 1 04:13:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Chest (2)"} 

 Player 2 04:13:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":94,"_text":"Add ActivateItem 13 "}} 

 Player 2 04:13:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 04:13:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Chest (2)"} 

 Player 2 04:13:19 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":13,"creatorCardId":292,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":233,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 04:13:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":95,"_text":"Response Adding ActivateItem 13"},"childOfId":94} 

 Player 2 04:13:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":96,"_text":"Wait For Response From Player 2 "},"childOfId":94} 

 Player 2 04:13:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 04:13:19 $ACTION_MASSAGE_REMOVE:  
{"id":96} 

 Player 2 04:13:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":97,"_text":"Wait For Response From Player 1 "},"childOfId":94} 

 Player 2 04:13:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 04:13:19 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 04:13:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Chest (2)"} 

 Player 1 04:13:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Chest (2)"} 

 Player 1 04:13:19 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 04:13:19 $ACTION_MASSAGE_REMOVE:  
{"id":97} 

 Player 2 04:13:20 $ACTION_MASSAGE_REMOVE:  
{"id":95} 

 Player 2 04:13:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":98,"_text":"Resolve ActivateItem 13 "}} 

 Player 2 04:13:20 $NEXT_STACK_ID:  

 Player 2 04:13:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Chest (2)"} 

 Player 2 04:13:20 $NEXT_STACK_ID:  

 Player 2 04:13:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Chest (2)"} 

 Player 2 04:13:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Chest (2) \n3:Player 2 roll a dice"} 

 Player 2 04:13:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Chest (2) \n3:Player 2 roll a dice"} 

 Player 2 04:13:20 $ADD_TO_STACK:  
{"stackEffect":{"entityId":15,"creatorCardId":292,"stackEffectToLock":{"entityId":13,"creatorCardId":292,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":233,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"stackEffectType":11}} 

 Player 2 04:13:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Chest (2) \n3:Player 2 roll a dice"} 

 Player 2 04:13:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Chest (2) \n3:Player 2 roll a dice"} 

 Player 2 04:13:20 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":15,"creatorCardId":292,"stackEffectToLock":{"entityId":13,"creatorCardId":292,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":233,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"stackEffectType":11}} 

 Player 1 04:13:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Chest (2)"} 

 Player 1 04:13:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Chest (2)"} 

 Player 1 04:13:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Chest (2)"} 

 Player 1 04:13:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Chest (2)"} 

 Player 1 04:13:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Chest (2) \n3:Player 2 roll a dice"} 

 Player 1 04:13:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Chest (2) \n3:Player 2 roll a dice"} 

 Player 1 04:13:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Chest (2) \n3:Player 2 roll a dice"} 

 Player 1 04:13:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Chest (2) \n3:Player 2 roll a dice"} 

 Player 2 04:13:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":99,"_text":"Add RollDiceStackEffect 15 "}} 

 Player 2 04:13:23 $ROLL_DICE:  
{"playerId":2} 

 Player 2 04:13:24 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":1} 

 Player 2 04:13:24 $UPDATE_STACK_VIS:  
{"stackId":15,"text":"player 2 rolled 1"} 

 Player 2 04:13:24 $SHOW_DICE_ROLL:  
{"stackId":15} 

 Player 2 04:13:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Chest (2) \n3:Player 2 rolled 1"} 

 Player 2 04:13:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 04:13:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Chest (2) \n3:Player 2 rolled 1"} 

 Player 2 04:13:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Chest (2) \n3:Player 2 rolled 1"} 

 Player 2 04:13:27 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":15,"creatorCardId":292,"stackEffectToLock":{"entityId":13,"creatorCardId":292,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":233,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"numberRolled":1,"stackEffectType":11}} 

 Player 2 04:13:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":100,"_text":"Response Adding RollDiceStackEffect 15"},"childOfId":99} 

 Player 2 04:13:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":101,"_text":"Wait For Response From Player 2 "},"childOfId":99} 

 Player 2 04:13:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 04:13:28 $ACTION_MASSAGE_REMOVE:  
{"id":101} 

 Player 2 04:13:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":102,"_text":"Wait For Response From Player 1 "},"childOfId":99} 

 Player 2 04:13:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 04:13:28 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 04:13:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Chest (2) \n3:Player 2 roll a dice"} 

 Player 1 04:13:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Chest (2) \n3:Player 2 roll a dice"} 

 Player 1 04:13:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Chest (2) \n3:Player 2 roll a dice"} 

 Player 1 04:13:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Chest (2) \n3:Player 2 roll a dice"} 

 Player 1 04:13:28 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 04:13:28 $ACTION_MASSAGE_REMOVE:  
{"id":102} 

 Player 2 04:13:28 $ACTION_MASSAGE_REMOVE:  
{"id":100} 

 Player 2 04:13:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":103,"_text":"Resolve RollDiceStackEffect 15 "}} 

 Player 2 04:13:28 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":13,"originStackId":15},"isAfterActivation":true,"index":13} 

 Player 2 04:13:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Chest (2) \n3:Player 2 rolled 1"} 

 Player 2 04:13:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Chest (2) \n3:Player 2 rolled 1"} 

 Player 2 04:13:28 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":15,"creatorCardId":292,"stackEffectToLock":{"entityId":13,"creatorCardId":292,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":233,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"numberRolled":1,"stackEffectType":11}} 

 Player 2 04:13:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Chest (2) \n2:Player 2 rolled 1"} 

 Player 2 04:13:28 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":15,"creatorCardId":292,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 2 04:13:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":104,"_text":"Remove After Resolve RefillEmptySlot 15  "}} 

 Player 2 04:13:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Chest (2) \n2:Player 2 rolled 1"} 

 Player 2 04:13:28 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":15,"creatorCardId":292,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 2 04:13:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":105,"_text":"Response Remove After Resolve RefillEmptySlot 15"},"childOfId":104} 

 Player 2 04:13:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":106,"_text":"Wait For Response From Player 1 "},"childOfId":104} 

 Player 2 04:13:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 04:13:28 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 04:13:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Chest (2) \n3:Player 2 roll a dice"} 

 Player 1 04:13:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Chest (2) \n3:Player 2 roll a dice"} 

 Player 1 04:13:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Chest (2) \n3:Player 2 roll a dice"} 

 Player 1 04:13:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Chest (2) \n3:Player 2 roll a dice"} 

 Player 1 04:13:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Chest (2) \n3:Player 2 roll a dice"} 

 Player 1 04:13:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Chest (2) \n3:Player 2 roll a dice"} 

 Player 1 04:13:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Chest (2) \n3:Player 2 roll a dice"} 

 Player 1 04:13:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Chest (2) \n3:Player 2 roll a dice"} 

 Player 1 04:13:29 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 04:13:29 $ACTION_MASSAGE_REMOVE:  
{"id":106} 

 Player 2 04:13:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":107,"_text":"Wait For Response From Player 2 "},"childOfId":104} 

 Player 2 04:13:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 04:13:29 $ACTION_MASSAGE_REMOVE:  
{"id":107} 

 Player 2 04:13:29 $ACTION_MASSAGE_REMOVE:  
{"id":105} 

 Player 2 04:13:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":108,"_text":"Resolve RollDiceStackEffect 15 "}} 

 Player 2 04:13:29 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":14,"originStackId":15},"isAfterActivation":true,"index":14} 

 Player 2 04:13:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Chest (2) \n2:Player 2 rolled 1"} 

 Player 2 04:13:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Chest (2) \n2:Player 2 rolled 1"} 

 Player 2 04:13:29 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":15,"creatorCardId":292,"stackEffectToLock":{"entityId":13,"creatorCardId":292,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":233,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"numberRolled":1,"stackEffectType":11}} 

 Player 2 04:13:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Chest (2)"} 

 Player 2 04:13:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Chest (2)"} 

 Player 2 04:13:29 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":15,"creatorCardId":292,"stackEffectToLock":{"entityId":13,"creatorCardId":292,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":233,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"numberRolled":1,"stackEffectType":11}} 

 Player 2 04:13:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":109,"_text":"Remove After Resolve RollDiceStackEffect 15  "}} 

 Player 2 04:13:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Chest (2)"} 

 Player 2 04:13:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Chest (2)"} 

 Player 2 04:13:29 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":15,"creatorCardId":292,"stackEffectToLock":{"entityId":13,"creatorCardId":292,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":233,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"numberRolled":1,"stackEffectType":11}} 

 Player 2 04:13:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":110,"_text":"Response Remove After Resolve RollDiceStackEffect 15"},"childOfId":109} 

 Player 2 04:13:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":111,"_text":"Wait For Response From Player 2 "},"childOfId":109} 

 Player 2 04:13:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 04:13:29 $ACTION_MASSAGE_REMOVE:  
{"id":111} 

 Player 2 04:13:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":112,"_text":"Wait For Response From Player 1 "},"childOfId":109} 

 Player 2 04:13:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 04:13:29 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 04:13:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Chest (2)"} 

 Player 1 04:13:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Chest (2)"} 

 Player 1 04:13:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Chest (2)"} 

 Player 1 04:13:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 activated Chest (2)"} 

 Player 1 04:13:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 roll a dice"} 

 Player 1 04:13:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 roll a dice"} 

 Player 1 04:13:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 roll a dice"} 

 Player 1 04:13:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 roll a dice"} 

 Player 1 04:13:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 roll a dice"} 

 Player 1 04:13:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 roll a dice"} 

 Player 1 04:13:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 roll a dice"} 

 Player 1 04:13:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot \n2:Player 2 roll a dice"} 

 Player 1 04:13:30 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 04:13:30 $ACTION_MASSAGE_REMOVE:  
{"id":112} 

 Player 2 04:13:30 $ACTION_MASSAGE_REMOVE:  
{"id":110} 

 Player 2 04:13:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":113,"_text":"Resolve ActivateItem 13 "}} 

 Player 2 04:13:30 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":233,"particleType":6} 

 Player 2 04:13:32 $DISABLE_PARTICLE_EFFECT:  
{"cardId":233,"particleType":6} 

 Player 2 04:13:32 $DRAW_CARD:  
{"deckType":1} 

 Player 2 04:13:32 $MOVE_CARD:  
{"moveIndex":12,"cardId":92,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 04:13:32 $MOVE_CARD_END:  
{"moveIndex":12,"cardId":92,"flipIfFlipped":false,"playerId":2} 

 Player 2 04:13:32 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":92} 

 Player 2 04:13:32 $FLIP_CARD:  
{"cardId":92} 

 Player 2 04:13:32 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":92} 

 Player 2 04:13:32 $MOVE_CARD:  
{"moveIndex":13,"cardId":233,"placeID":303,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 04:13:33 $MOVE_CARD_END:  
{"moveIndex":13,"cardId":233,"flipIfFlipped":true,"playerId":2} 

 Player 2 04:13:33 $MOVE_CARD_TO_PILE:  
{"type":2,"cardId":233} 

 Player 2 04:13:33 $REMOVE_MONSTER:  
{"holderId":1,"monsterId":233} 

 Player 2 04:13:33 $GET_NEXT_MONSTER:  
{"monsterPlaceId":1} 

 Player 2 04:13:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Chest (2)"} 

 Player 2 04:13:33 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":13,"creatorCardId":292,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":233,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 04:13:33 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 04:13:33 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":13,"creatorCardId":292,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":233,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 04:13:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":114,"_text":"Remove After Resolve ActivateItem 13  "}} 

 Player 2 04:13:33 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 04:13:33 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":13,"creatorCardId":292,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":233,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 04:13:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":115,"_text":"Response Remove After Resolve ActivateItem 13"},"childOfId":114} 

 Player 2 04:13:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":116,"_text":"Wait For Response From Player 1 "},"childOfId":114} 

 Player 2 04:13:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 04:13:33 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 04:13:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 1 04:13:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 1 04:13:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Chest (2)"} 

 Player 1 04:13:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Chest (2)"} 

 Player 1 04:13:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Chest (2)"} 

 Player 1 04:13:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Chest (2)"} 

 Player 1 04:13:33 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 04:13:33 $ACTION_MASSAGE_REMOVE:  
{"id":116} 

 Player 2 04:13:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":117,"_text":"Wait For Response From Player 2 "},"childOfId":114} 

 Player 2 04:13:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 04:13:33 $ACTION_MASSAGE_REMOVE:  
{"id":117} 

 Player 2 04:13:33 $ACTION_MASSAGE_REMOVE:  
{"id":115} 

 Player 2 04:13:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":118,"_text":"Stack Was Emptied "}} 

 Player 2 04:13:33 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 04:13:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":119,"_text":"Stack Was Emptied "}} 

 Player 2 04:13:33 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 04:13:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":120,"_text":"Stack Was Emptied "}} 

 Player 2 04:13:34 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 04:13:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 04:13:40 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 04:13:40 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 2 04:13:40 $END_TURN:  

 Player 2 04:13:40 $SET_TURN:  
{"playerId":1} 

 Player 2 04:13:40 $START_TURN:  
{"playerId":1} 

 Player 1 04:13:41 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 04:13:41 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 04:13:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 04:13:41 $NEXT_STACK_ID:  

 Player 1 04:13:41 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 04:13:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 04:13:41 $ADD_TO_STACK:  
{"stackEffect":{"entityId":16,"creatorCardId":298,"turnPlayerCardId":298,"stackEffectType":13}} 

 Player 1 04:13:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 04:13:41 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":16,"creatorCardId":298,"turnPlayerCardId":298,"stackEffectType":13}} 

 Player 2 04:13:41 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 04:13:41 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 04:13:41 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 04:13:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 04:13:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 04:13:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":121,"_text":"Add StartTurnLoot 16 "}} 

 Player 1 04:13:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 04:13:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 04:13:44 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":16,"creatorCardId":298,"turnPlayerCardId":298,"stackEffectType":13}} 

 Player 1 04:13:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":122,"_text":"Response Adding StartTurnLoot 16"},"childOfId":121} 

 Player 1 04:13:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":123,"_text":"Wait For Response From Player 1 "},"childOfId":121} 

 Player 1 04:13:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 04:13:44 $ACTION_MASSAGE_REMOVE:  
{"id":123} 

 Player 1 04:13:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":124,"_text":"Wait For Response From Player 2 "},"childOfId":121} 

 Player 1 04:13:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 04:13:44 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 04:13:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 04:13:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 04:13:44 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 04:13:44 $ACTION_MASSAGE_REMOVE:  
{"id":124} 

 Player 1 04:13:44 $ACTION_MASSAGE_REMOVE:  
{"id":122} 

 Player 1 04:13:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":125,"_text":"Resolve StartTurnLoot 16 "}} 

 Player 1 04:13:44 $DRAW_CARD:  
{"deckType":1} 

 Player 1 04:13:44 $MOVE_CARD:  
{"moveIndex":14,"cardId":105,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 04:13:44 $MOVE_CARD_END:  
{"moveIndex":14,"cardId":105,"flipIfFlipped":false,"playerId":1} 

 Player 1 04:13:44 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":105} 

 Player 1 04:13:44 $FLIP_CARD:  
{"cardId":105} 

 Player 1 04:13:45 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":105} 

 Player 1 04:13:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 04:13:45 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":16,"creatorCardId":298,"turnPlayerCardId":298,"stackEffectType":13}} 

 Player 1 04:13:45 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 04:13:45 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":16,"creatorCardId":298,"turnPlayerCardId":298,"stackEffectType":13}} 

 Player 1 04:13:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":126,"_text":"Remove After Resolve StartTurnLoot 16  "}} 

 Player 1 04:13:45 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 04:13:45 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":16,"creatorCardId":298,"turnPlayerCardId":298,"stackEffectType":13}} 

 Player 1 04:13:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":127,"_text":"Response Remove After Resolve StartTurnLoot 16"},"childOfId":126} 

 Player 1 04:13:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":128,"_text":"Wait For Response From Player 2 "},"childOfId":126} 

 Player 1 04:13:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 04:13:45 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 04:13:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 04:13:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 04:13:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 04:13:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 04:13:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 04:13:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 04:13:45 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 04:13:45 $ACTION_MASSAGE_REMOVE:  
{"id":128} 

 Player 1 04:13:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":129,"_text":"Wait For Response From Player 1 "},"childOfId":126} 

 Player 1 04:13:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 04:13:45 $ACTION_MASSAGE_REMOVE:  
{"id":129} 

 Player 1 04:13:45 $ACTION_MASSAGE_REMOVE:  
{"id":127} 

 Player 1 04:13:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":130,"_text":"Stack Was Emptied "}} 

 Player 1 04:13:45 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 04:13:51 $SHOW_DECISION:  
{"startCardId":105,"endCardId":105,"flipEndCard":true} 

 Player 1 04:13:54 $NEXT_STACK_ID:  

 Player 1 04:13:54 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 04:13:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Golden Horseshoe "} 

 Player 1 04:13:55 $ADD_TO_STACK:  
{"stackEffect":{"entityId":17,"creatorCardId":298,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":105,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 04:13:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Golden Horseshoe "} 

 Player 1 04:13:55 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":17,"creatorCardId":298,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":105,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 04:13:55 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 04:13:55 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 04:13:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Golden Horseshoe "} 

 Player 2 04:13:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Golden Horseshoe "} 

 Player 1 04:13:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":131,"_text":"Add PlayLootCardStackEffect 17 "}} 

 Player 1 04:13:58 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":105} 

 Player 1 04:13:58 $MOVE_CARD:  
{"moveIndex":15,"cardId":105,"placeID":300,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 04:13:58 $MOVE_CARD_END:  
{"moveIndex":15,"cardId":105,"flipIfFlipped":true,"playerId":1} 

 Player 1 04:13:58 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":105} 

 Player 1 04:13:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Golden Horseshoe: AddTrinket"} 

 Player 1 04:13:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 04:13:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Golden Horseshoe: AddTrinket"} 

 Player 1 04:13:58 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":17,"creatorCardId":298,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":105,"lootPlayerId":1,"effectToDo":{"effectName":"AddTrinket","cardEffectNum":0,"cardPlayerId":1,"cardId":105,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 04:13:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":132,"_text":"Response Adding PlayLootCardStackEffect 17"},"childOfId":131} 

 Player 1 04:13:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":133,"_text":"Wait For Response From Player 1 "},"childOfId":131} 

 Player 1 04:13:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 04:13:58 $ACTION_MASSAGE_REMOVE:  
{"id":133} 

 Player 1 04:13:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":134,"_text":"Wait For Response From Player 2 "},"childOfId":131} 

 Player 1 04:13:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 04:13:58 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 04:13:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Golden Horseshoe "} 

 Player 2 04:13:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Golden Horseshoe "} 

 Player 2 04:13:58 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 04:13:58 $ACTION_MASSAGE_REMOVE:  
{"id":134} 

 Player 1 04:13:58 $ACTION_MASSAGE_REMOVE:  
{"id":132} 

 Player 1 04:13:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":135,"_text":"Resolve PlayLootCardStackEffect 17 "}} 

 Player 1 04:13:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Golden Horseshoe: AddTrinket"} 

 Player 1 04:13:59 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":105,"particleType":6} 

 Player 1 04:14:00 $DISABLE_PARTICLE_EFFECT:  
{"cardId":105,"particleType":6} 

 Player 1 04:14:00 $CARD_ADD_TRINKET:  
{"cardId":105,"playerId":1,"addMuiliEffect":false} 

 Player 1 04:14:00 $REMOVE_FROM_PILE:  
{"cardId":105} 

 Player 1 04:14:01 $REGISTER_PASSIVE_ITEM:  
{"cardId":105} 

 Player 1 04:14:01 $MOVE_CARD:  
{"moveIndex":16,"cardId":105,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 

 Player 2 04:14:01 $MOVE_CARD_END:  
{"moveIndex":16,"cardId":105,"flipIfFlipped":true,"playerId":1} 

 Player 1 04:14:01 $ADD_AN_ITEM:  
{"playerId":1,"cardId":105,"isReward":true} 

 Player 1 04:14:01 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":105}],"result":true,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 04:14:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Golden Horseshoe: AddTrinket"} 

 Player 1 04:14:01 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":17,"creatorCardId":298,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":105,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 04:14:01 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 04:14:01 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":17,"creatorCardId":298,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":105,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 04:14:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":136,"_text":"Remove After Resolve PlayLootCardStackEffect 17  "}} 

 Player 1 04:14:01 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 04:14:01 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":17,"creatorCardId":298,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":105,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 04:14:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":137,"_text":"Response Remove After Resolve PlayLootCardStackEffect 17"},"childOfId":136} 

 Player 1 04:14:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":138,"_text":"Wait For Response From Player 2 "},"childOfId":136} 

 Player 1 04:14:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 04:14:01 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 04:14:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Golden Horseshoe "} 

 Player 2 04:14:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Golden Horseshoe "} 

 Player 2 04:14:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Golden Horseshoe "} 

 Player 2 04:14:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Golden Horseshoe "} 

 Player 2 04:14:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Golden Horseshoe "} 

 Player 2 04:14:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Golden Horseshoe "} 

 Player 2 04:14:02 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 04:14:02 $ACTION_MASSAGE_REMOVE:  
{"id":138} 

 Player 1 04:14:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":139,"_text":"Wait For Response From Player 1 "},"childOfId":136} 

 Player 1 04:14:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 04:14:02 $ACTION_MASSAGE_REMOVE:  
{"id":139} 

 Player 1 04:14:02 $ACTION_MASSAGE_REMOVE:  
{"id":137} 

 Player 1 04:14:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":140,"_text":"Stack Was Emptied "}} 

 Player 1 04:14:02 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 04:49:30 $MATCH: 