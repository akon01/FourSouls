Start Log 

 Player 1 18:07:21 $MATCH:  

 Player 1 18:07:22 $START_GAME:  

 Player 1 18:07:22 $MOVE_TO_TABLE:  

 Player 2 18:07:22 $MOVE_TO_TABLE:  

 Player 1 18:07:30 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 18:07:30 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 2 18:07:30 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":264,"itemCardId":267} 

 Player 2 18:07:30 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":269}],"result":true,"preventMethod":false,"methodScopeId":268,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 18:07:30 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":268,"itemCardId":269} 

 Player 2 18:07:30 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[83,72,98,134,109,107,32,116,140,39,11,141,63,68,20,92,10,52,46,115,38,35,128,79,90,85,26,12,54,27,42,105,112,124,25,118,17,56,97,135,121,120,65,77,137,66,84,40,114,139,60,34,8,76,81,122,14,7,28,16,64,33,53,106,117,91,30,51,23,9,29,143,50,73,41,119,111,123,103,129,142,130,70,126,102,49,110,44,133,31,18,74,80,78,71,24,108,58,136,47,22,125,101,61,89,45,95,94,67,87,55,43,113,59,36,99,13,75,37,131,69,100,19,48,96,104,57,88,93,15,127,21,86,82,62,138,132]} 

 Player 2 18:07:30 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[229,247,254,214,241,251,223,225,246,243,245,211,218,216,221,210,240,255,215,207,227,239,244,231,237,234,236,235,257,213,256,222,238,226,206,248,217,250,242,258,228,259,209,208,212,224,232,252,253,249,220,233,230,219]} 

 Player 2 18:07:30 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[151,157,171,161,196,194,183,180,201,172,160,202,153,198,156,169,197,185,146,192,200,150,189,154,195,178,162,174,176,193,175,188,159,170,187,168,182,166,191,177,167,186,165,173,148,181,163,199,203,179,158,155,184,147,149,164,190,152]} 

 Player 2 18:07:30 $DRAW_CARD:  
{"deckType":5} 

 Player 2 18:07:30 $FLIP_CARD:  
{"cardId":152} 

 Player 2 18:07:30 $ADD_STORE_CARD:  
{"cardId":152} 

 Player 2 18:07:30 $DRAW_CARD:  
{"deckType":5} 

 Player 2 18:07:30 $FLIP_CARD:  
{"cardId":190} 

 Player 2 18:07:30 $ADD_STORE_CARD:  
{"cardId":190} 

 Player 2 18:07:30 $DRAW_CARD:  
{"deckType":2} 

 Player 2 18:07:30 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":219} 

 Player 2 18:07:30 $DRAW_CARD:  
{"deckType":2} 

 Player 2 18:07:30 $FLIP_CARD:  
{"cardId":230} 

 Player 2 18:07:30 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":230} 

 Player 2 18:07:30 $NEW_MONSTER_ON_PLACE:  
{"cardId":230,"monsterPlaceId":1} 

 Player 2 18:07:31 $DRAW_CARD:  
{"deckType":2} 

 Player 2 18:07:31 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":233} 

 Player 2 18:07:31 $DRAW_CARD:  
{"deckType":2} 

 Player 2 18:07:31 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":220} 

 Player 2 18:07:31 $DRAW_CARD:  
{"deckType":2} 

 Player 2 18:07:31 $FLIP_CARD:  
{"cardId":249} 

 Player 2 18:07:31 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":249} 

 Player 2 18:07:31 $NEW_MONSTER_ON_PLACE:  
{"cardId":249,"monsterPlaceId":2} 

 Player 2 18:07:31 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 18:07:31 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":264,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 18:07:31 $DRAW_CARD:  
{"deckType":1} 

 Player 2 18:07:31 $MOVE_CARD:  
{"moveIndex":1,"cardId":132,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 18:07:31 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":267}],"result":true,"preventMethod":false,"methodScopeId":264,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 18:07:31 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":132,"flipIfFlipped":false,"playerId":2} 

 Player 2 18:07:31 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":132} 

 Player 2 18:07:31 $FLIP_CARD:  
{"cardId":132} 

 Player 2 18:07:31 $FLIP_CARD:  
{"cardId":132} 

 Player 2 18:07:31 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":132} 

 Player 2 18:07:31 $DRAW_CARD:  
{"deckType":1} 

 Player 2 18:07:31 $MOVE_CARD:  
{"moveIndex":2,"cardId":138,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 18:07:32 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":138,"flipIfFlipped":false,"playerId":2} 

 Player 2 18:07:32 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":138} 

 Player 2 18:07:32 $FLIP_CARD:  
{"cardId":138} 

 Player 2 18:07:32 $FLIP_CARD:  
{"cardId":138} 

 Player 2 18:07:32 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":138} 

 Player 2 18:07:32 $DRAW_CARD:  
{"deckType":1} 

 Player 2 18:07:32 $MOVE_CARD:  
{"moveIndex":3,"cardId":62,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 18:07:32 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":62,"flipIfFlipped":false,"playerId":2} 

 Player 2 18:07:32 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":62} 

 Player 2 18:07:32 $FLIP_CARD:  
{"cardId":62} 

 Player 2 18:07:32 $FLIP_CARD:  
{"cardId":62} 

 Player 2 18:07:32 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":62} 

 Player 2 18:07:32 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 18:07:33 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":268,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 18:07:33 $DRAW_CARD:  
{"deckType":1} 

 Player 2 18:07:33 $MOVE_CARD:  
{"moveIndex":4,"cardId":82,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 18:07:33 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":82,"flipIfFlipped":false,"playerId":2} 

 Player 2 18:07:33 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":82} 

 Player 2 18:07:33 $FLIP_CARD:  
{"cardId":82} 

 Player 2 18:07:33 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":82} 

 Player 2 18:07:33 $DRAW_CARD:  
{"deckType":1} 

 Player 2 18:07:33 $MOVE_CARD:  
{"moveIndex":5,"cardId":86,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 18:07:33 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":86,"flipIfFlipped":false,"playerId":2} 

 Player 2 18:07:33 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":86} 

 Player 2 18:07:33 $FLIP_CARD:  
{"cardId":86} 

 Player 2 18:07:34 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":86} 

 Player 2 18:07:34 $DRAW_CARD:  
{"deckType":1} 

 Player 2 18:07:34 $MOVE_CARD:  
{"moveIndex":6,"cardId":21,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 18:07:34 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":21,"flipIfFlipped":false,"playerId":2} 

 Player 2 18:07:34 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":21} 

 Player 2 18:07:34 $FLIP_CARD:  
{"cardId":21} 

 Player 2 18:07:34 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":21} 

 Player 2 18:07:34 $GAME_HAS_STARTED:  

 Player 2 18:07:34 $SET_TURN:  
{"playerId":1} 

 Player 2 18:07:34 $START_TURN:  
{"playerId":1} 

 Player 2 18:07:34 $UPDATE_ACTIONS:  

 Player 1 18:07:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:07:34 $NEXT_STACK_ID:  

 Player 1 18:07:34 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:07:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 18:07:34 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":264,"turnPlayerCardId":264,"stackEffectType":13}} 

 Player 1 18:07:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 1 18:07:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:07:34 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 18:07:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 18:07:34 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":264,"turnPlayerCardId":264,"stackEffectType":13}} 

 Player 1 18:07:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 1 18:07:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 1 18:07:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:07:35 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 18:07:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 1 18:07:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 18:07:35 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 18:07:35 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:07:35 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:07:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 18:07:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 18:07:35 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 18:07:35 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 18:07:35 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 18:07:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 1 18:07:35 $DRAW_CARD:  
{"deckType":1} 

 Player 1 18:07:35 $MOVE_CARD:  
{"moveIndex":7,"cardId":127,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 18:07:35 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":127,"flipIfFlipped":false,"playerId":1} 

 Player 1 18:07:35 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":127} 

 Player 1 18:07:35 $FLIP_CARD:  
{"cardId":127} 

 Player 1 18:07:35 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":127} 

 Player 1 18:07:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 18:07:35 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":264,"turnPlayerCardId":264,"stackEffectType":13}} 

 Player 1 18:07:35 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 18:07:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 1 18:07:35 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:07:35 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":264,"turnPlayerCardId":264,"stackEffectType":13}} 

 Player 1 18:07:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 1 18:07:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 1 18:07:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 18:07:36 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 18:07:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 18:07:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 18:07:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 18:07:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 18:07:36 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 18:07:36 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 1 18:07:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 1 18:07:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:07:36 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 1 18:07:36 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 1 18:07:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 1 18:07:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:07:36 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 18:07:36 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 18:07:36 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 18:07:36 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 18:07:36 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 18:07:36 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 18:07:36 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 18:07:37 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 18:07:38 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 18:07:54 $NEXT_STACK_ID:  

 Player 1 18:07:54 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:07:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 1 18:07:54 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":264,"hasLockingStackEffect":false,"itemToPlayCardId":267,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 18:07:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add ActivateItem 2 "}} 

 Player 1 18:07:54 $LOG_ERROR:  
{"message":"\"Cannot read property 'stopSystem' of null\"","stack":"\"TypeError: Cannot read property 'stopSystem' of null\\n    at Function.ParticleManager.activateParticleEffect (http://localhost:7456/preview-scripts/assets/Script/Managers/ParticleManager.js:47:21)\\n    at Function.CardManager.makeRequiredForDataCollector (http://localhost:7456/preview-scripts/assets/Script/Managers/CardManager.js:491:35)\\n    at http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/DataCollector/ChooseCard.js:267:51\\n    at Set.forEach (<anonymous>)\\n    at ChooseCard.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/DataCollector/ChooseCard.js:265:31)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\\n    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\\n    at new Promise (<anonymous>)\\n    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\""} 
//////Error From Player 1////
  

 Player 1 18:07:54 $LOG_ERROR:  
//////Error From Player 1////

 "\"Cannot read property 'stopSystem' of null\""

 + "\"TypeError: Cannot read property 'stopSystem' of null\
    at Function.ParticleManager.activateParticleEffect (http://localhost:7456/preview-scripts/assets/Script/Managers/ParticleManager.js:47:21)\
    at Function.CardManager.makeRequiredForDataCollector (http://localhost:7456/preview-scripts/assets/Script/Managers/CardManager.js:491:35)\
    at http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/DataCollector/ChooseCard.js:267:51\
    at Set.forEach (<anonymous>)\
    at ChooseCard.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/DataCollector/ChooseCard.js:265:31)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\
    at new Promise (<anonymous>)\
    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\""

////// 
//////Error From Player 1////

 "\"Cannot read property 'stopSystem' of null\""

 + "\"TypeError: Cannot read property 'stopSystem' of null\
    at Function.ParticleManager.activateParticleEffect (http://localhost:7456/preview-scripts/assets/Script/Managers/ParticleManager.js:47:21)\
    at Function.CardManager.makeRequiredForDataCollector (http://localhost:7456/preview-scripts/assets/Script/Managers/CardManager.js:491:35)\
    at http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/DataCollector/ChooseCard.js:267:51\
    at Set.forEach (<anonymous>)\
    at ChooseCard.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/DataCollector/ChooseCard.js:265:31)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\
    at new Promise (<anonymous>)\
    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\""

////// 

 Player 1 18:07:54 $USE_ITEM:  
{"cardId":267} 

 Player 1 18:07:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:07:54 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 18:07:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 1 18:07:54 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":264,"hasLockingStackEffect":false,"itemToPlayCardId":267,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 18:07:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding ActivateItem 2"},"childOfId":10} 

 Player 1 18:07:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 1 18:07:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:07:55 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 1 18:07:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 1 18:07:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 18:07:55 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 18:07:55 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:07:55 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:07:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 18:07:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 18:07:55 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 18:07:55 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 1 18:07:55 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 1 18:07:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve ActivateItem 2 "}} 

 Player 1 18:07:55 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":267,"particleType":6} 

 Player 1 18:07:57 $DISABLE_PARTICLE_EFFECT:  
{"cardId":267,"particleType":6} 

 Player 1 18:07:57 $LOG_ERROR:  
"effect LookAtTopDeckAndPutOnTop failed to execute\nTypeError: Cannot read property 'getComponent' of null\neffect data was:" 
//////Error From Player 1////
  

 Player 1 18:07:57 $LOG_ERROR:  
//////Error From Player 1////
 [object Object]
////// 

 Player 1 18:07:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 1 18:07:57 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":264,"hasLockingStackEffect":false,"itemToPlayCardId":267,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 18:07:57 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 18:07:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve ActivateItem 2  "}} 

 Player 1 18:07:57 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:07:57 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":264,"hasLockingStackEffect":false,"itemToPlayCardId":267,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 18:07:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve ActivateItem 2"},"childOfId":15} 

 Player 1 18:07:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 1 18:07:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 18:07:57 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 18:07:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 18:07:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 18:07:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 18:07:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 18:07:58 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 18:07:58 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 1 18:07:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 1 18:07:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:07:58 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 1 18:07:58 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 1 18:07:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 1 18:07:58 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:07:58 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 18:07:58 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 18:07:58 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 18:07:58 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 18:07:58 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 18:07:58 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 18:07:58 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 18:07:58 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 18:07:58 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 18:07:58 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 18:07:58 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 18:07:59 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 18:08:00 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 18:08:59 $MATCH: 