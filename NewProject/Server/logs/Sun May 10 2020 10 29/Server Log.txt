Start Log 

 Player 1 10:29:32 $MATCH:  

 Player 1 10:29:32 $START_GAME:  

 Player 1 10:29:32 $MOVE_TO_TABLE:  

 Player 2 10:29:32 $MOVE_TO_TABLE:  

 Player 2 10:29:38 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 1 10:29:40 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 10:29:40 $SET_CHAR:  
{"originPlayerId":2,"playerId":1,"charCardId":337,"itemCardId":338} 

 Player 1 10:29:40 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":337,"itemCardId":338} 

 Player 1 10:29:40 $SET_CHAR_END:  
{"playerId":2} 

 Player 2 10:29:40 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":331,"itemCardId":332} 

 Player 2 10:29:41 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[24,29,122,100,17,77,75,10,5,71,69,94,40,54,90,15,123,84,52,37,110,139,105,118,137,91,4,117,39,73,106,107,27,83,38,87,135,99,45,116,109,8,85,47,22,95,76,104,101,80,93,59,16,63,127,26,112,36,92,51,61,43,11,41,33,32,21,6,35,53,65,9,42,25,57,103,72,86,121,120,13,133,23,125,134,136,108,88,49,74,138,31,115,67,12,89,131,128,64,129,132,14,68,111,60,70,50,7,113,20,81,98,78,119,82,126,19,62,46,28,124,114,56,34,66,130,58,30,97,55,18,79,96,102,48,44]} 

 Player 2 10:29:41 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[243,236,277,259,309,244,281,254,272,289,251,313,258,245,311,263,306,295,232,310,248,271,266,239,265,226,296,304,287,260,290,293,234,316,284,275,315,252,249,278,267,233,261,238,237,305,231,250,242,253,228,282,308,288,291,298,312,286,230,276,229,273,246,247,270,297,225,300,240,292,255,279,299,223,268,235,256,257,303,227,307,301,262,274,269,285,241,264,224,283,302,314,294,280]} 

 Player 2 10:29:41 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[180,183,198,176,201,155,162,191,144,192,148,181,207,186,187,172,189,215,142,174,217,179,185,161,163,175,208,204,199,154,149,193,194,219,184,168,151,214,158,171,145,220,203,173,202,153,221,156,169,205,157,197,196,210,160,218,147,178,206,190,177,166,182,213,209,195,170,159,200,211,212,143,150,188,141,216,165,167,146,164,152]} 

 Player 2 10:29:41 $DRAW_CARD:  
{"deckType":5} 

 Player 2 10:29:41 $FLIP_CARD:  
{"cardId":152} 

 Player 2 10:29:41 $ADD_STORE_CARD:  
{"cardId":152} 

 Player 2 10:29:41 $DRAW_CARD:  
{"deckType":5} 

 Player 2 10:29:41 $FLIP_CARD:  
{"cardId":164} 

 Player 2 10:29:41 $ADD_STORE_CARD:  
{"cardId":164} 

 Player 2 10:29:41 $DRAW_CARD:  
{"deckType":2} 

 Player 2 10:29:41 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":280} 

 Player 2 10:29:41 $DRAW_CARD:  
{"deckType":2} 

 Player 2 10:29:41 $FLIP_CARD:  
{"cardId":294} 

 Player 2 10:29:41 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":294} 

 Player 2 10:29:41 $NEW_MONSTER_ON_PLACE:  
{"cardId":294,"monsterPlaceId":1} 

 Player 2 10:29:41 $DRAW_CARD:  
{"deckType":2} 

 Player 2 10:29:41 $FLIP_CARD:  
{"cardId":314} 

 Player 2 10:29:41 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":314} 

 Player 2 10:29:41 $NEW_MONSTER_ON_PLACE:  
{"cardId":314,"monsterPlaceId":2} 

 Player 2 10:29:41 $REGISTER_PASSIVE_ITEM:  
{"cardId":318} 

 Player 2 10:29:41 $REGISTER_PASSIVE_ITEM:  
{"cardId":319} 

 Player 2 10:29:41 $REGISTER_PASSIVE_ITEM:  
{"cardId":320} 

 Player 2 10:29:41 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 10:29:41 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":337,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 10:29:41 $DRAW_CARD:  
{"deckType":1} 

 Player 2 10:29:41 $MOVE_CARD:  
{"moveIndex":1,"cardId":44,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 10:29:42 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":44,"flipIfFlipped":false,"playerId":2} 

 Player 2 10:29:42 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":44} 

 Player 2 10:29:42 $FLIP_CARD:  
{"cardId":44} 

 Player 2 10:29:42 $FLIP_CARD:  
{"cardId":44} 

 Player 2 10:29:42 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":44} 

 Player 2 10:29:42 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":44}],"result":null,"preventMethod":false,"methodScopeId":337,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 10:29:42 $DRAW_CARD:  
{"deckType":1} 

 Player 2 10:29:42 $MOVE_CARD:  
{"moveIndex":2,"cardId":48,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 10:29:42 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":48,"flipIfFlipped":false,"playerId":2} 

 Player 2 10:29:42 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":48} 

 Player 2 10:29:42 $FLIP_CARD:  
{"cardId":48} 

 Player 2 10:29:42 $FLIP_CARD:  
{"cardId":48} 

 Player 2 10:29:42 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":48} 

 Player 2 10:29:42 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":48}],"result":null,"preventMethod":false,"methodScopeId":337,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 10:29:42 $DRAW_CARD:  
{"deckType":1} 

 Player 2 10:29:42 $MOVE_CARD:  
{"moveIndex":3,"cardId":102,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 10:29:43 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":102,"flipIfFlipped":false,"playerId":2} 

 Player 2 10:29:43 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":102} 

 Player 2 10:29:43 $FLIP_CARD:  
{"cardId":102} 

 Player 2 10:29:43 $FLIP_CARD:  
{"cardId":102} 

 Player 2 10:29:43 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":102} 

 Player 2 10:29:43 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":102}],"result":null,"preventMethod":false,"methodScopeId":337,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 2 10:29:43 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 10:29:43 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":331,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 2 10:29:43 $DRAW_CARD:  
{"deckType":1} 

 Player 2 10:29:43 $MOVE_CARD:  
{"moveIndex":4,"cardId":96,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 10:29:43 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":96,"flipIfFlipped":false,"playerId":2} 

 Player 2 10:29:43 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":96} 

 Player 2 10:29:43 $FLIP_CARD:  
{"cardId":96} 

 Player 2 10:29:43 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":96} 

 Player 2 10:29:43 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":96}],"result":null,"preventMethod":false,"methodScopeId":331,"scopeIsPlayer":true,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 

 Player 2 10:29:43 $DRAW_CARD:  
{"deckType":1} 

 Player 2 10:29:43 $MOVE_CARD:  
{"moveIndex":5,"cardId":79,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 10:29:44 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":79,"flipIfFlipped":false,"playerId":2} 

 Player 2 10:29:44 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":79} 

 Player 2 10:29:44 $FLIP_CARD:  
{"cardId":79} 

 Player 2 10:29:44 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":79} 

 Player 2 10:29:44 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":79}],"result":null,"preventMethod":false,"methodScopeId":331,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 

 Player 2 10:29:44 $DRAW_CARD:  
{"deckType":1} 

 Player 2 10:29:44 $MOVE_CARD:  
{"moveIndex":6,"cardId":18,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 10:29:44 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":18,"flipIfFlipped":false,"playerId":2} 

 Player 2 10:29:44 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":18} 

 Player 2 10:29:44 $FLIP_CARD:  
{"cardId":18} 

 Player 2 10:29:44 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":18} 

 Player 2 10:29:44 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":18}],"result":null,"preventMethod":false,"methodScopeId":331,"scopeIsPlayer":true,"index":8,"originStackId":-1},"isAfterActivation":true,"index":8} 

 Player 2 10:29:44 $GAME_HAS_STARTED:  

 Player 2 10:29:44 $SET_TURN:  
{"playerId":1} 

 Player 2 10:29:44 $START_TURN:  
{"playerId":1} 

 Player 2 10:29:44 $UPDATE_ACTIONS:  

 Player 1 10:29:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 10:29:44 $NEXT_STACK_ID:  

 Player 1 10:29:44 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":337,"turnPlayerCardId":337,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"}} 

 Player 1 10:29:44 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":337,"turnPlayerCardId":337,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"}} 

 Player 1 10:29:44 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 10:29:45 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 1 10:29:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add Start Turn Loot Draw 1 "}} 

 Player 1 10:29:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 10:29:47 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":337,"turnPlayerCardId":337,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"}} 

 Player 1 10:29:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding Start Turn Loot Draw 1"},"childOfId":0} 

 Player 1 10:29:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 1 10:29:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 10:29:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 1 10:29:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 10:29:48 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 10:29:48 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[331,332]} 

 Player 2 10:29:48 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 10:29:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve Start Turn Loot Draw 1 "}} 

 Player 1 10:29:48 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":1,"creatorCardId":337,"turnPlayerCardId":337,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"}]} 

 Player 1 10:29:48 $DRAW_CARD:  
{"deckType":1} 

 Player 1 10:29:48 $MOVE_CARD:  
{"moveIndex":7,"cardId":55,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 10:29:48 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":55,"flipIfFlipped":false,"playerId":1} 

 Player 1 10:29:48 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":55} 

 Player 1 10:29:48 $FLIP_CARD:  
{"cardId":55} 

 Player 1 10:29:48 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":55} 

 Player 1 10:29:48 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":55}],"result":null,"preventMethod":false,"methodScopeId":337,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 10:29:48 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":1,"text":"Player 1 Has Drawn Loot For Start Turn"} 

 Player 1 10:29:48 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":337,"turnPlayerCardId":337,"stackEffectType":13,"lable":"Player 1 Has Drawn Loot For Start Turn"}} 

 Player 1 10:29:48 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 1 10:29:48 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 10:29:48 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 1 10:29:51 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":1} 

 Player 1 10:29:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve Start Turn Loot Draw 1  "}} 

 Player 1 10:29:51 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":337,"turnPlayerCardId":337,"stackEffectType":13,"lable":"Player 1 Has Drawn Loot For Start Turn"}} 

 Player 1 10:29:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve Start Turn Loot Draw 1"},"childOfId":5} 

 Player 1 10:29:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 1 10:29:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 10:29:51 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 10:29:51 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[331,332]} 

 Player 2 10:29:51 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 10:29:51 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 1 10:29:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 1 10:29:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 10:29:51 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 1 10:29:51 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 1 10:29:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 1 10:29:51 $CLEAR_SE_VIS:  

 Player 1 10:29:53 $NEXT_STACK_ID:  

 Player 1 10:29:53 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":337,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":102,"lootPlayerId":1,"lable":"Player 1 Is Going To Play Golden Horseshoe ","hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 10:29:53 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":337,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":102,"lootPlayerId":1,"lable":"Player 1 Is Going To Play Golden Horseshoe ","hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 10:29:54 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 10:29:54 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 1 10:29:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add Play Loot Card 2 "}} 

 Player 1 10:29:56 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":102} 

 Player 1 10:29:57 $MOVE_CARD:  
{"moveIndex":8,"cardId":102,"placeID":339,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 10:29:57 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":102,"flipIfFlipped":true,"playerId":1} 

 Player 1 10:29:57 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":102} 

 Player 1 10:29:57 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":2,"text":"Player 1 Is Going To Play Golden Horseshoe: AddTrinket"} 

 Player 1 10:29:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 10:29:57 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":337,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":102,"lootPlayerId":1,"effectToDo":{"effectName":"AddTrinket","cardEffectNum":0,"cardPlayerId":1,"cardId":102,"effctType":1},"lable":"Player 1 Is Going To Play Golden Horseshoe: AddTrinket","hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 10:29:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding Play Loot Card 2"},"childOfId":10} 

 Player 1 10:29:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 1 10:29:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 10:29:57 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 1 10:29:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 1 10:29:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 10:29:57 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 10:29:57 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[331,332]} 

 Player 2 10:29:57 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 10:29:57 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 1 10:29:57 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 1 10:29:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve Play Loot Card 2 "}} 

 Player 1 10:29:57 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":2,"creatorCardId":337,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":102,"lootPlayerId":1,"effectToDo":{"effectName":"AddTrinket","cardEffectNum":0,"cardPlayerId":1,"cardId":102,"effctType":1},"lable":"Player 1 Is Going To Play Golden Horseshoe: AddTrinket","hasDataBeenCollectedYet":true,"stackEffectType":8}]} 

 Player 1 10:29:57 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":2,"text":"Player 1 Plays Golden Horseshoe: AddTrinket"} 

 Player 1 10:29:57 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":102,"particleType":6} 

 Player 1 10:29:59 $DISABLE_PARTICLE_EFFECT:  
{"cardId":102,"particleType":6} 

 Player 1 10:29:59 $CARD_ADD_TRINKET:  
{"cardId":102,"playerId":1,"addMuiliEffect":false} 

 Player 1 10:29:59 $REMOVE_FROM_PILE:  
{"cardId":102} 

 Player 1 10:29:59 $REGISTER_PASSIVE_ITEM:  
{"cardId":102} 

 Player 1 10:29:59 $MOVE_CARD:  
{"moveIndex":9,"cardId":102,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 

 Player 2 10:30:00 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":102,"flipIfFlipped":true,"playerId":1} 

 Player 1 10:30:00 $ADD_AN_ITEM:  
{"playerId":1,"cardId":102,"isReward":true} 

 Player 1 10:30:00 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":102}],"result":true,"preventMethod":false,"methodScopeId":337,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 1 10:30:00 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":337,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":102,"lootPlayerId":1,"lable":"Player 1 Plays Golden Horseshoe: AddTrinket","hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 10:30:00 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 1 10:30:00 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 10:30:00 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 1 10:30:03 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":2} 

 Player 1 10:30:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve Play Loot Card 2  "}} 

 Player 1 10:30:03 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":337,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":102,"lootPlayerId":1,"lable":"Player 1 Plays Golden Horseshoe: AddTrinket","hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 10:30:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve Play Loot Card 2"},"childOfId":15} 

 Player 1 10:30:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 1 10:30:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 10:30:03 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 10:30:03 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[331,332]} 

 Player 2 10:30:03 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 10:30:03 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 1 10:30:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 1 10:30:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 10:30:03 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 1 10:30:03 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 1 10:30:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 1 10:30:03 $CLEAR_SE_VIS:  

 Player 1 10:30:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 10:30:04 $CLEAR_SE_VIS:  

 Player 1 10:30:04 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 1 10:30:04 $CLEAR_SE_VIS:  

 Player 1 10:30:04 $END_TURN:  

 Player 1 10:30:04 $SET_TURN:  
{"playerId":2} 

 Player 1 10:30:04 $START_TURN:  
{"playerId":2} 

 Player 2 10:30:04 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 10:30:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 10:30:04 $NEXT_STACK_ID:  

 Player 2 10:30:04 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":331,"turnPlayerCardId":331,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}} 

 Player 2 10:30:04 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":331,"turnPlayerCardId":331,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}} 

 Player 2 10:30:04 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 10:30:04 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 1 10:30:04 $STACK_EMPTIED:  
{"playerId":2} 

 Player 2 10:30:04 $CLEAR_SE_VIS:  

 Player 2 10:30:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add Start Turn Loot Draw 3 "}} 

 Player 2 10:30:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 10:30:07 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":331,"turnPlayerCardId":331,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}} 

 Player 2 10:30:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding Start Turn Loot Draw 3"},"childOfId":20} 

 Player 2 10:30:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 2 10:30:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 10:30:07 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 2 10:30:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 2 10:30:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 10:30:07 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 10:30:07 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[337,338]} 

 Player 1 10:30:07 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 10:30:07 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 2 10:30:08 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 2 10:30:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve Start Turn Loot Draw 3 "}} 

 Player 2 10:30:08 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":3,"creatorCardId":331,"turnPlayerCardId":331,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}]} 

 Player 2 10:30:08 $DRAW_CARD:  
{"deckType":1} 

 Player 2 10:30:08 $MOVE_CARD:  
{"moveIndex":10,"cardId":97,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 10:30:08 $MOVE_CARD_END:  
{"moveIndex":10,"cardId":97,"flipIfFlipped":false,"playerId":2} 

 Player 2 10:30:08 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":97} 

 Player 2 10:30:08 $FLIP_CARD:  
{"cardId":97} 

 Player 2 10:30:08 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":97} 

 Player 2 10:30:08 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":97}],"result":null,"preventMethod":false,"methodScopeId":331,"scopeIsPlayer":true,"index":9,"originStackId":-1},"isAfterActivation":true,"index":9} 

 Player 2 10:30:08 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":3,"text":"Player 2 Has Drawn Loot For Start Turn"} 

 Player 2 10:30:08 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":331,"turnPlayerCardId":331,"stackEffectType":13,"lable":"Player 2 Has Drawn Loot For Start Turn"}} 

 Player 2 10:30:08 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 10:30:08 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 10:30:08 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 2 10:30:11 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":3} 

 Player 2 10:30:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Remove After Resolve Start Turn Loot Draw 3  "}} 

 Player 2 10:30:11 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":331,"turnPlayerCardId":331,"stackEffectType":13,"lable":"Player 2 Has Drawn Loot For Start Turn"}} 

 Player 2 10:30:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Response Remove After Resolve Start Turn Loot Draw 3"},"childOfId":25} 

 Player 2 10:30:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Wait For Response From Player 1 "},"childOfId":25} 

 Player 2 10:30:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 10:30:11 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 10:30:11 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[337,338]} 

 Player 1 10:30:11 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 10:30:11 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 2 10:30:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":25} 

 Player 2 10:30:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 10:30:11 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 2 10:30:11 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 2 10:30:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Stack Was Emptied "}} 

 Player 2 10:30:11 $CLEAR_SE_VIS:  

 Player 2 10:30:14 $MOVE_CARD:  
{"moveIndex":11,"cardId":123,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 

 Player 1 10:30:14 $MOVE_CARD_END:  
{"moveIndex":11,"cardId":123,"flipIfFlipped":true,"playerId":2} 

 Player 2 10:30:14 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[24,29,122,100,17,77,75,10,5,71,69,94,40,54,90,15,84,52,37,110,139,105,118,137,91,4,117,39,73,106,107,27,83,38,87,135,99,45,116,109,8,85,47,22,95,76,104,101,80,93,59,16,63,127,26,112,36,92,51,61,43,11,41,33,32,21,6,35,53,65,9,42,25,57,103,72,86,121,120,13,133,23,125,134,136,108,88,49,74,138,31,115,67,12,89,131,128,64,129,132,14,68,111,60,70,50,7,113,20,81,98,78,119,82,126,19,62,46,28,124,114,56,34,66,130,58,30]} 

 Player 2 10:30:14 $FLIP_CARD:  
{"cardId":123} 

 Player 2 10:30:14 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":123} 

 Player 2 10:30:14 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":123}],"result":null,"preventMethod":false,"methodScopeId":331,"scopeIsPlayer":true,"index":10,"originStackId":-1},"isAfterActivation":true,"index":10} 

 Player 2 10:30:17 $REACTION_TOGGLED:  
{"playerId":2} 

 Player 2 10:30:25 $NEXT_STACK_ID:  

 Player 2 10:30:25 $ADD_TO_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":331,"attackingPlayerCardId":331,"idOfCardBeingAttacked":314,"stackEffectType":4,"lable":"Player 2 declared attack on Widow"}} 

 Player 2 10:30:25 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":331,"attackingPlayerCardId":331,"idOfCardBeingAttacked":314,"stackEffectType":4,"lable":"Player 2 declared attack on Widow"}} 

 Player 2 10:30:25 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 10:30:25 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 2 10:30:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Add Player Declare Attack On Monster 4 "}} 

 Player 2 10:30:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 10:30:28 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":331,"attackingPlayerCardId":331,"idOfCardBeingAttacked":314,"stackEffectType":4,"lable":"Player 2 declared attack on Widow"}} 

 Player 2 10:30:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Response Adding Player Declare Attack On Monster 4"},"childOfId":30} 

 Player 2 10:30:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Wait For Response From Player 2 "},"childOfId":30} 

 Player 2 10:30:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 10:30:28 $SHOW_TIMER:  
{"time":90} 

 Player 2 10:30:28 $SHOW_REACTIONS:  
{"playerId":2,"cardsIds":[331,332,96,79,18,97,123]} 

 Player 2 10:30:31 $HIDE_TIMER:  

 Player 2 10:30:31 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[331,332,96,79,18,97,123]} 

 Player 2 10:30:31 $NEXT_STACK_ID:  

 Player 2 10:30:31 $ADD_TO_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":331,"hasLockingStackEffect":false,"itemToPlayCardId":123,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1,"lable":"Player 2 is going to activate Swallowed Penny"}} 

 Player 2 10:30:31 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":331,"hasLockingStackEffect":false,"itemToPlayCardId":123,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1,"lable":"Player 2 is going to activate Swallowed Penny"}} 

 Player 2 10:30:31 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 10:30:31 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 2 10:30:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Add Activate Item 5 "}} 

 Player 2 10:30:34 $USE_ITEM:  
{"cardId":123} 

 Player 2 10:30:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 10:30:34 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":331,"hasLockingStackEffect":false,"itemToPlayCardId":123,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1,"lable":"Player 2 is going to activate Swallowed Penny"}} 

 Player 2 10:30:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Response Adding Activate Item 5"},"childOfId":33} 

 Player 2 10:30:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Wait For Response From Player 2 "},"childOfId":33} 

 Player 2 10:30:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 10:30:34 $SHOW_TIMER:  
{"time":90} 

 Player 2 10:30:34 $SHOW_REACTIONS:  
{"playerId":2,"cardsIds":[331,332,96,79,18,97,123]} 

 Player 2 10:32:04 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[331,332,96,79,18,97,123]} 

 Player 2 10:32:04 $HIDE_TIMER:  

 Player 2 10:32:04 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 10:32:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Wait For Response From Player 1 "},"childOfId":33} 

 Player 2 10:32:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 10:32:04 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 10:32:04 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[337,338]} 

 Player 1 10:32:04 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 10:32:04 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 2 10:32:04 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 10:32:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Resolve Activate Item 5 "}} 

 Player 2 10:32:04 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":5,"creatorCardId":331,"hasLockingStackEffect":false,"itemToPlayCardId":123,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1,"lable":"Player 2 is going to activate Swallowed Penny"}]} 

 Player 2 10:32:04 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":123,"particleType":6} 

 Player 2 10:32:06 $DISABLE_PARTICLE_EFFECT:  
{"cardId":123,"particleType":6} 

 Player 2 10:32:06 $CARD_ADD_TRINKET:  
{"cardId":123,"playerId":2,"addMuiliEffect":false} 

 Player 2 10:32:06 $LOG_ERROR:  
{"message":"\"Cannot read property 'removeFromPile' of undefined\"","stack":"\"TypeError: Cannot read property 'removeFromPile' of undefined\\n    at Function.PileManager.removeFromPile (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:148:14)\\n    at AddTrinket.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:60:47)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\\n    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113284:71\\n    at new Promise (<anonymous>)\\n    at 486.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113264:14)\\n    at AddTrinket.doEffect (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:45:16)\\n    at CardEffect.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:307:59)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\""} 
//////Error From Player 2////
  

 Player 2 10:32:06 $LOG_ERROR:  
//////Error From Player 2////

 "\"Cannot read property 'removeFromPile' of undefined\""

 + "\"TypeError: Cannot read property 'removeFromPile' of undefined\
    at Function.PileManager.removeFromPile (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:148:14)\
    at AddTrinket.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:60:47)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113284:71\
    at new Promise (<anonymous>)\
    at 486.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113264:14)\
    at AddTrinket.doEffect (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:45:16)\
    at CardEffect.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:307:59)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\""

////// 
//////Error From Player 2////

 "\"Cannot read property 'removeFromPile' of undefined\""

 + "\"TypeError: Cannot read property 'removeFromPile' of undefined\
    at Function.PileManager.removeFromPile (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:148:14)\
    at AddTrinket.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:60:47)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113284:71\
    at new Promise (<anonymous>)\
    at 486.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113264:14)\
    at AddTrinket.doEffect (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:45:16)\
    at CardEffect.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:307:59)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\""

////// 

 Player 2 10:32:06 $SHOW_ANNOUNCEMENT:  
{"text":"\"Cannot read property 'removeFromPile' of undefined\""} 

 Player 2 10:32:06 $LOG_ERROR:  
"effect AddTrinket failed to execute" 
//////Error From Player 2////
  

 Player 2 10:32:06 $LOG_ERROR:  
//////Error From Player 2////
 [object Object]
////// 

 Player 2 10:32:06 $SHOW_ANNOUNCEMENT:  
{"text":"effect AddTrinket failed to execute"} 

 Player 2 10:32:06 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":5,"text":"Player 2 has activated Swallowed Penny"} 

 Player 2 10:32:06 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ACTIVATE_ITEM","args":[{"type":0,"number":123}],"result":null,"preventMethod":false,"methodScopeId":331,"scopeIsPlayer":true,"index":11,"originStackId":-1},"isAfterActivation":true,"index":11} 

 Player 2 10:32:07 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":331,"hasLockingStackEffect":false,"itemToPlayCardId":123,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1,"lable":"Player 2 has activated Swallowed Penny"}} 

 Player 2 10:32:07 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 10:32:07 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 10:32:07 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 2 10:32:09 $HIDE_ANNOUNCEMENT:  

 Player 2 10:32:09 $HIDE_ANNOUNCEMENT:  

 Player 2 10:32:09 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":5} 

 Player 2 10:32:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Remove After Resolve Activate Item 5  "}} 

 Player 2 10:32:09 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":331,"hasLockingStackEffect":false,"itemToPlayCardId":123,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1,"lable":"Player 2 has activated Swallowed Penny"}} 

 Player 2 10:32:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Response Remove After Resolve Activate Item 5"},"childOfId":38} 

 Player 2 10:32:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Wait For Response From Player 1 "},"childOfId":38} 

 Player 2 10:32:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 10:32:09 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 10:32:10 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[337,338]} 

 Player 1 10:32:10 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 10:32:10 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 10:32:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Wait For Response From Player 2 "},"childOfId":38} 

 Player 2 10:32:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 10:32:10 $SHOW_TIMER:  
{"time":90} 

 Player 2 10:32:10 $SHOW_REACTIONS:  
{"playerId":2,"cardsIds":[331,332,96,79,18,97,123]} 

 Player 2 10:33:40 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[331,332,96,79,18,97,123]} 

 Player 2 10:33:40 $HIDE_TIMER:  

 Player 2 10:33:40 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 2 10:33:40 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 10:33:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Resolve Player Declare Attack On Monster 4 "}} 

 Player 2 10:33:40 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":4,"creatorCardId":331,"attackingPlayerCardId":331,"idOfCardBeingAttacked":314,"stackEffectType":4,"lable":"Player 2 declared attack on Widow"}]} 

 Player 2 10:33:40 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":314,"particleType":5} 

 Player 2 10:33:40 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":4,"text":"Player 2 Has Entered Battle with Widow"} 

 Player 2 10:33:40 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":331,"scopeIsPlayer":true,"index":12,"originStackId":4},"isAfterActivation":true,"index":12} 

 Player 2 10:33:40 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":331,"attackingPlayerCardId":331,"idOfCardBeingAttacked":314,"stackEffectType":4,"lable":"Player 2 Has Entered Battle with Widow"}} 

 Player 2 10:33:40 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 10:33:40 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 10:33:40 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 2 10:33:43 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":4} 

 Player 2 10:33:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Remove After Resolve Player Declare Attack On Monster 4  "}} 

 Player 2 10:33:43 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":331,"attackingPlayerCardId":331,"idOfCardBeingAttacked":314,"stackEffectType":4,"lable":"Player 2 Has Entered Battle with Widow"}} 

 Player 2 10:33:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Response Remove After Resolve Player Declare Attack On Monster 4"},"childOfId":43} 

 Player 2 10:33:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Wait For Response From Player 2 "},"childOfId":43} 

 Player 2 10:33:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 10:33:43 $SHOW_TIMER:  
{"time":90} 

 Player 2 10:33:43 $SHOW_REACTIONS:  
{"playerId":2,"cardsIds":[331,332,96,79,18,97,123]} 

 Player 2 10:34:29 $MATCH: 