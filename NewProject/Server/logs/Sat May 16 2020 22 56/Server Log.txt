Start Log 

 Player 1 22:56:59 $MATCH:  

 Player 1 22:56:59 $START_GAME:  

 Player 1 22:56:59 $MOVE_TO_TABLE:  

 Player 2 22:56:59 $MOVE_TO_TABLE:  

 Player 1 22:57:09 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 22:57:09 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 2 22:57:09 $SET_CHAR:  
{"originPlayerId":2,"playerId":1,"charCardId":333,"itemCardId":334} 

 Player 1 22:57:09 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":333,"itemCardId":334} 

 Player 1 22:57:09 $SET_CHAR_END:  
{"playerId":2} 

 Player 2 22:57:09 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":321,"itemCardId":322} 

 Player 2 22:57:09 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[4,71,11,65,26,139,93,33,61,47,91,135,119,48,123,84,102,6,99,104,124,114,20,137,115,53,64,46,49,29,12,59,38,40,37,127,56,83,51,54,92,14,118,9,76,110,117,81,94,112,82,86,70,87,122,134,129,19,73,121,75,105,79,5,111,89,66,60,90,36,72,120,78,96,27,69,130,101,42,22,136,74,116,138,98,128,35,15,45,13,28,77,8,23,34,50,132,97,16,17,109,107,85,80,106,39,18,133,10,62,67,44,103,31,41,88,52,24,126,63,108,32,58,57,25,113,131,100,30,125,95,55,43,21,7,68]} 

 Player 2 22:57:09 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[311,232,310,280,315,286,275,271,285,309,242,301,245,248,272,262,257,228,255,236,249,274,289,312,299,294,306,237,288,277,281,246,293,260,241,279,225,296,261,239,283,305,226,269,235,303,282,270,224,287,247,316,258,263,300,238,252,223,291,276,229,273,265,266,233,250,230,295,254,259,267,243,308,244,240,284,253,278,314,256,231,251,292,268,264,290,234,313,302,297,307,227,304,298]} 

 Player 2 22:57:09 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[164,188,155,146,185,143,196,193,179,162,151,213,210,189,145,206,212,209,148,211,141,153,205,200,199,181,195,158,147,168,207,183,165,163,204,176,180,221,172,166,149,184,215,191,150,217,174,167,142,190,202,216,156,214,187,197,154,175,201,194,161,186,171,198,157,203,159,169,182,192,178,152,144,173,220,177,160,170,208,218,219]} 

 Player 2 22:57:10 $DRAW_CARD:  
{"deckType":5} 

 Player 2 22:57:10 $FLIP_CARD:  
{"cardId":219} 

 Player 2 22:57:10 $ADD_STORE_CARD:  
{"cardId":219} 

 Player 2 22:57:10 $DRAW_CARD:  
{"deckType":5} 

 Player 2 22:57:10 $FLIP_CARD:  
{"cardId":218} 

 Player 2 22:57:10 $ADD_STORE_CARD:  
{"cardId":218} 

 Player 2 22:57:10 $DRAW_CARD:  
{"deckType":2} 

 Player 2 22:57:10 $FLIP_CARD:  
{"cardId":298} 

 Player 2 22:57:10 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":298} 

 Player 2 22:57:10 $NEW_MONSTER_ON_PLACE:  
{"cardId":298,"monsterPlaceId":1} 

 Player 2 22:57:10 $DRAW_CARD:  
{"deckType":2} 

 Player 2 22:57:10 $FLIP_CARD:  
{"cardId":304} 

 Player 2 22:57:10 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":304} 

 Player 2 22:57:10 $NEW_MONSTER_ON_PLACE:  
{"cardId":304,"monsterPlaceId":2} 

 Player 2 22:57:10 $REGISTER_PASSIVE_ITEM:  
{"cardId":318} 

 Player 2 22:57:10 $REGISTER_PASSIVE_ITEM:  
{"cardId":319} 

 Player 2 22:57:10 $REGISTER_PASSIVE_ITEM:  
{"cardId":320} 

 Player 2 22:57:10 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 22:57:10 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":333,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 22:57:10 $DRAW_CARD:  
{"deckType":1} 

 Player 2 22:57:10 $MOVE_CARD:  
{"moveIndex":1,"cardId":68,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 22:57:10 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":68,"flipIfFlipped":false,"playerId":2} 

 Player 2 22:57:10 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":68} 

 Player 2 22:57:10 $FLIP_CARD:  
{"cardId":68} 

 Player 2 22:57:10 $FLIP_CARD:  
{"cardId":68} 

 Player 2 22:57:11 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":68} 

 Player 2 22:57:11 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":68}],"result":null,"preventMethod":false,"methodScopeId":333,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 22:57:11 $DRAW_CARD:  
{"deckType":1} 

 Player 2 22:57:11 $MOVE_CARD:  
{"moveIndex":2,"cardId":7,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 22:57:11 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":7,"flipIfFlipped":false,"playerId":2} 

 Player 2 22:57:11 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":7} 

 Player 2 22:57:11 $FLIP_CARD:  
{"cardId":7} 

 Player 2 22:57:11 $FLIP_CARD:  
{"cardId":7} 

 Player 2 22:57:11 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":7} 

 Player 2 22:57:11 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":7}],"result":null,"preventMethod":false,"methodScopeId":333,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 22:57:11 $DRAW_CARD:  
{"deckType":1} 

 Player 2 22:57:11 $MOVE_CARD:  
{"moveIndex":3,"cardId":21,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 22:57:12 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":21,"flipIfFlipped":false,"playerId":2} 

 Player 2 22:57:12 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":21} 

 Player 2 22:57:12 $FLIP_CARD:  
{"cardId":21} 

 Player 2 22:57:12 $FLIP_CARD:  
{"cardId":21} 

 Player 2 22:57:12 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":21} 

 Player 2 22:57:12 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":21}],"result":null,"preventMethod":false,"methodScopeId":333,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 2 22:57:12 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 22:57:12 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 2 22:57:12 $DRAW_CARD:  
{"deckType":1} 

 Player 2 22:57:12 $MOVE_CARD:  
{"moveIndex":4,"cardId":43,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 22:57:12 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":43,"flipIfFlipped":false,"playerId":2} 

 Player 2 22:57:12 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":43} 

 Player 2 22:57:12 $FLIP_CARD:  
{"cardId":43} 

 Player 2 22:57:12 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":43} 

 Player 2 22:57:12 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":43}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 

 Player 2 22:57:12 $DRAW_CARD:  
{"deckType":1} 

 Player 2 22:57:12 $MOVE_CARD:  
{"moveIndex":5,"cardId":55,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 22:57:13 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":55,"flipIfFlipped":false,"playerId":2} 

 Player 2 22:57:13 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":55} 

 Player 2 22:57:13 $FLIP_CARD:  
{"cardId":55} 

 Player 2 22:57:13 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":55} 

 Player 2 22:57:13 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":55}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 

 Player 2 22:57:13 $DRAW_CARD:  
{"deckType":1} 

 Player 2 22:57:13 $MOVE_CARD:  
{"moveIndex":6,"cardId":95,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 22:57:13 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":95,"flipIfFlipped":false,"playerId":2} 

 Player 2 22:57:13 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":95} 

 Player 2 22:57:13 $FLIP_CARD:  
{"cardId":95} 

 Player 2 22:57:13 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":95} 

 Player 2 22:57:13 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":95}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":8,"originStackId":-1},"isAfterActivation":true,"index":8} 

 Player 2 22:57:13 $GAME_HAS_STARTED:  

 Player 2 22:57:13 $SET_TURN:  
{"playerId":2} 

 Player 2 22:57:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:57:14 $NEXT_STACK_ID:  

 Player 2 22:57:14 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":321,"turnPlayerCardId":321,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}} 

 Player 2 22:57:14 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":321,"turnPlayerCardId":321,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}} 

 Player 2 22:57:14 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 22:57:14 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 2 22:57:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add Start Turn Loot Draw 1 "}} 

 Player 2 22:57:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:57:16 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":321,"turnPlayerCardId":321,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}} 

 Player 2 22:57:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding Start Turn Loot Draw 1"},"childOfId":0} 

 Player 2 22:57:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 2 22:57:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:57:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 2 22:57:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 22:57:17 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 22:57:17 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[333,334]} 

 Player 1 22:57:17 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 22:57:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve Start Turn Loot Draw 1 "}} 

 Player 2 22:57:17 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":1,"creatorCardId":321,"turnPlayerCardId":321,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}]} 

 Player 2 22:57:17 $DRAW_CARD:  
{"deckType":1} 

 Player 2 22:57:17 $MOVE_CARD:  
{"moveIndex":7,"cardId":125,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 22:57:17 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":125,"flipIfFlipped":false,"playerId":2} 

 Player 2 22:57:17 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":125} 

 Player 2 22:57:17 $FLIP_CARD:  
{"cardId":125} 

 Player 2 22:57:17 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":125} 

 Player 2 22:57:17 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":125}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":9,"originStackId":-1},"isAfterActivation":true,"index":9} 

 Player 2 22:57:17 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":1,"text":"Player 2 Has Drawn Loot For Start Turn"} 

 Player 2 22:57:17 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":321,"turnPlayerCardId":321,"stackEffectType":13,"lable":"Player 2 Has Drawn Loot For Start Turn"}} 

 Player 2 22:57:17 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 22:57:17 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 22:57:17 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 2 22:57:20 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":1} 

 Player 2 22:57:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve Start Turn Loot Draw 1  "}} 

 Player 2 22:57:20 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":321,"turnPlayerCardId":321,"stackEffectType":13,"lable":"Player 2 Has Drawn Loot For Start Turn"}} 

 Player 2 22:57:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve Start Turn Loot Draw 1"},"childOfId":5} 

 Player 2 22:57:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 2 22:57:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 22:57:20 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 22:57:20 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[333,334]} 

 Player 1 22:57:20 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 22:57:20 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 2 22:57:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 2 22:57:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:57:21 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 2 22:57:21 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 2 22:57:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 2 22:57:21 $CLEAR_SE_VIS:  

 Player 2 22:57:21 $UPDATE_ACTIONS:  

 Player 2 22:57:30 $MOVE_CARD:  
{"moveIndex":8,"cardId":176,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 

 Player 1 22:57:30 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":176,"flipIfFlipped":true,"playerId":2} 

 Player 2 22:57:30 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[164,188,155,146,185,143,196,193,179,162,151,213,210,189,145,206,212,209,148,211,141,153,205,200,199,181,195,158,147,168,207,183,165,163,204,180,221,172,166,149,184,215,191,150,217,174,167,142,190,202,216,156,214,187,197,154,175,201,194,161,186,171,198,157,203,159,169,182,192,178,152,144,173,220,177,160,170,208]} 

 Player 2 22:57:30 $REGISTER_PASSIVE_ITEM:  
{"cardId":176} 

 Player 2 22:57:30 $MOVE_CARD:  
{"moveIndex":9,"cardId":176,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 

 Player 1 22:57:30 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":176,"flipIfFlipped":true,"playerId":2} 

 Player 2 22:57:31 $ADD_AN_ITEM:  
{"playerId":2,"cardId":176,"isReward":true} 

 Player 2 22:57:31 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":176}],"result":true,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":10,"originStackId":-1},"isAfterActivation":true,"index":10} 

 Player 2 22:57:38 $NEXT_STACK_ID:  

 Player 2 22:57:38 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":321,"attackingPlayerCardId":321,"idOfCardBeingAttacked":298,"stackEffectType":4,"lable":"Player 2 declared attack on Spider"}} 

 Player 2 22:57:38 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":321,"attackingPlayerCardId":321,"idOfCardBeingAttacked":298,"stackEffectType":4,"lable":"Player 2 declared attack on Spider"}} 

 Player 2 22:57:38 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 22:57:38 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 2 22:57:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add Player Declare Attack On Monster 2 "}} 

 Player 2 22:57:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:57:41 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":321,"attackingPlayerCardId":321,"idOfCardBeingAttacked":298,"stackEffectType":4,"lable":"Player 2 declared attack on Spider"}} 

 Player 2 22:57:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding Player Declare Attack On Monster 2"},"childOfId":10} 

 Player 2 22:57:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 2 22:57:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:57:41 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 2 22:57:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 2 22:57:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 22:57:42 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 22:57:42 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[333,334]} 

 Player 1 22:57:42 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 22:57:42 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 2 22:57:42 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 2 22:57:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve Player Declare Attack On Monster 2 "}} 

 Player 2 22:57:42 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":2,"creatorCardId":321,"attackingPlayerCardId":321,"idOfCardBeingAttacked":298,"stackEffectType":4,"lable":"Player 2 declared attack on Spider"}]} 

 Player 2 22:57:42 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":298,"particleType":5} 

 Player 2 22:57:42 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":2,"text":"Player 2 Has Entered Battle with Spider"} 

 Player 2 22:57:42 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":11,"originStackId":2},"isAfterActivation":true,"index":11} 

 Player 2 22:57:42 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":321,"attackingPlayerCardId":321,"idOfCardBeingAttacked":298,"stackEffectType":4,"lable":"Player 2 Has Entered Battle with Spider"}} 

 Player 2 22:57:42 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 22:57:42 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 22:57:42 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 2 22:57:45 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":2} 

 Player 2 22:57:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve Player Declare Attack On Monster 2  "}} 

 Player 2 22:57:45 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":321,"attackingPlayerCardId":321,"idOfCardBeingAttacked":298,"stackEffectType":4,"lable":"Player 2 Has Entered Battle with Spider"}} 

 Player 2 22:57:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve Player Declare Attack On Monster 2"},"childOfId":15} 

 Player 2 22:57:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 2 22:57:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 22:57:45 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 22:57:45 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[333,334]} 

 Player 1 22:57:45 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 22:57:45 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 22:57:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 2 22:57:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:57:45 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 2 22:57:45 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 2 22:57:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 2 22:57:45 $CLEAR_SE_VIS:  

 Player 2 22:57:46 $NEXT_STACK_ID:  

 Player 2 22:57:46 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":321,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":298,"lable":"Player 2 is rolling against Spider<Monster>"}} 

 Player 2 22:57:46 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":321,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":298,"lable":"Player 2 is rolling against Spider<Monster>"}} 

 Player 2 22:57:46 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 22:57:46 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 2 22:57:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add Player Attack Roll On Monster 3 "}} 

 Player 2 22:57:49 $ROLL_DICE:  
{"playerId":2} 

 Player 2 22:57:51 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":1} 

 Player 2 22:57:51 $UPDATE_STACK_VIS:  
{"stackId":3,"text":"player rolled 1 vs Spider<Monster>"} 

 Player 2 22:57:51 $SHOW_DICE_ROLL:  
{"stackId":3} 

 Player 2 22:57:54 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":3,"text":"Player 2 rolled 1 vs Spider<Monster>"} 

 Player 2 22:57:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:57:54 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":321,"numberRolled":1,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":298,"lable":"Player 2 rolled 1 vs Spider<Monster>"}} 

 Player 2 22:57:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding Player Attack Roll On Monster 3"},"childOfId":20} 

 Player 2 22:57:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 2 22:57:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:57:54 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 2 22:57:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 2 22:57:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 22:57:54 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 22:57:54 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[333,334]} 

 Player 1 22:57:54 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 22:57:54 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 2 22:57:54 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 2 22:57:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve Player Attack Roll On Monster 3 "}} 

 Player 2 22:57:54 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":3,"creatorCardId":321,"numberRolled":1,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":298,"lable":"Player 2 rolled 1 vs Spider<Monster>"}]} 

 Player 2 22:57:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Added 0 to original roll"}} 

 Player 2 22:57:55 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":3,"text":"Player 2 Rolled 2 Against Spider<Monster> 4"} 

 Player 2 22:57:55 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":3,"text":"Player 2 Roll Miss"} 

 Player 2 22:57:55 $NEXT_STACK_ID:  

 Player 2 22:57:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:57:55 $CLEAR_SE_VIS:  

 Player 2 22:57:55 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":321,"entityToDoDamageCardId":298,"entityToTakeDamageCardId":321,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":2,"lable":"Spider is going to hurt Azazel"}} 

 Player 2 22:57:55 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":321,"numberRolled":1,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":298,"lable":"Player 2 Roll Miss"}} 

 Player 2 22:57:55 $REPLACE_STACK:  
{"currentStack":[{"entityId":4,"creatorCardId":321,"entityToDoDamageCardId":298,"entityToTakeDamageCardId":321,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":2,"lable":"Spider is going to hurt Azazel"},{"entityId":3,"creatorCardId":321,"numberRolled":1,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":298,"lable":"Player 2 Roll Miss"}]} 

 Player 2 22:57:55 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 22:57:55 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":2},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":12,"originStackId":3},"isAfterActivation":true,"index":12} 

 Player 2 22:57:55 $NEXT_STACK_ID:  

 Player 2 22:57:55 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":5,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":176,"effectToDo":{"effectName":"DeactivateItem","cardEffectNum":0,"cardPlayerId":2,"cardId":176,"effctType":0},"isAfterActivation":true,"index":12,"hasDataBeenCollectedYet":false,"stackEffectType":14,"lable":"Activate Hourglass Effect DeactivateITem<DeactivateITem>"}} 

 Player 2 22:57:55 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":5,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":176,"effectToDo":{"effectName":"DeactivateItem","cardEffectNum":0,"cardPlayerId":2,"cardId":176,"effctType":0},"isAfterActivation":true,"index":12,"hasDataBeenCollectedYet":false,"stackEffectType":14,"lable":"Activate Hourglass Effect DeactivateITem<DeactivateITem>"}} 

 Player 2 22:57:55 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 22:57:55 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 2 22:57:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Add Activate Passive Effect 5 "}} 

 Player 2 22:58:00 $SHOW_ANNOUNCEMENT:  
{"text":"Player 2 is Choosing Target"} 

 Player 2 22:58:15 $HIDE_ANNOUNCEMENT:  

 Player 2 22:58:15 $SHOW_DECISION:  
{"startCardId":176,"endCardId":334} 

 Player 2 22:58:18 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":5,"text":"Activate Hourglass effect DeactivateITem<DeactivateITem>"} 

 Player 2 22:58:18 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[334],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":321,"effectCardPlayer":321},"entityId":5,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":176,"effectToDo":{"effectName":"DeactivateItem","cardEffectNum":0,"cardPlayerId":2,"cardId":176,"effctType":0},"isAfterActivation":true,"index":12,"hasDataBeenCollectedYet":true,"stackEffectType":14,"lable":"Activate Hourglass effect DeactivateITem<DeactivateITem>"}} 

 Player 2 22:58:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Response Adding Activate Passive Effect 5"},"childOfId":26} 

 Player 2 22:58:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":26} 

 Player 2 22:58:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:58:18 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 2 22:58:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Wait For Response From Player 1 "},"childOfId":26} 

 Player 2 22:58:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 22:58:18 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 22:58:18 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[333,334]} 

 Player 1 22:58:18 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 22:58:18 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 22:58:18 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 2 22:58:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Resolve Activate Passive Effect 5 "}} 

 Player 2 22:58:18 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":3,"creatorCardId":321,"numberRolled":1,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":298,"lable":"Player 2 Roll Miss"},{"effectCollectedData":{"effectTargets":[334],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":321,"effectCardPlayer":321},"entityId":5,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":176,"effectToDo":{"effectName":"DeactivateItem","cardEffectNum":0,"cardPlayerId":2,"cardId":176,"effctType":0},"isAfterActivation":true,"index":12,"hasDataBeenCollectedYet":true,"stackEffectType":14,"lable":"Activate Hourglass effect DeactivateITem<DeactivateITem>"}]} 

 Player 2 22:58:18 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":176,"particleType":6} 

 Player 2 22:58:20 $DISABLE_PARTICLE_EFFECT:  
{"cardId":176,"particleType":6} 

 Player 2 22:58:23 $USE_ITEM:  
{"cardId":334} 

 Player 2 22:58:23 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":2},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":12,"originStackId":3},"isAfterActivation":true,"index":12} 

 Player 2 22:58:23 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":5,"text":"Activated Hourglass Effect"} 

 Player 2 22:58:23 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[334],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":321,"effectCardPlayer":321},"entityId":5,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":176,"isAfterActivation":true,"index":12,"hasDataBeenCollectedYet":true,"stackEffectType":14,"lable":"Activated Hourglass Effect"}} 

 Player 2 22:58:23 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":3,"creatorCardId":321,"numberRolled":1,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":298,"lable":"Player 2 Roll Miss"}]} 

 Player 2 22:58:23 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 22:58:23 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 2 22:58:26 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":5} 

 Player 2 22:58:26 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 2 22:58:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Remove After Resolve Activate Passive Effect 5  "}} 

 Player 2 22:58:29 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[334],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":321,"effectCardPlayer":321},"entityId":5,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":176,"isAfterActivation":true,"index":12,"hasDataBeenCollectedYet":true,"stackEffectType":14,"lable":"Activated Hourglass Effect"}} 

 Player 2 22:58:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Response Remove After Resolve Activate Passive Effect 5"},"childOfId":31} 

 Player 2 22:58:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":31} 

 Player 2 22:58:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 22:58:29 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 22:58:29 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[333]} 

 Player 1 22:58:29 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 22:58:29 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 2 22:58:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Wait For Response From Player 2 "},"childOfId":31} 

 Player 2 22:58:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:58:29 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 22:58:29 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 2 22:58:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Resolve Player Attack Roll On Monster 3 "}} 

 Player 2 22:58:29 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":321,"numberRolled":1,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":298,"lable":"Player 2 Roll Miss"}} 

 Player 2 22:58:29 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 22:58:30 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 22:58:30 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 2 22:58:32 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":3} 

 Player 2 22:58:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Remove After Resolve Player Attack Roll On Monster 3  "}} 

 Player 2 22:58:32 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":321,"numberRolled":1,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":298,"lable":"Player 2 Roll Miss"}} 

 Player 2 22:58:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Response Remove After Resolve Player Attack Roll On Monster 3"},"childOfId":36} 

 Player 2 22:58:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 2 "},"childOfId":36} 

 Player 2 22:58:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:58:32 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 2 22:58:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Wait For Response From Player 1 "},"childOfId":36} 

 Player 2 22:58:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 22:58:33 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 22:58:33 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[333]} 

 Player 1 22:58:33 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 22:58:33 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 22:58:33 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 2 22:58:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Resolve Monster Combat Damage To A Player 4 "}} 

 Player 2 22:58:33 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":4,"creatorCardId":321,"entityToDoDamageCardId":298,"entityToTakeDamageCardId":321,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":2,"lable":"Spider is going to hurt Azazel"}]} 

 Player 2 22:58:33 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":4,"text":"Spider Is Going To Hurt Azazel For 1 DMG "} 

 Player 2 22:58:33 $UPDATE_STACK_VIS:  
{"stackId":4,"text":"Spider will deal 1 combat damage to Azazel"} 

 Player 2 22:58:33 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":4,"text":"Spider will deal 1 combat damage to Azazel"} 

 Player 2 22:58:33 $PLAYER_GET_HIT:  
{"playerId":2,"damage":1,"damageDealerId":298} 

 Player 2 22:58:33 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":298}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":13,"originStackId":-1},"isAfterActivation":true,"index":13} 

 Player 2 22:58:33 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_TAKEN","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":0,"number":298}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":14,"originStackId":4},"isAfterActivation":true,"index":14} 

 Player 2 22:58:33 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":321,"entityToDoDamageCardId":298,"entityToTakeDamageCardId":321,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":2,"lable":"Spider will deal 1 combat damage to Azazel"}} 

 Player 2 22:58:33 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 22:58:33 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 22:58:33 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 2 22:58:36 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":4} 

 Player 2 22:58:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Remove After Resolve Monster Combat Damage To A Player 4  "}} 

 Player 2 22:58:36 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":321,"entityToDoDamageCardId":298,"entityToTakeDamageCardId":321,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":2,"lable":"Spider will deal 1 combat damage to Azazel"}} 

 Player 2 22:58:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Response Remove After Resolve Monster Combat Damage To A Player 4"},"childOfId":41} 

 Player 2 22:58:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 1 "},"childOfId":41} 

 Player 2 22:58:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 22:58:36 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 22:58:36 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[333]} 

 Player 1 22:58:36 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 22:58:36 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 2 22:58:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Wait For Response From Player 2 "},"childOfId":41} 

 Player 2 22:58:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:58:36 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 22:58:36 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 2 22:58:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Stack Was Emptied "}} 

 Player 2 22:58:36 $CLEAR_SE_VIS:  

 Player 2 00:09:10 $MOVE_CARD:  
{"moveIndex":10,"cardId":117,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 

 Player 1 00:09:11 $MOVE_CARD_END:  
{"moveIndex":10,"cardId":117,"flipIfFlipped":true,"playerId":2} 

 Player 2 00:09:11 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[4,71,11,65,26,139,93,33,61,47,91,135,119,48,123,84,102,6,99,104,124,114,20,137,115,53,64,46,49,29,12,59,38,40,37,127,56,83,51,54,92,14,118,9,76,110,81,94,112,82,86,70,87,122,134,129,19,73,121,75,105,79,5,111,89,66,60,90,36,72,120,78,96,27,69,130,101,42,22,136,74,116,138,98,128,35,15,45,13,28,77,8,23,34,50,132,97,16,17,109,107,85,80,106,39,18,133,10,62,67,44,103,31,41,88,52,24,126,63,108,32,58,57,25,113,131,100,30]} 

 Player 2 00:09:11 $FLIP_CARD:  
{"cardId":117} 

 Player 2 00:09:11 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":117} 

 Player 2 00:09:11 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":117}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":15,"originStackId":-1},"isAfterActivation":true,"index":15} 

 Player 2 00:09:15 $NEXT_STACK_ID:  

 Player 2 00:09:15 $ADD_TO_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":321,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":117,"lootPlayerId":2,"lable":"Player 2 Is Going To Play Pink Eye ","hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 00:09:15 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":321,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":117,"lootPlayerId":2,"lable":"Player 2 Is Going To Play Pink Eye ","hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 00:09:15 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 00:09:15 $SHOW_STACK_EFFECT:  
{"effectId":6} 

 Player 2 00:09:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Add Play Loot Card 6 "}} 

 Player 2 00:09:18 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":117} 

 Player 2 00:09:18 $MOVE_CARD:  
{"moveIndex":11,"cardId":117,"placeID":339,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 00:09:18 $MOVE_CARD_END:  
{"moveIndex":11,"cardId":117,"flipIfFlipped":true,"playerId":2} 

 Player 2 00:09:18 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":117} 

 Player 2 00:09:18 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":6,"text":"Player 2 Is Going To Play Pink Eye: AddTrinket"} 

 Player 2 00:09:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:09:18 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":321,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":117,"lootPlayerId":2,"effectToDo":{"effectName":"AddTrinket","cardEffectNum":0,"cardPlayerId":2,"cardId":117,"effctType":1},"lable":"Player 2 Is Going To Play Pink Eye: AddTrinket","hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 00:09:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Response Adding Play Loot Card 6"},"childOfId":46} 

 Player 2 00:09:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Wait For Response From Player 2 "},"childOfId":46} 

 Player 2 00:09:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:09:18 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 2 00:09:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Wait For Response From Player 1 "},"childOfId":46} 

 Player 2 00:09:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:09:18 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:09:18 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[333]} 

 Player 1 00:09:18 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:09:19 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 2 00:09:19 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 2 00:09:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Resolve Play Loot Card 6 "}} 

 Player 2 00:09:19 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":6,"creatorCardId":321,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":117,"lootPlayerId":2,"effectToDo":{"effectName":"AddTrinket","cardEffectNum":0,"cardPlayerId":2,"cardId":117,"effctType":1},"lable":"Player 2 Is Going To Play Pink Eye: AddTrinket","hasDataBeenCollectedYet":true,"stackEffectType":8}]} 

 Player 2 00:09:19 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":6,"text":"Player 2 Plays Pink Eye: AddTrinket"} 

 Player 2 00:09:19 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":117,"particleType":6} 

 Player 2 00:09:21 $DISABLE_PARTICLE_EFFECT:  
{"cardId":117,"particleType":6} 

 Player 2 00:09:21 $CARD_ADD_TRINKET:  
{"cardId":117,"playerId":2,"addMuiliEffect":false} 

 Player 2 00:09:21 $REMOVE_FROM_PILE:  
{"cardId":117} 

 Player 2 00:09:21 $REGISTER_PASSIVE_ITEM:  
{"cardId":117} 

 Player 2 00:09:21 $MOVE_CARD:  
{"moveIndex":12,"cardId":117,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 

 Player 1 00:09:21 $MOVE_CARD_END:  
{"moveIndex":12,"cardId":117,"flipIfFlipped":true,"playerId":2} 

 Player 2 00:09:21 $ADD_AN_ITEM:  
{"playerId":2,"cardId":117,"isReward":true} 

 Player 2 00:09:21 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":117}],"result":true,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":16,"originStackId":-1},"isAfterActivation":true,"index":16} 

 Player 2 00:09:21 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":321,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":117,"lootPlayerId":2,"lable":"Player 2 Plays Pink Eye: AddTrinket","hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 00:09:21 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 00:09:21 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 00:09:21 $SHOW_STACK_EFFECT:  
{"effectId":6} 

 Player 2 00:09:24 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":6} 

 Player 2 00:09:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Remove After Resolve Play Loot Card 6  "}} 

 Player 2 00:09:24 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":321,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":117,"lootPlayerId":2,"lable":"Player 2 Plays Pink Eye: AddTrinket","hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 00:09:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Response Remove After Resolve Play Loot Card 6"},"childOfId":51} 

 Player 2 00:09:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Wait For Response From Player 1 "},"childOfId":51} 

 Player 2 00:09:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:09:24 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:09:24 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[333]} 

 Player 1 00:09:24 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:09:24 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 2 00:09:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Wait For Response From Player 2 "},"childOfId":51} 

 Player 2 00:09:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:09:24 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 2 00:09:24 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 2 00:09:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Stack Was Emptied "}} 

 Player 2 00:09:25 $CLEAR_SE_VIS:  

 Player 2 00:09:31 $NEXT_STACK_ID:  

 Player 2 00:09:31 $ADD_TO_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":321,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":298,"lable":"Player 2 is rolling against Spider<Monster>"}} 

 Player 2 00:09:31 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":321,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":298,"lable":"Player 2 is rolling against Spider<Monster>"}} 

 Player 2 00:09:31 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 00:09:31 $SHOW_STACK_EFFECT:  
{"effectId":7} 

 Player 2 00:09:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":56,"_text":"Add Player Attack Roll On Monster 7 "}} 

 Player 2 00:09:34 $ROLL_DICE:  
{"playerId":2} 

 Player 2 00:09:36 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":4} 

 Player 2 00:09:36 $UPDATE_STACK_VIS:  
{"stackId":7,"text":"player rolled 4 vs Spider<Monster>"} 

 Player 2 00:09:36 $SHOW_DICE_ROLL:  
{"stackId":7} 

 Player 2 00:09:39 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":7,"text":"Player 2 rolled 4 vs Spider<Monster>"} 

 Player 2 00:09:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:09:39 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":321,"numberRolled":4,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":298,"lable":"Player 2 rolled 4 vs Spider<Monster>"}} 

 Player 2 00:09:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":57,"_text":"Response Adding Player Attack Roll On Monster 7"},"childOfId":56} 

 Player 2 00:09:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":58,"_text":"Wait For Response From Player 2 "},"childOfId":56} 

 Player 2 00:09:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:09:39 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 2 00:09:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":59,"_text":"Wait For Response From Player 1 "},"childOfId":56} 

 Player 2 00:09:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:09:39 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:09:39 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[333]} 

 Player 1 00:09:39 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:09:39 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 2 00:09:39 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 2 00:09:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":60,"_text":"Resolve Player Attack Roll On Monster 7 "}} 

 Player 2 00:09:39 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":7,"creatorCardId":321,"numberRolled":4,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":298,"lable":"Player 2 rolled 4 vs Spider<Monster>"}]} 

 Player 2 00:09:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":61,"_text":"Added 0 to original roll"}} 

 Player 2 00:09:39 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":7,"text":"Player 2 Rolled 1 Against Spider<Monster> 4"} 

 Player 2 00:09:40 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":7,"text":"Player 2 Roll Miss"} 

 Player 2 00:09:40 $NEXT_STACK_ID:  

 Player 2 00:09:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:09:40 $CLEAR_SE_VIS:  

 Player 2 00:09:40 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":321,"entityToDoDamageCardId":298,"entityToTakeDamageCardId":321,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1,"lable":"Spider is going to hurt Azazel"}} 

 Player 2 00:09:40 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":321,"numberRolled":4,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":298,"lable":"Player 2 Roll Miss"}} 

 Player 2 00:09:40 $REPLACE_STACK:  
{"currentStack":[{"entityId":8,"creatorCardId":321,"entityToDoDamageCardId":298,"entityToTakeDamageCardId":321,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1,"lable":"Spider is going to hurt Azazel"},{"entityId":7,"creatorCardId":321,"numberRolled":4,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":298,"lable":"Player 2 Roll Miss"}]} 

 Player 2 00:09:40 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 00:09:40 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":1},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":17,"originStackId":7},"isAfterActivation":true,"index":17} 

 Player 2 00:09:40 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":321,"numberRolled":4,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":298,"lable":"Player 2 Roll Miss"}} 

 Player 2 00:09:40 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 00:09:40 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 00:09:40 $SHOW_STACK_EFFECT:  
{"effectId":7} 

 Player 2 00:09:42 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":7} 

 Player 2 00:09:42 $SHOW_STACK_EFFECT:  
{"effectId":8} 

 Player 2 00:09:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":62,"_text":"Remove After Resolve Player Attack Roll On Monster 7  "}} 

 Player 2 00:09:45 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":321,"numberRolled":4,"rollingPlayerCardId":321,"stackEffectType":2,"attackedMonsterCardId":298,"lable":"Player 2 Roll Miss"}} 

 Player 2 00:09:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":63,"_text":"Response Remove After Resolve Player Attack Roll On Monster 7"},"childOfId":62} 

 Player 2 00:09:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":64,"_text":"Wait For Response From Player 2 "},"childOfId":62} 

 Player 2 00:09:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:09:46 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 2 00:09:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":65,"_text":"Wait For Response From Player 1 "},"childOfId":62} 

 Player 2 00:09:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:09:46 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:09:46 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[333]} 

 Player 1 00:09:46 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:09:46 $ACTION_MASSAGE_REMOVE:  
{"id":65} 

 Player 2 00:09:46 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 2 00:09:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":66,"_text":"Resolve Monster Combat Damage To A Player 8 "}} 

 Player 2 00:09:46 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":8,"creatorCardId":321,"entityToDoDamageCardId":298,"entityToTakeDamageCardId":321,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1,"lable":"Spider is going to hurt Azazel"}]} 

 Player 2 00:09:46 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":8,"text":"Spider Is Going To Hurt Azazel For 1 DMG "} 

 Player 2 00:09:46 $UPDATE_STACK_VIS:  
{"stackId":8,"text":"Spider will deal 1 combat damage to Azazel"} 

 Player 2 00:09:46 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":8,"text":"Spider will deal 1 combat damage to Azazel"} 

 Player 2 00:09:46 $PLAYER_GET_HIT:  
{"playerId":2,"damage":1,"damageDealerId":298} 

 Player 2 00:09:46 $NEXT_STACK_ID:  

 Player 2 00:09:46 $CLEAR_SE_VIS:  

 Player 2 00:09:46 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":321,"entityToDoDamageCardId":298,"entityToTakeDamageCardId":321,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1,"lable":"Spider will deal 1 combat damage to Azazel"}} 

 Player 2 00:09:46 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":321,"playerToDieCardId":321,"stackEffectType":15,"killerId":298,"lable":"Player 2 Is About To Die"}} 

 Player 2 00:09:46 $REPLACE_STACK:  
{"currentStack":[{"entityId":8,"creatorCardId":321,"entityToDoDamageCardId":298,"entityToTakeDamageCardId":321,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1,"lable":"Spider will deal 1 combat damage to Azazel"},{"entityId":9,"creatorCardId":321,"playerToDieCardId":321,"stackEffectType":15,"killerId":298,"lable":"Player 2 Is About To Die"}]} 

 Player 2 00:09:46 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":321,"playerToDieCardId":321,"stackEffectType":15,"killerId":298,"lable":"Player 2 Is About To Die"}} 

 Player 2 00:09:46 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 00:09:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:09:46 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":298}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":18,"originStackId":-1},"isAfterActivation":true,"index":18} 

 Player 2 00:09:46 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_TAKEN","args":[{"type":2,"number":1},{"type":2,"number":1},{"type":0,"number":298}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":19,"originStackId":8},"isAfterActivation":true,"index":19} 

 Player 2 00:09:46 $NEXT_STACK_ID:  

 Player 2 00:09:46 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":10,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":117,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":117,"effctType":0},"isAfterActivation":true,"index":19,"hasDataBeenCollectedYet":false,"stackEffectType":14,"lable":"Activate Pink Eye Effect Deal Damage<Deal Damage>"}} 

 Player 2 00:09:47 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":10,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":117,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":117,"effctType":0},"isAfterActivation":true,"index":19,"hasDataBeenCollectedYet":false,"stackEffectType":14,"lable":"Activate Pink Eye Effect Deal Damage<Deal Damage>"}} 

 Player 2 00:09:47 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 00:09:47 $SHOW_STACK_EFFECT:  
{"effectId":10} 

 Player 2 00:09:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":67,"_text":"Add Activate Passive Effect 10 "}} 

 Player 2 00:09:49 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":10,"text":"Activate Pink Eye effect Deal Damage<Deal Damage>"} 

 Player 2 00:09:49 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":10,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":117,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":117,"effctType":0},"isAfterActivation":true,"index":19,"hasDataBeenCollectedYet":false,"stackEffectType":14,"lable":"Activate Pink Eye effect Deal Damage<Deal Damage>"}} 

 Player 2 00:09:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":68,"_text":"Response Adding Activate Passive Effect 10"},"childOfId":67} 

 Player 2 00:09:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":69,"_text":"Wait For Response From Player 2 "},"childOfId":67} 

 Player 2 00:09:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:09:49 $ACTION_MASSAGE_REMOVE:  
{"id":69} 

 Player 2 00:09:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":70,"_text":"Wait For Response From Player 1 "},"childOfId":67} 

 Player 2 00:09:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:09:49 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:09:49 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[333]} 

 Player 1 00:09:49 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:09:49 $ACTION_MASSAGE_REMOVE:  
{"id":70} 

 Player 2 00:09:49 $ACTION_MASSAGE_REMOVE:  
{"id":68} 

 Player 2 00:09:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":71,"_text":"Resolve Activate Passive Effect 10 "}} 

 Player 2 00:09:49 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":8,"creatorCardId":321,"entityToDoDamageCardId":298,"entityToTakeDamageCardId":321,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1,"lable":"Spider will deal 1 combat damage to Azazel"},{"effectCollectedData":null,"entityId":10,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":117,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":117,"effctType":0},"isAfterActivation":true,"index":19,"hasDataBeenCollectedYet":false,"stackEffectType":14,"lable":"Activate Pink Eye effect Deal Damage<Deal Damage>"}]} 

 Player 2 00:09:49 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":117,"particleType":6} 

 Player 2 00:09:51 $DISABLE_PARTICLE_EFFECT:  
{"cardId":117,"particleType":6} 

 Player 2 00:09:51 $LOG_ERROR:  
{"message":"\"Cannot read property 'getComponent' of undefined\"","stack":"\"TypeError: Cannot read property 'getComponent' of undefined\\n    at Monster.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:230:32), <anonymous>:165:109)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\\n    at fulfilled (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113267:28)\""} 
//////Error From Player 2////
  

 Player 2 00:09:51 $LOG_ERROR:  
//////Error From Player 2////

 "\"Cannot read property 'getComponent' of undefined\""

 + "\"TypeError: Cannot read property 'getComponent' of undefined\
    at Monster.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:230:32), <anonymous>:165:109)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\
    at fulfilled (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113267:28)\""

////// 
//////Error From Player 2////

 "\"Cannot read property 'getComponent' of undefined\""

 + "\"TypeError: Cannot read property 'getComponent' of undefined\
    at Monster.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:230:32), <anonymous>:165:109)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\
    at fulfilled (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113267:28)\""

////// 

 Player 2 00:09:51 $SHOW_ANNOUNCEMENT:  
{"text":"\"Cannot read property 'getComponent' of undefined\""} 

 Player 2 00:09:51 $LOG_ERROR:  
"effect DealDamage failed to execute" 
//////Error From Player 2////
  

 Player 2 00:09:51 $LOG_ERROR:  
//////Error From Player 2////
 [object Object]
////// 

 Player 2 00:09:51 $SHOW_ANNOUNCEMENT:  
{"text":"effect DealDamage failed to execute"} 

 Player 2 00:09:52 $LOG_ERROR:  
"error while resolving stack effect Activate Passive Effect 10" 
//////Error From Player 2////
  

 Player 2 00:09:52 $LOG_ERROR:  
//////Error From Player 2////
 [object Object]
////// 

 Player 2 00:09:52 $SHOW_ANNOUNCEMENT:  
{"text":"error while resolving stack effect Activate Passive Effect 10"} 

 Player 2 00:09:52 $LOG_ERROR:  
{"message":"\"Cannot read property 'methodArgs' of null\"","stack":"\"TypeError: Cannot read property 'methodArgs' of null\\n    at ActivatePassiveEffect.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:330:76)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\\n    at fulfilled (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113267:28)\""} 
//////Error From Player 2////
  

 Player 2 00:09:52 $LOG_ERROR:  
//////Error From Player 2////

 "\"Cannot read property 'methodArgs' of null\""

 + "\"TypeError: Cannot read property 'methodArgs' of null\
    at ActivatePassiveEffect.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:330:76)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\
    at fulfilled (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113267:28)\""

////// 
//////Error From Player 2////

 "\"Cannot read property 'methodArgs' of null\""

 + "\"TypeError: Cannot read property 'methodArgs' of null\
    at ActivatePassiveEffect.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:330:76)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\
    at fulfilled (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113267:28)\""

////// 

 Player 2 00:09:52 $SHOW_ANNOUNCEMENT:  
{"text":"\"Cannot read property 'methodArgs' of null\""} 

 Player 2 00:09:52 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":8,"creatorCardId":321,"entityToDoDamageCardId":298,"entityToTakeDamageCardId":321,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1,"lable":"Spider will deal 1 combat damage to Azazel"}]} 

 Player 2 00:09:52 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 00:09:52 $SHOW_STACK_EFFECT:  
{"effectId":10} 

 Player 2 00:09:54 $HIDE_ANNOUNCEMENT:  

 Player 2 00:09:54 $HIDE_ANNOUNCEMENT:  

 Player 2 00:09:54 $HIDE_ANNOUNCEMENT:  

 Player 2 00:09:54 $HIDE_ANNOUNCEMENT:  

 Player 2 00:09:54 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":10} 

 Player 2 00:09:54 $SHOW_STACK_EFFECT:  
{"effectId":9} 

 Player 2 00:09:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":72,"_text":"Remove After Resolve Activate Passive Effect 10  "}} 

 Player 2 00:09:57 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":10,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":117,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":117,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_TAKEN","args":[{"type":2,"number":1},{"type":2,"number":1},{"type":0,"number":298}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":19,"originStackId":8},"isAfterActivation":true,"index":19,"hasDataBeenCollectedYet":false,"stackEffectType":14,"lable":"Activate Pink Eye effect Deal Damage<Deal Damage>"}} 

 Player 2 00:09:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":73,"_text":"Response Remove After Resolve Activate Passive Effect 10"},"childOfId":72} 

 Player 2 00:09:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":74,"_text":"Wait For Response From Player 1 "},"childOfId":72} 

 Player 2 00:09:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:09:58 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:09:58 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[333]} 

 Player 1 00:09:58 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:09:58 $ACTION_MASSAGE_REMOVE:  
{"id":74} 

 Player 2 00:09:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":75,"_text":"Wait For Response From Player 2 "},"childOfId":72} 

 Player 2 00:09:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:09:58 $ACTION_MASSAGE_REMOVE:  
{"id":75} 

 Player 2 00:09:58 $ACTION_MASSAGE_REMOVE:  
{"id":73} 

 Player 2 00:09:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":76,"_text":"Resolve Player Death 9 "}} 

 Player 2 00:09:58 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":8,"creatorCardId":321,"entityToDoDamageCardId":298,"entityToTakeDamageCardId":321,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1,"lable":"Spider will deal 1 combat damage to Azazel"},{"entityId":9,"creatorCardId":321,"playerToDieCardId":321,"stackEffectType":15,"killerId":298,"lable":"Player 2 Is About To Die"}]} 

 Player 2 00:09:58 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":9,"text":"Player 2 Has Died"} 

 Player 2 00:09:58 $DISABLE_PARTICLE_EFFECT:  
{"cardId":298,"particleType":5} 

 Player 2 00:09:58 $CANCEL_ATTACK:  

 Player 2 00:09:58 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 00:09:58 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":8} 

 Player 2 00:09:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":77,"_text":"Fizzle Monster Combat Damage To A Player 8"}} 

 Player 2 00:09:58 $SHOW_ANNOUNCEMENT:  
{"text":"Monster Combat Damage To A Player 8 Was Fizzled"} 

 Player 2 00:09:58 $FIZZLE_STACK_EFFECT:  
{"entityId":8} 

 Player 2 00:09:58 $NEXT_STACK_ID:  

 Player 2 00:09:58 $CLEAR_SE_VIS:  

 Player 2 00:09:58 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":321,"playerToDieCardId":321,"stackEffectType":15,"killerId":298,"lable":"Player 2 Has Died"}} 

 Player 2 00:09:59 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":321,"playerToPayCardId":321,"stackEffectType":16,"lable":"Player 2 Is About To Pay Death Penalties"}} 

 Player 2 00:09:59 $REPLACE_STACK:  
{"currentStack":[{"entityId":9,"creatorCardId":321,"playerToDieCardId":321,"stackEffectType":15,"killerId":298,"lable":"Player 2 Has Died"},{"entityId":11,"creatorCardId":321,"playerToPayCardId":321,"stackEffectType":16,"lable":"Player 2 Is About To Pay Death Penalties"}]} 

 Player 2 00:09:59 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":321,"playerToPayCardId":321,"stackEffectType":16,"lable":"Player 2 Is About To Pay Death Penalties"}} 

 Player 2 00:09:59 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 00:09:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:09:59 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":321,"playerToDieCardId":321,"stackEffectType":15,"killerId":298,"lable":"Player 2 Has Died"}} 

 Player 2 00:09:59 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 00:09:59 $SHOW_STACK_EFFECT:  
{"effectId":9} 

 Player 2 00:10:00 $HIDE_ANNOUNCEMENT:  

 Player 2 00:10:01 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":9} 

 Player 2 00:10:01 $SHOW_STACK_EFFECT:  
{"effectId":11} 

 Player 2 00:10:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":78,"_text":"Remove After Resolve Player Death 9  "}} 

 Player 2 00:10:04 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":9,"creatorCardId":321,"playerToDieCardId":321,"stackEffectType":15,"killerId":298,"lable":"Player 2 Has Died"}} 

 Player 2 00:10:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":79,"_text":"Response Remove After Resolve Player Death 9"},"childOfId":78} 

 Player 2 00:10:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":80,"_text":"Wait For Response From Player 2 "},"childOfId":78} 

 Player 2 00:10:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:10:04 $ACTION_MASSAGE_REMOVE:  
{"id":80} 

 Player 2 00:10:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":81,"_text":"Wait For Response From Player 1 "},"childOfId":78} 

 Player 2 00:10:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:10:04 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:10:04 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[333]} 

 Player 1 00:10:04 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:10:04 $ACTION_MASSAGE_REMOVE:  
{"id":81} 

 Player 2 00:10:04 $ACTION_MASSAGE_REMOVE:  
{"id":79} 

 Player 2 00:10:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":82,"_text":"Resolve Player Death Penalties 11 "}} 

 Player 2 00:10:04 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":11,"creatorCardId":321,"playerToPayCardId":321,"stackEffectType":16,"lable":"Player 2 Is About To Pay Death Penalties"}]} 

 Player 2 00:10:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":83,"_text":"Player 2 pays Penalties"}} 

 Player 2 00:10:04 $SET_MONEY:  
{"playerId":2,"numOfCoins":2} 

 Player 2 00:10:04 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-1}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":20,"originStackId":-1},"isAfterActivation":true,"index":20} 

 Player 2 00:10:04 $SHOW_ANNOUNCEMENT:  
{"text":"Player undefined is Choosing Target"} 

 Player 2 00:15:18 $MATCH: 