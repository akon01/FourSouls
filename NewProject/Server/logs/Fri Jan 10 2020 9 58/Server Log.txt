Start Log 

 Player 1 09:58:41 $MATCH:  

 Player 1 09:58:41 $START_GAME:  

 Player 2 09:58:41 $MOVE_TO_TABLE:  

 Player 1 09:58:41 $MOVE_TO_TABLE:  

 Player 1 09:58:49 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 09:58:49 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 2 09:58:49 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":263,"itemCardId":266} 

 Player 2 09:58:49 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":276}],"result":true,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 09:58:49 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":275,"itemCardId":276} 

 Player 2 09:58:49 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[89,123,15,105,87,16,47,114,20,33,37,90,94,104,101,142,75,108,39,112,76,93,65,60,117,79,26,62,140,45,133,42,130,137,38,28,122,51,10,120,97,54,131,84,74,70,57,13,63,86,35,67,17,11,55,111,107,85,58,81,109,56,12,121,73,59,116,25,9,139,135,30,61,46,21,23,31,69,134,52,119,7,141,128,118,143,113,80,24,136,100,124,115,92,32,53,106,129,44,125,91,82,98,110,77,14,18,132,103,66,64,29,50,126,19,48,49,88,78,41,95,127,27,22,83,102,40,96,34,8,138,36,72,99,68,71,43]} 

 Player 2 09:58:49 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[251,216,248,220,223,243,233,236,240,230,255,212,254,228,258,210,252,222,229,241,214,253,237,207,205,231,239,227,244,250,232,217,218,249,211,226,247,213,257,256,215,234,219,224,245,209,242,235,225,238,206,221,208,246]} 

 Player 2 09:58:49 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[184,190,147,155,156,170,188,154,172,201,166,181,153,202,161,169,196,187,171,198,157,151,178,185,148,150,175,173,186,149,152,168,174,163,193,182,158,162,192,199,194,191,183,200,146,189,179,167,160,180,195,177,164,176,197,159,165]} 

 Player 2 09:58:49 $DRAW_CARD:  
{"deckType":5} 

 Player 2 09:58:49 $FLIP_CARD:  
{"cardId":165} 

 Player 2 09:58:49 $ADD_STORE_CARD:  
{"cardId":165} 

 Player 2 09:58:49 $DRAW_CARD:  
{"deckType":5} 

 Player 2 09:58:49 $FLIP_CARD:  
{"cardId":159} 

 Player 2 09:58:49 $ADD_STORE_CARD:  
{"cardId":159} 

 Player 2 09:58:49 $DRAW_CARD:  
{"deckType":2} 

 Player 2 09:58:49 $FLIP_CARD:  
{"cardId":246} 

 Player 2 09:58:49 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":246} 

 Player 2 09:58:50 $NEW_MONSTER_ON_PLACE:  
{"cardId":246,"monsterPlaceId":1} 

 Player 2 09:58:50 $DRAW_CARD:  
{"deckType":2} 

 Player 2 09:58:50 $FLIP_CARD:  
{"cardId":208} 

 Player 2 09:58:50 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":208} 

 Player 2 09:58:50 $NEW_MONSTER_ON_PLACE:  
{"cardId":208,"monsterPlaceId":2} 

 Player 2 09:58:50 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 09:58:50 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":263,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 09:58:50 $DRAW_CARD:  
{"deckType":1} 

 Player 2 09:58:50 $MOVE_CARD:  
{"moveIndex":1,"cardId":43,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 09:58:50 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":266}],"result":true,"preventMethod":false,"methodScopeId":263,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 09:58:50 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":43,"flipIfFlipped":false,"playerId":2} 

 Player 2 09:58:50 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":43} 

 Player 2 09:58:50 $FLIP_CARD:  
{"cardId":43} 

 Player 2 09:58:50 $FLIP_CARD:  
{"cardId":43} 

 Player 2 09:58:50 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":43} 

 Player 2 09:58:50 $DRAW_CARD:  
{"deckType":1} 

 Player 2 09:58:50 $MOVE_CARD:  
{"moveIndex":2,"cardId":71,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 09:58:51 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":71,"flipIfFlipped":false,"playerId":2} 

 Player 2 09:58:51 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":71} 

 Player 2 09:58:51 $FLIP_CARD:  
{"cardId":71} 

 Player 2 09:58:51 $FLIP_CARD:  
{"cardId":71} 

 Player 2 09:58:51 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":71} 

 Player 2 09:58:51 $DRAW_CARD:  
{"deckType":1} 

 Player 2 09:58:51 $MOVE_CARD:  
{"moveIndex":3,"cardId":68,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 09:58:51 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":68,"flipIfFlipped":false,"playerId":2} 

 Player 2 09:58:51 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":68} 

 Player 2 09:58:51 $FLIP_CARD:  
{"cardId":68} 

 Player 2 09:58:51 $FLIP_CARD:  
{"cardId":68} 

 Player 2 09:58:51 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":68} 

 Player 2 09:58:51 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 09:58:51 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 09:58:51 $DRAW_CARD:  
{"deckType":1} 

 Player 2 09:58:51 $MOVE_CARD:  
{"moveIndex":4,"cardId":99,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 09:58:52 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":99,"flipIfFlipped":false,"playerId":2} 

 Player 2 09:58:52 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":99} 

 Player 2 09:58:52 $FLIP_CARD:  
{"cardId":99} 

 Player 2 09:58:52 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":99} 

 Player 2 09:58:52 $DRAW_CARD:  
{"deckType":1} 

 Player 2 09:58:52 $MOVE_CARD:  
{"moveIndex":5,"cardId":72,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 09:58:52 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":72,"flipIfFlipped":false,"playerId":2} 

 Player 2 09:58:52 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":72} 

 Player 2 09:58:52 $FLIP_CARD:  
{"cardId":72} 

 Player 2 09:58:52 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":72} 

 Player 2 09:58:52 $DRAW_CARD:  
{"deckType":1} 

 Player 2 09:58:52 $MOVE_CARD:  
{"moveIndex":6,"cardId":36,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 09:58:53 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":36,"flipIfFlipped":false,"playerId":2} 

 Player 2 09:58:53 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":36} 

 Player 2 09:58:53 $FLIP_CARD:  
{"cardId":36} 

 Player 2 09:58:53 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":36} 

 Player 2 09:58:53 $GAME_HAS_STARTED:  

 Player 2 09:58:53 $SET_TURN:  
{"playerId":1} 

 Player 2 09:58:53 $START_TURN:  
{"playerId":1} 

 Player 2 09:58:53 $UPDATE_ACTIONS:  

 Player 1 09:58:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 09:58:53 $NEXT_STACK_ID:  

 Player 1 09:58:53 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 09:58:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 09:58:53 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":263,"turnPlayerCardId":263,"stackEffectType":13}} 

 Player 1 09:58:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 09:58:53 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":263,"turnPlayerCardId":263,"stackEffectType":13}} 

 Player 1 09:58:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 1 09:58:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 09:58:53 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 09:58:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 09:58:53 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":263,"turnPlayerCardId":263,"stackEffectType":13}} 

 Player 1 09:58:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 1 09:58:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 1 09:58:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 09:58:53 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 09:58:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 1 09:58:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 09:58:53 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 09:58:53 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 09:58:53 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 09:58:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 09:58:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 09:58:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 09:58:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 09:58:54 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 09:58:54 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 09:58:54 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 09:58:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 1 09:58:54 $DRAW_CARD:  
{"deckType":1} 

 Player 1 09:58:54 $MOVE_CARD:  
{"moveIndex":7,"cardId":138,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 09:58:54 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":138,"flipIfFlipped":false,"playerId":1} 

 Player 1 09:58:54 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":138} 

 Player 1 09:58:54 $FLIP_CARD:  
{"cardId":138} 

 Player 1 09:58:54 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":138} 

 Player 1 09:58:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 09:58:54 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":263,"turnPlayerCardId":263,"stackEffectType":13}} 

 Player 1 09:58:54 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 09:58:54 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 09:58:54 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":263,"turnPlayerCardId":263,"stackEffectType":13}} 

 Player 1 09:58:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 1 09:58:54 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 09:58:54 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":263,"turnPlayerCardId":263,"stackEffectType":13}} 

 Player 1 09:58:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 1 09:58:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 1 09:58:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 09:58:54 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 09:58:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 09:58:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 09:58:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 09:58:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 09:58:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 09:58:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 09:58:55 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 09:58:55 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 1 09:58:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 1 09:58:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 09:58:55 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 1 09:58:55 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 1 09:58:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 1 09:58:55 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 09:58:55 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 09:58:55 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 09:58:55 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 09:58:55 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 09:58:55 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 09:58:55 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 09:58:55 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 09:58:56 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 09:58:57 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 09:59:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 09:59:00 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 09:59:00 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 09:59:00 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 09:59:00 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 09:59:00 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 09:59:00 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 09:59:00 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 09:59:00 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 09:59:00 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 1 09:59:00 $END_TURN:  

 Player 1 09:59:00 $SET_TURN:  
{"playerId":2} 

 Player 1 09:59:00 $START_TURN:  
{"playerId":2} 

 Player 2 09:59:00 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 09:59:00 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 09:59:00 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 09:59:00 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 09:59:00 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 09:59:00 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 09:59:00 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 09:59:00 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 09:59:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 09:59:00 $NEXT_STACK_ID:  

 Player 2 09:59:00 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 09:59:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 09:59:00 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":275,"turnPlayerCardId":275,"stackEffectType":13}} 

 Player 2 09:59:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 09:59:01 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":275,"turnPlayerCardId":275,"stackEffectType":13}} 

 Player 2 09:59:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add StartTurnLoot 2 "}} 

 Player 2 09:59:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 09:59:01 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 09:59:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 09:59:01 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":275,"turnPlayerCardId":275,"stackEffectType":13}} 

 Player 2 09:59:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding StartTurnLoot 2"},"childOfId":10} 

 Player 2 09:59:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 2 09:59:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 09:59:01 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 2 09:59:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 2 09:59:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 09:59:01 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 09:59:01 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 09:59:01 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 09:59:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 09:59:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 09:59:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 09:59:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 09:59:01 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 09:59:01 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 2 09:59:01 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 2 09:59:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve StartTurnLoot 2 "}} 

 Player 2 09:59:01 $DRAW_CARD:  
{"deckType":1} 

 Player 2 09:59:01 $MOVE_CARD:  
{"moveIndex":8,"cardId":8,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 09:59:02 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":8,"flipIfFlipped":false,"playerId":2} 

 Player 2 09:59:02 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":8} 

 Player 2 09:59:02 $FLIP_CARD:  
{"cardId":8} 

 Player 2 09:59:02 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":8} 

 Player 2 09:59:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 09:59:02 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":275,"turnPlayerCardId":275,"stackEffectType":13}} 

 Player 2 09:59:02 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 09:59:02 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 09:59:02 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":275,"turnPlayerCardId":275,"stackEffectType":13}} 

 Player 2 09:59:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve StartTurnLoot 2  "}} 

 Player 2 09:59:02 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 09:59:02 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":275,"turnPlayerCardId":275,"stackEffectType":13}} 

 Player 2 09:59:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve StartTurnLoot 2"},"childOfId":15} 

 Player 2 09:59:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 2 09:59:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 09:59:02 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 09:59:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 09:59:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 09:59:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 09:59:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 09:59:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 09:59:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 09:59:02 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 09:59:02 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 09:59:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 2 09:59:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 09:59:02 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 2 09:59:02 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 2 09:59:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 2 09:59:02 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 09:59:02 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 09:59:02 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 09:59:02 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 09:59:03 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 09:59:03 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 09:59:03 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 09:59:03 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 09:59:03 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 09:59:03 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 09:59:03 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 09:59:03 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 09:59:04 $SHOW_DECISION:  
{"startCardId":275,"endCardId":208} 

 Player 2 09:59:04 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 09:59:05 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 09:59:07 $NEXT_STACK_ID:  

 Player 2 09:59:07 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 09:59:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Charger"} 

 Player 2 09:59:07 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":275,"attackingPlayerCardId":275,"idOfCardBeingAttacked":208,"stackEffectType":4}} 

 Player 2 09:59:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Charger"} 

 Player 2 09:59:07 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":275,"attackingPlayerCardId":275,"idOfCardBeingAttacked":208,"stackEffectType":4}} 

 Player 2 09:59:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add DeclareAttack 3 "}} 

 Player 2 09:59:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 09:59:07 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 09:59:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Charger"} 

 Player 2 09:59:07 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":275,"attackingPlayerCardId":275,"idOfCardBeingAttacked":208,"stackEffectType":4}} 

 Player 2 09:59:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding DeclareAttack 3"},"childOfId":20} 

 Player 2 09:59:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 2 09:59:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 09:59:07 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 2 09:59:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 2 09:59:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 09:59:07 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 09:59:07 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 09:59:07 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 09:59:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Charger"} 

 Player 1 09:59:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Charger"} 

 Player 1 09:59:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Charger"} 

 Player 1 09:59:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Charger"} 

 Player 1 09:59:07 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 09:59:07 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 2 09:59:07 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 2 09:59:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve DeclareAttack 3 "}} 

 Player 2 09:59:08 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":208,"particleType":5} 

 Player 2 09:59:08 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":4,"originStackId":3},"isAfterActivation":true,"index":4} 

 Player 2 09:59:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Charger"} 

 Player 2 09:59:08 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":275,"attackingPlayerCardId":275,"idOfCardBeingAttacked":208,"stackEffectType":4}} 

 Player 2 09:59:08 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 09:59:08 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 09:59:08 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":275,"attackingPlayerCardId":275,"idOfCardBeingAttacked":208,"stackEffectType":4}} 

 Player 2 09:59:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Remove After Resolve DeclareAttack 3  "}} 

 Player 2 09:59:08 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 09:59:08 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":275,"attackingPlayerCardId":275,"idOfCardBeingAttacked":208,"stackEffectType":4}} 

 Player 2 09:59:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Response Remove After Resolve DeclareAttack 3"},"childOfId":25} 

 Player 2 09:59:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Wait For Response From Player 1 "},"childOfId":25} 

 Player 2 09:59:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 09:59:08 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 09:59:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Charger"} 

 Player 1 09:59:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Charger"} 

 Player 1 09:59:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Charger"} 

 Player 1 09:59:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Charger"} 

 Player 1 09:59:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Charger"} 

 Player 1 09:59:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Charger"} 

 Player 1 09:59:08 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 09:59:08 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 2 09:59:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":25} 

 Player 2 09:59:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 09:59:08 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 2 09:59:08 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 2 09:59:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Stack Was Emptied "}} 

 Player 2 09:59:08 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 09:59:08 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 09:59:08 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 09:59:08 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 09:59:09 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 09:59:09 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 09:59:09 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 09:59:09 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 09:59:09 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 09:59:09 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 09:59:09 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 09:59:09 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 09:59:09 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 09:59:09 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 09:59:09 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 09:59:09 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 09:59:10 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 09:59:10 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 09:59:23 $NEXT_STACK_ID:  

 Player 2 09:59:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 09:59:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster>"} 

 Player 2 09:59:23 $ADD_TO_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":275,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":208}} 

 Player 2 09:59:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster>"} 

 Player 2 09:59:23 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":275,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":208}} 

 Player 2 09:59:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Add AttackRoll 4 "}} 

 Player 2 09:59:23 $ROLL_DICE:  
{"playerId":2} 

 Player 1 09:59:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 09:59:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 09:59:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster>"} 

 Player 1 09:59:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster>"} 

 Player 2 09:59:24 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":4} 

 Player 2 09:59:24 $UPDATE_STACK_VIS:  
{"stackId":4,"text":"player rolled 4 vs Charger<Monster>"} 

 Player 2 09:59:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Charger<Monster>"} 

 Player 2 09:59:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 09:59:24 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 09:59:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Charger<Monster>"} 

 Player 2 09:59:24 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":208}} 

 Player 2 09:59:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Response Adding AttackRoll 4"},"childOfId":30} 

 Player 2 09:59:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Wait For Response From Player 2 "},"childOfId":30} 

 Player 2 09:59:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 09:59:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster>"} 

 Player 1 09:59:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster>"} 

 Player 2 09:59:31 $SHOW_DECISION:  
{"startCardId":275,"endCardId":276} 

 Player 2 09:59:34 $NEXT_STACK_ID:  

 Player 2 09:59:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Charger<Monster>"} 

 Player 2 09:59:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Charger<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 09:59:34 $ADD_TO_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 09:59:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Charger<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 09:59:34 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 09:59:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Add ActivateItem 5 "}} 

 Player 1 09:59:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster>"} 

 Player 1 09:59:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster>"} 

 Player 1 09:59:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 1 09:59:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 10:01:44 $SHOW_DECISION:  
{"startCardId":276,"endCardId":275} 

 Player 2 10:01:47 $USE_ITEM:  
{"cardId":276} 

 Player 2 10:01:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 10:01:47 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 2 10:01:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Charger<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 10:01:47 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 10:01:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Response Adding ActivateItem 5"},"childOfId":33} 

 Player 2 10:01:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Wait For Response From Player 2 "},"childOfId":33} 

 Player 2 10:01:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 10:01:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 1 10:01:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 10:01:50 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 10:01:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Wait For Response From Player 1 "},"childOfId":33} 

 Player 2 10:01:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 10:01:50 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 10:01:53 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":true} 

 Player 1 10:01:53 $SHOW_DECISION:  
{"startCardId":263,"endCardId":263} 

 Player 2 10:01:53 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 2 10:01:53 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 10:01:53 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 2 10:01:53 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 1 10:01:56 $NEXT_STACK_ID:  

 Player 1 10:01:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 1 10:01:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 activated Cain"} 

 Player 1 10:01:56 $ADD_TO_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":263,"hasLockingStackEffect":false,"itemToPlayCardId":263,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 10:01:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 activated Cain"} 

 Player 1 10:01:56 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":263,"hasLockingStackEffect":false,"itemToPlayCardId":263,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 10:01:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Add ActivateItem 6 "}} 

 Player 2 10:01:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Charger<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 10:01:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Charger<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 10:01:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Charger<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 activated Cain"} 

 Player 2 10:01:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Charger<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 activated Cain"} 

 Player 1 10:11:49 $SHOW_DECISION:  
{"startCardId":263,"endCardId":68} 

 Player 1 10:11:52 $USE_ITEM:  
{"cardId":263} 

 Player 1 10:11:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 10:11:52 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 1 10:11:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 activated Cain"} 

 Player 1 10:11:52 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":263,"hasLockingStackEffect":false,"itemToPlayCardId":263,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 10:11:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Response Adding ActivateItem 6"},"childOfId":37} 

 Player 1 10:11:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Wait For Response From Player 2 "},"childOfId":37} 

 Player 1 10:11:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 10:11:52 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 10:11:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Charger<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 activated Cain"} 

 Player 2 10:11:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Charger<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 activated Cain"} 

 Player 1 10:11:58 $RESPOND_TO:  
{"playerId":-1,"stackEffectResponse":false} 

 Player 2 10:12:02 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 2 10:12:02 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 2 10:12:02 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 10:12:02 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 1 10:12:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Wait For Response From Player 1 "},"childOfId":37} 

 Player 1 10:12:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 10:12:02 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 1 10:12:02 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 1 10:12:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Resolve ActivateItem 6 "}} 

 Player 1 10:12:02 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":263,"particleType":6} 

 Player 1 10:12:04 $DISABLE_PARTICLE_EFFECT:  
{"cardId":263,"particleType":6} 

 Player 1 10:12:04 $NEXT_STACK_ID:  

 Player 1 10:12:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 activated Cain"} 

 Player 1 10:12:04 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":68} 

 Player 1 10:12:04 $MOVE_CARD:  
{"moveIndex":9,"cardId":68,"placeID":277,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 10:12:05 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":68,"flipIfFlipped":true,"playerId":1} 

 Player 1 10:12:05 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":68} 

 Player 1 10:12:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 4 Cents(8): addMoney \n4:Player 1 activated Cain"} 

 Player 1 10:12:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 10:12:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 4 Cents(8): addMoney \n4:Player 1 activated Cain"} 

 Player 1 10:12:05 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":263,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":68,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":68,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 10:12:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 4 Cents(8): addMoney \n4:Player 1 activated Cain"} 

 Player 1 10:12:05 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":275,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":208}} 

 Player 1 10:12:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 4 Cents(8): addMoney \n4:Player 1 activated Cain"} 

 Player 1 10:12:05 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":263,"hasLockingStackEffect":false,"itemToPlayCardId":263,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 10:12:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 4 Cents(8): addMoney \n4:Player 1 activated Cain"} 

 Player 1 10:12:05 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":208}} 

 Player 1 10:12:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 4 Cents(8): addMoney \n4:Player 1 activated Cain"} 

 Player 1 10:12:05 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 10:12:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 4 Cents(8): addMoney \n4:Player 1 activated Cain"} 

 Player 1 10:12:05 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":263,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":68,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":68,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 10:12:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 4 Cents(8): addMoney \n4:Player 1 activated Cain"} 

 Player 1 10:12:05 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":263,"hasLockingStackEffect":false,"itemToPlayCardId":263,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 10:12:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 4 Cents(8): addMoney \n4:Player 1 activated Cain"} 

 Player 1 10:12:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 4 Cents(8): addMoney \n4:Player 1 activated Cain"} 

 Player 1 10:12:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 4 Cents(8): addMoney \n4:Player 1 activated Cain"} 

 Player 1 10:12:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 4 Cents(8): addMoney \n4:Player 1 activated Cain"} 

 Player 1 10:12:05 $REPLACE_STACK:  
{"currentStack":[{"entityId":4,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":208},{"entityId":5,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1},{"entityId":7,"creatorCardId":263,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":68,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":68,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":6,"creatorCardId":263,"hasLockingStackEffect":false,"itemToPlayCardId":263,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 

 Player 1 10:12:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 4 Cents(8): addMoney \n4:Player 1 activated Cain"} 

 Player 1 10:12:05 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":263,"hasLockingStackEffect":false,"itemToPlayCardId":263,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 10:12:05 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 1 10:12:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 4 Cents(8): addMoney"} 

 Player 1 10:12:05 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":263,"hasLockingStackEffect":false,"itemToPlayCardId":263,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 10:12:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Remove After Resolve ActivateItem 6  "}} 

 Player 1 10:12:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 4 Cents(8): addMoney"} 

 Player 1 10:12:06 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":263,"hasLockingStackEffect":false,"itemToPlayCardId":263,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 10:12:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Response Remove After Resolve ActivateItem 6"},"childOfId":42} 

 Player 1 10:12:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Wait For Response From Player 2 "},"childOfId":42} 

 Player 1 10:12:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 10:12:06 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 10:12:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Charger<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 activated Cain"} 

 Player 2 10:12:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Charger<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 activated Cain"} 

 Player 2 10:12:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Charger<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 4 Cents(8) "} 

 Player 2 10:12:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Charger<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 4 Cents(8) "} 

 Player 2 10:12:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Charger<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 4 Cents(8) "} 

 Player 2 10:12:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Charger<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 4 Cents(8) "} 

 Player 2 10:12:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Charger<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 4 Cents(8) "} 

 Player 2 10:12:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Charger<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 4 Cents(8) "} 

 Player 2 10:12:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Charger<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 4 Cents(8) "} 

 Player 2 10:12:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Charger<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 4 Cents(8) "} 

 Player 2 10:12:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Charger<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 4 Cents(8) "} 

 Player 2 10:12:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Charger<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 4 Cents(8) "} 

 Player 2 10:12:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Charger<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 4 Cents(8) "} 

 Player 2 10:12:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Charger<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 4 Cents(8) "} 

 Player 2 10:12:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Charger<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 4 Cents(8) "} 

 Player 2 10:12:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Charger<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 4 Cents(8) "} 

 Player 2 10:12:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Charger<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 4 Cents(8) "} 

 Player 2 10:12:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Charger<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 4 Cents(8) "} 

 Player 2 10:12:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Charger<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 4 Cents(8) "} 

 Player 2 10:12:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Charger<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 4 Cents(8) "} 

 Player 2 10:12:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Charger<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 4 Cents(8) "} 

 Player 2 10:12:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Charger<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 4 Cents(8) "} 

 Player 2 10:12:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 4 Cents(8)  \n4:Player 1 activated Cain"} 

 Player 2 10:12:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 4 Cents(8)  \n4:Player 1 activated Cain"} 

 Player 2 10:12:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 4 Cents(8)  \n4:Player 1 activated Cain"} 

 Player 2 10:12:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 4 Cents(8)  \n4:Player 1 activated Cain"} 

 Player 2 10:12:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 4 Cents(8)  \n4:Player 1 activated Cain"} 

 Player 2 10:12:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 4 Cents(8)  \n4:Player 1 activated Cain"} 

 Player 2 10:12:06 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 10:12:06 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 1 10:12:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Wait For Response From Player 1 "},"childOfId":42} 

 Player 1 10:12:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 10:12:07 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 1 10:12:07 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 1 10:12:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Resolve PlayLootCardStackEffect 7 "}} 

 Player 1 10:12:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 4 Cents(8): addMoney"} 

 Player 1 10:12:07 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":68,"particleType":6} 

 Player 1 10:12:08 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 1 10:12:08 $DISABLE_PARTICLE_EFFECT:  
{"cardId":68,"particleType":6} 

 Player 1 10:12:08 $SET_MONEY:  
{"playerId":1,"numOfCoins":7} 

 Player 1 10:12:09 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":263,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 1 10:12:09 $REMOVE_FROM_PILE:  
{"cardId":68} 

 Player 1 10:12:09 $MOVE_CARD:  
{"moveIndex":10,"cardId":68,"placeID":278,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 10:12:09 $MOVE_CARD_END:  
{"moveIndex":10,"cardId":68,"flipIfFlipped":true,"playerId":1} 

 Player 1 10:12:09 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":68} 

 Player 1 10:12:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 4 Cents(8): addMoney"} 

 Player 1 10:12:09 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":263,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":68,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 10:12:09 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 1 10:12:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 1 10:12:09 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":263,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":68,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 10:12:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Remove After Resolve PlayLootCardStackEffect 7  "}} 

 Player 1 10:12:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 1 10:12:09 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":263,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":68,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 10:12:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Response Remove After Resolve PlayLootCardStackEffect 7"},"childOfId":47} 

 Player 1 10:12:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Wait For Response From Player 1 "},"childOfId":47} 

 Player 1 10:12:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 10:12:09 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 1 10:12:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Wait For Response From Player 2 "},"childOfId":47} 

 Player 1 10:12:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 10:12:09 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 10:12:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 4 Cents(8) "} 

 Player 2 10:12:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 4 Cents(8) "} 

 Player 2 10:12:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 4 Cents(8) "} 

 Player 2 10:12:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 4 Cents(8) "} 

 Player 2 10:12:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 4 Cents(8) "} 

 Player 2 10:12:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 4 Cents(8) "} 

 Player 2 10:12:10 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 10:12:10 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 1 10:12:10 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 1 10:12:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Resolve ActivateItem 5 "}} 

 Player 1 10:12:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 1 10:12:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 1 10:12:10 $DO_STACK_EFFECT:  
{"originPlayerId":1,"playerId":2,"currentStack":[{"entityId":4,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":208},{"entityId":5,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 

 Player 2 10:12:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 10:12:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 10:12:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 10:12:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 10:12:10 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":276,"particleType":6} 

 Player 2 10:12:12 $DISABLE_PARTICLE_EFFECT:  
{"cardId":276,"particleType":6} 

 Player 2 10:12:12 $REGISTER_ONE_TURN_PASSIVE_EFFECT:  
{"cardId":276,"effectIndex":{"type":3,"index":0},"conditionData":[{"effectTargets":[275],"chainEffectsData":[],"methodArgs":[],"isPassive":false,"effectCard":276,"effectCardOwner":275,"effectCardPlayer":275}]} 

 Player 2 10:12:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 10:12:12 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 10:12:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 10:12:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 10:12:12 $FINISH_DO_STACK_EFFECT:  
{"playerId":1,"newStack":[{"entityId":4,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":208},{"entityId":5,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 

 Player 1 10:12:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 1 10:12:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 1 10:12:12 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 1 10:12:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 1 10:12:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 1 10:12:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 1 10:12:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 1 10:12:12 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 1 10:12:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 1 10:12:12 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":208}} 

 Player 1 10:12:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 1 10:12:12 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":208}} 

 Player 1 10:12:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 1 10:12:12 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 10:12:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 1 10:12:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 1 10:12:12 $REPLACE_STACK:  
{"currentStack":[{"entityId":4,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":208},{"entityId":5,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 

 Player 1 10:12:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster>"} 

 Player 1 10:12:13 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 10:12:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Remove After Resolve ActivateItem 5  "}} 

 Player 1 10:12:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster>"} 

 Player 1 10:12:13 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 10:12:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Response Remove After Resolve ActivateItem 5"},"childOfId":52} 

 Player 1 10:12:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Wait For Response From Player 2 "},"childOfId":52} 

 Player 1 10:12:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 10:12:13 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 10:12:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 10:12:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 10:12:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 10:12:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 10:12:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 10:12:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 10:12:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 10:12:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 10:12:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 10:12:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 10:12:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 10:12:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 10:12:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 10:12:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 10:12:13 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 10:12:13 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 1 10:12:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Wait For Response From Player 1 "},"childOfId":52} 

 Player 1 10:12:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 10:12:13 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 1 10:12:13 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 1 10:12:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":56,"_text":"Resolve AttackRoll 4 "}} 

 Player 1 10:12:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster>"} 

 Player 1 10:12:13 $DO_STACK_EFFECT:  
{"originPlayerId":1,"playerId":2,"currentStack":[{"entityId":4,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":208}]} 

 Player 2 10:12:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster>"} 

 Player 2 10:12:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster>"} 

 Player 2 10:12:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":57,"_text":"Added 0 to original roll"}} 

 Player 2 10:12:14 $NEXT_STACK_ID:  

 Player 2 10:12:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster>"} 

 Player 2 10:12:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 10:12:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost \n2:Player 2 is rolling against Charger<Monster>"} 

 Player 2 10:12:14 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":275,"entityToDoDamageCardId":208,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 10:12:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost \n2:Player 2 is rolling against Charger<Monster>"} 

 Player 2 10:12:14 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":208}} 

 Player 2 10:12:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost \n2:Player 2 is rolling against Charger<Monster>"} 

 Player 2 10:12:14 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":275,"entityToDoDamageCardId":208,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 10:12:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost \n2:Player 2 is rolling against Charger<Monster>"} 

 Player 2 10:12:14 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":208}} 

 Player 2 10:12:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost \n2:Player 2 is rolling against Charger<Monster>"} 

 Player 2 10:12:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost \n2:Player 2 is rolling against Charger<Monster>"} 

 Player 2 10:12:14 $REPLACE_STACK:  
{"currentStack":[{"entityId":8,"creatorCardId":275,"entityToDoDamageCardId":208,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":4,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":208}]} 

 Player 2 10:12:14 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":2,"number":5}],"result":null,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":5,"originStackId":4},"isAfterActivation":true,"index":5} 

 Player 2 10:12:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost \n2:Player 2 is rolling against Charger<Monster>"} 

 Player 2 10:12:14 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":208}} 

 Player 2 10:12:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost \n2:Player 2 is rolling against Charger<Monster>"} 

 Player 2 10:12:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost \n2:Player 2 is rolling against Charger<Monster>"} 

 Player 2 10:12:14 $FINISH_DO_STACK_EFFECT:  
{"playerId":1,"newStack":[{"entityId":8,"creatorCardId":275,"entityToDoDamageCardId":208,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":4,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":208}]} 

 Player 1 10:12:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster>"} 

 Player 1 10:12:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Charger<Monster>"} 

 Player 1 10:12:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost"} 

 Player 1 10:12:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost"} 

 Player 1 10:12:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost"} 

 Player 1 10:12:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost"} 

 Player 1 10:12:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost"} 

 Player 1 10:12:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost"} 

 Player 1 10:12:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost"} 

 Player 1 10:12:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost"} 

 Player 1 10:12:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost"} 

 Player 1 10:12:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost"} 

 Player 1 10:12:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost \n2:Player 2 is rolling against Charger<Monster>"} 

 Player 1 10:12:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost \n2:Player 2 is rolling against Charger<Monster>"} 

 Player 1 10:12:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost \n2:Player 2 is rolling against Charger<Monster>"} 

 Player 1 10:12:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost \n2:Player 2 is rolling against Charger<Monster>"} 

 Player 1 10:12:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost \n2:Player 2 is rolling against Charger<Monster>"} 

 Player 1 10:12:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost \n2:Player 2 is rolling against Charger<Monster>"} 

 Player 1 10:12:15 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 1 10:12:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost \n2:Player 2 is rolling against Charger<Monster>"} 

 Player 1 10:12:15 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":275,"entityToDoDamageCardId":208,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 10:12:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost \n2:Player 2 is rolling against Charger<Monster>"} 

 Player 1 10:12:15 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":275,"entityToDoDamageCardId":208,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 10:12:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost \n2:Player 2 is rolling against Charger<Monster>"} 

 Player 1 10:12:15 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":208}} 

 Player 1 10:12:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost \n2:Player 2 is rolling against Charger<Monster>"} 

 Player 1 10:12:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost \n2:Player 2 is rolling against Charger<Monster>"} 

 Player 1 10:12:15 $REPLACE_STACK:  
{"currentStack":[{"entityId":8,"creatorCardId":275,"entityToDoDamageCardId":208,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":4,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":208}]} 

 Player 1 10:12:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost"} 

 Player 1 10:12:15 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":208}} 

 Player 1 10:12:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":58,"_text":"Remove After Resolve AttackRoll 4  "}} 

 Player 1 10:12:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost"} 

 Player 1 10:12:15 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":208}} 

 Player 1 10:12:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":59,"_text":"Response Remove After Resolve AttackRoll 4"},"childOfId":58} 

 Player 1 10:12:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":60,"_text":"Wait For Response From Player 2 "},"childOfId":58} 

 Player 1 10:12:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 10:12:15 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 1 10:12:15 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 2 10:12:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost \n2:Player 2 is rolling against Charger<Monster>"} 

 Player 2 10:12:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost \n2:Player 2 is rolling against Charger<Monster>"} 

 Player 2 10:12:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost \n2:Player 2 is rolling against Charger<Monster>"} 

 Player 2 10:12:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost \n2:Player 2 is rolling against Charger<Monster>"} 

 Player 2 10:12:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost \n2:Player 2 is rolling against Charger<Monster>"} 

 Player 2 10:12:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost \n2:Player 2 is rolling against Charger<Monster>"} 

 Player 2 10:12:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost \n2:Player 2 is rolling against Charger<Monster>"} 

 Player 2 10:12:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost \n2:Player 2 is rolling against Charger<Monster>"} 

 Player 2 10:12:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost \n2:Player 2 is rolling against Charger<Monster>"} 

 Player 2 10:12:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost \n2:Player 2 is rolling against Charger<Monster>"} 

 Player 2 10:12:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost \n2:Player 2 is rolling against Charger<Monster>"} 

 Player 2 10:12:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost \n2:Player 2 is rolling against Charger<Monster>"} 

 Player 2 10:12:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost \n2:Player 2 is rolling against Charger<Monster>"} 

 Player 2 10:12:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost \n2:Player 2 is rolling against Charger<Monster>"} 

 Player 2 10:12:15 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 10:12:15 $ACTION_MASSAGE_REMOVE:  
{"id":60} 

 Player 1 10:12:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":61,"_text":"Wait For Response From Player 1 "},"childOfId":58} 

 Player 1 10:12:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 10:12:16 $ACTION_MASSAGE_REMOVE:  
{"id":61} 

 Player 1 10:12:16 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 1 10:12:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":62,"_text":"Resolve CombatDamage 8 "}} 

 Player 1 10:12:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost"} 

 Player 1 10:12:16 $DO_STACK_EFFECT:  
{"originPlayerId":1,"playerId":2,"currentStack":[{"entityId":8,"creatorCardId":275,"entityToDoDamageCardId":208,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}]} 

 Player 2 10:12:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost"} 

 Player 2 10:12:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost"} 

 Player 2 10:12:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger 1 combat damage to The Lost"} 

 Player 2 10:12:16 $UPDATE_STACK_VIS:  
{"stackId":8,"text":"Charger will deal 1 combat damage to The Lost"} 

 Player 2 10:12:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger 1 combat damage to The Lost"} 

 Player 2 10:12:16 $PLAYER_GET_HIT:  
{"playerId":2,"damage":1,"damageDealerId":208} 

 Player 2 10:12:16 $NEXT_STACK_ID:  

 Player 2 10:12:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger 1 combat damage to The Lost"} 

 Player 2 10:12:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 10:12:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger 1 combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 10:12:16 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":208}} 

 Player 2 10:12:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger 1 combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 10:12:16 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":275,"entityToDoDamageCardId":208,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 10:12:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger 1 combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 10:12:16 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":275,"entityToDoDamageCardId":208,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 10:12:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger 1 combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 10:12:16 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":208}} 

 Player 2 10:12:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger 1 combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 10:12:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger 1 combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 10:12:16 $REPLACE_STACK:  
{"currentStack":[{"entityId":8,"creatorCardId":275,"entityToDoDamageCardId":208,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":9,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":208}]} 

 Player 2 10:12:16 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":208}],"result":null,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 

 Player 2 10:12:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger 1 combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 10:12:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger 1 combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 10:12:16 $FINISH_DO_STACK_EFFECT:  
{"playerId":1,"newStack":[{"entityId":8,"creatorCardId":275,"entityToDoDamageCardId":208,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":9,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":208}]} 

 Player 2 10:12:16 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 1 10:12:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost"} 

 Player 1 10:12:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost"} 

 Player 1 10:12:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 10:12:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 10:12:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 10:12:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 10:12:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 10:12:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 10:12:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 10:12:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 10:12:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 10:12:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 10:12:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 1 10:12:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 1 10:12:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 1 10:12:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 1 10:12:17 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 1 10:12:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 1 10:12:17 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":275,"entityToDoDamageCardId":208,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 10:12:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 1 10:12:17 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":275,"entityToDoDamageCardId":208,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 10:12:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 1 10:12:17 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":208}} 

 Player 1 10:12:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 1 10:12:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 1 10:12:17 $REPLACE_STACK:  
{"currentStack":[{"entityId":8,"creatorCardId":275,"entityToDoDamageCardId":208,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":9,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":208}]} 

 Player 1 10:12:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 10:12:17 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":275,"entityToDoDamageCardId":208,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 10:12:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":63,"_text":"Remove After Resolve CombatDamage 8  "}} 

 Player 1 10:12:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 10:12:17 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":8,"creatorCardId":275,"entityToDoDamageCardId":208,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 10:12:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":64,"_text":"Response Remove After Resolve CombatDamage 8"},"childOfId":63} 

 Player 1 10:12:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":65,"_text":"Wait For Response From Player 2 "},"childOfId":63} 

 Player 1 10:12:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 10:12:17 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 1 10:12:17 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 2 10:12:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger 1 combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 10:12:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger 1 combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 10:12:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger 1 combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 10:12:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger 1 combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 10:12:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger 1 combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 10:12:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger 1 combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 10:12:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger 1 combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 10:12:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger 1 combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 10:12:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger 1 combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 10:12:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger 1 combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 10:12:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 10:12:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 10:12:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 10:12:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Charger combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 10:12:18 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 10:12:18 $ACTION_MASSAGE_REMOVE:  
{"id":65} 

 Player 1 10:12:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":66,"_text":"Wait For Response From Player 1 "},"childOfId":63} 

 Player 1 10:12:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 10:12:18 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 1 10:12:18 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 1 10:12:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":67,"_text":"Resolve PlayerDeath 9 "}} 

 Player 1 10:12:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 10:12:18 $DO_STACK_EFFECT:  
{"originPlayerId":1,"playerId":2,"currentStack":[{"entityId":9,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":208}]} 

 Player 2 10:12:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 10:12:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 10:12:18 $DISABLE_PARTICLE_EFFECT:  
{"cardId":208,"particleType":5} 

 Player 2 10:12:18 $CANCEL_ATTACK:  

 Player 2 10:12:18 $NEXT_STACK_ID:  

 Player 2 10:12:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 10:12:18 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_PAY_DEATH_PANELTIES","args":[],"result":null,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":1,"originStackId":10},"isAfterActivation":false,"index":1} 

 Player 2 10:12:18 $NEXT_STACK_ID:  

 Player 2 10:12:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 

 Player 2 10:12:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 2 10:12:18 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":11,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":276,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":276,"effctType":3},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 10:12:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 2 10:12:18 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":11,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":276,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":276,"effctType":3},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 10:12:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":68,"_text":"Add ActivatePassiveEffect 11 "}} 

 Player 2 10:12:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 2 10:12:19 $ACTION_MASSAGE_REMOVE:  
{"id":68} 

 Player 2 10:12:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 2 10:12:19 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":11,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":276,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":276,"effctType":3},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 10:12:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":69,"_text":"Response Adding ActivatePassiveEffect 11"},"childOfId":68} 

 Player 2 10:12:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":70,"_text":"Wait For Response From Player 1 "},"childOfId":68} 

 Player 2 10:12:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 10:12:19 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 10:12:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 10:12:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 10:12:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 

 Player 1 10:12:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 

 Player 1 10:12:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 

 Player 1 10:12:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 

 Player 1 10:12:19 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 10:12:19 $ACTION_MASSAGE_REMOVE:  
{"id":70} 

 Player 2 10:12:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":71,"_text":"Wait For Response From Player 2 "},"childOfId":68} 

 Player 2 10:12:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 10:12:19 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 2 10:12:19 $ACTION_MASSAGE_REMOVE:  
{"id":69} 

 Player 2 10:12:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":72,"_text":"Resolve ActivatePassiveEffect 11 "}} 

 Player 2 10:12:19 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":276,"particleType":6} 

 Player 1 10:12:19 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 2 10:12:21 $DISABLE_PARTICLE_EFFECT:  
{"cardId":276,"particleType":6} 

 Player 2 10:12:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 2 10:12:21 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":275,"playerToPayCardId":275,"stackEffectType":16}} 

 Player 2 10:12:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":73,"_text":"Fizzle PlayerDeathPenalties 10"}} 

 Player 2 10:12:21 $FIZZLE_STACK_EFFECT:  
{"entityId":10} 

 Player 2 10:12:21 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_PAY_DEATH_PANELTIES","args":[],"result":null,"preventMethod":true,"methodScopeId":275,"scopeIsPlayer":true,"index":1,"originStackId":10},"isAfterActivation":false,"index":1} 

 Player 2 10:12:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 2 10:12:21 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":11,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":276,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 10:12:21 $ACTION_MASSAGE_REMOVE:  
{"id":72} 

 Player 2 10:12:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 10:12:21 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":11,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":276,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 10:12:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":74,"_text":"Remove After Resolve ActivatePassiveEffect 11  "}} 

 Player 2 10:12:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 10:12:21 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":11,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":276,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 10:12:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":75,"_text":"Response Remove After Resolve ActivatePassiveEffect 11"},"childOfId":74} 

 Player 2 10:12:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":76,"_text":"Wait For Response From Player 2 "},"childOfId":74} 

 Player 2 10:12:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 10:12:21 $ACTION_MASSAGE_REMOVE:  
{"id":76} 

 Player 2 10:12:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":77,"_text":"Wait For Response From Player 1 "},"childOfId":74} 

 Player 2 10:12:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 10:12:22 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 10:12:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 

 Player 1 10:12:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 

 Player 1 10:12:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 

 Player 1 10:12:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 

 Player 1 10:12:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 

 Player 1 10:12:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 

 Player 1 10:12:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 

 Player 1 10:12:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 

 Player 1 10:12:22 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 10:12:22 $ACTION_MASSAGE_REMOVE:  
{"id":77} 

 Player 2 10:12:22 $ACTION_MASSAGE_REMOVE:  
{"id":75} 

 Player 2 10:12:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":78,"_text":"Resolve PlayerDeath 9 "}} 

 Player 2 10:12:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 10:12:22 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":275,"playerToPayCardId":275,"stackEffectType":16}} 

 Player 2 10:12:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 10:12:22 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":208}} 

 Player 2 10:12:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 10:12:22 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":208}} 

 Player 2 10:12:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 10:12:22 $REPLACE_STACK:  
{"currentStack":[{"entityId":9,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":208}]} 

 Player 2 10:12:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 10:12:22 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":208}} 

 Player 2 10:12:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 10:12:22 $FINISH_DO_STACK_EFFECT:  
{"playerId":1,"newStack":[{"entityId":9,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":208}]} 

 Player 1 10:12:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 10:12:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 10:12:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to pay death penalties"} 

 Player 1 10:12:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to pay death penalties"} 

 Player 1 10:12:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to pay death penalties"} 

 Player 1 10:12:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to pay death penalties"} 

 Player 1 10:12:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to pay death penalties"} 

 Player 1 10:12:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to pay death penalties"} 

 Player 1 10:12:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 10:12:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 10:12:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 10:12:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 10:12:23 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 1 10:12:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 10:12:23 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":208}} 

 Player 1 10:12:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 10:12:23 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":208}} 

 Player 1 10:12:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 10:12:23 $REPLACE_STACK:  
{"currentStack":[{"entityId":9,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":208}]} 

 Player 1 10:12:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 10:12:23 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":208}} 

 Player 1 10:12:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":79,"_text":"Remove After Resolve PlayerDeath 9  "}} 

 Player 1 10:12:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 10:12:23 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":9,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":208}} 

 Player 1 10:12:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":80,"_text":"Response Remove After Resolve PlayerDeath 9"},"childOfId":79} 

 Player 1 10:12:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":81,"_text":"Wait For Response From Player 1 "},"childOfId":79} 

 Player 1 10:12:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 10:12:23 $ACTION_MASSAGE_REMOVE:  
{"id":81} 

 Player 1 10:12:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":82,"_text":"Wait For Response From Player 2 "},"childOfId":79} 

 Player 1 10:12:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 10:12:23 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 10:12:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 10:12:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 10:12:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 10:12:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 10:12:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 10:12:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 10:12:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 10:12:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 10:12:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 10:12:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 10:12:23 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 10:12:23 $ACTION_MASSAGE_REMOVE:  
{"id":82} 

 Player 1 10:12:23 $ACTION_MASSAGE_REMOVE:  
{"id":80} 

 Player 1 10:12:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":83,"_text":"Stack Was Emptied "}} 

 Player 1 10:12:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 10:12:23 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 10:12:24 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 10:12:24 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 10:12:24 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 10:12:24 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 10:12:24 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 10:12:24 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 10:12:24 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 10:12:24 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 10:12:24 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 10:12:24 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 10:12:24 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 10:12:24 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 10:12:24 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 10:12:24 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 1 10:12:24 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 10:12:24 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 1 10:12:24 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 1 10:12:24 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 1 10:12:24 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 1 10:12:24 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 1 10:12:24 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 1 10:12:24 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 1 10:12:24 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 1 10:12:24 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 1 10:12:24 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 1 10:12:24 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 1 10:12:24 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 1 10:12:24 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 1 10:12:24 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 1 10:12:24 $ACTION_MASSAGE_REMOVE:  
{"id":68} 

 Player 1 10:12:24 $ACTION_MASSAGE_REMOVE:  
{"id":72} 

 Player 1 10:12:24 $ACTION_MASSAGE_REMOVE:  
{"id":73} 

 Player 1 10:12:24 $ACTION_MASSAGE_REMOVE:  
{"id":74} 

 Player 1 10:12:24 $ACTION_MASSAGE_REMOVE:  
{"id":78} 

 Player 1 10:12:24 $ACTION_MASSAGE_REMOVE:  
{"id":79} 

 Player 1 10:12:24 $ACTION_MASSAGE_REMOVE:  
{"id":83} 

 Player 1 10:12:24 $TURN_PLAYER_DO_STACK_EFFECT:  
{"playerId":2} 

 Player 2 10:12:24 $ACTION_MASSAGE_REMOVE:  
{"id":73} 

 Player 2 10:12:25 $ACTION_MASSAGE_REMOVE:  
{"id":74} 

 Player 1 10:12:25 $ACTION_MASSAGE_REMOVE:  
{"id":83} 

 Player 1 10:12:25 $ACTION_MASSAGE_REMOVE:  
{"id":79} 

 Player 2 10:20:33 $MATCH: 