Start Log 

 Player 1 19:46:18 $MATCH:  

 Player 1 19:46:19 $START_GAME:  

 Player 2 19:46:19 $MOVE_TO_TABLE:  

 Player 1 19:46:19 $MOVE_TO_TABLE:  

 Player 2 19:46:26 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 1 19:46:26 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 19:46:26 $SET_CHAR:  
{"originPlayerId":2,"playerId":1,"charCardId":321,"itemCardId":322} 

 Player 1 19:46:26 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":321,"itemCardId":322} 

 Player 1 19:46:26 $SET_CHAR_END:  
{"playerId":2} 

 Player 2 19:46:26 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":315,"itemCardId":318} 

 Player 2 19:46:26 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[98,5,101,135,36,100,102,48,120,55,108,46,75,29,18,110,124,117,79,113,26,84,109,97,88,41,42,4,103,121,38,19,87,123,81,78,122,27,119,94,34,70,115,85,68,12,139,132,30,9,40,90,138,8,57,77,31,21,65,64,74,23,127,95,126,91,45,37,33,63,13,93,71,136,24,133,43,114,116,112,15,49,50,6,17,80,83,66,51,53,106,86,99,89,125,128,28,10,129,67,14,47,111,92,131,134,25,39,62,137,59,96,20,58,107,130,69,44,76,11,105,61,54,118,82,72,7,32,52,60,22,73,16,56,104,35]} 

 Player 2 19:46:26 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[297,306,270,300,237,298,289,253,236,274,301,240,223,225,282,260,262,309,247,248,285,232,227,294,242,287,235,296,233,302,226,243,245,257,271,293,261,295,272,303,229,244,275,239,252,254,273,307,266,290,280,249,310,256,238,224,291,299,278,241,231,263,281,250,279,286,258,246,230,268,234,276,228,305,264,277,292,251,284,259,283,304,265,269,288,308,255,267]} 

 Player 2 19:46:26 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[169,168,221,212,170,193,215,218,177,145,146,195,192,173,166,167,214,151,208,175,172,191,154,171,153,150,174,220,182,196,186,159,206,160,184,219,165,216,152,148,197,183,211,156,187,162,203,205,157,141,161,155,147,181,143,217,164,207,201,194,176,202,209,188,163,178,200,185,179,204,190,142,210,149,189,198,158,213,180,199,144]} 

 Player 2 19:46:26 $DRAW_CARD:  
{"deckType":5} 

 Player 2 19:46:26 $FLIP_CARD:  
{"cardId":144} 

 Player 2 19:46:26 $ADD_STORE_CARD:  
{"cardId":144} 

 Player 2 19:46:26 $DRAW_CARD:  
{"deckType":5} 

 Player 2 19:46:26 $FLIP_CARD:  
{"cardId":199} 

 Player 2 19:46:26 $ADD_STORE_CARD:  
{"cardId":199} 

 Player 2 19:46:26 $DRAW_CARD:  
{"deckType":2} 

 Player 2 19:46:26 $FLIP_CARD:  
{"cardId":267} 

 Player 2 19:46:26 $REGISTER_PASSIVE_ITEM:  
{"cardId":267} 

 Player 2 19:46:26 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":267} 

 Player 2 19:46:26 $NEW_MONSTER_ON_PLACE:  
{"cardId":267,"monsterPlaceId":1} 

 Player 2 19:46:26 $DRAW_CARD:  
{"deckType":2} 

 Player 2 19:46:26 $FLIP_CARD:  
{"cardId":255} 

 Player 2 19:46:26 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":255} 

 Player 2 19:46:26 $NEW_MONSTER_ON_PLACE:  
{"cardId":255,"monsterPlaceId":2} 

 Player 2 19:46:26 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 19:46:26 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 19:46:26 $DRAW_CARD:  
{"deckType":1} 

 Player 2 19:46:26 $MOVE_CARD:  
{"moveIndex":1,"cardId":35,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 19:46:27 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":35,"flipIfFlipped":false,"playerId":2} 

 Player 2 19:46:27 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":35} 

 Player 2 19:46:27 $FLIP_CARD:  
{"cardId":35} 

 Player 2 19:46:27 $FLIP_CARD:  
{"cardId":35} 

 Player 2 19:46:27 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":35} 

 Player 2 19:46:27 $DRAW_CARD:  
{"deckType":1} 

 Player 2 19:46:27 $MOVE_CARD:  
{"moveIndex":2,"cardId":104,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 19:46:27 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":104,"flipIfFlipped":false,"playerId":2} 

 Player 2 19:46:27 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":104} 

 Player 2 19:46:27 $FLIP_CARD:  
{"cardId":104} 

 Player 2 19:46:27 $FLIP_CARD:  
{"cardId":104} 

 Player 2 19:46:27 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":104} 

 Player 2 19:46:27 $DRAW_CARD:  
{"deckType":1} 

 Player 2 19:46:27 $MOVE_CARD:  
{"moveIndex":3,"cardId":56,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 19:46:28 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":56,"flipIfFlipped":false,"playerId":2} 

 Player 2 19:46:28 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":56} 

 Player 2 19:46:28 $FLIP_CARD:  
{"cardId":56} 

 Player 2 19:46:28 $FLIP_CARD:  
{"cardId":56} 

 Player 2 19:46:28 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":56} 

 Player 2 19:46:28 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 19:46:28 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 19:46:28 $DRAW_CARD:  
{"deckType":1} 

 Player 2 19:46:28 $MOVE_CARD:  
{"moveIndex":4,"cardId":16,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 19:46:28 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":16,"flipIfFlipped":false,"playerId":2} 

 Player 2 19:46:28 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":16} 

 Player 2 19:46:28 $FLIP_CARD:  
{"cardId":16} 

 Player 2 19:46:28 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":16} 

 Player 2 19:46:28 $DRAW_CARD:  
{"deckType":1} 

 Player 2 19:46:28 $MOVE_CARD:  
{"moveIndex":5,"cardId":73,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 19:46:29 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":73,"flipIfFlipped":false,"playerId":2} 

 Player 2 19:46:29 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":73} 

 Player 2 19:46:29 $FLIP_CARD:  
{"cardId":73} 

 Player 2 19:46:29 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":73} 

 Player 2 19:46:29 $DRAW_CARD:  
{"deckType":1} 

 Player 2 19:46:29 $MOVE_CARD:  
{"moveIndex":6,"cardId":22,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 19:46:29 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":22,"flipIfFlipped":false,"playerId":2} 

 Player 2 19:46:29 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":22} 

 Player 2 19:46:29 $FLIP_CARD:  
{"cardId":22} 

 Player 2 19:46:29 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":22} 

 Player 2 19:46:29 $GAME_HAS_STARTED:  

 Player 2 19:46:29 $SET_TURN:  
{"playerId":2} 

 Player 2 19:46:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:46:30 $NEXT_STACK_ID:  

 Player 2 19:46:30 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:46:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 

 Player 2 19:46:30 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":315,"turnPlayerCardId":315,"stackEffectType":13}} 

 Player 2 19:46:30 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":315,"turnPlayerCardId":315,"stackEffectType":13}} 

 Player 2 19:46:30 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 19:46:30 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 1 19:46:30 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:46:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 

 Player 2 19:46:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 2 19:46:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:46:32 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":315,"turnPlayerCardId":315,"stackEffectType":13}} 

 Player 2 19:46:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 2 19:46:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 2 19:46:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:46:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 2 19:46:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:46:33 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:46:33 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[321,322]} 

 Player 1 19:46:33 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:46:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 2 19:46:33 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":315,"turnPlayerCardId":315,"stackEffectType":13}} 

 Player 2 19:46:33 $DRAW_CARD:  
{"deckType":1} 

 Player 2 19:46:33 $MOVE_CARD:  
{"moveIndex":7,"cardId":60,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 19:46:33 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":60,"flipIfFlipped":false,"playerId":2} 

 Player 2 19:46:33 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":60} 

 Player 2 19:46:33 $FLIP_CARD:  
{"cardId":60} 

 Player 2 19:46:33 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":60} 

 Player 2 19:46:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Has Drawen Loot For Start Turn"} 

 Player 2 19:46:33 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":315,"turnPlayerCardId":315,"stackEffectType":13}} 

 Player 2 19:46:33 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":1} 

 Player 2 19:46:33 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 19:46:33 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 1 19:46:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 

 Player 2 19:46:36 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":1} 

 Player 2 19:46:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 2 19:46:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:46:36 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":315,"turnPlayerCardId":315,"stackEffectType":13}} 

 Player 2 19:46:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 2 19:46:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 2 19:46:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:46:36 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:46:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 

 Player 1 19:46:36 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[321,322]} 

 Player 1 19:46:36 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:46:36 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 2 19:46:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 2 19:46:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:46:37 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 2 19:46:37 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 2 19:46:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 2 19:46:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:46:37 $CLEAR_SE_VIS:  

 Player 2 19:46:37 $UPDATE_ACTIONS:  

 Player 2 19:46:39 $MOVE_CARD:  
{"moveIndex":8,"cardId":281,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 

 Player 1 19:46:39 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":281,"flipIfFlipped":true,"playerId":2} 

 Player 2 19:46:39 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[297,306,270,300,237,298,289,253,236,274,301,240,223,225,282,260,262,309,247,248,285,232,227,294,242,287,235,296,233,302,226,243,245,257,271,293,261,295,272,303,229,244,275,239,252,254,273,307,266,290,280,249,310,256,238,224,291,299,278,241,231,263,250,279,286,258,246,230,268,234,276,228,305,264,277,292,251,284,259,283,304,265,269,288,308]} 

 Player 2 19:46:39 $FLIP_CARD:  
{"cardId":281} 

 Player 2 19:46:39 $REGISTER_PASSIVE_ITEM:  
{"cardId":281} 

 Player 2 19:46:39 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":281} 

 Player 2 19:46:39 $NEW_MONSTER_ON_PLACE:  
{"cardId":281,"monsterPlaceId":1} 

 Player 2 19:58:31 $NEXT_STACK_ID:  

 Player 2 19:58:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 declared attack on Isaac!"} 

 Player 2 19:58:31 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":315,"attackingPlayerCardId":315,"idOfCardBeingAttacked":281,"stackEffectType":4}} 

 Player 2 19:58:31 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":315,"attackingPlayerCardId":315,"idOfCardBeingAttacked":281,"stackEffectType":4}} 

 Player 2 19:58:31 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 19:58:31 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 1 19:58:31 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:58:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 declared attack on Isaac!"} 

 Player 2 19:58:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add DeclareAttack 2 "}} 

 Player 2 19:58:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:58:34 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":315,"attackingPlayerCardId":315,"idOfCardBeingAttacked":281,"stackEffectType":4}} 

 Player 2 19:58:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding DeclareAttack 2"},"childOfId":10} 

 Player 2 19:58:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 2 19:58:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:58:34 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 2 19:58:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 2 19:58:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:58:34 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:58:34 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[321,322]} 

 Player 1 19:58:34 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:58:34 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 2 19:58:34 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 2 19:58:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve DeclareAttack 2 "}} 

 Player 2 19:58:34 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":315,"attackingPlayerCardId":315,"idOfCardBeingAttacked":281,"stackEffectType":4}} 

 Player 2 19:58:34 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":281,"particleType":5} 

 Player 2 19:58:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Has Entered Battle with Isaac!"} 

 Player 2 19:58:34 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":3,"originStackId":2},"isAfterActivation":true,"index":3} 

 Player 2 19:58:34 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":315,"attackingPlayerCardId":315,"idOfCardBeingAttacked":281,"stackEffectType":4}} 

 Player 2 19:58:34 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":2} 

 Player 2 19:58:35 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 19:58:35 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 1 19:58:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 declared attack on Isaac!"} 

 Player 2 19:58:37 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":2} 

 Player 2 19:58:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve DeclareAttack 2  "}} 

 Player 2 19:58:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:58:37 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":315,"attackingPlayerCardId":315,"idOfCardBeingAttacked":281,"stackEffectType":4}} 

 Player 2 19:58:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve DeclareAttack 2"},"childOfId":15} 

 Player 2 19:58:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 2 19:58:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:58:37 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:58:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 declared attack on Isaac!"} 

 Player 1 19:58:37 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[321,322]} 

 Player 1 19:58:38 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:58:38 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 19:58:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 2 19:58:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:58:38 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 2 19:58:38 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 2 19:58:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 2 19:58:38 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:58:38 $CLEAR_SE_VIS:  

 Player 2 19:58:44 $NEXT_STACK_ID:  

 Player 2 19:58:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 

 Player 2 19:58:44 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":315,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 19:58:44 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":315,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 19:58:44 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 19:58:44 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 1 19:58:44 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:58:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 

 Player 2 19:58:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add AttackRoll 3 "}} 

 Player 2 19:58:47 $ROLL_DICE:  
{"playerId":2} 

 Player 2 19:58:50 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":4} 

 Player 2 19:58:50 $UPDATE_STACK_VIS:  
{"stackId":3,"text":"player rolled 4 vs Isaac!<Monster>"} 

 Player 2 19:58:50 $SHOW_DICE_ROLL:  
{"stackId":3} 

 Player 2 19:58:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Isaac!<Monster>"} 

 Player 2 19:58:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:58:53 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":315,"numberRolled":4,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 19:58:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding AttackRoll 3"},"childOfId":20} 

 Player 2 19:58:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 2 19:58:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:58:53 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 2 19:58:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 2 19:58:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:58:53 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:58:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 

 Player 1 19:58:53 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[321,322]} 

 Player 1 19:58:53 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:58:53 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 2 19:58:53 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 2 19:58:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve AttackRoll 3 "}} 

 Player 2 19:58:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Isaac!<Monster>"} 

 Player 2 19:58:53 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":315,"numberRolled":4,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 19:58:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Added 0 to original roll"}} 

 Player 2 19:58:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Rolled 3 Against Isaac!<Monster> 3"} 

 Player 2 19:58:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Roll Hit"} 

 Player 2 19:58:53 $NEXT_STACK_ID:  

 Player 2 19:58:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:58:53 $CLEAR_SE_VIS:  

 Player 2 19:58:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 2 Roll Hit"} 

 Player 2 19:58:53 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 

 Player 2 19:58:53 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":315,"numberRolled":4,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 19:58:53 $REPLACE_STACK:  
{"currentStack":[{"entityId":4,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3},{"entityId":3,"creatorCardId":315,"numberRolled":4,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}]} 

 Player 2 19:58:53 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 19:58:53 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 1 19:58:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 

 Player 1 19:58:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 

 Player 2 19:58:56 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":3},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":4,"originStackId":3},"isAfterActivation":true,"index":4} 

 Player 2 19:58:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 2 Roll Hit"} 

 Player 2 19:58:56 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":315,"numberRolled":4,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 19:58:56 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":3} 

 Player 2 19:58:56 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 19:58:56 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 1 19:58:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 2 is rolling against Isaac!<Monster>"} 

 Player 2 19:58:59 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":3} 

 Player 2 19:58:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Remove After Resolve AttackRoll 3  "}} 

 Player 2 19:58:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac!"} 

 Player 2 19:58:59 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":315,"numberRolled":4,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 19:58:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Response Remove After Resolve AttackRoll 3"},"childOfId":26} 

 Player 2 19:58:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":26} 

 Player 2 19:58:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:58:59 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 2 19:58:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Wait For Response From Player 1 "},"childOfId":26} 

 Player 2 19:58:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:58:59 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:58:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 2 is rolling against Isaac!<Monster>"} 

 Player 1 19:58:59 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[321,322]} 

 Player 1 19:58:59 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:58:59 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 19:59:00 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 2 19:59:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Resolve CombatDamage 4 "}} 

 Player 2 19:59:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac!"} 

 Player 2 19:59:00 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 

 Player 2 19:59:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain will deal 1 combat damage to Isaac! "} 

 Player 2 19:59:00 $UPDATE_STACK_VIS:  
{"stackId":4,"text":"Cain will deal 1 combat damage to Isaac!"} 

 Player 2 19:59:00 $LOG_ERROR:  
{"message":"\"Cannot read property 'getTarget' of undefined\"","stack":"\"TypeError: Cannot read property 'getTarget' of undefined\\n    at EntityTakeDamage.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:102:46)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\\n    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113284:71\\n    at new Promise (<anonymous>)\\n    at 486.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113264:14)\\n    at EntityTakeDamage.testCondition (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:93:16)\\n    at Function.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:365:56)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\""} 
//////Error From Player 2////
  

 Player 2 19:59:00 $LOG_ERROR:  
//////Error From Player 2////

 "\"Cannot read property 'getTarget' of undefined\""

 + "\"TypeError: Cannot read property 'getTarget' of undefined\
    at EntityTakeDamage.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:102:46)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113284:71\
    at new Promise (<anonymous>)\
    at 486.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113264:14)\
    at EntityTakeDamage.testCondition (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:93:16)\
    at Function.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:365:56)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\""

////// 
//////Error From Player 2////

 "\"Cannot read property 'getTarget' of undefined\""

 + "\"TypeError: Cannot read property 'getTarget' of undefined\
    at EntityTakeDamage.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:102:46)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113284:71\
    at new Promise (<anonymous>)\
    at 486.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113264:14)\
    at EntityTakeDamage.testCondition (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:93:16)\
    at Function.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:365:56)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\""

////// 

 Player 2 19:59:00 $MONSTER_GET_DAMAGED:  
{"cardId":281,"hpLeft":6,"damageDealerId":315} 

 Player 2 19:59:00 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":315},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 2 19:59:00 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":3},{"type":0,"number":315},{"type":0,"number":281}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":6,"originStackId":4},"isAfterActivation":true,"index":6} 

 Player 2 19:59:00 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 

 Player 2 19:59:00 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":4} 

 Player 2 19:59:00 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 19:59:00 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 1 19:59:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac!"} 

 Player 2 19:59:03 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":4} 

 Player 2 19:59:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Remove After Resolve CombatDamage 4  "}} 

 Player 2 19:59:03 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:59:03 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 

 Player 2 19:59:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Response Remove After Resolve CombatDamage 4"},"childOfId":31} 

 Player 2 19:59:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":31} 

 Player 2 19:59:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:59:03 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:59:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac!"} 

 Player 1 19:59:03 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[321,322]} 

 Player 1 19:59:03 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:59:03 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 2 19:59:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Wait For Response From Player 2 "},"childOfId":31} 

 Player 2 19:59:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:59:03 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 19:59:03 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 2 19:59:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Stack Was Emptied "}} 

 Player 2 19:59:03 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:59:03 $CLEAR_SE_VIS:  

 Player 2 20:02:13 $MATCH: 