Start Log 

 Player 1 01:35:29 $MATCH:  

 Player 1 01:35:29 $START_GAME:  

 Player 1 01:35:29 $MOVE_TO_TABLE:  

 Player 2 01:35:29 $MOVE_TO_TABLE:  

 Player 2 01:35:37 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 1 01:35:37 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 01:35:37 $CHOOSE_FOR_EDEN:  
{"playerId":1,"originPlayerId":2} 

 Player 1 01:35:37 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[166,142,224,144,216,182,192,162,211,185,143,208,198,183,174,218,204,186,148,146,177,212,154,213,157,158,161,151,200,171,150,155,180,199,221,193,197,205,175,189,209,210,153,176,179,214,217,168,147,163,160,194,223,170,201,207,159,225,152,184,196,149,195,222,167,188,191,173,164,145,206,141,202,169,190,215,203,178,181,156,220,219,172,165,187]} 

 Player 1 01:35:42 $EDEN_CHOSEN:  
{"cardId":166,"playerId":2} 

 Player 2 01:35:42 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[142,224,144,216,182,192,162,211,185,143,208,198,183,174,218,204,186,148,146,177,212,154,213,157,158,161,151,200,171,150,155,180,199,221,193,197,205,175,189,209,210,153,176,179,214,217,168,147,163,160,194,223,170,201,207,159,225,152,184,196,149,195,222,167,188,191,173,164,145,206,141,202,169,190,215,203,178,181,156,220,219,172,165,187]} 

 Player 2 01:35:42 $FLIP_CARD:  
{"cardId":166} 

 Player 2 01:35:42 $SET_CHAR:  
{"originPlayerId":2,"playerId":1,"charCardId":340,"itemCardId":166} 

 Player 1 01:35:42 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":340,"itemCardId":166} 

 Player 1 01:35:42 $SET_CHAR_END:  
{"playerId":2} 

 Player 2 01:35:42 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":346,"itemCardId":347} 

 Player 2 01:35:42 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":341}],"result":null,"preventMethod":false,"methodScopeId":340,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 01:35:42 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[23,102,32,91,48,119,82,36,14,83,59,53,61,95,106,37,98,137,22,97,5,9,20,57,78,8,116,84,72,77,4,70,109,129,121,99,25,120,15,31,85,13,113,34,138,79,124,65,17,16,96,131,112,105,123,74,73,60,30,38,128,92,108,27,115,139,55,68,89,127,93,100,35,28,136,29,101,117,63,24,62,132,71,94,11,130,52,40,46,114,33,104,110,42,76,133,87,6,135,81,125,54,122,49,26,41,44,58,126,88,118,67,18,12,56,43,7,21,69,39,51,64,103,111,90,50,75,45,47,66,86,107,134,19,80,10]} 

 Player 2 01:35:42 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[249,229,323,299,239,269,294,298,325,305,320,260,257,283,314,304,232,246,271,266,242,240,284,310,228,236,308,292,315,259,267,287,324,268,244,313,277,245,312,327,261,290,248,326,297,256,238,233,231,251,250,307,300,265,235,281,289,263,227,282,286,319,309,270,253,234,316,273,247,280,293,243,322,291,328,275,288,279,285,262,230,252,329,274,278,264,301,318,241,306,258,255,317,321,276,254,302,311,237,303,272,295,296]} 

 Player 2 01:35:42 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[154,148,204,225,209,188,205,162,199,198,156,195,164,196,174,163,208,216,168,155,222,144,182,183,190,143,152,213,181,189,219,201,141,210,173,206,221,193,146,211,151,191,180,158,161,215,175,223,220,150,197,165,153,187,178,214,202,200,184,179,185,147,212,159,224,192,207,186,171,170,177,203,218,169,194,149,145,167,176,157,160,217,172,142]} 

 Player 2 01:35:42 $DRAW_CARD:  
{"deckType":5} 

 Player 2 01:35:42 $FLIP_CARD:  
{"cardId":142} 

 Player 2 01:35:42 $ADD_STORE_CARD:  
{"cardId":142} 

 Player 2 01:35:42 $DRAW_CARD:  
{"deckType":5} 

 Player 2 01:35:42 $FLIP_CARD:  
{"cardId":172} 

 Player 2 01:35:42 $ADD_STORE_CARD:  
{"cardId":172} 

 Player 2 01:35:42 $DRAW_CARD:  
{"deckType":2} 

 Player 2 01:35:42 $FLIP_CARD:  
{"cardId":296} 

 Player 2 01:35:42 $REGISTER_PASSIVE_ITEM:  
{"cardId":296} 

 Player 2 01:35:42 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"NEW_ACTIVE_MONSTER","args":[{"type":0,"number":296}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":false,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 01:35:42 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":296} 

 Player 2 01:35:42 $NEW_MONSTER_ON_PLACE:  
{"cardId":296,"monsterPlaceId":1} 

 Player 2 01:35:42 $DRAW_CARD:  
{"deckType":2} 

 Player 2 01:35:42 $FLIP_CARD:  
{"cardId":295} 

 Player 2 01:35:42 $REGISTER_PASSIVE_ITEM:  
{"cardId":295} 

 Player 2 01:35:42 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"NEW_ACTIVE_MONSTER","args":[{"type":0,"number":295}],"result":null,"preventMethod":false,"methodScopeId":295,"scopeIsPlayer":false,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 01:35:42 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":295} 

 Player 2 01:35:42 $NEW_MONSTER_ON_PLACE:  
{"cardId":295,"monsterPlaceId":2} 

 Player 2 01:35:42 $REGISTER_PASSIVE_ITEM:  
{"cardId":331} 

 Player 2 01:35:42 $REGISTER_PASSIVE_ITEM:  
{"cardId":332} 

 Player 2 01:35:42 $REGISTER_PASSIVE_ITEM:  
{"cardId":333} 

 Player 2 01:35:42 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 01:35:42 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":340,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 2 01:35:42 $DRAW_CARD:  
{"deckType":1} 

 Player 2 01:35:42 $MOVE_CARD:  
{"moveIndex":1,"cardId":10,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 01:35:42 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"NEW_ACTIVE_MONSTER","args":[{"type":0,"number":296}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":false,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 01:35:42 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"NEW_ACTIVE_MONSTER","args":[{"type":0,"number":295}],"result":null,"preventMethod":false,"methodScopeId":295,"scopeIsPlayer":false,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 1 01:35:43 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":10,"flipIfFlipped":false,"playerId":2} 

 Player 2 01:35:43 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":10} 

 Player 2 01:35:43 $FLIP_CARD:  
{"cardId":10} 

 Player 2 01:35:43 $FLIP_CARD:  
{"cardId":10} 

 Player 2 01:35:43 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":10} 

 Player 2 01:35:43 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":10}],"result":null,"preventMethod":false,"methodScopeId":340,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 2 01:35:43 $DRAW_CARD:  
{"deckType":1} 

 Player 2 01:35:43 $MOVE_CARD:  
{"moveIndex":2,"cardId":80,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 01:35:43 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":80,"flipIfFlipped":false,"playerId":2} 

 Player 2 01:35:43 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":80} 

 Player 2 01:35:43 $FLIP_CARD:  
{"cardId":80} 

 Player 2 01:35:43 $FLIP_CARD:  
{"cardId":80} 

 Player 2 01:35:43 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":80} 

 Player 2 01:35:43 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":80}],"result":null,"preventMethod":false,"methodScopeId":340,"scopeIsPlayer":true,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 

 Player 2 01:35:43 $DRAW_CARD:  
{"deckType":1} 

 Player 2 01:35:44 $MOVE_CARD:  
{"moveIndex":3,"cardId":19,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 01:35:44 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":19,"flipIfFlipped":false,"playerId":2} 

 Player 2 01:35:44 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":19} 

 Player 2 01:35:44 $FLIP_CARD:  
{"cardId":19} 

 Player 2 01:35:44 $FLIP_CARD:  
{"cardId":19} 

 Player 2 01:35:44 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":19} 

 Player 2 01:35:44 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":19}],"result":null,"preventMethod":false,"methodScopeId":340,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 

 Player 2 01:35:44 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 01:35:44 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":346,"scopeIsPlayer":true,"index":8,"originStackId":-1},"isAfterActivation":true,"index":8} 

 Player 2 01:35:44 $DRAW_CARD:  
{"deckType":1} 

 Player 2 01:35:44 $MOVE_CARD:  
{"moveIndex":4,"cardId":134,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 01:35:44 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":134,"flipIfFlipped":false,"playerId":2} 

 Player 2 01:35:44 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":134} 

 Player 2 01:35:44 $FLIP_CARD:  
{"cardId":134} 

 Player 2 01:35:44 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":134} 

 Player 2 01:35:45 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":134}],"result":null,"preventMethod":false,"methodScopeId":346,"scopeIsPlayer":true,"index":9,"originStackId":-1},"isAfterActivation":true,"index":9} 

 Player 2 01:35:45 $DRAW_CARD:  
{"deckType":1} 

 Player 2 01:35:45 $MOVE_CARD:  
{"moveIndex":5,"cardId":107,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 01:35:45 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":107,"flipIfFlipped":false,"playerId":2} 

 Player 2 01:35:45 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":107} 

 Player 2 01:35:45 $FLIP_CARD:  
{"cardId":107} 

 Player 2 01:35:45 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":107} 

 Player 2 01:35:45 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":107}],"result":null,"preventMethod":false,"methodScopeId":346,"scopeIsPlayer":true,"index":10,"originStackId":-1},"isAfterActivation":true,"index":10} 

 Player 2 01:35:45 $DRAW_CARD:  
{"deckType":1} 

 Player 2 01:35:45 $MOVE_CARD:  
{"moveIndex":6,"cardId":86,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 01:35:45 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":86,"flipIfFlipped":false,"playerId":2} 

 Player 2 01:35:45 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":86} 

 Player 2 01:35:45 $FLIP_CARD:  
{"cardId":86} 

 Player 2 01:35:45 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":86} 

 Player 2 01:35:46 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":86}],"result":null,"preventMethod":false,"methodScopeId":346,"scopeIsPlayer":true,"index":11,"originStackId":-1},"isAfterActivation":true,"index":11} 

 Player 2 01:35:46 $GAME_HAS_STARTED:  

 Player 2 01:35:46 $SET_TURN:  
{"playerId":1} 

 Player 2 01:35:46 $START_TURN:  
{"playerId":1} 

 Player 2 01:35:46 $UPDATE_ACTIONS:  

 Player 1 01:35:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:35:46 $NEXT_STACK_ID:  

 Player 1 01:35:46 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":340,"turnPlayerCardId":340,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"}} 

 Player 1 01:35:46 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":340,"turnPlayerCardId":340,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"}} 

 Player 1 01:35:46 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 01:35:46 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 1 01:35:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add Start Turn Loot Draw 1 "}} 

 Player 1 01:35:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:35:49 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":340,"turnPlayerCardId":340,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"}} 

 Player 1 01:35:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding Start Turn Loot Draw 1"},"childOfId":0} 

 Player 1 01:35:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 1 01:35:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:35:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 1 01:35:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:35:49 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:35:49 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[346,347]} 

 Player 2 01:35:49 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 01:35:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve Start Turn Loot Draw 1 "}} 

 Player 1 01:35:49 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":1,"creatorCardId":340,"turnPlayerCardId":340,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"}]} 

 Player 1 01:35:49 $DRAW_CARD:  
{"deckType":1} 

 Player 1 01:35:49 $MOVE_CARD:  
{"moveIndex":7,"cardId":66,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 01:35:49 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":66,"flipIfFlipped":false,"playerId":1} 

 Player 1 01:35:49 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":66} 

 Player 1 01:35:49 $FLIP_CARD:  
{"cardId":66} 

 Player 1 01:35:49 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":66} 

 Player 1 01:35:49 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":66}],"result":null,"preventMethod":false,"methodScopeId":340,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 1 01:35:49 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":1,"text":"Player 1 Has Drawn Loot For Start Turn"} 

 Player 1 01:35:49 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":340,"turnPlayerCardId":340,"stackEffectType":13,"lable":"Player 1 Has Drawn Loot For Start Turn"}} 

 Player 1 01:35:49 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 1 01:35:50 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 01:35:50 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 1 01:35:52 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":1} 

 Player 1 01:35:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve Start Turn Loot Draw 1  "}} 

 Player 1 01:35:52 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":340,"turnPlayerCardId":340,"stackEffectType":13,"lable":"Player 1 Has Drawn Loot For Start Turn"}} 

 Player 1 01:35:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve Start Turn Loot Draw 1"},"childOfId":5} 

 Player 1 01:35:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 1 01:35:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:35:53 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:35:53 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[346,347]} 

 Player 2 01:35:53 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 01:35:53 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 1 01:35:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 1 01:35:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:35:53 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 1 01:35:53 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 1 01:35:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 1 01:35:53 $CLEAR_SE_VIS:  

 Player 1 01:35:58 $NEXT_STACK_ID:  

 Player 1 01:35:58 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":340,"attackingPlayerCardId":340,"idOfCardBeingAttacked":295,"stackEffectType":4,"lable":"Player 1 declared attack on Keeper Head"}} 

 Player 1 01:35:58 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":340,"attackingPlayerCardId":340,"idOfCardBeingAttacked":295,"stackEffectType":4,"lable":"Player 1 declared attack on Keeper Head"}} 

 Player 1 01:35:58 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 01:35:58 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 1 01:36:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add Player Declare Attack On Monster 2 "}} 

 Player 1 01:36:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:36:01 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":340,"attackingPlayerCardId":340,"idOfCardBeingAttacked":295,"stackEffectType":4,"lable":"Player 1 declared attack on Keeper Head"}} 

 Player 1 01:36:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding Player Declare Attack On Monster 2"},"childOfId":10} 

 Player 1 01:36:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 1 01:36:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:36:01 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 1 01:36:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 1 01:36:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:36:01 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:36:01 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[346,347]} 

 Player 2 01:36:01 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 01:36:01 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 1 01:36:01 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 1 01:36:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve Player Declare Attack On Monster 2 "}} 

 Player 1 01:36:01 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":2,"creatorCardId":340,"attackingPlayerCardId":340,"idOfCardBeingAttacked":295,"stackEffectType":4,"lable":"Player 1 declared attack on Keeper Head"}]} 

 Player 1 01:36:01 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":295,"particleType":5} 

 Player 1 01:36:01 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":2,"text":"Player 1 Has Entered Battle with Keeper Head"} 

 Player 1 01:36:01 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":340,"scopeIsPlayer":true,"index":4,"originStackId":2},"isAfterActivation":true,"index":4} 

 Player 1 01:36:01 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":340,"attackingPlayerCardId":340,"idOfCardBeingAttacked":295,"stackEffectType":4,"lable":"Player 1 Has Entered Battle with Keeper Head"}} 

 Player 1 01:36:01 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 1 01:36:01 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 01:36:01 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 1 01:36:04 $PLAYER_GAIN_DMG:  
{"playerId":1,"DMGToGain":4,"isTemp":true} 

 Player 1 01:36:04 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":2} 

 Player 1 01:36:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve Player Declare Attack On Monster 2  "}} 

 Player 1 01:36:04 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":340,"attackingPlayerCardId":340,"idOfCardBeingAttacked":295,"stackEffectType":4,"lable":"Player 1 Has Entered Battle with Keeper Head"}} 

 Player 1 01:36:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve Player Declare Attack On Monster 2"},"childOfId":15} 

 Player 1 01:36:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 1 01:36:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:36:04 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:36:04 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[346,347]} 

 Player 2 01:36:04 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 01:36:04 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 1 01:36:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 1 01:36:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:36:04 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 1 01:36:05 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 1 01:36:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 1 01:36:05 $CLEAR_SE_VIS:  

 Player 1 01:36:06 $NEXT_STACK_ID:  

 Player 1 01:36:06 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":340,"rollingPlayerCardId":340,"stackEffectType":2,"attackedMonsterCardId":295,"lable":"Player 1 is rolling against Keeper Head<Monster>"}} 

 Player 1 01:36:06 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":340,"rollingPlayerCardId":340,"stackEffectType":2,"attackedMonsterCardId":295,"lable":"Player 1 is rolling against Keeper Head<Monster>"}} 

 Player 1 01:36:06 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 01:36:06 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 1 01:36:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add Player Attack Roll On Monster 3 "}} 

 Player 1 01:36:09 $ROLL_DICE:  
{"playerId":1} 

 Player 1 01:36:11 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":6} 

 Player 1 01:36:11 $UPDATE_STACK_VIS:  
{"stackId":3,"text":"player rolled 6 vs Keeper Head<Monster>"} 

 Player 1 01:36:11 $SHOW_DICE_ROLL:  
{"stackId":3} 

 Player 1 01:36:14 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":3,"text":"Player 1 rolled 6 vs Keeper Head<Monster>"} 

 Player 1 01:36:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:36:14 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":340,"numberRolled":6,"rollingPlayerCardId":340,"stackEffectType":2,"attackedMonsterCardId":295,"lable":"Player 1 rolled 6 vs Keeper Head<Monster>"}} 

 Player 1 01:36:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding Player Attack Roll On Monster 3"},"childOfId":20} 

 Player 1 01:36:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 1 01:36:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:36:14 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 1 01:36:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 1 01:36:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:36:14 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:36:14 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[346,347]} 

 Player 2 01:36:14 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 01:36:14 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 1 01:36:14 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 1 01:36:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve Player Attack Roll On Monster 3 "}} 

 Player 1 01:36:14 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":3,"creatorCardId":340,"numberRolled":6,"rollingPlayerCardId":340,"stackEffectType":2,"attackedMonsterCardId":295,"lable":"Player 1 rolled 6 vs Keeper Head<Monster>"}]} 

 Player 1 01:36:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Added 0 to original roll"}} 

 Player 1 01:36:14 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":3,"text":"Player 1 Rolled 5 Against Keeper Head<Monster> 4"} 

 Player 1 01:36:14 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":3,"text":"Player 1 Roll Hit"} 

 Player 1 01:36:14 $NEXT_STACK_ID:  

 Player 1 01:36:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:36:14 $CLEAR_SE_VIS:  

 Player 1 01:36:14 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":340,"entityToDoDamageCardId":340,"entityToTakeDamageCardId":295,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5,"lable":"Eden is going to hurt Keeper Head"}} 

 Player 1 01:36:14 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":340,"numberRolled":6,"rollingPlayerCardId":340,"stackEffectType":2,"attackedMonsterCardId":295,"lable":"Player 1 Roll Hit"}} 

 Player 1 01:36:14 $REPLACE_STACK:  
{"currentStack":[{"entityId":4,"creatorCardId":340,"entityToDoDamageCardId":340,"entityToTakeDamageCardId":295,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5,"lable":"Eden is going to hurt Keeper Head"},{"entityId":3,"creatorCardId":340,"numberRolled":6,"rollingPlayerCardId":340,"stackEffectType":2,"attackedMonsterCardId":295,"lable":"Player 1 Roll Hit"}]} 

 Player 1 01:36:14 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 01:36:14 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_LAND_ATTACK","args":[{"type":2,"number":5},{"type":0,"number":295}],"result":null,"preventMethod":false,"methodScopeId":340,"scopeIsPlayer":true,"index":5,"originStackId":3},"isAfterActivation":true,"index":5} 

 Player 1 01:36:14 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":340,"scopeIsPlayer":true,"index":6,"originStackId":3},"isAfterActivation":true,"index":6} 

 Player 1 01:36:14 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":340,"numberRolled":6,"rollingPlayerCardId":340,"stackEffectType":2,"attackedMonsterCardId":295,"lable":"Player 1 Roll Hit"}} 

 Player 1 01:36:14 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 1 01:36:14 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 01:36:14 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 1 01:36:17 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":3} 

 Player 1 01:36:17 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 1 01:36:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Remove After Resolve Player Attack Roll On Monster 3  "}} 

 Player 1 01:36:20 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":340,"numberRolled":6,"rollingPlayerCardId":340,"stackEffectType":2,"attackedMonsterCardId":295,"lable":"Player 1 Roll Hit"}} 

 Player 1 01:36:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Response Remove After Resolve Player Attack Roll On Monster 3"},"childOfId":26} 

 Player 1 01:36:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 1 "},"childOfId":26} 

 Player 1 01:36:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:36:20 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 1 01:36:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Wait For Response From Player 2 "},"childOfId":26} 

 Player 1 01:36:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:36:20 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:36:20 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[346,347]} 

 Player 2 01:36:20 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 01:36:20 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 1 01:36:20 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 1 01:36:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Resolve Monster Combat Damage To A Player 4 "}} 

 Player 1 01:36:20 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":4,"creatorCardId":340,"entityToDoDamageCardId":340,"entityToTakeDamageCardId":295,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5,"lable":"Eden is going to hurt Keeper Head"}]} 

 Player 1 01:36:20 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":4,"text":"Eden will deal 5 combat damage to Keeper Head "} 

 Player 1 01:36:20 $UPDATE_STACK_VIS:  
{"stackId":4,"text":"Eden will deal 5 combat damage to Keeper Head"} 

 Player 1 01:36:21 $MONSTER_GET_DAMAGED:  
{"cardId":295,"hpLeft":0,"damageDealerId":340} 

 Player 1 01:36:21 $NEXT_STACK_ID:  

 Player 1 01:36:21 $CLEAR_SE_VIS:  

 Player 1 01:36:21 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":340,"entityToDoDamageCardId":340,"entityToTakeDamageCardId":295,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5,"lable":"Eden will deal 5 combat damage to Keeper Head "}} 

 Player 1 01:36:21 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":340,"monsterToDieCardId":295,"stackEffectType":5,"killerId":340,"lable":"[object Object] Is Going To Be Killed by Eden"}} 

 Player 1 01:36:21 $REPLACE_STACK:  
{"currentStack":[{"entityId":4,"creatorCardId":340,"entityToDoDamageCardId":340,"entityToTakeDamageCardId":295,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5,"lable":"Eden will deal 5 combat damage to Keeper Head "},{"entityId":5,"creatorCardId":340,"monsterToDieCardId":295,"stackEffectType":5,"killerId":340,"lable":"[object Object] Is Going To Be Killed by Eden"}]} 

 Player 1 01:36:21 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":340,"monsterToDieCardId":295,"stackEffectType":5,"killerId":340,"lable":"[object Object] Is Going To Be Killed by Eden"}} 

 Player 1 01:36:21 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 01:36:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:36:21 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":5},{"type":0,"number":340},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":295,"scopeIsPlayer":false,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 

 Player 1 01:36:21 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":5},{"type":2,"number":5},{"type":0,"number":340},{"type":0,"number":295}],"result":null,"preventMethod":false,"methodScopeId":340,"scopeIsPlayer":true,"index":8,"originStackId":4},"isAfterActivation":true,"index":8} 

 Player 1 01:36:21 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":340,"entityToDoDamageCardId":340,"entityToTakeDamageCardId":295,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5,"lable":"Eden will deal 5 combat damage to Keeper Head "}} 

 Player 1 01:36:21 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 1 01:36:21 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 01:36:21 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 1 01:36:23 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":4} 

 Player 1 01:36:23 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 1 01:36:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Remove After Resolve Monster Combat Damage To A Player 4  "}} 

 Player 1 01:36:26 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":340,"entityToDoDamageCardId":340,"entityToTakeDamageCardId":295,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5,"lable":"Eden will deal 5 combat damage to Keeper Head "}} 

 Player 1 01:36:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Response Remove After Resolve Monster Combat Damage To A Player 4"},"childOfId":31} 

 Player 1 01:36:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":31} 

 Player 1 01:36:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:36:26 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 1 01:36:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Wait For Response From Player 2 "},"childOfId":31} 

 Player 1 01:36:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:36:27 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:36:27 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[346,347]} 

 Player 2 01:36:27 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 01:36:27 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 1 01:36:27 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 1 01:36:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Resolve Monster Is Going To Die 5 "}} 

 Player 1 01:36:27 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":5,"creatorCardId":340,"monsterToDieCardId":295,"stackEffectType":5,"killerId":340,"lable":"[object Object] Is Going To Be Killed by Eden"}]} 

 Player 1 01:36:27 $DISABLE_PARTICLE_EFFECT:  
{"cardId":295,"particleType":5} 

 Player 1 01:36:27 $CANCEL_ATTACK:  

 Player 1 01:36:27 $NEXT_STACK_ID:  

 Player 1 01:36:27 $NEXT_STACK_ID:  

 Player 1 01:36:27 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":7,"text":"Player 1 Is About To Roll A Dice"} 

 Player 1 01:36:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:36:27 $CLEAR_SE_VIS:  

 Player 1 01:36:27 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":340,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"monsterCardWithRewardId":295,"playerCardIdToReward":340,"stackEffectType":7,"lable":"Player 1 Is Going To Get Keeper Head<Monster>'s Reward"}} 

 Player 1 01:36:27 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":340,"monsterToDieCardId":295,"stackEffectType":5,"killerId":340,"lable":"[object Object] Is Going To Be Killed by Eden"}} 

 Player 1 01:36:27 $REPLACE_STACK:  
{"currentStack":[{"entityId":6,"creatorCardId":340,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"monsterCardWithRewardId":295,"playerCardIdToReward":340,"stackEffectType":7,"lable":"Player 1 Is Going To Get Keeper Head<Monster>'s Reward"},{"entityId":5,"creatorCardId":340,"monsterToDieCardId":295,"stackEffectType":5,"killerId":340,"lable":"[object Object] Is Going To Be Killed by Eden"}]} 

 Player 1 01:36:27 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 01:36:27 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":340,"monsterToDieCardId":295,"stackEffectType":5,"killerId":340,"lable":"[object Object] Is Going To Be Killed by Eden"}} 

 Player 1 01:36:27 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 1 01:36:27 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 01:36:27 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 2 01:36:27 $NEXT_STACK_ID:  

 Player 2 01:36:27 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":8,"text":"Player 1 Is About To Roll A Dice"} 

 Player 2 01:36:27 $NEXT_STACK_ID:  

 Player 2 01:36:27 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":9,"text":"Player 1 Is About To Roll A Dice"} 

 Player 1 01:36:30 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":5} 

 Player 1 01:36:30 $SHOW_STACK_EFFECT:  
{"effectId":6} 

 Player 1 01:36:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Remove After Resolve Monster Is Going To Die 5  "}} 

 Player 1 01:36:33 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":340,"monsterToDieCardId":295,"stackEffectType":5,"killerId":340,"lable":"[object Object] Is Going To Be Killed by Eden"}} 

 Player 1 01:36:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Response Remove After Resolve Monster Is Going To Die 5"},"childOfId":36} 

 Player 1 01:36:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 1 "},"childOfId":36} 

 Player 1 01:36:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:36:33 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 1 01:36:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Wait For Response From Player 2 "},"childOfId":36} 

 Player 1 01:36:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:36:33 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:36:33 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[346,347]} 

 Player 2 01:36:33 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 01:36:33 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 1 01:36:33 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 1 01:36:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Resolve Monster Death Reward 6 "}} 

 Player 1 01:36:33 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":6,"creatorCardId":340,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"monsterCardWithRewardId":295,"playerCardIdToReward":340,"stackEffectType":7,"lable":"Player 1 Is Going To Get Keeper Head<Monster>'s Reward"}]} 

 Player 1 01:36:33 $ADD_TO_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":340,"stackEffectToLock":{"entityId":6,"creatorCardId":340,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"monsterCardWithRewardId":295,"playerCardIdToReward":340,"stackEffectType":7,"lable":"Player 1 Is Going To Get Keeper Head<Monster>'s Reward"},"hasLockingStackEffect":false,"stackEffectType":11,"lable":"Player 1 Is About To Roll A Dice"}} 

 Player 1 01:36:33 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":340,"stackEffectToLock":{"entityId":6,"creatorCardId":340,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"monsterCardWithRewardId":295,"playerCardIdToReward":340,"stackEffectType":7,"lable":"Player 1 Is Going To Get Keeper Head<Monster>'s Reward"},"hasLockingStackEffect":false,"stackEffectType":11,"lable":"Player 1 Is About To Roll A Dice"}} 

 Player 1 01:36:33 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 01:36:33 $SHOW_STACK_EFFECT:  
{"effectId":7} 

 Player 2 01:36:33 $NEXT_STACK_ID:  

 Player 2 01:36:33 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":10,"text":"Player 1 Is About To Roll A Dice"} 

 Player 2 01:36:33 $NEXT_STACK_ID:  

 Player 2 01:36:33 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":11,"text":"Player 1 Is About To Roll A Dice"} 

 Player 2 01:36:33 $NEXT_STACK_ID:  

 Player 2 01:36:33 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":12,"text":"Player 1 Is About To Roll A Dice"} 

 Player 1 01:36:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Add Roll Dice 7 "}} 

 Player 1 01:36:36 $ROLL_DICE:  
{"playerId":1} 

 Player 1 01:36:38 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":3} 

 Player 1 01:36:38 $UPDATE_STACK_VIS:  
{"stackId":7,"text":"player 1 rolled 3"} 

 Player 1 01:36:38 $SHOW_DICE_ROLL:  
{"stackId":7} 

 Player 1 01:36:41 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":7,"text":"Player 1 Rolled 3"} 

 Player 1 01:36:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:36:41 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":340,"stackEffectToLock":{"entityId":6,"creatorCardId":340,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"monsterCardWithRewardId":295,"playerCardIdToReward":340,"stackEffectType":7,"lable":"Player 1 Is Going To Get Keeper Head<Monster>'s Reward"},"hasLockingStackEffect":false,"numberRolled":3,"stackEffectType":11,"lable":"Player 1 Rolled 3"}} 

 Player 1 01:36:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Response Adding Roll Dice 7"},"childOfId":41} 

 Player 1 01:36:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 1 "},"childOfId":41} 

 Player 1 01:36:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:36:41 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 1 01:36:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Wait For Response From Player 2 "},"childOfId":41} 

 Player 1 01:36:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:36:41 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:36:41 $NEXT_STACK_ID:  

 Player 2 01:36:41 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":13,"text":"Player 1 Is About To Roll A Dice"} 

 Player 2 01:36:41 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[346,347]} 

 Player 2 01:36:41 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 01:36:41 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 1 01:36:41 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 1 01:36:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Resolve Roll Dice 7 "}} 

 Player 1 01:36:42 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":6,"creatorCardId":340,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"monsterCardWithRewardId":295,"playerCardIdToReward":340,"stackEffectType":7,"lable":"Player 1 Is Going To Get Keeper Head<Monster>'s Reward"},{"entityId":7,"creatorCardId":340,"stackEffectToLock":{"entityId":6,"creatorCardId":340,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"monsterCardWithRewardId":295,"playerCardIdToReward":340,"stackEffectType":7,"lable":"Player 1 Is Going To Get Keeper Head<Monster>'s Reward"},"hasLockingStackEffect":false,"numberRolled":3,"stackEffectType":11,"lable":"Player 1 Rolled 3"}]} 

 Player 1 01:36:42 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":340,"scopeIsPlayer":true,"index":9,"originStackId":7},"isAfterActivation":true,"index":9} 

 Player 1 01:36:42 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":340,"stackEffectToLock":{"entityId":6,"creatorCardId":340,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"monsterCardWithRewardId":295,"playerCardIdToReward":340,"stackEffectType":7,"lable":"Player 1 Is Going To Get Keeper Head<Monster>'s Reward"},"hasLockingStackEffect":false,"numberRolled":3,"stackEffectType":11,"lable":"Player 1 Rolled 3"}} 

 Player 1 01:36:42 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":6,"creatorCardId":340,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"monsterCardWithRewardId":295,"playerCardIdToReward":340,"stackEffectType":7,"lable":"Player 1 Is Going To Get Keeper Head<Monster>'s Reward"}]} 

 Player 1 01:36:42 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 01:36:42 $SHOW_STACK_EFFECT:  
{"effectId":7} 

 Player 2 01:36:42 $NEXT_STACK_ID:  

 Player 2 01:36:42 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":14,"text":"Player 1 Is About To Roll A Dice"} 

 Player 2 01:36:42 $NEXT_STACK_ID:  

 Player 2 01:36:42 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":15,"text":"Player 1 Is About To Roll A Dice"} 

 Player 2 01:36:42 $NEXT_STACK_ID:  

 Player 2 01:36:42 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":16,"text":"Player 1 Is About To Roll A Dice"} 

 Player 2 01:36:42 $NEXT_STACK_ID:  

 Player 2 01:36:42 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":17,"text":"Player 1 Is About To Roll A Dice"} 

 Player 1 01:36:44 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":7} 

 Player 1 01:36:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Remove After Resolve Roll Dice 7  "}} 

 Player 1 01:36:45 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":340,"stackEffectToLock":{"entityId":6,"creatorCardId":340,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"monsterCardWithRewardId":295,"playerCardIdToReward":340,"stackEffectType":7,"lable":"Player 1 Is Going To Get Keeper Head<Monster>'s Reward"},"hasLockingStackEffect":false,"numberRolled":3,"stackEffectType":11,"lable":"Player 1 Rolled 3"}} 

 Player 1 01:36:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Response Remove After Resolve Roll Dice 7"},"childOfId":46} 

 Player 1 01:36:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Wait For Response From Player 2 "},"childOfId":46} 

 Player 1 01:36:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:36:45 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:36:45 $NEXT_STACK_ID:  

 Player 2 01:36:45 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":18,"text":"Player 1 Is About To Roll A Dice"} 

 Player 2 01:36:45 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[346,347]} 

 Player 2 01:36:45 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 01:36:45 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 1 01:36:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Wait For Response From Player 1 "},"childOfId":46} 

 Player 1 01:36:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:36:45 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 1 01:36:45 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 1 01:36:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Resolve Monster Death Reward 6 "}} 

 Player 1 01:36:45 $SET_MONEY:  
{"playerId":1,"numOfCoins":8} 

 Player 1 01:36:45 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":5}],"result":null,"preventMethod":false,"methodScopeId":340,"scopeIsPlayer":true,"index":10,"originStackId":-1},"isAfterActivation":true,"index":10} 

 Player 1 01:36:45 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":295,"scopeIsPlayer":false,"index":11,"originStackId":6},"isAfterActivation":true,"index":11} 

 Player 1 01:36:45 $MOVE_CARD:  
{"moveIndex":8,"cardId":295,"placeID":355,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 01:36:45 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":295,"flipIfFlipped":true,"playerId":1} 

 Player 1 01:36:45 $MOVE_CARD_TO_PILE:  
{"type":2,"cardId":295} 

 Player 1 01:36:45 $REMOVE_FROM_PASSIVE_MANAGER:  
{"cardId":295} 

 Player 1 01:36:45 $REMOVE_MONSTER:  
{"holderId":2,"monsterId":295} 

 Player 1 01:36:45 $NEXT_STACK_ID:  

 Player 1 01:36:45 $ADD_TO_STACK:  
{"stackEffect":{"entityId":19,"creatorCardId":340,"slotType":2,"slotToFillId":2,"stackEffectType":10,"lable":"Refill holder2 Slot"}} 

 Player 1 01:36:45 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":19,"creatorCardId":340,"slotType":2,"slotToFillId":2,"stackEffectType":10,"lable":"Refill holder2 Slot"}} 

 Player 1 01:36:45 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 01:36:45 $SHOW_STACK_EFFECT:  
{"effectId":19} 

 Player 1 01:36:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Add Reffil Empty Monster Slot 19 "}} 

 Player 1 01:36:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:36:48 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":19,"creatorCardId":340,"slotType":2,"slotToFillId":2,"stackEffectType":10,"lable":"Refill holder2 Slot"}} 

 Player 1 01:36:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Response Adding Reffil Empty Monster Slot 19"},"childOfId":51} 

 Player 1 01:36:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Wait For Response From Player 1 "},"childOfId":51} 

 Player 1 01:36:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:36:48 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 1 01:36:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Wait For Response From Player 2 "},"childOfId":51} 

 Player 1 01:36:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:36:49 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:36:49 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[346,347]} 

 Player 2 01:36:49 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 01:36:49 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 1 01:36:49 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 1 01:36:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Resolve Reffil Empty Monster Slot 19 "}} 

 Player 1 01:36:49 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":6,"creatorCardId":340,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"monsterCardWithRewardId":295,"playerCardIdToReward":340,"stackEffectType":7,"lable":"Player 1 Is Going To Get Keeper Head<Monster>'s Reward"},{"entityId":19,"creatorCardId":340,"slotType":2,"slotToFillId":2,"stackEffectType":10,"lable":"Refill holder2 Slot"}]} 

 Player 1 01:36:49 $DRAW_CARD:  
{"deckType":2} 

 Player 1 01:36:49 $FLIP_CARD:  
{"cardId":272} 

 Player 1 01:36:49 $REGISTER_PASSIVE_ITEM:  
{"cardId":272} 

 Player 1 01:36:49 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"NEW_ACTIVE_MONSTER","args":[{"type":0,"number":272}],"result":null,"preventMethod":false,"methodScopeId":272,"scopeIsPlayer":false,"index":12,"originStackId":-1},"isAfterActivation":true,"index":12} 

 Player 1 01:36:49 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":272} 

 Player 1 01:36:49 $NEW_MONSTER_ON_PLACE:  
{"cardId":272,"monsterPlaceId":2} 

 Player 1 01:36:49 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":19,"creatorCardId":340,"slotType":2,"slotToFillId":2,"stackEffectType":10,"lable":"Refill holder2 Slot"}} 

 Player 1 01:36:49 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":6,"creatorCardId":340,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"monsterCardWithRewardId":295,"playerCardIdToReward":340,"stackEffectType":7,"lable":"Player 1 Is Going To Get Keeper Head<Monster>'s Reward"}]} 

 Player 1 01:36:49 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 01:36:49 $SHOW_STACK_EFFECT:  
{"effectId":19} 

 Player 2 01:36:49 $NEXT_STACK_ID:  

 Player 2 01:36:49 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":20,"text":"Player 1 Is About To Roll A Dice"} 

 Player 2 01:36:49 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"NEW_ACTIVE_MONSTER","args":[{"type":0,"number":272}],"result":null,"preventMethod":false,"methodScopeId":272,"scopeIsPlayer":false,"index":12,"originStackId":-1},"isAfterActivation":true,"index":12} 

 Player 2 01:36:49 $NEXT_STACK_ID:  

 Player 2 01:36:49 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":21,"text":"Player 1 Is About To Roll A Dice"} 

 Player 1 01:36:52 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":19} 

 Player 1 01:36:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":56,"_text":"Remove After Resolve Reffil Empty Monster Slot 19  "}} 

 Player 1 01:36:52 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":19,"creatorCardId":340,"slotType":2,"slotToFillId":2,"stackEffectType":10,"lable":"Refill holder2 Slot"}} 

 Player 1 01:36:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":57,"_text":"Response Remove After Resolve Reffil Empty Monster Slot 19"},"childOfId":56} 

 Player 1 01:36:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":58,"_text":"Wait For Response From Player 2 "},"childOfId":56} 

 Player 1 01:36:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:36:52 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:36:52 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[346,347]} 

 Player 2 01:36:52 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 01:36:52 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 1 01:36:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":59,"_text":"Wait For Response From Player 1 "},"childOfId":56} 

 Player 1 01:36:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:36:52 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 1 01:36:52 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 1 01:36:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":60,"_text":"Resolve Monster Death Reward 6 "}} 

 Player 1 01:36:52 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":340,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"monsterCardWithRewardId":295,"playerCardIdToReward":340,"stackEffectType":7,"lable":"Player 1 Is Going To Get Keeper Head<Monster>'s Reward"}} 

 Player 1 01:36:52 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 1 01:36:52 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 01:36:53 $SHOW_STACK_EFFECT:  
{"effectId":6} 

 Player 2 01:36:53 $NEXT_STACK_ID:  

 Player 2 01:36:53 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":22,"text":"Player 1 Is About To Roll A Dice"} 

 Player 1 01:36:55 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":6} 

 Player 1 01:36:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":61,"_text":"Remove After Resolve Monster Death Reward 6  "}} 

 Player 1 01:36:55 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":340,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"monsterCardWithRewardId":295,"playerCardIdToReward":340,"stackEffectType":7,"lable":"Player 1 Is Going To Get Keeper Head<Monster>'s Reward"}} 

 Player 1 01:36:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":62,"_text":"Response Remove After Resolve Monster Death Reward 6"},"childOfId":61} 

 Player 1 01:36:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":63,"_text":"Wait For Response From Player 1 "},"childOfId":61} 

 Player 1 01:36:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:36:55 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 1 01:36:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":64,"_text":"Wait For Response From Player 2 "},"childOfId":61} 

 Player 1 01:36:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:36:55 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:36:55 $NEXT_STACK_ID:  

 Player 2 01:36:55 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":23,"text":"Player 1 Is About To Roll A Dice"} 

 Player 2 01:36:56 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[346,347]} 

 Player 2 01:36:56 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 01:36:56 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 1 01:36:56 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 1 01:36:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":65,"_text":"Stack Was Emptied "}} 

 Player 1 01:36:56 $CLEAR_SE_VIS:  

 Player 1 01:37:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:37:02 $CLEAR_SE_VIS:  

 Player 1 01:37:02 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 1 01:37:02 $CLEAR_SE_VIS:  

 Player 1 01:37:03 $END_TURN:  

 Player 1 01:37:03 $SET_TURN:  
{"playerId":2} 

 Player 1 01:37:03 $START_TURN:  
{"playerId":2} 

 Player 2 01:37:03 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 01:37:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:37:03 $NEXT_STACK_ID:  

 Player 2 01:37:03 $ADD_TO_STACK:  
{"stackEffect":{"entityId":24,"creatorCardId":346,"turnPlayerCardId":346,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}} 

 Player 2 01:37:03 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":24,"creatorCardId":346,"turnPlayerCardId":346,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}} 

 Player 2 01:37:03 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 01:37:03 $SHOW_STACK_EFFECT:  
{"effectId":24} 

 Player 1 01:37:03 $STACK_EMPTIED:  
{"playerId":2} 

 Player 2 01:37:03 $CLEAR_SE_VIS:  

 Player 2 01:37:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":66,"_text":"Add Start Turn Loot Draw 24 "}} 

 Player 2 01:37:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:37:06 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":24,"creatorCardId":346,"turnPlayerCardId":346,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}} 

 Player 2 01:37:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":67,"_text":"Response Adding Start Turn Loot Draw 24"},"childOfId":66} 

 Player 2 01:37:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":68,"_text":"Wait For Response From Player 2 "},"childOfId":66} 

 Player 2 01:37:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:37:06 $ACTION_MASSAGE_REMOVE:  
{"id":68} 

 Player 2 01:37:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":69,"_text":"Wait For Response From Player 1 "},"childOfId":66} 

 Player 2 01:37:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 01:37:06 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 01:37:06 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[340,166]} 

 Player 1 01:37:06 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 01:37:06 $ACTION_MASSAGE_REMOVE:  
{"id":69} 

 Player 2 01:37:06 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 2 01:37:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":70,"_text":"Resolve Start Turn Loot Draw 24 "}} 

 Player 2 01:37:06 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":24,"creatorCardId":346,"turnPlayerCardId":346,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}]} 

 Player 2 01:37:06 $DRAW_CARD:  
{"deckType":1} 

 Player 2 01:37:06 $MOVE_CARD:  
{"moveIndex":9,"cardId":47,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 01:37:06 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":47,"flipIfFlipped":false,"playerId":2} 

 Player 2 01:37:06 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":47} 

 Player 2 01:37:06 $FLIP_CARD:  
{"cardId":47} 

 Player 2 01:37:06 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":47} 

 Player 2 01:37:06 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":47}],"result":null,"preventMethod":false,"methodScopeId":346,"scopeIsPlayer":true,"index":13,"originStackId":-1},"isAfterActivation":true,"index":13} 

 Player 2 01:37:07 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":24,"text":"Player 2 Has Drawn Loot For Start Turn"} 

 Player 2 01:37:07 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":24,"creatorCardId":346,"turnPlayerCardId":346,"stackEffectType":13,"lable":"Player 2 Has Drawn Loot For Start Turn"}} 

 Player 2 01:37:07 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 01:37:07 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 01:37:07 $SHOW_STACK_EFFECT:  
{"effectId":24} 

 Player 2 01:37:09 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":24} 

 Player 2 01:37:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":71,"_text":"Remove After Resolve Start Turn Loot Draw 24  "}} 

 Player 2 01:37:09 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":24,"creatorCardId":346,"turnPlayerCardId":346,"stackEffectType":13,"lable":"Player 2 Has Drawn Loot For Start Turn"}} 

 Player 2 01:37:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":72,"_text":"Response Remove After Resolve Start Turn Loot Draw 24"},"childOfId":71} 

 Player 2 01:37:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":73,"_text":"Wait For Response From Player 1 "},"childOfId":71} 

 Player 2 01:37:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 01:37:10 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 01:37:10 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[340,166]} 

 Player 1 01:37:10 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 01:37:10 $ACTION_MASSAGE_REMOVE:  
{"id":73} 

 Player 2 01:37:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":74,"_text":"Wait For Response From Player 2 "},"childOfId":71} 

 Player 2 01:37:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:37:10 $ACTION_MASSAGE_REMOVE:  
{"id":74} 

 Player 2 01:37:10 $ACTION_MASSAGE_REMOVE:  
{"id":72} 

 Player 2 01:37:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":75,"_text":"Stack Was Emptied "}} 

 Player 2 01:37:10 $CLEAR_SE_VIS:  

 Player 2 01:37:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:37:23 $CLEAR_SE_VIS:  

 Player 2 01:37:23 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 2 01:37:23 $CLEAR_SE_VIS:  

 Player 2 01:37:23 $END_TURN:  

 Player 2 01:37:23 $SET_TURN:  
{"playerId":1} 

 Player 2 01:37:23 $START_TURN:  
{"playerId":1} 

 Player 1 01:37:23 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 01:37:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:37:24 $NEXT_STACK_ID:  

 Player 1 01:37:24 $ADD_TO_STACK:  
{"stackEffect":{"entityId":25,"creatorCardId":340,"turnPlayerCardId":340,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"}} 

 Player 1 01:37:24 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":25,"creatorCardId":340,"turnPlayerCardId":340,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"}} 

 Player 1 01:37:24 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 01:37:24 $SHOW_STACK_EFFECT:  
{"effectId":25} 

 Player 2 01:37:24 $STACK_EMPTIED:  
{"playerId":1} 

 Player 1 01:37:24 $CLEAR_SE_VIS:  

 Player 1 01:37:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":76,"_text":"Add Start Turn Loot Draw 25 "}} 

 Player 1 01:37:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:37:27 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":25,"creatorCardId":340,"turnPlayerCardId":340,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"}} 

 Player 1 01:37:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":77,"_text":"Response Adding Start Turn Loot Draw 25"},"childOfId":76} 

 Player 1 01:37:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":78,"_text":"Wait For Response From Player 1 "},"childOfId":76} 

 Player 1 01:37:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:37:27 $ACTION_MASSAGE_REMOVE:  
{"id":78} 

 Player 1 01:37:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":79,"_text":"Wait For Response From Player 2 "},"childOfId":76} 

 Player 1 01:37:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:37:27 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:37:27 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[346,347]} 

 Player 2 01:37:27 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 01:37:27 $ACTION_MASSAGE_REMOVE:  
{"id":79} 

 Player 1 01:37:27 $ACTION_MASSAGE_REMOVE:  
{"id":77} 

 Player 1 01:37:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":80,"_text":"Resolve Start Turn Loot Draw 25 "}} 

 Player 1 01:37:27 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":25,"creatorCardId":340,"turnPlayerCardId":340,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"}]} 

 Player 1 01:37:27 $DRAW_CARD:  
{"deckType":1} 

 Player 1 01:37:27 $MOVE_CARD:  
{"moveIndex":10,"cardId":45,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 01:37:27 $MOVE_CARD_END:  
{"moveIndex":10,"cardId":45,"flipIfFlipped":false,"playerId":1} 

 Player 1 01:37:27 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":45} 

 Player 1 01:37:27 $FLIP_CARD:  
{"cardId":45} 

 Player 1 01:37:27 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":45} 

 Player 1 01:37:27 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":45}],"result":null,"preventMethod":false,"methodScopeId":340,"scopeIsPlayer":true,"index":13,"originStackId":-1},"isAfterActivation":true,"index":13} 

 Player 1 01:37:27 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":25,"text":"Player 1 Has Drawn Loot For Start Turn"} 

 Player 1 01:37:28 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":25,"creatorCardId":340,"turnPlayerCardId":340,"stackEffectType":13,"lable":"Player 1 Has Drawn Loot For Start Turn"}} 

 Player 1 01:37:28 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 1 01:37:28 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 01:37:28 $SHOW_STACK_EFFECT:  
{"effectId":25} 

 Player 1 01:37:30 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":25} 

 Player 1 01:37:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":81,"_text":"Remove After Resolve Start Turn Loot Draw 25  "}} 

 Player 1 01:37:30 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":25,"creatorCardId":340,"turnPlayerCardId":340,"stackEffectType":13,"lable":"Player 1 Has Drawn Loot For Start Turn"}} 

 Player 1 01:37:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":82,"_text":"Response Remove After Resolve Start Turn Loot Draw 25"},"childOfId":81} 

 Player 1 01:37:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":83,"_text":"Wait For Response From Player 2 "},"childOfId":81} 

 Player 1 01:37:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:37:31 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:37:31 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[346,347]} 

 Player 2 01:37:31 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 01:37:31 $ACTION_MASSAGE_REMOVE:  
{"id":83} 

 Player 1 01:37:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":84,"_text":"Wait For Response From Player 1 "},"childOfId":81} 

 Player 1 01:37:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:37:31 $ACTION_MASSAGE_REMOVE:  
{"id":84} 

 Player 1 01:37:31 $ACTION_MASSAGE_REMOVE:  
{"id":82} 

 Player 1 01:37:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":85,"_text":"Stack Was Emptied "}} 

 Player 1 01:37:31 $CLEAR_SE_VIS:  

 Player 2 01:40:29 $MATCH: 