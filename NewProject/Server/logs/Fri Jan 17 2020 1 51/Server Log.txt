Start Log 

 Player 1 01:51:30 $MATCH:  

 Player 1 01:51:30 $START_GAME:  

 Player 2 01:51:30 $MOVE_TO_TABLE:  

 Player 1 01:51:30 $MOVE_TO_TABLE:  

 Player 2 01:51:39 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 1 01:51:39 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 01:51:39 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":291,"itemCardId":292} 

 Player 2 01:51:39 $CHOOSE_FOR_EDEN:  
{"playerId":2,"originPlayerId":2} 

 Player 1 01:51:39 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":292}],"result":true,"preventMethod":false,"methodScopeId":291,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 01:51:39 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[194,207,191,146,192,172,183,204,178,174,210,179,208,184,186,182,170,211,189,157,206,151,193,160,198,175,209,200,166,150,161,181,197,214,185,177,167,203,218,147,148,153,155,219,168,159,212,145,213,196,199,163,202,187,154,190,195,158,205,152,156,149,180,215,162,173,176,216,220,165,201,164,169,188,217,171]} 

 Player 2 01:51:45 $EDEN_CHOSEN:  
{"cardId":194,"playerId":2} 

 Player 2 01:51:45 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[207,191,146,192,172,183,204,178,174,210,179,208,184,186,182,170,211,189,157,206,151,193,160,198,175,209,200,166,150,161,181,197,214,185,177,167,203,218,147,148,153,155,219,168,159,212,145,213,196,199,163,202,187,154,190,195,158,205,152,156,149,180,215,162,173,176,216,220,165,201,164,169,188,217,171]} 

 Player 2 01:51:45 $FLIP_CARD:  
{"cardId":194} 

 Player 2 01:51:45 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":194}],"result":true,"preventMethod":false,"methodScopeId":283,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 01:51:45 $REGISTER_PASSIVE_ITEM:  
{"cardId":194} 

 Player 2 01:51:45 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":283,"itemCardId":194} 

 Player 2 01:51:45 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[8,88,121,54,77,108,84,126,105,110,49,69,76,113,46,38,30,136,75,117,101,20,85,115,53,107,74,37,134,124,71,59,16,120,87,41,112,21,29,12,27,44,79,36,90,92,81,137,135,48,73,39,61,82,14,13,114,64,33,128,55,10,24,68,42,7,65,91,34,97,132,133,57,129,63,127,19,9,122,28,123,86,130,47,118,18,17,142,104,25,35,52,23,109,140,141,51,106,93,103,60,131,56,15,95,78,98,40,80,125,45,111,58,62,89,72,100,67,119,43,99,94,139,83,50,22,26,116,102,32,70,11,66,31,138,96]} 

 Player 2 01:51:45 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[255,271,260,254,227,231,266,243,240,249,228,241,224,239,276,225,263,236,274,268,273,248,237,257,259,253,230,262,265,234,229,261,242,250,235,247,232,251,246,269,223,244,264,267,258,275,252,238,233,272,245,226,270,256]} 

 Player 2 01:51:45 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[191,160,187,173,162,212,197,201,200,152,202,198,166,211,179,184,146,163,153,161,183,213,188,210,220,169,185,203,205,150,218,219,214,192,190,165,199,217,193,189,216,145,174,154,215,172,148,155,195,147,170,176,204,159,156,181,164,208,171,186,206,209,182,167,180,157,177,207,175,149,178,151,196,168,158]} 

 Player 2 01:51:45 $DRAW_CARD:  
{"deckType":5} 

 Player 2 01:51:45 $FLIP_CARD:  
{"cardId":158} 

 Player 2 01:51:45 $ADD_STORE_CARD:  
{"cardId":158} 

 Player 2 01:51:45 $DRAW_CARD:  
{"deckType":5} 

 Player 2 01:51:45 $FLIP_CARD:  
{"cardId":168} 

 Player 2 01:51:45 $ADD_STORE_CARD:  
{"cardId":168} 

 Player 2 01:51:45 $DRAW_CARD:  
{"deckType":2} 

 Player 2 01:51:45 $FLIP_CARD:  
{"cardId":256} 

 Player 2 01:51:45 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":256} 

 Player 2 01:51:45 $NEW_MONSTER_ON_PLACE:  
{"cardId":256,"monsterPlaceId":1} 

 Player 2 01:51:45 $DRAW_CARD:  
{"deckType":2} 

 Player 2 01:51:45 $FLIP_CARD:  
{"cardId":270} 

 Player 2 01:51:45 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":270} 

 Player 2 01:51:45 $NEW_MONSTER_ON_PLACE:  
{"cardId":270,"monsterPlaceId":2} 

 Player 2 01:51:45 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 01:51:45 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":291,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 01:51:45 $DRAW_CARD:  
{"deckType":1} 

 Player 2 01:51:45 $MOVE_CARD:  
{"moveIndex":1,"cardId":96,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 01:51:46 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":96,"flipIfFlipped":false,"playerId":2} 

 Player 2 01:51:46 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":96} 

 Player 2 01:51:46 $FLIP_CARD:  
{"cardId":96} 

 Player 2 01:51:46 $FLIP_CARD:  
{"cardId":96} 

 Player 2 01:51:46 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":96} 

 Player 2 01:51:46 $DRAW_CARD:  
{"deckType":1} 

 Player 2 01:51:46 $MOVE_CARD:  
{"moveIndex":2,"cardId":138,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 01:51:46 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":138,"flipIfFlipped":false,"playerId":2} 

 Player 2 01:51:46 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":138} 

 Player 2 01:51:46 $FLIP_CARD:  
{"cardId":138} 

 Player 2 01:51:46 $FLIP_CARD:  
{"cardId":138} 

 Player 2 01:51:46 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":138} 

 Player 2 01:51:46 $DRAW_CARD:  
{"deckType":1} 

 Player 2 01:51:46 $MOVE_CARD:  
{"moveIndex":3,"cardId":31,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 01:51:47 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":31,"flipIfFlipped":false,"playerId":2} 

 Player 2 01:51:47 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":31} 

 Player 2 01:51:47 $FLIP_CARD:  
{"cardId":31} 

 Player 2 01:51:47 $FLIP_CARD:  
{"cardId":31} 

 Player 2 01:51:47 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":31} 

 Player 2 01:51:47 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 01:51:47 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":283,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 01:51:47 $DRAW_CARD:  
{"deckType":1} 

 Player 2 01:51:47 $MOVE_CARD:  
{"moveIndex":4,"cardId":66,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 01:51:47 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":66,"flipIfFlipped":false,"playerId":2} 

 Player 2 01:51:47 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":66} 

 Player 2 01:51:47 $FLIP_CARD:  
{"cardId":66} 

 Player 2 01:51:47 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":66} 

 Player 2 01:51:47 $DRAW_CARD:  
{"deckType":1} 

 Player 2 01:51:47 $MOVE_CARD:  
{"moveIndex":5,"cardId":11,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 01:51:48 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":11,"flipIfFlipped":false,"playerId":2} 

 Player 2 01:51:48 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":11} 

 Player 2 01:51:48 $FLIP_CARD:  
{"cardId":11} 

 Player 2 01:51:48 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":11} 

 Player 2 01:51:48 $DRAW_CARD:  
{"deckType":1} 

 Player 2 01:51:48 $MOVE_CARD:  
{"moveIndex":6,"cardId":70,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 01:51:48 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":70,"flipIfFlipped":false,"playerId":2} 

 Player 2 01:51:48 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":70} 

 Player 2 01:51:48 $FLIP_CARD:  
{"cardId":70} 

 Player 2 01:51:48 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":70} 

 Player 2 01:51:48 $GAME_HAS_STARTED:  

 Player 2 01:51:48 $SET_TURN:  
{"playerId":1} 

 Player 2 01:51:48 $START_TURN:  
{"playerId":1} 

 Player 2 01:51:48 $UPDATE_ACTIONS:  

 Player 1 01:51:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:51:48 $NEXT_STACK_ID:  

 Player 1 01:51:48 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:51:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 01:51:48 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":291,"turnPlayerCardId":291,"stackEffectType":13}} 

 Player 1 01:51:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 01:51:49 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":291,"turnPlayerCardId":291,"stackEffectType":13}} 

 Player 1 01:51:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 1 01:51:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:51:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 01:51:49 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":291,"turnPlayerCardId":291,"stackEffectType":13}} 

 Player 1 01:51:49 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 01:51:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 1 01:51:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 1 01:51:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:51:49 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 01:51:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 1 01:51:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:51:49 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:51:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:51:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:51:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 01:51:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 01:51:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 01:51:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 01:51:49 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 01:51:49 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 01:51:49 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 01:51:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 1 01:51:49 $DRAW_CARD:  
{"deckType":1} 

 Player 1 01:51:49 $MOVE_CARD:  
{"moveIndex":7,"cardId":32,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 01:51:49 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":32,"flipIfFlipped":false,"playerId":1} 

 Player 1 01:51:49 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":32} 

 Player 1 01:51:49 $FLIP_CARD:  
{"cardId":32} 

 Player 1 01:51:50 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":32} 

 Player 1 01:51:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 01:51:50 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":291,"turnPlayerCardId":291,"stackEffectType":13}} 

 Player 1 01:51:50 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 01:51:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:51:50 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":291,"turnPlayerCardId":291,"stackEffectType":13}} 

 Player 1 01:51:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 1 01:51:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:51:50 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":291,"turnPlayerCardId":291,"stackEffectType":13}} 

 Player 1 01:51:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 1 01:51:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 1 01:51:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:51:50 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:51:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 01:51:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 01:51:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 01:51:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 01:51:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 01:51:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 01:51:50 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 01:51:50 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 1 01:51:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 1 01:51:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:51:50 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 1 01:51:50 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 1 01:51:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 1 01:51:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:51:50 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 01:51:50 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 01:51:50 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 01:51:50 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 01:51:50 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 01:51:50 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 01:51:50 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 01:51:52 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 01:51:52 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 01:51:57 $MOVE_CARD:  
{"moveIndex":8,"cardId":161,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 

 Player 1 01:51:57 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":161,"flipIfFlipped":true,"playerId":2} 

 Player 2 01:51:57 $REGISTER_PASSIVE_ITEM:  
{"cardId":161} 

 Player 2 01:51:57 $MOVE_CARD:  
{"moveIndex":9,"cardId":161,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 

 Player 1 01:51:58 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":161,"flipIfFlipped":true,"playerId":2} 

 Player 2 01:51:58 $ADD_AN_ITEM:  
{"playerId":2,"cardId":161,"isReward":true} 

 Player 2 01:51:58 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":161}],"result":true,"preventMethod":false,"methodScopeId":283,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 1 01:52:06 $SHOW_DECISION:  
{"startCardId":291,"endCardId":270} 

 Player 1 01:52:09 $NEXT_STACK_ID:  

 Player 1 01:52:09 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:52:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on The Hush"} 

 Player 1 01:52:09 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":291,"attackingPlayerCardId":291,"idOfCardBeingAttacked":270,"stackEffectType":4}} 

 Player 1 01:52:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on The Hush"} 

 Player 1 01:52:09 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":291,"attackingPlayerCardId":291,"idOfCardBeingAttacked":270,"stackEffectType":4}} 

 Player 1 01:52:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add DeclareAttack 2 "}} 

 Player 1 01:52:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:52:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on The Hush"} 

 Player 1 01:52:09 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":291,"attackingPlayerCardId":291,"idOfCardBeingAttacked":270,"stackEffectType":4}} 

 Player 1 01:52:09 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 01:52:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding DeclareAttack 2"},"childOfId":10} 

 Player 1 01:52:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 1 01:52:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:52:10 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 1 01:52:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 1 01:52:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:52:10 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:52:10 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:52:10 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:52:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on The Hush"} 

 Player 2 01:52:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on The Hush"} 

 Player 2 01:52:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on The Hush"} 

 Player 2 01:52:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on The Hush"} 

 Player 2 01:52:10 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 01:52:10 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 1 01:52:10 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 1 01:52:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve DeclareAttack 2 "}} 

 Player 1 01:52:10 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":270,"particleType":5} 

 Player 1 01:52:10 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":291,"scopeIsPlayer":true,"index":2,"originStackId":2},"isAfterActivation":true,"index":2} 

 Player 1 01:52:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on The Hush"} 

 Player 1 01:52:10 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":291,"attackingPlayerCardId":291,"idOfCardBeingAttacked":270,"stackEffectType":4}} 

 Player 1 01:52:10 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 01:52:10 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:52:10 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":291,"attackingPlayerCardId":291,"idOfCardBeingAttacked":270,"stackEffectType":4}} 

 Player 1 01:52:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve DeclareAttack 2  "}} 

 Player 1 01:52:10 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:52:10 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":291,"attackingPlayerCardId":291,"idOfCardBeingAttacked":270,"stackEffectType":4}} 

 Player 1 01:52:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve DeclareAttack 2"},"childOfId":15} 

 Player 1 01:52:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 1 01:52:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:52:10 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:52:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on The Hush"} 

 Player 2 01:52:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on The Hush"} 

 Player 2 01:52:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on The Hush"} 

 Player 2 01:52:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on The Hush"} 

 Player 2 01:52:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on The Hush"} 

 Player 2 01:52:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on The Hush"} 

 Player 2 01:52:11 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 01:52:11 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 1 01:52:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 1 01:52:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:52:11 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 1 01:52:11 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 1 01:52:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 1 01:52:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:52:11 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 01:52:11 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 01:52:11 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 01:52:11 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 01:52:11 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 01:52:11 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 01:52:11 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 01:52:11 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 01:52:11 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 01:52:11 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 01:52:11 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 01:52:12 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 01:52:13 $NEXT_STACK_ID:  

 Player 1 01:52:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:52:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against The Hush<Monster>"} 

 Player 1 01:52:13 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":291,"rollingPlayerCardId":291,"stackEffectType":2,"attackedMonsterCardId":270}} 

 Player 1 01:52:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against The Hush<Monster>"} 

 Player 1 01:52:13 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":291,"rollingPlayerCardId":291,"stackEffectType":2,"attackedMonsterCardId":270}} 

 Player 1 01:52:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add AttackRoll 3 "}} 

 Player 1 01:52:13 $ROLL_DICE:  
{"playerId":1} 

 Player 1 01:52:13 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 01:52:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:52:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:52:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against The Hush<Monster>"} 

 Player 2 01:52:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against The Hush<Monster>"} 

 Player 1 01:52:15 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":4} 

 Player 1 01:52:15 $UPDATE_STACK_VIS:  
{"stackId":3,"text":"player rolled 4 vs The Hush<Monster>"} 

 Player 1 01:52:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs The Hush<Monster>"} 

 Player 1 01:52:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:52:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs The Hush<Monster>"} 

 Player 1 01:52:15 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":291,"numberRolled":4,"rollingPlayerCardId":291,"stackEffectType":2,"attackedMonsterCardId":270}} 

 Player 1 01:52:15 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 01:52:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding AttackRoll 3"},"childOfId":20} 

 Player 1 01:52:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 1 01:52:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:52:15 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 1 01:52:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 1 01:52:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:52:15 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:52:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against The Hush<Monster>"} 

 Player 2 01:52:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against The Hush<Monster>"} 

 Player 2 01:52:15 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 01:52:15 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 1 01:52:15 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 1 01:52:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve AttackRoll 3 "}} 

 Player 1 01:52:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Added 0 to original roll"}} 

 Player 1 01:52:15 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":3},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":291,"scopeIsPlayer":true,"index":1,"originStackId":3},"isAfterActivation":false,"index":1} 

 Player 1 01:52:15 $NEXT_STACK_ID:  

 Player 1 01:52:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs The Hush<Monster>"} 

 Player 1 01:52:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs The Hush<Monster> \n2:Activate Dead Bird effect ChainEffects<ChainEffects>"} 

 Player 1 01:52:16 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":283,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":161,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":161,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 01:52:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs The Hush<Monster> \n2:Activate Dead Bird effect ChainEffects<ChainEffects>"} 

 Player 1 01:52:16 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":283,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":161,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":161,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 01:52:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Add ActivatePassiveEffect 4 "}} 

 Player 1 01:52:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs The Hush<Monster> \n2:Activate Dead Bird effect ChainEffects<ChainEffects>"} 

 Player 1 01:52:16 $PUT_ON_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":283,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":161,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":161,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14},"playerId":2,"originPlayerId":1} 

 Player 2 01:52:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against The Hush<Monster>"} 

 Player 2 01:52:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against The Hush<Monster>"} 

 Player 2 01:52:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against The Hush<Monster> \n2:Activate Dead Bird "} 

 Player 2 01:52:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against The Hush<Monster> \n2:Activate Dead Bird "} 

 Player 2 01:52:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against The Hush<Monster> \n2:Activate Dead Bird "} 

 Player 2 01:52:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against The Hush<Monster> \n2:Activate Dead Bird "} 

 Player 2 01:52:16 $LOG_ERROR:  
{"message":"\"no MetaIndex\"","stack":"\"Error: no MetaIndex\\n    at GetTargetFromPassiveMeta.collectData (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/DataCollector/GetTargetFromPassiveMeta.js:34:19)\\n    at CardEffect.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/CardEffect.js:326:60)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\\n    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\\n    at new Promise (<anonymous>)\\n    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\\n    at CardEffect.collectEffectData (http://localhost:7456/preview-scripts/assets/Script/Entites/CardEffect.js:302:16)\\n    at ChainCollector.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/DataCollector/ChainCollector.js:42:128)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\""} 
//////Error From Player 2////
  

 Player 2 01:52:16 $LOG_ERROR:  
//////Error From Player 2////

 "\"no MetaIndex\""

 + "\"Error: no MetaIndex\
    at GetTargetFromPassiveMeta.collectData (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/DataCollector/GetTargetFromPassiveMeta.js:34:19)\
    at CardEffect.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/CardEffect.js:326:60)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\
    at new Promise (<anonymous>)\
    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\
    at CardEffect.collectEffectData (http://localhost:7456/preview-scripts/assets/Script/Entites/CardEffect.js:302:16)\
    at ChainCollector.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/DataCollector/ChainCollector.js:42:128)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\""

////// 
//////Error From Player 2////

 "\"no MetaIndex\""

 + "\"Error: no MetaIndex\
    at GetTargetFromPassiveMeta.collectData (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/DataCollector/GetTargetFromPassiveMeta.js:34:19)\
    at CardEffect.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/CardEffect.js:326:60)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\
    at new Promise (<anonymous>)\
    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\
    at CardEffect.collectEffectData (http://localhost:7456/preview-scripts/assets/Script/Entites/CardEffect.js:302:16)\
    at ChainCollector.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/DataCollector/ChainCollector.js:42:128)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\""

////// 

 Player 2 01:52:16 $LOG_ERROR:  
{"message":"\"no MetaIndex\"","stack":"\"Error: no MetaIndex\\n    at GetTargetFromPassiveMeta.collectData (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/DataCollector/GetTargetFromPassiveMeta.js:34:19)\\n    at ChooseFromTargetCard.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/DataCollector/ChooseFromTargetCard.js:57:70)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\\n    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\\n    at new Promise (<anonymous>)\\n    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\\n    at ChooseFromTargetCard.collectData (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/DataCollector/ChooseFromTargetCard.js:46:16)\\n    at CardEffect.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/CardEffect.js:326:60)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\""} 
//////Error From Player 2////
  

 Player 2 01:52:16 $LOG_ERROR:  
//////Error From Player 2////

 "\"no MetaIndex\""

 + "\"Error: no MetaIndex\
    at GetTargetFromPassiveMeta.collectData (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/DataCollector/GetTargetFromPassiveMeta.js:34:19)\
    at ChooseFromTargetCard.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/DataCollector/ChooseFromTargetCard.js:57:70)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\
    at new Promise (<anonymous>)\
    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\
    at ChooseFromTargetCard.collectData (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/DataCollector/ChooseFromTargetCard.js:46:16)\
    at CardEffect.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/CardEffect.js:326:60)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\""

////// 
//////Error From Player 2////

 "\"no MetaIndex\""

 + "\"Error: no MetaIndex\
    at GetTargetFromPassiveMeta.collectData (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/DataCollector/GetTargetFromPassiveMeta.js:34:19)\
    at ChooseFromTargetCard.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/DataCollector/ChooseFromTargetCard.js:57:70)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\
    at new Promise (<anonymous>)\
    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\
    at ChooseFromTargetCard.collectData (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/DataCollector/ChooseFromTargetCard.js:46:16)\
    at CardEffect.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/CardEffect.js:326:60)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\""

////// 

 Player 2 01:52:16 $LOG_ERROR:  
{"message":"\"Cannot read property 'getComponent' of undefined\"","stack":"\"TypeError: Cannot read property 'getComponent' of undefined\\n    at http://localhost:7456/preview-scripts/assets/Script/Managers/DataInterpreter.js:159:56\\n    at Array.map (<anonymous>)\\n    at Function.DataInterpreter.convertToServerData (http://localhost:7456/preview-scripts/assets/Script/Managers/DataInterpreter.js:152:75)\\n    at CardEffect.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/CardEffect.js:362:62)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.throw (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\\n    at rejected (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89794:36)\""} 
//////Error From Player 2////
  

 Player 2 01:52:16 $LOG_ERROR:  
//////Error From Player 2////

 "\"Cannot read property 'getComponent' of undefined\""

 + "\"TypeError: Cannot read property 'getComponent' of undefined\
    at http://localhost:7456/preview-scripts/assets/Script/Managers/DataInterpreter.js:159:56\
    at Array.map (<anonymous>)\
    at Function.DataInterpreter.convertToServerData (http://localhost:7456/preview-scripts/assets/Script/Managers/DataInterpreter.js:152:75)\
    at CardEffect.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/CardEffect.js:362:62)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.throw (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at rejected (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89794:36)\""

////// 
//////Error From Player 2////

 "\"Cannot read property 'getComponent' of undefined\""

 + "\"TypeError: Cannot read property 'getComponent' of undefined\
    at http://localhost:7456/preview-scripts/assets/Script/Managers/DataInterpreter.js:159:56\
    at Array.map (<anonymous>)\
    at Function.DataInterpreter.convertToServerData (http://localhost:7456/preview-scripts/assets/Script/Managers/DataInterpreter.js:152:75)\
    at CardEffect.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/CardEffect.js:362:62)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.throw (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at rejected (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89794:36)\""

////// 

 Player 1 01:52:18 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 01:56:48 $MATCH: 