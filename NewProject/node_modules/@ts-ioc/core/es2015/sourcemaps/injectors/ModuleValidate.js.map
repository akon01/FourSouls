{"version":3,"sources":["injectors/ModuleValidate.ts"],"names":[],"mappings":";;AAAA,uDAA+E;AAE/E,oCAAsD;AACtD,kCAAsD;AAEtD;;;;;;;GAOG;AACH,MAAa,cAAc;IACvB;IAEA,CAAC;IAED,KAAK,CAAC,IAAe;QACjB,IAAI,CAAC,eAAO,CAAC,IAAI,CAAC,EAAE;YAChB,OAAO,KAAK,CAAC;SAChB;QAED,IAAI,SAAS,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QACpC,IAAI,gBAAQ,CAAC,SAAS,CAAC,EAAE;YACrB,OAAO,0BAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;SAC/C;aAAM,IAAI,eAAO,CAAC,SAAS,CAAC,EAAE;YAC3B,OAAO,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,0BAAmB,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;SAC5D;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,YAAY;QACR,OAAO,IAAI,CAAC;IAChB,CAAC;IAEmB,MAAM,CAAC,iBAAiB;QACpB,OAAO,EAAC,MAAM,EAAC,gBAAgB,EAAC,QAAQ,EAAC,EAAC,aAAa,EAAC,EAAE,EAAC,OAAO,EAAC,CAAC,MAAM,CAAC,EAAC,cAAc,EAAC,EAAE,EAAC,EAAC,CAAC;IACpG,CAAC;CACL;AA1BpB,wCA0BoB;AAEpB;;GAEG;AACU,QAAA,yBAAyB,GAAG,IAAI,2CAAyB,CAAC,aAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC1F;;;;;;;GAOG;AACH,MAAa,oBAAqB,SAAQ,cAAc;IACpD,YAAY;QACR,OAAO,aAAM,CAAC,QAAQ,EAAE,CAAC;IAC7B,CAAC;IAEmB,MAAM,CAAC,iBAAiB;QACpB,OAAO,EAAC,MAAM,EAAC,sBAAsB,EAAC,QAAQ,EAAC,EAAC,cAAc,EAAC,EAAE,EAAC,EAAC,CAAC;IACxE,CAAC;CACL;AARpB,oDAQoB","file":"../../injectors/ModuleValidate.js","sourcesContent":["import { IModuleValidate, InjectModuleValidateToken } from './IModuleValidate';\r\nimport { Type } from '../types';\r\nimport { isClass, isString, isArray } from '../utils';\r\nimport { hasOwnClassMetadata, IocExt } from '../core';\r\n\r\n/**\r\n * base module validate.\r\n *\r\n * @export\r\n * @abstract\r\n * @class BaseModuelValidate\r\n * @implements {IModuleValidate}\r\n */\r\nexport class ModuelValidate implements IModuleValidate {\r\n    constructor() {\r\n\r\n    }\r\n\r\n    valid(type: Type<any>): boolean {\r\n        if (!isClass(type)) {\r\n            return false;\r\n        }\r\n\r\n        let decorator = this.getDecorator();\r\n        if (isString(decorator)) {\r\n            return hasOwnClassMetadata(decorator, type);\r\n        } else if (isArray(decorator)) {\r\n            return decorator.some(d => hasOwnClassMetadata(d, type));\r\n        }\r\n        return true;\r\n    }\r\n\r\n    getDecorator(): string | string[] {\r\n        return null;\r\n    }\r\n\n                        static getClassAnnations():any  {\n                            return {\"name\":\"ModuelValidate\",\"params\":{\"constructor\":[],\"valid\":[\"type\"],\"getDecorator\":[]}};\n                        }\n                   }\r\n\r\n/**\r\n * IocExt module validate token.\r\n */\r\nexport const IocExtModuleValidateToken = new InjectModuleValidateToken(IocExt.toString());\r\n/**\r\n * IocExt module validate.\r\n *\r\n * @export\r\n * @class IocExtModuleValidate\r\n * @extends {ModuelValidate}\r\n * @implements {IModuleValidate}\r\n */\r\nexport class IocExtModuleValidate extends ModuelValidate implements IModuleValidate {\r\n    getDecorator(): string | string[] {\r\n        return IocExt.toString();\r\n    }\r\n\n                        static getClassAnnations():any  {\n                            return {\"name\":\"IocExtModuleValidate\",\"params\":{\"getDecorator\":[]}};\n                        }\n                   }\r\n"]}