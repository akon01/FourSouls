Start Log 
 Player 1 19:05:25 $START_GAME:  
 Player 1 19:05:25 $MOVE_TO_TABLE:  
 Player 1 19:05:32 $FINISH_LOAD:  

 {"id":1,"turnPlayerId":2} 
 Player 1 19:05:34 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":292}],"result":true,"preventMethod":false,"methodScopeId":291,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 1 19:05:34 $MOVE_CARD_END:  

 {"moveIndex":1,"cardId":34,"flipIfFlipped":false,"playerId":2} 
 Player 1 19:05:35 $MOVE_CARD_END:  

 {"moveIndex":2,"cardId":70,"flipIfFlipped":false,"playerId":2} 
 Player 1 19:05:35 $MOVE_CARD_END:  

 {"moveIndex":3,"cardId":68,"flipIfFlipped":false,"playerId":2} 
 Player 1 19:05:36 $MOVE_CARD_END:  

 {"moveIndex":4,"cardId":122,"flipIfFlipped":false,"playerId":2} 
 Player 1 19:05:37 $MOVE_CARD_END:  

 {"moveIndex":5,"cardId":140,"flipIfFlipped":false,"playerId":2} 
 Player 1 19:05:37 $MOVE_CARD_END:  

 {"moveIndex":6,"cardId":19,"flipIfFlipped":false,"playerId":2} 
 Player 1 19:05:38 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 19:05:38 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 19:05:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 19:05:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 19:05:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 19:05:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 19:05:38 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 19:05:39 $MOVE_CARD_END:  

 {"moveIndex":7,"cardId":90,"flipIfFlipped":false,"playerId":2} 
 Player 1 19:05:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 19:05:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 19:05:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 19:05:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 19:05:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 19:05:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 19:05:40 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 19:05:48 $SET_MONEY:  

 {"playerId":1,"numOfCoins":10} 
 Player 1 19:05:48 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":7}],"result":null,"preventMethod":false,"methodScopeId":291,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 1 19:05:50 $STACK_EMPTIED:  

 {"playerId":2} 
 Player 1 19:05:50 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 19:05:50 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 1 19:05:50 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 1 19:05:50 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 1 19:05:50 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 1 19:05:50 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 1 19:05:50 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 1 19:05:50 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 1 19:05:50 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 19:05:50 $NEXT_STACK_ID:  
 Player 1 19:05:50 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 19:05:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 19:05:51 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":291,"turnPlayerCardId":291,"stackEffectType":13}} 
 Player 1 19:05:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 19:05:51 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":2,"creatorCardId":291,"turnPlayerCardId":291,"stackEffectType":13}} 
 Player 1 19:05:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":10,"_text":"Add StartTurnLoot 2 "}} 
 Player 1 19:05:51 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 19:05:51 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 1 19:05:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 19:05:51 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":291,"turnPlayerCardId":291,"stackEffectType":13}} 
 Player 1 19:05:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":11,"_text":"Response Adding StartTurnLoot 2"},"childOfId":10} 
 Player 1 19:05:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 
 Player 1 19:05:51 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 19:05:51 $ACTION_MASSAGE_REMOVE:  

 {"id":12} 
 Player 1 19:05:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 
 Player 1 19:05:51 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 19:05:51 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 19:05:51 $ACTION_MASSAGE_REMOVE:  

 {"id":13} 
 Player 1 19:05:51 $ACTION_MASSAGE_REMOVE:  

 {"id":11} 
 Player 1 19:05:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":14,"_text":"Resolve StartTurnLoot 2 "}} 
 Player 1 19:05:51 $DRAW_CARD:  

 {"deckType":1} 
 Player 1 19:05:51 $MOVE_CARD:  

 {"moveIndex":8,"cardId":116,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 1 19:05:52 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":116} 
 Player 1 19:05:52 $FLIP_CARD:  

 {"cardId":116} 
 Player 1 19:05:52 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":116} 
 Player 1 19:05:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 19:05:52 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":291,"turnPlayerCardId":291,"stackEffectType":13}} 
 Player 1 19:05:52 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 1 19:05:52 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 19:05:52 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":2,"creatorCardId":291,"turnPlayerCardId":291,"stackEffectType":13}} 
 Player 1 19:05:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":15,"_text":"Remove After Resolve StartTurnLoot 2  "}} 
 Player 1 19:05:52 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 19:05:52 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":291,"turnPlayerCardId":291,"stackEffectType":13}} 
 Player 1 19:05:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":16,"_text":"Response Remove After Resolve StartTurnLoot 2"},"childOfId":15} 
 Player 1 19:05:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 
 Player 1 19:05:52 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 19:05:52 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 19:05:52 $ACTION_MASSAGE_REMOVE:  

 {"id":17} 
 Player 1 19:05:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 
 Player 1 19:05:52 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 19:05:52 $ACTION_MASSAGE_REMOVE:  

 {"id":18} 
 Player 1 19:05:52 $ACTION_MASSAGE_REMOVE:  

 {"id":16} 
 Player 1 19:05:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":19,"_text":"Stack Was Emptied "}} 
 Player 1 19:05:52 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 19:05:53 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 1 19:05:53 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 1 19:05:53 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 1 19:05:53 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 1 19:05:53 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 1 19:05:53 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 1 19:05:53 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 1 19:05:53 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 1 19:05:53 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 1 19:05:53 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 1 19:05:53 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 1 19:05:54 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 1 19:05:54 $SHOW_DECISION:  

 {"startCardId":291,"endCardId":161} 
 Player 1 19:05:55 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 1 19:05:57 $NEXT_STACK_ID:  
 Player 1 19:05:57 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 19:05:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Dead Bird for 10"} 
 Player 1 19:05:57 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":291,"itemToPurchaseCardId":161,"playerWhoBuysCardId":291,"cost":10,"stackEffectType":9}} 
 Player 1 19:05:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Dead Bird for 10"} 
 Player 1 19:05:57 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":291,"itemToPurchaseCardId":161,"playerWhoBuysCardId":291,"cost":10,"stackEffectType":9}} 
 Player 1 19:05:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":20,"_text":"Add PurchaseItem 3 "}} 
 Player 1 19:05:57 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 19:05:57 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 1 19:05:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Dead Bird for 10"} 
 Player 1 19:05:57 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":291,"itemToPurchaseCardId":161,"playerWhoBuysCardId":291,"cost":10,"stackEffectType":9}} 
 Player 1 19:05:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":21,"_text":"Response Adding PurchaseItem 3"},"childOfId":20} 
 Player 1 19:05:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":22,"_text":"Wait For Response From Player 1 "},"childOfId":20} 
 Player 1 19:05:57 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 19:05:57 $ACTION_MASSAGE_REMOVE:  

 {"id":22} 
 Player 1 19:05:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":23,"_text":"Wait For Response From Player 2 "},"childOfId":20} 
 Player 1 19:05:58 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 19:05:58 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 19:05:58 $ACTION_MASSAGE_REMOVE:  

 {"id":23} 
 Player 1 19:05:58 $ACTION_MASSAGE_REMOVE:  

 {"id":21} 
 Player 1 19:05:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":24,"_text":"Resolve PurchaseItem 3 "}} 
 Player 1 19:05:58 $SET_MONEY:  

 {"playerId":1,"numOfCoins":0} 
 Player 1 19:05:58 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-10}],"result":null,"preventMethod":false,"methodScopeId":291,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Player 1 19:05:58 $REMOVE_ITEM_FROM_SHOP:  

 {"cardId":161} 
 Player 1 19:05:58 $NEXT_STACK_ID:  
 Player 1 19:05:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Dead Bird for 10"} 
 Player 1 19:05:58 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 19:05:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Dead Bird for 10 \n2:Refill Store slot"} 
 Player 1 19:05:58 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":4,"creatorCardId":291,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 
 Player 1 19:05:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Dead Bird for 10 \n2:Refill Store slot"} 
 Player 1 19:05:58 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":291,"itemToPurchaseCardId":161,"playerWhoBuysCardId":291,"cost":10,"stackEffectType":9}} 
 Player 1 19:05:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Dead Bird for 10 \n2:Refill Store slot"} 
 Player 1 19:05:58 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":291,"itemToPurchaseCardId":161,"playerWhoBuysCardId":291,"cost":10,"stackEffectType":9}} 
 Player 1 19:05:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Dead Bird for 10 \n2:Refill Store slot"} 
 Player 1 19:05:58 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":4,"creatorCardId":291,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 
 Player 1 19:05:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Dead Bird for 10 \n2:Refill Store slot"} 
 Player 1 19:05:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Dead Bird for 10 \n2:Refill Store slot"} 
 Player 1 19:05:58 $REPLACE_STACK:  

 {"currentStack":[{"entityId":3,"creatorCardId":291,"itemToPurchaseCardId":161,"playerWhoBuysCardId":291,"cost":10,"stackEffectType":9},{"entityId":4,"creatorCardId":291,"slotType":5,"slotToFillId":0,"stackEffectType":10}]} 
 Player 1 19:05:58 $REGISTER_PASSIVE_ITEM:  

 {"cardId":161} 
 Player 1 19:05:58 $MOVE_CARD:  

 {"moveIndex":9,"cardId":161,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 
 Player 1 19:05:59 $ADD_AN_ITEM:  

 {"playerId":1,"cardId":161,"isReward":false} 
 Player 1 19:05:59 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":161}],"result":true,"preventMethod":false,"methodScopeId":291,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 
 Player 1 19:05:59 $ACTION_MASSAGE_REMOVE:  

 {"id":24} 
 Player 1 19:05:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill Store slot"} 
 Player 1 19:05:59 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":291,"itemToPurchaseCardId":161,"playerWhoBuysCardId":291,"cost":10,"stackEffectType":9}} 
 Player 1 19:05:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":25,"_text":"Remove After Resolve PurchaseItem 3  "}} 
 Player 1 19:05:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill Store slot"} 
 Player 1 19:05:59 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":291,"itemToPurchaseCardId":161,"playerWhoBuysCardId":291,"cost":10,"stackEffectType":9}} 
 Player 1 19:05:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":26,"_text":"Response Remove After Resolve PurchaseItem 3"},"childOfId":25} 
 Player 1 19:05:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":27,"_text":"Wait For Response From Player 1 "},"childOfId":25} 
 Player 1 19:05:59 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 19:05:59 $ACTION_MASSAGE_REMOVE:  

 {"id":27} 
 Player 1 19:05:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":25} 
 Player 1 19:05:59 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 19:05:59 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 19:05:59 $ACTION_MASSAGE_REMOVE:  

 {"id":28} 
 Player 1 19:05:59 $ACTION_MASSAGE_REMOVE:  

 {"id":26} 
 Player 1 19:05:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":29,"_text":"Resolve RefillEmptySlot 4 "}} 
 Player 1 19:05:59 $DRAW_CARD:  

 {"deckType":5} 
 Player 1 19:05:59 $FLIP_CARD:  

 {"cardId":205} 
 Player 1 19:05:59 $ADD_STORE_CARD:  

 {"cardId":205} 
 Player 1 19:05:59 $ACTION_MASSAGE_REMOVE:  

 {"id":29} 
 Player 1 19:05:59 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 19:06:00 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":4,"creatorCardId":291,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 
 Player 1 19:06:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":30,"_text":"Remove After Resolve RefillEmptySlot 4  "}} 
 Player 1 19:06:00 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 19:06:00 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":4,"creatorCardId":291,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 
 Player 1 19:06:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":31,"_text":"Response Remove After Resolve RefillEmptySlot 4"},"childOfId":30} 
 Player 1 19:06:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":32,"_text":"Wait For Response From Player 2 "},"childOfId":30} 
 Player 1 19:06:00 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 19:06:00 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 19:06:00 $ACTION_MASSAGE_REMOVE:  

 {"id":32} 
 Player 1 19:06:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":30} 
 Player 1 19:06:00 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 19:06:00 $ACTION_MASSAGE_REMOVE:  

 {"id":33} 
 Player 1 19:06:00 $ACTION_MASSAGE_REMOVE:  

 {"id":31} 
 Player 1 19:06:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":34,"_text":"Stack Was Emptied "}} 
 Player 1 19:06:00 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 19:06:00 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 1 19:06:00 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 1 19:06:00 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 1 19:06:00 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 1 19:06:00 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 1 19:06:00 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 1 19:06:00 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 1 19:06:00 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 1 19:06:00 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 1 19:06:00 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 1 19:06:00 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 1 19:06:00 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 1 19:06:00 $ACTION_MASSAGE_REMOVE:  

 {"id":24} 
 Player 1 19:06:00 $ACTION_MASSAGE_REMOVE:  

 {"id":25} 
 Player 1 19:06:00 $ACTION_MASSAGE_REMOVE:  

 {"id":29} 
 Player 1 19:06:00 $ACTION_MASSAGE_REMOVE:  

 {"id":30} 
 Player 1 19:06:00 $ACTION_MASSAGE_REMOVE:  

 {"id":34} 
 Player 1 19:06:01 $ACTION_MASSAGE_REMOVE:  

 {"id":34} 
 Player 1 19:06:02 $ACTION_MASSAGE_REMOVE:  

 {"id":25} 
 Player 1 19:06:02 $ACTION_MASSAGE_REMOVE:  

 {"id":30} 
 Player 1 19:06:05 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 19:06:05 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 19:06:05 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 1 19:06:05 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 1 19:06:05 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 1 19:06:06 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 1 19:06:06 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 1 19:06:06 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 1 19:06:06 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 1 19:06:06 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 1 19:06:06 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 1 19:06:06 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 1 19:06:06 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 1 19:06:06 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 1 19:06:06 $ACTION_MASSAGE_REMOVE:  

 {"id":24} 
 Player 1 19:06:06 $ACTION_MASSAGE_REMOVE:  

 {"id":25} 
 Player 1 19:06:06 $ACTION_MASSAGE_REMOVE:  

 {"id":29} 
 Player 1 19:06:06 $ACTION_MASSAGE_REMOVE:  

 {"id":30} 
 Player 1 19:06:06 $ACTION_MASSAGE_REMOVE:  

 {"id":34} 
 Player 1 19:06:06 $REPLACE_STACK:  

 {"currentStack":[]} 
 Player 1 19:06:06 $END_TURN:  
 Player 1 19:06:06 $SET_TURN:  

 {"playerId":2} 
 Player 1 19:06:06 $START_TURN:  

 {"playerId":2} 
 Player 1 19:06:07 $STACK_EMPTIED:  

 {"playerId":2} 
 Player 1 19:06:07 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 19:06:07 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 19:06:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 19:06:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 19:06:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 19:06:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 19:06:07 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 19:06:08 $MOVE_CARD_END:  

 {"moveIndex":10,"cardId":28,"flipIfFlipped":false,"playerId":2} 
 Player 1 19:06:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 19:06:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 19:06:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 19:06:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 19:06:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 19:06:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 19:06:09 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 19:06:24 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 19:06:24 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 19:06:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Clotty"} 
 Player 1 19:06:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Clotty"} 
 Player 1 19:06:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Clotty"} 
 Player 1 19:06:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Clotty"} 
 Player 1 19:06:24 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 19:06:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Clotty"} 
 Player 1 19:06:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Clotty"} 
 Player 1 19:06:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Clotty"} 
 Player 1 19:06:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Clotty"} 
 Player 1 19:06:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Clotty"} 
 Player 1 19:06:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Clotty"} 
 Player 1 19:06:25 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 19:06:28 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 19:06:28 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 19:06:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Clotty<Monster>"} 
 Player 1 19:06:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Clotty<Monster>"} 
 Player 1 19:06:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Clotty<Monster>"} 
 Player 1 19:06:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Clotty<Monster>"} 
 Player 1 19:06:30 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 19:06:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Clotty<Monster>"} 
 Player 1 19:06:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Clotty<Monster>"} 
 Player 1 19:06:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Clotty<Monster> \n2:Activate Dead Bird "} 
 Player 1 19:06:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Clotty<Monster> \n2:Activate Dead Bird "} 
 Player 1 19:06:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Clotty<Monster> \n2:Activate Dead Bird "} 
 Player 1 19:06:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Clotty<Monster> \n2:Activate Dead Bird "} 
 Player 1 19:06:32 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 19:06:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Clotty<Monster> \n2:Activate Dead Bird "} 
 Player 1 19:06:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Clotty<Monster> \n2:Activate Dead Bird "} 
 Player 1 19:06:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Clotty<Monster> \n2:Activate Dead Bird "} 
 Player 1 19:06:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Clotty<Monster> \n2:Activate Dead Bird "} 
 Player 1 19:06:33 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":161,"particleType":6} 
 Player 1 19:06:34 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":161,"particleType":6} 
 Player 1 19:07:01 $LOG_ERROR:  

 {"message":"\"Cannot read property 'getTarget' of null\"","stack":"\"TypeError: Cannot read property 'getTarget' of null\\n    at LookAtPlayerHand.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardEffects/LookAtPlayerHand.js:62:43)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\\n    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\\n    at new Promise (<anonymous>)\\n    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\\n    at LookAtPlayerHand.doEffect (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardEffects/LookAtPlayerHand.js:30:16)\\n    at ChainEffects.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardEffects/ChainEffects.js:78:53)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\""} 
 Player 1 19:07:02 $LOG_ERROR:  

 {"message":"\"Cannot read property 'getTargets' of null\"","stack":"\"TypeError: Cannot read property 'getTargets' of null\\n    at TakeLootFromPlayer.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardEffects/TakeLootFromPlayer.js:31:40)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\\n    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\\n    at new Promise (<anonymous>)\\n    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\\n    at TakeLootFromPlayer.doEffect (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardEffects/TakeLootFromPlayer.js:25:16)\\n    at ChainEffects.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardEffects/ChainEffects.js:78:53)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.throw (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\""} 
 Player 1 19:07:02 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":{"type":2,"number":3}},{"type":2,"number":{"type":2,"number":2}},{"type":2,"number":{"type":2,"number":3}}],"result":null,"preventMethod":false,"methodScopeId":285,"scopeIsPlayer":true,"index":1},"isAfterActivation":false,"index":1} 
 Player 1 19:07:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Clotty<Monster> \n2:Activate Dead Bird "} 
 Player 1 19:07:02 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":291,"effectCardPlayer":291},"entityId":8,"creatorCardId":291,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":161,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 19:07:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Clotty<Monster> \n2:Activate Dead Bird "} 
 Player 1 19:07:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Clotty<Monster> \n2:Activate Dead Bird "} 
 Player 1 19:07:02 $FINISH_DO_STACK_EFFECT:  

 {"playerId":2,"newStack":[{"entityId":7,"creatorCardId":285,"numberRolled":5,"rollingPlayerCardId":285,"stackEffectType":2,"attackedMonsterCardId":230},{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":291,"effectCardPlayer":291},"entityId":8,"creatorCardId":291,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":161,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}]} 
 Player 1 19:07:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Clotty<Monster> \n2:Activate Dead Bird "} 
 Player 1 19:07:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Clotty<Monster> \n2:Activate Dead Bird "} 
 Player 1 19:07:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Clotty<Monster> \n2:Activate Dead Bird "} 
 Player 1 19:07:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Clotty<Monster> \n2:Activate Dead Bird "} 
 Player 1 19:07:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Clotty<Monster> \n2:Activate Dead Bird "} 
 Player 1 19:07:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Clotty<Monster> \n2:Activate Dead Bird "} 
 Player 1 19:07:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Clotty<Monster> \n2:Activate Dead Bird "} 
 Player 1 19:07:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Clotty<Monster> \n2:Activate Dead Bird "} 
 Player 1 19:07:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Clotty<Monster> \n2:Activate Dead Bird "} 
 Player 1 19:07:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Clotty<Monster> \n2:Activate Dead Bird "} 
 Player 1 19:07:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Clotty<Monster> \n2:Activate Dead Bird "} 
 Player 1 19:07:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Clotty<Monster> \n2:Activate Dead Bird "} 
 Player 1 19:07:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Clotty<Monster> \n2:Activate Dead Bird "} 
 Player 1 19:07:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Clotty<Monster> \n2:Activate Dead Bird "} 
 Player 1 19:07:03 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 19:07:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Clotty<Monster>"} 
 Player 1 19:07:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Clotty<Monster>"} 
 Player 1 19:07:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Clotty"} 
 Player 1 19:07:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Clotty"} 
 Player 1 19:07:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Clotty"} 
 Player 1 19:07:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Clotty"} 
 Player 1 19:07:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Clotty"} 
 Player 1 19:07:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Clotty"} 
 Player 1 19:07:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Clotty"} 
 Player 1 19:07:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Clotty"} 
 Player 1 19:07:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Clotty"} 
 Player 1 19:07:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Clotty"} 
 Player 1 19:07:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Clotty \n2:Player 2 is rolling against Clotty<Monster>"} 
 Player 1 19:07:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Clotty \n2:Player 2 is rolling against Clotty<Monster>"} 
 Player 1 19:07:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Clotty \n2:Player 2 is rolling against Clotty<Monster>"} 
 Player 1 19:07:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Clotty \n2:Player 2 is rolling against Clotty<Monster>"} 
 Player 1 19:07:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Clotty \n2:Player 2 is rolling against Clotty<Monster>"} 
 Player 1 19:07:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Clotty \n2:Player 2 is rolling against Clotty<Monster>"} 
 Player 1 19:07:05 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 19:07:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Clotty"} 
 Player 1 19:07:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Clotty"} 
 Player 1 19:07:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Clotty"} 
 Player 1 19:07:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Clotty"} 
 Player 1 19:07:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Clotty"} 
 Player 1 19:07:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Isaac combat damage to Clotty"} 
 Player 1 19:07:06 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false}