Start Log 

 Player 1 15:25:53 $MATCH:  

 Player 1 15:25:53 $START_GAME:  

 Player 2 15:25:53 $MOVE_TO_TABLE:  

 Player 1 15:25:53 $MOVE_TO_TABLE:  

 Player 2 15:26:01 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 1 15:26:01 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 15:26:01 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":292,"itemCardId":293} 

 Player 2 15:26:01 $CHOOSE_FOR_EDEN:  
{"playerId":2,"originPlayerId":2} 

 Player 1 15:26:01 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":293}],"result":true,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 15:26:01 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[205,163,148,149,157,155,171,162,195,210,220,150,190,186,179,176,216,185,207,191,146,201,161,153,151,159,173,170,218,178,208,164,180,198,182,145,196,188,181,219,212,152,160,192,215,166,209,214,187,203,167,213,184,172,200,158,165,183,147,193,189,175,194,156,202,217,221,168,206,169,199,197,211,154,174,204,177]} 

 Player 2 15:26:07 $EDEN_CHOSEN:  
{"cardId":148,"playerId":2} 

 Player 2 15:26:07 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[205,163,149,157,155,171,162,195,210,220,150,190,186,179,176,216,185,207,191,146,201,161,153,151,159,173,170,218,178,208,164,180,198,182,145,196,188,181,219,212,152,160,192,215,166,209,214,187,203,167,213,184,172,200,158,165,183,147,193,189,175,194,156,202,217,221,168,206,169,199,197,211,154,174,204,177]} 

 Player 2 15:26:07 $FLIP_CARD:  
{"cardId":148} 

 Player 2 15:26:07 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":148}],"result":true,"preventMethod":false,"methodScopeId":284,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 15:26:07 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":284,"itemCardId":148} 

 Player 2 15:26:07 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[81,18,11,45,70,134,125,50,16,24,35,121,128,19,135,59,34,97,31,42,119,114,12,14,36,15,94,56,124,71,116,38,75,65,103,9,69,73,123,61,78,93,98,43,62,48,82,30,127,129,44,86,131,51,90,133,84,40,91,32,105,92,117,8,25,28,88,23,95,74,138,96,108,83,87,33,101,111,120,79,67,126,37,13,100,63,142,27,107,39,55,20,52,89,7,137,66,60,77,130,122,118,57,49,136,72,109,29,102,140,106,76,104,80,99,17,10,64,115,113,58,47,26,85,110,53,41,139,22,68,54,21,46,132,112,141]} 

 Player 2 15:26:07 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[268,241,247,242,249,261,232,245,235,274,277,251,225,248,256,259,228,243,229,266,246,275,267,250,227,263,224,237,234,238,244,264,272,239,269,276,262,226,260,255,233,270,258,240,271,265,252,230,254,231,273,253,236,257]} 

 Player 2 15:26:07 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[168,174,177,192,211,149,181,195,175,182,219,210,183,172,199,220,190,156,173,152,188,180,191,176,221,203,185,157,178,160,164,207,179,204,201,161,214,200,158,209,165,169,193,147,146,218,205,197,171,159,170,154,208,153,198,213,194,150,167,155,186,187,217,151,184,163,189,202,215,206,145,162,212,196,216,166]} 

 Player 2 15:26:07 $DRAW_CARD:  
{"deckType":5} 

 Player 2 15:26:07 $FLIP_CARD:  
{"cardId":166} 

 Player 2 15:26:07 $ADD_STORE_CARD:  
{"cardId":166} 

 Player 2 15:26:07 $DRAW_CARD:  
{"deckType":5} 

 Player 2 15:26:07 $FLIP_CARD:  
{"cardId":216} 

 Player 2 15:26:07 $ADD_STORE_CARD:  
{"cardId":216} 

 Player 2 15:26:07 $DRAW_CARD:  
{"deckType":2} 

 Player 2 15:26:07 $FLIP_CARD:  
{"cardId":257} 

 Player 2 15:26:07 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":257} 

 Player 2 15:26:07 $NEW_MONSTER_ON_PLACE:  
{"cardId":257,"monsterPlaceId":1} 

 Player 2 15:26:07 $DRAW_CARD:  
{"deckType":2} 

 Player 2 15:26:07 $FLIP_CARD:  
{"cardId":236} 

 Player 2 15:26:07 $REGISTER_PASSIVE_ITEM:  
{"cardId":236} 

 Player 2 15:26:07 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":236} 

 Player 2 15:26:07 $NEW_MONSTER_ON_PLACE:  
{"cardId":236,"monsterPlaceId":2} 

 Player 2 15:26:08 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 15:26:08 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 15:26:08 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:26:08 $MOVE_CARD:  
{"moveIndex":1,"cardId":141,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:26:08 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":141,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:26:08 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":141} 

 Player 2 15:26:08 $FLIP_CARD:  
{"cardId":141} 

 Player 2 15:26:08 $FLIP_CARD:  
{"cardId":141} 

 Player 2 15:26:08 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":141} 

 Player 2 15:26:08 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:26:08 $MOVE_CARD:  
{"moveIndex":2,"cardId":112,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:26:08 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":112,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:26:08 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":112} 

 Player 2 15:26:08 $FLIP_CARD:  
{"cardId":112} 

 Player 2 15:26:08 $FLIP_CARD:  
{"cardId":112} 

 Player 2 15:26:09 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":112} 

 Player 2 15:26:09 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:26:09 $MOVE_CARD:  
{"moveIndex":3,"cardId":132,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:26:09 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":132,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:26:09 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":132} 

 Player 2 15:26:09 $FLIP_CARD:  
{"cardId":132} 

 Player 2 15:26:09 $FLIP_CARD:  
{"cardId":132} 

 Player 2 15:26:09 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":132} 

 Player 2 15:26:09 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 15:26:09 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":284,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 15:26:09 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:26:09 $MOVE_CARD:  
{"moveIndex":4,"cardId":46,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:26:09 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":46,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:26:10 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":46} 

 Player 2 15:26:10 $FLIP_CARD:  
{"cardId":46} 

 Player 2 15:26:10 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":46} 

 Player 2 15:26:10 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:26:10 $MOVE_CARD:  
{"moveIndex":5,"cardId":21,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:26:10 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":21,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:26:10 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":21} 

 Player 2 15:26:10 $FLIP_CARD:  
{"cardId":21} 

 Player 2 15:26:10 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":21} 

 Player 2 15:26:10 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:26:10 $MOVE_CARD:  
{"moveIndex":6,"cardId":54,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:26:10 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":54,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:26:10 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":54} 

 Player 2 15:26:10 $FLIP_CARD:  
{"cardId":54} 

 Player 2 15:26:11 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":54} 

 Player 2 15:26:11 $GAME_HAS_STARTED:  

 Player 2 15:26:11 $SET_TURN:  
{"playerId":1} 

 Player 2 15:26:11 $START_TURN:  
{"playerId":1} 

 Player 2 15:26:11 $UPDATE_ACTIONS:  

 Player 1 15:26:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:26:11 $NEXT_STACK_ID:  

 Player 1 15:26:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:26:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 15:26:11 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 1 15:26:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 15:26:11 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 1 15:26:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 1 15:26:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:26:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 15:26:11 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 1 15:26:11 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 15:26:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 1 15:26:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 1 15:26:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:26:11 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 15:26:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 1 15:26:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 15:26:11 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 15:26:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:26:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:26:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 15:26:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 15:26:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 15:26:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 15:26:11 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 15:26:11 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 15:26:11 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 15:26:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 1 15:26:11 $DRAW_CARD:  
{"deckType":1} 

 Player 1 15:26:11 $MOVE_CARD:  
{"moveIndex":7,"cardId":68,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 15:26:12 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":68,"flipIfFlipped":false,"playerId":1} 

 Player 1 15:26:12 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":68} 

 Player 1 15:26:12 $FLIP_CARD:  
{"cardId":68} 

 Player 1 15:26:12 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":68} 

 Player 1 15:26:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 15:26:12 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 1 15:26:12 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 15:26:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:26:12 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 1 15:26:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 1 15:26:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:26:12 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 1 15:26:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 1 15:26:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 1 15:26:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 15:26:12 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 15:26:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 15:26:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 15:26:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 15:26:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 15:26:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 15:26:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 15:26:12 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 15:26:12 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 1 15:26:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 1 15:26:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:26:12 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 1 15:26:12 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 1 15:26:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 1 15:26:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:26:13 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 15:26:13 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 15:26:13 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 15:26:13 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 15:26:13 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 15:26:13 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 15:26:13 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 15:26:14 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 15:26:15 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 15:26:18 $MOVE_CARD:  
{"moveIndex":8,"cardId":164,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Hand"} 

 Player 2 15:26:18 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":164,"flipIfFlipped":true,"playerId":1} 

 Player 1 15:26:18 $REGISTER_PASSIVE_ITEM:  
{"cardId":164} 

 Player 1 15:26:18 $MOVE_CARD:  
{"moveIndex":9,"cardId":164,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 

 Player 2 15:26:19 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":164,"flipIfFlipped":true,"playerId":1} 

 Player 1 15:26:19 $ADD_AN_ITEM:  
{"playerId":1,"cardId":164,"isReward":true} 

 Player 1 15:26:19 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":164}],"result":true,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 1 15:26:25 $SHOW_DECISION:  
{"startCardId":292,"endCardId":236} 

 Player 1 15:26:28 $NEXT_STACK_ID:  

 Player 1 15:26:28 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:26:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Daddy Long Legs"} 

 Player 1 15:26:28 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":292,"attackingPlayerCardId":292,"idOfCardBeingAttacked":236,"stackEffectType":4}} 

 Player 1 15:26:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Daddy Long Legs"} 

 Player 1 15:26:28 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":292,"attackingPlayerCardId":292,"idOfCardBeingAttacked":236,"stackEffectType":4}} 

 Player 1 15:26:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add DeclareAttack 2 "}} 

 Player 1 15:26:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:26:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Daddy Long Legs"} 

 Player 1 15:26:28 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":292,"attackingPlayerCardId":292,"idOfCardBeingAttacked":236,"stackEffectType":4}} 

 Player 1 15:26:28 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 15:26:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding DeclareAttack 2"},"childOfId":10} 

 Player 1 15:26:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 1 15:26:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:26:28 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 1 15:26:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 1 15:26:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 15:26:28 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 15:26:28 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:26:28 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:26:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Daddy Long Legs"} 

 Player 2 15:26:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Daddy Long Legs"} 

 Player 2 15:26:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Daddy Long Legs"} 

 Player 2 15:26:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Daddy Long Legs"} 

 Player 2 15:26:28 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 15:26:28 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 1 15:26:28 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 1 15:26:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve DeclareAttack 2 "}} 

 Player 1 15:26:28 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":236,"particleType":5} 

 Player 1 15:26:28 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":3,"originStackId":2},"isAfterActivation":true,"index":3} 

 Player 1 15:26:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Daddy Long Legs"} 

 Player 1 15:26:28 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":292,"attackingPlayerCardId":292,"idOfCardBeingAttacked":236,"stackEffectType":4}} 

 Player 1 15:26:28 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 15:26:28 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:26:29 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":292,"attackingPlayerCardId":292,"idOfCardBeingAttacked":236,"stackEffectType":4}} 

 Player 1 15:26:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve DeclareAttack 2  "}} 

 Player 1 15:26:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:26:29 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":292,"attackingPlayerCardId":292,"idOfCardBeingAttacked":236,"stackEffectType":4}} 

 Player 1 15:26:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve DeclareAttack 2"},"childOfId":15} 

 Player 1 15:26:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 1 15:26:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 15:26:29 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 15:26:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Daddy Long Legs"} 

 Player 2 15:26:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Daddy Long Legs"} 

 Player 2 15:26:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Daddy Long Legs"} 

 Player 2 15:26:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Daddy Long Legs"} 

 Player 2 15:26:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Daddy Long Legs"} 

 Player 2 15:26:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Daddy Long Legs"} 

 Player 2 15:26:29 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 15:26:29 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 1 15:26:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 1 15:26:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:26:29 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 1 15:26:29 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 1 15:26:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 1 15:26:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:26:29 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 15:26:29 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 15:26:29 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 15:26:29 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 15:26:29 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 15:26:29 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 15:26:29 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 15:26:29 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 15:26:29 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 15:26:29 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 15:26:29 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 15:26:30 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 15:26:31 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 15:26:34 $NEXT_STACK_ID:  

 Player 1 15:26:34 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:26:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 1 15:26:34 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":292,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":236}} 

 Player 1 15:26:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 1 15:26:34 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":292,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":236}} 

 Player 1 15:26:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add AttackRoll 3 "}} 

 Player 1 15:26:34 $ROLL_DICE:  
{"playerId":1} 

 Player 2 15:26:34 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:26:34 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:26:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 2 15:26:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 1 15:26:36 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":2} 

 Player 1 15:26:36 $UPDATE_STACK_VIS:  
{"stackId":3,"text":"player rolled 2 vs Daddy Long Legs<Monster>"} 

 Player 1 15:26:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Daddy Long Legs<Monster>"} 

 Player 1 15:26:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:26:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Daddy Long Legs<Monster>"} 

 Player 1 15:26:37 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":292,"numberRolled":2,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":236}} 

 Player 1 15:26:37 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 15:26:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding AttackRoll 3"},"childOfId":20} 

 Player 1 15:26:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 1 15:26:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:26:37 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 1 15:26:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 1 15:26:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 15:26:37 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 15:26:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 2 15:26:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 2 15:26:37 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 15:26:37 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 1 15:26:37 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 1 15:26:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve AttackRoll 3 "}} 

 Player 1 15:26:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Added 0 to original roll"}} 

 Player 1 15:26:37 $NEXT_STACK_ID:  

 Player 1 15:26:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Daddy Long Legs<Monster>"} 

 Player 1 15:26:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:26:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Daddy Long Legs \n2:Player 1 rolled 2 vs Daddy Long Legs<Monster>"} 

 Player 1 15:26:37 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":292,"entityToDoDamageCardId":292,"entityToTakeDamageCardId":236,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 15:26:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Daddy Long Legs \n2:Player 1 rolled 2 vs Daddy Long Legs<Monster>"} 

 Player 1 15:26:37 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":292,"numberRolled":2,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":236}} 

 Player 1 15:26:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Daddy Long Legs \n2:Player 1 rolled 2 vs Daddy Long Legs<Monster>"} 

 Player 1 15:26:37 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":292,"entityToDoDamageCardId":292,"entityToTakeDamageCardId":236,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 15:26:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Daddy Long Legs \n2:Player 1 rolled 2 vs Daddy Long Legs<Monster>"} 

 Player 1 15:26:37 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":292,"numberRolled":2,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":236}} 

 Player 1 15:26:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Daddy Long Legs \n2:Player 1 rolled 2 vs Daddy Long Legs<Monster>"} 

 Player 1 15:26:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Daddy Long Legs \n2:Player 1 rolled 2 vs Daddy Long Legs<Monster>"} 

 Player 1 15:26:37 $REPLACE_STACK:  
{"currentStack":[{"entityId":4,"creatorCardId":292,"entityToDoDamageCardId":292,"entityToTakeDamageCardId":236,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":3,"creatorCardId":292,"numberRolled":2,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":236}]} 

 Player 1 15:26:37 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":4,"originStackId":3},"isAfterActivation":true,"index":4} 

 Player 1 15:26:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Daddy Long Legs \n2:Player 1 rolled 2 vs Daddy Long Legs<Monster>"} 

 Player 1 15:26:37 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":292,"numberRolled":2,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":236}} 

 Player 1 15:26:37 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 15:26:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Daddy Long Legs"} 

 Player 1 15:26:37 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":292,"numberRolled":2,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":236}} 

 Player 1 15:26:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Remove After Resolve AttackRoll 3  "}} 

 Player 1 15:26:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Daddy Long Legs"} 

 Player 1 15:26:38 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":292,"numberRolled":2,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":236}} 

 Player 1 15:26:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Response Remove After Resolve AttackRoll 3"},"childOfId":26} 

 Player 1 15:26:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 1 "},"childOfId":26} 

 Player 1 15:26:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:26:38 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 1 15:26:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Wait For Response From Player 2 "},"childOfId":26} 

 Player 1 15:26:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 15:26:38 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 15:26:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 2 15:26:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 2 15:26:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Daddy Long Legs"} 

 Player 2 15:26:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Daddy Long Legs"} 

 Player 2 15:26:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Daddy Long Legs"} 

 Player 2 15:26:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Daddy Long Legs"} 

 Player 2 15:26:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Daddy Long Legs"} 

 Player 2 15:26:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Daddy Long Legs"} 

 Player 2 15:26:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Daddy Long Legs"} 

 Player 2 15:26:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Daddy Long Legs"} 

 Player 2 15:26:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Daddy Long Legs"} 

 Player 2 15:26:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Daddy Long Legs"} 

 Player 2 15:26:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Daddy Long Legs \n2:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 2 15:26:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Daddy Long Legs \n2:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 2 15:26:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Daddy Long Legs \n2:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 2 15:26:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Daddy Long Legs \n2:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 2 15:26:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Daddy Long Legs \n2:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 2 15:26:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Daddy Long Legs \n2:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 2 15:26:38 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 15:26:38 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 1 15:26:38 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 1 15:26:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Resolve CombatDamage 4 "}} 

 Player 1 15:26:38 $UPDATE_STACK_VIS:  
{"stackId":4,"text":"Samson will deal 1 combat damage to Daddy Long Legs"} 

 Player 1 15:26:38 $MONSTER_GET_DAMAGED:  
{"cardId":236,"hpLeft":3,"damageDealerId":292} 

 Player 1 15:26:38 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":292}],"result":null,"preventMethod":false,"methodScopeId":236,"scopeIsPlayer":false,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 1 15:26:38 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":4},{"type":0,"number":292},{"type":0,"number":236}],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":6,"originStackId":4},"isAfterActivation":true,"index":6} 

 Player 1 15:26:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Daddy Long Legs"} 

 Player 1 15:26:39 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":292,"entityToDoDamageCardId":292,"entityToTakeDamageCardId":236,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 15:26:39 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 15:26:39 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:26:39 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":292,"entityToDoDamageCardId":292,"entityToTakeDamageCardId":236,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 15:26:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Remove After Resolve CombatDamage 4  "}} 

 Player 1 15:26:39 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:26:39 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":292,"entityToDoDamageCardId":292,"entityToTakeDamageCardId":236,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 15:26:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Response Remove After Resolve CombatDamage 4"},"childOfId":31} 

 Player 1 15:26:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 2 "},"childOfId":31} 

 Player 1 15:26:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 15:26:39 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 15:26:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Daddy Long Legs"} 

 Player 2 15:26:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Daddy Long Legs"} 

 Player 2 15:26:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Daddy Long Legs"} 

 Player 2 15:26:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Daddy Long Legs"} 

 Player 2 15:26:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Daddy Long Legs"} 

 Player 2 15:26:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Daddy Long Legs"} 

 Player 2 15:26:39 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 15:26:39 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 1 15:26:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Wait For Response From Player 1 "},"childOfId":31} 

 Player 1 15:26:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:26:39 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 1 15:26:39 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 1 15:26:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Stack Was Emptied "}} 

 Player 1 15:26:39 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:26:39 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 15:26:39 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 15:26:39 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 15:26:39 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 15:26:39 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 15:26:39 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 15:26:39 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 15:26:39 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 15:26:40 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 15:26:40 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 15:26:40 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 15:26:40 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 15:26:40 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 15:26:40 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 15:26:40 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 1 15:26:40 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 15:26:40 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 1 15:26:40 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 1 15:26:40 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 15:26:40 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 1 15:26:41 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 1 15:26:41 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 2 15:28:29 $MATCH: 