{"version":3,"sources":["core/ActionData.ts"],"names":[],"mappings":"","file":"../../core/ActionData.js","sourcesContent":["import { Type, Token } from '../types';\r\nimport { IParameter } from '../IParameter';\r\nimport { ProviderMap, ParamProviders } from '../providers';\r\nimport { IContainer } from '../IContainer';\r\n\r\n\r\n/**\r\n * the action execute data.\r\n *\r\n * @export\r\n * @interface ActionData\r\n * @template T\r\n */\r\nexport interface ActionData<T> {\r\n    /**\r\n     * the args.\r\n     *\r\n     * @type {any[]}\r\n     * @memberof ActionData\r\n     */\r\n    args?: any[];\r\n\r\n    /**\r\n     * args params types.\r\n     *\r\n     * @type {IParameter[]}\r\n     * @memberof ActionData\r\n     */\r\n    params?: IParameter[];\r\n\r\n    /**\r\n     * target instance.\r\n     *\r\n     * @type {*}\r\n     * @memberof ActionData\r\n     */\r\n    target?: any;\r\n\r\n    /**\r\n     * target type.\r\n     *\r\n     * @type {Type<any>}\r\n     * @memberof ActionData\r\n     */\r\n    targetType?: Type<any>;\r\n\r\n    /**\r\n     * resolve token.\r\n     *\r\n     * @type {Token<any>}\r\n     * @memberof ActionData\r\n     */\r\n    tokenKey?: Token<any>;\r\n\r\n    /**\r\n     * is target singleton or not.\r\n     *\r\n     * @type {boolean}\r\n     * @memberof ActionData\r\n     */\r\n    singleton?: boolean;\r\n\r\n    /**\r\n     * property or method name of type.\r\n     *\r\n     * @type {string}\r\n     * @memberof ActionData\r\n     */\r\n    propertyKey?: string;\r\n\r\n    /**\r\n     * action execute result.\r\n     *\r\n     * @type {T}\r\n     * @memberof ActionData\r\n     */\r\n    execResult?: T;\r\n\r\n    /**\r\n     * exter providers for resolve. origin providers\r\n     *\r\n     * @type {ParamProviders[]}\r\n     * @memberof ActionData\r\n     */\r\n    providers?: ParamProviders[];\r\n\r\n    /**\r\n     * exter providers convert to map.\r\n     *\r\n     * @type {ProviderMap}\r\n     * @memberof ActionData\r\n     */\r\n    providerMap?: ProviderMap;\r\n\r\n    /**\r\n     * container, the action raise from.\r\n     *\r\n     * @type {IContainer}\r\n     * @memberof ActionData\r\n     */\r\n    raiseContainer?: IContainer;\r\n\r\n    /**\r\n     * execute context.\r\n     *\r\n     * @type {*}\r\n     * @memberof ActionData\r\n     */\r\n    context?: any;\r\n}\r\n\r\n"]}