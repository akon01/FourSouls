Start Log 

 Player 1 20:29:25 $MATCH:  

 Player 1 20:29:26 $START_GAME:  

 Player 2 20:29:26 $MOVE_TO_TABLE:  

 Player 1 20:29:26 $MOVE_TO_TABLE:  

 Player 2 20:29:35 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 1 20:29:35 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 20:29:35 $SET_CHAR:  
{"originPlayerId":2,"playerId":1,"charCardId":313,"itemCardId":314} 

 Player 1 20:29:35 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":313,"itemCardId":314} 

 Player 1 20:29:35 $SET_CHAR_END:  
{"playerId":2} 

 Player 2 20:29:35 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":315,"itemCardId":318} 

 Player 2 20:29:35 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[96,99,80,21,67,44,70,101,48,120,68,60,12,130,117,90,34,73,5,112,97,11,28,19,84,4,98,75,108,94,114,46,18,129,86,71,16,122,13,33,82,79,137,65,93,92,126,78,138,31,132,23,136,113,124,39,41,32,110,66,36,91,76,53,104,135,81,47,107,106,50,58,54,55,139,42,87,102,95,63,49,40,9,105,83,127,109,24,61,121,15,22,14,6,69,10,7,29,115,128,103,100,119,51,56,25,72,37,64,57,118,20,27,111,116,8,45,43,89,59,134,38,62,26,30,123,133,35,88,125,131,85,17,74,77,52]} 

 Player 2 20:29:35 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[270,225,286,255,287,264,265,244,305,240,300,293,236,296,233,288,274,283,231,245,269,304,310,281,301,303,276,251,307,275,259,252,256,292,226,272,284,234,237,273,241,229,268,239,261,271,306,285,279,258,280,249,243,263,277,297,266,257,232,290,282,248,260,230,247,267,227,235,254,294,295,224,289,246,250,308,238,278,299,291,262,309,302,223,253,242,228,298]} 

 Player 2 20:29:36 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[161,158,145,191,168,206,163,215,157,213,209,199,153,171,179,181,165,173,187,182,218,207,174,183,216,192,198,204,208,156,155,184,143,188,151,152,203,167,220,162,200,217,146,166,205,186,214,197,144,189,190,159,169,164,148,219,177,172,149,201,212,147,175,160,211,154,196,193,180,194,178,195,202,210,170,150,221,185,176,142,141]} 

 Player 2 20:29:36 $DRAW_CARD:  
{"deckType":5} 

 Player 2 20:29:36 $FLIP_CARD:  
{"cardId":141} 

 Player 2 20:29:36 $ADD_STORE_CARD:  
{"cardId":141} 

 Player 2 20:29:36 $DRAW_CARD:  
{"deckType":5} 

 Player 2 20:29:36 $FLIP_CARD:  
{"cardId":142} 

 Player 2 20:29:36 $ADD_STORE_CARD:  
{"cardId":142} 

 Player 2 20:29:36 $DRAW_CARD:  
{"deckType":2} 

 Player 2 20:29:36 $FLIP_CARD:  
{"cardId":298} 

 Player 2 20:29:36 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":298} 

 Player 2 20:29:36 $NEW_MONSTER_ON_PLACE:  
{"cardId":298,"monsterPlaceId":1} 

 Player 2 20:29:36 $DRAW_CARD:  
{"deckType":2} 

 Player 2 20:29:36 $FLIP_CARD:  
{"cardId":228} 

 Player 2 20:29:36 $REGISTER_PASSIVE_ITEM:  
{"cardId":228} 

 Player 2 20:29:36 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":228} 

 Player 2 20:29:36 $NEW_MONSTER_ON_PLACE:  
{"cardId":228,"monsterPlaceId":2} 

 Player 2 20:29:36 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 20:29:36 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 20:29:36 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:29:36 $MOVE_CARD:  
{"moveIndex":1,"cardId":52,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:29:36 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":52,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:29:36 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":52} 

 Player 2 20:29:36 $FLIP_CARD:  
{"cardId":52} 

 Player 2 20:29:36 $FLIP_CARD:  
{"cardId":52} 

 Player 2 20:29:37 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":52} 

 Player 2 20:29:37 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:29:37 $MOVE_CARD:  
{"moveIndex":2,"cardId":77,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:29:37 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":77,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:29:37 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":77} 

 Player 2 20:29:37 $FLIP_CARD:  
{"cardId":77} 

 Player 2 20:29:37 $FLIP_CARD:  
{"cardId":77} 

 Player 2 20:29:37 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":77} 

 Player 2 20:29:37 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:29:37 $MOVE_CARD:  
{"moveIndex":3,"cardId":74,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:29:37 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":74,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:29:37 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":74} 

 Player 2 20:29:38 $FLIP_CARD:  
{"cardId":74} 

 Player 2 20:29:38 $FLIP_CARD:  
{"cardId":74} 

 Player 2 20:29:38 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":74} 

 Player 2 20:29:38 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 20:29:38 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 20:29:38 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:29:38 $MOVE_CARD:  
{"moveIndex":4,"cardId":17,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:29:38 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":17,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:29:38 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":17} 

 Player 2 20:29:38 $FLIP_CARD:  
{"cardId":17} 

 Player 2 20:29:38 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":17} 

 Player 2 20:29:38 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:29:38 $MOVE_CARD:  
{"moveIndex":5,"cardId":85,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:29:39 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":85,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:29:39 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":85} 

 Player 2 20:29:39 $FLIP_CARD:  
{"cardId":85} 

 Player 2 20:29:39 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":85} 

 Player 2 20:29:39 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:29:39 $MOVE_CARD:  
{"moveIndex":6,"cardId":131,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:29:39 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":131,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:29:39 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":131} 

 Player 2 20:29:39 $FLIP_CARD:  
{"cardId":131} 

 Player 2 20:29:39 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":131} 

 Player 2 20:29:39 $GAME_HAS_STARTED:  

 Player 2 20:29:39 $SET_TURN:  
{"playerId":2} 

 Player 2 20:29:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:29:39 $NEXT_STACK_ID:  

 Player 2 20:29:39 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:29:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 

 Player 2 20:29:39 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":315,"turnPlayerCardId":315,"stackEffectType":13}} 

 Player 2 20:29:39 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":315,"turnPlayerCardId":315,"stackEffectType":13}} 

 Player 2 20:29:39 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 20:29:39 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 1 20:29:39 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:29:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 

 Player 2 20:29:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 2 20:29:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:29:42 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":315,"turnPlayerCardId":315,"stackEffectType":13}} 

 Player 2 20:29:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 2 20:29:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 2 20:29:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:29:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 2 20:29:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:29:42 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:29:42 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[313,314]} 

 Player 1 20:29:42 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:29:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 2 20:29:42 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":315,"turnPlayerCardId":315,"stackEffectType":13}} 

 Player 2 20:29:42 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:29:42 $MOVE_CARD:  
{"moveIndex":7,"cardId":125,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:29:43 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":125,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:29:43 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":125} 

 Player 2 20:29:43 $FLIP_CARD:  
{"cardId":125} 

 Player 2 20:29:43 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":125} 

 Player 2 20:29:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Has Drawen Loot For Start Turn"} 

 Player 2 20:29:43 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":315,"turnPlayerCardId":315,"stackEffectType":13}} 

 Player 2 20:29:43 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":1} 

 Player 2 20:29:43 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 20:29:43 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 1 20:29:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 

 Player 2 20:29:46 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":1} 

 Player 2 20:29:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 2 20:29:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:29:46 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":315,"turnPlayerCardId":315,"stackEffectType":13}} 

 Player 2 20:29:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 2 20:29:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 2 20:29:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:29:46 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:29:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 

 Player 1 20:29:46 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[313,314]} 

 Player 1 20:29:46 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:29:46 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 2 20:29:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 2 20:29:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:29:46 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 2 20:29:46 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 2 20:29:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 2 20:29:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:29:46 $CLEAR_SE_VIS:  

 Player 2 20:29:46 $UPDATE_ACTIONS:  

 Player 2 20:31:06 $MOVE_CARD:  
{"moveIndex":8,"cardId":281,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 

 Player 1 20:31:07 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":281,"flipIfFlipped":true,"playerId":2} 

 Player 2 20:31:07 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[270,225,286,255,287,264,265,244,305,240,300,293,236,296,233,288,274,283,231,245,269,304,310,301,303,276,251,307,275,259,252,256,292,226,272,284,234,237,273,241,229,268,239,261,271,306,285,279,258,280,249,243,263,277,297,266,257,232,290,282,248,260,230,247,267,227,235,254,294,295,224,289,246,250,308,238,278,299,291,262,309,302,223,253,242]} 

 Player 2 20:31:07 $FLIP_CARD:  
{"cardId":281} 

 Player 2 20:31:07 $REGISTER_PASSIVE_ITEM:  
{"cardId":281} 

 Player 2 20:31:07 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":281} 

 Player 2 20:31:07 $NEW_MONSTER_ON_PLACE:  
{"cardId":281,"monsterPlaceId":1} 

 Player 2 20:31:11 $NEXT_STACK_ID:  

 Player 2 20:31:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 declared attack on Isaac!"} 

 Player 2 20:31:11 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":315,"attackingPlayerCardId":315,"idOfCardBeingAttacked":281,"stackEffectType":4}} 

 Player 2 20:31:11 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":315,"attackingPlayerCardId":315,"idOfCardBeingAttacked":281,"stackEffectType":4}} 

 Player 2 20:31:11 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 20:31:11 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 1 20:31:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:31:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 declared attack on Isaac!"} 

 Player 2 20:31:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add DeclareAttack 2 "}} 

 Player 2 20:31:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:31:14 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":315,"attackingPlayerCardId":315,"idOfCardBeingAttacked":281,"stackEffectType":4}} 

 Player 2 20:31:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding DeclareAttack 2"},"childOfId":10} 

 Player 2 20:31:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 2 20:31:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:31:14 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 2 20:31:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 2 20:31:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:31:14 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:31:14 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[313,314]} 

 Player 1 20:31:14 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:31:14 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 2 20:31:15 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 2 20:31:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve DeclareAttack 2 "}} 

 Player 2 20:31:15 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":315,"attackingPlayerCardId":315,"idOfCardBeingAttacked":281,"stackEffectType":4}} 

 Player 2 20:31:15 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":281,"particleType":5} 

 Player 2 20:31:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Has Entered Battle with Isaac!"} 

 Player 2 20:31:15 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":3,"originStackId":2},"isAfterActivation":true,"index":3} 

 Player 2 20:31:15 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":315,"attackingPlayerCardId":315,"idOfCardBeingAttacked":281,"stackEffectType":4}} 

 Player 2 20:31:15 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":2} 

 Player 2 20:31:15 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 20:31:15 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 1 20:31:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 declared attack on Isaac!"} 

 Player 2 20:31:18 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":2} 

 Player 2 20:31:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve DeclareAttack 2  "}} 

 Player 2 20:31:18 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:31:18 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":315,"attackingPlayerCardId":315,"idOfCardBeingAttacked":281,"stackEffectType":4}} 

 Player 2 20:31:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve DeclareAttack 2"},"childOfId":15} 

 Player 2 20:31:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 2 20:31:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:31:18 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:31:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 declared attack on Isaac!"} 

 Player 1 20:31:18 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[313,314]} 

 Player 1 20:31:18 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:31:18 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 20:31:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 2 20:31:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:31:18 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 2 20:31:18 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 2 20:31:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 2 20:31:18 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:31:18 $CLEAR_SE_VIS:  

 Player 2 20:31:19 $NEXT_STACK_ID:  

 Player 2 20:31:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 

 Player 2 20:31:19 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":315,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 20:31:19 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":315,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 20:31:19 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 20:31:19 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 1 20:31:19 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:31:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 

 Player 2 20:31:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add AttackRoll 3 "}} 

 Player 2 20:31:22 $ROLL_DICE:  
{"playerId":2} 

 Player 2 20:31:24 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":6} 

 Player 2 20:31:24 $UPDATE_STACK_VIS:  
{"stackId":3,"text":"player rolled 6 vs Isaac!<Monster>"} 

 Player 2 20:31:24 $SHOW_DICE_ROLL:  
{"stackId":3} 

 Player 2 20:31:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 6 vs Isaac!<Monster>"} 

 Player 2 20:31:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:31:27 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":315,"numberRolled":6,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 20:31:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding AttackRoll 3"},"childOfId":20} 

 Player 2 20:31:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 2 20:31:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:31:27 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 2 20:31:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 2 20:31:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:31:27 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:31:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 

 Player 1 20:31:28 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[313,314]} 

 Player 1 20:31:28 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:31:28 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 2 20:31:28 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 2 20:31:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve AttackRoll 3 "}} 

 Player 2 20:31:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 6 vs Isaac!<Monster>"} 

 Player 2 20:31:28 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":315,"numberRolled":6,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 20:31:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Added 0 to original roll"}} 

 Player 2 20:31:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Rolled 4 Against Isaac!<Monster> 3"} 

 Player 2 20:31:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Roll Hit"} 

 Player 2 20:31:28 $NEXT_STACK_ID:  

 Player 2 20:31:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:31:28 $CLEAR_SE_VIS:  

 Player 2 20:31:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 2 Roll Hit"} 

 Player 2 20:31:28 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 2 20:31:28 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":315,"numberRolled":6,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 20:31:28 $REPLACE_STACK:  
{"currentStack":[{"entityId":4,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":3,"creatorCardId":315,"numberRolled":6,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}]} 

 Player 2 20:31:28 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 20:31:28 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 1 20:31:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 

 Player 1 20:31:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 

 Player 2 20:31:31 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":4,"originStackId":3},"isAfterActivation":true,"index":4} 

 Player 2 20:31:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 2 Roll Hit"} 

 Player 2 20:31:31 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":315,"numberRolled":6,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 20:31:31 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":3} 

 Player 2 20:31:31 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 20:31:31 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 1 20:31:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 2 is rolling against Isaac!<Monster>"} 

 Player 2 20:31:34 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":3} 

 Player 2 20:31:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Remove After Resolve AttackRoll 3  "}} 

 Player 2 20:31:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac!"} 

 Player 2 20:31:34 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":315,"numberRolled":6,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 20:31:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Response Remove After Resolve AttackRoll 3"},"childOfId":26} 

 Player 2 20:31:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":26} 

 Player 2 20:31:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:31:34 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 2 20:31:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Wait For Response From Player 1 "},"childOfId":26} 

 Player 2 20:31:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:31:34 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:31:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 2 is rolling against Isaac!<Monster>"} 

 Player 1 20:31:34 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[313,314]} 

 Player 1 20:31:34 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:31:34 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 20:31:34 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 2 20:31:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Resolve CombatDamage 4 "}} 

 Player 2 20:31:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac!"} 

 Player 2 20:31:34 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 2 20:31:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain will deal 1 combat damage to Isaac! "} 

 Player 2 20:31:34 $UPDATE_STACK_VIS:  
{"stackId":4,"text":"Cain will deal 1 combat damage to Isaac!"} 

 Player 2 20:31:34 $MONSTER_GET_DAMAGED:  
{"cardId":281,"hpLeft":6,"damageDealerId":315} 

 Player 2 20:31:34 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":315},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 2 20:31:34 $NEXT_STACK_ID:  

 Player 2 20:31:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Activate Isaac! Effect DealDamage<DealDamage>"} 

 Player 2 20:31:34 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":5,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":true,"index":5,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 20:31:34 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":5,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":true,"index":5,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 20:31:34 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 20:31:34 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 1 20:31:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac!"} 

 Player 1 20:31:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:Activate Isaac! "} 

 Player 2 20:31:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Add ActivatePassiveEffect 5 "}} 

 Player 2 20:31:42 $SHOW_DECISION:  
{"startCardId":281,"endCardId":313} 

 Player 2 20:31:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Activate Isaac! effect DealDamage<DealDamage>"} 

 Player 2 20:31:45 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[313],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":5,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":true,"index":5,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 20:31:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Response Adding ActivatePassiveEffect 5"},"childOfId":31} 

 Player 2 20:31:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":31} 

 Player 2 20:31:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:31:45 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:31:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:Activate Isaac! "} 

 Player 1 20:31:45 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[313,314]} 

 Player 1 20:31:45 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:31:45 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 2 20:31:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Wait For Response From Player 2 "},"childOfId":31} 

 Player 2 20:31:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:31:45 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 20:31:45 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 2 20:31:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Resolve ActivatePassiveEffect 5 "}} 

 Player 2 20:31:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Activate Isaac! effect DealDamage<DealDamage>"} 

 Player 2 20:31:45 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[313],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":5,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":true,"index":5,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 20:31:45 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":281,"particleType":6} 

 Player 1 20:31:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:Activate Isaac! "} 

 Player 2 20:31:47 $DISABLE_PARTICLE_EFFECT:  
{"cardId":281,"particleType":6} 

 Player 2 20:31:47 $PLAYER_GET_HIT:  
{"playerId":1,"damage":1,"damageDealerId":281} 

 Player 2 20:31:47 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":281}],"result":null,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 

 Player 2 20:31:47 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":315},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 2 20:31:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Activated Isaac! Effect"} 

 Player 2 20:31:47 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[313],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":5,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"isAfterActivation":true,"index":5,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 20:31:47 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":5} 

 Player 2 20:31:47 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 20:31:47 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 1 20:31:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:Activate Isaac! "} 

 Player 2 20:31:50 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":5} 

 Player 2 20:31:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Remove After Resolve ActivatePassiveEffect 5  "}} 

 Player 2 20:31:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain will deal 1 combat damage to Isaac! "} 

 Player 2 20:31:50 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[313],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":5,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"isAfterActivation":true,"index":5,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 20:31:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Response Remove After Resolve ActivatePassiveEffect 5"},"childOfId":36} 

 Player 2 20:31:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 2 "},"childOfId":36} 

 Player 2 20:31:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:31:50 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 2 20:31:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Wait For Response From Player 1 "},"childOfId":36} 

 Player 2 20:31:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:31:50 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:31:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:Activate Isaac! "} 

 Player 1 20:31:50 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[313,314]} 

 Player 1 20:31:50 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:31:50 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 20:31:50 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 2 20:31:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Resolve CombatDamage 4 "}} 

 Player 2 20:31:50 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":4},{"type":0,"number":315},{"type":0,"number":281}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":7,"originStackId":4},"isAfterActivation":true,"index":7} 

 Player 2 20:31:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain will deal 1 combat damage to Isaac! "} 

 Player 2 20:31:50 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 2 20:31:50 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":4} 

 Player 2 20:31:51 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 20:31:51 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 1 20:31:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac!"} 

 Player 2 20:31:53 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":4} 

 Player 2 20:31:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Remove After Resolve CombatDamage 4  "}} 

 Player 2 20:31:53 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:31:53 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 2 20:31:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Response Remove After Resolve CombatDamage 4"},"childOfId":41} 

 Player 2 20:31:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 1 "},"childOfId":41} 

 Player 2 20:31:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:31:53 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:31:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac!"} 

 Player 1 20:31:54 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[313,314]} 

 Player 1 20:31:54 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:31:54 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 2 20:31:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Wait For Response From Player 2 "},"childOfId":41} 

 Player 2 20:31:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:31:54 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 20:31:54 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 2 20:31:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Stack Was Emptied "}} 

 Player 2 20:31:54 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:31:54 $CLEAR_SE_VIS:  

 Player 2 20:31:56 $NEXT_STACK_ID:  

 Player 2 20:31:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 

 Player 2 20:31:56 $ADD_TO_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":315,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 20:31:56 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":315,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 20:31:57 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 20:31:57 $SHOW_STACK_EFFECT:  
{"effectId":6} 

 Player 1 20:31:57 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:31:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 

 Player 2 20:31:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Add AttackRoll 6 "}} 

 Player 2 20:31:59 $ROLL_DICE:  
{"playerId":2} 

 Player 2 20:32:01 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":2} 

 Player 2 20:32:01 $UPDATE_STACK_VIS:  
{"stackId":6,"text":"player rolled 2 vs Isaac!<Monster>"} 

 Player 2 20:32:01 $SHOW_DICE_ROLL:  
{"stackId":6} 

 Player 2 20:32:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 2 vs Isaac!<Monster>"} 

 Player 2 20:32:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:32:04 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":315,"numberRolled":2,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 20:32:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Response Adding AttackRoll 6"},"childOfId":46} 

 Player 2 20:32:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Wait For Response From Player 2 "},"childOfId":46} 

 Player 2 20:32:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:32:04 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 2 20:32:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Wait For Response From Player 1 "},"childOfId":46} 

 Player 2 20:32:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:32:04 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:32:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 

 Player 1 20:32:05 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[313,314]} 

 Player 1 20:32:05 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:32:05 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 2 20:32:05 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 2 20:32:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Resolve AttackRoll 6 "}} 

 Player 2 20:32:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 2 vs Isaac!<Monster>"} 

 Player 2 20:32:05 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":315,"numberRolled":2,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 20:32:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Added 0 to original roll"}} 

 Player 2 20:32:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Rolled 4 Against Isaac!<Monster> 3"} 

 Player 2 20:32:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Roll Hit"} 

 Player 2 20:32:05 $NEXT_STACK_ID:  

 Player 2 20:32:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:32:05 $CLEAR_SE_VIS:  

 Player 2 20:32:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 2 Roll Hit"} 

 Player 2 20:32:05 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 2 20:32:05 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":315,"numberRolled":2,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 20:32:05 $REPLACE_STACK:  
{"currentStack":[{"entityId":7,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":6,"creatorCardId":315,"numberRolled":2,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}]} 

 Player 2 20:32:05 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 20:32:05 $SHOW_STACK_EFFECT:  
{"effectId":7} 

 Player 1 20:32:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 

 Player 1 20:32:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 

 Player 2 20:32:08 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":1},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":8,"originStackId":6},"isAfterActivation":true,"index":8} 

 Player 2 20:32:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 2 Roll Hit"} 

 Player 2 20:32:08 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":315,"numberRolled":2,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 20:32:08 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":6} 

 Player 2 20:32:08 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 20:32:08 $SHOW_STACK_EFFECT:  
{"effectId":6} 

 Player 1 20:32:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 2 is rolling against Isaac!<Monster>"} 

 Player 2 20:32:11 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":6} 

 Player 2 20:32:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Remove After Resolve AttackRoll 6  "}} 

 Player 2 20:32:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac!"} 

 Player 2 20:32:11 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":315,"numberRolled":2,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 20:32:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Response Remove After Resolve AttackRoll 6"},"childOfId":52} 

 Player 2 20:32:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Wait For Response From Player 2 "},"childOfId":52} 

 Player 2 20:32:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:32:11 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 2 20:32:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Wait For Response From Player 1 "},"childOfId":52} 

 Player 2 20:32:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:32:11 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:32:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 2 is rolling against Isaac!<Monster>"} 

 Player 1 20:32:11 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[313,314]} 

 Player 1 20:32:11 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:32:11 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 2 20:32:11 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 2 20:32:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":56,"_text":"Resolve CombatDamage 7 "}} 

 Player 2 20:32:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac!"} 

 Player 2 20:32:11 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 2 20:32:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain will deal 1 combat damage to Isaac! "} 

 Player 2 20:32:11 $UPDATE_STACK_VIS:  
{"stackId":7,"text":"Cain will deal 1 combat damage to Isaac!"} 

 Player 2 20:32:11 $MONSTER_GET_DAMAGED:  
{"cardId":281,"hpLeft":5,"damageDealerId":315} 

 Player 2 20:32:11 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":315},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":9,"originStackId":-1},"isAfterActivation":true,"index":9} 

 Player 2 20:32:11 $NEXT_STACK_ID:  

 Player 2 20:32:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Activate Isaac! Effect DealDamage<DealDamage>"} 

 Player 2 20:32:11 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":8,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":true,"index":9,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 20:32:11 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":8,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":true,"index":9,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 20:32:11 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 20:32:11 $SHOW_STACK_EFFECT:  
{"effectId":8} 

 Player 1 20:32:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac!"} 

 Player 1 20:32:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:Activate Isaac! "} 

 Player 2 20:32:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":57,"_text":"Add ActivatePassiveEffect 8 "}} 

 Player 2 20:32:17 $SHOW_DECISION:  
{"startCardId":281,"endCardId":313} 

 Player 2 20:32:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Activate Isaac! effect DealDamage<DealDamage>"} 

 Player 2 20:32:20 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[313],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":8,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":true,"index":9,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 20:32:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":58,"_text":"Response Adding ActivatePassiveEffect 8"},"childOfId":57} 

 Player 2 20:32:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":59,"_text":"Wait For Response From Player 1 "},"childOfId":57} 

 Player 2 20:32:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:32:20 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:32:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:Activate Isaac! "} 

 Player 1 20:32:20 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[313,314]} 

 Player 1 20:32:20 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:32:20 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 2 20:32:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":60,"_text":"Wait For Response From Player 2 "},"childOfId":57} 

 Player 2 20:32:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:32:20 $ACTION_MASSAGE_REMOVE:  
{"id":60} 

 Player 2 20:32:20 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 2 20:32:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":61,"_text":"Resolve ActivatePassiveEffect 8 "}} 

 Player 2 20:32:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Activate Isaac! effect DealDamage<DealDamage>"} 

 Player 2 20:32:20 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[313],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":8,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":true,"index":9,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 20:32:20 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":281,"particleType":6} 

 Player 1 20:32:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:Activate Isaac! "} 

 Player 2 20:32:22 $DISABLE_PARTICLE_EFFECT:  
{"cardId":281,"particleType":6} 

 Player 2 20:32:22 $PLAYER_GET_HIT:  
{"playerId":1,"damage":1,"damageDealerId":281} 

 Player 2 20:32:22 $NEXT_STACK_ID:  

 Player 2 20:32:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Activate Isaac! effect DealDamage<DealDamage>"} 

 Player 2 20:32:22 $CLEAR_SE_VIS:  

 Player 2 20:32:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Activate Isaac! effect DealDamage<DealDamage> \n3:Player 1 Is About To Die"} 

 Player 2 20:32:22 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 2 20:32:22 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[313],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":8,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"effectPassiveMeta":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":315},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":9,"originStackId":-1},"isAfterActivation":true,"index":9,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 20:32:22 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":313,"playerToDieCardId":313,"stackEffectType":15,"killerId":281}} 

 Player 2 20:32:22 $REPLACE_STACK:  
{"currentStack":[{"entityId":7,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"effectCollectedData":{"effectTargets":[313],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":8,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"effectPassiveMeta":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":315},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":9,"originStackId":-1},"isAfterActivation":true,"index":9,"hasDataBeenCollectedYet":true,"stackEffectType":14},{"entityId":9,"creatorCardId":313,"playerToDieCardId":313,"stackEffectType":15,"killerId":281}]} 

 Player 2 20:32:22 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":313,"playerToDieCardId":313,"stackEffectType":15,"killerId":281}} 

 Player 2 20:32:22 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 20:32:22 $SHOW_STACK_EFFECT:  
{"effectId":9} 

 Player 1 20:32:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:Activate Isaac! "} 

 Player 1 20:32:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:Activate Isaac!  \n3:Player 1 Is About To Die"} 

 Player 2 20:32:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:32:25 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":281}],"result":null,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":10,"originStackId":-1},"isAfterActivation":true,"index":10} 

 Player 2 20:32:25 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":315},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":9,"originStackId":-1},"isAfterActivation":true,"index":9} 

 Player 2 20:32:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Activated Isaac! Effect \n3:Player 1 Is About To Die"} 

 Player 2 20:32:25 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[313],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":8,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"isAfterActivation":true,"index":9,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 20:32:25 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":8} 

 Player 2 20:32:25 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 20:32:25 $SHOW_STACK_EFFECT:  
{"effectId":8} 

 Player 1 20:32:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:Activate Isaac!  \n3:Player 1 Is About To Die"} 

 Player 2 20:32:28 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":8} 

 Player 2 20:32:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":62,"_text":"Remove After Resolve ActivatePassiveEffect 8  "}} 

 Player 2 20:32:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Player 1 Is About To Die"} 

 Player 2 20:32:28 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[313],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":8,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"isAfterActivation":true,"index":9,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 20:32:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":63,"_text":"Response Remove After Resolve ActivatePassiveEffect 8"},"childOfId":62} 

 Player 2 20:32:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":64,"_text":"Wait For Response From Player 2 "},"childOfId":62} 

 Player 2 20:32:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:32:28 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 2 20:32:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":65,"_text":"Wait For Response From Player 1 "},"childOfId":62} 

 Player 2 20:32:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:32:28 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:32:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:Activate Isaac!  \n3:Player 1 Is About To Die"} 

 Player 1 20:32:28 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[313,314]} 

 Player 1 20:32:28 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:32:28 $ACTION_MASSAGE_REMOVE:  
{"id":65} 

 Player 2 20:32:28 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 2 20:32:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":66,"_text":"Resolve PlayerDeath 9 "}} 

 Player 2 20:32:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Player 1 Is About To Die"} 

 Player 2 20:32:28 $DO_STACK_EFFECT:  
{"originPlayerId":2,"playerId":1,"currentStack":[{"entityId":7,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":9,"creatorCardId":313,"playerToDieCardId":313,"stackEffectType":15,"killerId":281}]} 

 Player 1 20:32:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:Activate Isaac! "} 

 Player 1 20:32:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 1 Has Died"} 

 Player 1 20:32:28 $NEXT_STACK_ID:  

 Player 1 20:32:29 $CLEAR_SE_VIS:  

 Player 1 20:32:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 1 Has Died \n3:Player 1 Is About To Pay Death Penalties"} 

 Player 1 20:32:29 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 1 20:32:29 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":313,"playerToDieCardId":313,"stackEffectType":15,"killerId":281}} 

 Player 1 20:32:29 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":313,"playerToPayCardId":313,"stackEffectType":16}} 

 Player 1 20:32:29 $REPLACE_STACK:  
{"currentStack":[{"entityId":7,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":9,"creatorCardId":313,"playerToDieCardId":313,"stackEffectType":15,"killerId":281},{"entityId":10,"creatorCardId":313,"playerToPayCardId":313,"stackEffectType":16}]} 

 Player 1 20:32:29 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":313,"playerToPayCardId":313,"stackEffectType":16}} 

 Player 1 20:32:29 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 20:32:29 $SHOW_STACK_EFFECT:  
{"effectId":10} 

 Player 2 20:32:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Player 1 Is About To Die"} 

 Player 2 20:32:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 1 Is About To Die \n3:Player 1 Is About To Pay Death Penalties"} 

 Player 1 20:32:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:32:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 1 Has Died \n3:Player 1 Is About To Pay Death Penalties"} 

 Player 1 20:32:32 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":313,"playerToDieCardId":313,"stackEffectType":15,"killerId":281}} 

 Player 1 20:32:32 $FINISH_DO_STACK_EFFECT:  
{"playerId":2,"newStack":[{"entityId":7,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":9,"creatorCardId":313,"playerToDieCardId":313,"stackEffectType":15,"killerId":281},{"entityId":10,"creatorCardId":313,"playerToPayCardId":313,"stackEffectType":16}]} 

 Player 2 20:32:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 1 Is About To Die \n3:Player 1 Is About To Pay Death Penalties"} 

 Player 2 20:32:32 $CLEAR_SE_VIS:  

 Player 2 20:32:32 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 2 20:32:32 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":313,"playerToDieCardId":313,"stackEffectType":15,"killerId":281}} 

 Player 2 20:32:32 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":313,"playerToPayCardId":313,"stackEffectType":16}} 

 Player 2 20:32:32 $REPLACE_STACK:  
{"currentStack":[{"entityId":7,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":9,"creatorCardId":313,"playerToDieCardId":313,"stackEffectType":15,"killerId":281},{"entityId":10,"creatorCardId":313,"playerToPayCardId":313,"stackEffectType":16}]} 

 Player 2 20:32:32 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 20:32:32 $SHOW_STACK_EFFECT:  
{"effectId":9} 

 Player 1 20:32:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 1 Has Died \n3:Player 1 Is About To Pay Death Penalties"} 

 Player 2 20:32:35 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":9} 

 Player 2 20:32:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":67,"_text":"Remove After Resolve PlayerDeath 9  "}} 

 Player 2 20:32:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 1 Is About To Pay Death Penalties"} 

 Player 2 20:32:35 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":9,"creatorCardId":313,"playerToDieCardId":313,"stackEffectType":15,"killerId":281}} 

 Player 2 20:32:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":68,"_text":"Response Remove After Resolve PlayerDeath 9"},"childOfId":67} 

 Player 2 20:32:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":69,"_text":"Wait For Response From Player 2 "},"childOfId":67} 

 Player 2 20:32:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:32:35 $ACTION_MASSAGE_REMOVE:  
{"id":69} 

 Player 2 20:32:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":70,"_text":"Wait For Response From Player 1 "},"childOfId":67} 

 Player 2 20:32:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:32:35 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:32:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 1 Is About To Die \n3:Player 1 Is About To Pay Death Penalties"} 

 Player 1 20:32:35 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[313,314]} 

 Player 1 20:32:35 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:32:35 $ACTION_MASSAGE_REMOVE:  
{"id":70} 

 Player 2 20:32:35 $ACTION_MASSAGE_REMOVE:  
{"id":68} 

 Player 2 20:32:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":71,"_text":"Resolve PlayerDeathPenalties 10 "}} 

 Player 2 20:32:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 1 Is About To Pay Death Penalties"} 

 Player 2 20:32:35 $DO_STACK_EFFECT:  
{"originPlayerId":2,"playerId":1,"currentStack":[{"entityId":7,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":10,"creatorCardId":313,"playerToPayCardId":313,"stackEffectType":16}]} 

 Player 1 20:32:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 1 Is About To Die"} 

 Player 1 20:32:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":72,"_text":"Player 1 pays Penalties"}} 

 Player 1 20:32:35 $SET_MONEY:  
{"playerId":1,"numOfCoins":2} 

 Player 1 20:32:35 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-1}],"result":null,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 20:32:48 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":52} 

 Player 1 20:32:48 $MOVE_CARD:  
{"moveIndex":9,"cardId":52,"placeID":330,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 20:32:49 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":52,"flipIfFlipped":true,"playerId":1} 

 Player 1 20:32:49 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":52} 

 Player 1 20:32:49 $USE_ITEM:  
{"cardId":313} 

 Player 1 20:32:49 $USE_ITEM:  
{"cardId":314} 

 Player 1 20:32:49 $PLAYER_DIED:  
{"playerId":1} 

 Player 1 20:32:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 1 Paid Death Penalties"} 

 Player 1 20:32:49 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":313,"playerToPayCardId":313,"stackEffectType":16}} 

 Player 1 20:32:49 $FINISH_DO_STACK_EFFECT:  
{"playerId":2,"newStack":[{"entityId":7,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":10,"creatorCardId":313,"playerToPayCardId":313,"stackEffectType":16}]} 

 Player 2 20:32:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 1 Is About To Pay Death Penalties"} 

 Player 2 20:32:49 $CLEAR_SE_VIS:  

 Player 2 20:32:49 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 2 20:32:49 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":313,"playerToPayCardId":313,"stackEffectType":16}} 

 Player 2 20:32:49 $REPLACE_STACK:  
{"currentStack":[{"entityId":7,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":10,"creatorCardId":313,"playerToPayCardId":313,"stackEffectType":16}]} 

 Player 2 20:32:49 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 20:32:49 $SHOW_STACK_EFFECT:  
{"effectId":10} 

 Player 1 20:32:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 1 Paid Death Penalties"} 

 Player 2 20:32:52 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":10} 

 Player 2 20:32:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":73,"_text":"Remove After Resolve PlayerDeathPenalties 10  "}} 

 Player 2 20:32:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac!"} 

 Player 2 20:32:52 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":10,"creatorCardId":313,"playerToPayCardId":313,"stackEffectType":16}} 

 Player 2 20:32:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":74,"_text":"Response Remove After Resolve PlayerDeathPenalties 10"},"childOfId":73} 

 Player 2 20:32:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":75,"_text":"Wait For Response From Player 1 "},"childOfId":73} 

 Player 2 20:32:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:32:52 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:32:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 1 Is About To Pay Death Penalties"} 

 Player 1 20:32:52 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[]} 

 Player 1 20:32:52 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:32:52 $ACTION_MASSAGE_REMOVE:  
{"id":75} 

 Player 2 20:32:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":76,"_text":"Wait For Response From Player 2 "},"childOfId":73} 

 Player 2 20:32:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:32:52 $ACTION_MASSAGE_REMOVE:  
{"id":76} 

 Player 2 20:32:52 $ACTION_MASSAGE_REMOVE:  
{"id":74} 

 Player 2 20:32:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":77,"_text":"Resolve CombatDamage 7 "}} 

 Player 2 20:32:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac!"} 

 Player 2 20:32:52 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 2 20:32:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain will deal 1 combat damage to Isaac! "} 

 Player 2 20:32:52 $UPDATE_STACK_VIS:  
{"stackId":7,"text":"Cain will deal 1 combat damage to Isaac!"} 

 Player 2 20:32:52 $MONSTER_GET_DAMAGED:  
{"cardId":281,"hpLeft":4,"damageDealerId":315} 

 Player 2 20:32:53 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":315},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":11,"originStackId":-1},"isAfterActivation":true,"index":11} 

 Player 2 20:32:53 $NEXT_STACK_ID:  

 Player 2 20:32:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Activate Isaac! Effect DealDamage<DealDamage>"} 

 Player 2 20:32:53 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":11,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":true,"index":11,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 20:32:53 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":11,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":true,"index":11,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 20:32:53 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 20:32:53 $SHOW_STACK_EFFECT:  
{"effectId":11} 

 Player 1 20:32:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac!"} 

 Player 1 20:32:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:Activate Isaac! "} 

 Player 2 20:32:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":78,"_text":"Add ActivatePassiveEffect 11 "}} 

 Player 2 20:32:55 $SHOW_DECISION:  
{"startCardId":281,"endCardId":315} 

 Player 2 20:32:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Activate Isaac! effect DealDamage<DealDamage>"} 

 Player 2 20:32:58 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[315],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":11,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":true,"index":11,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 20:32:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":79,"_text":"Response Adding ActivatePassiveEffect 11"},"childOfId":78} 

 Player 2 20:32:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":80,"_text":"Wait For Response From Player 2 "},"childOfId":78} 

 Player 2 20:32:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:32:58 $ACTION_MASSAGE_REMOVE:  
{"id":80} 

 Player 2 20:32:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":81,"_text":"Wait For Response From Player 1 "},"childOfId":78} 

 Player 2 20:32:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:32:58 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:32:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:Activate Isaac! "} 

 Player 1 20:32:59 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[]} 

 Player 1 20:32:59 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:32:59 $ACTION_MASSAGE_REMOVE:  
{"id":81} 

 Player 2 20:32:59 $ACTION_MASSAGE_REMOVE:  
{"id":79} 

 Player 2 20:32:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":82,"_text":"Resolve ActivatePassiveEffect 11 "}} 

 Player 2 20:32:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Activate Isaac! effect DealDamage<DealDamage>"} 

 Player 2 20:32:59 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[315],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":11,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":true,"index":11,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 20:32:59 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":281,"particleType":6} 

 Player 1 20:32:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:Activate Isaac! "} 

 Player 2 20:33:01 $DISABLE_PARTICLE_EFFECT:  
{"cardId":281,"particleType":6} 

 Player 2 20:33:01 $PLAYER_GET_HIT:  
{"playerId":2,"damage":1,"damageDealerId":281} 

 Player 2 20:33:01 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":281}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":12,"originStackId":-1},"isAfterActivation":true,"index":12} 

 Player 2 20:33:01 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":315},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":11,"originStackId":-1},"isAfterActivation":true,"index":11} 

 Player 2 20:33:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Activated Isaac! Effect"} 

 Player 2 20:33:01 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[315],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":11,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"isAfterActivation":true,"index":11,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 20:33:01 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":11} 

 Player 2 20:33:01 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 20:33:01 $SHOW_STACK_EFFECT:  
{"effectId":11} 

 Player 1 20:33:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:Activate Isaac! "} 

 Player 2 20:33:04 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":11} 

 Player 2 20:33:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":83,"_text":"Remove After Resolve ActivatePassiveEffect 11  "}} 

 Player 2 20:33:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain will deal 1 combat damage to Isaac! "} 

 Player 2 20:33:04 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[315],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":11,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"isAfterActivation":true,"index":11,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 20:33:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":84,"_text":"Response Remove After Resolve ActivatePassiveEffect 11"},"childOfId":83} 

 Player 2 20:33:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":85,"_text":"Wait For Response From Player 1 "},"childOfId":83} 

 Player 2 20:33:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:33:04 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:33:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:Activate Isaac! "} 

 Player 1 20:33:04 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[]} 

 Player 1 20:33:04 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:33:04 $ACTION_MASSAGE_REMOVE:  
{"id":85} 

 Player 2 20:33:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":86,"_text":"Wait For Response From Player 2 "},"childOfId":83} 

 Player 2 20:33:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:33:04 $ACTION_MASSAGE_REMOVE:  
{"id":86} 

 Player 2 20:33:04 $ACTION_MASSAGE_REMOVE:  
{"id":84} 

 Player 2 20:33:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":87,"_text":"Resolve CombatDamage 7 "}} 

 Player 2 20:33:04 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":4},{"type":0,"number":315},{"type":0,"number":281}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":13,"originStackId":7},"isAfterActivation":true,"index":13} 

 Player 2 20:33:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain will deal 1 combat damage to Isaac! "} 

 Player 2 20:33:04 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 2 20:33:04 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":7} 

 Player 2 20:33:04 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 20:33:04 $SHOW_STACK_EFFECT:  
{"effectId":7} 

 Player 1 20:33:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac!"} 

 Player 2 20:33:07 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":7} 

 Player 2 20:33:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":88,"_text":"Remove After Resolve CombatDamage 7  "}} 

 Player 2 20:33:07 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:33:07 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 2 20:33:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":89,"_text":"Response Remove After Resolve CombatDamage 7"},"childOfId":88} 

 Player 2 20:33:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":90,"_text":"Wait For Response From Player 2 "},"childOfId":88} 

 Player 2 20:33:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:33:07 $ACTION_MASSAGE_REMOVE:  
{"id":90} 

 Player 2 20:33:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":91,"_text":"Wait For Response From Player 1 "},"childOfId":88} 

 Player 2 20:33:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:33:07 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:33:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac!"} 

 Player 1 20:33:07 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[]} 

 Player 1 20:33:07 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:33:07 $ACTION_MASSAGE_REMOVE:  
{"id":91} 

 Player 2 20:33:07 $ACTION_MASSAGE_REMOVE:  
{"id":89} 

 Player 2 20:33:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":92,"_text":"Stack Was Emptied "}} 

 Player 2 20:33:07 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:33:08 $CLEAR_SE_VIS:  

 Player 2 20:33:08 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":4},{"type":0,"number":315},{"type":0,"number":281}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":14,"originStackId":7},"isAfterActivation":true,"index":14} 

 Player 2 20:33:08 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":7} 

 Player 2 20:33:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":93,"_text":"Stack Was Emptied "}} 

 Player 2 20:33:08 $CLEAR_SE_VIS:  

 Player 2 20:41:56 $MATCH: 