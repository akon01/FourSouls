Start Log 

 Player 1 05:56:14 $MATCH:  

 Player 1 05:56:14 $START_GAME:  

 Player 1 05:56:14 $MOVE_TO_TABLE:  

 Player 2 05:56:14 $MOVE_TO_TABLE:  

 Player 2 05:56:23 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 1 05:56:23 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 05:56:23 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":270,"itemCardId":271} 

 Player 2 05:56:23 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":275}],"result":true,"preventMethod":false,"methodScopeId":274,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 05:56:23 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":274,"itemCardId":275} 

 Player 2 05:56:23 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[143,25,87,76,88,10,54,37,28,109,119,59,24,72,96,92,134,53,73,142,104,31,99,27,110,112,130,131,62,80,111,56,93,19,20,113,127,118,85,68,11,133,67,43,138,34,21,125,64,42,137,16,102,33,49,32,89,83,36,48,70,14,35,39,44,17,79,107,41,136,129,45,51,91,106,121,30,46,141,97,71,9,124,66,126,74,29,114,69,38,100,13,95,15,61,7,57,63,18,77,94,84,90,108,81,58,82,55,101,103,22,105,47,135,75,120,122,65,23,8,128,50,116,123,139,132,98,52,60,86,12,26,140,78,115,117,40]} 

 Player 2 05:56:23 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[229,243,245,247,256,239,248,212,226,235,216,254,233,219,220,211,217,244,252,257,249,258,246,218,259,215,228,250,240,214,232,234,213,230,242,227,209,225,236,208,224,206,207,231,237,238,222,255,210,253,241,251,223,221]} 

 Player 2 05:56:24 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[168,197,184,179,163,170,199,164,202,173,158,167,150,154,194,171,181,200,201,172,191,195,203,182,190,183,148,180,147,149,166,174,152,178,192,198,188,189,155,185,153,175,151,196,146,156,160,157,165,162,177,193,161,176,186,187,159,169]} 

 Player 2 05:56:24 $DRAW_CARD:  
{"deckType":5} 

 Player 2 05:56:24 $FLIP_CARD:  
{"cardId":169} 

 Player 2 05:56:24 $ADD_STORE_CARD:  
{"cardId":169} 

 Player 2 05:56:24 $DRAW_CARD:  
{"deckType":5} 

 Player 2 05:56:24 $FLIP_CARD:  
{"cardId":159} 

 Player 2 05:56:24 $ADD_STORE_CARD:  
{"cardId":159} 

 Player 2 05:56:24 $DRAW_CARD:  
{"deckType":2} 

 Player 2 05:56:24 $FLIP_CARD:  
{"cardId":221} 

 Player 2 05:56:24 $REGISTER_PASSIVE_ITEM:  
{"cardId":221} 

 Player 2 05:56:24 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":221} 

 Player 2 05:56:24 $NEW_MONSTER_ON_PLACE:  
{"cardId":221,"monsterPlaceId":1} 

 Player 2 05:56:24 $DRAW_CARD:  
{"deckType":2} 

 Player 2 05:56:24 $FLIP_CARD:  
{"cardId":223} 

 Player 2 05:56:24 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":223} 

 Player 2 05:56:24 $NEW_MONSTER_ON_PLACE:  
{"cardId":223,"monsterPlaceId":2} 

 Player 2 05:56:24 $CHANGE_MONEY:  
{"playerId":1,"numOfCoins":3,"isStartGame":true} 

 Player 2 05:56:24 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 05:56:24 $DRAW_CARD:  
{"deckType":1} 

 Player 2 05:56:24 $MOVE_CARD:  
{"moveIndex":1,"cardId":40,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 05:56:24 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":271}],"result":true,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 05:56:25 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":40,"flipIfFlipped":false,"playerId":2} 

 Player 2 05:56:25 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":40} 

 Player 2 05:56:25 $FLIP_CARD:  
{"cardId":40} 

 Player 2 05:56:25 $FLIP_CARD:  
{"cardId":40} 

 Player 2 05:56:25 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":40} 

 Player 2 05:56:25 $DRAW_CARD:  
{"deckType":1} 

 Player 2 05:56:25 $MOVE_CARD:  
{"moveIndex":2,"cardId":117,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 05:56:25 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":117,"flipIfFlipped":false,"playerId":2} 

 Player 2 05:56:25 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":117} 

 Player 2 05:56:25 $FLIP_CARD:  
{"cardId":117} 

 Player 2 05:56:25 $FLIP_CARD:  
{"cardId":117} 

 Player 2 05:56:25 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":117} 

 Player 2 05:56:25 $DRAW_CARD:  
{"deckType":1} 

 Player 2 05:56:25 $MOVE_CARD:  
{"moveIndex":3,"cardId":115,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 05:56:26 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":115,"flipIfFlipped":false,"playerId":2} 

 Player 2 05:56:26 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":115} 

 Player 2 05:56:26 $FLIP_CARD:  
{"cardId":115} 

 Player 2 05:56:26 $FLIP_CARD:  
{"cardId":115} 

 Player 2 05:56:26 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":115} 

 Player 2 05:56:26 $CHANGE_MONEY:  
{"playerId":2,"numOfCoins":3,"isStartGame":true} 

 Player 2 05:56:26 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":274,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 05:56:26 $DRAW_CARD:  
{"deckType":1} 

 Player 2 05:56:26 $MOVE_CARD:  
{"moveIndex":4,"cardId":78,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 05:56:26 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":78,"flipIfFlipped":false,"playerId":2} 

 Player 2 05:56:26 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":78} 

 Player 2 05:56:26 $FLIP_CARD:  
{"cardId":78} 

 Player 2 05:56:26 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":78} 

 Player 2 05:56:26 $DRAW_CARD:  
{"deckType":1} 

 Player 2 05:56:26 $MOVE_CARD:  
{"moveIndex":5,"cardId":140,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 05:56:27 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":140,"flipIfFlipped":false,"playerId":2} 

 Player 2 05:56:27 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":140} 

 Player 2 05:56:27 $FLIP_CARD:  
{"cardId":140} 

 Player 2 05:56:27 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":140} 

 Player 2 05:56:27 $DRAW_CARD:  
{"deckType":1} 

 Player 2 05:56:27 $MOVE_CARD:  
{"moveIndex":6,"cardId":26,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 05:56:27 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":26,"flipIfFlipped":false,"playerId":2} 

 Player 2 05:56:27 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":26} 

 Player 2 05:56:27 $FLIP_CARD:  
{"cardId":26} 

 Player 2 05:56:27 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":26} 

 Player 2 05:56:27 $GAME_HAS_STARTED:  

 Player 2 05:56:27 $SET_TURN:  
{"playerId":2} 

 Player 2 05:56:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 05:56:28 $NEXT_STACK_ID:  

 Player 2 05:56:28 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 05:56:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 05:56:28 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":274,"turnPlayerCardId":274,"stackEffectType":13}} 

 Player 2 05:56:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 2 05:56:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 05:56:28 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 05:56:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 05:56:28 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":274,"turnPlayerCardId":274,"stackEffectType":13}} 

 Player 2 05:56:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 2 05:56:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 2 05:56:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 05:56:28 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 05:56:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 2 05:56:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 05:56:28 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 05:56:28 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 05:56:28 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 05:56:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 05:56:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 05:56:28 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 05:56:28 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 05:56:28 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 05:56:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 2 05:56:28 $DRAW_CARD:  
{"deckType":1} 

 Player 2 05:56:28 $MOVE_CARD:  
{"moveIndex":7,"cardId":12,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 05:56:29 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":12,"flipIfFlipped":false,"playerId":2} 

 Player 2 05:56:29 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":12} 

 Player 2 05:56:29 $FLIP_CARD:  
{"cardId":12} 

 Player 2 05:56:29 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":12} 

 Player 2 05:56:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 05:56:29 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":274,"turnPlayerCardId":274,"stackEffectType":13}} 

 Player 2 05:56:29 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 05:56:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 2 05:56:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 05:56:29 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":274,"turnPlayerCardId":274,"stackEffectType":13}} 

 Player 2 05:56:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 2 05:56:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 2 05:56:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 05:56:29 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 05:56:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 05:56:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 05:56:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 05:56:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 05:56:29 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 05:56:29 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 2 05:56:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 2 05:56:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 05:56:29 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 2 05:56:29 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 2 05:56:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 2 05:56:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 05:56:29 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 05:56:29 $UPDATE_ACTIONS:  

 Player 2 05:56:31 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 05:56:32 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 05:56:33 $MOVE_CARD:  
{"moveIndex":8,"cardId":175,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Hand"} 

 Player 2 05:56:33 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":175,"flipIfFlipped":true,"playerId":1} 

 Player 1 05:56:33 $REGISTER_PASSIVE_ITEM:  
{"cardId":175} 

 Player 1 05:56:33 $MOVE_CARD:  
{"moveIndex":9,"cardId":175,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 

 Player 2 05:56:34 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":175,"flipIfFlipped":true,"playerId":1} 

 Player 1 05:56:34 $ADD_AN_ITEM:  
{"playerId":1,"cardId":175,"isReward":true} 

 Player 1 05:56:34 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":175}],"result":true,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 1 05:56:41 $MOVE_CARD:  
{"moveIndex":10,"cardId":156,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Hand"} 

 Player 2 05:56:42 $MOVE_CARD_END:  
{"moveIndex":10,"cardId":156,"flipIfFlipped":true,"playerId":1} 

 Player 1 05:56:42 $MOVE_CARD:  
{"moveIndex":11,"cardId":156,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 

 Player 2 05:56:42 $MOVE_CARD_END:  
{"moveIndex":11,"cardId":156,"flipIfFlipped":true,"playerId":1} 

 Player 1 05:56:42 $ADD_AN_ITEM:  
{"playerId":1,"cardId":156,"isReward":true} 

 Player 1 05:56:42 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":156}],"result":true,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 1 05:56:46 $MOVE_CARD:  
{"moveIndex":12,"cardId":148,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Hand"} 

 Player 2 05:56:46 $MOVE_CARD_END:  
{"moveIndex":12,"cardId":148,"flipIfFlipped":true,"playerId":1} 

 Player 1 05:56:46 $MOVE_CARD:  
{"moveIndex":13,"cardId":148,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 

 Player 2 05:56:47 $MOVE_CARD_END:  
{"moveIndex":13,"cardId":148,"flipIfFlipped":true,"playerId":1} 

 Player 1 05:56:47 $ADD_AN_ITEM:  
{"playerId":1,"cardId":148,"isReward":true} 

 Player 1 05:56:47 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":148}],"result":true,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 1 05:56:51 $NEXT_STACK_ID:  

 Player 1 05:56:51 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 05:56:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Dads Key"} 

 Player 1 05:56:51 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":274,"hasLockingStackEffect":false,"itemToPlayCardId":156,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 05:56:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add ActivateItem 2 "}} 

 Player 2 05:56:51 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 05:56:51 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 05:57:31 $NEXT_STACK_ID:  

 Player 1 05:57:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Dads Key"} 

 Player 1 05:57:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Dads Key \n2:Player 2 activated Boomerang"} 

 Player 1 05:57:31 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":274,"hasLockingStackEffect":false,"itemToPlayCardId":148,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 05:57:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Add ActivateItem 3 "}} 

 Player 2 05:57:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Dads Key"} 

 Player 2 05:57:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Dads Key"} 

 Player 1 05:57:34 $USE_ITEM:  
{"cardId":148} 

 Player 1 05:57:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 05:57:34 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 05:57:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Dads Key \n2:Player 2 activated Boomerang"} 

 Player 1 05:57:34 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":274,"hasLockingStackEffect":false,"itemToPlayCardId":148,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 05:57:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Response Adding ActivateItem 3"},"childOfId":1} 

 Player 1 05:57:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":1} 

 Player 1 05:57:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 05:57:34 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 05:57:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Dads Key \n2:Player 2 activated Boomerang"} 

 Player 2 05:57:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Dads Key \n2:Player 2 activated Boomerang"} 

 Player 2 05:57:34 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 05:57:34 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 05:57:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Wait For Response From Player 1 "},"childOfId":1} 

 Player 1 05:57:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 05:57:34 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 05:57:34 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 05:57:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Resolve ActivateItem 3 "}} 

 Player 1 05:57:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Dads Key \n2:Player 2 activated Boomerang"} 

 Player 1 05:57:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Dads Key \n2:Player 2 activated Boomerang"} 

 Player 1 05:57:34 $DO_STACK_EFFECT:  
{"originPlayerId":1,"playerId":2,"currentStack":[{"entityId":2,"creatorCardId":274,"hasLockingStackEffect":false,"itemToPlayCardId":156,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1},{"entityId":3,"creatorCardId":274,"hasLockingStackEffect":false,"itemToPlayCardId":148,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 

 Player 2 05:57:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Dads Key \n2:Player 2 activated Boomerang"} 

 Player 2 05:57:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Dads Key \n2:Player 2 activated Boomerang"} 

 Player 2 05:57:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Dads Key \n2:Player 2 activated Boomerang"} 

 Player 2 05:57:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Dads Key \n2:Player 2 activated Boomerang"} 

 Player 2 05:57:34 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":148,"particleType":6} 

 Player 2 05:57:36 $DISABLE_PARTICLE_EFFECT:  
{"cardId":148,"particleType":6} 

 Player 2 05:57:36 $LOG_ERROR:  
"effect TakeLootFromPlayer failed to execute\nTypeError: Cannot read property 'getTarget' of undefined\neffect data was:" 
//////Error From Player 2////
  

 Player 2 05:57:36 $LOG_ERROR:  
//////Error From Player 2////
 "effect TakeLootFromPlayer failed to execute\nTypeError: Cannot read property 'getTarget' of undefined\neffect data was:"
////// 

 Player 2 05:57:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Dads Key \n2:Player 2 activated Boomerang"} 

 Player 2 05:57:37 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":274,"hasLockingStackEffect":false,"itemToPlayCardId":148,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 05:57:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Dads Key \n2:Player 2 activated Boomerang"} 

 Player 2 05:57:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Dads Key \n2:Player 2 activated Boomerang"} 

 Player 2 05:57:37 $FINISH_DO_STACK_EFFECT:  
{"playerId":1,"newStack":[{"entityId":2,"creatorCardId":274,"hasLockingStackEffect":false,"itemToPlayCardId":156,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1},{"entityId":3,"creatorCardId":274,"hasLockingStackEffect":false,"itemToPlayCardId":148,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 

 Player 1 05:57:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Dads Key \n2:Player 2 activated Boomerang"} 

 Player 1 05:57:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Dads Key \n2:Player 2 activated Boomerang"} 

 Player 1 05:57:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Dads Key \n2:Player 2 activated Boomerang"} 

 Player 1 05:57:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Dads Key \n2:Player 2 activated Boomerang"} 

 Player 1 05:57:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Dads Key \n2:Player 2 activated Boomerang"} 

 Player 1 05:57:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Dads Key \n2:Player 2 activated Boomerang"} 

 Player 1 05:57:37 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 05:57:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Dads Key \n2:Player 2 activated Boomerang"} 

 Player 1 05:57:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Dads Key \n2:Player 2 activated Boomerang"} 

 Player 1 05:57:37 $REPLACE_STACK:  
{"currentStack":[{"entityId":2,"creatorCardId":274,"hasLockingStackEffect":false,"itemToPlayCardId":156,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1},{"entityId":3,"creatorCardId":274,"hasLockingStackEffect":false,"itemToPlayCardId":148,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 

 Player 1 05:57:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Remove After Resolve ActivateItem 3  "}} 

 Player 1 05:57:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Dads Key"} 

 Player 1 05:57:37 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":274,"hasLockingStackEffect":false,"itemToPlayCardId":148,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 05:57:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Response Remove After Resolve ActivateItem 3"},"childOfId":6} 

 Player 1 05:57:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":6} 

 Player 1 05:57:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 05:57:37 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 1 05:57:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Wait For Response From Player 2 "},"childOfId":6} 

 Player 1 05:57:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 05:57:37 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 05:57:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Dads Key \n2:Player 2 activated Boomerang"} 

 Player 2 05:57:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Dads Key \n2:Player 2 activated Boomerang"} 

 Player 2 05:57:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Dads Key \n2:Player 2 activated Boomerang"} 

 Player 2 05:57:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Dads Key \n2:Player 2 activated Boomerang"} 

 Player 2 05:57:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Dads Key \n2:Player 2 activated Boomerang"} 

 Player 2 05:57:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Dads Key \n2:Player 2 activated Boomerang"} 

 Player 2 05:57:38 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 05:57:38 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 05:57:38 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 1 05:57:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Resolve ActivateItem 2 "}} 

 Player 1 05:57:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Dads Key"} 

 Player 1 05:57:38 $DO_STACK_EFFECT:  
{"originPlayerId":1,"playerId":2,"currentStack":[{"entityId":2,"creatorCardId":274,"hasLockingStackEffect":false,"itemToPlayCardId":156,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}]} 

 Player 2 05:57:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Dads Key"} 

 Player 2 05:57:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Dads Key"} 

 Player 2 05:57:38 $LOG_ERROR:  
{} 
//////Error From Player 2////
  

 Player 2 05:57:38 $LOG_ERROR:  
//////Error From Player 2////
 {}
////// 

 Player 2 05:57:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Dads Key"} 

 Player 2 05:57:38 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":274,"hasLockingStackEffect":false,"itemToPlayCardId":156,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 05:57:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Dads Key"} 

 Player 2 05:57:38 $FINISH_DO_STACK_EFFECT:  
{"playerId":1,"newStack":[{"entityId":2,"creatorCardId":274,"hasLockingStackEffect":false,"itemToPlayCardId":156,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}]} 

 Player 1 05:57:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Dads Key"} 

 Player 1 05:57:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Dads Key"} 

 Player 1 05:57:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Dads Key"} 

 Player 1 05:57:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Dads Key"} 

 Player 1 05:57:38 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 05:57:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Dads Key"} 

 Player 1 05:57:38 $REPLACE_STACK:  
{"currentStack":[{"entityId":2,"creatorCardId":274,"hasLockingStackEffect":false,"itemToPlayCardId":156,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}]} 

 Player 1 05:57:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Remove After Resolve ActivateItem 2  "}} 

 Player 1 05:57:38 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 05:57:38 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":274,"hasLockingStackEffect":false,"itemToPlayCardId":156,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 05:57:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Response Remove After Resolve ActivateItem 2"},"childOfId":11} 

 Player 1 05:57:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":11} 

 Player 1 05:57:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 05:57:39 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 05:57:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Dads Key"} 

 Player 2 05:57:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Dads Key"} 

 Player 2 05:57:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Dads Key"} 

 Player 2 05:57:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Dads Key"} 

 Player 2 05:57:39 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 05:57:39 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 1 05:57:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Wait For Response From Player 1 "},"childOfId":11} 

 Player 1 05:57:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 05:57:39 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 05:57:39 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 1 05:57:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Stack Was Emptied "}} 

 Player 1 05:57:39 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 05:57:39 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 05:57:39 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 1 05:57:39 $TURN_PLAYER_DO_STACK_EFFECT:  
{"playerId":2} 

 Player 1 05:57:40 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 1 05:57:40 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 05:57:41 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 2 05:58:54 $MATCH: 