{"version":3,"sources":["Advisor.ts"],"names":[],"mappings":"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","file":"../Advisor.js","sourcesContent":["import {\r\n    IContainer, Singleton, getOwnMethodMetadata,\r\n    Type, ObjectMap, lang, ParamProviders\r\n} from '@ts-ioc/core';\r\nimport { Advices } from './advices';\r\nimport { Advice } from './decorators/Advice';\r\nimport { NonePointcut } from './decorators/NonePointcut';\r\nimport { AdviceMetadata } from './metadatas';\r\nimport { IAdvisor, AdvisorToken } from './IAdvisor';\r\n\r\n/**\r\n * for global aop advisor.\r\n *\r\n * @export\r\n * @class Advisor\r\n */\r\n@NonePointcut()\r\n@Singleton(AdvisorToken)\r\nexport class Advisor implements IAdvisor {\r\n    /**\r\n     * aspects.\r\n     *\r\n     * @type {Map<Type<any>, ObjectMap<AdviceMetadata[]>>}\r\n     * @memberof AspectManager\r\n     */\r\n    aspects: Map<Type<any>, ObjectMap<AdviceMetadata[]>>;\r\n\r\n    /**\r\n     * aspect ioc containers.\r\n     *\r\n     * @protected\r\n     * @type {Map<Type<any>, IContainer>}\r\n     * @memberof Advisor\r\n     */\r\n    protected aspectIocs: Map<Type<any>, IContainer>;\r\n    /**\r\n     * method advices.\r\n     *\r\n     * @type {Map<string, Advices>}\r\n     * @memberof AspectManager\r\n     */\r\n    advices: Map<string, Advices>;\r\n\r\n\r\n    constructor() {\r\n        this.aspects = new Map();\r\n        this.aspectIocs = new Map();\r\n        this.advices = new Map();\r\n    }\r\n\r\n    /**\r\n     * set advices.\r\n     *\r\n     * @param {string} key\r\n     * @param {Advices} advices\r\n     * @memberof Advisor\r\n     */\r\n    setAdvices(key: string, advices: Advices) {\r\n        if (!this.advices.has(key)) {\r\n            this.advices.set(key, advices);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * get advices.\r\n     *\r\n     * @param {string} key\r\n     * @returns\r\n     * @memberof Advisor\r\n     */\r\n    getAdvices(key: string) {\r\n        if (!this.advices.has(key)) {\r\n            return null;\r\n        }\r\n        return this.advices.get(key);\r\n    }\r\n\r\n    /**\r\n     * has register advices or not.\r\n     *\r\n     * @param {Type<any>} targetType\r\n     * @returns {boolean}\r\n     * @memberof Advisor\r\n     */\r\n    hasRegisterAdvices(targetType: Type<any>): boolean {\r\n        let methods = lang.keys(Object.getOwnPropertyDescriptors(targetType.prototype));\r\n        let className = lang.getClassName(targetType);\r\n        return methods.some(m => this.advices.has(`${className}.${m}`));\r\n    }\r\n\r\n    /**\r\n     * add aspect.\r\n     *\r\n     * @param {Type<any>} aspect\r\n     * @param {IContainer} raiseContainer\r\n     * @memberof Advisor\r\n     */\r\n    add(aspect: Type<any>, raiseContainer: IContainer) {\r\n        if (!this.aspects.has(aspect)) {\r\n            let metas = getOwnMethodMetadata<AdviceMetadata>(Advice, aspect);\r\n            this.aspects.set(aspect, metas);\r\n            this.aspectIocs.set(aspect, raiseContainer);\r\n        }\r\n    }\r\n\r\n    getContainer(aspect: Type<any>, defaultContainer?: IContainer): IContainer {\r\n        if (this.aspectIocs.has(aspect)) {\r\n            return this.aspectIocs.get(aspect) || defaultContainer;\r\n        }\r\n        return defaultContainer;\r\n    }\r\n\r\n    /**\r\n     * resolve aspect.\r\n     *\r\n     * @template T\r\n     * @param {Type<T>} aspect\r\n     * @param {...ParamProviders[]} providers\r\n     * @returns {T}\r\n     * @memberof Advisor\r\n     */\r\n    resolve<T>(aspect: Type<T>, ...providers: ParamProviders[]): T {\r\n        if (this.aspectIocs.has(aspect)) {\r\n            return this.aspectIocs.get(aspect).resolve(aspect, ...providers);\r\n        }\r\n        return null;\r\n    }\r\n\n                        static getClassAnnations():any  {\n                            return {\"name\":\"Advisor\",\"params\":{\"constructor\":[],\"setAdvices\":[\"key\",\"advices\"],\"getAdvices\":[\"key\"],\"hasRegisterAdvices\":[\"targetType\"],\"add\":[\"aspect\",\"raiseContainer\"],\"getContainer\":[\"aspect\",\"defaultContainer\"],\"resolve\":[\"aspect\",\"providers\"]}};\n                        }\n                   }\r\n"]}