Start Log 

 Player 1 22:00:36 $MATCH:  

 Player 1 22:00:36 $START_GAME:  

 Player 1 22:00:36 $MOVE_TO_TABLE:  

 Player 2 22:00:36 $MOVE_TO_TABLE:  

 Player 2 22:00:45 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 1 22:00:45 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 22:00:45 $SET_CHAR:  
{"originPlayerId":2,"playerId":1,"charCardId":315,"itemCardId":318} 

 Player 1 22:00:45 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":315,"itemCardId":318} 

 Player 1 22:00:45 $SET_CHAR_END:  
{"playerId":2} 

 Player 2 22:00:45 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":319,"itemCardId":320} 

 Player 2 22:00:45 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[112,66,22,104,78,96,68,93,110,73,129,77,124,10,15,138,29,123,37,57,60,134,137,88,91,5,95,80,117,113,8,126,105,49,65,89,76,119,139,72,47,30,130,55,39,116,108,43,97,14,111,121,101,51,16,44,74,36,102,19,42,53,84,18,69,17,21,103,64,90,107,85,56,28,67,46,136,70,94,25,33,100,40,122,32,7,83,115,87,11,125,128,114,23,131,35,82,120,59,9,26,50,41,27,135,6,13,63,4,61,106,48,58,62,118,133,79,45,98,99,52,132,127,92,12,81,38,34,109,75,54,20,31,24,86,71]} 

 Player 2 22:00:45 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[307,289,241,291,271,275,293,262,267,277,270,239,301,260,245,234,302,272,276,259,300,243,240,297,306,266,248,228,309,255,253,232,285,284,287,250,225,246,304,242,263,273,252,279,290,251,226,233,280,296,303,261,310,264,274,292,254,231,227,257,281,298,269,224,247,265,294,282,256,244,295,305,288,249,258,299,223,236,235,308,278,268,283,286,230,237,229,238]} 

 Player 2 22:00:46 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[189,187,175,184,161,219,177,163,200,213,141,197,214,169,154,170,218,147,149,179,173,190,208,182,217,193,201,174,181,166,212,195,168,148,188,215,151,145,210,202,172,144,191,198,178,205,206,216,194,167,186,150,143,165,196,146,183,171,180,155,153,209,152,221,158,204,192,160,159,211,207,185,203,220,142,176,157,199,164,162,156]} 

 Player 2 22:00:46 $DRAW_CARD:  
{"deckType":5} 

 Player 2 22:00:46 $FLIP_CARD:  
{"cardId":156} 

 Player 2 22:00:46 $ADD_STORE_CARD:  
{"cardId":156} 

 Player 2 22:00:46 $DRAW_CARD:  
{"deckType":5} 

 Player 2 22:00:46 $FLIP_CARD:  
{"cardId":162} 

 Player 2 22:00:46 $ADD_STORE_CARD:  
{"cardId":162} 

 Player 2 22:00:46 $DRAW_CARD:  
{"deckType":2} 

 Player 2 22:00:46 $FLIP_CARD:  
{"cardId":238} 

 Player 2 22:00:46 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":238} 

 Player 2 22:00:46 $NEW_MONSTER_ON_PLACE:  
{"cardId":238,"monsterPlaceId":1} 

 Player 2 22:00:46 $DRAW_CARD:  
{"deckType":2} 

 Player 2 22:00:46 $FLIP_CARD:  
{"cardId":229} 

 Player 2 22:00:46 $REGISTER_PASSIVE_ITEM:  
{"cardId":229} 

 Player 2 22:00:46 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":229} 

 Player 2 22:00:46 $NEW_MONSTER_ON_PLACE:  
{"cardId":229,"monsterPlaceId":2} 

 Player 2 22:00:46 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 22:00:46 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 22:00:46 $DRAW_CARD:  
{"deckType":1} 

 Player 2 22:00:46 $MOVE_CARD:  
{"moveIndex":1,"cardId":71,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 22:00:46 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":71,"flipIfFlipped":false,"playerId":2} 

 Player 2 22:00:46 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":71} 

 Player 2 22:00:46 $FLIP_CARD:  
{"cardId":71} 

 Player 2 22:00:47 $FLIP_CARD:  
{"cardId":71} 

 Player 2 22:00:47 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":71} 

 Player 2 22:00:47 $DRAW_CARD:  
{"deckType":1} 

 Player 2 22:00:47 $MOVE_CARD:  
{"moveIndex":2,"cardId":86,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 22:00:47 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":86,"flipIfFlipped":false,"playerId":2} 

 Player 2 22:00:47 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":86} 

 Player 2 22:00:47 $FLIP_CARD:  
{"cardId":86} 

 Player 2 22:00:47 $FLIP_CARD:  
{"cardId":86} 

 Player 2 22:00:47 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":86} 

 Player 2 22:00:47 $DRAW_CARD:  
{"deckType":1} 

 Player 2 22:00:47 $MOVE_CARD:  
{"moveIndex":3,"cardId":24,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 22:00:47 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":24,"flipIfFlipped":false,"playerId":2} 

 Player 2 22:00:48 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":24} 

 Player 2 22:00:48 $FLIP_CARD:  
{"cardId":24} 

 Player 2 22:00:48 $FLIP_CARD:  
{"cardId":24} 

 Player 2 22:00:48 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":24} 

 Player 2 22:00:48 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 22:00:48 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":319,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 22:00:48 $DRAW_CARD:  
{"deckType":1} 

 Player 2 22:00:48 $MOVE_CARD:  
{"moveIndex":4,"cardId":31,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 22:00:48 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":31,"flipIfFlipped":false,"playerId":2} 

 Player 2 22:00:48 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":31} 

 Player 2 22:00:48 $FLIP_CARD:  
{"cardId":31} 

 Player 2 22:00:48 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":31} 

 Player 2 22:00:48 $DRAW_CARD:  
{"deckType":1} 

 Player 2 22:00:48 $MOVE_CARD:  
{"moveIndex":5,"cardId":20,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 22:00:49 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":20,"flipIfFlipped":false,"playerId":2} 

 Player 2 22:00:49 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":20} 

 Player 2 22:00:49 $FLIP_CARD:  
{"cardId":20} 

 Player 2 22:00:49 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":20} 

 Player 2 22:00:49 $DRAW_CARD:  
{"deckType":1} 

 Player 2 22:00:49 $MOVE_CARD:  
{"moveIndex":6,"cardId":54,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 22:00:49 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":54,"flipIfFlipped":false,"playerId":2} 

 Player 2 22:00:49 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":54} 

 Player 2 22:00:49 $FLIP_CARD:  
{"cardId":54} 

 Player 2 22:00:49 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":54} 

 Player 2 22:00:49 $GAME_HAS_STARTED:  

 Player 2 22:00:49 $SET_TURN:  
{"playerId":1} 

 Player 2 22:00:49 $START_TURN:  
{"playerId":1} 

 Player 2 22:00:49 $UPDATE_ACTIONS:  

 Player 1 22:00:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:00:49 $NEXT_STACK_ID:  

 Player 1 22:00:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 22:00:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 

 Player 1 22:00:49 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":315,"turnPlayerCardId":315,"stackEffectType":13}} 

 Player 1 22:00:49 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":315,"turnPlayerCardId":315,"stackEffectType":13}} 

 Player 1 22:00:50 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 22:00:50 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 2 22:00:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 22:00:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 

 Player 1 22:00:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 1 22:00:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:00:52 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":315,"turnPlayerCardId":315,"stackEffectType":13}} 

 Player 1 22:00:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 1 22:00:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 1 22:00:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:00:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 1 22:00:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:00:53 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:00:53 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[319]} 

 Player 2 22:00:53 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:00:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 1 22:00:53 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":315,"turnPlayerCardId":315,"stackEffectType":13}} 

 Player 1 22:00:53 $DRAW_CARD:  
{"deckType":1} 

 Player 1 22:00:53 $MOVE_CARD:  
{"moveIndex":7,"cardId":75,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 22:00:53 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":75,"flipIfFlipped":false,"playerId":1} 

 Player 1 22:00:53 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":75} 

 Player 1 22:00:53 $FLIP_CARD:  
{"cardId":75} 

 Player 1 22:00:53 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":75} 

 Player 1 22:00:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Has Drawen Loot For Start Turn"} 

 Player 1 22:00:53 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":315,"turnPlayerCardId":315,"stackEffectType":13}} 

 Player 1 22:00:53 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":1} 

 Player 1 22:00:53 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 22:00:53 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 2 22:00:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 

 Player 1 22:00:56 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":1} 

 Player 1 22:00:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 1 22:00:56 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 22:00:56 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":315,"turnPlayerCardId":315,"stackEffectType":13}} 

 Player 1 22:00:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 1 22:00:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 1 22:00:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:00:56 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:00:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 

 Player 2 22:00:56 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[319]} 

 Player 2 22:00:56 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:00:57 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 1 22:00:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 1 22:00:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:00:57 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 1 22:00:57 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 1 22:00:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 1 22:00:57 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 22:00:57 $CLEAR_SE_VIS:  

 Player 1 22:01:04 $MOVE_CARD:  
{"moveIndex":8,"cardId":281,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Hand"} 

 Player 2 22:01:05 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":281,"flipIfFlipped":true,"playerId":1} 

 Player 1 22:01:05 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[307,289,241,291,271,275,293,262,267,277,270,239,301,260,245,234,302,272,276,259,300,243,240,297,306,266,248,228,309,255,253,232,285,284,287,250,225,246,304,242,263,273,252,279,290,251,226,233,280,296,303,261,310,264,274,292,254,231,227,257,298,269,224,247,265,294,282,256,244,295,305,288,249,258,299,223,236,235,308,278,268,283,286,230,237]} 

 Player 1 22:01:05 $FLIP_CARD:  
{"cardId":281} 

 Player 1 22:01:05 $REGISTER_PASSIVE_ITEM:  
{"cardId":281} 

 Player 1 22:01:05 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":281} 

 Player 1 22:01:05 $NEW_MONSTER_ON_PLACE:  
{"cardId":281,"monsterPlaceId":1} 

 Player 1 22:01:16 $NEXT_STACK_ID:  

 Player 1 22:01:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 declared attack on Isaac!"} 

 Player 1 22:01:16 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":315,"attackingPlayerCardId":315,"idOfCardBeingAttacked":281,"stackEffectType":4}} 

 Player 1 22:01:16 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":315,"attackingPlayerCardId":315,"idOfCardBeingAttacked":281,"stackEffectType":4}} 

 Player 1 22:01:16 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 22:01:16 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 2 22:01:17 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 22:01:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 declared attack on Isaac!"} 

 Player 1 22:01:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add DeclareAttack 2 "}} 

 Player 1 22:01:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:01:19 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":315,"attackingPlayerCardId":315,"idOfCardBeingAttacked":281,"stackEffectType":4}} 

 Player 1 22:01:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding DeclareAttack 2"},"childOfId":10} 

 Player 1 22:01:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 1 22:01:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:01:20 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 1 22:01:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 1 22:01:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:01:20 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:01:20 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[319]} 

 Player 2 22:01:20 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:01:20 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 1 22:01:20 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 1 22:01:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve DeclareAttack 2 "}} 

 Player 1 22:01:20 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":315,"attackingPlayerCardId":315,"idOfCardBeingAttacked":281,"stackEffectType":4}} 

 Player 1 22:01:20 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":281,"particleType":5} 

 Player 1 22:01:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Has Entered Battle with Isaac!"} 

 Player 1 22:01:20 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":1,"originStackId":2},"isAfterActivation":true,"index":1} 

 Player 1 22:01:20 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":315,"attackingPlayerCardId":315,"idOfCardBeingAttacked":281,"stackEffectType":4}} 

 Player 1 22:01:20 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":2} 

 Player 1 22:01:20 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 22:01:20 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 2 22:01:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 declared attack on Isaac!"} 

 Player 1 22:01:23 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":2} 

 Player 1 22:01:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve DeclareAttack 2  "}} 

 Player 1 22:01:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 22:01:23 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":315,"attackingPlayerCardId":315,"idOfCardBeingAttacked":281,"stackEffectType":4}} 

 Player 1 22:01:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve DeclareAttack 2"},"childOfId":15} 

 Player 1 22:01:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 1 22:01:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:01:23 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:01:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 declared attack on Isaac!"} 

 Player 2 22:01:23 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[319]} 

 Player 2 22:01:23 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:01:23 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 1 22:01:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 1 22:01:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:01:23 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 1 22:01:23 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 1 22:01:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 1 22:01:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 22:01:23 $CLEAR_SE_VIS:  

 Player 1 22:01:34 $NEXT_STACK_ID:  

 Player 1 22:01:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Isaac!<Monster>"} 

 Player 1 22:01:34 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":315,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 1 22:01:34 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":315,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 1 22:01:34 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 22:01:34 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 2 22:01:34 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 22:01:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Isaac!<Monster>"} 

 Player 1 22:01:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add AttackRoll 3 "}} 

 Player 1 22:01:37 $ROLL_DICE:  
{"playerId":1} 

 Player 1 22:01:39 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":3} 

 Player 1 22:01:39 $UPDATE_STACK_VIS:  
{"stackId":3,"text":"player rolled 3 vs Isaac!<Monster>"} 

 Player 1 22:01:39 $SHOW_DICE_ROLL:  
{"stackId":3} 

 Player 1 22:01:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 3 vs Isaac!<Monster>"} 

 Player 1 22:01:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:01:42 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":315,"numberRolled":3,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 1 22:01:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding AttackRoll 3"},"childOfId":20} 

 Player 1 22:01:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 1 22:01:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:01:42 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 1 22:01:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 1 22:01:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:01:42 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:01:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Isaac!<Monster>"} 

 Player 2 22:01:42 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[319,320]} 

 Player 2 22:01:42 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:01:42 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 1 22:01:42 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 1 22:01:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve AttackRoll 3 "}} 

 Player 1 22:01:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 3 vs Isaac!<Monster>"} 

 Player 1 22:01:43 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":315,"numberRolled":3,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 1 22:01:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Added 0 to original roll"}} 

 Player 1 22:01:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Rolled 4 Against Isaac!<Monster> 3"} 

 Player 1 22:01:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Roll Hit"} 

 Player 1 22:01:43 $NEXT_STACK_ID:  

 Player 1 22:01:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:01:43 $CLEAR_SE_VIS:  

 Player 1 22:01:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 1 Roll Hit"} 

 Player 1 22:01:43 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 1 22:01:43 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":315,"numberRolled":3,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 1 22:01:43 $REPLACE_STACK:  
{"currentStack":[{"entityId":4,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":3,"creatorCardId":315,"numberRolled":3,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}]} 

 Player 1 22:01:43 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 22:01:43 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 2 22:01:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Isaac!<Monster>"} 

 Player 2 22:01:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Isaac!<Monster>"} 

 Player 1 22:01:45 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":2,"originStackId":3},"isAfterActivation":true,"index":2} 

 Player 1 22:01:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 1 Roll Hit"} 

 Player 1 22:01:46 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":315,"numberRolled":3,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 1 22:01:46 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":3} 

 Player 1 22:01:46 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 22:01:46 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 2 22:01:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 1 is rolling against Isaac!<Monster>"} 

 Player 1 22:01:48 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":3} 

 Player 1 22:01:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Remove After Resolve AttackRoll 3  "}} 

 Player 1 22:01:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac!"} 

 Player 1 22:01:49 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":315,"numberRolled":3,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 1 22:01:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Response Remove After Resolve AttackRoll 3"},"childOfId":26} 

 Player 1 22:01:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 1 "},"childOfId":26} 

 Player 1 22:01:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:01:49 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 1 22:01:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Wait For Response From Player 2 "},"childOfId":26} 

 Player 1 22:01:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:01:49 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:01:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 1 is rolling against Isaac!<Monster>"} 

 Player 2 22:01:49 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[319]} 

 Player 2 22:01:49 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:01:49 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 1 22:01:49 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 1 22:01:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Resolve CombatDamage 4 "}} 

 Player 1 22:01:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac!"} 

 Player 1 22:01:49 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 1 22:01:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain will deal 1 combat damage to Isaac! "} 

 Player 1 22:01:49 $UPDATE_STACK_VIS:  
{"stackId":4,"text":"Cain will deal 1 combat damage to Isaac!"} 

 Player 1 22:01:49 $MONSTER_GET_DAMAGED:  
{"cardId":281,"hpLeft":6,"damageDealerId":315} 

 Player 1 22:01:49 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":315},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 1 22:01:49 $NEXT_STACK_ID:  

 Player 1 22:01:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Activate Isaac! Effect DealDamage<DealDamage>"} 

 Player 1 22:01:49 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":5,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":281,"effctType":0},"isAfterActivation":true,"index":3,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 22:01:49 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":5,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":281,"effctType":0},"isAfterActivation":true,"index":3,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 22:01:49 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 22:01:49 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 2 22:01:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac!"} 

 Player 2 22:01:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:Activate Isaac! "} 

 Player 1 22:01:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Add ActivatePassiveEffect 5 "}} 

 Player 1 22:01:55 $SHOW_DECISION:  
{"startCardId":281,"endCardId":315} 

 Player 1 22:01:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Activate Isaac! effect DealDamage<DealDamage>"} 

 Player 1 22:01:58 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[315],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":5,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":281,"effctType":0},"isAfterActivation":true,"index":3,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 22:01:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Response Adding ActivatePassiveEffect 5"},"childOfId":31} 

 Player 1 22:01:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 2 "},"childOfId":31} 

 Player 1 22:01:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:01:58 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:01:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:Activate Isaac! "} 

 Player 2 22:01:58 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[319]} 

 Player 2 22:01:58 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:01:58 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 1 22:01:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Wait For Response From Player 1 "},"childOfId":31} 

 Player 1 22:01:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:01:58 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 1 22:01:58 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 1 22:01:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Resolve ActivatePassiveEffect 5 "}} 

 Player 1 22:01:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Activate Isaac! effect DealDamage<DealDamage>"} 

 Player 1 22:01:59 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[315],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":5,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":281,"effctType":0},"isAfterActivation":true,"index":3,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 22:01:59 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":281,"particleType":6} 

 Player 2 22:01:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:Activate Isaac! "} 

 Player 1 22:02:00 $DISABLE_PARTICLE_EFFECT:  
{"cardId":281,"particleType":6} 

 Player 1 22:02:00 $PLAYER_GET_HIT:  
{"playerId":1,"damage":1,"damageDealerId":281} 

 Player 1 22:02:01 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":281}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 1 22:02:01 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":315},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 1 22:02:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Activated Isaac! Effect"} 

 Player 1 22:02:01 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[315],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":5,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"isAfterActivation":true,"index":3,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 22:02:01 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":5} 

 Player 1 22:02:01 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 22:02:01 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 2 22:02:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:Activate Isaac! "} 

 Player 1 22:02:03 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":5} 

 Player 1 22:02:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Remove After Resolve ActivatePassiveEffect 5  "}} 

 Player 1 22:02:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain will deal 1 combat damage to Isaac! "} 

 Player 1 22:02:04 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[315],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":5,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"isAfterActivation":true,"index":3,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 22:02:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Response Remove After Resolve ActivatePassiveEffect 5"},"childOfId":36} 

 Player 1 22:02:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 1 "},"childOfId":36} 

 Player 1 22:02:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:02:04 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 1 22:02:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Wait For Response From Player 2 "},"childOfId":36} 

 Player 1 22:02:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:02:04 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:02:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:Activate Isaac! "} 

 Player 2 22:02:04 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[319]} 

 Player 2 22:02:04 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:02:04 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 1 22:02:04 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 1 22:02:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Resolve CombatDamage 4 "}} 

 Player 1 22:02:04 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":4},{"type":0,"number":315},{"type":0,"number":281}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":5,"originStackId":4},"isAfterActivation":true,"index":5} 

 Player 1 22:02:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain will deal 1 combat damage to Isaac! "} 

 Player 1 22:02:04 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 1 22:02:04 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":4} 

 Player 1 22:02:04 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 22:02:04 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 2 22:02:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac!"} 

 Player 1 22:02:07 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":4} 

 Player 1 22:02:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Remove After Resolve CombatDamage 4  "}} 

 Player 1 22:02:07 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 22:02:07 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 1 22:02:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Response Remove After Resolve CombatDamage 4"},"childOfId":41} 

 Player 1 22:02:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 2 "},"childOfId":41} 

 Player 1 22:02:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:02:07 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:02:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac!"} 

 Player 2 22:02:07 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[319]} 

 Player 2 22:02:07 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:02:07 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 1 22:02:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Wait For Response From Player 1 "},"childOfId":41} 

 Player 1 22:02:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:02:07 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 1 22:02:07 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 1 22:02:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Stack Was Emptied "}} 

 Player 1 22:02:07 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 22:02:07 $CLEAR_SE_VIS:  

 Player 1 22:02:26 $PLAYER_GAIN_DMG:  
{"playerId":1,"DMGToGain":6,"isTemp":true} 

 Player 1 22:02:29 $NEXT_STACK_ID:  

 Player 1 22:02:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Isaac!<Monster>"} 

 Player 1 22:02:29 $ADD_TO_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":315,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 1 22:02:29 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":315,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 1 22:02:29 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 22:02:29 $SHOW_STACK_EFFECT:  
{"effectId":6} 

 Player 2 22:02:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 22:02:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Isaac!<Monster>"} 

 Player 1 22:02:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Add AttackRoll 6 "}} 

 Player 1 22:02:32 $ROLL_DICE:  
{"playerId":1} 

 Player 1 22:02:33 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":3} 

 Player 1 22:02:34 $UPDATE_STACK_VIS:  
{"stackId":6,"text":"player rolled 3 vs Isaac!<Monster>"} 

 Player 1 22:02:34 $SHOW_DICE_ROLL:  
{"stackId":6} 

 Player 1 22:02:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 3 vs Isaac!<Monster>"} 

 Player 1 22:02:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:02:37 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":315,"numberRolled":3,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 1 22:02:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Response Adding AttackRoll 6"},"childOfId":46} 

 Player 1 22:02:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Wait For Response From Player 1 "},"childOfId":46} 

 Player 1 22:02:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:02:37 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 1 22:02:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Wait For Response From Player 2 "},"childOfId":46} 

 Player 1 22:02:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:02:37 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:02:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Isaac!<Monster>"} 

 Player 2 22:02:37 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[319,320]} 

 Player 2 22:02:37 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:02:37 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 1 22:02:37 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 1 22:02:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Resolve AttackRoll 6 "}} 

 Player 1 22:02:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 3 vs Isaac!<Monster>"} 

 Player 1 22:02:37 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":315,"numberRolled":3,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 1 22:02:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Added 0 to original roll"}} 

 Player 1 22:02:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Rolled 4 Against Isaac!<Monster> 3"} 

 Player 1 22:02:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Roll Hit"} 

 Player 1 22:02:37 $NEXT_STACK_ID:  

 Player 1 22:02:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:02:37 $CLEAR_SE_VIS:  

 Player 1 22:02:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 1 Roll Hit"} 

 Player 1 22:02:37 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 1 22:02:37 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":315,"numberRolled":3,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 1 22:02:37 $REPLACE_STACK:  
{"currentStack":[{"entityId":7,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":6,"creatorCardId":315,"numberRolled":3,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}]} 

 Player 1 22:02:37 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 22:02:37 $SHOW_STACK_EFFECT:  
{"effectId":7} 

 Player 2 22:02:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Isaac!<Monster>"} 

 Player 2 22:02:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Isaac!<Monster>"} 

 Player 1 22:02:40 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":1},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":6,"originStackId":6},"isAfterActivation":true,"index":6} 

 Player 1 22:02:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 1 Roll Hit"} 

 Player 1 22:02:40 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":315,"numberRolled":3,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 1 22:02:40 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":6} 

 Player 1 22:02:40 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 22:02:40 $SHOW_STACK_EFFECT:  
{"effectId":6} 

 Player 2 22:02:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 1 is rolling against Isaac!<Monster>"} 

 Player 1 22:02:43 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":6} 

 Player 1 22:02:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Remove After Resolve AttackRoll 6  "}} 

 Player 1 22:02:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac!"} 

 Player 1 22:02:43 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":315,"numberRolled":3,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 1 22:02:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Response Remove After Resolve AttackRoll 6"},"childOfId":52} 

 Player 1 22:02:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Wait For Response From Player 1 "},"childOfId":52} 

 Player 1 22:02:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:02:43 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 1 22:02:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Wait For Response From Player 2 "},"childOfId":52} 

 Player 1 22:02:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:02:43 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:02:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 1 is rolling against Isaac!<Monster>"} 

 Player 2 22:02:43 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[319]} 

 Player 2 22:02:43 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:02:43 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 1 22:02:43 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 1 22:02:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":56,"_text":"Resolve CombatDamage 7 "}} 

 Player 1 22:02:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac!"} 

 Player 1 22:02:43 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 1 22:02:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain will deal 7 combat damage to Isaac! "} 

 Player 1 22:02:44 $UPDATE_STACK_VIS:  
{"stackId":7,"text":"Cain will deal 7 combat damage to Isaac!"} 

 Player 1 22:02:44 $MONSTER_GET_DAMAGED:  
{"cardId":281,"hpLeft":0,"damageDealerId":315} 

 Player 1 22:02:44 $NEXT_STACK_ID:  

 Player 1 22:02:44 $CLEAR_SE_VIS:  

 Player 1 22:02:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain will deal 7 combat damage to Isaac!  \n2:[object Object] Is Going To Be Killed by Cain"} 

 Player 1 22:02:44 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 1 22:02:44 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":315,"monsterToDieCardId":281,"stackEffectType":5,"killerId":315}} 

 Player 1 22:02:44 $REPLACE_STACK:  
{"currentStack":[{"entityId":7,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":8,"creatorCardId":315,"monsterToDieCardId":281,"stackEffectType":5,"killerId":315}]} 

 Player 1 22:02:44 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":315,"monsterToDieCardId":281,"stackEffectType":5,"killerId":315}} 

 Player 1 22:02:44 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 22:02:44 $SHOW_STACK_EFFECT:  
{"effectId":8} 

 Player 2 22:02:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac!"} 

 Player 2 22:02:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:[object Object] Is Going To Be Killed by Cain"} 

 Player 1 22:02:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:02:46 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":7},{"type":0,"number":315},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 

 Player 1 22:02:46 $NEXT_STACK_ID:  

 Player 1 22:02:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain will deal 7 combat damage to Isaac!  \n2:[object Object] Is Going To Be Killed by Cain"} 

 Player 1 22:02:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain will deal 7 combat damage to Isaac!  \n2:[object Object] Is Going To Be Killed by Cain \n3:Activate Isaac! Effect DealDamage<DealDamage>"} 

 Player 1 22:02:47 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":9,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":281,"effctType":0},"isAfterActivation":true,"index":7,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 22:02:47 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":9,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":281,"effctType":0},"isAfterActivation":true,"index":7,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 22:02:47 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 22:02:47 $SHOW_STACK_EFFECT:  
{"effectId":9} 

 Player 2 22:02:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:[object Object] Is Going To Be Killed by Cain"} 

 Player 2 22:02:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:[object Object] Is Going To Be Killed by Cain \n3:Activate Isaac! "} 

 Player 1 22:02:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":57,"_text":"Add ActivatePassiveEffect 9 "}} 

 Player 1 22:02:52 $SHOW_DECISION:  
{"startCardId":281,"endCardId":315} 

 Player 1 22:02:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain will deal 7 combat damage to Isaac!  \n2:[object Object] Is Going To Be Killed by Cain \n3:Activate Isaac! effect DealDamage<DealDamage>"} 

 Player 1 22:02:55 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[315],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":9,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":281,"effctType":0},"isAfterActivation":true,"index":7,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 22:02:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":58,"_text":"Response Adding ActivatePassiveEffect 9"},"childOfId":57} 

 Player 1 22:02:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":59,"_text":"Wait For Response From Player 1 "},"childOfId":57} 

 Player 1 22:02:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:02:55 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 1 22:02:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":60,"_text":"Wait For Response From Player 2 "},"childOfId":57} 

 Player 1 22:02:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:02:55 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:02:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:[object Object] Is Going To Be Killed by Cain \n3:Activate Isaac! "} 

 Player 2 22:02:55 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[319]} 

 Player 2 22:02:56 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:02:56 $ACTION_MASSAGE_REMOVE:  
{"id":60} 

 Player 1 22:02:56 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 1 22:02:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":61,"_text":"Resolve ActivatePassiveEffect 9 "}} 

 Player 1 22:02:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain will deal 7 combat damage to Isaac!  \n2:[object Object] Is Going To Be Killed by Cain \n3:Activate Isaac! effect DealDamage<DealDamage>"} 

 Player 1 22:02:56 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[315],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":9,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":281,"effctType":0},"isAfterActivation":true,"index":7,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 22:02:56 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":281,"particleType":6} 

 Player 2 22:02:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:[object Object] Is Going To Be Killed by Cain \n3:Activate Isaac! "} 

 Player 1 22:02:58 $DISABLE_PARTICLE_EFFECT:  
{"cardId":281,"particleType":6} 

 Player 1 22:02:58 $PLAYER_GET_HIT:  
{"playerId":1,"damage":1,"damageDealerId":281} 

 Player 1 22:02:58 $NEXT_STACK_ID:  

 Player 1 22:02:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain will deal 7 combat damage to Isaac!  \n2:[object Object] Is Going To Be Killed by Cain \n3:Activate Isaac! effect DealDamage<DealDamage>"} 

 Player 1 22:02:58 $CLEAR_SE_VIS:  

 Player 1 22:02:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain will deal 7 combat damage to Isaac!  \n2:[object Object] Is Going To Be Killed by Cain \n3:Activate Isaac! effect DealDamage<DealDamage> \n4:Player 1 Is About To Die"} 

 Player 1 22:02:58 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 1 22:02:58 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":315,"monsterToDieCardId":281,"stackEffectType":5,"killerId":315}} 

 Player 1 22:02:58 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[315],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":9,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":281,"effctType":0},"effectPassiveMeta":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":7},{"type":0,"number":315},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 22:02:58 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":315,"playerToDieCardId":315,"stackEffectType":15,"killerId":281}} 

 Player 1 22:02:58 $REPLACE_STACK:  
{"currentStack":[{"entityId":7,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":8,"creatorCardId":315,"monsterToDieCardId":281,"stackEffectType":5,"killerId":315},{"effectCollectedData":{"effectTargets":[315],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":9,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":281,"effctType":0},"effectPassiveMeta":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":7},{"type":0,"number":315},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7,"hasDataBeenCollectedYet":true,"stackEffectType":14},{"entityId":10,"creatorCardId":315,"playerToDieCardId":315,"stackEffectType":15,"killerId":281}]} 

 Player 1 22:02:58 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":315,"playerToDieCardId":315,"stackEffectType":15,"killerId":281}} 

 Player 1 22:02:58 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 22:02:58 $SHOW_STACK_EFFECT:  
{"effectId":10} 

 Player 2 22:02:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:[object Object] Is Going To Be Killed by Cain \n3:Activate Isaac! "} 

 Player 2 22:02:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:[object Object] Is Going To Be Killed by Cain \n3:Activate Isaac!  \n4:Player 1 Is About To Die"} 

 Player 1 22:03:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:03:01 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":281}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":8,"originStackId":-1},"isAfterActivation":true,"index":8} 

 Player 1 22:03:01 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":7},{"type":0,"number":315},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 

 Player 1 22:03:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain will deal 7 combat damage to Isaac!  \n2:[object Object] Is Going To Be Killed by Cain \n3:Activated Isaac! Effect \n4:Player 1 Is About To Die"} 

 Player 1 22:03:01 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[315],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":9,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"isAfterActivation":true,"index":7,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 22:03:01 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 22:03:01 $SHOW_STACK_EFFECT:  
{"effectId":9} 

 Player 2 22:03:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:[object Object] Is Going To Be Killed by Cain \n3:Activate Isaac!  \n4:Player 1 Is About To Die"} 

 Player 1 22:03:04 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":9} 

 Player 1 22:03:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":62,"_text":"Remove After Resolve ActivatePassiveEffect 9  "}} 

 Player 1 22:03:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain will deal 7 combat damage to Isaac!  \n2:[object Object] Is Going To Be Killed by Cain \n3:Player 1 Is About To Die"} 

 Player 1 22:03:04 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[315],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":9,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"isAfterActivation":true,"index":7,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 22:03:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":63,"_text":"Response Remove After Resolve ActivatePassiveEffect 9"},"childOfId":62} 

 Player 1 22:03:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":64,"_text":"Wait For Response From Player 1 "},"childOfId":62} 

 Player 1 22:03:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:03:04 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 1 22:03:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":65,"_text":"Wait For Response From Player 2 "},"childOfId":62} 

 Player 1 22:03:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:03:04 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:03:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:[object Object] Is Going To Be Killed by Cain \n3:Activate Isaac!  \n4:Player 1 Is About To Die"} 

 Player 2 22:03:04 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[319]} 

 Player 2 22:03:04 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:03:04 $ACTION_MASSAGE_REMOVE:  
{"id":65} 

 Player 1 22:03:04 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 1 22:03:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":66,"_text":"Resolve PlayerDeath 10 "}} 

 Player 1 22:03:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain will deal 7 combat damage to Isaac!  \n2:[object Object] Is Going To Be Killed by Cain \n3:Player 1 Is About To Die"} 

 Player 1 22:03:04 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":315,"playerToDieCardId":315,"stackEffectType":15,"killerId":281}} 

 Player 1 22:03:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain will deal 7 combat damage to Isaac!  \n2:[object Object] Is Going To Be Killed by Cain \n3:Player 1 Has Died"} 

 Player 1 22:03:04 $DISABLE_PARTICLE_EFFECT:  
{"cardId":281,"particleType":5} 

 Player 1 22:03:04 $CANCEL_ATTACK:  

 Player 1 22:03:04 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":7} 

 Player 1 22:03:04 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":7} 

 Player 1 22:03:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":67,"_text":"Fizzle CombatDamage 7"}} 

 Player 1 22:03:04 $FIZZLE_STACK_EFFECT:  
{"entityId":7} 

 Player 1 22:03:04 $NEXT_STACK_ID:  

 Player 1 22:03:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] Is Going To Be Killed by Cain \n2:Player 1 Has Died"} 

 Player 1 22:03:04 $CLEAR_SE_VIS:  

 Player 1 22:03:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] Is Going To Be Killed by Cain \n2:Player 1 Has Died \n3:Player 1 Is About To Pay Death Penalties"} 

 Player 1 22:03:04 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":315,"monsterToDieCardId":281,"stackEffectType":5,"killerId":315}} 

 Player 1 22:03:04 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":315,"playerToDieCardId":315,"stackEffectType":15,"killerId":281}} 

 Player 1 22:03:05 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":315,"playerToPayCardId":315,"stackEffectType":16}} 

 Player 1 22:03:05 $REPLACE_STACK:  
{"currentStack":[{"entityId":8,"creatorCardId":315,"monsterToDieCardId":281,"stackEffectType":5,"killerId":315},{"entityId":10,"creatorCardId":315,"playerToDieCardId":315,"stackEffectType":15,"killerId":281},{"entityId":11,"creatorCardId":315,"playerToPayCardId":315,"stackEffectType":16}]} 

 Player 1 22:03:05 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":315,"playerToPayCardId":315,"stackEffectType":16}} 

 Player 1 22:03:05 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 22:03:05 $SHOW_STACK_EFFECT:  
{"effectId":11} 

 Player 2 22:03:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Isaac! \n2:[object Object] Is Going To Be Killed by Cain \n3:Activate Isaac! "} 

 Player 2 22:03:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] Is Going To Be Killed by Cain \n2:Activate Isaac! "} 

 Player 2 22:03:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] Is Going To Be Killed by Cain \n2:Player 1 Is About To Die \n3:Player 1 Is About To Pay Death Penalties"} 

 Player 1 22:03:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:03:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] Is Going To Be Killed by Cain \n2:Player 1 Has Died \n3:Player 1 Is About To Pay Death Penalties"} 

 Player 1 22:03:07 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":315,"playerToDieCardId":315,"stackEffectType":15,"killerId":281}} 

 Player 1 22:03:07 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 22:03:07 $SHOW_STACK_EFFECT:  
{"effectId":10} 

 Player 2 22:03:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] Is Going To Be Killed by Cain \n2:Player 1 Is About To Die \n3:Player 1 Is About To Pay Death Penalties"} 

 Player 1 22:03:10 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":10} 

 Player 1 22:03:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":68,"_text":"Remove After Resolve PlayerDeath 10  "}} 

 Player 1 22:03:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] Is Going To Be Killed by Cain \n2:Player 1 Is About To Pay Death Penalties"} 

 Player 1 22:03:10 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":10,"creatorCardId":315,"playerToDieCardId":315,"stackEffectType":15,"killerId":281}} 

 Player 1 22:03:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":69,"_text":"Response Remove After Resolve PlayerDeath 10"},"childOfId":68} 

 Player 1 22:03:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":70,"_text":"Wait For Response From Player 1 "},"childOfId":68} 

 Player 1 22:03:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:03:10 $ACTION_MASSAGE_REMOVE:  
{"id":70} 

 Player 1 22:03:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":71,"_text":"Wait For Response From Player 2 "},"childOfId":68} 

 Player 1 22:03:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:03:10 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:03:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] Is Going To Be Killed by Cain \n2:Player 1 Is About To Die \n3:Player 1 Is About To Pay Death Penalties"} 

 Player 2 22:03:10 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[319]} 

 Player 2 22:03:10 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:03:10 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 1 22:03:11 $ACTION_MASSAGE_REMOVE:  
{"id":69} 

 Player 1 22:03:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":72,"_text":"Resolve PlayerDeathPenalties 11 "}} 

 Player 1 22:03:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] Is Going To Be Killed by Cain \n2:Player 1 Is About To Pay Death Penalties"} 

 Player 1 22:03:11 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":11,"creatorCardId":315,"playerToPayCardId":315,"stackEffectType":16}} 

 Player 1 22:03:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":73,"_text":"Player 1 pays Penalties"}} 

 Player 1 22:03:11 $SET_MONEY:  
{"playerId":1,"numOfCoins":2} 

 Player 1 22:03:11 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-1}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":9,"originStackId":-1},"isAfterActivation":true,"index":9} 

 Player 2 22:03:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] Is Going To Be Killed by Cain \n2:Player 1 Is About To Die"} 

 Player 1 22:03:13 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":24} 

 Player 1 22:03:13 $MOVE_CARD:  
{"moveIndex":9,"cardId":24,"placeID":330,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 22:03:14 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":24,"flipIfFlipped":true,"playerId":1} 

 Player 1 22:03:14 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":24} 

 Player 1 22:03:14 $USE_ITEM:  
{"cardId":315} 

 Player 1 22:03:14 $USE_ITEM:  
{"cardId":318} 

 Player 1 22:03:14 $PLAYER_DIED:  
{"playerId":1} 

 Player 1 22:03:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] Is Going To Be Killed by Cain \n2:Player 1 Paid Death Penalties"} 

 Player 1 22:03:14 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":11,"creatorCardId":315,"playerToPayCardId":315,"stackEffectType":16}} 

 Player 1 22:03:14 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":11} 

 Player 1 22:03:14 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 22:03:14 $SHOW_STACK_EFFECT:  
{"effectId":11} 

 Player 2 22:03:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] Is Going To Be Killed by Cain \n2:Player 1 Is About To Die"} 

 Player 1 22:03:17 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":11} 

 Player 1 22:03:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":74,"_text":"Remove After Resolve PlayerDeathPenalties 11  "}} 

 Player 1 22:03:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] Is Going To Be Killed by Cain"} 

 Player 1 22:03:17 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":11,"creatorCardId":315,"playerToPayCardId":315,"stackEffectType":16}} 

 Player 1 22:03:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":75,"_text":"Response Remove After Resolve PlayerDeathPenalties 11"},"childOfId":74} 

 Player 1 22:03:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":76,"_text":"Wait For Response From Player 2 "},"childOfId":74} 

 Player 1 22:03:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:03:17 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:03:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] Is Going To Be Killed by Cain \n2:Player 1 Is About To Pay Death Penalties"} 

 Player 2 22:03:17 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[319]} 

 Player 2 22:03:17 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:03:17 $ACTION_MASSAGE_REMOVE:  
{"id":76} 

 Player 1 22:03:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":77,"_text":"Wait For Response From Player 1 "},"childOfId":74} 

 Player 1 22:03:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:03:17 $ACTION_MASSAGE_REMOVE:  
{"id":77} 

 Player 1 22:03:17 $ACTION_MASSAGE_REMOVE:  
{"id":75} 

 Player 1 22:03:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":78,"_text":"Resolve MonsterDeath 8 "}} 

 Player 1 22:03:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] Is Going To Be Killed by Cain"} 

 Player 1 22:03:17 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":315,"monsterToDieCardId":281,"stackEffectType":5,"killerId":315}} 

 Player 1 22:03:17 $NEXT_STACK_ID:  

 Player 1 22:03:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:03:17 $CLEAR_SE_VIS:  

 Player 1 22:03:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Get Isaac!<Monster>'s Reward \n2:[object Object] Is Going To Be Killed by Cain"} 

 Player 1 22:03:17 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":12,"creatorCardId":315,"monsterCardWithRewardId":281,"playerCardIdToReward":315,"stackEffectType":7}} 

 Player 1 22:03:17 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":315,"monsterToDieCardId":281,"stackEffectType":5,"killerId":315}} 

 Player 1 22:03:18 $REPLACE_STACK:  
{"currentStack":[{"entityId":12,"creatorCardId":315,"monsterCardWithRewardId":281,"playerCardIdToReward":315,"stackEffectType":7},{"entityId":8,"creatorCardId":315,"monsterToDieCardId":281,"stackEffectType":5,"killerId":315}]} 

 Player 1 22:03:18 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 22:03:18 $SHOW_STACK_EFFECT:  
{"effectId":12} 

 Player 2 22:03:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] Is Going To Be Killed by Cain"} 

 Player 1 22:03:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Get Isaac!<Monster>'s Reward \n2:[object Object] Is Going To Be Killed by Cain"} 

 Player 1 22:03:20 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":315,"monsterToDieCardId":281,"stackEffectType":5,"killerId":315}} 

 Player 1 22:03:20 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":8} 

 Player 1 22:03:20 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 22:03:20 $SHOW_STACK_EFFECT:  
{"effectId":8} 

 Player 1 22:03:23 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":8} 

 Player 1 22:03:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":79,"_text":"Remove After Resolve MonsterDeath 8  "}} 

 Player 1 22:03:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Get Isaac!<Monster>'s Reward"} 

 Player 1 22:03:23 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":8,"creatorCardId":315,"monsterToDieCardId":281,"stackEffectType":5,"killerId":315}} 

 Player 1 22:03:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":80,"_text":"Response Remove After Resolve MonsterDeath 8"},"childOfId":79} 

 Player 1 22:03:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":81,"_text":"Wait For Response From Player 1 "},"childOfId":79} 

 Player 1 22:03:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:03:23 $ACTION_MASSAGE_REMOVE:  
{"id":81} 

 Player 1 22:03:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":82,"_text":"Wait For Response From Player 2 "},"childOfId":79} 

 Player 1 22:03:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:03:23 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:03:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Get Isaac!<Monster>'s Reward \n2:[object Object] Is Going To Be Killed by Cain"} 

 Player 2 22:03:24 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[319]} 

 Player 2 22:03:24 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:03:24 $ACTION_MASSAGE_REMOVE:  
{"id":82} 

 Player 1 22:03:24 $ACTION_MASSAGE_REMOVE:  
{"id":80} 

 Player 1 22:03:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":83,"_text":"Resolve MonsterRewardStackEffect 12 "}} 

 Player 1 22:03:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Get Isaac!<Monster>'s Reward"} 

 Player 1 22:03:24 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":12,"creatorCardId":315,"monsterCardWithRewardId":281,"playerCardIdToReward":315,"stackEffectType":7}} 

 Player 1 22:03:24 $DRAW_CARD:  
{"deckType":5} 

 Player 1 22:03:24 $REGISTER_PASSIVE_ITEM:  
{"cardId":164} 

 Player 1 22:03:24 $MOVE_CARD:  
{"moveIndex":10,"cardId":164,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 

 Player 2 22:03:24 $MOVE_CARD_END:  
{"moveIndex":10,"cardId":164,"flipIfFlipped":true,"playerId":1} 

 Player 1 22:03:24 $ADD_AN_ITEM:  
{"playerId":1,"cardId":164,"isReward":true} 

 Player 1 22:03:24 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":164}],"result":true,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":10,"originStackId":-1},"isAfterActivation":true,"index":10} 

 Player 1 22:03:24 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":11,"originStackId":12},"isAfterActivation":true,"index":11} 

 Player 1 22:03:24 $MOVE_CARD:  
{"moveIndex":11,"cardId":281,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"soulsLayout"} 

 Player 2 22:03:25 $MOVE_CARD_END:  
{"moveIndex":11,"cardId":281,"flipIfFlipped":true,"playerId":1} 

 Player 1 22:03:25 $GET_SOUL:  
{"playerId":1,"cardId":281} 

 Player 1 22:03:25 $REMOVE_FROM_PASSIVE_MANAGER:  
{"cardId":281} 

 Player 1 22:03:25 $REMOVE_MONSTER:  
{"holderId":1,"monsterId":281} 

 Player 1 22:03:25 $GET_NEXT_MONSTER:  
{"monsterPlaceId":1} 

 Player 1 22:03:25 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":12,"creatorCardId":315,"monsterCardWithRewardId":281,"playerCardIdToReward":315,"stackEffectType":7}} 

 Player 1 22:03:25 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":12} 

 Player 1 22:03:25 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 22:03:25 $SHOW_STACK_EFFECT:  
{"effectId":12} 

 Player 1 22:03:28 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":12} 

 Player 1 22:03:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":84,"_text":"Remove After Resolve MonsterRewardStackEffect 12  "}} 

 Player 1 22:03:28 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 22:03:28 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":12,"creatorCardId":315,"monsterCardWithRewardId":281,"playerCardIdToReward":315,"stackEffectType":7}} 

 Player 1 22:03:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":85,"_text":"Response Remove After Resolve MonsterRewardStackEffect 12"},"childOfId":84} 

 Player 1 22:03:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":86,"_text":"Wait For Response From Player 2 "},"childOfId":84} 

 Player 1 22:03:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:03:28 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:03:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Get Isaac!<Monster>'s Reward"} 

 Player 2 22:03:28 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[319]} 

 Player 2 22:03:28 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:03:28 $ACTION_MASSAGE_REMOVE:  
{"id":86} 

 Player 1 22:03:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":87,"_text":"Wait For Response From Player 1 "},"childOfId":84} 

 Player 1 22:03:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:03:28 $ACTION_MASSAGE_REMOVE:  
{"id":87} 

 Player 1 22:03:28 $ACTION_MASSAGE_REMOVE:  
{"id":85} 

 Player 1 22:03:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":88,"_text":"Stack Was Emptied "}} 

 Player 1 22:03:28 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 22:03:28 $CLEAR_SE_VIS:  

 Player 1 22:03:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:03:28 $CLEAR_SE_VIS:  

 Player 1 22:03:28 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 1 22:03:28 $CLEAR_SE_VIS:  

 Player 1 22:03:29 $END_TURN:  

 Player 1 22:03:29 $SET_TURN:  
{"playerId":2} 

 Player 1 22:03:29 $START_TURN:  
{"playerId":2} 

 Player 1 22:03:29 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":7},{"type":2,"number":4},{"type":0,"number":315},{"type":0,"number":281}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":12,"originStackId":7},"isAfterActivation":true,"index":12} 

 Player 1 22:03:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":89,"_text":"Stack Was Emptied "}} 

 Player 1 22:03:29 $TURN_PLAYER_DO_STACK_EFFECT:  
{"playerId":2} 

 Player 1 22:03:29 $STACK_EMPTIED:  
{"playerId":2} 

 Player 2 22:03:29 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 22:03:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:03:29 $NEXT_STACK_ID:  

 Player 2 22:03:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 

 Player 2 22:03:29 $ADD_TO_STACK:  
{"stackEffect":{"entityId":13,"creatorCardId":319,"turnPlayerCardId":319,"stackEffectType":13}} 

 Player 2 22:03:29 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":13,"creatorCardId":319,"turnPlayerCardId":319,"stackEffectType":13}} 

 Player 2 22:03:29 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 22:03:29 $SHOW_STACK_EFFECT:  
{"effectId":13} 

 Player 2 22:03:29 $CLEAR_SE_VIS:  

 Player 1 22:03:29 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 22:03:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 22:03:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 

 Player 2 22:03:29 $CLEAR_SE_VIS:  

 Player 2 22:03:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":90,"_text":"Add StartTurnLoot 13 "}} 

 Player 2 22:03:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:03:32 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":13,"creatorCardId":319,"turnPlayerCardId":319,"stackEffectType":13}} 

 Player 2 22:03:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":91,"_text":"Response Adding StartTurnLoot 13"},"childOfId":90} 

 Player 2 22:03:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":92,"_text":"Wait For Response From Player 2 "},"childOfId":90} 

 Player 2 22:03:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:03:32 $ACTION_MASSAGE_REMOVE:  
{"id":92} 

 Player 2 22:03:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":93,"_text":"Wait For Response From Player 1 "},"childOfId":90} 

 Player 2 22:03:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 22:03:32 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 22:03:32 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[]} 

 Player 1 22:03:32 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 22:03:32 $ACTION_MASSAGE_REMOVE:  
{"id":93} 

 Player 2 22:03:32 $ACTION_MASSAGE_REMOVE:  
{"id":91} 

 Player 2 22:03:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":94,"_text":"Resolve StartTurnLoot 13 "}} 

 Player 2 22:03:32 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":13,"creatorCardId":319,"turnPlayerCardId":319,"stackEffectType":13}} 

 Player 2 22:03:32 $DRAW_CARD:  
{"deckType":1} 

 Player 2 22:03:32 $MOVE_CARD:  
{"moveIndex":12,"cardId":109,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 22:03:33 $MOVE_CARD_END:  
{"moveIndex":12,"cardId":109,"flipIfFlipped":false,"playerId":2} 

 Player 2 22:03:33 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":109} 

 Player 2 22:03:33 $FLIP_CARD:  
{"cardId":109} 

 Player 2 22:03:33 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":109} 

 Player 2 22:03:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Has Drawen Loot For Start Turn"} 

 Player 2 22:03:33 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":13,"creatorCardId":319,"turnPlayerCardId":319,"stackEffectType":13}} 

 Player 2 22:03:33 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":13} 

 Player 2 22:03:33 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 22:03:33 $SHOW_STACK_EFFECT:  
{"effectId":13} 

 Player 1 22:03:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 

 Player 2 22:03:36 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":13} 

 Player 2 22:03:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":95,"_text":"Remove After Resolve StartTurnLoot 13  "}} 

 Player 2 22:03:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 22:03:36 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":13,"creatorCardId":319,"turnPlayerCardId":319,"stackEffectType":13}} 

 Player 2 22:03:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":96,"_text":"Response Remove After Resolve StartTurnLoot 13"},"childOfId":95} 

 Player 2 22:03:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":97,"_text":"Wait For Response From Player 1 "},"childOfId":95} 

 Player 2 22:03:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 22:03:36 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 22:03:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 

 Player 1 22:03:36 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[]} 

 Player 1 22:03:36 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 22:03:36 $ACTION_MASSAGE_REMOVE:  
{"id":97} 

 Player 2 22:03:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":98,"_text":"Wait For Response From Player 2 "},"childOfId":95} 

 Player 2 22:03:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:03:36 $ACTION_MASSAGE_REMOVE:  
{"id":98} 

 Player 2 22:03:36 $ACTION_MASSAGE_REMOVE:  
{"id":96} 

 Player 2 22:03:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":99,"_text":"Stack Was Emptied "}} 

 Player 2 22:03:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 22:03:36 $CLEAR_SE_VIS:  

 Player 2 22:45:37 $MATCH: 