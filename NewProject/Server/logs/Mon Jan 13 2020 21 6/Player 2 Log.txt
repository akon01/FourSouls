Start Log 
 Player 2 21:06:04 $MOVE_TO_TABLE:  
 Player 2 21:06:13 $FINISH_LOAD:  

 {"id":2,"turnPlayerId":2} 
 Player 2 21:06:13 $ASSIGN_CHAR_TO_PLAYER:  

 {"playerId":1,"charCardId":287,"itemCardId":288} 
 Player 2 21:06:13 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":294}],"result":true,"preventMethod":false,"methodScopeId":293,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 21:06:13 $ASSIGN_CHAR_TO_PLAYER:  

 {"playerId":2,"charCardId":293,"itemCardId":294} 
 Player 2 21:06:13 $DECK_ARRAGMENT:  

 {"deckType":1,"arrangement":[47,130,34,101,119,7,10,70,40,112,32,105,95,42,41,71,48,54,29,98,57,110,126,117,111,113,36,72,135,88,8,37,65,125,89,17,139,86,52,90,74,100,12,142,123,134,18,61,21,22,103,79,84,58,14,104,80,124,38,27,66,39,25,64,92,28,60,106,50,91,53,93,33,78,68,131,129,128,75,67,116,46,107,120,138,62,109,114,115,35,133,24,83,82,96,11,63,13,108,87,102,19,49,140,15,85,20,9,30,23,137,81,44,141,118,132,94,121,59,43,56,45,99,77,26,73,51,69,136,76,127,31,55,16,122,97]} 
 Player 2 21:06:13 $DECK_ARRAGMENT:  

 {"deckType":2,"arrangement":[261,241,255,230,248,264,269,251,276,232,266,228,272,275,239,231,256,247,225,263,229,235,245,249,260,271,233,254,268,262,273,224,223,267,258,226,227,234,240,238,257,253,246,259,250,237,236,244,242,270,243,274,265,252]} 
 Player 2 21:06:14 $DECK_ARRAGMENT:  

 {"deckType":5,"arrangement":[150,185,187,193,195,217,203,153,176,209,152,148,200,158,194,215,218,154,202,172,181,156,147,162,191,213,178,188,197,149,164,151,205,212,169,183,201,167,177,166,168,170,179,184,198,211,199,159,145,171,196,190,163,180,160,186,208,207,214,204,220,219,173,216,155,175,192,157,174,210,165,189,206,146,182,161]} 
 Player 2 21:06:14 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 21:06:14 $FLIP_CARD:  

 {"cardId":161} 
 Player 2 21:06:14 $ADD_STORE_CARD:  

 {"cardId":161} 
 Player 2 21:06:14 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 21:06:14 $FLIP_CARD:  

 {"cardId":182} 
 Player 2 21:06:14 $ADD_STORE_CARD:  

 {"cardId":182} 
 Player 2 21:06:14 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 21:06:14 $FLIP_CARD:  

 {"cardId":252} 
 Player 2 21:06:14 $ADD_MONSTER:  

 {"monsterPlaceId":1,"monsterId":252} 
 Player 2 21:06:14 $NEW_MONSTER_ON_PLACE:  

 {"cardId":252,"monsterPlaceId":1} 
 Player 2 21:06:14 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 21:06:14 $DECK_ADD_TO_BOTTOM:  

 {"deckType":2,"cardId":265} 
 Player 2 21:06:14 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 21:06:14 $FLIP_CARD:  

 {"cardId":274} 
 Player 2 21:06:14 $REGISTER_PASSIVE_ITEM:  

 {"cardId":274} 
 Player 2 21:06:14 $ADD_MONSTER:  

 {"monsterPlaceId":2,"monsterId":274} 
 Player 2 21:06:14 $NEW_MONSTER_ON_PLACE:  

 {"cardId":274,"monsterPlaceId":2} 
 Player 2 21:06:14 $SET_MONEY:  

 {"playerId":1,"numOfCoins":3} 
 Player 2 21:06:14 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":287,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 2 21:06:14 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 21:06:14 $MOVE_CARD:  

 {"moveIndex":1,"cardId":97,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 21:06:14 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":97} 
 Player 2 21:06:14 $FLIP_CARD:  

 {"cardId":97} 
 Player 2 21:06:14 $FLIP_CARD:  

 {"cardId":97} 
 Player 2 21:06:15 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":97} 
 Player 2 21:06:15 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 21:06:15 $MOVE_CARD:  

 {"moveIndex":2,"cardId":122,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 21:06:15 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":122} 
 Player 2 21:06:15 $FLIP_CARD:  

 {"cardId":122} 
 Player 2 21:06:15 $FLIP_CARD:  

 {"cardId":122} 
 Player 2 21:06:15 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":122} 
 Player 2 21:06:15 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 21:06:15 $MOVE_CARD:  

 {"moveIndex":3,"cardId":16,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 21:06:15 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":16} 
 Player 2 21:06:15 $FLIP_CARD:  

 {"cardId":16} 
 Player 2 21:06:15 $FLIP_CARD:  

 {"cardId":16} 
 Player 2 21:06:16 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":16} 
 Player 2 21:06:16 $SET_MONEY:  

 {"playerId":2,"numOfCoins":3} 
 Player 2 21:06:16 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":293,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Player 2 21:06:16 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 21:06:16 $MOVE_CARD:  

 {"moveIndex":4,"cardId":55,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 21:06:16 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":55} 
 Player 2 21:06:16 $FLIP_CARD:  

 {"cardId":55} 
 Player 2 21:06:16 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":55} 
 Player 2 21:06:16 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 21:06:16 $MOVE_CARD:  

 {"moveIndex":5,"cardId":31,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 21:06:17 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":31} 
 Player 2 21:06:17 $FLIP_CARD:  

 {"cardId":31} 
 Player 2 21:06:17 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":31} 
 Player 2 21:06:17 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 21:06:17 $MOVE_CARD:  

 {"moveIndex":6,"cardId":127,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 21:06:17 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":127} 
 Player 2 21:06:17 $FLIP_CARD:  

 {"cardId":127} 
 Player 2 21:06:17 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":127} 
 Player 2 21:06:17 $GAME_HAS_STARTED:  
 Player 2 21:06:17 $SET_TURN:  

 {"playerId":2} 
 Player 2 21:06:17 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:06:17 $NEXT_STACK_ID:  
 Player 2 21:06:17 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 21:06:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 21:06:17 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":293,"turnPlayerCardId":293,"stackEffectType":13}} 
 Player 2 21:06:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 21:06:17 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":1,"creatorCardId":293,"turnPlayerCardId":293,"stackEffectType":13}} 
 Player 2 21:06:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 
 Player 2 21:06:17 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:06:17 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 2 21:06:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 21:06:17 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":293,"turnPlayerCardId":293,"stackEffectType":13}} 
 Player 2 21:06:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 
 Player 2 21:06:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 2 21:06:17 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:06:17 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 2 21:06:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 2 21:06:17 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 21:06:17 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 21:06:18 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 2 21:06:18 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 2 21:06:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 
 Player 2 21:06:18 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 21:06:18 $MOVE_CARD:  

 {"moveIndex":7,"cardId":76,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 21:06:18 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":76} 
 Player 2 21:06:18 $FLIP_CARD:  

 {"cardId":76} 
 Player 2 21:06:18 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":76} 
 Player 2 21:06:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 21:06:18 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":293,"turnPlayerCardId":293,"stackEffectType":13}} 
 Player 2 21:06:18 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 2 21:06:18 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 21:06:18 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":1,"creatorCardId":293,"turnPlayerCardId":293,"stackEffectType":13}} 
 Player 2 21:06:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 
 Player 2 21:06:18 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 21:06:18 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":293,"turnPlayerCardId":293,"stackEffectType":13}} 
 Player 2 21:06:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 
 Player 2 21:06:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Player 2 21:06:19 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 21:06:19 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 21:06:19 $ACTION_MASSAGE_REMOVE:  

 {"id":7} 
 Player 2 21:06:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Player 2 21:06:19 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:06:19 $ACTION_MASSAGE_REMOVE:  

 {"id":8} 
 Player 2 21:06:19 $ACTION_MASSAGE_REMOVE:  

 {"id":6} 
 Player 2 21:06:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":9,"_text":"Stack Was Emptied "}} 
 Player 2 21:06:19 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 21:06:19 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 2 21:06:19 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 2 21:06:19 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 2 21:06:19 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 2 21:06:19 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 2 21:06:19 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 2 21:06:19 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 2 21:06:19 $UPDATE_ACTIONS:  
 Player 2 21:06:20 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 2 21:06:21 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 2 21:06:41 $SHOW_DECISION:  

 {"startCardId":31,"endCardId":31,"flipEndCard":true} 
 Player 2 21:06:44 $NEXT_STACK_ID:  
 Player 2 21:06:44 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 21:06:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 2 Cents(11) "} 
 Player 2 21:06:44 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":293,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":31,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 2 21:06:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 2 Cents(11) "} 
 Player 2 21:06:44 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":2,"creatorCardId":293,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":31,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 2 21:06:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":10,"_text":"Add PlayLootCardStackEffect 2 "}} 
 Player 2 21:06:44 $PLAYER_LOSE_LOOT:  

 {"playerId":2,"cardId":31} 
 Player 2 21:06:44 $MOVE_CARD:  

 {"moveIndex":8,"cardId":31,"placeID":295,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 21:06:44 $MOVE_CARD_TO_PILE:  

 {"type":7,"cardId":31} 
 Player 2 21:06:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 2 Cents(11): addMoney"} 
 Player 2 21:06:44 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:06:44 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 2 21:06:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 2 Cents(11): addMoney"} 
 Player 2 21:06:44 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":293,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":31,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":31,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 21:06:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":11,"_text":"Response Adding PlayLootCardStackEffect 2"},"childOfId":10} 
 Player 2 21:06:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 
 Player 2 21:06:45 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:06:53 $ACTION_MASSAGE_REMOVE:  

 {"id":12} 
 Player 2 21:06:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 
 Player 2 21:06:53 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 21:06:53 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 21:06:53 $ACTION_MASSAGE_REMOVE:  

 {"id":13} 
 Player 2 21:06:53 $ACTION_MASSAGE_REMOVE:  

 {"id":11} 
 Player 2 21:06:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":14,"_text":"Resolve PlayLootCardStackEffect 2 "}} 
 Player 2 21:06:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 2 Cents(11): addMoney"} 
 Player 2 21:06:53 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":31,"particleType":6} 
 Player 2 21:06:55 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":31,"particleType":6} 
 Player 2 21:06:55 $SET_MONEY:  

 {"playerId":2,"numOfCoins":5} 
 Player 2 21:06:55 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":2}],"result":null,"preventMethod":false,"methodScopeId":293,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 
 Player 2 21:06:55 $REMOVE_FROM_PILE:  

 {"cardId":31} 
 Player 2 21:06:55 $MOVE_CARD:  

 {"moveIndex":9,"cardId":31,"placeID":296,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 21:06:55 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":31} 
 Player 2 21:06:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 2 Cents(11): addMoney"} 
 Player 2 21:06:55 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":293,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":31,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 21:06:55 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 2 21:06:55 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 21:06:55 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":2,"creatorCardId":293,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":31,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 21:06:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":15,"_text":"Remove After Resolve PlayLootCardStackEffect 2  "}} 
 Player 2 21:06:55 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 21:06:55 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":293,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":31,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 21:06:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":16,"_text":"Response Remove After Resolve PlayLootCardStackEffect 2"},"childOfId":15} 
 Player 2 21:06:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 
 Player 2 21:06:55 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 21:06:56 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 21:06:56 $ACTION_MASSAGE_REMOVE:  

 {"id":17} 
 Player 2 21:06:56 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 
 Player 2 21:06:56 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:06:56 $ACTION_MASSAGE_REMOVE:  

 {"id":18} 
 Player 2 21:06:56 $ACTION_MASSAGE_REMOVE:  

 {"id":16} 
 Player 2 21:06:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":19,"_text":"Stack Was Emptied "}} 
 Player 2 21:06:57 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 21:06:57 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 2 21:06:57 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 2 21:06:57 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 2 21:06:57 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 2 21:06:57 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 2 21:06:57 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 2 21:06:57 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 2 21:06:57 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 2 21:06:57 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 2 21:06:57 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 2 21:06:57 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 2 21:06:58 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 2 21:06:58 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 2 21:07:05 $SHOW_DECISION:  

 {"startCardId":293,"endCardId":294} 
 Player 2 21:07:08 $NEXT_STACK_ID:  
 Player 2 21:07:08 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 21:07:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated HolyMantle"} 
 Player 2 21:07:08 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":293,"hasLockingStackEffect":false,"itemToPlayCardId":294,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 21:07:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated HolyMantle"} 
 Player 2 21:07:08 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":293,"hasLockingStackEffect":false,"itemToPlayCardId":294,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 21:07:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":20,"_text":"Add ActivateItem 3 "}} 
 Player 2 21:07:13 $SHOW_DECISION:  

 {"startCardId":294,"endCardId":293} 
 Player 2 21:07:16 $USE_ITEM:  

 {"cardId":294} 
 Player 2 21:07:16 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:07:16 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 2 21:07:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated HolyMantle"} 
 Player 2 21:07:16 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":293,"hasLockingStackEffect":false,"itemToPlayCardId":294,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 21:07:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":21,"_text":"Response Adding ActivateItem 3"},"childOfId":20} 
 Player 2 21:07:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 
 Player 2 21:07:16 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:07:17 $ACTION_MASSAGE_REMOVE:  

 {"id":22} 
 Player 2 21:07:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 
 Player 2 21:07:17 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 21:07:17 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 21:07:17 $ACTION_MASSAGE_REMOVE:  

 {"id":23} 
 Player 2 21:07:17 $ACTION_MASSAGE_REMOVE:  

 {"id":21} 
 Player 2 21:07:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":24,"_text":"Resolve ActivateItem 3 "}} 
 Player 2 21:07:18 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":294,"particleType":6} 
 Player 2 21:07:19 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":294,"particleType":6} 
 Player 2 21:07:19 $REGISTER_ONE_TURN_PASSIVE_EFFECT:  

 {"cardId":294,"effectIndex":{"type":3,"index":0},"conditionData":[{"effectTargets":[293],"chainEffectsData":[],"methodArgs":[],"isPassive":false,"effectCard":294,"effectCardOwner":293,"effectCardPlayer":293}]} 
 Player 2 21:07:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated HolyMantle"} 
 Player 2 21:07:20 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":293,"hasLockingStackEffect":false,"itemToPlayCardId":294,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 21:07:20 $ACTION_MASSAGE_REMOVE:  

 {"id":24} 
 Player 2 21:07:20 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 21:07:20 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":293,"hasLockingStackEffect":false,"itemToPlayCardId":294,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 21:07:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":25,"_text":"Remove After Resolve ActivateItem 3  "}} 
 Player 2 21:07:20 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 21:07:20 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":293,"hasLockingStackEffect":false,"itemToPlayCardId":294,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 21:07:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":26,"_text":"Response Remove After Resolve ActivateItem 3"},"childOfId":25} 
 Player 2 21:07:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":27,"_text":"Wait For Response From Player 1 "},"childOfId":25} 
 Player 2 21:07:20 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 21:07:20 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 21:07:20 $ACTION_MASSAGE_REMOVE:  

 {"id":27} 
 Player 2 21:07:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":25} 
 Player 2 21:07:20 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:07:21 $ACTION_MASSAGE_REMOVE:  

 {"id":28} 
 Player 2 21:07:21 $ACTION_MASSAGE_REMOVE:  

 {"id":26} 
 Player 2 21:07:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":29,"_text":"Stack Was Emptied "}} 
 Player 2 21:07:21 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 21:07:21 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 2 21:07:21 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 2 21:07:21 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 2 21:07:21 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 2 21:07:21 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 2 21:07:21 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 2 21:07:21 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 2 21:07:21 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 2 21:07:21 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 2 21:07:21 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 2 21:07:21 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 2 21:07:21 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 2 21:07:21 $ACTION_MASSAGE_REMOVE:  

 {"id":24} 
 Player 2 21:07:21 $ACTION_MASSAGE_REMOVE:  

 {"id":25} 
 Player 2 21:07:21 $ACTION_MASSAGE_REMOVE:  

 {"id":29} 
 Player 2 21:07:22 $ACTION_MASSAGE_REMOVE:  

 {"id":25} 
 Player 2 21:07:22 $ACTION_MASSAGE_REMOVE:  

 {"id":29} 
 Player 2 21:07:25 $SHOW_DECISION:  

 {"startCardId":293,"endCardId":274} 
 Player 2 21:07:28 $NEXT_STACK_ID:  
 Player 2 21:07:28 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 21:07:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on War"} 
 Player 2 21:07:28 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":4,"creatorCardId":293,"attackingPlayerCardId":293,"idOfCardBeingAttacked":274,"stackEffectType":4}} 
 Player 2 21:07:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on War"} 
 Player 2 21:07:28 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":4,"creatorCardId":293,"attackingPlayerCardId":293,"idOfCardBeingAttacked":274,"stackEffectType":4}} 
 Player 2 21:07:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":30,"_text":"Add DeclareAttack 4 "}} 
 Player 2 21:07:28 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:07:28 $ACTION_MASSAGE_REMOVE:  

 {"id":30} 
 Player 2 21:07:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on War"} 
 Player 2 21:07:28 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":4,"creatorCardId":293,"attackingPlayerCardId":293,"idOfCardBeingAttacked":274,"stackEffectType":4}} 
 Player 2 21:07:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":31,"_text":"Response Adding DeclareAttack 4"},"childOfId":30} 
 Player 2 21:07:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":32,"_text":"Wait For Response From Player 2 "},"childOfId":30} 
 Player 2 21:07:28 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:07:30 $ACTION_MASSAGE_REMOVE:  

 {"id":32} 
 Player 2 21:07:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":30} 
 Player 2 21:07:30 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 21:07:30 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 21:07:30 $ACTION_MASSAGE_REMOVE:  

 {"id":33} 
 Player 2 21:07:30 $ACTION_MASSAGE_REMOVE:  

 {"id":31} 
 Player 2 21:07:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":34,"_text":"Resolve DeclareAttack 4 "}} 
 Player 2 21:07:30 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":274,"particleType":5} 
 Player 2 21:07:30 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":293,"scopeIsPlayer":true,"index":5,"originStackId":4},"isAfterActivation":true,"index":5} 
 Player 2 21:07:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on War"} 
 Player 2 21:07:30 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":4,"creatorCardId":293,"attackingPlayerCardId":293,"idOfCardBeingAttacked":274,"stackEffectType":4}} 
 Player 2 21:07:30 $ACTION_MASSAGE_REMOVE:  

 {"id":34} 
 Player 2 21:07:30 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 21:07:30 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":4,"creatorCardId":293,"attackingPlayerCardId":293,"idOfCardBeingAttacked":274,"stackEffectType":4}} 
 Player 2 21:07:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":35,"_text":"Remove After Resolve DeclareAttack 4  "}} 
 Player 2 21:07:30 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 21:07:30 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":4,"creatorCardId":293,"attackingPlayerCardId":293,"idOfCardBeingAttacked":274,"stackEffectType":4}} 
 Player 2 21:07:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":36,"_text":"Response Remove After Resolve DeclareAttack 4"},"childOfId":35} 
 Player 2 21:07:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":37,"_text":"Wait For Response From Player 1 "},"childOfId":35} 
 Player 2 21:07:30 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 21:07:30 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 21:07:31 $ACTION_MASSAGE_REMOVE:  

 {"id":37} 
 Player 2 21:07:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":38,"_text":"Wait For Response From Player 2 "},"childOfId":35} 
 Player 2 21:07:31 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:07:33 $ACTION_MASSAGE_REMOVE:  

 {"id":35} 
 Player 2 21:07:34 $ACTION_MASSAGE_REMOVE:  

 {"id":38} 
 Player 2 21:07:34 $ACTION_MASSAGE_REMOVE:  

 {"id":36} 
 Player 2 21:07:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":39,"_text":"Stack Was Emptied "}} 
 Player 2 21:07:34 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 21:07:34 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 2 21:07:34 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 2 21:07:34 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 2 21:07:34 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 2 21:07:34 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 2 21:07:34 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 2 21:07:34 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 2 21:07:34 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 2 21:07:34 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 2 21:07:34 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 2 21:07:34 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 2 21:07:35 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 2 21:07:35 $ACTION_MASSAGE_REMOVE:  

 {"id":24} 
 Player 2 21:07:35 $ACTION_MASSAGE_REMOVE:  

 {"id":25} 
 Player 2 21:07:35 $ACTION_MASSAGE_REMOVE:  

 {"id":29} 
 Player 2 21:07:35 $ACTION_MASSAGE_REMOVE:  

 {"id":30} 
 Player 2 21:07:35 $ACTION_MASSAGE_REMOVE:  

 {"id":34} 
 Player 2 21:07:35 $ACTION_MASSAGE_REMOVE:  

 {"id":35} 
 Player 2 21:07:35 $ACTION_MASSAGE_REMOVE:  

 {"id":39} 
 Player 2 21:07:36 $ACTION_MASSAGE_REMOVE:  

 {"id":39} 
 Player 2 21:07:36 $NEXT_STACK_ID:  
 Player 2 21:07:36 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 21:07:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against War<Monster>"} 
 Player 2 21:07:36 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":5,"creatorCardId":293,"rollingPlayerCardId":293,"stackEffectType":2,"attackedMonsterCardId":274}} 
 Player 2 21:07:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against War<Monster>"} 
 Player 2 21:07:36 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":5,"creatorCardId":293,"rollingPlayerCardId":293,"stackEffectType":2,"attackedMonsterCardId":274}} 
 Player 2 21:07:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":40,"_text":"Add AttackRoll 5 "}} 
 Player 2 21:07:36 $ROLL_DICE:  

 {"playerId":2} 
 Player 2 21:07:38 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":5} 
 Player 2 21:07:38 $UPDATE_STACK_VIS:  

 {"stackId":5,"text":"player rolled 5 vs War<Monster>"} 
 Player 2 21:07:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 5 vs War<Monster>"} 
 Player 2 21:07:38 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:07:38 $ACTION_MASSAGE_REMOVE:  

 {"id":40} 
 Player 2 21:07:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 5 vs War<Monster>"} 
 Player 2 21:07:38 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":5,"creatorCardId":293,"numberRolled":5,"rollingPlayerCardId":293,"stackEffectType":2,"attackedMonsterCardId":274}} 
 Player 2 21:07:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":41,"_text":"Response Adding AttackRoll 5"},"childOfId":40} 
 Player 2 21:07:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":42,"_text":"Wait For Response From Player 2 "},"childOfId":40} 
 Player 2 21:07:38 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:07:51 $ACTION_MASSAGE_REMOVE:  

 {"id":42} 
 Player 2 21:07:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":43,"_text":"Wait For Response From Player 1 "},"childOfId":40} 
 Player 2 21:07:51 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 21:07:51 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 21:07:51 $ACTION_MASSAGE_REMOVE:  

 {"id":43} 
 Player 2 21:07:51 $ACTION_MASSAGE_REMOVE:  

 {"id":41} 
 Player 2 21:07:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":44,"_text":"Resolve AttackRoll 5 "}} 
 Player 2 21:07:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":45,"_text":"Added 0 to original roll"}} 
 Player 2 21:07:51 $NEXT_STACK_ID:  
 Player 2 21:07:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 5 vs War<Monster>"} 
 Player 2 21:07:51 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:07:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Lost combat damage to War \n2:Player 2 rolled 5 vs War<Monster>"} 
 Player 2 21:07:51 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":6,"creatorCardId":293,"entityToDoDamageCardId":293,"entityToTakeDamageCardId":274,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 21:07:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Lost combat damage to War \n2:Player 2 rolled 5 vs War<Monster>"} 
 Player 2 21:07:51 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":5,"creatorCardId":293,"numberRolled":5,"rollingPlayerCardId":293,"stackEffectType":2,"attackedMonsterCardId":274}} 
 Player 2 21:07:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Lost combat damage to War \n2:Player 2 rolled 5 vs War<Monster>"} 
 Player 2 21:07:51 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":6,"creatorCardId":293,"entityToDoDamageCardId":293,"entityToTakeDamageCardId":274,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 21:07:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Lost combat damage to War \n2:Player 2 rolled 5 vs War<Monster>"} 
 Player 2 21:07:51 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":5,"creatorCardId":293,"numberRolled":5,"rollingPlayerCardId":293,"stackEffectType":2,"attackedMonsterCardId":274}} 
 Player 2 21:07:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Lost combat damage to War \n2:Player 2 rolled 5 vs War<Monster>"} 
 Player 2 21:07:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Lost combat damage to War \n2:Player 2 rolled 5 vs War<Monster>"} 
 Player 2 21:07:51 $REPLACE_STACK:  

 {"currentStack":[{"entityId":6,"creatorCardId":293,"entityToDoDamageCardId":293,"entityToTakeDamageCardId":274,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":5,"creatorCardId":293,"numberRolled":5,"rollingPlayerCardId":293,"stackEffectType":2,"attackedMonsterCardId":274}]} 
 Player 2 21:07:51 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":293,"scopeIsPlayer":true,"index":6,"originStackId":5},"isAfterActivation":true,"index":6} 
 Player 2 21:07:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Lost combat damage to War \n2:Player 2 rolled 5 vs War<Monster>"} 
 Player 2 21:07:51 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":5,"creatorCardId":293,"numberRolled":5,"rollingPlayerCardId":293,"stackEffectType":2,"attackedMonsterCardId":274}} 
 Player 2 21:07:51 $ACTION_MASSAGE_REMOVE:  

 {"id":44} 
 Player 2 21:07:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Lost combat damage to War"} 
 Player 2 21:07:51 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":5,"creatorCardId":293,"numberRolled":5,"rollingPlayerCardId":293,"stackEffectType":2,"attackedMonsterCardId":274}} 
 Player 2 21:07:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":46,"_text":"Remove After Resolve AttackRoll 5  "}} 
 Player 2 21:07:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Lost combat damage to War"} 
 Player 2 21:07:52 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":5,"creatorCardId":293,"numberRolled":5,"rollingPlayerCardId":293,"stackEffectType":2,"attackedMonsterCardId":274}} 
 Player 2 21:07:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":47,"_text":"Response Remove After Resolve AttackRoll 5"},"childOfId":46} 
 Player 2 21:07:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":48,"_text":"Wait For Response From Player 2 "},"childOfId":46} 
 Player 2 21:07:52 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:07:54 $ACTION_MASSAGE_REMOVE:  

 {"id":45} 
 Player 2 21:07:54 $ACTION_MASSAGE_REMOVE:  

 {"id":46} 
 Player 2 21:08:35 $ACTION_MASSAGE_REMOVE:  

 {"id":48} 
 Player 2 21:08:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":49,"_text":"Wait For Response From Player 1 "},"childOfId":46} 
 Player 2 21:08:35 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 21:08:35 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 21:08:36 $ACTION_MASSAGE_REMOVE:  

 {"id":49} 
 Player 2 21:08:36 $ACTION_MASSAGE_REMOVE:  

 {"id":47} 
 Player 2 21:08:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":50,"_text":"Resolve CombatDamage 6 "}} 
 Player 2 21:08:36 $UPDATE_STACK_VIS:  

 {"stackId":6,"text":"The Lost will deal 1 combat damage to War"} 
 Player 2 21:08:36 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":293}],"result":null,"preventMethod":false,"methodScopeId":274,"scopeIsPlayer":false,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1} 
 Player 2 21:08:36 $NEXT_STACK_ID:  
 Player 2 21:08:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Lost combat damage to War"} 
 Player 2 21:08:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Lost combat damage to War \n2:Activate War effect GainStats<GainStats>"} 
 Player 2 21:08:36 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":7,"creatorCardId":274,"hasLockingStackEffect":false,"cardActivatorId":274,"cardWithEffectId":274,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":274,"cardId":274,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 21:08:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Lost combat damage to War \n2:Activate War effect GainStats<GainStats>"} 
 Player 2 21:08:36 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":7,"creatorCardId":274,"hasLockingStackEffect":false,"cardActivatorId":274,"cardWithEffectId":274,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":274,"cardId":274,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 21:08:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":51,"_text":"Add ActivatePassiveEffect 7 "}} 
 Player 2 21:08:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Lost combat damage to War \n2:Activate War effect GainStats<GainStats>"} 
 Player 2 21:08:36 $ACTION_MASSAGE_REMOVE:  

 {"id":51} 
 Player 2 21:08:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Lost combat damage to War \n2:Activate War effect GainStats<GainStats>"} 
 Player 2 21:08:36 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[274],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":274,"effectCardPlayer":274},"entityId":7,"creatorCardId":274,"hasLockingStackEffect":false,"cardActivatorId":274,"cardWithEffectId":274,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":274,"cardId":274,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 21:08:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":52,"_text":"Response Adding ActivatePassiveEffect 7"},"childOfId":51} 
 Player 2 21:08:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":53,"_text":"Wait For Response From Player 1 "},"childOfId":51} 
 Player 2 21:08:36 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 21:08:36 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 21:08:36 $ACTION_MASSAGE_REMOVE:  

 {"id":53} 
 Player 2 21:08:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":54,"_text":"Wait For Response From Player 2 "},"childOfId":51} 
 Player 2 21:08:36 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:08:36 $ACTION_MASSAGE_REMOVE:  

 {"id":54} 
 Player 2 21:08:36 $ACTION_MASSAGE_REMOVE:  

 {"id":52} 
 Player 2 21:08:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":55,"_text":"Resolve ActivatePassiveEffect 7 "}} 
 Player 2 21:08:36 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":274,"particleType":6} 
 Player 2 21:08:38 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":274,"particleType":6} 
 Player 2 21:08:38 $MONSTER_GAIN_DMG:  

 {"cardId":274,"DMGToGain":1} 
 Player 2 21:08:38 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":293}],"result":null,"preventMethod":false,"methodScopeId":274,"scopeIsPlayer":false,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1} 
 Player 2 21:08:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Lost combat damage to War \n2:Activate War effect GainStats<GainStats>"} 
 Player 2 21:08:38 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[274],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":274,"effectCardPlayer":274},"entityId":7,"creatorCardId":274,"hasLockingStackEffect":false,"cardActivatorId":274,"cardWithEffectId":274,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 21:08:38 $ACTION_MASSAGE_REMOVE:  

 {"id":55} 
 Player 2 21:08:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Lost combat damage to War"} 
 Player 2 21:08:38 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[274],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":274,"effectCardPlayer":274},"entityId":7,"creatorCardId":274,"hasLockingStackEffect":false,"cardActivatorId":274,"cardWithEffectId":274,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 21:08:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":56,"_text":"Remove After Resolve ActivatePassiveEffect 7  "}} 
 Player 2 21:08:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Lost combat damage to War"} 
 Player 2 21:08:39 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[274],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":274,"effectCardPlayer":274},"entityId":7,"creatorCardId":274,"hasLockingStackEffect":false,"cardActivatorId":274,"cardWithEffectId":274,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 21:08:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":57,"_text":"Response Remove After Resolve ActivatePassiveEffect 7"},"childOfId":56} 
 Player 2 21:08:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":58,"_text":"Wait For Response From Player 2 "},"childOfId":56} 
 Player 2 21:08:39 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:08:39 $ACTION_MASSAGE_REMOVE:  

 {"id":58} 
 Player 2 21:08:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":59,"_text":"Wait For Response From Player 1 "},"childOfId":56} 
 Player 2 21:08:39 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 21:08:39 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 21:08:39 $ACTION_MASSAGE_REMOVE:  

 {"id":59} 
 Player 2 21:08:39 $ACTION_MASSAGE_REMOVE:  

 {"id":57} 
 Player 2 21:08:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":60,"_text":"Resolve CombatDamage 6 "}} 
 Player 2 21:08:39 $MONSTER_GET_DAMAGED:  

 {"cardId":274,"hpLeft":2,"damageDealerId":293} 
 Player 2 21:08:39 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":293}],"result":null,"preventMethod":false,"methodScopeId":274,"scopeIsPlayer":false,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 21:08:39 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":5},{"type":0,"number":293},{"type":0,"number":274}],"result":null,"preventMethod":false,"methodScopeId":293,"scopeIsPlayer":true,"index":7,"originStackId":6},"isAfterActivation":true,"index":7} 
 Player 2 21:08:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Lost combat damage to War"} 
 Player 2 21:08:39 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":6,"creatorCardId":293,"entityToDoDamageCardId":293,"entityToTakeDamageCardId":274,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 21:08:39 $ACTION_MASSAGE_REMOVE:  

 {"id":50} 
 Player 2 21:08:39 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 21:08:39 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":6,"creatorCardId":293,"entityToDoDamageCardId":293,"entityToTakeDamageCardId":274,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 21:08:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":61,"_text":"Remove After Resolve CombatDamage 6  "}} 
 Player 2 21:08:39 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 21:08:39 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":6,"creatorCardId":293,"entityToDoDamageCardId":293,"entityToTakeDamageCardId":274,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 21:08:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":62,"_text":"Response Remove After Resolve CombatDamage 6"},"childOfId":61} 
 Player 2 21:08:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":63,"_text":"Wait For Response From Player 1 "},"childOfId":61} 
 Player 2 21:08:39 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 21:08:39 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 21:08:40 $ACTION_MASSAGE_REMOVE:  

 {"id":63} 
 Player 2 21:08:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":64,"_text":"Wait For Response From Player 2 "},"childOfId":61} 
 Player 2 21:08:40 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:08:40 $ACTION_MASSAGE_REMOVE:  

 {"id":64} 
 Player 2 21:08:40 $ACTION_MASSAGE_REMOVE:  

 {"id":62} 
 Player 2 21:08:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":65,"_text":"Stack Was Emptied "}} 
 Player 2 21:08:40 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 21:08:40 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 2 21:08:40 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 2 21:08:40 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 2 21:08:40 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 2 21:08:40 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 2 21:08:40 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 2 21:08:40 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 2 21:08:40 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 2 21:08:40 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 2 21:08:40 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 2 21:08:40 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 2 21:08:40 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 2 21:08:40 $ACTION_MASSAGE_REMOVE:  

 {"id":24} 
 Player 2 21:08:40 $ACTION_MASSAGE_REMOVE:  

 {"id":25} 
 Player 2 21:08:40 $ACTION_MASSAGE_REMOVE:  

 {"id":29} 
 Player 2 21:08:40 $ACTION_MASSAGE_REMOVE:  

 {"id":30} 
 Player 2 21:08:40 $ACTION_MASSAGE_REMOVE:  

 {"id":34} 
 Player 2 21:08:40 $ACTION_MASSAGE_REMOVE:  

 {"id":35} 
 Player 2 21:08:40 $ACTION_MASSAGE_REMOVE:  

 {"id":39} 
 Player 2 21:08:40 $ACTION_MASSAGE_REMOVE:  

 {"id":40} 
 Player 2 21:08:40 $ACTION_MASSAGE_REMOVE:  

 {"id":44} 
 Player 2 21:08:40 $ACTION_MASSAGE_REMOVE:  

 {"id":45} 
 Player 2 21:08:40 $ACTION_MASSAGE_REMOVE:  

 {"id":46} 
 Player 2 21:08:40 $ACTION_MASSAGE_REMOVE:  

 {"id":50} 
 Player 2 21:08:41 $ACTION_MASSAGE_REMOVE:  

 {"id":51} 
 Player 2 21:08:41 $ACTION_MASSAGE_REMOVE:  

 {"id":55} 
 Player 2 21:08:41 $ACTION_MASSAGE_REMOVE:  

 {"id":56} 
 Player 2 21:08:41 $ACTION_MASSAGE_REMOVE:  

 {"id":60} 
 Player 2 21:08:41 $ACTION_MASSAGE_REMOVE:  

 {"id":61} 
 Player 2 21:08:41 $ACTION_MASSAGE_REMOVE:  

 {"id":65} 
 Player 2 21:08:41 $ACTION_MASSAGE_REMOVE:  

 {"id":65} 
 Player 2 21:08:41 $ACTION_MASSAGE_REMOVE:  

 {"id":56} 
 Player 2 21:08:42 $NEXT_STACK_ID:  
 Player 2 21:08:42 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 21:08:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against War<Monster>"} 
 Player 2 21:08:42 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":8,"creatorCardId":293,"rollingPlayerCardId":293,"stackEffectType":2,"attackedMonsterCardId":274}} 
 Player 2 21:08:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against War<Monster>"} 
 Player 2 21:08:42 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":8,"creatorCardId":293,"rollingPlayerCardId":293,"stackEffectType":2,"attackedMonsterCardId":274}} 
 Player 2 21:08:42 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":66,"_text":"Add AttackRoll 8 "}} 
 Player 2 21:08:42 $ROLL_DICE:  

 {"playerId":2} 
 Player 2 21:08:42 $ACTION_MASSAGE_REMOVE:  

 {"id":61} 
 Player 2 21:08:43 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":3} 
 Player 2 21:08:43 $UPDATE_STACK_VIS:  

 {"stackId":8,"text":"player rolled 3 vs War<Monster>"} 
 Player 2 21:08:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 3 vs War<Monster>"} 
 Player 2 21:08:43 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:08:43 $ACTION_MASSAGE_REMOVE:  

 {"id":66} 
 Player 2 21:08:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 3 vs War<Monster>"} 
 Player 2 21:08:43 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":8,"creatorCardId":293,"numberRolled":3,"rollingPlayerCardId":293,"stackEffectType":2,"attackedMonsterCardId":274}} 
 Player 2 21:08:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":67,"_text":"Response Adding AttackRoll 8"},"childOfId":66} 
 Player 2 21:08:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":68,"_text":"Wait For Response From Player 2 "},"childOfId":66} 
 Player 2 21:08:43 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:08:43 $ACTION_MASSAGE_REMOVE:  

 {"id":68} 
 Player 2 21:08:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":69,"_text":"Wait For Response From Player 1 "},"childOfId":66} 
 Player 2 21:08:43 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 21:08:43 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 21:08:43 $ACTION_MASSAGE_REMOVE:  

 {"id":69} 
 Player 2 21:08:44 $ACTION_MASSAGE_REMOVE:  

 {"id":67} 
 Player 2 21:08:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":70,"_text":"Resolve AttackRoll 8 "}} 
 Player 2 21:08:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":71,"_text":"Added 0 to original roll"}} 
 Player 2 21:08:44 $NEXT_STACK_ID:  
 Player 2 21:08:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 3 vs War<Monster>"} 
 Player 2 21:08:44 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:08:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Lost combat damage to War \n2:Player 2 rolled 3 vs War<Monster>"} 
 Player 2 21:08:44 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":9,"creatorCardId":293,"entityToDoDamageCardId":293,"entityToTakeDamageCardId":274,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 21:08:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Lost combat damage to War \n2:Player 2 rolled 3 vs War<Monster>"} 
 Player 2 21:08:44 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":8,"creatorCardId":293,"numberRolled":3,"rollingPlayerCardId":293,"stackEffectType":2,"attackedMonsterCardId":274}} 
 Player 2 21:08:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Lost combat damage to War \n2:Player 2 rolled 3 vs War<Monster>"} 
 Player 2 21:08:44 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":9,"creatorCardId":293,"entityToDoDamageCardId":293,"entityToTakeDamageCardId":274,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 21:08:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Lost combat damage to War \n2:Player 2 rolled 3 vs War<Monster>"} 
 Player 2 21:08:44 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":8,"creatorCardId":293,"numberRolled":3,"rollingPlayerCardId":293,"stackEffectType":2,"attackedMonsterCardId":274}} 
 Player 2 21:08:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Lost combat damage to War \n2:Player 2 rolled 3 vs War<Monster>"} 
 Player 2 21:08:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Lost combat damage to War \n2:Player 2 rolled 3 vs War<Monster>"} 
 Player 2 21:08:44 $REPLACE_STACK:  

 {"currentStack":[{"entityId":9,"creatorCardId":293,"entityToDoDamageCardId":293,"entityToTakeDamageCardId":274,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":8,"creatorCardId":293,"numberRolled":3,"rollingPlayerCardId":293,"stackEffectType":2,"attackedMonsterCardId":274}]} 
 Player 2 21:08:44 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":3},{"type":2,"number":1},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":293,"scopeIsPlayer":true,"index":8,"originStackId":8},"isAfterActivation":true,"index":8} 
 Player 2 21:08:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Lost combat damage to War \n2:Player 2 rolled 3 vs War<Monster>"} 
 Player 2 21:08:44 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":8,"creatorCardId":293,"numberRolled":3,"rollingPlayerCardId":293,"stackEffectType":2,"attackedMonsterCardId":274}} 
 Player 2 21:08:44 $ACTION_MASSAGE_REMOVE:  

 {"id":70} 
 Player 2 21:08:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Lost combat damage to War"} 
 Player 2 21:08:44 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":8,"creatorCardId":293,"numberRolled":3,"rollingPlayerCardId":293,"stackEffectType":2,"attackedMonsterCardId":274}} 
 Player 2 21:08:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":72,"_text":"Remove After Resolve AttackRoll 8  "}} 
 Player 2 21:08:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Lost combat damage to War"} 
 Player 2 21:08:44 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":8,"creatorCardId":293,"numberRolled":3,"rollingPlayerCardId":293,"stackEffectType":2,"attackedMonsterCardId":274}} 
 Player 2 21:08:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":73,"_text":"Response Remove After Resolve AttackRoll 8"},"childOfId":72} 
 Player 2 21:08:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":74,"_text":"Wait For Response From Player 2 "},"childOfId":72} 
 Player 2 21:08:44 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:08:44 $ACTION_MASSAGE_REMOVE:  

 {"id":74} 
 Player 2 21:08:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":75,"_text":"Wait For Response From Player 1 "},"childOfId":72} 
 Player 2 21:08:44 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 21:08:44 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 21:08:45 $ACTION_MASSAGE_REMOVE:  

 {"id":75} 
 Player 2 21:08:45 $ACTION_MASSAGE_REMOVE:  

 {"id":73} 
 Player 2 21:08:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":76,"_text":"Resolve CombatDamage 9 "}} 
 Player 2 21:08:45 $UPDATE_STACK_VIS:  

 {"stackId":9,"text":"The Lost will deal 1 combat damage to War"} 
 Player 2 21:08:45 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":293}],"result":null,"preventMethod":false,"methodScopeId":274,"scopeIsPlayer":false,"index":2,"originStackId":-1},"isAfterActivation":false,"index":2} 
 Player 2 21:08:45 $NEXT_STACK_ID:  
 Player 2 21:08:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Lost combat damage to War"} 
 Player 2 21:08:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Lost combat damage to War \n2:Activate War effect GainStats<GainStats>"} 
 Player 2 21:08:45 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":10,"creatorCardId":274,"hasLockingStackEffect":false,"cardActivatorId":274,"cardWithEffectId":274,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":274,"cardId":274,"effctType":0},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 21:08:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Lost combat damage to War \n2:Activate War effect GainStats<GainStats>"} 
 Player 2 21:08:45 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":10,"creatorCardId":274,"hasLockingStackEffect":false,"cardActivatorId":274,"cardWithEffectId":274,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":274,"cardId":274,"effctType":0},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 21:08:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":77,"_text":"Add ActivatePassiveEffect 10 "}} 
 Player 2 21:08:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Lost combat damage to War \n2:Activate War effect GainStats<GainStats>"} 
 Player 2 21:08:45 $ACTION_MASSAGE_REMOVE:  

 {"id":77} 
 Player 2 21:08:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Lost combat damage to War \n2:Activate War effect GainStats<GainStats>"} 
 Player 2 21:08:45 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[274],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":274,"effectCardPlayer":274},"entityId":10,"creatorCardId":274,"hasLockingStackEffect":false,"cardActivatorId":274,"cardWithEffectId":274,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":274,"cardId":274,"effctType":0},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 21:08:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":78,"_text":"Response Adding ActivatePassiveEffect 10"},"childOfId":77} 
 Player 2 21:08:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":79,"_text":"Wait For Response From Player 1 "},"childOfId":77} 
 Player 2 21:08:45 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 21:08:45 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 21:08:46 $ACTION_MASSAGE_REMOVE:  

 {"id":79} 
 Player 2 21:08:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":80,"_text":"Wait For Response From Player 2 "},"childOfId":77} 
 Player 2 21:08:46 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:08:46 $ACTION_MASSAGE_REMOVE:  

 {"id":80} 
 Player 2 21:08:46 $ACTION_MASSAGE_REMOVE:  

 {"id":78} 
 Player 2 21:08:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":81,"_text":"Resolve ActivatePassiveEffect 10 "}} 
 Player 2 21:08:46 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":274,"particleType":6} 
 Player 2 21:08:46 $ACTION_MASSAGE_REMOVE:  

 {"id":71} 
 Player 2 21:08:47 $ACTION_MASSAGE_REMOVE:  

 {"id":72} 
 Player 2 21:08:48 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":274,"particleType":6} 
 Player 2 21:08:48 $MONSTER_GAIN_DMG:  

 {"cardId":274,"DMGToGain":1} 
 Player 2 21:08:48 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":293}],"result":null,"preventMethod":false,"methodScopeId":274,"scopeIsPlayer":false,"index":2,"originStackId":-1},"isAfterActivation":false,"index":2} 
 Player 2 21:08:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Lost combat damage to War \n2:Activate War effect GainStats<GainStats>"} 
 Player 2 21:08:48 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[274],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":274,"effectCardPlayer":274},"entityId":10,"creatorCardId":274,"hasLockingStackEffect":false,"cardActivatorId":274,"cardWithEffectId":274,"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 21:08:48 $ACTION_MASSAGE_REMOVE:  

 {"id":81} 
 Player 2 21:08:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Lost combat damage to War"} 
 Player 2 21:08:48 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[274],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":274,"effectCardPlayer":274},"entityId":10,"creatorCardId":274,"hasLockingStackEffect":false,"cardActivatorId":274,"cardWithEffectId":274,"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 21:08:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":82,"_text":"Remove After Resolve ActivatePassiveEffect 10  "}} 
 Player 2 21:08:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Lost combat damage to War"} 
 Player 2 21:08:48 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[274],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":274,"effectCardPlayer":274},"entityId":10,"creatorCardId":274,"hasLockingStackEffect":false,"cardActivatorId":274,"cardWithEffectId":274,"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 21:08:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":83,"_text":"Response Remove After Resolve ActivatePassiveEffect 10"},"childOfId":82} 
 Player 2 21:08:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":84,"_text":"Wait For Response From Player 2 "},"childOfId":82} 
 Player 2 21:08:48 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:08:48 $ACTION_MASSAGE_REMOVE:  

 {"id":84} 
 Player 2 21:08:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":85,"_text":"Wait For Response From Player 1 "},"childOfId":82} 
 Player 2 21:08:48 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 21:08:48 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 21:08:48 $ACTION_MASSAGE_REMOVE:  

 {"id":85} 
 Player 2 21:08:48 $ACTION_MASSAGE_REMOVE:  

 {"id":83} 
 Player 2 21:08:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":86,"_text":"Resolve CombatDamage 9 "}} 
 Player 2 21:08:48 $MONSTER_GET_DAMAGED:  

 {"cardId":274,"hpLeft":1,"damageDealerId":293} 
 Player 2 21:08:48 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":293}],"result":null,"preventMethod":false,"methodScopeId":274,"scopeIsPlayer":false,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 2 21:08:48 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":3},{"type":0,"number":293},{"type":0,"number":274}],"result":null,"preventMethod":false,"methodScopeId":293,"scopeIsPlayer":true,"index":9,"originStackId":9},"isAfterActivation":true,"index":9} 
 Player 2 21:08:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Lost combat damage to War"} 
 Player 2 21:08:48 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":9,"creatorCardId":293,"entityToDoDamageCardId":293,"entityToTakeDamageCardId":274,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 21:08:49 $ACTION_MASSAGE_REMOVE:  

 {"id":76} 
 Player 2 21:08:49 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 21:08:49 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":9,"creatorCardId":293,"entityToDoDamageCardId":293,"entityToTakeDamageCardId":274,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 21:08:49 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":87,"_text":"Remove After Resolve CombatDamage 9  "}} 
 Player 2 21:08:49 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 21:08:49 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":9,"creatorCardId":293,"entityToDoDamageCardId":293,"entityToTakeDamageCardId":274,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 21:08:49 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":88,"_text":"Response Remove After Resolve CombatDamage 9"},"childOfId":87} 
 Player 2 21:08:49 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":89,"_text":"Wait For Response From Player 1 "},"childOfId":87} 
 Player 2 21:08:49 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 21:08:49 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 21:08:49 $ACTION_MASSAGE_REMOVE:  

 {"id":89} 
 Player 2 21:08:49 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":90,"_text":"Wait For Response From Player 2 "},"childOfId":87} 
 Player 2 21:08:49 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:08:49 $ACTION_MASSAGE_REMOVE:  

 {"id":90} 
 Player 2 21:08:49 $ACTION_MASSAGE_REMOVE:  

 {"id":88} 
 Player 2 21:08:49 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":91,"_text":"Stack Was Emptied "}} 
 Player 2 21:08:49 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 21:08:49 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 2 21:08:49 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 2 21:08:49 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 2 21:08:49 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 2 21:08:49 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 2 21:08:49 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 2 21:08:49 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 2 21:08:49 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 2 21:08:49 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 2 21:08:49 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 2 21:08:49 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 2 21:08:49 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 2 21:08:49 $ACTION_MASSAGE_REMOVE:  

 {"id":24} 
 Player 2 21:08:49 $ACTION_MASSAGE_REMOVE:  

 {"id":25} 
 Player 2 21:08:50 $ACTION_MASSAGE_REMOVE:  

 {"id":29} 
 Player 2 21:08:50 $ACTION_MASSAGE_REMOVE:  

 {"id":30} 
 Player 2 21:08:50 $ACTION_MASSAGE_REMOVE:  

 {"id":34} 
 Player 2 21:08:50 $ACTION_MASSAGE_REMOVE:  

 {"id":35} 
 Player 2 21:08:50 $ACTION_MASSAGE_REMOVE:  

 {"id":39} 
 Player 2 21:08:50 $ACTION_MASSAGE_REMOVE:  

 {"id":40} 
 Player 2 21:08:50 $ACTION_MASSAGE_REMOVE:  

 {"id":44} 
 Player 2 21:08:50 $ACTION_MASSAGE_REMOVE:  

 {"id":45} 
 Player 2 21:08:50 $ACTION_MASSAGE_REMOVE:  

 {"id":46} 
 Player 2 21:08:50 $ACTION_MASSAGE_REMOVE:  

 {"id":50} 
 Player 2 21:08:50 $ACTION_MASSAGE_REMOVE:  

 {"id":51} 
 Player 2 21:08:50 $ACTION_MASSAGE_REMOVE:  

 {"id":55} 
 Player 2 21:08:50 $ACTION_MASSAGE_REMOVE:  

 {"id":56} 
 Player 2 21:08:50 $ACTION_MASSAGE_REMOVE:  

 {"id":60} 
 Player 2 21:08:50 $ACTION_MASSAGE_REMOVE:  

 {"id":61} 
 Player 2 21:08:50 $ACTION_MASSAGE_REMOVE:  

 {"id":65} 
 Player 2 21:08:50 $ACTION_MASSAGE_REMOVE:  

 {"id":66} 
 Player 2 21:08:50 $ACTION_MASSAGE_REMOVE:  

 {"id":70} 
 Player 2 21:08:50 $ACTION_MASSAGE_REMOVE:  

 {"id":71} 
 Player 2 21:08:50 $ACTION_MASSAGE_REMOVE:  

 {"id":72} 
 Player 2 21:08:50 $ACTION_MASSAGE_REMOVE:  

 {"id":76} 
 Player 2 21:08:50 $ACTION_MASSAGE_REMOVE:  

 {"id":77} 
 Player 2 21:08:50 $ACTION_MASSAGE_REMOVE:  

 {"id":81} 
 Player 2 21:08:50 $ACTION_MASSAGE_REMOVE:  

 {"id":82} 
 Player 2 21:08:50 $ACTION_MASSAGE_REMOVE:  

 {"id":86} 
 Player 2 21:08:50 $ACTION_MASSAGE_REMOVE:  

 {"id":87} 
 Player 2 21:08:50 $ACTION_MASSAGE_REMOVE:  

 {"id":91} 
 Player 2 21:08:50 $ACTION_MASSAGE_REMOVE:  

 {"id":91} 
 Player 2 21:08:51 $ACTION_MASSAGE_REMOVE:  

 {"id":82} 
 Player 2 21:08:51 $ACTION_MASSAGE_REMOVE:  

 {"id":87} 
 Player 2 21:08:52 $NEXT_STACK_ID:  
 Player 2 21:08:52 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 21:08:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against War<Monster>"} 
 Player 2 21:08:52 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":11,"creatorCardId":293,"rollingPlayerCardId":293,"stackEffectType":2,"attackedMonsterCardId":274}} 
 Player 2 21:08:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against War<Monster>"} 
 Player 2 21:08:52 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":11,"creatorCardId":293,"rollingPlayerCardId":293,"stackEffectType":2,"attackedMonsterCardId":274}} 
 Player 2 21:08:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":92,"_text":"Add AttackRoll 11 "}} 
 Player 2 21:08:52 $ROLL_DICE:  

 {"playerId":2} 
 Player 2 21:08:54 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":2} 
 Player 2 21:08:54 $UPDATE_STACK_VIS:  

 {"stackId":11,"text":"player rolled 2 vs War<Monster>"} 
 Player 2 21:08:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 2 vs War<Monster>"} 
 Player 2 21:08:54 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:08:54 $ACTION_MASSAGE_REMOVE:  

 {"id":92} 
 Player 2 21:08:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 2 vs War<Monster>"} 
 Player 2 21:08:54 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":11,"creatorCardId":293,"numberRolled":2,"rollingPlayerCardId":293,"stackEffectType":2,"attackedMonsterCardId":274}} 
 Player 2 21:08:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":93,"_text":"Response Adding AttackRoll 11"},"childOfId":92} 
 Player 2 21:08:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":94,"_text":"Wait For Response From Player 2 "},"childOfId":92} 
 Player 2 21:08:54 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:08:54 $ACTION_MASSAGE_REMOVE:  

 {"id":94} 
 Player 2 21:08:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":95,"_text":"Wait For Response From Player 1 "},"childOfId":92} 
 Player 2 21:08:54 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 21:08:54 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 21:08:55 $ACTION_MASSAGE_REMOVE:  

 {"id":95} 
 Player 2 21:08:55 $ACTION_MASSAGE_REMOVE:  

 {"id":93} 
 Player 2 21:08:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":96,"_text":"Resolve AttackRoll 11 "}} 
 Player 2 21:08:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":97,"_text":"Added 0 to original roll"}} 
 Player 2 21:08:55 $NEXT_STACK_ID:  
 Player 2 21:08:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 2 vs War<Monster>"} 
 Player 2 21:08:55 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:08:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:War combat damage to The Lost \n2:Player 2 rolled 2 vs War<Monster>"} 
 Player 2 21:08:55 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":12,"creatorCardId":293,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":293,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 21:08:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:War combat damage to The Lost \n2:Player 2 rolled 2 vs War<Monster>"} 
 Player 2 21:08:55 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":11,"creatorCardId":293,"numberRolled":2,"rollingPlayerCardId":293,"stackEffectType":2,"attackedMonsterCardId":274}} 
 Player 2 21:08:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:War combat damage to The Lost \n2:Player 2 rolled 2 vs War<Monster>"} 
 Player 2 21:08:55 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":12,"creatorCardId":293,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":293,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 21:08:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:War combat damage to The Lost \n2:Player 2 rolled 2 vs War<Monster>"} 
 Player 2 21:08:55 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":11,"creatorCardId":293,"numberRolled":2,"rollingPlayerCardId":293,"stackEffectType":2,"attackedMonsterCardId":274}} 
 Player 2 21:08:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:War combat damage to The Lost \n2:Player 2 rolled 2 vs War<Monster>"} 
 Player 2 21:08:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:War combat damage to The Lost \n2:Player 2 rolled 2 vs War<Monster>"} 
 Player 2 21:08:55 $REPLACE_STACK:  

 {"currentStack":[{"entityId":12,"creatorCardId":293,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":293,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":11,"creatorCardId":293,"numberRolled":2,"rollingPlayerCardId":293,"stackEffectType":2,"attackedMonsterCardId":274}]} 
 Player 2 21:08:55 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":2},{"type":2,"number":1},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":293,"scopeIsPlayer":true,"index":10,"originStackId":11},"isAfterActivation":true,"index":10} 
 Player 2 21:08:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:War combat damage to The Lost \n2:Player 2 rolled 2 vs War<Monster>"} 
 Player 2 21:08:55 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":11,"creatorCardId":293,"numberRolled":2,"rollingPlayerCardId":293,"stackEffectType":2,"attackedMonsterCardId":274}} 
 Player 2 21:08:55 $ACTION_MASSAGE_REMOVE:  

 {"id":96} 
 Player 2 21:08:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:War combat damage to The Lost"} 
 Player 2 21:08:55 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":11,"creatorCardId":293,"numberRolled":2,"rollingPlayerCardId":293,"stackEffectType":2,"attackedMonsterCardId":274}} 
 Player 2 21:08:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":98,"_text":"Remove After Resolve AttackRoll 11  "}} 
 Player 2 21:08:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:War combat damage to The Lost"} 
 Player 2 21:08:55 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":11,"creatorCardId":293,"numberRolled":2,"rollingPlayerCardId":293,"stackEffectType":2,"attackedMonsterCardId":274}} 
 Player 2 21:08:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":99,"_text":"Response Remove After Resolve AttackRoll 11"},"childOfId":98} 
 Player 2 21:08:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":100,"_text":"Wait For Response From Player 2 "},"childOfId":98} 
 Player 2 21:08:55 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:08:55 $ACTION_MASSAGE_REMOVE:  

 {"id":100} 
 Player 2 21:08:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":101,"_text":"Wait For Response From Player 1 "},"childOfId":98} 
 Player 2 21:08:55 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 21:08:55 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 21:08:56 $ACTION_MASSAGE_REMOVE:  

 {"id":101} 
 Player 2 21:08:56 $ACTION_MASSAGE_REMOVE:  

 {"id":99} 
 Player 2 21:08:56 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":102,"_text":"Resolve CombatDamage 12 "}} 
 Player 2 21:08:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:War 3 combat damage to The Lost"} 
 Player 2 21:08:56 $UPDATE_STACK_VIS:  

 {"stackId":12,"text":"War will deal 3 combat damage to The Lost"} 
 Player 2 21:08:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:War 3 combat damage to The Lost"} 
 Player 2 21:08:56 $PLAYER_GET_HIT:  

 {"playerId":2,"damage":3,"damageDealerId":274} 
 Player 2 21:08:56 $NEXT_STACK_ID:  
 Player 2 21:08:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:War 3 combat damage to The Lost"} 
 Player 2 21:08:56 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:08:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:War 3 combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 2 21:08:56 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":13,"creatorCardId":293,"playerToDieCardId":293,"stackEffectType":15,"killerId":274}} 
 Player 2 21:08:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:War 3 combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 2 21:08:56 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":12,"creatorCardId":293,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":293,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 21:08:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:War 3 combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 2 21:08:57 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":12,"creatorCardId":293,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":293,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 21:08:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:War 3 combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 2 21:08:57 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":13,"creatorCardId":293,"playerToDieCardId":293,"stackEffectType":15,"killerId":274}} 
 Player 2 21:08:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:War 3 combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 2 21:08:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:War 3 combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 2 21:08:57 $REPLACE_STACK:  

 {"currentStack":[{"entityId":12,"creatorCardId":293,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":293,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":13,"creatorCardId":293,"playerToDieCardId":293,"stackEffectType":15,"killerId":274}]} 
 Player 2 21:08:57 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":3},{"type":0,"number":274}],"result":null,"preventMethod":false,"methodScopeId":293,"scopeIsPlayer":true,"index":11,"originStackId":-1},"isAfterActivation":true,"index":11} 
 Player 2 21:08:57 $ACTION_MASSAGE_REMOVE:  

 {"id":102} 
 Player 2 21:08:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 21:08:57 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":12,"creatorCardId":293,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":293,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 21:08:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":103,"_text":"Remove After Resolve CombatDamage 12  "}} 
 Player 2 21:08:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 21:08:57 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":12,"creatorCardId":293,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":293,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 21:08:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":104,"_text":"Response Remove After Resolve CombatDamage 12"},"childOfId":103} 
 Player 2 21:08:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":105,"_text":"Wait For Response From Player 2 "},"childOfId":103} 
 Player 2 21:08:57 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:08:57 $ACTION_MASSAGE_REMOVE:  

 {"id":105} 
 Player 2 21:08:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":106,"_text":"Wait For Response From Player 1 "},"childOfId":103} 
 Player 2 21:08:57 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 21:08:57 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 21:08:58 $ACTION_MASSAGE_REMOVE:  

 {"id":97} 
 Player 2 21:08:58 $ACTION_MASSAGE_REMOVE:  

 {"id":98} 
 Player 2 21:08:58 $ACTION_MASSAGE_REMOVE:  

 {"id":106} 
 Player 2 21:08:58 $ACTION_MASSAGE_REMOVE:  

 {"id":104} 
 Player 2 21:08:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":107,"_text":"Resolve PlayerDeath 13 "}} 
 Player 2 21:08:58 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":274,"particleType":5} 
 Player 2 21:08:58 $CANCEL_ATTACK:  
 Player 2 21:08:58 $NEXT_STACK_ID:  
 Player 2 21:08:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 21:08:58 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_PAY_DEATH_PANELTIES","args":[],"result":null,"preventMethod":false,"methodScopeId":293,"scopeIsPlayer":true,"index":3,"originStackId":14},"isAfterActivation":false,"index":3} 
 Player 2 21:08:58 $NEXT_STACK_ID:  
 Player 2 21:08:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 2 21:08:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 2 21:08:58 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":15,"creatorCardId":293,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":294,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":294,"effctType":3},"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 21:08:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 2 21:08:58 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":15,"creatorCardId":293,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":294,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":294,"effctType":3},"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 21:08:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":108,"_text":"Add ActivatePassiveEffect 15 "}} 
 Player 2 21:08:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 2 21:08:58 $ACTION_MASSAGE_REMOVE:  

 {"id":108} 
 Player 2 21:08:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 2 21:08:58 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":15,"creatorCardId":293,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":294,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":294,"effctType":3},"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 21:08:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":109,"_text":"Response Adding ActivatePassiveEffect 15"},"childOfId":108} 
 Player 2 21:08:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":110,"_text":"Wait For Response From Player 1 "},"childOfId":108} 
 Player 2 21:08:58 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 21:08:58 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 21:08:58 $ACTION_MASSAGE_REMOVE:  

 {"id":110} 
 Player 2 21:08:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":111,"_text":"Wait For Response From Player 2 "},"childOfId":108} 
 Player 2 21:08:58 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:08:59 $ACTION_MASSAGE_REMOVE:  

 {"id":111} 
 Player 2 21:08:59 $ACTION_MASSAGE_REMOVE:  

 {"id":109} 
 Player 2 21:08:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":112,"_text":"Resolve ActivatePassiveEffect 15 "}} 
 Player 2 21:08:59 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":294,"particleType":6} 
 Player 2 21:08:59 $ACTION_MASSAGE_REMOVE:  

 {"id":103} 
 Player 2 21:09:00 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":294,"particleType":6} 
 Player 2 21:09:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 2 21:09:00 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":14,"creatorCardId":293,"playerToPayCardId":293,"stackEffectType":16}} 
 Player 2 21:09:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":113,"_text":"Fizzle PlayerDeathPenalties 14"}} 
 Player 2 21:09:01 $FIZZLE_STACK_EFFECT:  

 {"entityId":14} 
 Player 2 21:09:01 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_PAY_DEATH_PANELTIES","args":[],"result":null,"preventMethod":true,"methodScopeId":293,"scopeIsPlayer":true,"index":3,"originStackId":14},"isAfterActivation":false,"index":3} 
 Player 2 21:09:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 2 21:09:01 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":15,"creatorCardId":293,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":294,"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 21:09:01 $ACTION_MASSAGE_REMOVE:  

 {"id":112} 
 Player 2 21:09:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 21:09:01 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":15,"creatorCardId":293,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":294,"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 21:09:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":114,"_text":"Remove After Resolve ActivatePassiveEffect 15  "}} 
 Player 2 21:09:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 21:09:01 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":15,"creatorCardId":293,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":294,"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 21:09:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":115,"_text":"Response Remove After Resolve ActivatePassiveEffect 15"},"childOfId":114} 
 Player 2 21:09:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":116,"_text":"Wait For Response From Player 2 "},"childOfId":114} 
 Player 2 21:09:01 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:09:01 $ACTION_MASSAGE_REMOVE:  

 {"id":116} 
 Player 2 21:09:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":117,"_text":"Wait For Response From Player 1 "},"childOfId":114} 
 Player 2 21:09:01 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 21:09:01 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 21:09:01 $ACTION_MASSAGE_REMOVE:  

 {"id":117} 
 Player 2 21:09:01 $ACTION_MASSAGE_REMOVE:  

 {"id":115} 
 Player 2 21:09:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":118,"_text":"Resolve PlayerDeath 13 "}} 
 Player 2 21:09:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 21:09:01 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":14,"creatorCardId":293,"playerToPayCardId":293,"stackEffectType":16}} 
 Player 2 21:09:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 21:09:01 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":13,"creatorCardId":293,"playerToDieCardId":293,"stackEffectType":15,"killerId":274}} 
 Player 2 21:09:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 21:09:01 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":13,"creatorCardId":293,"playerToDieCardId":293,"stackEffectType":15,"killerId":274}} 
 Player 2 21:09:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 21:09:02 $REPLACE_STACK:  

 {"currentStack":[{"entityId":13,"creatorCardId":293,"playerToDieCardId":293,"stackEffectType":15,"killerId":274}]} 
 Player 2 21:09:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 21:09:02 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":13,"creatorCardId":293,"playerToDieCardId":293,"stackEffectType":15,"killerId":274}} 
 Player 2 21:09:02 $ACTION_MASSAGE_REMOVE:  

 {"id":107} 
 Player 2 21:09:02 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 21:09:02 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":13,"creatorCardId":293,"playerToDieCardId":293,"stackEffectType":15,"killerId":274}} 
 Player 2 21:09:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":119,"_text":"Remove After Resolve PlayerDeath 13  "}} 
 Player 2 21:09:02 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 21:09:02 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":13,"creatorCardId":293,"playerToDieCardId":293,"stackEffectType":15,"killerId":274}} 
 Player 2 21:09:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":120,"_text":"Response Remove After Resolve PlayerDeath 13"},"childOfId":119} 
 Player 2 21:09:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":121,"_text":"Wait For Response From Player 1 "},"childOfId":119} 
 Player 2 21:09:02 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 21:09:02 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 21:09:02 $ACTION_MASSAGE_REMOVE:  

 {"id":121} 
 Player 2 21:09:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":122,"_text":"Wait For Response From Player 2 "},"childOfId":119} 
 Player 2 21:09:02 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:09:02 $ACTION_MASSAGE_REMOVE:  

 {"id":122} 
 Player 2 21:09:02 $ACTION_MASSAGE_REMOVE:  

 {"id":120} 
 Player 2 21:09:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":123,"_text":"Stack Was Emptied "}} 
 Player 2 21:09:02 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 21:09:03 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 2 21:09:03 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 2 21:09:03 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 2 21:09:03 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 2 21:09:03 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 2 21:09:03 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 2 21:09:03 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 2 21:09:03 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 2 21:09:03 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 2 21:09:03 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 2 21:09:03 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 2 21:09:03 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 2 21:09:03 $ACTION_MASSAGE_REMOVE:  

 {"id":24} 
 Player 2 21:09:03 $ACTION_MASSAGE_REMOVE:  

 {"id":25} 
 Player 2 21:09:03 $ACTION_MASSAGE_REMOVE:  

 {"id":29} 
 Player 2 21:09:03 $ACTION_MASSAGE_REMOVE:  

 {"id":30} 
 Player 2 21:09:03 $ACTION_MASSAGE_REMOVE:  

 {"id":34} 
 Player 2 21:09:03 $ACTION_MASSAGE_REMOVE:  

 {"id":35} 
 Player 2 21:09:03 $ACTION_MASSAGE_REMOVE:  

 {"id":39} 
 Player 2 21:09:03 $ACTION_MASSAGE_REMOVE:  

 {"id":40} 
 Player 2 21:09:03 $ACTION_MASSAGE_REMOVE:  

 {"id":44} 
 Player 2 21:09:03 $ACTION_MASSAGE_REMOVE:  

 {"id":45} 
 Player 2 21:09:03 $ACTION_MASSAGE_REMOVE:  

 {"id":46} 
 Player 2 21:09:03 $ACTION_MASSAGE_REMOVE:  

 {"id":50} 
 Player 2 21:09:03 $ACTION_MASSAGE_REMOVE:  

 {"id":51} 
 Player 2 21:09:03 $ACTION_MASSAGE_REMOVE:  

 {"id":55} 
 Player 2 21:09:03 $ACTION_MASSAGE_REMOVE:  

 {"id":56} 
 Player 2 21:09:03 $ACTION_MASSAGE_REMOVE:  

 {"id":60} 
 Player 2 21:09:03 $ACTION_MASSAGE_REMOVE:  

 {"id":61} 
 Player 2 21:09:03 $ACTION_MASSAGE_REMOVE:  

 {"id":65} 
 Player 2 21:09:03 $ACTION_MASSAGE_REMOVE:  

 {"id":66} 
 Player 2 21:09:03 $ACTION_MASSAGE_REMOVE:  

 {"id":70} 
 Player 2 21:09:03 $ACTION_MASSAGE_REMOVE:  

 {"id":71} 
 Player 2 21:09:03 $ACTION_MASSAGE_REMOVE:  

 {"id":72} 
 Player 2 21:09:03 $ACTION_MASSAGE_REMOVE:  

 {"id":76} 
 Player 2 21:09:03 $ACTION_MASSAGE_REMOVE:  

 {"id":77} 
 Player 2 21:09:03 $ACTION_MASSAGE_REMOVE:  

 {"id":81} 
 Player 2 21:09:03 $ACTION_MASSAGE_REMOVE:  

 {"id":82} 
 Player 2 21:09:03 $ACTION_MASSAGE_REMOVE:  

 {"id":86} 
 Player 2 21:09:03 $ACTION_MASSAGE_REMOVE:  

 {"id":87} 
 Player 2 21:09:03 $ACTION_MASSAGE_REMOVE:  

 {"id":91} 
 Player 2 21:09:04 $ACTION_MASSAGE_REMOVE:  

 {"id":92} 
 Player 2 21:09:04 $ACTION_MASSAGE_REMOVE:  

 {"id":96} 
 Player 2 21:09:04 $ACTION_MASSAGE_REMOVE:  

 {"id":97} 
 Player 2 21:09:04 $ACTION_MASSAGE_REMOVE:  

 {"id":98} 
 Player 2 21:09:04 $ACTION_MASSAGE_REMOVE:  

 {"id":102} 
 Player 2 21:09:04 $ACTION_MASSAGE_REMOVE:  

 {"id":103} 
 Player 2 21:09:04 $ACTION_MASSAGE_REMOVE:  

 {"id":107} 
 Player 2 21:09:04 $ACTION_MASSAGE_REMOVE:  

 {"id":108} 
 Player 2 21:09:04 $ACTION_MASSAGE_REMOVE:  

 {"id":112} 
 Player 2 21:09:04 $ACTION_MASSAGE_REMOVE:  

 {"id":113} 
 Player 2 21:09:04 $ACTION_MASSAGE_REMOVE:  

 {"id":114} 
 Player 2 21:09:04 $ACTION_MASSAGE_REMOVE:  

 {"id":118} 
 Player 2 21:09:04 $ACTION_MASSAGE_REMOVE:  

 {"id":119} 
 Player 2 21:09:04 $ACTION_MASSAGE_REMOVE:  

 {"id":123} 
 Player 2 21:09:04 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 21:09:04 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 21:09:04 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 2 21:09:04 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 2 21:09:04 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 2 21:09:04 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 2 21:09:04 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 2 21:09:04 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 2 21:09:04 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 2 21:09:04 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 2 21:09:04 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 2 21:09:04 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 2 21:09:04 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 2 21:09:04 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 2 21:09:04 $ACTION_MASSAGE_REMOVE:  

 {"id":24} 
 Player 2 21:09:04 $ACTION_MASSAGE_REMOVE:  

 {"id":25} 
 Player 2 21:09:04 $ACTION_MASSAGE_REMOVE:  

 {"id":29} 
 Player 2 21:09:04 $ACTION_MASSAGE_REMOVE:  

 {"id":30} 
 Player 2 21:09:04 $ACTION_MASSAGE_REMOVE:  

 {"id":34} 
 Player 2 21:09:04 $ACTION_MASSAGE_REMOVE:  

 {"id":35} 
 Player 2 21:09:04 $ACTION_MASSAGE_REMOVE:  

 {"id":39} 
 Player 2 21:09:04 $ACTION_MASSAGE_REMOVE:  

 {"id":40} 
 Player 2 21:09:04 $ACTION_MASSAGE_REMOVE:  

 {"id":44} 
 Player 2 21:09:04 $ACTION_MASSAGE_REMOVE:  

 {"id":45} 
 Player 2 21:09:04 $ACTION_MASSAGE_REMOVE:  

 {"id":46} 
 Player 2 21:09:04 $ACTION_MASSAGE_REMOVE:  

 {"id":50} 
 Player 2 21:09:05 $ACTION_MASSAGE_REMOVE:  

 {"id":51} 
 Player 2 21:09:05 $ACTION_MASSAGE_REMOVE:  

 {"id":55} 
 Player 2 21:09:05 $ACTION_MASSAGE_REMOVE:  

 {"id":56} 
 Player 2 21:09:05 $ACTION_MASSAGE_REMOVE:  

 {"id":60} 
 Player 2 21:09:05 $ACTION_MASSAGE_REMOVE:  

 {"id":61} 
 Player 2 21:09:05 $ACTION_MASSAGE_REMOVE:  

 {"id":65} 
 Player 2 21:09:05 $ACTION_MASSAGE_REMOVE:  

 {"id":66} 
 Player 2 21:09:05 $ACTION_MASSAGE_REMOVE:  

 {"id":70} 
 Player 2 21:09:05 $ACTION_MASSAGE_REMOVE:  

 {"id":71} 
 Player 2 21:09:05 $ACTION_MASSAGE_REMOVE:  

 {"id":72} 
 Player 2 21:09:05 $ACTION_MASSAGE_REMOVE:  

 {"id":76} 
 Player 2 21:09:05 $ACTION_MASSAGE_REMOVE:  

 {"id":77} 
 Player 2 21:09:05 $ACTION_MASSAGE_REMOVE:  

 {"id":81} 
 Player 2 21:09:05 $ACTION_MASSAGE_REMOVE:  

 {"id":82} 
 Player 2 21:09:05 $ACTION_MASSAGE_REMOVE:  

 {"id":86} 
 Player 2 21:09:05 $ACTION_MASSAGE_REMOVE:  

 {"id":87} 
 Player 2 21:09:05 $ACTION_MASSAGE_REMOVE:  

 {"id":91} 
 Player 2 21:09:05 $ACTION_MASSAGE_REMOVE:  

 {"id":92} 
 Player 2 21:09:05 $ACTION_MASSAGE_REMOVE:  

 {"id":96} 
 Player 2 21:09:05 $ACTION_MASSAGE_REMOVE:  

 {"id":97} 
 Player 2 21:09:05 $ACTION_MASSAGE_REMOVE:  

 {"id":98} 
 Player 2 21:09:05 $ACTION_MASSAGE_REMOVE:  

 {"id":102} 
 Player 2 21:09:05 $ACTION_MASSAGE_REMOVE:  

 {"id":103} 
 Player 2 21:09:05 $ACTION_MASSAGE_REMOVE:  

 {"id":107} 
 Player 2 21:09:05 $ACTION_MASSAGE_REMOVE:  

 {"id":108} 
 Player 2 21:09:05 $ACTION_MASSAGE_REMOVE:  

 {"id":112} 
 Player 2 21:09:05 $ACTION_MASSAGE_REMOVE:  

 {"id":113} 
 Player 2 21:09:05 $ACTION_MASSAGE_REMOVE:  

 {"id":114} 
 Player 2 21:09:05 $ACTION_MASSAGE_REMOVE:  

 {"id":118} 
 Player 2 21:09:05 $ACTION_MASSAGE_REMOVE:  

 {"id":119} 
 Player 2 21:09:05 $ACTION_MASSAGE_REMOVE:  

 {"id":123} 
 Player 2 21:09:05 $REPLACE_STACK:  

 {"currentStack":[]} 
 Player 2 21:09:05 $END_TURN:  
 Player 2 21:09:05 $SET_TURN:  

 {"playerId":1} 
 Player 2 21:09:05 $START_TURN:  

 {"playerId":1} 
 Player 2 21:09:05 $ACTION_MASSAGE_REMOVE:  

 {"id":113} 
 Player 2 21:09:05 $ACTION_MASSAGE_REMOVE:  

 {"id":114} 
 Player 2 21:09:05 $ACTION_MASSAGE_REMOVE:  

 {"id":123} 
 Player 2 21:09:05 $ACTION_MASSAGE_REMOVE:  

 {"id":119} 
 Player 2 21:09:07 $STACK_EMPTIED:  

 {"playerId":1} 
 Player 2 21:09:07 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 21:09:07 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 21:09:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 21:09:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 21:09:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 21:09:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 21:09:08 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 21:09:08 $MOVE_CARD_END:  

 {"moveIndex":10,"cardId":136,"flipIfFlipped":false,"playerId":1} 
 Player 2 21:09:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 21:09:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 21:09:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 21:09:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 21:09:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 21:09:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 21:09:09 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 21:10:25 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 21:10:25 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 21:10:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Incubus"} 
 Player 2 21:10:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Incubus"} 
 Player 2 21:10:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Incubus"} 
 Player 2 21:10:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Incubus"} 
 Player 2 21:10:44 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 21:21:49 $MATCH: 