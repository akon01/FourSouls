Start Log 

 Player 1 19:14:26 $MATCH:  

 Player 1 19:14:26 $START_GAME:  

 Player 1 19:14:26 $MOVE_TO_TABLE:  

 Player 2 19:14:26 $MOVE_TO_TABLE:  

 Player 1 19:14:35 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 19:14:35 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 2 19:14:35 $CHOOSE_FOR_EDEN:  
{"playerId":1,"originPlayerId":2} 

 Player 1 19:14:35 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[189,192,145,217,186,190,204,222,150,213,152,183,202,173,158,185,201,149,180,154,197,157,155,223,198,194,203,184,225,169,165,148,199,224,146,177,188,206,164,210,178,200,175,216,205,153,207,219,214,170,159,162,171,179,174,209,191,160,176,211,221,196,172,156,195,187,193,215,166,161,220,218,181,147,182,208,167,163,151,212,168]} 

 Player 1 19:14:45 $EDEN_CHOSEN:  
{"cardId":145,"playerId":2} 

 Player 2 19:14:45 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[189,192,217,186,190,204,222,150,213,152,183,202,173,158,185,201,149,180,154,197,157,155,223,198,194,203,184,225,169,165,148,199,224,146,177,188,206,164,210,178,200,175,216,205,153,207,219,214,170,159,162,171,179,174,209,191,160,176,211,221,196,172,156,195,187,193,215,166,161,220,218,181,147,182,208,167,163,151,212,168]} 

 Player 2 19:14:45 $FLIP_CARD:  
{"cardId":145} 

 Player 2 19:14:45 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":288,"itemCardId":145} 

 Player 2 19:14:45 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":293}],"result":true,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 19:14:45 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":292,"itemCardId":293} 

 Player 2 19:14:45 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[67,82,70,133,84,119,112,13,33,41,73,116,43,57,65,78,66,7,47,108,36,14,61,126,12,83,19,21,48,37,45,39,98,89,74,85,52,30,24,26,138,99,71,88,17,136,42,124,115,132,40,16,91,10,134,129,62,28,97,106,77,104,87,114,107,120,95,35,109,127,38,130,103,113,81,125,128,44,20,25,64,76,23,59,93,141,46,54,55,22,121,50,96,11,63,75,118,34,102,90,137,117,32,15,139,69,58,29,92,135,94,100,105,131,18,27,142,101,53,110,49,72,31,79,122,56,140,51,123,60,86,68,9,111,80,8]} 

 Player 2 19:14:45 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[266,263,237,262,231,238,233,247,267,229,257,232,245,228,265,250,261,275,236,279,260,239,256,249,269,248,278,246,274,242,253,230,251,234,268,252,277,273,254,244,255,276,271,240,241,235,280,259,243,258,272,264,281,270]} 

 Player 2 19:14:45 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[170,218,150,147,189,157,173,199,184,175,146,203,219,178,149,176,166,197,148,165,156,155,158,202,153,211,172,222,188,225,171,167,160,204,151,185,201,217,195,181,198,206,177,207,224,193,213,191,223,164,209,192,215,208,186,179,187,190,212,159,205,183,168,180,154,194,169,152,162,174,163,161,210,221,196,216,200,220,182,214]} 

 Player 2 19:14:45 $DRAW_CARD:  
{"deckType":5} 

 Player 2 19:14:45 $FLIP_CARD:  
{"cardId":214} 

 Player 2 19:14:45 $ADD_STORE_CARD:  
{"cardId":214} 

 Player 2 19:14:45 $DRAW_CARD:  
{"deckType":5} 

 Player 2 19:14:45 $FLIP_CARD:  
{"cardId":182} 

 Player 2 19:14:45 $ADD_STORE_CARD:  
{"cardId":182} 

 Player 2 19:14:45 $DRAW_CARD:  
{"deckType":2} 

 Player 2 19:14:45 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":270} 

 Player 2 19:14:45 $DRAW_CARD:  
{"deckType":2} 

 Player 2 19:14:45 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":281} 

 Player 2 19:14:45 $DRAW_CARD:  
{"deckType":2} 

 Player 2 19:14:45 $FLIP_CARD:  
{"cardId":264} 

 Player 2 19:14:45 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":264} 

 Player 2 19:14:45 $NEW_MONSTER_ON_PLACE:  
{"cardId":264,"monsterPlaceId":1} 

 Player 2 19:14:46 $DRAW_CARD:  
{"deckType":2} 

 Player 2 19:14:46 $FLIP_CARD:  
{"cardId":272} 

 Player 2 19:14:46 $REGISTER_PASSIVE_ITEM:  
{"cardId":272} 

 Player 2 19:14:46 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":272} 

 Player 2 19:14:46 $NEW_MONSTER_ON_PLACE:  
{"cardId":272,"monsterPlaceId":2} 

 Player 2 19:14:46 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 19:14:46 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":288,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 19:14:46 $DRAW_CARD:  
{"deckType":1} 

 Player 2 19:14:46 $MOVE_CARD:  
{"moveIndex":1,"cardId":8,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 19:14:46 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":145}],"result":true,"preventMethod":false,"methodScopeId":288,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 19:14:46 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":8,"flipIfFlipped":false,"playerId":2} 

 Player 2 19:14:47 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":8} 

 Player 2 19:14:47 $FLIP_CARD:  
{"cardId":8} 

 Player 2 19:14:47 $FLIP_CARD:  
{"cardId":8} 

 Player 2 19:14:47 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":8} 

 Player 2 19:14:47 $DRAW_CARD:  
{"deckType":1} 

 Player 2 19:14:47 $MOVE_CARD:  
{"moveIndex":2,"cardId":80,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 19:14:47 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":80,"flipIfFlipped":false,"playerId":2} 

 Player 2 19:14:47 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":80} 

 Player 2 19:14:47 $FLIP_CARD:  
{"cardId":80} 

 Player 2 19:14:48 $FLIP_CARD:  
{"cardId":80} 

 Player 2 19:14:48 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":80} 

 Player 2 19:14:48 $DRAW_CARD:  
{"deckType":1} 

 Player 2 19:14:48 $MOVE_CARD:  
{"moveIndex":3,"cardId":111,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 19:14:48 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":111,"flipIfFlipped":false,"playerId":2} 

 Player 2 19:14:48 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":111} 

 Player 2 19:14:48 $FLIP_CARD:  
{"cardId":111} 

 Player 2 19:14:48 $FLIP_CARD:  
{"cardId":111} 

 Player 2 19:14:48 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":111} 

 Player 2 19:14:48 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 19:14:48 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 19:14:48 $DRAW_CARD:  
{"deckType":1} 

 Player 2 19:14:48 $MOVE_CARD:  
{"moveIndex":4,"cardId":9,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 19:14:48 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":9,"flipIfFlipped":false,"playerId":2} 

 Player 2 19:14:49 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":9} 

 Player 2 19:14:49 $FLIP_CARD:  
{"cardId":9} 

 Player 2 19:14:49 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":9} 

 Player 2 19:14:49 $DRAW_CARD:  
{"deckType":1} 

 Player 2 19:14:49 $MOVE_CARD:  
{"moveIndex":5,"cardId":68,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 19:14:49 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":68,"flipIfFlipped":false,"playerId":2} 

 Player 2 19:14:49 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":68} 

 Player 2 19:14:49 $FLIP_CARD:  
{"cardId":68} 

 Player 2 19:14:49 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":68} 

 Player 2 19:14:49 $DRAW_CARD:  
{"deckType":1} 

 Player 2 19:14:49 $MOVE_CARD:  
{"moveIndex":6,"cardId":86,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 19:14:50 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":86,"flipIfFlipped":false,"playerId":2} 

 Player 2 19:14:50 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":86} 

 Player 2 19:14:50 $FLIP_CARD:  
{"cardId":86} 

 Player 2 19:14:50 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":86} 

 Player 2 19:14:50 $GAME_HAS_STARTED:  

 Player 2 19:14:50 $SET_TURN:  
{"playerId":1} 

 Player 2 19:14:50 $START_TURN:  
{"playerId":1} 

 Player 2 19:14:50 $UPDATE_ACTIONS:  

 Player 1 19:14:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:14:50 $NEXT_STACK_ID:  

 Player 1 19:14:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:14:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 19:14:50 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":288,"turnPlayerCardId":288,"stackEffectType":13}} 

 Player 1 19:14:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 19:14:50 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":288,"turnPlayerCardId":288,"stackEffectType":13}} 

 Player 1 19:14:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 1 19:14:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:14:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 19:14:50 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":288,"turnPlayerCardId":288,"stackEffectType":13}} 

 Player 1 19:14:50 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 19:14:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 1 19:14:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 1 19:14:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:14:50 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 19:14:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 1 19:14:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:14:50 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:14:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:14:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:14:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:14:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:14:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:14:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:14:51 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:14:51 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 19:14:51 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 19:14:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 1 19:14:51 $DRAW_CARD:  
{"deckType":1} 

 Player 1 19:14:51 $MOVE_CARD:  
{"moveIndex":7,"cardId":60,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 19:14:51 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":60,"flipIfFlipped":false,"playerId":1} 

 Player 1 19:14:51 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":60} 

 Player 1 19:14:51 $FLIP_CARD:  
{"cardId":60} 

 Player 1 19:14:51 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":60} 

 Player 1 19:14:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 19:14:51 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":288,"turnPlayerCardId":288,"stackEffectType":13}} 

 Player 1 19:14:51 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 19:14:51 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:14:51 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":288,"turnPlayerCardId":288,"stackEffectType":13}} 

 Player 1 19:14:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 1 19:14:51 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:14:51 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":288,"turnPlayerCardId":288,"stackEffectType":13}} 

 Player 1 19:14:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 1 19:14:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 1 19:14:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:14:52 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:14:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:14:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:14:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:14:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:14:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:14:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:14:52 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:14:52 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 1 19:14:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 1 19:14:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:14:52 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 1 19:14:52 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 1 19:14:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 1 19:14:52 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:14:52 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 19:14:52 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 19:14:52 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 19:14:52 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 19:14:52 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 19:14:52 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 19:14:52 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 19:14:53 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 19:14:54 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 19:15:11 $MOVE_CARD:  
{"moveIndex":8,"cardId":107,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Hand"} 

 Player 2 19:15:11 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":107,"flipIfFlipped":true,"playerId":1} 

 Player 1 19:15:11 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":107} 

 Player 1 19:15:15 $SHOW_DECISION:  
{"startCardId":288,"endCardId":264} 

 Player 1 19:15:18 $NEXT_STACK_ID:  

 Player 1 19:15:18 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:15:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Pooter"} 

 Player 1 19:15:18 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":288,"attackingPlayerCardId":288,"idOfCardBeingAttacked":264,"stackEffectType":4}} 

 Player 1 19:15:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Pooter"} 

 Player 1 19:15:18 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":288,"attackingPlayerCardId":288,"idOfCardBeingAttacked":264,"stackEffectType":4}} 

 Player 1 19:15:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add DeclareAttack 2 "}} 

 Player 1 19:15:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:15:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Pooter"} 

 Player 1 19:15:18 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":288,"attackingPlayerCardId":288,"idOfCardBeingAttacked":264,"stackEffectType":4}} 

 Player 1 19:15:18 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 19:15:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding DeclareAttack 2"},"childOfId":10} 

 Player 1 19:15:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 1 19:15:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:15:18 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 1 19:15:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 1 19:15:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:15:18 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:15:18 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:15:18 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:15:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Pooter"} 

 Player 2 19:15:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Pooter"} 

 Player 2 19:15:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Pooter"} 

 Player 2 19:15:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Pooter"} 

 Player 2 19:15:19 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:15:19 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 1 19:15:19 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 1 19:15:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve DeclareAttack 2 "}} 

 Player 1 19:15:19 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":264,"particleType":5} 

 Player 1 19:15:19 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":288,"scopeIsPlayer":true,"index":2,"originStackId":2},"isAfterActivation":true,"index":2} 

 Player 1 19:15:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Pooter"} 

 Player 1 19:15:19 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":288,"attackingPlayerCardId":288,"idOfCardBeingAttacked":264,"stackEffectType":4}} 

 Player 1 19:15:19 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 19:15:19 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:15:19 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":288,"attackingPlayerCardId":288,"idOfCardBeingAttacked":264,"stackEffectType":4}} 

 Player 1 19:15:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve DeclareAttack 2  "}} 

 Player 1 19:15:19 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:15:19 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":288,"attackingPlayerCardId":288,"idOfCardBeingAttacked":264,"stackEffectType":4}} 

 Player 1 19:15:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve DeclareAttack 2"},"childOfId":15} 

 Player 1 19:15:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 1 19:15:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:15:19 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:15:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Pooter"} 

 Player 2 19:15:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Pooter"} 

 Player 2 19:15:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Pooter"} 

 Player 2 19:15:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Pooter"} 

 Player 2 19:15:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Pooter"} 

 Player 2 19:15:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Pooter"} 

 Player 2 19:15:19 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:15:19 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 1 19:15:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 1 19:15:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:15:20 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 1 19:15:20 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 1 19:15:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 1 19:15:20 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:15:20 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 19:15:20 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 19:15:20 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 19:15:20 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 19:15:20 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 19:15:20 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 19:15:20 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 19:15:20 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 19:15:20 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 19:15:20 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 19:15:20 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 19:15:20 $NEXT_STACK_ID:  

 Player 1 19:15:20 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:15:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Pooter<Monster>"} 

 Player 1 19:15:20 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":288,"rollingPlayerCardId":288,"stackEffectType":2,"attackedMonsterCardId":264}} 

 Player 1 19:15:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Pooter<Monster>"} 

 Player 1 19:15:20 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":288,"rollingPlayerCardId":288,"stackEffectType":2,"attackedMonsterCardId":264}} 

 Player 1 19:15:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add AttackRoll 3 "}} 

 Player 1 19:15:20 $ROLL_DICE:  
{"playerId":1} 

 Player 2 19:15:20 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:15:20 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:15:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Pooter<Monster>"} 

 Player 2 19:15:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Pooter<Monster>"} 

 Player 1 19:15:21 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 19:15:22 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 19:15:22 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":5} 

 Player 1 19:15:22 $UPDATE_STACK_VIS:  
{"stackId":3,"text":"player rolled 5 vs Pooter<Monster>"} 

 Player 1 19:15:22 $SHOW_DICE_ROLL:  
{"stackId":3} 

 Player 1 19:15:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 5 vs Pooter<Monster>"} 

 Player 1 19:15:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:15:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 5 vs Pooter<Monster>"} 

 Player 1 19:15:25 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":288,"numberRolled":5,"rollingPlayerCardId":288,"stackEffectType":2,"attackedMonsterCardId":264}} 

 Player 1 19:15:25 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 19:15:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding AttackRoll 3"},"childOfId":20} 

 Player 1 19:15:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 1 19:15:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:15:25 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 1 19:15:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 1 19:15:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:15:25 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:15:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Pooter<Monster>"} 

 Player 2 19:15:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Pooter<Monster>"} 

 Player 2 19:15:25 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:15:25 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 1 19:15:25 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 1 19:15:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve AttackRoll 3 "}} 

 Player 1 19:15:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Added 0 to original roll"}} 

 Player 1 19:15:25 $NEXT_STACK_ID:  

 Player 1 19:15:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 5 vs Pooter<Monster>"} 

 Player 1 19:15:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:15:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Eden \n2:Player 1 rolled 5 vs Pooter<Monster>"} 

 Player 1 19:15:25 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":288,"entityToDoDamageCardId":264,"entityToTakeDamageCardId":288,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:15:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Eden \n2:Player 1 rolled 5 vs Pooter<Monster>"} 

 Player 1 19:15:25 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":288,"numberRolled":5,"rollingPlayerCardId":288,"stackEffectType":2,"attackedMonsterCardId":264}} 

 Player 1 19:15:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Eden \n2:Player 1 rolled 5 vs Pooter<Monster>"} 

 Player 1 19:15:26 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":288,"entityToDoDamageCardId":264,"entityToTakeDamageCardId":288,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:15:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Eden \n2:Player 1 rolled 5 vs Pooter<Monster>"} 

 Player 1 19:15:26 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":288,"numberRolled":5,"rollingPlayerCardId":288,"stackEffectType":2,"attackedMonsterCardId":264}} 

 Player 1 19:15:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Eden \n2:Player 1 rolled 5 vs Pooter<Monster>"} 

 Player 1 19:15:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Eden \n2:Player 1 rolled 5 vs Pooter<Monster>"} 

 Player 1 19:15:26 $REPLACE_STACK:  
{"currentStack":[{"entityId":4,"creatorCardId":288,"entityToDoDamageCardId":264,"entityToTakeDamageCardId":288,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":3,"creatorCardId":288,"numberRolled":5,"rollingPlayerCardId":288,"stackEffectType":2,"attackedMonsterCardId":264}]} 

 Player 1 19:15:26 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":288,"scopeIsPlayer":true,"index":3,"originStackId":3},"isAfterActivation":true,"index":3} 

 Player 1 19:15:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Eden \n2:Player 1 rolled 5 vs Pooter<Monster>"} 

 Player 1 19:15:26 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":288,"numberRolled":5,"rollingPlayerCardId":288,"stackEffectType":2,"attackedMonsterCardId":264}} 

 Player 1 19:15:26 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 19:15:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Eden"} 

 Player 1 19:15:26 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":288,"numberRolled":5,"rollingPlayerCardId":288,"stackEffectType":2,"attackedMonsterCardId":264}} 

 Player 1 19:15:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Remove After Resolve AttackRoll 3  "}} 

 Player 1 19:15:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Eden"} 

 Player 1 19:15:26 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":288,"numberRolled":5,"rollingPlayerCardId":288,"stackEffectType":2,"attackedMonsterCardId":264}} 

 Player 1 19:15:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Response Remove After Resolve AttackRoll 3"},"childOfId":26} 

 Player 1 19:15:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 1 "},"childOfId":26} 

 Player 1 19:15:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:15:26 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 1 19:15:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Wait For Response From Player 2 "},"childOfId":26} 

 Player 1 19:15:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:15:26 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:15:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Pooter<Monster>"} 

 Player 2 19:15:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Pooter<Monster>"} 

 Player 2 19:15:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Eden"} 

 Player 2 19:15:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Eden"} 

 Player 2 19:15:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Eden"} 

 Player 2 19:15:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Eden"} 

 Player 2 19:15:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Eden"} 

 Player 2 19:15:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Eden"} 

 Player 2 19:15:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Eden"} 

 Player 2 19:15:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Eden"} 

 Player 2 19:15:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Eden"} 

 Player 2 19:15:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Eden"} 

 Player 2 19:15:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Eden \n2:Player 1 is rolling against Pooter<Monster>"} 

 Player 2 19:15:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Eden \n2:Player 1 is rolling against Pooter<Monster>"} 

 Player 2 19:15:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Eden \n2:Player 1 is rolling against Pooter<Monster>"} 

 Player 2 19:15:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Eden \n2:Player 1 is rolling against Pooter<Monster>"} 

 Player 2 19:15:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Eden \n2:Player 1 is rolling against Pooter<Monster>"} 

 Player 2 19:15:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Eden \n2:Player 1 is rolling against Pooter<Monster>"} 

 Player 2 19:15:27 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:15:27 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 1 19:15:27 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 1 19:15:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Resolve CombatDamage 4 "}} 

 Player 1 19:15:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter 1 combat damage to Eden"} 

 Player 1 19:15:27 $UPDATE_STACK_VIS:  
{"stackId":4,"text":"Pooter will deal 1 combat damage to Eden"} 

 Player 1 19:15:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter 1 combat damage to Eden"} 

 Player 1 19:15:27 $PLAYER_GET_HIT:  
{"playerId":1,"damage":1,"damageDealerId":264} 

 Player 1 19:15:27 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":264}],"result":null,"preventMethod":false,"methodScopeId":288,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 1 19:15:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter 1 combat damage to Eden"} 

 Player 1 19:15:27 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":288,"entityToDoDamageCardId":264,"entityToTakeDamageCardId":288,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:15:27 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 19:15:27 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:15:27 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":288,"entityToDoDamageCardId":264,"entityToTakeDamageCardId":288,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:15:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Remove After Resolve CombatDamage 4  "}} 

 Player 1 19:15:27 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:15:27 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":288,"entityToDoDamageCardId":264,"entityToTakeDamageCardId":288,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:15:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Response Remove After Resolve CombatDamage 4"},"childOfId":31} 

 Player 1 19:15:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 2 "},"childOfId":31} 

 Player 1 19:15:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:15:27 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:15:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Eden"} 

 Player 2 19:15:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Eden"} 

 Player 2 19:15:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Eden"} 

 Player 2 19:15:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Eden"} 

 Player 2 19:15:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Eden"} 

 Player 2 19:15:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Eden"} 

 Player 2 19:15:28 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:15:28 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 1 19:15:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Wait For Response From Player 1 "},"childOfId":31} 

 Player 1 19:15:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:15:28 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 1 19:15:28 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 1 19:15:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Stack Was Emptied "}} 

 Player 1 19:15:28 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:15:28 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 19:15:28 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 19:15:28 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 19:15:28 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 19:15:28 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 19:15:28 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 19:15:28 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 19:15:28 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 19:15:28 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 19:15:28 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 19:15:28 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 19:15:28 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 19:15:28 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 19:15:28 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 19:15:28 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 1 19:15:28 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 19:15:28 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 1 19:15:28 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 1 19:15:28 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 19:15:28 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 1 19:15:29 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 1 19:15:30 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 1 19:15:30 $NEXT_STACK_ID:  

 Player 1 19:15:30 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:15:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Pooter<Monster>"} 

 Player 1 19:15:30 $ADD_TO_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":288,"rollingPlayerCardId":288,"stackEffectType":2,"attackedMonsterCardId":264}} 

 Player 1 19:15:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Pooter<Monster>"} 

 Player 1 19:15:30 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":288,"rollingPlayerCardId":288,"stackEffectType":2,"attackedMonsterCardId":264}} 

 Player 1 19:15:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Add AttackRoll 5 "}} 

 Player 1 19:15:30 $ROLL_DICE:  
{"playerId":1} 

 Player 2 19:15:30 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:15:30 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:15:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Pooter<Monster>"} 

 Player 2 19:15:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Pooter<Monster>"} 

 Player 1 19:15:32 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":3} 

 Player 1 19:15:32 $UPDATE_STACK_VIS:  
{"stackId":5,"text":"player rolled 3 vs Pooter<Monster>"} 

 Player 1 19:15:32 $SHOW_DICE_ROLL:  
{"stackId":5} 

 Player 1 19:15:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 3 vs Pooter<Monster>"} 

 Player 1 19:15:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:15:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 3 vs Pooter<Monster>"} 

 Player 1 19:15:35 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":288,"numberRolled":3,"rollingPlayerCardId":288,"stackEffectType":2,"attackedMonsterCardId":264}} 

 Player 1 19:15:35 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 1 19:15:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Response Adding AttackRoll 5"},"childOfId":36} 

 Player 1 19:15:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 1 "},"childOfId":36} 

 Player 1 19:15:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:15:35 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 1 19:15:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Wait For Response From Player 2 "},"childOfId":36} 

 Player 1 19:15:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:15:35 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:15:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Pooter<Monster>"} 

 Player 2 19:15:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Pooter<Monster>"} 

 Player 2 19:15:35 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:15:35 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 1 19:15:35 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 1 19:15:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Resolve AttackRoll 5 "}} 

 Player 1 19:15:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Added 0 to original roll"}} 

 Player 1 19:15:36 $NEXT_STACK_ID:  

 Player 1 19:15:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 3 vs Pooter<Monster>"} 

 Player 1 19:15:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:15:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Eden \n2:Player 1 rolled 3 vs Pooter<Monster>"} 

 Player 1 19:15:36 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":288,"entityToDoDamageCardId":264,"entityToTakeDamageCardId":288,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:15:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Eden \n2:Player 1 rolled 3 vs Pooter<Monster>"} 

 Player 1 19:15:36 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":288,"numberRolled":3,"rollingPlayerCardId":288,"stackEffectType":2,"attackedMonsterCardId":264}} 

 Player 1 19:15:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Eden \n2:Player 1 rolled 3 vs Pooter<Monster>"} 

 Player 1 19:15:36 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":288,"entityToDoDamageCardId":264,"entityToTakeDamageCardId":288,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:15:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Eden \n2:Player 1 rolled 3 vs Pooter<Monster>"} 

 Player 1 19:15:36 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":288,"numberRolled":3,"rollingPlayerCardId":288,"stackEffectType":2,"attackedMonsterCardId":264}} 

 Player 1 19:15:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Eden \n2:Player 1 rolled 3 vs Pooter<Monster>"} 

 Player 1 19:15:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Eden \n2:Player 1 rolled 3 vs Pooter<Monster>"} 

 Player 1 19:15:36 $REPLACE_STACK:  
{"currentStack":[{"entityId":6,"creatorCardId":288,"entityToDoDamageCardId":264,"entityToTakeDamageCardId":288,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":5,"creatorCardId":288,"numberRolled":3,"rollingPlayerCardId":288,"stackEffectType":2,"attackedMonsterCardId":264}]} 

 Player 1 19:15:36 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":1},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":288,"scopeIsPlayer":true,"index":5,"originStackId":5},"isAfterActivation":true,"index":5} 

 Player 1 19:15:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Eden \n2:Player 1 rolled 3 vs Pooter<Monster>"} 

 Player 1 19:15:36 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":288,"numberRolled":3,"rollingPlayerCardId":288,"stackEffectType":2,"attackedMonsterCardId":264}} 

 Player 1 19:15:36 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 1 19:15:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Eden"} 

 Player 1 19:15:36 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":288,"numberRolled":3,"rollingPlayerCardId":288,"stackEffectType":2,"attackedMonsterCardId":264}} 

 Player 1 19:15:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Remove After Resolve AttackRoll 5  "}} 

 Player 1 19:15:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Eden"} 

 Player 1 19:15:36 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":288,"numberRolled":3,"rollingPlayerCardId":288,"stackEffectType":2,"attackedMonsterCardId":264}} 

 Player 1 19:15:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Response Remove After Resolve AttackRoll 5"},"childOfId":42} 

 Player 1 19:15:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Wait For Response From Player 1 "},"childOfId":42} 

 Player 1 19:15:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:15:36 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 1 19:15:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Wait For Response From Player 2 "},"childOfId":42} 

 Player 1 19:15:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:15:36 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:15:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Pooter<Monster>"} 

 Player 2 19:15:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Pooter<Monster>"} 

 Player 2 19:15:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Eden"} 

 Player 2 19:15:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Eden"} 

 Player 2 19:15:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Eden"} 

 Player 2 19:15:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Eden"} 

 Player 2 19:15:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Eden"} 

 Player 2 19:15:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Eden"} 

 Player 2 19:15:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Eden"} 

 Player 2 19:15:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Eden"} 

 Player 2 19:15:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Eden"} 

 Player 2 19:15:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Eden"} 

 Player 2 19:15:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Eden \n2:Player 1 is rolling against Pooter<Monster>"} 

 Player 2 19:15:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Eden \n2:Player 1 is rolling against Pooter<Monster>"} 

 Player 2 19:15:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Eden \n2:Player 1 is rolling against Pooter<Monster>"} 

 Player 2 19:15:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Eden \n2:Player 1 is rolling against Pooter<Monster>"} 

 Player 2 19:15:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Eden \n2:Player 1 is rolling against Pooter<Monster>"} 

 Player 2 19:15:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Eden \n2:Player 1 is rolling against Pooter<Monster>"} 

 Player 2 19:15:37 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:15:37 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 1 19:15:37 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 1 19:15:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Resolve CombatDamage 6 "}} 

 Player 1 19:15:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter 1 combat damage to Eden"} 

 Player 1 19:15:37 $UPDATE_STACK_VIS:  
{"stackId":6,"text":"Pooter will deal 1 combat damage to Eden"} 

 Player 1 19:15:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter 1 combat damage to Eden"} 

 Player 1 19:15:37 $PLAYER_GET_HIT:  
{"playerId":1,"damage":1,"damageDealerId":264} 

 Player 1 19:15:37 $NEXT_STACK_ID:  

 Player 1 19:15:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter 1 combat damage to Eden"} 

 Player 1 19:15:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:15:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter 1 combat damage to Eden \n2:Player 1 is about to die"} 

 Player 1 19:15:37 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":288,"playerToDieCardId":288,"stackEffectType":15,"killerId":264}} 

 Player 1 19:15:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter 1 combat damage to Eden \n2:Player 1 is about to die"} 

 Player 1 19:15:37 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":288,"entityToDoDamageCardId":264,"entityToTakeDamageCardId":288,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:15:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter 1 combat damage to Eden \n2:Player 1 is about to die"} 

 Player 1 19:15:37 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":288,"entityToDoDamageCardId":264,"entityToTakeDamageCardId":288,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:15:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter 1 combat damage to Eden \n2:Player 1 is about to die"} 

 Player 1 19:15:38 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":288,"playerToDieCardId":288,"stackEffectType":15,"killerId":264}} 

 Player 1 19:15:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter 1 combat damage to Eden \n2:Player 1 is about to die"} 

 Player 1 19:15:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter 1 combat damage to Eden \n2:Player 1 is about to die"} 

 Player 1 19:15:38 $REPLACE_STACK:  
{"currentStack":[{"entityId":6,"creatorCardId":288,"entityToDoDamageCardId":264,"entityToTakeDamageCardId":288,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":7,"creatorCardId":288,"playerToDieCardId":288,"stackEffectType":15,"killerId":264}]} 

 Player 1 19:15:38 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":264}],"result":null,"preventMethod":false,"methodScopeId":288,"scopeIsPlayer":true,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 

 Player 1 19:15:38 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 1 19:15:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 1 19:15:38 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":288,"entityToDoDamageCardId":264,"entityToTakeDamageCardId":288,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:15:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Remove After Resolve CombatDamage 6  "}} 

 Player 1 19:15:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 1 19:15:38 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":288,"entityToDoDamageCardId":264,"entityToTakeDamageCardId":288,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:15:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Response Remove After Resolve CombatDamage 6"},"childOfId":47} 

 Player 1 19:15:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Wait For Response From Player 1 "},"childOfId":47} 

 Player 1 19:15:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:15:38 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 1 19:15:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Wait For Response From Player 2 "},"childOfId":47} 

 Player 1 19:15:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:15:38 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:15:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Eden"} 

 Player 2 19:15:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Eden"} 

 Player 2 19:15:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 19:15:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 19:15:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 19:15:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 19:15:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 19:15:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 19:15:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 19:15:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 19:15:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 19:15:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 19:15:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Eden \n2:Player 1 is about to die"} 

 Player 2 19:15:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Eden \n2:Player 1 is about to die"} 

 Player 2 19:15:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Eden \n2:Player 1 is about to die"} 

 Player 2 19:15:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to Eden \n2:Player 1 is about to die"} 

 Player 2 19:15:39 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:15:39 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 1 19:15:39 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 1 19:15:39 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 1 19:15:39 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 1 19:15:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Resolve PlayerDeath 7 "}} 

 Player 1 19:15:39 $DISABLE_PARTICLE_EFFECT:  
{"cardId":264,"particleType":5} 

 Player 1 19:15:39 $CANCEL_ATTACK:  

 Player 1 19:15:39 $NEXT_STACK_ID:  

 Player 1 19:15:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 1 19:15:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:15:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 19:15:39 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":288,"playerToPayCardId":288,"stackEffectType":16}} 

 Player 1 19:15:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 19:15:39 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":288,"playerToDieCardId":288,"stackEffectType":15,"killerId":264}} 

 Player 1 19:15:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 19:15:39 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":288,"playerToDieCardId":288,"stackEffectType":15,"killerId":264}} 

 Player 1 19:15:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 19:15:39 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":288,"playerToPayCardId":288,"stackEffectType":16}} 

 Player 1 19:15:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 19:15:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 19:15:39 $REPLACE_STACK:  
{"currentStack":[{"entityId":7,"creatorCardId":288,"playerToDieCardId":288,"stackEffectType":15,"killerId":264},{"entityId":8,"creatorCardId":288,"playerToPayCardId":288,"stackEffectType":16}]} 

 Player 1 19:15:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 19:15:39 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":288,"playerToDieCardId":288,"stackEffectType":15,"killerId":264}} 

 Player 1 19:15:39 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 1 19:15:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 1 19:15:39 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":288,"playerToDieCardId":288,"stackEffectType":15,"killerId":264}} 

 Player 1 19:15:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Remove After Resolve PlayerDeath 7  "}} 

 Player 1 19:15:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 1 19:15:39 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":288,"playerToDieCardId":288,"stackEffectType":15,"killerId":264}} 

 Player 1 19:15:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Response Remove After Resolve PlayerDeath 7"},"childOfId":52} 

 Player 1 19:15:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Wait For Response From Player 1 "},"childOfId":52} 

 Player 1 19:15:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:15:40 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 1 19:15:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Wait For Response From Player 2 "},"childOfId":52} 

 Player 1 19:15:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:15:40 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:15:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 19:15:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 19:15:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 19:15:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 19:15:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 19:15:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 19:15:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 19:15:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 19:15:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 19:15:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 19:15:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 19:15:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 19:15:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 2 19:15:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 2 19:15:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 2 19:15:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 2 19:15:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 2 19:15:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 2 19:15:40 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:15:40 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 1 19:15:40 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 1 19:15:40 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 1 19:15:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":56,"_text":"Resolve PlayerDeathPenalties 8 "}} 

 Player 1 19:15:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":57,"_text":"Player 1 pays Penalties"}} 

 Player 1 19:15:40 $SET_MONEY:  
{"playerId":1,"numOfCoins":2} 

 Player 1 19:15:40 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-1}],"result":null,"preventMethod":false,"methodScopeId":288,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 

 Player 1 19:15:42 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 2 19:16:14 $MATCH: 