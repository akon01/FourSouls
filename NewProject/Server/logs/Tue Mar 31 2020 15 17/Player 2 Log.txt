Start Log 
 Player 2 15:17:41 $MOVE_TO_TABLE:  
 Player 2 15:17:51 $FINISH_LOAD:  

 {"id":2,"turnPlayerId":2} 
 Player 2 15:17:52 $SET_CHAR:  

 {"originPlayerId":2,"playerId":1,"charCardId":324,"itemCardId":325} 
 Player 2 15:17:52 $ASSIGN_CHAR_TO_PLAYER:  

 {"playerId":2,"charCardId":310,"itemCardId":311} 
 Player 2 15:17:52 $DECK_ARRAGMENT:  

 {"deckType":1,"arrangement":[119,77,63,136,122,49,69,85,98,66,121,139,26,21,74,89,40,87,128,75,25,125,48,127,27,70,16,52,106,137,24,10,62,90,81,43,93,45,109,67,53,82,20,115,101,105,118,11,108,44,124,76,138,23,33,6,84,34,41,133,78,7,130,17,129,103,99,73,131,13,112,15,116,36,31,64,91,55,35,110,56,107,71,60,46,135,111,8,88,42,39,51,100,57,18,28,38,59,132,80,72,14,19,134,65,9,140,32,95,68,50,12,86,29,113,141,61,126,120,104,30,97,102,123,37,58,83,96,114,47,94,117,79,54,92,22]} 
 Player 2 15:17:52 $DECK_ARRAGMENT:  

 {"deckType":2,"arrangement":[246,231,309,243,229,289,232,228,259,298,253,303,283,297,239,264,233,262,238,240,291,250,248,261,287,266,242,307,267,271,247,282,256,296,284,230,299,249,263,252,265,245,306,302,270,237,227,273,300,255,292,258,286,251,269,272,308,281,236,275,260,305,279,278,277,274,257,276,254,285,241,280,224,288,290,295,293,226,234,244,294,301,225,268,304,235]} 
 Player 2 15:17:52 $DECK_ARRAGMENT:  

 {"deckType":5,"arrangement":[178,218,173,208,203,165,216,221,146,190,175,197,212,206,186,202,156,196,217,192,176,147,172,167,177,189,143,180,220,191,152,184,181,219,205,154,194,159,150,163,164,166,182,170,168,215,179,198,195,214,209,199,188,155,213,201,200,210,211,151,222,204,153,207,174,162,169,187,158,185,149,183,144,145,157,193,160,171,161,148]} 
 Player 2 15:17:52 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 15:17:52 $FLIP_CARD:  

 {"cardId":148} 
 Player 2 15:17:52 $ADD_STORE_CARD:  

 {"cardId":148} 
 Player 2 15:17:52 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 15:17:52 $FLIP_CARD:  

 {"cardId":161} 
 Player 2 15:17:52 $ADD_STORE_CARD:  

 {"cardId":161} 
 Player 2 15:17:52 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 15:17:52 $DECK_ADD_TO_BOTTOM:  

 {"deckType":2,"cardId":235} 
 Player 2 15:17:52 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 15:17:52 $FLIP_CARD:  

 {"cardId":304} 
 Player 2 15:17:52 $ADD_MONSTER:  

 {"monsterPlaceId":1,"monsterId":304} 
 Player 2 15:17:52 $NEW_MONSTER_ON_PLACE:  

 {"cardId":304,"monsterPlaceId":1} 
 Player 2 15:17:53 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 15:17:53 $FLIP_CARD:  

 {"cardId":268} 
 Player 2 15:17:53 $REGISTER_PASSIVE_ITEM:  

 {"cardId":268} 
 Player 2 15:17:53 $ADD_MONSTER:  

 {"monsterPlaceId":2,"monsterId":268} 
 Player 2 15:17:53 $NEW_MONSTER_ON_PLACE:  

 {"cardId":268,"monsterPlaceId":2} 
 Player 2 15:17:53 $SET_MONEY:  

 {"playerId":1,"numOfCoins":3} 
 Player 2 15:17:53 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":324,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 15:17:53 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 15:17:53 $MOVE_CARD:  

 {"moveIndex":1,"cardId":22,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 15:17:53 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":22} 
 Player 2 15:17:53 $FLIP_CARD:  

 {"cardId":22} 
 Player 2 15:17:53 $FLIP_CARD:  

 {"cardId":22} 
 Player 2 15:17:53 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":22} 
 Player 2 15:17:53 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 15:17:53 $MOVE_CARD:  

 {"moveIndex":2,"cardId":92,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 15:17:54 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":92} 
 Player 2 15:17:54 $FLIP_CARD:  

 {"cardId":92} 
 Player 2 15:17:54 $FLIP_CARD:  

 {"cardId":92} 
 Player 2 15:17:54 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":92} 
 Player 2 15:17:54 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 15:17:54 $MOVE_CARD:  

 {"moveIndex":3,"cardId":54,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 15:17:54 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":54} 
 Player 2 15:17:55 $FLIP_CARD:  

 {"cardId":54} 
 Player 2 15:17:55 $FLIP_CARD:  

 {"cardId":54} 
 Player 2 15:17:55 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":54} 
 Player 2 15:17:55 $SET_MONEY:  

 {"playerId":2,"numOfCoins":3} 
 Player 2 15:17:55 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":310,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 2 15:17:55 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 15:17:55 $MOVE_CARD:  

 {"moveIndex":4,"cardId":79,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 15:17:55 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":79} 
 Player 2 15:17:55 $FLIP_CARD:  

 {"cardId":79} 
 Player 2 15:17:55 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":79} 
 Player 2 15:17:55 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 15:17:55 $MOVE_CARD:  

 {"moveIndex":5,"cardId":117,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 15:17:56 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":117} 
 Player 2 15:17:56 $FLIP_CARD:  

 {"cardId":117} 
 Player 2 15:17:56 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":117} 
 Player 2 15:17:56 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 15:17:56 $MOVE_CARD:  

 {"moveIndex":6,"cardId":94,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 15:17:56 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":94} 
 Player 2 15:17:56 $FLIP_CARD:  

 {"cardId":94} 
 Player 2 15:17:56 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":94} 
 Player 2 15:17:56 $GAME_HAS_STARTED:  
 Player 2 15:17:57 $SET_TURN:  

 {"playerId":2} 
 Player 2 15:17:57 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 15:17:57 $NEXT_STACK_ID:  
 Player 2 15:17:57 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 15:17:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 15:17:57 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":310,"turnPlayerCardId":310,"stackEffectType":13}} 
 Player 2 15:17:57 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":1,"creatorCardId":310,"turnPlayerCardId":310,"stackEffectType":13}} 
 Player 2 15:17:57 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 15:17:57 $SHOW_STACK_EFFECT:  

 {"effectId":1} 
 Player 2 15:17:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 
 Player 2 15:17:59 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 15:18:00 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":310,"turnPlayerCardId":310,"stackEffectType":13}} 
 Player 2 15:18:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 
 Player 2 15:18:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 2 15:18:00 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 15:18:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 2 15:18:00 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 15:18:00 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 15:18:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 
 Player 2 15:18:00 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":310,"turnPlayerCardId":310,"stackEffectType":13}} 
 Player 2 15:18:00 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 15:18:00 $MOVE_CARD:  

 {"moveIndex":7,"cardId":47,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 15:18:00 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":47} 
 Player 2 15:18:01 $FLIP_CARD:  

 {"cardId":47} 
 Player 2 15:18:01 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":47} 
 Player 2 15:18:01 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":310,"turnPlayerCardId":310,"stackEffectType":13}} 
 Player 2 15:18:01 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":1} 
 Player 2 15:18:01 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 15:18:01 $SHOW_STACK_EFFECT:  

 {"effectId":1} 
 Player 2 15:18:03 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":1} 
 Player 2 15:18:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 
 Player 2 15:18:04 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 15:18:04 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":310,"turnPlayerCardId":310,"stackEffectType":13}} 
 Player 2 15:18:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 
 Player 2 15:18:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Player 2 15:18:04 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 15:18:04 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 15:18:04 $ACTION_MASSAGE_REMOVE:  

 {"id":7} 
 Player 2 15:18:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Player 2 15:18:04 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 15:18:04 $ACTION_MASSAGE_REMOVE:  

 {"id":8} 
 Player 2 15:18:04 $ACTION_MASSAGE_REMOVE:  

 {"id":6} 
 Player 2 15:18:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":9,"_text":"Stack Was Emptied "}} 
 Player 2 15:18:04 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 15:18:04 $CLEAR_SE_VIS:  
 Player 2 15:18:04 $UPDATE_ACTIONS:  
 Player 2 15:18:25 $NEXT_STACK_ID:  
 Player 2 15:18:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Charged Penny "} 
 Player 2 15:18:25 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":310,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":94,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 2 15:18:25 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":2,"creatorCardId":310,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":94,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 2 15:18:25 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 15:18:25 $SHOW_STACK_EFFECT:  

 {"effectId":2} 
 Player 2 15:18:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":10,"_text":"Add PlayLootCardStackEffect 2 "}} 
 Player 2 15:18:28 $PLAYER_LOSE_LOOT:  

 {"playerId":2,"cardId":94} 
 Player 2 15:18:28 $MOVE_CARD:  

 {"moveIndex":8,"cardId":94,"placeID":328,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 15:18:28 $MOVE_CARD_TO_PILE:  

 {"type":7,"cardId":94} 
 Player 2 15:18:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Charged Penny: ChainEffects"} 
 Player 2 15:18:29 $LOG_ERROR:  

 {"message":"\"No Cards To Choose From!\"","stack":"\"Error: No Cards To Choose From!\\n    at ChooseCard.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/DataCollector/ChooseCard.js:102:35)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113111:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113055:18)\\n    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113033:71\\n    at new Promise (<anonymous>)\\n    at 486.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113013:14)\\n    at ChooseCard.collectData (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/DataCollector/ChooseCard.js:65:16)\\n    at CardEffect.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/CardEffect.js:342:60)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113111:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113055:18)\""} 
 Player 2 15:18:29 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 15:18:29 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":310,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":94,"lootPlayerId":2,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":94,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 15:18:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":11,"_text":"Response Adding PlayLootCardStackEffect 2"},"childOfId":10} 
 Player 2 15:18:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 
 Player 2 15:18:29 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 15:18:29 $ACTION_MASSAGE_REMOVE:  

 {"id":12} 
 Player 2 15:18:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 
 Player 2 15:18:29 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 15:18:29 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 15:18:29 $ACTION_MASSAGE_REMOVE:  

 {"id":13} 
 Player 2 15:18:29 $ACTION_MASSAGE_REMOVE:  

 {"id":11} 
 Player 2 15:18:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":14,"_text":"Resolve PlayLootCardStackEffect 2 "}} 
 Player 2 15:18:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Charged Penny: ChainEffects"} 
 Player 2 15:18:29 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":310,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":94,"lootPlayerId":2,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":94,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 15:18:29 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":94,"particleType":6} 
 Player 2 15:18:31 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":94,"particleType":6} 
 Player 2 15:18:31 $SET_MONEY:  

 {"playerId":2,"numOfCoins":4} 
 Player 2 15:18:31 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":1}],"result":null,"preventMethod":false,"methodScopeId":310,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Player 2 15:18:31 $REMOVE_FROM_PILE:  

 {"cardId":94} 
 Player 2 15:18:31 $MOVE_CARD:  

 {"moveIndex":9,"cardId":94,"placeID":329,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 15:18:32 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":94} 
 Player 2 15:18:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Charged Penny: ChainEffects"} 
 Player 2 15:18:32 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":310,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":94,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 15:18:32 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":2} 
 Player 2 15:18:32 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 15:18:32 $SHOW_STACK_EFFECT:  

 {"effectId":2} 
 Player 2 15:18:35 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":2} 
 Player 2 15:18:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":15,"_text":"Remove After Resolve PlayLootCardStackEffect 2  "}} 
 Player 2 15:18:35 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 15:18:35 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":310,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":94,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 15:18:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":16,"_text":"Response Remove After Resolve PlayLootCardStackEffect 2"},"childOfId":15} 
 Player 2 15:18:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 
 Player 2 15:18:35 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 15:18:35 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 15:18:35 $ACTION_MASSAGE_REMOVE:  

 {"id":17} 
 Player 2 15:18:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 
 Player 2 15:18:35 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 15:18:35 $ACTION_MASSAGE_REMOVE:  

 {"id":18} 
 Player 2 15:18:35 $ACTION_MASSAGE_REMOVE:  

 {"id":16} 
 Player 2 15:18:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":19,"_text":"Stack Was Emptied "}} 
 Player 2 15:18:35 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 15:18:35 $CLEAR_SE_VIS: 