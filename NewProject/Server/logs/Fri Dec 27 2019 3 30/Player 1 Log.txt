Start Log 
 Player 1 03:30:57 $START_GAME:  
 Player 1 03:30:57 $MOVE_TO_TABLE:  
 Player 1 03:31:01 $FINISH_LOAD:  
 {"id":1,"turnPlayerId":2} 
 Player 1 03:31:03 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":261}],"result":true,"preventMethod":false,"methodScopeId":260,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 1 03:31:04 $MOVE_CARD_END:  
 {"moveIndex":1,"cardId":57,"flipIfFlipped":false,"playerId":2} 
 Player 1 03:31:04 $MOVE_CARD_END:  
 {"moveIndex":2,"cardId":30,"flipIfFlipped":false,"playerId":2} 
 Player 1 03:31:05 $MOVE_CARD_END:  
 {"moveIndex":3,"cardId":74,"flipIfFlipped":false,"playerId":2} 
 Player 1 03:31:05 $MOVE_CARD_END:  
 {"moveIndex":4,"cardId":78,"flipIfFlipped":false,"playerId":2} 
 Player 1 03:31:06 $MOVE_CARD_END:  
 {"moveIndex":5,"cardId":39,"flipIfFlipped":false,"playerId":2} 
 Player 1 03:31:06 $MOVE_CARD_END:  
 {"moveIndex":6,"cardId":10,"flipIfFlipped":false,"playerId":2} 
 Player 1 03:31:06 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:31:07 $NEXT_STACK_ID:  
 Player 1 03:31:07 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:31:07 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 03:31:07 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":1,"creatorCardId":260,"turnPlayerCardId":260,"stackEffectType":13}} 
 Player 1 03:31:07 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 
 Player 1 03:31:07 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:31:07 $ACTION_MASSAGE_REMOVE:  
 {"id":0} 
 Player 1 03:31:07 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 03:31:07 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":1,"creatorCardId":260,"turnPlayerCardId":260,"stackEffectType":13}} 
 Player 1 03:31:07 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 
 Player 1 03:31:07 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 1 03:31:07 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:31:07 $ACTION_MASSAGE_REMOVE:  
 {"id":2} 
 Player 1 03:31:07 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 1 03:31:07 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:31:07 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:31:07 $ACTION_MASSAGE_REMOVE:  
 {"id":3} 
 Player 1 03:31:07 $ACTION_MASSAGE_REMOVE:  
 {"id":1} 
 Player 1 03:31:07 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 
 Player 1 03:31:07 $DRAW_CARD:  
 {"deckType":1} 
 Player 1 03:31:07 $MOVE_CARD:  
 {"moveIndex":7,"cardId":69,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 1 03:31:08 $CARD_DRAWN:  
 {"playerId":1,"deckType":1,"drawnCardId":69} 
 Player 1 03:31:08 $FLIP_CARD:  
 {"cardId":69} 
 Player 1 03:31:08 $PLAYER_GET_LOOT:  
 {"playerId":1,"cardId":69} 
 Player 1 03:31:08 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 03:31:08 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":1,"creatorCardId":260,"turnPlayerCardId":260,"stackEffectType":13}} 
 Player 1 03:31:08 $ACTION_MASSAGE_REMOVE:  
 {"id":4} 
 Player 1 03:31:08 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 
 Player 1 03:31:08 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:31:08 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":1,"creatorCardId":260,"turnPlayerCardId":260,"stackEffectType":13}} 
 Player 1 03:31:08 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 
 Player 1 03:31:08 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Player 1 03:31:08 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:31:08 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:31:08 $ACTION_MASSAGE_REMOVE:  
 {"id":7} 
 Player 1 03:31:08 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Player 1 03:31:08 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:31:08 $ACTION_MASSAGE_REMOVE:  
 {"id":8} 
 Player 1 03:31:08 $ACTION_MASSAGE_REMOVE:  
 {"id":6} 
 Player 1 03:31:08 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":9,"_text":"Stack Was Emptied "}} 
 Player 1 03:31:08 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:31:08 $ACTION_MASSAGE_REMOVE:  
 {"id":5} 
 Player 1 03:31:10 $ACTION_MASSAGE_REMOVE:  
 {"id":9} 
 Player 1 03:31:11 $ACTION_MASSAGE_REMOVE:  
 {"id":5} 
 Player 1 03:31:21 $NEXT_STACK_ID:  
 Player 1 03:31:21 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:31:21 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play 4 Cents(9) "} 
 Player 1 03:31:21 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":2,"creatorCardId":260,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":69,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 1 03:31:21 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":10,"_text":"Add PlayLootCardStackEffect 2 "}} 
 Player 1 03:31:21 $PLAYER_LOSE_LOOT:  
 {"playerId":1,"cardId":69} 
 Player 1 03:31:21 $MOVE_CARD:  
 {"moveIndex":8,"cardId":69,"placeID":278,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 03:31:22 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play 4 Cents(9): addMoney"} 
 Player 1 03:31:22 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play 4 Cents(9): addMoney"} 
 Player 1 03:31:22 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:31:22 $ACTION_MASSAGE_REMOVE:  
 {"id":10} 
 Player 1 03:31:22 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play 4 Cents(9): addMoney"} 
 Player 1 03:31:22 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":2,"creatorCardId":260,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":69,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":69,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 03:31:22 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":11,"_text":"Response Adding PlayLootCardStackEffect 2"},"childOfId":10} 
 Player 1 03:31:22 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 
 Player 1 03:31:22 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:31:22 $ACTION_MASSAGE_REMOVE:  
 {"id":12} 
 Player 1 03:31:22 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 
 Player 1 03:31:22 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:31:22 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:31:22 $ACTION_MASSAGE_REMOVE:  
 {"id":13} 
 Player 1 03:31:22 $ACTION_MASSAGE_REMOVE:  
 {"id":11} 
 Player 1 03:31:22 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":14,"_text":"Resolve PlayLootCardStackEffect 2 "}} 
 Player 1 03:31:22 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play 4 Cents(9): addMoney"} 
 Player 1 03:31:22 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":69,"particleType":6} 
 Player 1 03:31:24 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":69,"particleType":6} 
 Player 1 03:31:24 $CHANGE_MONEY:  
 {"playerId":1,"numOfCoins":4} 
 Player 1 03:31:24 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":260,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 1 03:31:24 $MOVE_CARD:  
 {"moveIndex":9,"cardId":69,"placeID":279,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 03:31:25 $MOVE_CARD_TO_PILE:  
 {"type":1,"cardId":69} 
 Player 1 03:31:25 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play 4 Cents(9): addMoney"} 
 Player 1 03:31:25 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":2,"creatorCardId":260,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":69,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 03:31:25 $ACTION_MASSAGE_REMOVE:  
 {"id":14} 
 Player 1 03:31:25 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":15,"_text":"Remove After Resolve PlayLootCardStackEffect 2  "}} 
 Player 1 03:31:25 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:31:25 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":2,"creatorCardId":260,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":69,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 03:31:25 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":16,"_text":"Response Remove After Resolve PlayLootCardStackEffect 2"},"childOfId":15} 
 Player 1 03:31:25 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 
 Player 1 03:31:25 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:31:25 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:31:27 $ACTION_MASSAGE_REMOVE:  
 {"id":17} 
 Player 1 03:31:27 $ACTION_MASSAGE_REMOVE:  
 {"id":16} 
 Player 1 03:31:27 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:31:27 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:31:28 $ACTION_MASSAGE_REMOVE:  
 {"id":15} 
 Player 1 03:31:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated The Lost"} 
 Player 1 03:31:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated The Lost"} 
 Player 1 03:31:29 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:31:35 $MOVE_CARD_END:  
 {"moveIndex":10,"cardId":78,"flipIfFlipped":true,"playerId":2} 
 Player 1 03:31:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated The Lost"} 
 Player 1 03:31:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated The Lost"} 
 Player 1 03:31:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play A Dime(4) "} 
 Player 1 03:31:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play A Dime(4) "} 
 Player 1 03:31:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play A Dime(4) "} 
 Player 1 03:31:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play A Dime(4) "} 
 Player 1 03:31:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play A Dime(4)  \n2:Player 2 activated The Lost"} 
 Player 1 03:31:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play A Dime(4)  \n2:Player 2 activated The Lost"} 
 Player 1 03:31:36 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play A Dime(4)  \n2:Player 2 activated The Lost"} 
 Player 1 03:31:36 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play A Dime(4)  \n2:Player 2 activated The Lost"} 
 Player 1 03:31:36 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:31:38 $MOVE_CARD_END:  
 {"moveIndex":11,"cardId":78,"flipIfFlipped":true,"playerId":2} 
 Player 1 03:31:39 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play A Dime(4) "} 
 Player 1 03:31:39 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play A Dime(4) "} 
 Player 1 03:31:39 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play A Dime(4) "} 
 Player 1 03:31:39 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play A Dime(4) "} 
 Player 1 03:31:39 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:31:50 $NEXT_STACK_ID:  
 Player 1 03:31:50 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:31:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1  declared attack on Pooter"} 
 Player 1 03:31:50 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":5,"creatorCardId":260,"attackingPlayerCardId":260,"idOfCardBeingAttacked":242,"stackEffectType":4}} 
 Player 1 03:31:50 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":18,"_text":"Add DeclareAttack 5 "}} 
 Player 1 03:31:50 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:31:50 $ACTION_MASSAGE_REMOVE:  
 {"id":18} 
 Player 1 03:31:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1  declared attack on Pooter"} 
 Player 1 03:31:50 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":5,"creatorCardId":260,"attackingPlayerCardId":260,"idOfCardBeingAttacked":242,"stackEffectType":4}} 
 Player 1 03:31:50 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":19,"_text":"Response Adding DeclareAttack 5"},"childOfId":18} 
 Player 1 03:31:50 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":20,"_text":"Wait For Response From Player 1 "},"childOfId":18} 
 Player 1 03:31:50 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:31:50 $ACTION_MASSAGE_REMOVE:  
 {"id":20} 
 Player 1 03:31:50 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":21,"_text":"Wait For Response From Player 2 "},"childOfId":18} 
 Player 1 03:31:50 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:31:50 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:31:50 $ACTION_MASSAGE_REMOVE:  
 {"id":21} 
 Player 1 03:31:50 $ACTION_MASSAGE_REMOVE:  
 {"id":19} 
 Player 1 03:31:50 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":22,"_text":"Resolve DeclareAttack 5 "}} 
 Player 1 03:31:50 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":242,"particleType":5} 
 Player 1 03:31:50 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":260,"scopeIsPlayer":true,"index":3,"originStackId":5},"isAfterActivation":true,"index":3} 
 Player 1 03:31:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1  declared attack on Pooter"} 
 Player 1 03:31:50 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":5,"creatorCardId":260,"attackingPlayerCardId":260,"idOfCardBeingAttacked":242,"stackEffectType":4}} 
 Player 1 03:31:50 $ACTION_MASSAGE_REMOVE:  
 {"id":22} 
 Player 1 03:31:50 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":23,"_text":"Remove After Resolve DeclareAttack 5  "}} 
 Player 1 03:31:50 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:31:50 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":5,"creatorCardId":260,"attackingPlayerCardId":260,"idOfCardBeingAttacked":242,"stackEffectType":4}} 
 Player 1 03:31:50 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":24,"_text":"Response Remove After Resolve DeclareAttack 5"},"childOfId":23} 
 Player 1 03:31:50 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":25,"_text":"Wait For Response From Player 2 "},"childOfId":23} 
 Player 1 03:31:50 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:31:50 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:31:51 $ACTION_MASSAGE_REMOVE:  
 {"id":25} 
 Player 1 03:31:51 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":26,"_text":"Wait For Response From Player 1 "},"childOfId":23} 
 Player 1 03:31:51 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:31:51 $ACTION_MASSAGE_REMOVE:  
 {"id":26} 
 Player 1 03:31:51 $ACTION_MASSAGE_REMOVE:  
 {"id":24} 
 Player 1 03:31:51 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":27,"_text":"Stack Was Emptied "}} 
 Player 1 03:31:51 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:31:51 $ACTION_MASSAGE_REMOVE:  
 {"id":23} 
 Player 1 03:31:52 $ACTION_MASSAGE_REMOVE:  
 {"id":27} 
 Player 1 03:31:53 $ACTION_MASSAGE_REMOVE:  
 {"id":23} 
 Player 1 03:31:55 $NEXT_STACK_ID:  
 Player 1 03:31:55 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:31:55 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Pooter<Monster>"} 
 Player 1 03:31:55 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":6,"creatorCardId":260,"rollingPlayerCardId":260,"stackEffectType":2,"attackedMonsterCardId":242}} 
 Player 1 03:31:55 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":28,"_text":"Add AttackRoll 6 "}} 
 Player 1 03:31:55 $ROLL_DICE:  
 {"playerId":1} 
 Player 1 03:31:56 $ROLL_DICE_ENDED:  
 {"playerId":1,"numberRolled":3} 
 Player 1 03:31:56 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 3 vs Pooter<Monster>"} 
 Player 1 03:31:56 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:31:56 $ACTION_MASSAGE_REMOVE:  
 {"id":28} 
 Player 1 03:31:56 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 3 vs Pooter<Monster>"} 
 Player 1 03:31:56 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":6,"creatorCardId":260,"numberRolled":3,"rollingPlayerCardId":260,"stackEffectType":2,"attackedMonsterCardId":242}} 
 Player 1 03:31:56 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":29,"_text":"Response Adding AttackRoll 6"},"childOfId":28} 
 Player 1 03:31:56 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":30,"_text":"Wait For Response From Player 1 "},"childOfId":28} 
 Player 1 03:31:56 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:32:07 $ACTION_MASSAGE_REMOVE:  
 {"id":30} 
 Player 1 03:32:07 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":31,"_text":"Wait For Response From Player 2 "},"childOfId":28} 
 Player 1 03:32:07 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:32:07 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:32:07 $ACTION_MASSAGE_REMOVE:  
 {"id":31} 
 Player 1 03:32:08 $ACTION_MASSAGE_REMOVE:  
 {"id":29} 
 Player 1 03:32:08 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":32,"_text":"Resolve AttackRoll 6 "}} 
 Player 1 03:32:08 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":33,"_text":"Added 0 to original roll"}} 
 Player 1 03:32:08 $NEXT_STACK_ID:  
 Player 1 03:32:08 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 3 vs Pooter<Monster>"} 
 Player 1 03:32:08 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:32:08 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Pooter \n2:Player 1 rolled 3 vs Pooter<Monster>"} 
 Player 1 03:32:08 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":7,"creatorCardId":260,"entityToDoDamageCardId":260,"entityToTakeDamageCardId":242,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 03:32:08 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Pooter \n2:Player 1 rolled 3 vs Pooter<Monster>"} 
 Player 1 03:32:08 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Pooter \n2:Player 1 rolled 3 vs Pooter<Monster>"} 
 Player 1 03:32:08 $REPLACE_STACK:  
 {"currentStack":[{"entityId":7,"creatorCardId":260,"entityToDoDamageCardId":260,"entityToTakeDamageCardId":242,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":6,"creatorCardId":260,"numberRolled":3,"rollingPlayerCardId":260,"stackEffectType":2,"attackedMonsterCardId":242}]} 
 Player 1 03:32:08 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":3},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":260,"scopeIsPlayer":true,"index":4,"originStackId":6},"isAfterActivation":true,"index":4} 
 Player 1 03:32:08 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Pooter \n2:Player 1 rolled 3 vs Pooter<Monster>"} 
 Player 1 03:32:08 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":6,"creatorCardId":260,"numberRolled":3,"rollingPlayerCardId":260,"stackEffectType":2,"attackedMonsterCardId":242}} 
 Player 1 03:32:08 $ACTION_MASSAGE_REMOVE:  
 {"id":32} 
 Player 1 03:32:08 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":34,"_text":"Remove After Resolve AttackRoll 6  "}} 
 Player 1 03:32:08 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Pooter"} 
 Player 1 03:32:08 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":6,"creatorCardId":260,"numberRolled":3,"rollingPlayerCardId":260,"stackEffectType":2,"attackedMonsterCardId":242}} 
 Player 1 03:32:08 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":35,"_text":"Response Remove After Resolve AttackRoll 6"},"childOfId":34} 
 Player 1 03:32:08 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":36,"_text":"Wait For Response From Player 1 "},"childOfId":34} 
 Player 1 03:32:08 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:32:10 $ACTION_MASSAGE_REMOVE:  
 {"id":36} 
 Player 1 03:32:10 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":37,"_text":"Wait For Response From Player 2 "},"childOfId":34} 
 Player 1 03:32:10 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:32:11 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:32:11 $ACTION_MASSAGE_REMOVE:  
 {"id":37} 
 Player 1 03:32:11 $ACTION_MASSAGE_REMOVE:  
 {"id":35} 
 Player 1 03:32:11 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":38,"_text":"Resolve CombatDamage 7 "}} 
 Player 1 03:32:11 $MONSTER_GET_DAMAGED:  
 {"cardId":242,"hpLeft":1,"damageDealerId":260} 
 Player 1 03:32:11 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":260}],"result":null,"preventMethod":false,"methodScopeId":242,"scopeIsPlayer":false,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 
 Player 1 03:32:11 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":3},{"type":0,"number":260},{"type":0,"number":242}],"result":null,"preventMethod":false,"methodScopeId":260,"scopeIsPlayer":true,"index":6,"originStackId":7},"isAfterActivation":true,"index":6} 
 Player 1 03:32:11 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Pooter"} 
 Player 1 03:32:11 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":7,"creatorCardId":260,"entityToDoDamageCardId":260,"entityToTakeDamageCardId":242,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 03:32:11 $ACTION_MASSAGE_REMOVE:  
 {"id":38} 
 Player 1 03:32:11 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":39,"_text":"Remove After Resolve CombatDamage 7  "}} 
 Player 1 03:32:11 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:32:11 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":7,"creatorCardId":260,"entityToDoDamageCardId":260,"entityToTakeDamageCardId":242,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 03:32:11 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":40,"_text":"Response Remove After Resolve CombatDamage 7"},"childOfId":39} 
 Player 1 03:32:11 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":41,"_text":"Wait For Response From Player 2 "},"childOfId":39} 
 Player 1 03:32:11 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:32:11 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:32:11 $ACTION_MASSAGE_REMOVE:  
 {"id":33} 
 Player 1 03:32:11 $ACTION_MASSAGE_REMOVE:  
 {"id":34} 
 Player 1 03:32:11 $ACTION_MASSAGE_REMOVE:  
 {"id":41} 
 Player 1 03:32:11 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":42,"_text":"Wait For Response From Player 1 "},"childOfId":39} 
 Player 1 03:32:11 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:32:11 $ACTION_MASSAGE_REMOVE:  
 {"id":42} 
 Player 1 03:32:11 $ACTION_MASSAGE_REMOVE:  
 {"id":40} 
 Player 1 03:32:11 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":43,"_text":"Stack Was Emptied "}} 
 Player 1 03:32:11 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:32:12 $ACTION_MASSAGE_REMOVE:  
 {"id":32} 
 Player 1 03:32:12 $NEXT_STACK_ID:  
 Player 1 03:32:12 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:32:12 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Pooter<Monster>"} 
 Player 1 03:32:12 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":8,"creatorCardId":260,"rollingPlayerCardId":260,"stackEffectType":2,"attackedMonsterCardId":242}} 
 Player 1 03:32:12 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":44,"_text":"Add AttackRoll 8 "}} 
 Player 1 03:32:12 $ROLL_DICE:  
 {"playerId":1} 
 Player 1 03:32:13 $ACTION_MASSAGE_REMOVE:  
 {"id":43} 
 Player 1 03:32:14 $ACTION_MASSAGE_REMOVE:  
 {"id":39} 
 Player 1 03:32:14 $ROLL_DICE_ENDED:  
 {"playerId":1,"numberRolled":6} 
 Player 1 03:32:14 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 6 vs Pooter<Monster>"} 
 Player 1 03:32:14 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:32:14 $ACTION_MASSAGE_REMOVE:  
 {"id":44} 
 Player 1 03:32:14 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 6 vs Pooter<Monster>"} 
 Player 1 03:32:14 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":8,"creatorCardId":260,"numberRolled":6,"rollingPlayerCardId":260,"stackEffectType":2,"attackedMonsterCardId":242}} 
 Player 1 03:32:14 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":45,"_text":"Response Adding AttackRoll 8"},"childOfId":44} 
 Player 1 03:32:14 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":46,"_text":"Wait For Response From Player 1 "},"childOfId":44} 
 Player 1 03:32:14 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:32:14 $ACTION_MASSAGE_REMOVE:  
 {"id":46} 
 Player 1 03:32:14 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":47,"_text":"Wait For Response From Player 2 "},"childOfId":44} 
 Player 1 03:32:15 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:32:15 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:32:15 $ACTION_MASSAGE_REMOVE:  
 {"id":47} 
 Player 1 03:32:15 $ACTION_MASSAGE_REMOVE:  
 {"id":45} 
 Player 1 03:32:15 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":48,"_text":"Resolve AttackRoll 8 "}} 
 Player 1 03:32:15 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":49,"_text":"Added 0 to original roll"}} 
 Player 1 03:32:15 $NEXT_STACK_ID:  
 Player 1 03:32:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 6 vs Pooter<Monster>"} 
 Player 1 03:32:15 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:32:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Pooter \n2:Player 1 rolled 6 vs Pooter<Monster>"} 
 Player 1 03:32:15 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":9,"creatorCardId":260,"entityToDoDamageCardId":260,"entityToTakeDamageCardId":242,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 03:32:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Pooter \n2:Player 1 rolled 6 vs Pooter<Monster>"} 
 Player 1 03:32:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Pooter \n2:Player 1 rolled 6 vs Pooter<Monster>"} 
 Player 1 03:32:15 $REPLACE_STACK:  
 {"currentStack":[{"entityId":9,"creatorCardId":260,"entityToDoDamageCardId":260,"entityToTakeDamageCardId":242,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":8,"creatorCardId":260,"numberRolled":6,"rollingPlayerCardId":260,"stackEffectType":2,"attackedMonsterCardId":242}]} 
 Player 1 03:32:15 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":6},{"type":2,"number":1},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":260,"scopeIsPlayer":true,"index":7,"originStackId":8},"isAfterActivation":true,"index":7} 
 Player 1 03:32:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Pooter \n2:Player 1 rolled 6 vs Pooter<Monster>"} 
 Player 1 03:32:15 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":8,"creatorCardId":260,"numberRolled":6,"rollingPlayerCardId":260,"stackEffectType":2,"attackedMonsterCardId":242}} 
 Player 1 03:32:15 $ACTION_MASSAGE_REMOVE:  
 {"id":48} 
 Player 1 03:32:15 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":50,"_text":"Remove After Resolve AttackRoll 8  "}} 
 Player 1 03:32:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Pooter"} 
 Player 1 03:32:15 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":8,"creatorCardId":260,"numberRolled":6,"rollingPlayerCardId":260,"stackEffectType":2,"attackedMonsterCardId":242}} 
 Player 1 03:32:15 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":51,"_text":"Response Remove After Resolve AttackRoll 8"},"childOfId":50} 
 Player 1 03:32:15 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":52,"_text":"Wait For Response From Player 1 "},"childOfId":50} 
 Player 1 03:32:15 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:32:15 $ACTION_MASSAGE_REMOVE:  
 {"id":52} 
 Player 1 03:32:15 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":53,"_text":"Wait For Response From Player 2 "},"childOfId":50} 
 Player 1 03:32:15 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:32:15 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:32:16 $ACTION_MASSAGE_REMOVE:  
 {"id":53} 
 Player 1 03:32:16 $ACTION_MASSAGE_REMOVE:  
 {"id":51} 
 Player 1 03:32:16 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":54,"_text":"Resolve CombatDamage 9 "}} 
 Player 1 03:32:16 $MONSTER_GET_DAMAGED:  
 {"cardId":242,"hpLeft":0,"damageDealerId":260} 
 Player 1 03:32:16 $NEXT_STACK_ID:  
 Player 1 03:32:16 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Pooter"} 
 Player 1 03:32:16 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:32:16 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Pooter \n2:[object Object] killed by Azazel"} 
 Player 1 03:32:16 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":10,"creatorCardId":260,"monsterToDieCardId":242,"stackEffectType":5,"killerId":260}} 
 Player 1 03:32:16 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Pooter \n2:[object Object] killed by Azazel"} 
 Player 1 03:32:16 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Pooter \n2:[object Object] killed by Azazel"} 
 Player 1 03:32:16 $REPLACE_STACK:  
 {"currentStack":[{"entityId":9,"creatorCardId":260,"entityToDoDamageCardId":260,"entityToTakeDamageCardId":242,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":10,"creatorCardId":260,"monsterToDieCardId":242,"stackEffectType":5,"killerId":260}]} 
 Player 1 03:32:16 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":260}],"result":null,"preventMethod":false,"methodScopeId":242,"scopeIsPlayer":false,"index":8,"originStackId":-1},"isAfterActivation":true,"index":8} 
 Player 1 03:32:16 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":6},{"type":0,"number":260},{"type":0,"number":242}],"result":null,"preventMethod":false,"methodScopeId":260,"scopeIsPlayer":true,"index":9,"originStackId":9},"isAfterActivation":true,"index":9} 
 Player 1 03:32:16 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Pooter \n2:[object Object] killed by Azazel"} 
 Player 1 03:32:16 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":9,"creatorCardId":260,"entityToDoDamageCardId":260,"entityToTakeDamageCardId":242,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 03:32:16 $ACTION_MASSAGE_REMOVE:  
 {"id":54} 
 Player 1 03:32:16 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":55,"_text":"Remove After Resolve CombatDamage 9  "}} 
 Player 1 03:32:16 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by Azazel"} 
 Player 1 03:32:16 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":9,"creatorCardId":260,"entityToDoDamageCardId":260,"entityToTakeDamageCardId":242,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 03:32:16 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":56,"_text":"Response Remove After Resolve CombatDamage 9"},"childOfId":55} 
 Player 1 03:32:16 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":57,"_text":"Wait For Response From Player 1 "},"childOfId":55} 
 Player 1 03:32:16 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:32:16 $ACTION_MASSAGE_REMOVE:  
 {"id":57} 
 Player 1 03:32:16 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":58,"_text":"Wait For Response From Player 2 "},"childOfId":55} 
 Player 1 03:32:16 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:32:16 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:32:17 $ACTION_MASSAGE_REMOVE:  
 {"id":58} 
 Player 1 03:32:17 $ACTION_MASSAGE_REMOVE:  
 {"id":56} 
 Player 1 03:32:17 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":59,"_text":"Resolve MonsterDeath 10 "}} 
 Player 1 03:32:17 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":242,"particleType":5} 
 Player 1 03:32:17 $CANCEL_ATTACK:  
 Player 1 03:32:17 $NEXT_STACK_ID:  
 Player 1 03:32:17 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by Azazel"} 
 Player 1 03:32:17 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:32:17 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Pooter<Monster> reward \n2:[object Object] killed by Azazel"} 
 Player 1 03:32:17 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":11,"creatorCardId":260,"monsterCardWithRewardId":242,"playerCardIdToReward":260,"stackEffectType":7}} 
 Player 1 03:32:17 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Pooter<Monster> reward \n2:[object Object] killed by Azazel"} 
 Player 1 03:32:17 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Pooter<Monster> reward \n2:[object Object] killed by Azazel"} 
 Player 1 03:32:17 $REPLACE_STACK:  
 {"currentStack":[{"entityId":11,"creatorCardId":260,"monsterCardWithRewardId":242,"playerCardIdToReward":260,"stackEffectType":7},{"entityId":10,"creatorCardId":260,"monsterToDieCardId":242,"stackEffectType":5,"killerId":260}]} 
 Player 1 03:32:17 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Pooter<Monster> reward \n2:[object Object] killed by Azazel"} 
 Player 1 03:32:17 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":10,"creatorCardId":260,"monsterToDieCardId":242,"stackEffectType":5,"killerId":260}} 
 Player 1 03:32:17 $ACTION_MASSAGE_REMOVE:  
 {"id":59} 
 Player 1 03:32:17 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":60,"_text":"Remove After Resolve MonsterDeath 10  "}} 
 Player 1 03:32:17 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Pooter<Monster> reward"} 
 Player 1 03:32:17 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":10,"creatorCardId":260,"monsterToDieCardId":242,"stackEffectType":5,"killerId":260}} 
 Player 1 03:32:17 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":61,"_text":"Response Remove After Resolve MonsterDeath 10"},"childOfId":60} 
 Player 1 03:32:17 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":62,"_text":"Wait For Response From Player 1 "},"childOfId":60} 
 Player 1 03:32:17 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:32:17 $ACTION_MASSAGE_REMOVE:  
 {"id":62} 
 Player 1 03:32:18 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":63,"_text":"Wait For Response From Player 2 "},"childOfId":60} 
 Player 1 03:32:18 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:32:18 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:32:18 $ACTION_MASSAGE_REMOVE:  
 {"id":49} 
 Player 1 03:32:18 $ACTION_MASSAGE_REMOVE:  
 {"id":50} 
 Player 1 03:32:18 $ACTION_MASSAGE_REMOVE:  
 {"id":63} 
 Player 1 03:32:18 $ACTION_MASSAGE_REMOVE:  
 {"id":61} 
 Player 1 03:32:18 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":64,"_text":"Resolve MonsterRewardStackEffect 11 "}} 
 Player 1 03:32:18 $DRAW_CARD:  
 {"deckType":1} 
 Player 1 03:32:18 $MOVE_CARD:  
 {"moveIndex":12,"cardId":126,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 1 03:32:19 $CARD_DRAWN:  
 {"playerId":1,"deckType":1,"drawnCardId":126} 
 Player 1 03:32:19 $FLIP_CARD:  
 {"cardId":126} 
 Player 1 03:32:19 $PLAYER_GET_LOOT:  
 {"playerId":1,"cardId":126} 
 Player 1 03:32:19 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:32:19 $ACTION_MASSAGE_REMOVE:  
 {"id":48} 
 Player 1 03:32:19 $ACTION_MASSAGE_REMOVE:  
 {"id":50} 
 Player 1 03:32:19 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":65,"_text":"Fizzle MonsterRewardStackEffect 11"}} 
 Player 1 03:32:19 $MOVE_CARD:  
 {"moveIndex":13,"cardId":242,"placeID":281,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 03:32:19 $ACTION_MASSAGE_REMOVE:  
 {"id":55} 
 Player 1 03:32:19 $MOVE_CARD_TO_PILE:  
 {"type":2,"cardId":242} 
 Player 1 03:32:20 $REMOVE_MONSTER:  
 {"holderId":1,"monsterId":242} 
 Player 1 03:32:20 $NEXT_STACK_ID:  
 Player 1 03:32:20 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:32:20 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Refill holder1 slot"} 
 Player 1 03:32:20 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":12,"creatorCardId":260,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 
 Player 1 03:32:20 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":66,"_text":"Add RefillEmptySlot 12 "}} 
 Player 1 03:32:20 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:32:20 $ACTION_MASSAGE_REMOVE:  
 {"id":66} 
 Player 1 03:32:20 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Refill holder1 slot"} 
 Player 1 03:32:20 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":12,"creatorCardId":260,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 
 Player 1 03:32:20 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":67,"_text":"Response Adding RefillEmptySlot 12"},"childOfId":66} 
 Player 1 03:32:20 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":68,"_text":"Wait For Response From Player 1 "},"childOfId":66} 
 Player 1 03:32:20 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:32:20 $ACTION_MASSAGE_REMOVE:  
 {"id":68} 
 Player 1 03:32:20 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":69,"_text":"Wait For Response From Player 2 "},"childOfId":66} 
 Player 1 03:32:20 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:32:20 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:32:20 $ACTION_MASSAGE_REMOVE:  
 {"id":60} 
 Player 1 03:32:20 $ACTION_MASSAGE_REMOVE:  
 {"id":69} 
 Player 1 03:32:20 $ACTION_MASSAGE_REMOVE:  
 {"id":67} 
 Player 1 03:32:20 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":70,"_text":"Resolve RefillEmptySlot 12 "}} 
 Player 1 03:32:20 $DRAW_CARD:  
 {"deckType":2} 
 Player 1 03:32:20 $FLIP_CARD:  
 {"cardId":212} 
 Player 1 03:32:20 $REGISTER_PASSIVE_ITEM:  
 {"cardId":212} 
 Player 1 03:32:20 $ADD_MONSTER:  
 {"monsterPlaceId":1,"monsterId":212} 
 Player 1 03:32:20 $NEW_MONSTER_ON_PLACE:  
 {"cardId":212,"monsterPlaceId":1} 
 Player 1 03:32:20 $ACTION_MASSAGE_REMOVE:  
 {"id":70} 
 Player 1 03:32:20 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":71,"_text":"Remove After Resolve RefillEmptySlot 12  "}} 
 Player 1 03:32:20 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:32:20 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":12,"creatorCardId":260,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 
 Player 1 03:32:20 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":72,"_text":"Response Remove After Resolve RefillEmptySlot 12"},"childOfId":71} 
 Player 1 03:32:20 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":73,"_text":"Wait For Response From Player 2 "},"childOfId":71} 
 Player 1 03:32:20 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:32:20 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:32:21 $ACTION_MASSAGE_REMOVE:  
 {"id":73} 
 Player 1 03:32:21 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":74,"_text":"Wait For Response From Player 1 "},"childOfId":71} 
 Player 1 03:32:21 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:32:21 $ACTION_MASSAGE_REMOVE:  
 {"id":74} 
 Player 1 03:32:21 $ACTION_MASSAGE_REMOVE:  
 {"id":72} 
 Player 1 03:32:21 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":75,"_text":"Stack Was Emptied "}} 
 Player 1 03:32:21 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:32:21 $ACTION_MASSAGE_REMOVE:  
 {"id":71} 
 Player 1 03:32:21 $ACTION_MASSAGE_REMOVE:  
 {"id":64} 
 Player 1 03:32:21 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":76,"_text":"Stack Was Emptied "}} 
 Player 1 03:32:21 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:32:21 $ACTION_MASSAGE_REMOVE:  
 {"id":76} 
 Player 1 03:32:22 $ACTION_MASSAGE_REMOVE:  
 {"id":65} 
 Player 1 03:32:22 $ACTION_MASSAGE_REMOVE:  
 {"id":75} 
 Player 1 03:32:22 $ACTION_MASSAGE_REMOVE:  
 {"id":76} 
 Player 1 03:32:23 $ACTION_MASSAGE_REMOVE:  
 {"id":71} 
 Player 1 03:32:53 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:32:53 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:32:53 $REPLACE_STACK:  
 {"currentStack":[]} 
 Player 1 03:32:53 $END_TURN:  
 Player 1 03:32:53 $SET_TURN:  
 {"playerId":2} 
 Player 1 03:32:53 $START_TURN:  
 {"playerId":2} 
 Player 1 03:32:53 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:32:53 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:32:53 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 03:32:53 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 03:32:53 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:32:54 $MOVE_CARD_END:  
 {"moveIndex":14,"cardId":54,"flipIfFlipped":false,"playerId":2} 
 Player 1 03:32:54 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 03:32:54 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 03:32:54 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 03:32:54 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 03:32:54 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:33:15 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:33:15 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:33:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to buy TopBlankCard for 10"} 
 Player 1 03:33:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to buy TopBlankCard for 10"} 
 Player 1 03:33:15 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:33:16 $MOVE_CARD_END:  
 {"moveIndex":15,"cardId":157,"flipIfFlipped":true,"playerId":2} 
 Player 1 03:33:16 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to buy TopBlankCard for 10"} 
 Player 1 03:33:16 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to buy TopBlankCard for 10"} 
 Player 1 03:33:17 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:33:32 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:33:32 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:33:32 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on Greed"} 
 Player 1 03:33:32 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on Greed"} 
 Player 1 03:33:33 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:33:33 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on Greed"} 
 Player 1 03:33:33 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on Greed"} 
 Player 1 03:33:33 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on Greed"} 
 Player 1 03:33:33 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on Greed"} 
 Player 1 03:33:33 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:33:39 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:33:39 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:33:41 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 
 Player 1 03:33:41 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 
 Player 1 03:33:44 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:33:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 
 Player 1 03:33:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 
 Player 1 03:33:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed"} 
 Player 1 03:33:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed"} 
 Player 1 03:33:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed"} 
 Player 1 03:33:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed"} 
 Player 1 03:33:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed \n2:Player 2 is rolling against Greed<Monster>"} 
 Player 1 03:33:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed \n2:Player 2 is rolling against Greed<Monster>"} 
 Player 1 03:33:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed \n2:Player 2 is rolling against Greed<Monster>"} 
 Player 1 03:33:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed \n2:Player 2 is rolling against Greed<Monster>"} 
 Player 1 03:33:45 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:33:46 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed"} 
 Player 1 03:33:46 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed"} 
 Player 1 03:33:46 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed"} 
 Player 1 03:33:46 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed"} 
 Player 1 03:33:46 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:33:49 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:33:49 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:33:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 
 Player 1 03:33:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 
 Player 1 03:33:55 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:33:56 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 
 Player 1 03:33:56 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 
 Player 1 03:33:56 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed"} 
 Player 1 03:33:56 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed"} 
 Player 1 03:33:56 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed"} 
 Player 1 03:33:56 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed"} 
 Player 1 03:33:56 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed \n2:Player 2 is rolling against Greed<Monster>"} 
 Player 1 03:33:56 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed \n2:Player 2 is rolling against Greed<Monster>"} 
 Player 1 03:33:56 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed \n2:Player 2 is rolling against Greed<Monster>"} 
 Player 1 03:33:56 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed \n2:Player 2 is rolling against Greed<Monster>"} 
 Player 1 03:33:56 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:33:56 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed"} 
 Player 1 03:33:56 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed"} 
 Player 1 03:33:56 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed"} 
 Player 1 03:33:56 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed"} 
 Player 1 03:33:57 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:34:00 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:34:00 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:34:02 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 
 Player 1 03:34:02 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 
 Player 1 03:34:06 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 
 Player 1 03:34:06 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 
 Player 1 03:34:10 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 1 03:34:10 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 1 03:34:13 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 1 03:34:13 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 1 03:34:13 $MOVE_CARD_END:  
 {"moveIndex":16,"cardId":54,"flipIfFlipped":true,"playerId":2} 
 Player 1 03:34:14 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster> \n2:Player 2 activated HolyMantle \n3:Player 2 play 3 Cents(16) "} 
 Player 1 03:34:14 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster> \n2:Player 2 activated HolyMantle \n3:Player 2 play 3 Cents(16) "} 
 Player 1 03:34:20 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster> \n2:Player 2 activated HolyMantle \n3:Player 2 play 3 Cents(16) "} 
 Player 1 03:34:20 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster> \n2:Player 2 activated HolyMantle \n3:Player 2 play 3 Cents(16) "} 
 Player 1 03:34:22 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster> \n2:Player 2 activated HolyMantle \n3:Player 2 play 3 Cents(16)  \n4:Player 2 activated The Lost"} 
 Player 1 03:34:22 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster> \n2:Player 2 activated HolyMantle \n3:Player 2 play 3 Cents(16)  \n4:Player 2 activated The Lost"} 
 Player 1 03:34:22 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:34:25 $MOVE_CARD_END:  
 {"moveIndex":17,"cardId":39,"flipIfFlipped":true,"playerId":2} 
 Player 1 03:34:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster> \n2:Player 2 activated HolyMantle \n3:Player 2 play 3 Cents(16)  \n4:Player 2 activated The Lost"} 
 Player 1 03:34:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster> \n2:Player 2 activated HolyMantle \n3:Player 2 play 3 Cents(16)  \n4:Player 2 activated The Lost"} 
 Player 1 03:34:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster> \n2:Player 2 activated HolyMantle \n3:Player 2 play 3 Cents(16)  \n4:Player 2 play 3 Cents(1) "} 
 Player 1 03:34:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster> \n2:Player 2 activated HolyMantle \n3:Player 2 play 3 Cents(16)  \n4:Player 2 play 3 Cents(1) "} 
 Player 1 03:34:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster> \n2:Player 2 activated HolyMantle \n3:Player 2 play 3 Cents(16)  \n4:Player 2 play 3 Cents(1) "} 
 Player 1 03:34:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster> \n2:Player 2 activated HolyMantle \n3:Player 2 play 3 Cents(16)  \n4:Player 2 play 3 Cents(1) "} 
 Player 1 03:34:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster> \n2:Player 2 activated HolyMantle \n3:Player 2 play 3 Cents(16)  \n4:Player 2 play 3 Cents(1) "} 
 Player 1 03:34:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster> \n2:Player 2 activated HolyMantle \n3:Player 2 play 3 Cents(16)  \n4:Player 2 play 3 Cents(1) "} 
 Player 1 03:34:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster> \n2:Player 2 activated HolyMantle \n3:Player 2 play 3 Cents(16)  \n4:Player 2 play 3 Cents(1) "} 
 Player 1 03:34:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster> \n2:Player 2 activated HolyMantle \n3:Player 2 play 3 Cents(16)  \n4:Player 2 play 3 Cents(1) "} 
 Player 1 03:34:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster> \n2:Player 2 activated HolyMantle \n3:Player 2 play 3 Cents(16)  \n4:Player 2 play 3 Cents(1) "} 
 Player 1 03:34:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster> \n2:Player 2 activated HolyMantle \n3:Player 2 play 3 Cents(16)  \n4:Player 2 play 3 Cents(1) "} 
 Player 1 03:34:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster> \n2:Player 2 activated HolyMantle \n3:Player 2 play 3 Cents(16)  \n4:Player 2 play 3 Cents(1)  \n5:Player 2 activated The Lost"} 
 Player 1 03:34:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster> \n2:Player 2 activated HolyMantle \n3:Player 2 play 3 Cents(16)  \n4:Player 2 play 3 Cents(1)  \n5:Player 2 activated The Lost"} 
 Player 1 03:34:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster> \n2:Player 2 activated HolyMantle \n3:Player 2 play 3 Cents(16)  \n4:Player 2 play 3 Cents(1)  \n5:Player 2 activated The Lost"} 
 Player 1 03:34:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster> \n2:Player 2 activated HolyMantle \n3:Player 2 play 3 Cents(16)  \n4:Player 2 play 3 Cents(1)  \n5:Player 2 activated The Lost"} 
 Player 1 03:34:27 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:34:30 $MOVE_CARD_END:  
 {"moveIndex":18,"cardId":39,"flipIfFlipped":true,"playerId":2} 
 Player 1 03:34:30 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster> \n2:Player 2 activated HolyMantle \n3:Player 2 play 3 Cents(16)  \n4:Player 2 play 3 Cents(1) "} 
 Player 1 03:34:30 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster> \n2:Player 2 activated HolyMantle \n3:Player 2 play 3 Cents(16)  \n4:Player 2 play 3 Cents(1) "} 
 Player 1 03:34:30 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster> \n2:Player 2 activated HolyMantle \n3:Player 2 play 3 Cents(16)  \n4:Player 2 play 3 Cents(1) "} 
 Player 1 03:34:30 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster> \n2:Player 2 activated HolyMantle \n3:Player 2 play 3 Cents(16)  \n4:Player 2 play 3 Cents(1) "} 
 Player 1 03:34:30 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:34:34 $MOVE_CARD_END:  
 {"moveIndex":19,"cardId":54,"flipIfFlipped":true,"playerId":2} 
 Player 1 03:34:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster> \n2:Player 2 activated HolyMantle \n3:Player 2 play 3 Cents(16) "} 
 Player 1 03:34:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster> \n2:Player 2 activated HolyMantle \n3:Player 2 play 3 Cents(16) "} 
 Player 1 03:34:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster> \n2:Player 2 activated HolyMantle \n3:Player 2 play 3 Cents(16) "} 
 Player 1 03:34:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster> \n2:Player 2 activated HolyMantle \n3:Player 2 play 3 Cents(16) "} 
 Player 1 03:34:34 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:34:37 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 1 03:34:37 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 1 03:34:37 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 1 03:34:37 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 1 03:34:38 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:34:39 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 
 Player 1 03:34:39 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 
 Player 1 03:34:39 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Greed combat damage to The Lost"} 
 Player 1 03:34:39 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Greed combat damage to The Lost"} 
 Player 1 03:34:39 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Greed combat damage to The Lost"} 
 Player 1 03:34:39 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Greed combat damage to The Lost"} 
 Player 1 03:34:39 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Greed combat damage to The Lost \n2:Player 2 is rolling against Greed<Monster>"} 
 Player 1 03:34:39 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Greed combat damage to The Lost \n2:Player 2 is rolling against Greed<Monster>"} 
 Player 1 03:34:39 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Greed combat damage to The Lost \n2:Player 2 is rolling against Greed<Monster>"} 
 Player 1 03:34:39 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Greed combat damage to The Lost \n2:Player 2 is rolling against Greed<Monster>"} 
 Player 1 03:34:39 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:34:41 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Greed combat damage to The Lost"} 
 Player 1 03:34:41 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Greed combat damage to The Lost"} 
 Player 1 03:34:41 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Greed combat damage to The Lost \n2:Activate Greed "} 
 Player 1 03:34:41 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Greed combat damage to The Lost \n2:Activate Greed "} 
 Player 1 03:34:41 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:34:43 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Greed combat damage to The Lost \n2:Activate Greed "} 
 Player 1 03:34:43 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Greed combat damage to The Lost \n2:Activate Greed "} 
 Player 1 03:34:44 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Greed combat damage to The Lost \n2:Activate Greed "} 
 Player 1 03:34:44 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Greed combat damage to The Lost \n2:Activate Greed "} 
 Player 1 03:34:45 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:34:46 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Greed combat damage to The Lost"} 
 Player 1 03:34:46 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Greed combat damage to The Lost"} 
 Player 1 03:34:46 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 03:34:46 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 03:34:46 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 03:34:46 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 03:34:46 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Greed combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 1 03:34:46 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Greed combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 1 03:34:46 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:34:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 03:34:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 03:34:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 
 Player 1 03:34:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 
 Player 1 03:34:48 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:34:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 
 Player 1 03:34:51 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 
 Player 1 03:34:51 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 
 Player 1 03:34:51 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 
 Player 1 03:34:51 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:34:52 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 03:34:52 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 03:34:53 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 03:34:53 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 03:34:53 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 03:34:53 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 03:34:53 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 03:34:53 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 03:34:53 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:34:55 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:34:55 $ACTION_MASSAGE_REMOVE:  
 {"id":78} 
 Player 1 03:34:55 $ACTION_MASSAGE_REMOVE:  
 {"id":79} 
 Player 1 03:34:55 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:34:55 $NEXT_STACK_ID:  
 Player 1 03:34:55 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:34:55 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 03:34:55 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":30,"creatorCardId":260,"turnPlayerCardId":260,"stackEffectType":13}} 
 Player 1 03:34:55 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":77,"_text":"Add StartTurnLoot 30 "}} 
 Player 1 03:34:55 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:34:55 $ACTION_MASSAGE_REMOVE:  
 {"id":77} 
 Player 1 03:34:55 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 03:34:55 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":30,"creatorCardId":260,"turnPlayerCardId":260,"stackEffectType":13}} 
 Player 1 03:34:55 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":78,"_text":"Response Adding StartTurnLoot 30"},"childOfId":77} 
 Player 1 03:34:55 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":79,"_text":"Wait For Response From Player 1 "},"childOfId":77} 
 Player 1 03:34:55 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:34:55 $ACTION_MASSAGE_REMOVE:  
 {"id":79} 
 Player 1 03:34:55 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":80,"_text":"Wait For Response From Player 2 "},"childOfId":77} 
 Player 1 03:34:55 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:34:55 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:34:55 $ACTION_MASSAGE_REMOVE:  
 {"id":80} 
 Player 1 03:34:55 $ACTION_MASSAGE_REMOVE:  
 {"id":78} 
 Player 1 03:34:55 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":81,"_text":"Resolve StartTurnLoot 30 "}} 
 Player 1 03:34:56 $DRAW_CARD:  
 {"deckType":1} 
 Player 1 03:34:56 $MOVE_CARD:  
 {"moveIndex":20,"cardId":141,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 1 03:34:56 $CARD_DRAWN:  
 {"playerId":1,"deckType":1,"drawnCardId":141} 
 Player 1 03:34:56 $FLIP_CARD:  
 {"cardId":141} 
 Player 1 03:34:56 $PLAYER_GET_LOOT:  
 {"playerId":1,"cardId":141} 
 Player 1 03:34:56 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 03:34:56 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":30,"creatorCardId":260,"turnPlayerCardId":260,"stackEffectType":13}} 
 Player 1 03:34:56 $ACTION_MASSAGE_REMOVE:  
 {"id":81} 
 Player 1 03:34:56 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":82,"_text":"Remove After Resolve StartTurnLoot 30  "}} 
 Player 1 03:34:56 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:34:56 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":30,"creatorCardId":260,"turnPlayerCardId":260,"stackEffectType":13}} 
 Player 1 03:34:56 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":83,"_text":"Response Remove After Resolve StartTurnLoot 30"},"childOfId":82} 
 Player 1 03:34:56 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":84,"_text":"Wait For Response From Player 2 "},"childOfId":82} 
 Player 1 03:34:56 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:34:56 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:34:57 $ACTION_MASSAGE_REMOVE:  
 {"id":84} 
 Player 1 03:34:57 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":85,"_text":"Wait For Response From Player 1 "},"childOfId":82} 
 Player 1 03:34:57 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:34:57 $ACTION_MASSAGE_REMOVE:  
 {"id":85} 
 Player 1 03:34:57 $ACTION_MASSAGE_REMOVE:  
 {"id":83} 
 Player 1 03:34:57 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":86,"_text":"Stack Was Emptied "}} 
 Player 1 03:34:57 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:34:57 $ACTION_MASSAGE_REMOVE:  
 {"id":82} 
 Player 1 03:34:58 $ACTION_MASSAGE_REMOVE:  
 {"id":86} 
 Player 1 03:34:59 $ACTION_MASSAGE_REMOVE:  
 {"id":82} 
 Player 1 03:35:31 $NEXT_STACK_ID:  
 Player 1 03:35:32 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:35:32 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play 3 Cents(19) "} 
 Player 1 03:35:32 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":31,"creatorCardId":260,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":57,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 1 03:35:32 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":87,"_text":"Add PlayLootCardStackEffect 31 "}} 
 Player 1 03:35:32 $PLAYER_LOSE_LOOT:  
 {"playerId":1,"cardId":57} 
 Player 1 03:35:32 $MOVE_CARD:  
 {"moveIndex":21,"cardId":57,"placeID":278,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 03:35:32 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play 3 Cents(19): addMoney"} 
 Player 1 03:35:32 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play 3 Cents(19): addMoney"} 
 Player 1 03:35:32 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:35:32 $ACTION_MASSAGE_REMOVE:  
 {"id":87} 
 Player 1 03:35:32 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play 3 Cents(19): addMoney"} 
 Player 1 03:35:32 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":31,"creatorCardId":260,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":57,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":57,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 03:35:32 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":88,"_text":"Response Adding PlayLootCardStackEffect 31"},"childOfId":87} 
 Player 1 03:35:32 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":89,"_text":"Wait For Response From Player 1 "},"childOfId":87} 
 Player 1 03:35:32 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:35:32 $ACTION_MASSAGE_REMOVE:  
 {"id":89} 
 Player 1 03:35:32 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":90,"_text":"Wait For Response From Player 2 "},"childOfId":87} 
 Player 1 03:35:32 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:35:32 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:35:33 $ACTION_MASSAGE_REMOVE:  
 {"id":90} 
 Player 1 03:35:33 $ACTION_MASSAGE_REMOVE:  
 {"id":88} 
 Player 1 03:35:33 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":91,"_text":"Resolve PlayLootCardStackEffect 31 "}} 
 Player 1 03:35:33 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play 3 Cents(19): addMoney"} 
 Player 1 03:35:33 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":57,"particleType":6} 
 Player 1 03:35:35 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":57,"particleType":6} 
 Player 1 03:35:35 $CHANGE_MONEY:  
 {"playerId":1,"numOfCoins":3} 
 Player 1 03:35:35 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":260,"scopeIsPlayer":true,"index":10,"originStackId":-1},"isAfterActivation":true,"index":10} 
 Player 1 03:35:35 $MOVE_CARD:  
 {"moveIndex":22,"cardId":57,"placeID":279,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 03:35:35 $MOVE_CARD_TO_PILE:  
 {"type":1,"cardId":57} 
 Player 1 03:35:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play 3 Cents(19): addMoney"} 
 Player 1 03:35:35 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":31,"creatorCardId":260,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":57,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 03:35:35 $ACTION_MASSAGE_REMOVE:  
 {"id":91} 
 Player 1 03:35:35 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":92,"_text":"Remove After Resolve PlayLootCardStackEffect 31  "}} 
 Player 1 03:35:35 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:35:35 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":31,"creatorCardId":260,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":57,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 03:35:35 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":93,"_text":"Response Remove After Resolve PlayLootCardStackEffect 31"},"childOfId":92} 
 Player 1 03:35:35 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":94,"_text":"Wait For Response From Player 2 "},"childOfId":92} 
 Player 1 03:35:35 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:35:35 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:35:36 $ACTION_MASSAGE_REMOVE:  
 {"id":94} 
 Player 1 03:35:36 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":95,"_text":"Wait For Response From Player 1 "},"childOfId":92} 
 Player 1 03:35:36 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:35:36 $ACTION_MASSAGE_REMOVE:  
 {"id":95} 
 Player 1 03:35:36 $ACTION_MASSAGE_REMOVE:  
 {"id":93} 
 Player 1 03:35:36 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":96,"_text":"Stack Was Emptied "}} 
 Player 1 03:35:36 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:35:36 $ACTION_MASSAGE_REMOVE:  
 {"id":92} 
 Player 1 03:35:36 $NEXT_STACK_ID:  
 Player 1 03:35:36 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:35:36 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1  declared attack on TopBlankCard"} 
 Player 1 03:35:36 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":32,"creatorCardId":260,"attackingPlayerCardId":260,"idOfCardBeingAttacked":0,"stackEffectType":4}} 
 Player 1 03:35:36 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":97,"_text":"Add DeclareAttack 32 "}} 
 Player 1 03:35:36 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:35:36 $ACTION_MASSAGE_REMOVE:  
 {"id":97} 
 Player 1 03:35:36 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1  declared attack on TopBlankCard"} 
 Player 1 03:35:36 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":32,"creatorCardId":260,"attackingPlayerCardId":260,"idOfCardBeingAttacked":0,"stackEffectType":4}} 
 Player 1 03:35:36 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":98,"_text":"Response Adding DeclareAttack 32"},"childOfId":97} 
 Player 1 03:35:36 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":99,"_text":"Wait For Response From Player 1 "},"childOfId":97} 
 Player 1 03:35:36 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:35:36 $ACTION_MASSAGE_REMOVE:  
 {"id":99} 
 Player 1 03:35:36 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":100,"_text":"Wait For Response From Player 2 "},"childOfId":97} 
 Player 1 03:35:36 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:35:36 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:35:37 $ACTION_MASSAGE_REMOVE:  
 {"id":100} 
 Player 1 03:35:37 $ACTION_MASSAGE_REMOVE:  
 {"id":98} 
 Player 1 03:35:37 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":101,"_text":"Resolve DeclareAttack 32 "}} 
 Player 1 03:35:37 $DRAW_CARD:  
 {"deckType":2} 
 Player 1 03:35:37 $SHOW_CARD_PREVIEW:  
 {"cardToShowId":247,"playerId":1} 
 Player 1 03:35:37 $ACTION_MASSAGE_REMOVE:  
 {"id":96} 
 Player 1 03:35:38 $ACTION_MASSAGE_REMOVE:  
 {"id":92} 
 Player 1 03:35:47 $FLIP_CARD:  
 {"cardId":247} 
 Player 1 03:35:47 $ADD_MONSTER:  
 {"monsterPlaceId":2,"monsterId":247} 
 Player 1 03:35:47 $NEW_MONSTER_ON_PLACE:  
 {"cardId":247,"monsterPlaceId":2} 
 Player 1 03:35:47 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":247,"particleType":5} 
 Player 1 03:35:47 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":260,"scopeIsPlayer":true,"index":11,"originStackId":32},"isAfterActivation":true,"index":11} 
 Player 1 03:35:47 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1  declared attack on TopBlankCard"} 
 Player 1 03:35:47 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":32,"creatorCardId":260,"attackingPlayerCardId":260,"idOfCardBeingAttacked":247,"stackEffectType":4}} 
 Player 1 03:35:47 $ACTION_MASSAGE_REMOVE:  
 {"id":101} 
 Player 1 03:35:47 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":102,"_text":"Remove After Resolve DeclareAttack 32  "}} 
 Player 1 03:35:47 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:35:47 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":32,"creatorCardId":260,"attackingPlayerCardId":260,"idOfCardBeingAttacked":247,"stackEffectType":4}} 
 Player 1 03:35:47 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":103,"_text":"Response Remove After Resolve DeclareAttack 32"},"childOfId":102} 
 Player 1 03:35:47 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":104,"_text":"Wait For Response From Player 2 "},"childOfId":102} 
 Player 1 03:35:48 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:35:48 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:35:48 $ACTION_MASSAGE_REMOVE:  
 {"id":104} 
 Player 1 03:35:48 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":105,"_text":"Wait For Response From Player 1 "},"childOfId":102} 
 Player 1 03:35:48 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:35:48 $ACTION_MASSAGE_REMOVE:  
 {"id":105} 
 Player 1 03:35:48 $ACTION_MASSAGE_REMOVE:  
 {"id":103} 
 Player 1 03:35:48 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":106,"_text":"Stack Was Emptied "}} 
 Player 1 03:35:48 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:35:48 $ACTION_MASSAGE_REMOVE:  
 {"id":102} 
 Player 1 03:35:49 $ACTION_MASSAGE_REMOVE:  
 {"id":106} 
 Player 1 03:35:50 $ACTION_MASSAGE_REMOVE:  
 {"id":102} 
 Player 1 03:35:54 $NEXT_STACK_ID:  
 Player 1 03:35:54 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:35:54 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Spider<Monster>"} 
 Player 1 03:35:54 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":33,"creatorCardId":260,"rollingPlayerCardId":260,"stackEffectType":2,"attackedMonsterCardId":247}} 
 Player 1 03:35:54 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":107,"_text":"Add AttackRoll 33 "}} 
 Player 1 03:35:54 $ROLL_DICE:  
 {"playerId":1} 
 Player 1 03:35:55 $ROLL_DICE_ENDED:  
 {"playerId":1,"numberRolled":3} 
 Player 1 03:35:55 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 3 vs Spider<Monster>"} 
 Player 1 03:35:55 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:35:55 $ACTION_MASSAGE_REMOVE:  
 {"id":107} 
 Player 1 03:35:55 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 3 vs Spider<Monster>"} 
 Player 1 03:35:55 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":33,"creatorCardId":260,"numberRolled":3,"rollingPlayerCardId":260,"stackEffectType":2,"attackedMonsterCardId":247}} 
 Player 1 03:35:55 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":108,"_text":"Response Adding AttackRoll 33"},"childOfId":107} 
 Player 1 03:35:55 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":109,"_text":"Wait For Response From Player 1 "},"childOfId":107} 
 Player 1 03:35:56 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:35:56 $ACTION_MASSAGE_REMOVE:  
 {"id":109} 
 Player 1 03:35:56 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":110,"_text":"Wait For Response From Player 2 "},"childOfId":107} 
 Player 1 03:35:56 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:35:56 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:35:56 $ACTION_MASSAGE_REMOVE:  
 {"id":110} 
 Player 1 03:35:56 $ACTION_MASSAGE_REMOVE:  
 {"id":108} 
 Player 1 03:35:56 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":111,"_text":"Resolve AttackRoll 33 "}} 
 Player 1 03:35:56 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":112,"_text":"Added 0 to original roll"}} 
 Player 1 03:35:56 $NEXT_STACK_ID:  
 Player 1 03:35:56 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 3 vs Spider<Monster>"} 
 Player 1 03:35:56 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:35:56 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Spider combat damage to Azazel \n2:Player 1 rolled 3 vs Spider<Monster>"} 
 Player 1 03:35:56 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":34,"creatorCardId":260,"entityToDoDamageCardId":247,"entityToTakeDamageCardId":260,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 03:35:56 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Spider combat damage to Azazel \n2:Player 1 rolled 3 vs Spider<Monster>"} 
 Player 1 03:35:56 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Spider combat damage to Azazel \n2:Player 1 rolled 3 vs Spider<Monster>"} 
 Player 1 03:35:56 $REPLACE_STACK:  
 {"currentStack":[{"entityId":34,"creatorCardId":260,"entityToDoDamageCardId":247,"entityToTakeDamageCardId":260,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":33,"creatorCardId":260,"numberRolled":3,"rollingPlayerCardId":260,"stackEffectType":2,"attackedMonsterCardId":247}]} 
 Player 1 03:35:56 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":3},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":260,"scopeIsPlayer":true,"index":12,"originStackId":33},"isAfterActivation":true,"index":12} 
 Player 1 03:35:56 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Spider combat damage to Azazel \n2:Player 1 rolled 3 vs Spider<Monster>"} 
 Player 1 03:35:56 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":33,"creatorCardId":260,"numberRolled":3,"rollingPlayerCardId":260,"stackEffectType":2,"attackedMonsterCardId":247}} 
 Player 1 03:35:56 $ACTION_MASSAGE_REMOVE:  
 {"id":111} 
 Player 1 03:35:56 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":113,"_text":"Remove After Resolve AttackRoll 33  "}} 
 Player 1 03:35:56 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Spider combat damage to Azazel"} 
 Player 1 03:35:56 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":33,"creatorCardId":260,"numberRolled":3,"rollingPlayerCardId":260,"stackEffectType":2,"attackedMonsterCardId":247}} 
 Player 1 03:35:56 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":114,"_text":"Response Remove After Resolve AttackRoll 33"},"childOfId":113} 
 Player 1 03:35:56 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":115,"_text":"Wait For Response From Player 1 "},"childOfId":113} 
 Player 1 03:35:56 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:35:56 $ACTION_MASSAGE_REMOVE:  
 {"id":115} 
 Player 1 03:35:56 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":116,"_text":"Wait For Response From Player 2 "},"childOfId":113} 
 Player 1 03:35:56 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:35:57 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:35:57 $ACTION_MASSAGE_REMOVE:  
 {"id":116} 
 Player 1 03:35:57 $ACTION_MASSAGE_REMOVE:  
 {"id":114} 
 Player 1 03:35:57 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":117,"_text":"Resolve CombatDamage 34 "}} 
 Player 1 03:35:57 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Spider 1 combat damage to Azazel"} 
 Player 1 03:35:57 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Spider 1 combat damage to Azazel"} 
 Player 1 03:35:57 $PLAYER_GET_HIT:  
 {"playerId":1,"damage":1,"damageDealerId":247} 
 Player 1 03:35:57 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":247}],"result":null,"preventMethod":false,"methodScopeId":260,"scopeIsPlayer":true,"index":13,"originStackId":-1},"isAfterActivation":true,"index":13} 
 Player 1 03:35:57 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Spider 1 combat damage to Azazel"} 
 Player 1 03:35:57 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":34,"creatorCardId":260,"entityToDoDamageCardId":247,"entityToTakeDamageCardId":260,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 03:35:57 $ACTION_MASSAGE_REMOVE:  
 {"id":117} 
 Player 1 03:35:57 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":118,"_text":"Remove After Resolve CombatDamage 34  "}} 
 Player 1 03:35:57 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:35:57 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":34,"creatorCardId":260,"entityToDoDamageCardId":247,"entityToTakeDamageCardId":260,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 03:35:57 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":119,"_text":"Response Remove After Resolve CombatDamage 34"},"childOfId":118} 
 Player 1 03:35:57 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":120,"_text":"Wait For Response From Player 2 "},"childOfId":118} 
 Player 1 03:35:57 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:35:57 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:35:58 $ACTION_MASSAGE_REMOVE:  
 {"id":120} 
 Player 1 03:35:58 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":121,"_text":"Wait For Response From Player 1 "},"childOfId":118} 
 Player 1 03:35:58 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:35:58 $ACTION_MASSAGE_REMOVE:  
 {"id":121} 
 Player 1 03:35:58 $ACTION_MASSAGE_REMOVE:  
 {"id":119} 
 Player 1 03:35:58 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":122,"_text":"Stack Was Emptied "}} 
 Player 1 03:35:58 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:35:58 $ACTION_MASSAGE_REMOVE:  
 {"id":111} 
 Player 1 03:35:58 $ACTION_MASSAGE_REMOVE:  
 {"id":113} 
 Player 1 03:35:59 $ACTION_MASSAGE_REMOVE:  
 {"id":112} 
 Player 1 03:35:59 $ACTION_MASSAGE_REMOVE:  
 {"id":113} 
 Player 1 03:35:59 $ACTION_MASSAGE_REMOVE:  
 {"id":122} 
 Player 1 03:36:00 $ACTION_MASSAGE_REMOVE:  
 {"id":118} 
 Player 1 03:36:00 $NEXT_STACK_ID:  
 Player 1 03:36:00 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:36:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Spider<Monster>"} 
 Player 1 03:36:00 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":35,"creatorCardId":260,"rollingPlayerCardId":260,"stackEffectType":2,"attackedMonsterCardId":247}} 
 Player 1 03:36:00 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":123,"_text":"Add AttackRoll 35 "}} 
 Player 1 03:36:00 $ROLL_DICE:  
 {"playerId":1} 
 Player 1 03:36:02 $ROLL_DICE_ENDED:  
 {"playerId":1,"numberRolled":6} 
 Player 1 03:36:02 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 6 vs Spider<Monster>"} 
 Player 1 03:36:02 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:36:02 $ACTION_MASSAGE_REMOVE:  
 {"id":123} 
 Player 1 03:36:02 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 6 vs Spider<Monster>"} 
 Player 1 03:36:02 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":35,"creatorCardId":260,"numberRolled":6,"rollingPlayerCardId":260,"stackEffectType":2,"attackedMonsterCardId":247}} 
 Player 1 03:36:02 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":124,"_text":"Response Adding AttackRoll 35"},"childOfId":123} 
 Player 1 03:36:02 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":125,"_text":"Wait For Response From Player 1 "},"childOfId":123} 
 Player 1 03:36:02 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:36:04 $ACTION_MASSAGE_REMOVE:  
 {"id":125} 
 Player 1 03:36:04 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":126,"_text":"Wait For Response From Player 2 "},"childOfId":123} 
 Player 1 03:36:04 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:36:04 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:36:04 $ACTION_MASSAGE_REMOVE:  
 {"id":126} 
 Player 1 03:36:04 $ACTION_MASSAGE_REMOVE:  
 {"id":124} 
 Player 1 03:36:04 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":127,"_text":"Resolve AttackRoll 35 "}} 
 Player 1 03:36:04 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":128,"_text":"Added 0 to original roll"}} 
 Player 1 03:36:04 $NEXT_STACK_ID:  
 Player 1 03:36:04 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 6 vs Spider<Monster>"} 
 Player 1 03:36:04 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:36:04 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Spider \n2:Player 1 rolled 6 vs Spider<Monster>"} 
 Player 1 03:36:04 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":36,"creatorCardId":260,"entityToDoDamageCardId":260,"entityToTakeDamageCardId":247,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 03:36:04 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Spider \n2:Player 1 rolled 6 vs Spider<Monster>"} 
 Player 1 03:36:04 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Spider \n2:Player 1 rolled 6 vs Spider<Monster>"} 
 Player 1 03:36:04 $REPLACE_STACK:  
 {"currentStack":[{"entityId":36,"creatorCardId":260,"entityToDoDamageCardId":260,"entityToTakeDamageCardId":247,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":35,"creatorCardId":260,"numberRolled":6,"rollingPlayerCardId":260,"stackEffectType":2,"attackedMonsterCardId":247}]} 
 Player 1 03:36:04 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":6},{"type":2,"number":1},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":260,"scopeIsPlayer":true,"index":14,"originStackId":35},"isAfterActivation":true,"index":14} 
 Player 1 03:36:04 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Spider \n2:Player 1 rolled 6 vs Spider<Monster>"} 
 Player 1 03:36:04 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":35,"creatorCardId":260,"numberRolled":6,"rollingPlayerCardId":260,"stackEffectType":2,"attackedMonsterCardId":247}} 
 Player 1 03:36:04 $ACTION_MASSAGE_REMOVE:  
 {"id":127} 
 Player 1 03:36:04 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":129,"_text":"Remove After Resolve AttackRoll 35  "}} 
 Player 1 03:36:04 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Spider"} 
 Player 1 03:36:04 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":35,"creatorCardId":260,"numberRolled":6,"rollingPlayerCardId":260,"stackEffectType":2,"attackedMonsterCardId":247}} 
 Player 1 03:36:04 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":130,"_text":"Response Remove After Resolve AttackRoll 35"},"childOfId":129} 
 Player 1 03:36:04 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":131,"_text":"Wait For Response From Player 1 "},"childOfId":129} 
 Player 1 03:36:04 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:36:05 $ACTION_MASSAGE_REMOVE:  
 {"id":131} 
 Player 1 03:36:05 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":132,"_text":"Wait For Response From Player 2 "},"childOfId":129} 
 Player 1 03:36:05 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:36:05 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:36:06 $ACTION_MASSAGE_REMOVE:  
 {"id":132} 
 Player 1 03:36:06 $ACTION_MASSAGE_REMOVE:  
 {"id":130} 
 Player 1 03:36:06 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":133,"_text":"Resolve CombatDamage 36 "}} 
 Player 1 03:36:06 $MONSTER_GET_DAMAGED:  
 {"cardId":247,"hpLeft":0,"damageDealerId":260} 
 Player 1 03:36:06 $NEXT_STACK_ID:  
 Player 1 03:36:06 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Spider"} 
 Player 1 03:36:06 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:36:06 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Spider \n2:[object Object] killed by Azazel"} 
 Player 1 03:36:06 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":37,"creatorCardId":260,"monsterToDieCardId":247,"stackEffectType":5,"killerId":260}} 
 Player 1 03:36:06 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Spider \n2:[object Object] killed by Azazel"} 
 Player 1 03:36:06 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Spider \n2:[object Object] killed by Azazel"} 
 Player 1 03:36:06 $REPLACE_STACK:  
 {"currentStack":[{"entityId":36,"creatorCardId":260,"entityToDoDamageCardId":260,"entityToTakeDamageCardId":247,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":37,"creatorCardId":260,"monsterToDieCardId":247,"stackEffectType":5,"killerId":260}]} 
 Player 1 03:36:06 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":260}],"result":null,"preventMethod":false,"methodScopeId":247,"scopeIsPlayer":false,"index":15,"originStackId":-1},"isAfterActivation":true,"index":15} 
 Player 1 03:36:06 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":6},{"type":0,"number":260},{"type":0,"number":247}],"result":null,"preventMethod":false,"methodScopeId":260,"scopeIsPlayer":true,"index":16,"originStackId":36},"isAfterActivation":true,"index":16} 
 Player 1 03:36:06 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Spider \n2:[object Object] killed by Azazel"} 
 Player 1 03:36:06 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":36,"creatorCardId":260,"entityToDoDamageCardId":260,"entityToTakeDamageCardId":247,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 03:36:06 $ACTION_MASSAGE_REMOVE:  
 {"id":133} 
 Player 1 03:36:06 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":134,"_text":"Remove After Resolve CombatDamage 36  "}} 
 Player 1 03:36:06 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by Azazel"} 
 Player 1 03:36:06 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":36,"creatorCardId":260,"entityToDoDamageCardId":260,"entityToTakeDamageCardId":247,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 03:36:06 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":135,"_text":"Response Remove After Resolve CombatDamage 36"},"childOfId":134} 
 Player 1 03:36:06 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":136,"_text":"Wait For Response From Player 1 "},"childOfId":134} 
 Player 1 03:36:06 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:36:07 $ACTION_MASSAGE_REMOVE:  
 {"id":128} 
 Player 1 03:36:07 $ACTION_MASSAGE_REMOVE:  
 {"id":129} 
 Player 1 03:36:09 $ACTION_MASSAGE_REMOVE:  
 {"id":134} 
 Player 1 03:36:09 $ACTION_MASSAGE_REMOVE:  
 {"id":136} 
 Player 1 03:36:09 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":137,"_text":"Wait For Response From Player 2 "},"childOfId":134} 
 Player 1 03:36:09 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:36:09 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:36:09 $ACTION_MASSAGE_REMOVE:  
 {"id":137} 
 Player 1 03:36:09 $ACTION_MASSAGE_REMOVE:  
 {"id":135} 
 Player 1 03:36:09 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":138,"_text":"Resolve MonsterDeath 37 "}} 
 Player 1 03:36:09 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":247,"particleType":5} 
 Player 1 03:36:09 $CANCEL_ATTACK:  
 Player 1 03:36:09 $NEXT_STACK_ID:  
 Player 1 03:36:10 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by Azazel"} 
 Player 1 03:36:10 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:36:10 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Spider<Monster> reward \n2:[object Object] killed by Azazel"} 
 Player 1 03:36:10 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":38,"creatorCardId":260,"monsterCardWithRewardId":247,"playerCardIdToReward":260,"stackEffectType":7}} 
 Player 1 03:36:10 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Spider<Monster> reward \n2:[object Object] killed by Azazel"} 
 Player 1 03:36:10 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Spider<Monster> reward \n2:[object Object] killed by Azazel"} 
 Player 1 03:36:10 $REPLACE_STACK:  
 {"currentStack":[{"entityId":38,"creatorCardId":260,"monsterCardWithRewardId":247,"playerCardIdToReward":260,"stackEffectType":7},{"entityId":37,"creatorCardId":260,"monsterToDieCardId":247,"stackEffectType":5,"killerId":260}]} 
 Player 1 03:36:10 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Spider<Monster> reward \n2:[object Object] killed by Azazel"} 
 Player 1 03:36:10 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":37,"creatorCardId":260,"monsterToDieCardId":247,"stackEffectType":5,"killerId":260}} 
 Player 1 03:36:10 $ACTION_MASSAGE_REMOVE:  
 {"id":138} 
 Player 1 03:36:10 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":139,"_text":"Remove After Resolve MonsterDeath 37  "}} 
 Player 1 03:36:10 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Spider<Monster> reward"} 
 Player 1 03:36:10 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":37,"creatorCardId":260,"monsterToDieCardId":247,"stackEffectType":5,"killerId":260}} 
 Player 1 03:36:10 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":140,"_text":"Response Remove After Resolve MonsterDeath 37"},"childOfId":139} 
 Player 1 03:36:10 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":141,"_text":"Wait For Response From Player 1 "},"childOfId":139} 
 Player 1 03:36:10 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:36:12 $ACTION_MASSAGE_REMOVE:  
 {"id":139} 
 Player 1 03:36:14 $ACTION_MASSAGE_REMOVE:  
 {"id":141} 
 Player 1 03:36:14 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":142,"_text":"Wait For Response From Player 2 "},"childOfId":139} 
 Player 1 03:36:14 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:36:14 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:36:15 $ACTION_MASSAGE_REMOVE:  
 {"id":142} 
 Player 1 03:36:15 $ACTION_MASSAGE_REMOVE:  
 {"id":140} 
 Player 1 03:36:15 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":143,"_text":"Resolve MonsterRewardStackEffect 38 "}} 
 Player 1 03:36:15 $DRAW_CARD:  
 {"deckType":1} 
 Player 1 03:36:15 $MOVE_CARD:  
 {"moveIndex":23,"cardId":99,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 1 03:36:15 $CARD_DRAWN:  
 {"playerId":1,"deckType":1,"drawnCardId":99} 
 Player 1 03:36:15 $FLIP_CARD:  
 {"cardId":99} 
 Player 1 03:36:15 $PLAYER_GET_LOOT:  
 {"playerId":1,"cardId":99} 
 Player 1 03:36:15 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:36:15 $ACTION_MASSAGE_REMOVE:  
 {"id":143} 
 Player 1 03:36:15 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":144,"_text":"Fizzle MonsterRewardStackEffect 38"}} 
 Player 1 03:36:15 $MOVE_CARD:  
 {"moveIndex":24,"cardId":247,"placeID":281,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 03:36:16 $MOVE_CARD_TO_PILE:  
 {"type":2,"cardId":247} 
 Player 1 03:36:16 $REMOVE_MONSTER:  
 {"holderId":2,"monsterId":247} 
 Player 1 03:36:16 $GET_NEXT_MONSTER:  
 {"monsterPlaceId":2} 
 Player 1 03:36:16 $ACTION_MASSAGE_REMOVE:  
 {"id":143} 
 Player 1 03:36:16 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":145,"_text":"Stack Was Emptied "}} 
 Player 1 03:36:16 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:36:16 $ACTION_MASSAGE_REMOVE:  
 {"id":145} 
 Player 1 03:36:17 $ACTION_MASSAGE_REMOVE:  
 {"id":145} 
 Player 1 03:36:18 $ACTION_MASSAGE_REMOVE:  
 {"id":144} 
 Player 1 03:36:36 $NEXT_STACK_ID:  
 Player 1 03:36:36 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:36:36 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 activated Azazel"} 
 Player 1 03:36:36 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":39,"creatorCardId":260,"hasLockingStackEffect":false,"itemToPlayCardId":260,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 1 03:36:36 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":146,"_text":"Add ActivateItem 39 "}} 
 Player 1 03:36:39 $USE_ITEM:  
 {"cardId":260} 
 Player 1 03:36:39 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:36:39 $ACTION_MASSAGE_REMOVE:  
 {"id":146} 
 Player 1 03:36:39 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 activated Azazel"} 
 Player 1 03:36:39 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":39,"creatorCardId":260,"hasLockingStackEffect":false,"itemToPlayCardId":260,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 03:36:39 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":147,"_text":"Response Adding ActivateItem 39"},"childOfId":146} 
 Player 1 03:36:39 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":148,"_text":"Wait For Response From Player 1 "},"childOfId":146} 
 Player 1 03:36:39 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:37:32 $ACTION_MASSAGE_REMOVE:  
 {"id":148} 
 Player 1 03:37:32 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":149,"_text":"Wait For Response From Player 2 "},"childOfId":146} 
 Player 1 03:37:32 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:37:32 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:37:33 $ACTION_MASSAGE_REMOVE:  
 {"id":149} 
 Player 1 03:37:33 $ACTION_MASSAGE_REMOVE:  
 {"id":147} 
 Player 1 03:37:33 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":150,"_text":"Resolve ActivateItem 39 "}} 
 Player 1 03:37:33 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":260,"particleType":6} 
 Player 1 03:37:35 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":260,"particleType":6} 
 Player 1 03:37:35 $NEXT_STACK_ID:  
 Player 1 03:37:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 activated Azazel"} 
 Player 1 03:37:35 $PLAYER_LOSE_LOOT:  
 {"playerId":1,"cardId":74} 
 Player 1 03:37:35 $MOVE_CARD:  
 {"moveIndex":25,"cardId":74,"placeID":278,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 03:37:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play A Dime(0): addMoney \n2:Player 1 activated Azazel"} 
 Player 1 03:37:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play A Dime(0): addMoney \n2:Player 1 activated Azazel"} 
 Player 1 03:37:35 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:37:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play A Dime(0): addMoney \n2:Player 1 activated Azazel"} 
 Player 1 03:37:35 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":40,"creatorCardId":260,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":74,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":74,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 03:37:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play A Dime(0): addMoney \n2:Player 1 activated Azazel"} 
 Player 1 03:37:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play A Dime(0): addMoney \n2:Player 1 activated Azazel"} 
 Player 1 03:37:35 $REPLACE_STACK:  
 {"currentStack":[{"entityId":40,"creatorCardId":260,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":74,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":74,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":39,"creatorCardId":260,"hasLockingStackEffect":false,"itemToPlayCardId":260,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 
 Player 1 03:37:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play A Dime(0): addMoney \n2:Player 1 activated Azazel"} 
 Player 1 03:37:35 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":39,"creatorCardId":260,"hasLockingStackEffect":false,"itemToPlayCardId":260,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 03:37:35 $ACTION_MASSAGE_REMOVE:  
 {"id":150} 
 Player 1 03:37:35 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":151,"_text":"Remove After Resolve ActivateItem 39  "}} 
 Player 1 03:37:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play A Dime(0): addMoney"} 
 Player 1 03:37:35 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":39,"creatorCardId":260,"hasLockingStackEffect":false,"itemToPlayCardId":260,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 03:37:35 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":152,"_text":"Response Remove After Resolve ActivateItem 39"},"childOfId":151} 
 Player 1 03:37:35 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":153,"_text":"Wait For Response From Player 1 "},"childOfId":151} 
 Player 1 03:37:35 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:37:35 $ACTION_MASSAGE_REMOVE:  
 {"id":153} 
 Player 1 03:37:36 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":154,"_text":"Wait For Response From Player 2 "},"childOfId":151} 
 Player 1 03:37:36 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:37:36 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:37:36 $ACTION_MASSAGE_REMOVE:  
 {"id":154} 
 Player 1 03:37:36 $ACTION_MASSAGE_REMOVE:  
 {"id":152} 
 Player 1 03:37:36 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":155,"_text":"Resolve PlayLootCardStackEffect 40 "}} 
 Player 1 03:37:36 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play A Dime(0): addMoney"} 
 Player 1 03:37:36 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":74,"particleType":6} 
 Player 1 03:37:38 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":74,"particleType":6} 
 Player 1 03:37:38 $CHANGE_MONEY:  
 {"playerId":1,"numOfCoins":10} 
 Player 1 03:37:38 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":10}],"result":null,"preventMethod":false,"methodScopeId":260,"scopeIsPlayer":true,"index":17,"originStackId":-1},"isAfterActivation":true,"index":17} 
 Player 1 03:37:38 $MOVE_CARD:  
 {"moveIndex":26,"cardId":74,"placeID":279,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 03:37:38 $ACTION_MASSAGE_REMOVE:  
 {"id":151} 
 Player 1 03:37:38 $MOVE_CARD_TO_PILE:  
 {"type":1,"cardId":74} 
 Player 1 03:37:38 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play A Dime(0): addMoney"} 
 Player 1 03:37:38 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":40,"creatorCardId":260,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":74,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 03:37:39 $ACTION_MASSAGE_REMOVE:  
 {"id":155} 
 Player 1 03:37:39 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":156,"_text":"Remove After Resolve PlayLootCardStackEffect 40  "}} 
 Player 1 03:37:39 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:37:39 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":40,"creatorCardId":260,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":74,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 03:37:39 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":157,"_text":"Response Remove After Resolve PlayLootCardStackEffect 40"},"childOfId":156} 
 Player 1 03:37:39 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":158,"_text":"Wait For Response From Player 2 "},"childOfId":156} 
 Player 1 03:37:39 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:37:39 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:37:39 $ACTION_MASSAGE_REMOVE:  
 {"id":158} 
 Player 1 03:37:39 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":159,"_text":"Wait For Response From Player 1 "},"childOfId":156} 
 Player 1 03:37:39 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:37:39 $ACTION_MASSAGE_REMOVE:  
 {"id":159} 
 Player 1 03:37:39 $ACTION_MASSAGE_REMOVE:  
 {"id":157} 
 Player 1 03:37:39 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":160,"_text":"Stack Was Emptied "}} 
 Player 1 03:37:39 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:37:39 $ACTION_MASSAGE_REMOVE:  
 {"id":156} 
 Player 1 03:37:41 $ACTION_MASSAGE_REMOVE:  
 {"id":160} 
 Player 1 03:37:41 $ACTION_MASSAGE_REMOVE:  
 {"id":156} 
 Player 1 03:37:49 $NEXT_STACK_ID:  
 Player 1 03:37:49 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:37:49 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to buy TopBlankCard for 10"} 
 Player 1 03:37:49 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":41,"creatorCardId":260,"itemToPurchaseCardId":0,"playerWhoBuysCardId":260,"cost":10,"stackEffectType":9}} 
 Player 1 03:37:49 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":161,"_text":"Add PurchaseItem 41 "}} 
 Player 1 03:37:49 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:37:49 $ACTION_MASSAGE_REMOVE:  
 {"id":161} 
 Player 1 03:37:49 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to buy TopBlankCard for 10"} 
 Player 1 03:37:49 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":41,"creatorCardId":260,"itemToPurchaseCardId":0,"playerWhoBuysCardId":260,"cost":10,"stackEffectType":9}} 
 Player 1 03:37:49 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":162,"_text":"Response Adding PurchaseItem 41"},"childOfId":161} 
 Player 1 03:37:49 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":163,"_text":"Wait For Response From Player 1 "},"childOfId":161} 
 Player 1 03:37:49 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:37:49 $ACTION_MASSAGE_REMOVE:  
 {"id":163} 
 Player 1 03:37:49 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":164,"_text":"Wait For Response From Player 2 "},"childOfId":161} 
 Player 1 03:37:49 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:37:49 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:37:49 $ACTION_MASSAGE_REMOVE:  
 {"id":164} 
 Player 1 03:37:49 $ACTION_MASSAGE_REMOVE:  
 {"id":162} 
 Player 1 03:37:49 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":165,"_text":"Resolve PurchaseItem 41 "}} 
 Player 1 03:37:49 $CHANGE_MONEY:  
 {"playerId":1,"numOfCoins":-10} 
 Player 1 03:37:49 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-10}],"result":null,"preventMethod":false,"methodScopeId":260,"scopeIsPlayer":true,"index":18,"originStackId":-1},"isAfterActivation":true,"index":18} 
 Player 1 03:37:49 $DRAW_CARD:  
 {"deckType":5} 
 Player 1 03:37:49 $REGISTER_PASSIVE_ITEM:  
 {"cardId":175} 
 Player 1 03:37:49 $MOVE_CARD:  
 {"moveIndex":27,"cardId":175,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 
 Player 1 03:37:50 $ADD_AN_ITEM:  
 {"playerId":1,"cardId":175,"isReward":false} 
 Player 1 03:37:50 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":175}],"result":true,"preventMethod":false,"methodScopeId":260,"scopeIsPlayer":true,"index":19,"originStackId":-1},"isAfterActivation":true,"index":19} 
 Player 1 03:37:50 $ACTION_MASSAGE_REMOVE:  
 {"id":165} 
 Player 1 03:37:50 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":166,"_text":"Remove After Resolve PurchaseItem 41  "}} 
 Player 1 03:37:50 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:37:50 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":41,"creatorCardId":260,"itemToPurchaseCardId":0,"playerWhoBuysCardId":260,"cost":10,"stackEffectType":9}} 
 Player 1 03:37:50 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":167,"_text":"Response Remove After Resolve PurchaseItem 41"},"childOfId":166} 
 Player 1 03:37:50 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":168,"_text":"Wait For Response From Player 2 "},"childOfId":166} 
 Player 1 03:37:50 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:37:50 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:37:51 $ACTION_MASSAGE_REMOVE:  
 {"id":168} 
 Player 1 03:37:51 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":169,"_text":"Wait For Response From Player 1 "},"childOfId":166} 
 Player 1 03:37:51 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:37:51 $ACTION_MASSAGE_REMOVE:  
 {"id":169} 
 Player 1 03:37:51 $ACTION_MASSAGE_REMOVE:  
 {"id":167} 
 Player 1 03:37:51 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":170,"_text":"Stack Was Emptied "}} 
 Player 1 03:37:51 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:37:51 $ACTION_MASSAGE_REMOVE:  
 {"id":166} 
 Player 1 03:37:52 $ACTION_MASSAGE_REMOVE:  
 {"id":170} 
 Player 1 03:37:53 $ACTION_MASSAGE_REMOVE:  
 {"id":166} 
 Player 1 03:38:05 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:38:05 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:38:05 $REPLACE_STACK:  
 {"currentStack":[]} 
 Player 1 03:38:05 $END_TURN:  
 Player 1 03:38:05 $SET_TURN:  
 {"playerId":2} 
 Player 1 03:38:05 $START_TURN:  
 {"playerId":2} 
 Player 1 03:38:06 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:38:06 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:38:06 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 03:38:06 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 03:38:06 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:38:07 $MOVE_CARD_END:  
 {"moveIndex":28,"cardId":92,"flipIfFlipped":false,"playerId":2} 
 Player 1 03:38:07 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 03:38:07 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 03:38:07 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 03:38:07 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 03:38:07 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:38:19 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:38:19 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:38:19 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on Greed"} 
 Player 1 03:38:19 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on Greed"} 
 Player 1 03:38:19 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:38:20 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on Greed"} 
 Player 1 03:38:20 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on Greed"} 
 Player 1 03:38:20 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on Greed"} 
 Player 1 03:38:20 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on Greed"} 
 Player 1 03:38:20 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:38:22 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:38:22 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:38:24 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 
 Player 1 03:38:24 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 
 Player 1 03:38:25 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:38:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 
 Player 1 03:38:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 
 Player 1 03:38:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed"} 
 Player 1 03:38:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed"} 
 Player 1 03:38:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed"} 
 Player 1 03:38:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed"} 
 Player 1 03:38:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed \n2:Player 2 is rolling against Greed<Monster>"} 
 Player 1 03:38:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed \n2:Player 2 is rolling against Greed<Monster>"} 
 Player 1 03:38:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed \n2:Player 2 is rolling against Greed<Monster>"} 
 Player 1 03:38:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed \n2:Player 2 is rolling against Greed<Monster>"} 
 Player 1 03:38:26 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:38:27 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed"} 
 Player 1 03:38:27 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed"} 
 Player 1 03:38:27 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed"} 
 Player 1 03:38:27 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed"} 
 Player 1 03:38:27 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:38:30 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:38:30 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:38:32 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 
 Player 1 03:38:32 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 
 Player 1 03:38:33 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:38:33 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 
 Player 1 03:38:33 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 
 Player 1 03:38:33 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed"} 
 Player 1 03:38:33 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed"} 
 Player 1 03:38:33 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed"} 
 Player 1 03:38:33 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed"} 
 Player 1 03:38:33 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed \n2:Player 2 is rolling against Greed<Monster>"} 
 Player 1 03:38:33 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed \n2:Player 2 is rolling against Greed<Monster>"} 
 Player 1 03:38:33 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed \n2:Player 2 is rolling against Greed<Monster>"} 
 Player 1 03:38:33 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed \n2:Player 2 is rolling against Greed<Monster>"} 
 Player 1 03:38:34 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:38:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed"} 
 Player 1 03:38:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed"} 
 Player 1 03:38:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed"} 
 Player 1 03:38:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed"} 
 Player 1 03:38:34 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:38:37 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:38:37 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:38:38 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 
 Player 1 03:38:38 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 
 Player 1 03:38:39 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:38:40 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 
 Player 1 03:38:40 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 
 Player 1 03:38:40 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed"} 
 Player 1 03:38:40 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed"} 
 Player 1 03:38:40 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed"} 
 Player 1 03:38:40 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed"} 
 Player 1 03:38:40 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed \n2:Player 2 is rolling against Greed<Monster>"} 
 Player 1 03:38:40 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed \n2:Player 2 is rolling against Greed<Monster>"} 
 Player 1 03:38:40 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed \n2:Player 2 is rolling against Greed<Monster>"} 
 Player 1 03:38:40 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed \n2:Player 2 is rolling against Greed<Monster>"} 
 Player 1 03:38:40 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:38:41 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed"} 
 Player 1 03:38:41 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed"} 
 Player 1 03:38:41 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by undefined"} 
 Player 1 03:38:41 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by undefined"} 
 Player 1 03:38:41 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by undefined"} 
 Player 1 03:38:41 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by undefined"} 
 Player 1 03:38:41 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed \n2:[object Object] killed by undefined"} 
 Player 1 03:38:41 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed \n2:[object Object] killed by undefined"} 
 Player 1 03:38:41 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed \n2:[object Object] killed by undefined"} 
 Player 1 03:38:41 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:The Lost combat damage to Greed \n2:[object Object] killed by undefined"} 
 Player 1 03:38:41 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:38:42 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by undefined"} 
 Player 1 03:38:42 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by undefined"} 
 Player 1 03:38:42 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Greed<Monster> reward"} 
 Player 1 03:38:42 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Greed<Monster> reward"} 
 Player 1 03:38:42 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Greed<Monster> reward"} 
 Player 1 03:38:42 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Greed<Monster> reward"} 
 Player 1 03:38:42 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Greed<Monster> reward \n2:[object Object] killed by undefined"} 
 Player 1 03:38:42 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Greed<Monster> reward \n2:[object Object] killed by undefined"} 
 Player 1 03:38:42 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Greed<Monster> reward \n2:[object Object] killed by undefined"} 
 Player 1 03:38:42 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Greed<Monster> reward \n2:[object Object] killed by undefined"} 
 Player 1 03:38:42 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:38:43 $MOVE_CARD_END:  
 {"moveIndex":29,"cardId":229,"flipIfFlipped":true,"playerId":2} 
 Player 1 03:38:44 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Greed<Monster> reward"} 
 Player 1 03:38:44 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Greed<Monster> reward"} 
 Player 1 03:38:44 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Greed<Monster> reward \n2:Refill holder2 slot"} 
 Player 1 03:38:44 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Greed<Monster> reward \n2:Refill holder2 slot"} 
 Player 1 03:38:44 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:38:44 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Greed<Monster> reward \n2:Refill holder2 slot"} 
 Player 1 03:38:44 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Greed<Monster> reward \n2:Refill holder2 slot"} 
 Player 1 03:38:44 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:38:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Greed<Monster> reward"} 
 Player 1 03:38:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Greed<Monster> reward"} 
 Player 1 03:38:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Greed<Monster> reward \n2:Player 2 is about to buy TopBlankCard for 10"} 
 Player 1 03:38:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Greed<Monster> reward \n2:Player 2 is about to buy TopBlankCard for 10"} 
 Player 1 03:38:50 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:38:51 $MOVE_CARD_END:  
 {"moveIndex":30,"cardId":156,"flipIfFlipped":true,"playerId":2} 
 Player 1 03:38:51 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Greed<Monster> reward \n2:Player 2 is about to buy TopBlankCard for 10"} 
 Player 1 03:38:51 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Greed<Monster> reward \n2:Player 2 is about to buy TopBlankCard for 10"} 
 Player 1 03:38:52 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:39:10 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Greed<Monster> reward"} 
 Player 1 03:39:10 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Greed<Monster> reward"} 
 Player 1 03:39:10 $MOVE_CARD_END:  
 {"moveIndex":31,"cardId":10,"flipIfFlipped":true,"playerId":2} 
 Player 1 03:39:11 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Greed<Monster> reward \n2:Player 2 play 1 Penny(2) "} 
 Player 1 03:39:11 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Greed<Monster> reward \n2:Player 2 play 1 Penny(2) "} 
 Player 1 03:39:11 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:39:13 $MOVE_CARD_END:  
 {"moveIndex":32,"cardId":10,"flipIfFlipped":true,"playerId":2} 
 Player 1 03:39:14 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Greed<Monster> reward \n2:Player 2 play 1 Penny(2) "} 
 Player 1 03:39:14 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Greed<Monster> reward \n2:Player 2 play 1 Penny(2) "} 
 Player 1 03:39:14 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Greed<Monster> reward \n2:Player 2 play 1 Penny(2) "} 
 Player 1 03:39:14 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Greed<Monster> reward \n2:Player 2 play 1 Penny(2) "} 
 Player 1 03:39:14 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:39:16 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:39:16 $RECHARGE_ITEM:  
 {"cardId":260} 
 Player 1 03:39:16 $PLAYER_RECHARGE_ITEM:  
 {"playerId":1,"cardId":260} 
 Player 1 03:39:16 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:39:16 $NEXT_STACK_ID:  
 Player 1 03:39:16 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:39:16 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 03:39:16 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":55,"creatorCardId":260,"turnPlayerCardId":260,"stackEffectType":13}} 
 Player 1 03:39:16 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":171,"_text":"Add StartTurnLoot 55 "}} 
 Player 1 03:39:16 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:39:16 $ACTION_MASSAGE_REMOVE:  
 {"id":171} 
 Player 1 03:39:17 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 03:39:17 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":55,"creatorCardId":260,"turnPlayerCardId":260,"stackEffectType":13}} 
 Player 1 03:39:17 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":172,"_text":"Response Adding StartTurnLoot 55"},"childOfId":171} 
 Player 1 03:39:17 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":173,"_text":"Wait For Response From Player 1 "},"childOfId":171} 
 Player 1 03:39:17 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:39:17 $ACTION_MASSAGE_REMOVE:  
 {"id":173} 
 Player 1 03:39:17 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":174,"_text":"Wait For Response From Player 2 "},"childOfId":171} 
 Player 1 03:39:17 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:39:17 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:39:17 $ACTION_MASSAGE_REMOVE:  
 {"id":174} 
 Player 1 03:39:17 $ACTION_MASSAGE_REMOVE:  
 {"id":172} 
 Player 1 03:39:17 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":175,"_text":"Resolve StartTurnLoot 55 "}} 
 Player 1 03:39:17 $DRAW_CARD:  
 {"deckType":1} 
 Player 1 03:39:17 $MOVE_CARD:  
 {"moveIndex":33,"cardId":60,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 1 03:39:18 $CARD_DRAWN:  
 {"playerId":1,"deckType":1,"drawnCardId":60} 
 Player 1 03:39:18 $FLIP_CARD:  
 {"cardId":60} 
 Player 1 03:39:18 $PLAYER_GET_LOOT:  
 {"playerId":1,"cardId":60} 
 Player 1 03:39:18 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 03:39:18 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":55,"creatorCardId":260,"turnPlayerCardId":260,"stackEffectType":13}} 
 Player 1 03:39:18 $ACTION_MASSAGE_REMOVE:  
 {"id":175} 
 Player 1 03:39:18 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":176,"_text":"Remove After Resolve StartTurnLoot 55  "}} 
 Player 1 03:39:18 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:39:18 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":55,"creatorCardId":260,"turnPlayerCardId":260,"stackEffectType":13}} 
 Player 1 03:39:18 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":177,"_text":"Response Remove After Resolve StartTurnLoot 55"},"childOfId":176} 
 Player 1 03:39:18 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":178,"_text":"Wait For Response From Player 2 "},"childOfId":176} 
 Player 1 03:39:18 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:39:18 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:39:18 $ACTION_MASSAGE_REMOVE:  
 {"id":178} 
 Player 1 03:39:18 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":179,"_text":"Wait For Response From Player 1 "},"childOfId":176} 
 Player 1 03:39:18 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:39:18 $ACTION_MASSAGE_REMOVE:  
 {"id":179} 
 Player 1 03:39:18 $ACTION_MASSAGE_REMOVE:  
 {"id":177} 
 Player 1 03:39:19 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":180,"_text":"Stack Was Emptied "}} 
 Player 1 03:39:19 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:39:19 $ACTION_MASSAGE_REMOVE:  
 {"id":176} 
 Player 1 03:39:20 $ACTION_MASSAGE_REMOVE:  
 {"id":180} 
 Player 1 03:39:21 $ACTION_MASSAGE_REMOVE:  
 {"id":176} 
 Player 1 03:40:26 $NEXT_STACK_ID:  
 Player 1 03:40:26 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:40:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play 4 Cents(0) "} 
 Player 1 03:40:26 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":56,"creatorCardId":260,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":60,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 1 03:40:26 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":181,"_text":"Add PlayLootCardStackEffect 56 "}} 
 Player 1 03:40:26 $PLAYER_LOSE_LOOT:  
 {"playerId":1,"cardId":60} 
 Player 1 03:40:26 $MOVE_CARD:  
 {"moveIndex":34,"cardId":60,"placeID":278,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 03:40:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play 4 Cents(0): addMoney"} 
 Player 1 03:40:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play 4 Cents(0): addMoney"} 
 Player 1 03:40:26 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:40:26 $ACTION_MASSAGE_REMOVE:  
 {"id":181} 
 Player 1 03:40:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play 4 Cents(0): addMoney"} 
 Player 1 03:40:26 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":56,"creatorCardId":260,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":60,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":60,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 03:40:26 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":182,"_text":"Response Adding PlayLootCardStackEffect 56"},"childOfId":181} 
 Player 1 03:40:26 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":183,"_text":"Wait For Response From Player 1 "},"childOfId":181} 
 Player 1 03:40:26 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:40:26 $ACTION_MASSAGE_REMOVE:  
 {"id":183} 
 Player 1 03:40:26 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":184,"_text":"Wait For Response From Player 2 "},"childOfId":181} 
 Player 1 03:40:26 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:40:26 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:40:27 $ACTION_MASSAGE_REMOVE:  
 {"id":184} 
 Player 1 03:40:27 $ACTION_MASSAGE_REMOVE:  
 {"id":182} 
 Player 1 03:40:27 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":185,"_text":"Resolve PlayLootCardStackEffect 56 "}} 
 Player 1 03:40:27 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play 4 Cents(0): addMoney"} 
 Player 1 03:40:27 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":60,"particleType":6} 
 Player 1 03:40:29 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":60,"particleType":6} 
 Player 1 03:40:29 $CHANGE_MONEY:  
 {"playerId":1,"numOfCoins":4} 
 Player 1 03:40:29 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":260,"scopeIsPlayer":true,"index":20,"originStackId":-1},"isAfterActivation":true,"index":20} 
 Player 1 03:40:29 $MOVE_CARD:  
 {"moveIndex":35,"cardId":60,"placeID":279,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 03:40:29 $MOVE_CARD_TO_PILE:  
 {"type":1,"cardId":60} 
 Player 1 03:40:29 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play 4 Cents(0): addMoney"} 
 Player 1 03:40:29 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":56,"creatorCardId":260,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":60,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 03:40:29 $ACTION_MASSAGE_REMOVE:  
 {"id":185} 
 Player 1 03:40:29 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":186,"_text":"Remove After Resolve PlayLootCardStackEffect 56  "}} 
 Player 1 03:40:29 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:40:29 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":56,"creatorCardId":260,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":60,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 03:40:29 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":187,"_text":"Response Remove After Resolve PlayLootCardStackEffect 56"},"childOfId":186} 
 Player 1 03:40:29 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":188,"_text":"Wait For Response From Player 2 "},"childOfId":186} 
 Player 1 03:40:29 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:40:29 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:40:30 $ACTION_MASSAGE_REMOVE:  
 {"id":188} 
 Player 1 03:40:30 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":189,"_text":"Wait For Response From Player 1 "},"childOfId":186} 
 Player 1 03:40:30 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:40:30 $ACTION_MASSAGE_REMOVE:  
 {"id":189} 
 Player 1 03:40:30 $ACTION_MASSAGE_REMOVE:  
 {"id":187} 
 Player 1 03:40:30 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":190,"_text":"Stack Was Emptied "}} 
 Player 1 03:40:30 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:40:30 $ACTION_MASSAGE_REMOVE:  
 {"id":186} 
 Player 1 03:40:31 $ACTION_MASSAGE_REMOVE:  
 {"id":190} 
 Player 1 03:40:32 $ACTION_MASSAGE_REMOVE:  
 {"id":186} 
 Player 1 03:40:33 $NEXT_STACK_ID:  
 Player 1 03:40:33 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:40:33 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to buy TopBlankCard for 10"} 
 Player 1 03:40:33 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":57,"creatorCardId":260,"itemToPurchaseCardId":0,"playerWhoBuysCardId":260,"cost":10,"stackEffectType":9}} 
 Player 1 03:40:33 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":191,"_text":"Add PurchaseItem 57 "}} 
 Player 1 03:40:33 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:40:33 $ACTION_MASSAGE_REMOVE:  
 {"id":191} 
 Player 1 03:40:33 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to buy TopBlankCard for 10"} 
 Player 1 03:40:33 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":57,"creatorCardId":260,"itemToPurchaseCardId":0,"playerWhoBuysCardId":260,"cost":10,"stackEffectType":9}} 
 Player 1 03:40:33 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":192,"_text":"Response Adding PurchaseItem 57"},"childOfId":191} 
 Player 1 03:40:33 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":193,"_text":"Wait For Response From Player 1 "},"childOfId":191} 
 Player 1 03:40:33 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:40:33 $ACTION_MASSAGE_REMOVE:  
 {"id":193} 
 Player 1 03:40:33 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":194,"_text":"Wait For Response From Player 2 "},"childOfId":191} 
 Player 1 03:40:33 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:40:33 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:40:34 $ACTION_MASSAGE_REMOVE:  
 {"id":194} 
 Player 1 03:40:34 $ACTION_MASSAGE_REMOVE:  
 {"id":192} 
 Player 1 03:40:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":195,"_text":"Resolve PurchaseItem 57 "}} 
 Player 1 03:40:34 $CHANGE_MONEY:  
 {"playerId":1,"numOfCoins":-10} 
 Player 1 03:40:34 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-10}],"result":null,"preventMethod":false,"methodScopeId":260,"scopeIsPlayer":true,"index":21,"originStackId":-1},"isAfterActivation":true,"index":21} 
 Player 1 03:40:34 $DRAW_CARD:  
 {"deckType":5} 
 Player 1 03:40:34 $REGISTER_PASSIVE_ITEM:  
 {"cardId":183} 
 Player 1 03:40:34 $MOVE_CARD:  
 {"moveIndex":36,"cardId":183,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 
 Player 1 03:40:34 $ADD_AN_ITEM:  
 {"playerId":1,"cardId":183,"isReward":false} 
 Player 1 03:40:34 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":183}],"result":true,"preventMethod":false,"methodScopeId":260,"scopeIsPlayer":true,"index":22,"originStackId":-1},"isAfterActivation":true,"index":22} 
 Player 1 03:40:34 $NEXT_STACK_ID:  
 Player 1 03:40:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to buy TopBlankCard for 10"} 
 Player 1 03:40:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to buy TopBlankCard for 10 \n2:Activate Placenta effect GainStats<GainStats>"} 
 Player 1 03:40:34 $ADD_TO_STACK:  
 {"stackEffect":{"effectCollectedData":null,"entityId":58,"creatorCardId":260,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":183,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":1,"cardId":183,"effctType":0},"isAfterActivation":true,"index":22,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 03:40:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":196,"_text":"Add ActivatePassiveEffect 58 "}} 
 Player 1 03:40:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to buy TopBlankCard for 10 \n2:Activate Placenta effect GainStats<GainStats>"} 
 Player 1 03:40:34 $ACTION_MASSAGE_REMOVE:  
 {"id":196} 
 Player 1 03:40:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to buy TopBlankCard for 10 \n2:Activate Placenta effect GainStats<GainStats>"} 
 Player 1 03:40:34 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"effectCollectedData":{"effectTargets":[260],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":260,"effectCardPlayer":260},"entityId":58,"creatorCardId":260,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":183,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":1,"cardId":183,"effctType":0},"isAfterActivation":true,"index":22,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 03:40:35 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":197,"_text":"Response Adding ActivatePassiveEffect 58"},"childOfId":196} 
 Player 1 03:40:35 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":198,"_text":"Wait For Response From Player 2 "},"childOfId":196} 
 Player 1 03:40:35 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:40:35 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:40:35 $ACTION_MASSAGE_REMOVE:  
 {"id":198} 
 Player 1 03:40:35 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":199,"_text":"Wait For Response From Player 1 "},"childOfId":196} 
 Player 1 03:40:35 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:40:35 $ACTION_MASSAGE_REMOVE:  
 {"id":199} 
 Player 1 03:40:35 $ACTION_MASSAGE_REMOVE:  
 {"id":197} 
 Player 1 03:40:35 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":200,"_text":"Resolve ActivatePassiveEffect 58 "}} 
 Player 1 03:40:35 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":183,"particleType":6} 
 Player 1 03:40:37 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":183,"particleType":6} 
 Player 1 03:40:37 $PLAYER_GAIN_HP:  
 {"playerId":1,"hpToGain":1,"isTemp":false} 
 Player 1 03:40:37 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":183}],"result":true,"preventMethod":false,"methodScopeId":260,"scopeIsPlayer":true,"index":22,"originStackId":-1},"isAfterActivation":true,"index":22} 
 Player 1 03:40:37 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to buy TopBlankCard for 10 \n2:Activate Placenta effect GainStats<GainStats>"} 
 Player 1 03:40:37 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"effectCollectedData":{"effectTargets":[260],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":260,"effectCardPlayer":260},"entityId":58,"creatorCardId":260,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":183,"isAfterActivation":true,"index":22,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 03:40:37 $ACTION_MASSAGE_REMOVE:  
 {"id":200} 
 Player 1 03:40:37 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":201,"_text":"Remove After Resolve ActivatePassiveEffect 58  "}} 
 Player 1 03:40:37 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is about to buy TopBlankCard for 10"} 
 Player 1 03:40:37 $REMOVE_FROM_STACK:  
 {"stackEffect":{"effectCollectedData":{"effectTargets":[260],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":260,"effectCardPlayer":260},"entityId":58,"creatorCardId":260,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":183,"isAfterActivation":true,"index":22,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 03:40:37 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":202,"_text":"Response Remove After Resolve ActivatePassiveEffect 58"},"childOfId":201} 
 Player 1 03:40:37 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":203,"_text":"Wait For Response From Player 1 "},"childOfId":201} 
 Player 1 03:40:37 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:40:37 $ACTION_MASSAGE_REMOVE:  
 {"id":203} 
 Player 1 03:40:37 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":204,"_text":"Wait For Response From Player 2 "},"childOfId":201} 
 Player 1 03:40:37 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:40:37 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:40:38 $ACTION_MASSAGE_REMOVE:  
 {"id":204} 
 Player 1 03:40:38 $ACTION_MASSAGE_REMOVE:  
 {"id":202} 
 Player 1 03:40:38 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":205,"_text":"Resolve PurchaseItem 57 "}} 
 Player 1 03:40:38 $ACTION_MASSAGE_REMOVE:  
 {"id":195} 
 Player 1 03:40:38 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":206,"_text":"Remove After Resolve PurchaseItem 57  "}} 
 Player 1 03:40:38 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:40:38 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":57,"creatorCardId":260,"itemToPurchaseCardId":0,"playerWhoBuysCardId":260,"cost":10,"stackEffectType":9}} 
 Player 1 03:40:38 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":207,"_text":"Response Remove After Resolve PurchaseItem 57"},"childOfId":206} 
 Player 1 03:40:38 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":208,"_text":"Wait For Response From Player 2 "},"childOfId":206} 
 Player 1 03:40:38 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:40:38 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:40:38 $ACTION_MASSAGE_REMOVE:  
 {"id":208} 
 Player 1 03:40:38 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":209,"_text":"Wait For Response From Player 1 "},"childOfId":206} 
 Player 1 03:40:38 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:40:38 $ACTION_MASSAGE_REMOVE:  
 {"id":209} 
 Player 1 03:40:38 $ACTION_MASSAGE_REMOVE:  
 {"id":207} 
 Player 1 03:40:38 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":210,"_text":"Stack Was Emptied "}} 
 Player 1 03:40:38 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:40:38 $ACTION_MASSAGE_REMOVE:  
 {"id":195} 
 Player 1 03:40:39 $ACTION_MASSAGE_REMOVE:  
 {"id":201} 
 Player 1 03:40:40 $ACTION_MASSAGE_REMOVE:  
 {"id":210} 
 Player 1 03:40:40 $ACTION_MASSAGE_REMOVE:  
 {"id":201} 
 Player 1 03:40:41 $ACTION_MASSAGE_REMOVE:  
 {"id":206} 
 Player 1 03:41:09 $NEXT_STACK_ID:  
 Player 1 03:41:09 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:41:09 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 activated Azazel"} 
 Player 1 03:41:09 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":59,"creatorCardId":260,"hasLockingStackEffect":false,"itemToPlayCardId":260,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 1 03:41:09 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":211,"_text":"Add ActivateItem 59 "}} 
 Player 1 03:41:12 $USE_ITEM:  
 {"cardId":260} 
 Player 1 03:41:12 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:41:12 $ACTION_MASSAGE_REMOVE:  
 {"id":211} 
 Player 1 03:41:12 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 activated Azazel"} 
 Player 1 03:41:12 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":59,"creatorCardId":260,"hasLockingStackEffect":false,"itemToPlayCardId":260,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 03:41:12 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":212,"_text":"Response Adding ActivateItem 59"},"childOfId":211} 
 Player 1 03:41:12 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":213,"_text":"Wait For Response From Player 1 "},"childOfId":211} 
 Player 1 03:41:12 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:41:12 $ACTION_MASSAGE_REMOVE:  
 {"id":213} 
 Player 1 03:41:12 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":214,"_text":"Wait For Response From Player 2 "},"childOfId":211} 
 Player 1 03:41:12 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:41:12 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:41:12 $ACTION_MASSAGE_REMOVE:  
 {"id":214} 
 Player 1 03:41:12 $ACTION_MASSAGE_REMOVE:  
 {"id":212} 
 Player 1 03:41:12 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":215,"_text":"Resolve ActivateItem 59 "}} 
 Player 1 03:41:12 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":260,"particleType":6} 
 Player 1 03:41:14 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":260,"particleType":6} 
 Player 1 03:41:14 $NEXT_STACK_ID:  
 Player 1 03:41:14 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 activated Azazel"} 
 Player 1 03:41:14 $PLAYER_LOSE_LOOT:  
 {"playerId":1,"cardId":126} 
 Player 1 03:41:14 $MOVE_CARD:  
 {"moveIndex":37,"cardId":126,"placeID":278,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 03:41:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Strength: ChainEffects \n2:Player 1 activated Azazel"} 
 Player 1 03:41:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Strength: ChainEffects \n2:Player 1 activated Azazel"} 
 Player 1 03:41:23 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:41:23 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Strength: ChainEffects \n2:Player 1 activated Azazel"} 
 Player 1 03:41:23 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":60,"creatorCardId":260,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":126,"lootPlayerId":1,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":126,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 03:41:23 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Strength: ChainEffects \n2:Player 1 activated Azazel"} 
 Player 1 03:41:23 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Strength: ChainEffects \n2:Player 1 activated Azazel"} 
 Player 1 03:41:23 $REPLACE_STACK:  
 {"currentStack":[{"entityId":60,"creatorCardId":260,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":126,"lootPlayerId":1,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":126,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":59,"creatorCardId":260,"hasLockingStackEffect":false,"itemToPlayCardId":260,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 
 Player 1 03:41:23 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Strength: ChainEffects \n2:Player 1 activated Azazel"} 
 Player 1 03:41:23 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":59,"creatorCardId":260,"hasLockingStackEffect":false,"itemToPlayCardId":260,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 03:41:23 $ACTION_MASSAGE_REMOVE:  
 {"id":215} 
 Player 1 03:41:23 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":216,"_text":"Remove After Resolve ActivateItem 59  "}} 
 Player 1 03:41:23 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Strength: ChainEffects"} 
 Player 1 03:41:23 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":59,"creatorCardId":260,"hasLockingStackEffect":false,"itemToPlayCardId":260,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 03:41:23 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":217,"_text":"Response Remove After Resolve ActivateItem 59"},"childOfId":216} 
 Player 1 03:41:23 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":218,"_text":"Wait For Response From Player 1 "},"childOfId":216} 
 Player 1 03:41:23 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:41:23 $ACTION_MASSAGE_REMOVE:  
 {"id":218} 
 Player 1 03:41:23 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":219,"_text":"Wait For Response From Player 2 "},"childOfId":216} 
 Player 1 03:41:23 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:41:23 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:41:24 $ACTION_MASSAGE_REMOVE:  
 {"id":219} 
 Player 1 03:41:24 $ACTION_MASSAGE_REMOVE:  
 {"id":217} 
 Player 1 03:41:24 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":220,"_text":"Resolve PlayLootCardStackEffect 60 "}} 
 Player 1 03:41:24 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Strength: ChainEffects"} 
 Player 1 03:41:24 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":126,"particleType":6} 
 Player 1 03:41:26 $ACTION_MASSAGE_REMOVE:  
 {"id":216} 
 Player 1 03:41:26 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":126,"particleType":6} 
 Player 1 03:41:26 $PLAYER_GAIN_DMG:  
 {"playerId":1,"DMGToGain":1,"isTemp":false} 
 Player 1 03:41:26 $MOVE_CARD:  
 {"moveIndex":38,"cardId":126,"placeID":279,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 03:41:26 $MOVE_CARD_TO_PILE:  
 {"type":1,"cardId":126} 
 Player 1 03:41:26 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Strength: ChainEffects"} 
 Player 1 03:41:26 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":60,"creatorCardId":260,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":126,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 03:41:26 $ACTION_MASSAGE_REMOVE:  
 {"id":220} 
 Player 1 03:41:26 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":221,"_text":"Remove After Resolve PlayLootCardStackEffect 60  "}} 
 Player 1 03:41:26 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:41:26 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":60,"creatorCardId":260,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":126,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 03:41:27 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":222,"_text":"Response Remove After Resolve PlayLootCardStackEffect 60"},"childOfId":221} 
 Player 1 03:41:27 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":223,"_text":"Wait For Response From Player 2 "},"childOfId":221} 
 Player 1 03:41:27 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:41:27 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:41:27 $ACTION_MASSAGE_REMOVE:  
 {"id":223} 
 Player 1 03:41:27 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":224,"_text":"Wait For Response From Player 1 "},"childOfId":221} 
 Player 1 03:41:27 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:41:27 $ACTION_MASSAGE_REMOVE:  
 {"id":224} 
 Player 1 03:41:27 $ACTION_MASSAGE_REMOVE:  
 {"id":222} 
 Player 1 03:41:27 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":225,"_text":"Stack Was Emptied "}} 
 Player 1 03:41:27 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:41:27 $ACTION_MASSAGE_REMOVE:  
 {"id":221} 
 Player 1 03:41:28 $NEXT_STACK_ID:  
 Player 1 03:41:28 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:41:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1  declared attack on Chub"} 
 Player 1 03:41:28 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":61,"creatorCardId":260,"attackingPlayerCardId":260,"idOfCardBeingAttacked":212,"stackEffectType":4}} 
 Player 1 03:41:28 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":226,"_text":"Add DeclareAttack 61 "}} 
 Player 1 03:41:28 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:41:28 $ACTION_MASSAGE_REMOVE:  
 {"id":226} 
 Player 1 03:41:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1  declared attack on Chub"} 
 Player 1 03:41:28 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":61,"creatorCardId":260,"attackingPlayerCardId":260,"idOfCardBeingAttacked":212,"stackEffectType":4}} 
 Player 1 03:41:28 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":227,"_text":"Response Adding DeclareAttack 61"},"childOfId":226} 
 Player 1 03:41:28 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":228,"_text":"Wait For Response From Player 1 "},"childOfId":226} 
 Player 1 03:41:28 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:41:28 $ACTION_MASSAGE_REMOVE:  
 {"id":228} 
 Player 1 03:41:28 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":229,"_text":"Wait For Response From Player 2 "},"childOfId":226} 
 Player 1 03:41:28 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:41:28 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:41:28 $ACTION_MASSAGE_REMOVE:  
 {"id":229} 
 Player 1 03:41:28 $ACTION_MASSAGE_REMOVE:  
 {"id":227} 
 Player 1 03:41:28 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":230,"_text":"Resolve DeclareAttack 61 "}} 
 Player 1 03:41:28 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":212,"particleType":5} 
 Player 1 03:41:28 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":260,"scopeIsPlayer":true,"index":23,"originStackId":61},"isAfterActivation":true,"index":23} 
 Player 1 03:41:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1  declared attack on Chub"} 
 Player 1 03:41:28 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":61,"creatorCardId":260,"attackingPlayerCardId":260,"idOfCardBeingAttacked":212,"stackEffectType":4}} 
 Player 1 03:41:28 $ACTION_MASSAGE_REMOVE:  
 {"id":230} 
 Player 1 03:41:28 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":231,"_text":"Remove After Resolve DeclareAttack 61  "}} 
 Player 1 03:41:29 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:41:29 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":61,"creatorCardId":260,"attackingPlayerCardId":260,"idOfCardBeingAttacked":212,"stackEffectType":4}} 
 Player 1 03:41:29 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":232,"_text":"Response Remove After Resolve DeclareAttack 61"},"childOfId":231} 
 Player 1 03:41:29 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":233,"_text":"Wait For Response From Player 2 "},"childOfId":231} 
 Player 1 03:41:29 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:41:29 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:41:29 $ACTION_MASSAGE_REMOVE:  
 {"id":225} 
 Player 1 03:41:29 $ACTION_MASSAGE_REMOVE:  
 {"id":233} 
 Player 1 03:41:29 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":234,"_text":"Wait For Response From Player 1 "},"childOfId":231} 
 Player 1 03:41:29 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:41:29 $ACTION_MASSAGE_REMOVE:  
 {"id":234} 
 Player 1 03:41:29 $ACTION_MASSAGE_REMOVE:  
 {"id":232} 
 Player 1 03:41:29 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":235,"_text":"Stack Was Emptied "}} 
 Player 1 03:41:29 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:41:29 $ACTION_MASSAGE_REMOVE:  
 {"id":221} 
 Player 1 03:41:29 $ACTION_MASSAGE_REMOVE:  
 {"id":221} 
 Player 1 03:41:30 $ACTION_MASSAGE_REMOVE:  
 {"id":235} 
 Player 1 03:41:31 $ACTION_MASSAGE_REMOVE:  
 {"id":231} 
 Player 1 03:41:32 $NEXT_STACK_ID:  
 Player 1 03:41:32 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:41:32 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Chub<Monster>"} 
 Player 1 03:41:32 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":62,"creatorCardId":260,"rollingPlayerCardId":260,"stackEffectType":2,"attackedMonsterCardId":212}} 
 Player 1 03:41:32 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":236,"_text":"Add AttackRoll 62 "}} 
 Player 1 03:41:32 $ROLL_DICE:  
 {"playerId":1} 
 Player 1 03:41:33 $ROLL_DICE_ENDED:  
 {"playerId":1,"numberRolled":6} 
 Player 1 03:41:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 6 vs Chub<Monster>"} 
 Player 1 03:41:34 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:41:34 $ACTION_MASSAGE_REMOVE:  
 {"id":236} 
 Player 1 03:41:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 6 vs Chub<Monster>"} 
 Player 1 03:41:34 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":62,"creatorCardId":260,"numberRolled":6,"rollingPlayerCardId":260,"stackEffectType":2,"attackedMonsterCardId":212}} 
 Player 1 03:41:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":237,"_text":"Response Adding AttackRoll 62"},"childOfId":236} 
 Player 1 03:41:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":238,"_text":"Wait For Response From Player 1 "},"childOfId":236} 
 Player 1 03:41:34 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:41:34 $ACTION_MASSAGE_REMOVE:  
 {"id":238} 
 Player 1 03:41:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":239,"_text":"Wait For Response From Player 2 "},"childOfId":236} 
 Player 1 03:41:34 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:41:34 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:41:34 $ACTION_MASSAGE_REMOVE:  
 {"id":239} 
 Player 1 03:41:34 $ACTION_MASSAGE_REMOVE:  
 {"id":237} 
 Player 1 03:41:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":240,"_text":"Resolve AttackRoll 62 "}} 
 Player 1 03:41:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":241,"_text":"Added 0 to original roll"}} 
 Player 1 03:41:34 $NEXT_STACK_ID:  
 Player 1 03:41:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 6 vs Chub<Monster>"} 
 Player 1 03:41:34 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:41:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Chub \n2:Player 1 rolled 6 vs Chub<Monster>"} 
 Player 1 03:41:34 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":63,"creatorCardId":260,"entityToDoDamageCardId":260,"entityToTakeDamageCardId":212,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 03:41:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Chub \n2:Player 1 rolled 6 vs Chub<Monster>"} 
 Player 1 03:41:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Chub \n2:Player 1 rolled 6 vs Chub<Monster>"} 
 Player 1 03:41:34 $REPLACE_STACK:  
 {"currentStack":[{"entityId":63,"creatorCardId":260,"entityToDoDamageCardId":260,"entityToTakeDamageCardId":212,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":62,"creatorCardId":260,"numberRolled":6,"rollingPlayerCardId":260,"stackEffectType":2,"attackedMonsterCardId":212}]} 
 Player 1 03:41:34 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":6},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":260,"scopeIsPlayer":true,"index":24,"originStackId":62},"isAfterActivation":true,"index":24} 
 Player 1 03:41:34 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Chub \n2:Player 1 rolled 6 vs Chub<Monster>"} 
 Player 1 03:41:34 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":62,"creatorCardId":260,"numberRolled":6,"rollingPlayerCardId":260,"stackEffectType":2,"attackedMonsterCardId":212}} 
 Player 1 03:41:34 $ACTION_MASSAGE_REMOVE:  
 {"id":240} 
 Player 1 03:41:34 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":242,"_text":"Remove After Resolve AttackRoll 62  "}} 
 Player 1 03:41:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Chub"} 
 Player 1 03:41:35 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":62,"creatorCardId":260,"numberRolled":6,"rollingPlayerCardId":260,"stackEffectType":2,"attackedMonsterCardId":212}} 
 Player 1 03:41:35 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":243,"_text":"Response Remove After Resolve AttackRoll 62"},"childOfId":242} 
 Player 1 03:41:35 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":244,"_text":"Wait For Response From Player 1 "},"childOfId":242} 
 Player 1 03:41:35 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:41:35 $ACTION_MASSAGE_REMOVE:  
 {"id":244} 
 Player 1 03:41:35 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":245,"_text":"Wait For Response From Player 2 "},"childOfId":242} 
 Player 1 03:41:35 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:41:35 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:41:35 $ACTION_MASSAGE_REMOVE:  
 {"id":245} 
 Player 1 03:41:35 $ACTION_MASSAGE_REMOVE:  
 {"id":243} 
 Player 1 03:41:35 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":246,"_text":"Resolve CombatDamage 63 "}} 
 Player 1 03:41:35 $MONSTER_GET_DAMAGED:  
 {"cardId":212,"hpLeft":2,"damageDealerId":260} 
 Player 1 03:41:35 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":260}],"result":null,"preventMethod":false,"methodScopeId":212,"scopeIsPlayer":false,"index":25,"originStackId":-1},"isAfterActivation":true,"index":25} 
 Player 1 03:41:35 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":2},{"type":2,"number":6},{"type":0,"number":260},{"type":0,"number":212}],"result":null,"preventMethod":false,"methodScopeId":260,"scopeIsPlayer":true,"index":26,"originStackId":63},"isAfterActivation":true,"index":26} 
 Player 1 03:41:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Chub"} 
 Player 1 03:41:35 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":63,"creatorCardId":260,"entityToDoDamageCardId":260,"entityToTakeDamageCardId":212,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 03:41:35 $ACTION_MASSAGE_REMOVE:  
 {"id":246} 
 Player 1 03:41:36 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":247,"_text":"Remove After Resolve CombatDamage 63  "}} 
 Player 1 03:41:36 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:41:36 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":63,"creatorCardId":260,"entityToDoDamageCardId":260,"entityToTakeDamageCardId":212,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 03:41:36 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":248,"_text":"Response Remove After Resolve CombatDamage 63"},"childOfId":247} 
 Player 1 03:41:36 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":249,"_text":"Wait For Response From Player 2 "},"childOfId":247} 
 Player 1 03:41:36 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:41:36 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:41:36 $ACTION_MASSAGE_REMOVE:  
 {"id":249} 
 Player 1 03:41:36 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":250,"_text":"Wait For Response From Player 1 "},"childOfId":247} 
 Player 1 03:41:36 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:41:36 $ACTION_MASSAGE_REMOVE:  
 {"id":250} 
 Player 1 03:41:36 $ACTION_MASSAGE_REMOVE:  
 {"id":248} 
 Player 1 03:41:36 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":251,"_text":"Stack Was Emptied "}} 
 Player 1 03:41:36 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:41:36 $ACTION_MASSAGE_REMOVE:  
 {"id":240} 
 Player 1 03:41:36 $ACTION_MASSAGE_REMOVE:  
 {"id":242} 
 Player 1 03:41:37 $ACTION_MASSAGE_REMOVE:  
 {"id":241} 
 Player 1 03:41:37 $ACTION_MASSAGE_REMOVE:  
 {"id":242} 
 Player 1 03:41:37 $ACTION_MASSAGE_REMOVE:  
 {"id":251} 
 Player 1 03:41:38 $ACTION_MASSAGE_REMOVE:  
 {"id":247} 
 Player 1 03:41:39 $NEXT_STACK_ID:  
 Player 1 03:41:39 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:41:39 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Chub<Monster>"} 
 Player 1 03:41:39 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":64,"creatorCardId":260,"rollingPlayerCardId":260,"stackEffectType":2,"attackedMonsterCardId":212}} 
 Player 1 03:41:39 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":252,"_text":"Add AttackRoll 64 "}} 
 Player 1 03:41:39 $ROLL_DICE:  
 {"playerId":1} 
 Player 1 03:41:41 $ROLL_DICE_ENDED:  
 {"playerId":1,"numberRolled":6} 
 Player 1 03:41:41 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 6 vs Chub<Monster>"} 
 Player 1 03:41:41 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:41:41 $ACTION_MASSAGE_REMOVE:  
 {"id":252} 
 Player 1 03:41:41 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 6 vs Chub<Monster>"} 
 Player 1 03:41:41 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":64,"creatorCardId":260,"numberRolled":6,"rollingPlayerCardId":260,"stackEffectType":2,"attackedMonsterCardId":212}} 
 Player 1 03:41:41 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":253,"_text":"Response Adding AttackRoll 64"},"childOfId":252} 
 Player 1 03:41:41 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":254,"_text":"Wait For Response From Player 1 "},"childOfId":252} 
 Player 1 03:41:41 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:41:41 $ACTION_MASSAGE_REMOVE:  
 {"id":254} 
 Player 1 03:41:41 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":255,"_text":"Wait For Response From Player 2 "},"childOfId":252} 
 Player 1 03:41:41 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:41:41 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:41:42 $ACTION_MASSAGE_REMOVE:  
 {"id":255} 
 Player 1 03:41:42 $ACTION_MASSAGE_REMOVE:  
 {"id":253} 
 Player 1 03:41:42 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":256,"_text":"Resolve AttackRoll 64 "}} 
 Player 1 03:41:42 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":257,"_text":"Added 0 to original roll"}} 
 Player 1 03:41:42 $NEXT_STACK_ID:  
 Player 1 03:41:42 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 6 vs Chub<Monster>"} 
 Player 1 03:41:42 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:41:42 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Chub \n2:Player 1 rolled 6 vs Chub<Monster>"} 
 Player 1 03:41:42 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":65,"creatorCardId":260,"entityToDoDamageCardId":260,"entityToTakeDamageCardId":212,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 03:41:42 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Chub \n2:Player 1 rolled 6 vs Chub<Monster>"} 
 Player 1 03:41:42 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Chub \n2:Player 1 rolled 6 vs Chub<Monster>"} 
 Player 1 03:41:42 $REPLACE_STACK:  
 {"currentStack":[{"entityId":65,"creatorCardId":260,"entityToDoDamageCardId":260,"entityToTakeDamageCardId":212,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":64,"creatorCardId":260,"numberRolled":6,"rollingPlayerCardId":260,"stackEffectType":2,"attackedMonsterCardId":212}]} 
 Player 1 03:41:42 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":6},{"type":2,"number":1},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":260,"scopeIsPlayer":true,"index":27,"originStackId":64},"isAfterActivation":true,"index":27} 
 Player 1 03:41:42 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Chub \n2:Player 1 rolled 6 vs Chub<Monster>"} 
 Player 1 03:41:42 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":64,"creatorCardId":260,"numberRolled":6,"rollingPlayerCardId":260,"stackEffectType":2,"attackedMonsterCardId":212}} 
 Player 1 03:41:42 $ACTION_MASSAGE_REMOVE:  
 {"id":256} 
 Player 1 03:41:42 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":258,"_text":"Remove After Resolve AttackRoll 64  "}} 
 Player 1 03:41:42 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Chub"} 
 Player 1 03:41:42 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":64,"creatorCardId":260,"numberRolled":6,"rollingPlayerCardId":260,"stackEffectType":2,"attackedMonsterCardId":212}} 
 Player 1 03:41:42 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":259,"_text":"Response Remove After Resolve AttackRoll 64"},"childOfId":258} 
 Player 1 03:41:42 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":260,"_text":"Wait For Response From Player 1 "},"childOfId":258} 
 Player 1 03:41:42 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:41:42 $ACTION_MASSAGE_REMOVE:  
 {"id":260} 
 Player 1 03:41:42 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":261,"_text":"Wait For Response From Player 2 "},"childOfId":258} 
 Player 1 03:41:42 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:41:42 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:41:43 $ACTION_MASSAGE_REMOVE:  
 {"id":261} 
 Player 1 03:41:43 $ACTION_MASSAGE_REMOVE:  
 {"id":259} 
 Player 1 03:41:43 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":262,"_text":"Resolve CombatDamage 65 "}} 
 Player 1 03:41:43 $MONSTER_GET_DAMAGED:  
 {"cardId":212,"hpLeft":0,"damageDealerId":260} 
 Player 1 03:41:43 $NEXT_STACK_ID:  
 Player 1 03:41:43 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Chub"} 
 Player 1 03:41:43 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:41:43 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Chub \n2:[object Object] killed by Azazel"} 
 Player 1 03:41:43 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":66,"creatorCardId":260,"monsterToDieCardId":212,"stackEffectType":5,"killerId":260}} 
 Player 1 03:41:43 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Chub \n2:[object Object] killed by Azazel"} 
 Player 1 03:41:43 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Chub \n2:[object Object] killed by Azazel"} 
 Player 1 03:41:43 $REPLACE_STACK:  
 {"currentStack":[{"entityId":65,"creatorCardId":260,"entityToDoDamageCardId":260,"entityToTakeDamageCardId":212,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":66,"creatorCardId":260,"monsterToDieCardId":212,"stackEffectType":5,"killerId":260}]} 
 Player 1 03:41:43 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":260}],"result":null,"preventMethod":false,"methodScopeId":212,"scopeIsPlayer":false,"index":28,"originStackId":-1},"isAfterActivation":true,"index":28} 
 Player 1 03:41:43 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":2},{"type":2,"number":6},{"type":0,"number":260},{"type":0,"number":212}],"result":null,"preventMethod":false,"methodScopeId":260,"scopeIsPlayer":true,"index":29,"originStackId":65},"isAfterActivation":true,"index":29} 
 Player 1 03:41:43 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Chub \n2:[object Object] killed by Azazel"} 
 Player 1 03:41:43 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":65,"creatorCardId":260,"entityToDoDamageCardId":260,"entityToTakeDamageCardId":212,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 03:41:43 $ACTION_MASSAGE_REMOVE:  
 {"id":262} 
 Player 1 03:41:43 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":263,"_text":"Remove After Resolve CombatDamage 65  "}} 
 Player 1 03:41:43 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by Azazel"} 
 Player 1 03:41:43 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":65,"creatorCardId":260,"entityToDoDamageCardId":260,"entityToTakeDamageCardId":212,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 03:41:43 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":264,"_text":"Response Remove After Resolve CombatDamage 65"},"childOfId":263} 
 Player 1 03:41:43 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":265,"_text":"Wait For Response From Player 1 "},"childOfId":263} 
 Player 1 03:41:43 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:41:43 $ACTION_MASSAGE_REMOVE:  
 {"id":265} 
 Player 1 03:41:43 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":266,"_text":"Wait For Response From Player 2 "},"childOfId":263} 
 Player 1 03:41:43 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:41:43 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:41:44 $ACTION_MASSAGE_REMOVE:  
 {"id":266} 
 Player 1 03:41:44 $ACTION_MASSAGE_REMOVE:  
 {"id":264} 
 Player 1 03:41:44 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":267,"_text":"Resolve MonsterDeath 66 "}} 
 Player 1 03:41:44 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":212,"particleType":5} 
 Player 1 03:41:44 $CANCEL_ATTACK:  
 Player 1 03:41:44 $NEXT_STACK_ID:  
 Player 1 03:41:44 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by Azazel"} 
 Player 1 03:41:44 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:41:44 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward \n2:[object Object] killed by Azazel"} 
 Player 1 03:41:44 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":67,"creatorCardId":260,"monsterCardWithRewardId":212,"playerCardIdToReward":260,"stackEffectType":7}} 
 Player 1 03:41:44 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward \n2:[object Object] killed by Azazel"} 
 Player 1 03:41:44 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward \n2:[object Object] killed by Azazel"} 
 Player 1 03:41:44 $REPLACE_STACK:  
 {"currentStack":[{"entityId":67,"creatorCardId":260,"monsterCardWithRewardId":212,"playerCardIdToReward":260,"stackEffectType":7},{"entityId":66,"creatorCardId":260,"monsterToDieCardId":212,"stackEffectType":5,"killerId":260}]} 
 Player 1 03:41:44 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward \n2:[object Object] killed by Azazel"} 
 Player 1 03:41:44 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":66,"creatorCardId":260,"monsterToDieCardId":212,"stackEffectType":5,"killerId":260}} 
 Player 1 03:41:44 $ACTION_MASSAGE_REMOVE:  
 {"id":267} 
 Player 1 03:41:44 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":268,"_text":"Remove After Resolve MonsterDeath 66  "}} 
 Player 1 03:41:44 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Chub<Monster> reward"} 
 Player 1 03:41:44 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":66,"creatorCardId":260,"monsterToDieCardId":212,"stackEffectType":5,"killerId":260}} 
 Player 1 03:41:44 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":269,"_text":"Response Remove After Resolve MonsterDeath 66"},"childOfId":268} 
 Player 1 03:41:44 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":270,"_text":"Wait For Response From Player 1 "},"childOfId":268} 
 Player 1 03:41:44 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:41:44 $ACTION_MASSAGE_REMOVE:  
 {"id":270} 
 Player 1 03:41:44 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":271,"_text":"Wait For Response From Player 2 "},"childOfId":268} 
 Player 1 03:41:44 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:41:44 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:41:45 $ACTION_MASSAGE_REMOVE:  
 {"id":257} 
 Player 1 03:41:45 $ACTION_MASSAGE_REMOVE:  
 {"id":258} 
 Player 1 03:41:45 $ACTION_MASSAGE_REMOVE:  
 {"id":271} 
 Player 1 03:41:45 $ACTION_MASSAGE_REMOVE:  
 {"id":269} 
 Player 1 03:41:45 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":272,"_text":"Resolve MonsterRewardStackEffect 67 "}} 
 Player 1 03:41:45 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:41:45 $ACTION_MASSAGE_REMOVE:  
 {"id":256} 
 Player 1 03:41:45 $ACTION_MASSAGE_REMOVE:  
 {"id":258} 
 Player 1 03:41:45 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":273,"_text":"Fizzle MonsterRewardStackEffect 67"}} 
 Player 1 03:41:45 $CHANGE_MONEY:  
 {"playerId":1,"numOfCoins":7} 
 Player 1 03:41:45 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":7}],"result":null,"preventMethod":false,"methodScopeId":260,"scopeIsPlayer":true,"index":30,"originStackId":-1},"isAfterActivation":true,"index":30} 
 Player 1 03:41:45 $MOVE_CARD:  
 {"moveIndex":39,"cardId":212,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"soulsLayout"} 
 Player 1 03:41:46 $ACTION_MASSAGE_REMOVE:  
 {"id":263} 
 Player 1 03:41:46 $GET_SOUL:  
 {"playerId":1,"cardId":212} 
 Player 1 03:41:46 $REMOVE_FROM_PASSIVE_MANAGER:  
 {"cardId":212} 
 Player 1 03:41:46 $REMOVE_MONSTER:  
 {"holderId":1,"monsterId":212} 
 Player 1 03:41:46 $NEXT_STACK_ID:  
 Player 1 03:41:46 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:41:46 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Refill holder1 slot"} 
 Player 1 03:41:46 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":68,"creatorCardId":260,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 
 Player 1 03:41:46 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":274,"_text":"Add RefillEmptySlot 68 "}} 
 Player 1 03:41:46 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:41:46 $ACTION_MASSAGE_REMOVE:  
 {"id":274} 
 Player 1 03:41:46 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Refill holder1 slot"} 
 Player 1 03:41:46 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":68,"creatorCardId":260,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 
 Player 1 03:41:46 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":275,"_text":"Response Adding RefillEmptySlot 68"},"childOfId":274} 
 Player 1 03:41:46 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":276,"_text":"Wait For Response From Player 1 "},"childOfId":274} 
 Player 1 03:41:46 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:41:46 $ACTION_MASSAGE_REMOVE:  
 {"id":276} 
 Player 1 03:41:46 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":277,"_text":"Wait For Response From Player 2 "},"childOfId":274} 
 Player 1 03:41:46 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:41:46 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:41:47 $ACTION_MASSAGE_REMOVE:  
 {"id":277} 
 Player 1 03:41:47 $ACTION_MASSAGE_REMOVE:  
 {"id":275} 
 Player 1 03:41:47 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":278,"_text":"Resolve RefillEmptySlot 68 "}} 
 Player 1 03:41:47 $DRAW_CARD:  
 {"deckType":2} 
 Player 1 03:41:47 $FLIP_CARD:  
 {"cardId":228} 
 Player 1 03:41:47 $ADD_MONSTER:  
 {"monsterPlaceId":1,"monsterId":228} 
 Player 1 03:41:47 $NEW_MONSTER_ON_PLACE:  
 {"cardId":228,"monsterPlaceId":1} 
 Player 1 03:41:47 $NEXT_STACK_ID:  
 Player 1 03:41:47 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Refill holder1 slot"} 
 Player 1 03:41:47 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Gold Chest (2)"} 
 Player 1 03:41:47 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":69,"creatorCardId":260,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":228,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 1 03:41:47 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":279,"_text":"Add ActivateItem 69 "}} 
 Player 1 03:41:47 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:41:47 $ACTION_MASSAGE_REMOVE:  
 {"id":279} 
 Player 1 03:41:47 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Gold Chest (2)"} 
 Player 1 03:41:47 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":69,"creatorCardId":260,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":228,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 1 03:41:47 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":280,"_text":"Response Adding ActivateItem 69"},"childOfId":279} 
 Player 1 03:41:47 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":281,"_text":"Wait For Response From Player 1 "},"childOfId":279} 
 Player 1 03:41:47 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:41:47 $ACTION_MASSAGE_REMOVE:  
 {"id":281} 
 Player 1 03:41:47 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":282,"_text":"Wait For Response From Player 2 "},"childOfId":279} 
 Player 1 03:41:47 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:41:47 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:41:47 $ACTION_MASSAGE_REMOVE:  
 {"id":268} 
 Player 1 03:41:47 $ACTION_MASSAGE_REMOVE:  
 {"id":282} 
 Player 1 03:41:48 $ACTION_MASSAGE_REMOVE:  
 {"id":280} 
 Player 1 03:41:48 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":283,"_text":"Resolve ActivateItem 69 "}} 
 Player 1 03:41:48 $NEXT_STACK_ID:  
 Player 1 03:41:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Gold Chest (2)"} 
 Player 1 03:41:48 $NEXT_STACK_ID:  
 Player 1 03:41:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Gold Chest (2)"} 
 Player 1 03:41:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Gold Chest (2) \n3:Player 1 roll a dice"} 
 Player 1 03:41:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Gold Chest (2) \n3:Player 1 roll a dice"} 
 Player 1 03:41:48 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":71,"creatorCardId":260,"stackEffectToLock":{"entityId":69,"creatorCardId":260,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":228,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"stackEffectType":11}} 
 Player 1 03:41:48 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":284,"_text":"Add RollDiceStackEffect 71 "}} 
 Player 1 03:41:48 $ROLL_DICE:  
 {"playerId":1} 
 Player 1 03:41:48 $ACTION_MASSAGE_REMOVE:  
 {"id":273} 
 Player 1 03:41:50 $ROLL_DICE_ENDED:  
 {"playerId":1,"numberRolled":5} 
 Player 1 03:41:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Gold Chest (2) \n3:Player 1 rolled 5"} 
 Player 1 03:41:50 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:41:50 $ACTION_MASSAGE_REMOVE:  
 {"id":284} 
 Player 1 03:41:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Gold Chest (2) \n3:Player 1 rolled 5"} 
 Player 1 03:41:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Gold Chest (2) \n3:Player 1 rolled 5"} 
 Player 1 03:41:50 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":71,"creatorCardId":260,"stackEffectToLock":{"entityId":69,"creatorCardId":260,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":228,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"numberRolled":5,"stackEffectType":11}} 
 Player 1 03:41:50 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":285,"_text":"Response Adding RollDiceStackEffect 71"},"childOfId":284} 
 Player 1 03:41:50 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":286,"_text":"Wait For Response From Player 1 "},"childOfId":284} 
 Player 1 03:41:50 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:41:50 $ACTION_MASSAGE_REMOVE:  
 {"id":286} 
 Player 1 03:41:50 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":287,"_text":"Wait For Response From Player 2 "},"childOfId":284} 
 Player 1 03:41:50 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:41:50 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:41:50 $ACTION_MASSAGE_REMOVE:  
 {"id":287} 
 Player 1 03:41:50 $ACTION_MASSAGE_REMOVE:  
 {"id":285} 
 Player 1 03:41:50 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":288,"_text":"Resolve RollDiceStackEffect 71 "}} 
 Player 1 03:41:50 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":260,"scopeIsPlayer":true,"index":31,"originStackId":71},"isAfterActivation":true,"index":31} 
 Player 1 03:41:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Gold Chest (2) \n3:Player 1 rolled 5"} 
 Player 1 03:41:50 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Gold Chest (2) \n3:Player 1 rolled 5"} 
 Player 1 03:41:51 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":71,"creatorCardId":260,"stackEffectToLock":{"entityId":69,"creatorCardId":260,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":228,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"numberRolled":5,"stackEffectType":11}} 
 Player 1 03:41:51 $ACTION_MASSAGE_REMOVE:  
 {"id":288} 
 Player 1 03:41:51 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":289,"_text":"Remove After Resolve RollDiceStackEffect 71  "}} 
 Player 1 03:41:51 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Gold Chest (2)"} 
 Player 1 03:41:51 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Gold Chest (2)"} 
 Player 1 03:41:51 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":71,"creatorCardId":260,"stackEffectToLock":{"entityId":69,"creatorCardId":260,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":228,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"numberRolled":5,"stackEffectType":11}} 
 Player 1 03:41:51 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":290,"_text":"Response Remove After Resolve RollDiceStackEffect 71"},"childOfId":289} 
 Player 1 03:41:51 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":291,"_text":"Wait For Response From Player 2 "},"childOfId":289} 
 Player 1 03:41:51 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:41:51 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:41:51 $ACTION_MASSAGE_REMOVE:  
 {"id":291} 
 Player 1 03:41:51 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":292,"_text":"Wait For Response From Player 1 "},"childOfId":289} 
 Player 1 03:41:51 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:41:51 $ACTION_MASSAGE_REMOVE:  
 {"id":292} 
 Player 1 03:41:51 $ACTION_MASSAGE_REMOVE:  
 {"id":290} 
 Player 1 03:41:51 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":293,"_text":"Resolve ActivateItem 69 "}} 
 Player 1 03:41:51 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":228,"particleType":6} 
 Player 1 03:41:53 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":228,"particleType":6} 
 Player 1 03:41:53 $DRAW_CARD:  
 {"deckType":1} 
 Player 1 03:41:53 $MOVE_CARD:  
 {"moveIndex":40,"cardId":128,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 1 03:41:53 $ACTION_MASSAGE_REMOVE:  
 {"id":289} 
 Player 1 03:41:54 $CARD_DRAWN:  
 {"playerId":1,"deckType":1,"drawnCardId":128} 
 Player 1 03:41:54 $FLIP_CARD:  
 {"cardId":128} 
 Player 1 03:41:54 $PLAYER_GET_LOOT:  
 {"playerId":1,"cardId":128} 
 Player 1 03:41:54 $DRAW_CARD:  
 {"deckType":1} 
 Player 1 03:41:54 $MOVE_CARD:  
 {"moveIndex":41,"cardId":121,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 1 03:41:54 $CARD_DRAWN:  
 {"playerId":1,"deckType":1,"drawnCardId":121} 
 Player 1 03:41:54 $FLIP_CARD:  
 {"cardId":121} 
 Player 1 03:41:54 $PLAYER_GET_LOOT:  
 {"playerId":1,"cardId":121} 
 Player 1 03:41:54 $MOVE_CARD:  
 {"moveIndex":42,"cardId":228,"placeID":281,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 03:41:55 $MOVE_CARD_TO_PILE:  
 {"type":2,"cardId":228} 
 Player 1 03:41:55 $REMOVE_MONSTER:  
 {"holderId":1,"monsterId":228} 
 Player 1 03:41:55 $NEXT_STACK_ID:  
 Player 1 03:41:55 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Gold Chest (2)"} 
 Player 1 03:41:55 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Gold Chest (2) \n3:Refill holder1 slot"} 
 Player 1 03:41:55 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":72,"creatorCardId":260,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 
 Player 1 03:41:55 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":294,"_text":"Add RefillEmptySlot 72 "}} 
 Player 1 03:41:55 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:41:55 $ACTION_MASSAGE_REMOVE:  
 {"id":294} 
 Player 1 03:41:55 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Gold Chest (2) \n3:Refill holder1 slot"} 
 Player 1 03:41:55 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":72,"creatorCardId":260,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 
 Player 1 03:41:55 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":295,"_text":"Response Adding RefillEmptySlot 72"},"childOfId":294} 
 Player 1 03:41:55 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":296,"_text":"Wait For Response From Player 1 "},"childOfId":294} 
 Player 1 03:41:55 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:41:55 $ACTION_MASSAGE_REMOVE:  
 {"id":296} 
 Player 1 03:41:55 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":297,"_text":"Wait For Response From Player 2 "},"childOfId":294} 
 Player 1 03:41:55 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:41:55 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:41:55 $ACTION_MASSAGE_REMOVE:  
 {"id":297} 
 Player 1 03:41:55 $ACTION_MASSAGE_REMOVE:  
 {"id":295} 
 Player 1 03:41:55 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":298,"_text":"Resolve RefillEmptySlot 72 "}} 
 Player 1 03:41:55 $DRAW_CARD:  
 {"deckType":2} 
 Player 1 03:41:56 $FLIP_CARD:  
 {"cardId":254} 
 Player 1 03:41:56 $ADD_MONSTER:  
 {"monsterPlaceId":1,"monsterId":254} 
 Player 1 03:41:56 $NEW_MONSTER_ON_PLACE:  
 {"cardId":254,"monsterPlaceId":1} 
 Player 1 03:41:56 $ACTION_MASSAGE_REMOVE:  
 {"id":298} 
 Player 1 03:41:56 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":299,"_text":"Remove After Resolve RefillEmptySlot 72  "}} 
 Player 1 03:41:56 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Gold Chest (2)"} 
 Player 1 03:41:56 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":72,"creatorCardId":260,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 
 Player 1 03:41:56 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":300,"_text":"Response Remove After Resolve RefillEmptySlot 72"},"childOfId":299} 
 Player 1 03:41:56 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":301,"_text":"Wait For Response From Player 2 "},"childOfId":299} 
 Player 1 03:41:56 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:41:56 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:41:56 $ACTION_MASSAGE_REMOVE:  
 {"id":301} 
 Player 1 03:41:56 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":302,"_text":"Wait For Response From Player 1 "},"childOfId":299} 
 Player 1 03:41:56 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:41:56 $ACTION_MASSAGE_REMOVE:  
 {"id":302} 
 Player 1 03:41:56 $ACTION_MASSAGE_REMOVE:  
 {"id":300} 
 Player 1 03:41:56 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":303,"_text":"Resolve ActivateItem 69 "}} 
 Player 1 03:41:56 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Refill holder1 slot \n2:Player 1 activated Gold Chest (2)"} 
 Player 1 03:41:56 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":69,"creatorCardId":260,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":228,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 1 03:41:56 $ACTION_MASSAGE_REMOVE:  
 {"id":283} 
 Player 1 03:41:56 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":304,"_text":"Remove After Resolve ActivateItem 69  "}} 
 Player 1 03:41:56 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Refill holder1 slot"} 
 Player 1 03:41:56 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":69,"creatorCardId":260,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":228,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 1 03:41:56 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":305,"_text":"Response Remove After Resolve ActivateItem 69"},"childOfId":304} 
 Player 1 03:41:56 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":306,"_text":"Wait For Response From Player 1 "},"childOfId":304} 
 Player 1 03:41:56 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:41:56 $ACTION_MASSAGE_REMOVE:  
 {"id":306} 
 Player 1 03:41:56 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":307,"_text":"Wait For Response From Player 2 "},"childOfId":304} 
 Player 1 03:41:57 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:41:57 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:41:57 $ACTION_MASSAGE_REMOVE:  
 {"id":307} 
 Player 1 03:41:57 $ACTION_MASSAGE_REMOVE:  
 {"id":305} 
 Player 1 03:41:57 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":308,"_text":"Resolve RefillEmptySlot 68 "}} 
 Player 1 03:41:57 $ACTION_MASSAGE_REMOVE:  
 {"id":278} 
 Player 1 03:41:57 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":309,"_text":"Remove After Resolve RefillEmptySlot 68  "}} 
 Player 1 03:41:57 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:41:57 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":68,"creatorCardId":260,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 
 Player 1 03:41:57 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":310,"_text":"Response Remove After Resolve RefillEmptySlot 68"},"childOfId":309} 
 Player 1 03:41:57 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":311,"_text":"Wait For Response From Player 2 "},"childOfId":309} 
 Player 1 03:41:57 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:41:57 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:41:58 $ACTION_MASSAGE_REMOVE:  
 {"id":311} 
 Player 1 03:41:58 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":312,"_text":"Wait For Response From Player 1 "},"childOfId":309} 
 Player 1 03:41:58 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:41:58 $ACTION_MASSAGE_REMOVE:  
 {"id":312} 
 Player 1 03:41:58 $ACTION_MASSAGE_REMOVE:  
 {"id":310} 
 Player 1 03:41:58 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":313,"_text":"Stack Was Emptied "}} 
 Player 1 03:41:58 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:41:58 $ACTION_MASSAGE_REMOVE:  
 {"id":256} 
 Player 1 03:41:58 $ACTION_MASSAGE_REMOVE:  
 {"id":289} 
 Player 1 03:41:58 $ACTION_MASSAGE_REMOVE:  
 {"id":299} 
 Player 1 03:41:58 $ACTION_MASSAGE_REMOVE:  
 {"id":272} 
 Player 1 03:41:58 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":314,"_text":"Stack Was Emptied "}} 
 Player 1 03:41:58 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:41:58 $ACTION_MASSAGE_REMOVE:  
 {"id":256} 
 Player 1 03:41:58 $ACTION_MASSAGE_REMOVE:  
 {"id":289} 
 Player 1 03:41:58 $ACTION_MASSAGE_REMOVE:  
 {"id":299} 
 Player 1 03:41:59 $ACTION_MASSAGE_REMOVE:  
 {"id":304} 
 Player 1 03:41:59 $ACTION_MASSAGE_REMOVE:  
 {"id":313} 
 Player 1 03:41:59 $ACTION_MASSAGE_REMOVE:  
 {"id":314} 
 Player 1 03:42:00 $ACTION_MASSAGE_REMOVE:  
 {"id":309} 
 Player 1 03:44:33 $CHANGE_MONEY:  
 {"playerId":1,"numOfCoins":3} 
 Player 1 03:44:33 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":260,"scopeIsPlayer":true,"index":32,"originStackId":-1},"isAfterActivation":true,"index":32} 
 Player 1 03:44:47 $NEXT_STACK_ID:  
 Player 1 03:44:47 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:44:47 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1  declared attack on TopBlankCard"} 
 Player 1 03:44:47 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":73,"creatorCardId":260,"attackingPlayerCardId":260,"idOfCardBeingAttacked":0,"stackEffectType":4}} 
 Player 1 03:44:47 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":315,"_text":"Add DeclareAttack 73 "}} 
 Player 1 03:44:47 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:44:47 $ACTION_MASSAGE_REMOVE:  
 {"id":315} 
 Player 1 03:44:47 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1  declared attack on TopBlankCard"} 
 Player 1 03:44:47 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":73,"creatorCardId":260,"attackingPlayerCardId":260,"idOfCardBeingAttacked":0,"stackEffectType":4}} 
 Player 1 03:44:47 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":316,"_text":"Response Adding DeclareAttack 73"},"childOfId":315} 
 Player 1 03:44:47 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":317,"_text":"Wait For Response From Player 1 "},"childOfId":315} 
 Player 1 03:44:47 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:44:47 $ACTION_MASSAGE_REMOVE:  
 {"id":317} 
 Player 1 03:44:47 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":318,"_text":"Wait For Response From Player 2 "},"childOfId":315} 
 Player 1 03:44:47 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:44:47 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:44:48 $ACTION_MASSAGE_REMOVE:  
 {"id":318} 
 Player 1 03:44:48 $ACTION_MASSAGE_REMOVE:  
 {"id":316} 
 Player 1 03:44:48 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":319,"_text":"Resolve DeclareAttack 73 "}} 
 Player 1 03:44:48 $DRAW_CARD:  
 {"deckType":2} 
 Player 1 03:44:48 $SHOW_CARD_PREVIEW:  
 {"cardToShowId":209,"playerId":1} 
 Player 1 03:44:55 $FLIP_CARD:  
 {"cardId":209} 
 Player 1 03:44:55 $ADD_MONSTER:  
 {"monsterPlaceId":2,"monsterId":209} 
 Player 1 03:44:55 $NEW_MONSTER_ON_PLACE:  
 {"cardId":209,"monsterPlaceId":2} 
 Player 1 03:44:55 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":209,"particleType":5} 
 Player 1 03:44:55 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":260,"scopeIsPlayer":true,"index":33,"originStackId":73},"isAfterActivation":true,"index":33} 
 Player 1 03:44:55 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1  declared attack on TopBlankCard"} 
 Player 1 03:44:55 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":73,"creatorCardId":260,"attackingPlayerCardId":260,"idOfCardBeingAttacked":209,"stackEffectType":4}} 
 Player 1 03:44:55 $ACTION_MASSAGE_REMOVE:  
 {"id":319} 
 Player 1 03:44:55 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":320,"_text":"Remove After Resolve DeclareAttack 73  "}} 
 Player 1 03:44:55 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:44:55 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":73,"creatorCardId":260,"attackingPlayerCardId":260,"idOfCardBeingAttacked":209,"stackEffectType":4}} 
 Player 1 03:44:55 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":321,"_text":"Response Remove After Resolve DeclareAttack 73"},"childOfId":320} 
 Player 1 03:44:55 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":322,"_text":"Wait For Response From Player 2 "},"childOfId":320} 
 Player 1 03:44:55 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:44:55 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:44:56 $ACTION_MASSAGE_REMOVE:  
 {"id":322} 
 Player 1 03:44:56 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":323,"_text":"Wait For Response From Player 1 "},"childOfId":320} 
 Player 1 03:44:56 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:44:56 $ACTION_MASSAGE_REMOVE:  
 {"id":323} 
 Player 1 03:44:56 $ACTION_MASSAGE_REMOVE:  
 {"id":321} 
 Player 1 03:44:56 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":324,"_text":"Stack Was Emptied "}} 
 Player 1 03:44:56 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:44:56 $ACTION_MASSAGE_REMOVE:  
 {"id":320} 
 Player 1 03:44:57 $NEXT_STACK_ID:  
 Player 1 03:44:57 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:44:57 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 is rolling against Charger<Monster>"} 
 Player 1 03:44:57 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":74,"creatorCardId":260,"rollingPlayerCardId":260,"stackEffectType":2,"attackedMonsterCardId":209}} 
 Player 1 03:44:57 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":325,"_text":"Add AttackRoll 74 "}} 
 Player 1 03:44:57 $ROLL_DICE:  
 {"playerId":1} 
 Player 1 03:44:57 $ACTION_MASSAGE_REMOVE:  
 {"id":324} 
 Player 1 03:44:58 $ACTION_MASSAGE_REMOVE:  
 {"id":320} 
 Player 1 03:44:59 $ROLL_DICE_ENDED:  
 {"playerId":1,"numberRolled":6} 
 Player 1 03:44:59 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 6 vs Charger<Monster>"} 
 Player 1 03:44:59 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:44:59 $ACTION_MASSAGE_REMOVE:  
 {"id":325} 
 Player 1 03:44:59 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 6 vs Charger<Monster>"} 
 Player 1 03:44:59 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":74,"creatorCardId":260,"numberRolled":6,"rollingPlayerCardId":260,"stackEffectType":2,"attackedMonsterCardId":209}} 
 Player 1 03:44:59 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":326,"_text":"Response Adding AttackRoll 74"},"childOfId":325} 
 Player 1 03:44:59 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":327,"_text":"Wait For Response From Player 1 "},"childOfId":325} 
 Player 1 03:44:59 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:44:59 $ACTION_MASSAGE_REMOVE:  
 {"id":327} 
 Player 1 03:44:59 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":328,"_text":"Wait For Response From Player 2 "},"childOfId":325} 
 Player 1 03:44:59 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:44:59 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:44:59 $ACTION_MASSAGE_REMOVE:  
 {"id":328} 
 Player 1 03:44:59 $ACTION_MASSAGE_REMOVE:  
 {"id":326} 
 Player 1 03:44:59 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":329,"_text":"Resolve AttackRoll 74 "}} 
 Player 1 03:44:59 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":330,"_text":"Added 0 to original roll"}} 
 Player 1 03:44:59 $NEXT_STACK_ID:  
 Player 1 03:44:59 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 rolled 6 vs Charger<Monster>"} 
 Player 1 03:44:59 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:44:59 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Charger \n2:Player 1 rolled 6 vs Charger<Monster>"} 
 Player 1 03:44:59 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":75,"creatorCardId":260,"entityToDoDamageCardId":260,"entityToTakeDamageCardId":209,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 03:45:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Charger \n2:Player 1 rolled 6 vs Charger<Monster>"} 
 Player 1 03:45:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Charger \n2:Player 1 rolled 6 vs Charger<Monster>"} 
 Player 1 03:45:00 $REPLACE_STACK:  
 {"currentStack":[{"entityId":75,"creatorCardId":260,"entityToDoDamageCardId":260,"entityToTakeDamageCardId":209,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":74,"creatorCardId":260,"numberRolled":6,"rollingPlayerCardId":260,"stackEffectType":2,"attackedMonsterCardId":209}]} 
 Player 1 03:45:00 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":6},{"type":2,"number":1},{"type":2,"number":5}],"result":null,"preventMethod":false,"methodScopeId":260,"scopeIsPlayer":true,"index":34,"originStackId":74},"isAfterActivation":true,"index":34} 
 Player 1 03:45:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Charger \n2:Player 1 rolled 6 vs Charger<Monster>"} 
 Player 1 03:45:00 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":74,"creatorCardId":260,"numberRolled":6,"rollingPlayerCardId":260,"stackEffectType":2,"attackedMonsterCardId":209}} 
 Player 1 03:45:00 $ACTION_MASSAGE_REMOVE:  
 {"id":329} 
 Player 1 03:45:00 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":331,"_text":"Remove After Resolve AttackRoll 74  "}} 
 Player 1 03:45:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Charger"} 
 Player 1 03:45:00 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":74,"creatorCardId":260,"numberRolled":6,"rollingPlayerCardId":260,"stackEffectType":2,"attackedMonsterCardId":209}} 
 Player 1 03:45:00 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":332,"_text":"Response Remove After Resolve AttackRoll 74"},"childOfId":331} 
 Player 1 03:45:00 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":333,"_text":"Wait For Response From Player 1 "},"childOfId":331} 
 Player 1 03:45:00 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:45:00 $ACTION_MASSAGE_REMOVE:  
 {"id":333} 
 Player 1 03:45:00 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":334,"_text":"Wait For Response From Player 2 "},"childOfId":331} 
 Player 1 03:45:00 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:45:00 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:45:00 $ACTION_MASSAGE_REMOVE:  
 {"id":334} 
 Player 1 03:45:00 $ACTION_MASSAGE_REMOVE:  
 {"id":332} 
 Player 1 03:45:00 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":335,"_text":"Resolve CombatDamage 75 "}} 
 Player 1 03:45:00 $MONSTER_GET_DAMAGED:  
 {"cardId":209,"hpLeft":0,"damageDealerId":260} 
 Player 1 03:45:00 $NEXT_STACK_ID:  
 Player 1 03:45:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Charger"} 
 Player 1 03:45:00 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:45:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Charger \n2:[object Object] killed by Azazel"} 
 Player 1 03:45:00 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":76,"creatorCardId":260,"monsterToDieCardId":209,"stackEffectType":5,"killerId":260}} 
 Player 1 03:45:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Charger \n2:[object Object] killed by Azazel"} 
 Player 1 03:45:01 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Charger \n2:[object Object] killed by Azazel"} 
 Player 1 03:45:01 $REPLACE_STACK:  
 {"currentStack":[{"entityId":75,"creatorCardId":260,"entityToDoDamageCardId":260,"entityToTakeDamageCardId":209,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":76,"creatorCardId":260,"monsterToDieCardId":209,"stackEffectType":5,"killerId":260}]} 
 Player 1 03:45:01 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":260}],"result":null,"preventMethod":false,"methodScopeId":209,"scopeIsPlayer":false,"index":35,"originStackId":-1},"isAfterActivation":true,"index":35} 
 Player 1 03:45:01 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":2},{"type":2,"number":6},{"type":0,"number":260},{"type":0,"number":209}],"result":null,"preventMethod":false,"methodScopeId":260,"scopeIsPlayer":true,"index":36,"originStackId":75},"isAfterActivation":true,"index":36} 
 Player 1 03:45:01 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Azazel combat damage to Charger \n2:[object Object] killed by Azazel"} 
 Player 1 03:45:01 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":75,"creatorCardId":260,"entityToDoDamageCardId":260,"entityToTakeDamageCardId":209,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 03:45:01 $ACTION_MASSAGE_REMOVE:  
 {"id":335} 
 Player 1 03:45:01 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":336,"_text":"Remove After Resolve CombatDamage 75  "}} 
 Player 1 03:45:01 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by Azazel"} 
 Player 1 03:45:01 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":75,"creatorCardId":260,"entityToDoDamageCardId":260,"entityToTakeDamageCardId":209,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 03:45:01 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":337,"_text":"Response Remove After Resolve CombatDamage 75"},"childOfId":336} 
 Player 1 03:45:01 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":338,"_text":"Wait For Response From Player 1 "},"childOfId":336} 
 Player 1 03:45:01 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:45:01 $ACTION_MASSAGE_REMOVE:  
 {"id":338} 
 Player 1 03:45:01 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":339,"_text":"Wait For Response From Player 2 "},"childOfId":336} 
 Player 1 03:45:01 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:45:01 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:45:01 $ACTION_MASSAGE_REMOVE:  
 {"id":339} 
 Player 1 03:45:01 $ACTION_MASSAGE_REMOVE:  
 {"id":337} 
 Player 1 03:45:01 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":340,"_text":"Resolve MonsterDeath 76 "}} 
 Player 1 03:45:01 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":209,"particleType":5} 
 Player 1 03:45:01 $CANCEL_ATTACK:  
 Player 1 03:45:02 $NEXT_STACK_ID:  
 Player 1 03:45:02 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by Azazel"} 
 Player 1 03:45:02 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:45:02 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Charger<Monster> reward \n2:[object Object] killed by Azazel"} 
 Player 1 03:45:02 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":77,"creatorCardId":260,"monsterCardWithRewardId":209,"playerCardIdToReward":260,"stackEffectType":7}} 
 Player 1 03:45:02 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Charger<Monster> reward \n2:[object Object] killed by Azazel"} 
 Player 1 03:45:02 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Charger<Monster> reward \n2:[object Object] killed by Azazel"} 
 Player 1 03:45:02 $REPLACE_STACK:  
 {"currentStack":[{"entityId":77,"creatorCardId":260,"monsterCardWithRewardId":209,"playerCardIdToReward":260,"stackEffectType":7},{"entityId":76,"creatorCardId":260,"monsterToDieCardId":209,"stackEffectType":5,"killerId":260}]} 
 Player 1 03:45:02 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Charger<Monster> reward \n2:[object Object] killed by Azazel"} 
 Player 1 03:45:02 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":76,"creatorCardId":260,"monsterToDieCardId":209,"stackEffectType":5,"killerId":260}} 
 Player 1 03:45:02 $ACTION_MASSAGE_REMOVE:  
 {"id":340} 
 Player 1 03:45:02 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":341,"_text":"Remove After Resolve MonsterDeath 76  "}} 
 Player 1 03:45:02 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 get Charger<Monster> reward"} 
 Player 1 03:45:02 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":76,"creatorCardId":260,"monsterToDieCardId":209,"stackEffectType":5,"killerId":260}} 
 Player 1 03:45:02 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":342,"_text":"Response Remove After Resolve MonsterDeath 76"},"childOfId":341} 
 Player 1 03:45:02 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":343,"_text":"Wait For Response From Player 1 "},"childOfId":341} 
 Player 1 03:45:02 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:45:02 $ACTION_MASSAGE_REMOVE:  
 {"id":343} 
 Player 1 03:45:02 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":344,"_text":"Wait For Response From Player 2 "},"childOfId":341} 
 Player 1 03:45:02 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 03:45:02 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 03:45:02 $ACTION_MASSAGE_REMOVE:  
 {"id":344} 
 Player 1 03:45:02 $ACTION_MASSAGE_REMOVE:  
 {"id":342} 
 Player 1 03:45:02 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":345,"_text":"Resolve MonsterRewardStackEffect 77 "}} 
 Player 1 03:45:02 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:45:03 $ACTION_MASSAGE_REMOVE:  
 {"id":329} 
 Player 1 03:45:03 $ACTION_MASSAGE_REMOVE:  
 {"id":331} 
 Player 1 03:45:03 $ACTION_MASSAGE_REMOVE:  
 {"id":336} 
 Player 1 03:45:03 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":346,"_text":"Fizzle MonsterRewardStackEffect 77"}} 
 Player 1 03:45:03 $CHANGE_MONEY:  
 {"playerId":1,"numOfCoins":4} 
 Player 1 03:45:03 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":260,"scopeIsPlayer":true,"index":37,"originStackId":-1},"isAfterActivation":true,"index":37} 
 Player 1 03:45:03 $ACTION_MASSAGE_REMOVE:  
 {"id":330} 
 Player 1 03:45:03 $ACTION_MASSAGE_REMOVE:  
 {"id":331} 
 Player 1 03:45:03 $MOVE_CARD:  
 {"moveIndex":43,"cardId":209,"placeID":281,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 03:45:03 $MOVE_CARD_TO_PILE:  
 {"type":2,"cardId":209} 
 Player 1 03:45:03 $REMOVE_MONSTER:  
 {"holderId":2,"monsterId":209} 
 Player 1 03:45:03 $GET_NEXT_MONSTER:  
 {"monsterPlaceId":2} 
 Player 1 03:45:03 $ACTION_MASSAGE_REMOVE:  
 {"id":345} 
 Player 1 03:45:03 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":347,"_text":"Stack Was Emptied "}} 
 Player 1 03:45:03 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:45:03 $ACTION_MASSAGE_REMOVE:  
 {"id":347} 
 Player 1 03:45:03 $ACTION_MASSAGE_REMOVE:  
 {"id":336} 
 Player 1 03:45:04 $ACTION_MASSAGE_REMOVE:  
 {"id":341} 
 Player 1 03:45:05 $ACTION_MASSAGE_REMOVE:  
 {"id":347} 
 Player 1 03:45:05 $ACTION_MASSAGE_REMOVE:  
 {"id":346} 
 Player 1 03:45:17 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 03:45:17 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:45:17 $REPLACE_STACK:  
 {"currentStack":[]} 
 Player 1 03:45:17 $END_TURN:  
 Player 1 03:45:17 $SET_TURN:  
 {"playerId":2} 
 Player 1 03:45:17 $START_TURN:  
 {"playerId":2} 
 Player 1 03:45:18 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:45:18 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:45:18 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 03:45:18 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 03:45:18 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:45:18 $MOVE_CARD_END:  
 {"moveIndex":44,"cardId":15,"flipIfFlipped":false,"playerId":2} 
 Player 1 03:45:19 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 03:45:19 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 03:45:19 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 03:45:19 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 03:45:19 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:45:21 $CHANGE_MONEY:  
 {"playerId":1,"numOfCoins":3} 
 Player 1 03:45:21 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":260,"scopeIsPlayer":true,"index":38,"originStackId":-1},"isAfterActivation":true,"index":38} 
 Player 1 03:45:52 $CHANGE_MONEY:  
 {"playerId":1,"numOfCoins":-1} 
 Player 1 03:45:52 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-1}],"result":null,"preventMethod":false,"methodScopeId":260,"scopeIsPlayer":true,"index":39,"originStackId":-1},"isAfterActivation":true,"index":39} 
 Player 1 03:46:24 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:46:24 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:46:24 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard"} 
 Player 1 03:46:24 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard"} 
 Player 1 03:46:24 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:46:30 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard"} 
 Player 1 03:46:30 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard"} 
 Player 1 03:46:30 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard \n2:Player 2 activated Dark Chest (1)"} 
 Player 1 03:46:30 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard \n2:Player 2 activated Dark Chest (1)"} 
 Player 1 03:46:31 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:46:31 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard \n2:Player 2 activated Dark Chest (1)"} 
 Player 1 03:46:31 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard \n2:Player 2 activated Dark Chest (1)"} 
 Player 1 03:46:31 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard \n2:Player 2 activated Dark Chest (1)"} 
 Player 1 03:46:31 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard \n2:Player 2 activated Dark Chest (1)"} 
 Player 1 03:46:33 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard \n2:Player 2 activated Dark Chest (1) \n3:Player 2 roll a dice"} 
 Player 1 03:46:33 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard \n2:Player 2 activated Dark Chest (1) \n3:Player 2 roll a dice"} 
 Player 1 03:46:33 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard \n2:Player 2 activated Dark Chest (1) \n3:Player 2 roll a dice"} 
 Player 1 03:46:33 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard \n2:Player 2 activated Dark Chest (1) \n3:Player 2 roll a dice"} 
 Player 1 03:46:48 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:46:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard \n2:Player 2 activated Dark Chest (1) \n3:Player 2 roll a dice"} 
 Player 1 03:46:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard \n2:Player 2 activated Dark Chest (1) \n3:Player 2 roll a dice"} 
 Player 1 03:46:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard \n2:Player 2 activated Dark Chest (1) \n3:Player 2 roll a dice"} 
 Player 1 03:46:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard \n2:Player 2 activated Dark Chest (1) \n3:Player 2 roll a dice"} 
 Player 1 03:46:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard \n2:Player 2 activated Dark Chest (1) \n3:Player 2 roll a dice"} 
 Player 1 03:46:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard \n2:Player 2 activated Dark Chest (1) \n3:Player 2 roll a dice"} 
 Player 1 03:46:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard \n2:Player 2 activated Dark Chest (1) \n3:Player 2 roll a dice"} 
 Player 1 03:46:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard \n2:Player 2 activated Dark Chest (1) \n3:Player 2 roll a dice"} 
 Player 1 03:46:48 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:46:51 $MOVE_CARD_END:  
 {"moveIndex":45,"cardId":219,"flipIfFlipped":true,"playerId":2} 
 Player 1 03:46:51 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard \n2:Player 2 activated Dark Chest (1)"} 
 Player 1 03:46:51 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard \n2:Player 2 activated Dark Chest (1)"} 
 Player 1 03:46:51 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard \n2:Player 2 activated Dark Chest (1)"} 
 Player 1 03:46:51 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard \n2:Player 2 activated Dark Chest (1)"} 
 Player 1 03:46:52 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:46:52 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard"} 
 Player 1 03:46:52 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on TopBlankCard"} 
 Player 1 03:46:53 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:47:05 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:47:05 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:47:05 $MOVE_CARD_END:  
 {"moveIndex":46,"cardId":92,"flipIfFlipped":true,"playerId":2} 
 Player 1 03:47:08 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play Bomb(5) "} 
 Player 1 03:47:08 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play Bomb(5) "} 
 Player 1 03:47:08 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:47:10 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play Bomb(5) "} 
 Player 1 03:47:11 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play Bomb(5) "} 
 Player 1 03:47:11 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by undefined"} 
 Player 1 03:47:11 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by undefined"} 
 Player 1 03:47:11 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by undefined"} 
 Player 1 03:47:11 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by undefined"} 
 Player 1 03:47:11 $MOVE_CARD_END:  
 {"moveIndex":47,"cardId":92,"flipIfFlipped":true,"playerId":2} 
 Player 1 03:47:11 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play Bomb(5)  \n2:[object Object] killed by undefined"} 
 Player 1 03:47:11 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play Bomb(5)  \n2:[object Object] killed by undefined"} 
 Player 1 03:47:11 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play Bomb(5)  \n2:[object Object] killed by undefined"} 
 Player 1 03:47:11 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play Bomb(5)  \n2:[object Object] killed by undefined"} 
 Player 1 03:47:12 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:47:12 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by undefined"} 
 Player 1 03:47:12 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:[object Object] killed by undefined"} 
 Player 1 03:47:12 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Trite<Monster> reward"} 
 Player 1 03:47:12 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Trite<Monster> reward"} 
 Player 1 03:47:12 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Trite<Monster> reward"} 
 Player 1 03:47:12 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Trite<Monster> reward"} 
 Player 1 03:47:12 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Trite<Monster> reward \n2:[object Object] killed by undefined"} 
 Player 1 03:47:12 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Trite<Monster> reward \n2:[object Object] killed by undefined"} 
 Player 1 03:47:12 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Trite<Monster> reward \n2:[object Object] killed by undefined"} 
 Player 1 03:47:12 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Trite<Monster> reward \n2:[object Object] killed by undefined"} 
 Player 1 03:47:13 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:47:13 $MOVE_CARD_END:  
 {"moveIndex":48,"cardId":35,"flipIfFlipped":false,"playerId":2} 
 Player 1 03:47:14 $MOVE_CARD_END:  
 {"moveIndex":49,"cardId":137,"flipIfFlipped":false,"playerId":2} 
 Player 1 03:47:14 $MOVE_CARD_END:  
 {"moveIndex":50,"cardId":254,"flipIfFlipped":true,"playerId":2} 
 Player 1 03:47:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Trite<Monster> reward"} 
 Player 1 03:47:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Trite<Monster> reward"} 
 Player 1 03:47:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Trite<Monster> reward \n2:Refill holder1 slot"} 
 Player 1 03:47:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Trite<Monster> reward \n2:Refill holder1 slot"} 
 Player 1 03:47:15 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:47:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Trite<Monster> reward \n2:Refill holder1 slot"} 
 Player 1 03:47:15 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Trite<Monster> reward \n2:Refill holder1 slot"} 
 Player 1 03:47:16 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:47:23 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Trite<Monster> reward"} 
 Player 1 03:47:23 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Trite<Monster> reward"} 
 Player 1 03:47:25 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Trite<Monster> reward \n2:Player 2 activated The Lost"} 
 Player 1 03:47:25 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Trite<Monster> reward \n2:Player 2 activated The Lost"} 
 Player 1 03:47:25 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:47:28 $MOVE_CARD_END:  
 {"moveIndex":51,"cardId":35,"flipIfFlipped":true,"playerId":2} 
 Player 1 03:47:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Trite<Monster> reward \n2:Player 2 activated The Lost"} 
 Player 1 03:47:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Trite<Monster> reward \n2:Player 2 activated The Lost"} 
 Player 1 03:47:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Trite<Monster> reward \n2:Player 2 play 2 Cents(15) "} 
 Player 1 03:47:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Trite<Monster> reward \n2:Player 2 play 2 Cents(15) "} 
 Player 1 03:47:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Trite<Monster> reward \n2:Player 2 play 2 Cents(15) "} 
 Player 1 03:47:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 get Trite<Monster> reward \n2:Player 2 play 2 Cents(15) "} 
 Player 1 03:47:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 2 Cents(15)  \n2:Player 2 activated The Lost"} 
 Player 1 03:47:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 2 Cents(15)  \n2:Player 2 activated The Lost"} 
 Player 1 03:47:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 2 Cents(15)  \n2:Player 2 activated The Lost"} 
 Player 1 03:47:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 2 Cents(15)  \n2:Player 2 activated The Lost"} 
 Player 1 03:47:28 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:47:31 $MOVE_CARD_END:  
 {"moveIndex":52,"cardId":35,"flipIfFlipped":true,"playerId":2} 
 Player 1 03:47:31 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 2 Cents(15) "} 
 Player 1 03:47:31 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 2 Cents(15) "} 
 Player 1 03:47:31 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 2 Cents(15) "} 
 Player 1 03:47:31 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 2 Cents(15) "} 
 Player 1 03:47:31 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:47:35 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:47:35 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:47:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to buy TopBlankCard for 10"} 
 Player 1 03:47:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to buy TopBlankCard for 10"} 
 Player 1 03:47:35 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:47:36 $MOVE_CARD_END:  
 {"moveIndex":53,"cardId":148,"flipIfFlipped":true,"playerId":2} 
 Player 1 03:47:36 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to buy TopBlankCard for 10"} 
 Player 1 03:47:36 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to buy TopBlankCard for 10"} 
 Player 1 03:47:36 $RESPOND_TO:  
 {"playerId":2,"stackEffectResponse":false} 
 Player 1 03:47:42 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:47:42 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 03:47:57 $CHANGE_MONEY:  
 {"playerId":1,"numOfCoins":3} 
 Player 1 03:47:57 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":260,"scopeIsPlayer":true,"index":40,"originStackId":-1},"isAfterActivation":true,"index":40}