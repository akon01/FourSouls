Start Log 

 Player 1 15:35:40 $MATCH:  

 Player 1 15:35:41 $START_GAME:  

 Player 2 15:35:41 $MOVE_TO_TABLE:  

 Player 1 15:35:41 $MOVE_TO_TABLE:  

 Player 1 15:35:50 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 15:35:50 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 2 15:35:50 $CHOOSE_FOR_EDEN:  
{"playerId":1,"originPlayerId":2} 

 Player 2 15:35:50 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220]} 

 Player 2 15:35:50 $FLIP_CARD:  
{"cardId":203} 

 Player 2 15:35:50 $SET_CHAR:  
{"originPlayerId":2,"playerId":1,"charCardId":315,"itemCardId":203} 

 Player 1 15:35:50 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[175,182,214,204,177,195,153,206,156,154,181,168,186,185,190,141,170,159,162,157,197,200,151,167,158,145,183,191,211,142,220,166,172,207,150,189,147,178,193,144,199,210,160,179,176,152,171,187,161,209,169,173,143,146,163,215,165,219,216,202,188,184,174,217,192,155,213,201,218,212,208,194,148,164,196,198,180,205,149,203]} 

 Player 1 15:35:51 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":315,"itemCardId":203} 

 Player 1 15:35:51 $SET_CHAR_END:  
{"playerId":2} 

 Player 2 15:35:51 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":311,"itemCardId":312} 

 Player 2 15:35:51 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":316}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 15:35:51 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[75,87,24,5,111,8,33,58,132,4,83,89,115,59,37,62,134,108,114,30,13,130,136,124,9,10,94,93,125,118,15,49,28,112,85,76,16,67,19,22,103,135,101,14,54,68,18,71,65,98,69,122,109,96,139,52,86,29,39,34,131,106,43,48,138,70,63,57,116,91,92,119,51,137,120,27,60,79,78,110,121,90,20,7,46,31,36,88,26,25,123,128,73,45,81,53,126,72,21,77,127,113,64,104,80,129,107,102,66,84,41,133,50,42,44,56,55,23,11,12,105,61,95,47,6,99,35,117,82,38,17,40,74,97,100,32]} 

 Player 2 15:35:51 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[268,302,276,237,248,306,283,245,287,275,236,269,262,279,273,252,244,278,280,267,291,231,240,304,264,282,307,238,257,255,247,225,295,243,260,235,224,256,253,265,286,254,258,263,281,226,242,251,239,270,271,246,284,232,233,228,301,259,277,274,288,300,230,234,250,261,223,303,227,296,229,294,298,289,292,308,290,299,293,297,272,266,222,241,285,305,249]} 

 Player 2 15:35:51 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[141,155,142,211,169,185,157,205,202,160,148,192,200,150,204,161,184,151,159,194,145,173,197,146,207,170,187,190,172,176,175,191,209,206,199,196,158,198,149,143,208,189,186,216,179,171,174,164,181,162,201,210,183,168,182,144,152,177,154,213,188,215,156,193,212,166,217,195,220,203,180,153,214,219,165,178,218,167,147,163]} 

 Player 2 15:35:51 $DRAW_CARD:  
{"deckType":5} 

 Player 2 15:35:51 $FLIP_CARD:  
{"cardId":163} 

 Player 2 15:35:51 $ADD_STORE_CARD:  
{"cardId":163} 

 Player 2 15:35:51 $DRAW_CARD:  
{"deckType":5} 

 Player 2 15:35:51 $FLIP_CARD:  
{"cardId":147} 

 Player 2 15:35:51 $ADD_STORE_CARD:  
{"cardId":147} 

 Player 2 15:35:51 $DRAW_CARD:  
{"deckType":2} 

 Player 2 15:35:51 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":249} 

 Player 2 15:35:51 $DRAW_CARD:  
{"deckType":2} 

 Player 2 15:35:51 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":305} 

 Player 2 15:35:51 $DRAW_CARD:  
{"deckType":2} 

 Player 2 15:35:51 $FLIP_CARD:  
{"cardId":285} 

 Player 2 15:35:51 $REGISTER_PASSIVE_ITEM:  
{"cardId":285} 

 Player 2 15:35:51 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":285} 

 Player 2 15:35:51 $NEW_MONSTER_ON_PLACE:  
{"cardId":285,"monsterPlaceId":1} 

 Player 2 15:35:52 $DRAW_CARD:  
{"deckType":2} 

 Player 2 15:35:52 $FLIP_CARD:  
{"cardId":241} 

 Player 2 15:35:52 $REGISTER_PASSIVE_ITEM:  
{"cardId":241} 

 Player 2 15:35:52 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":241} 

 Player 2 15:35:52 $NEW_MONSTER_ON_PLACE:  
{"cardId":241,"monsterPlaceId":2} 

 Player 2 15:35:52 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 15:35:52 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 15:35:52 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:35:52 $MOVE_CARD:  
{"moveIndex":1,"cardId":32,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:35:52 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":32,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:35:52 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":32} 

 Player 2 15:35:52 $FLIP_CARD:  
{"cardId":32} 

 Player 2 15:35:52 $FLIP_CARD:  
{"cardId":32} 

 Player 2 15:35:52 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":32} 

 Player 2 15:35:53 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:35:53 $MOVE_CARD:  
{"moveIndex":2,"cardId":100,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:35:53 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":100,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:35:53 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":100} 

 Player 2 15:35:53 $FLIP_CARD:  
{"cardId":100} 

 Player 2 15:35:53 $FLIP_CARD:  
{"cardId":100} 

 Player 2 15:35:53 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":100} 

 Player 2 15:35:53 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:35:53 $MOVE_CARD:  
{"moveIndex":3,"cardId":97,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:35:53 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":97,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:35:54 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":97} 

 Player 2 15:35:54 $FLIP_CARD:  
{"cardId":97} 

 Player 2 15:35:54 $FLIP_CARD:  
{"cardId":97} 

 Player 2 15:35:54 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":97} 

 Player 2 15:35:54 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 15:35:54 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 15:35:54 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:35:54 $MOVE_CARD:  
{"moveIndex":4,"cardId":74,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:35:54 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":74,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:35:54 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":74} 

 Player 2 15:35:54 $FLIP_CARD:  
{"cardId":74} 

 Player 2 15:35:54 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":74} 

 Player 2 15:35:54 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:35:54 $MOVE_CARD:  
{"moveIndex":5,"cardId":40,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:35:55 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":40,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:35:55 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":40} 

 Player 2 15:35:55 $FLIP_CARD:  
{"cardId":40} 

 Player 2 15:35:55 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":40} 

 Player 2 15:35:55 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:35:55 $MOVE_CARD:  
{"moveIndex":6,"cardId":17,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:35:55 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":17,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:35:55 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":17} 

 Player 2 15:35:55 $FLIP_CARD:  
{"cardId":17} 

 Player 2 15:35:55 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":17} 

 Player 2 15:35:55 $GAME_HAS_STARTED:  

 Player 2 15:35:55 $SET_TURN:  
{"playerId":2} 

 Player 2 15:35:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:35:55 $NEXT_STACK_ID:  

 Player 2 15:35:55 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:35:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 15:35:55 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":311,"turnPlayerCardId":311,"stackEffectType":13}} 

 Player 2 15:35:55 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":311,"turnPlayerCardId":311,"stackEffectType":13}} 

 Player 2 15:35:55 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 15:35:55 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 1 15:35:56 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:35:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 15:35:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 2 15:35:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:35:58 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":311,"turnPlayerCardId":311,"stackEffectType":13}} 

 Player 2 15:35:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 2 15:35:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 2 15:35:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:35:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 2 15:35:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:35:58 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 15:35:58 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[315,203]} 

 Player 1 15:35:59 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:35:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 2 15:35:59 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":311,"turnPlayerCardId":311,"stackEffectType":13}} 

 Player 2 15:35:59 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:35:59 $MOVE_CARD:  
{"moveIndex":7,"cardId":38,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:35:59 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":38,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:35:59 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":38} 

 Player 2 15:35:59 $FLIP_CARD:  
{"cardId":38} 

 Player 2 15:35:59 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":38} 

 Player 2 15:35:59 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":311,"turnPlayerCardId":311,"stackEffectType":13}} 

 Player 2 15:35:59 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":1} 

 Player 2 15:35:59 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 15:35:59 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 2 15:36:02 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":1} 

 Player 2 15:36:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 2 15:36:02 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:36:02 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":311,"turnPlayerCardId":311,"stackEffectType":13}} 

 Player 2 15:36:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 2 15:36:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 2 15:36:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:36:02 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 15:36:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 15:36:02 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[315,203]} 

 Player 1 15:36:02 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:36:02 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 2 15:36:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 2 15:36:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:36:02 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 2 15:36:03 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 2 15:36:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 2 15:36:03 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:36:03 $CLEAR_SE_VIS:  

 Player 2 15:36:03 $UPDATE_ACTIONS:  

 Player 2 15:36:20 $NEXT_STACK_ID:  

 Player 2 15:36:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Mask of Infamy"} 

 Player 2 15:36:20 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":311,"attackingPlayerCardId":311,"idOfCardBeingAttacked":285,"stackEffectType":4}} 

 Player 2 15:36:20 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":311,"attackingPlayerCardId":311,"idOfCardBeingAttacked":285,"stackEffectType":4}} 

 Player 2 15:36:20 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 15:36:20 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 1 15:36:20 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:36:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Mask of Infamy"} 

 Player 2 15:36:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add DeclareAttack 2 "}} 

 Player 2 15:36:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:36:23 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":311,"attackingPlayerCardId":311,"idOfCardBeingAttacked":285,"stackEffectType":4}} 

 Player 2 15:36:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding DeclareAttack 2"},"childOfId":10} 

 Player 2 15:36:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 2 15:36:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:36:23 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 2 15:36:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 2 15:36:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:36:23 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 15:36:23 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[315,203]} 

 Player 1 15:36:23 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:36:23 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 2 15:36:23 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 2 15:36:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve DeclareAttack 2 "}} 

 Player 2 15:36:24 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":311,"attackingPlayerCardId":311,"idOfCardBeingAttacked":285,"stackEffectType":4}} 

 Player 2 15:36:24 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":285,"particleType":5} 

 Player 2 15:36:24 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":4,"originStackId":2},"isAfterActivation":true,"index":4} 

 Player 2 15:36:24 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":311,"attackingPlayerCardId":311,"idOfCardBeingAttacked":285,"stackEffectType":4}} 

 Player 2 15:36:24 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":2} 

 Player 2 15:36:24 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 15:36:24 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 2 15:36:26 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":2} 

 Player 2 15:36:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve DeclareAttack 2  "}} 

 Player 2 15:36:27 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:36:27 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":311,"attackingPlayerCardId":311,"idOfCardBeingAttacked":285,"stackEffectType":4}} 

 Player 2 15:36:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve DeclareAttack 2"},"childOfId":15} 

 Player 2 15:36:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 2 15:36:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:36:27 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 15:36:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Mask of Infamy"} 

 Player 1 15:36:27 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[315,203]} 

 Player 1 15:36:27 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:36:27 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 15:36:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 2 15:36:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:36:27 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 2 15:36:27 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 2 15:36:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 2 15:36:27 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:36:27 $CLEAR_SE_VIS:  

 Player 2 15:36:32 $NEXT_STACK_ID:  

 Player 2 15:36:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Mask of Infamy<Monster>"} 

 Player 2 15:36:32 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":311,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":285}} 

 Player 2 15:36:32 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":311,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":285}} 

 Player 2 15:36:32 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 15:36:32 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 1 15:36:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:36:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Mask of Infamy<Monster>"} 

 Player 2 15:36:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add AttackRoll 3 "}} 

 Player 2 15:36:35 $ROLL_DICE:  
{"playerId":2} 

 Player 2 15:36:37 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":5} 

 Player 2 15:36:37 $UPDATE_STACK_VIS:  
{"stackId":3,"text":"player rolled 5 vs Mask of Infamy<Monster>"} 

 Player 2 15:36:37 $SHOW_DICE_ROLL:  
{"stackId":3} 

 Player 2 15:36:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 5 vs Mask of Infamy<Monster>"} 

 Player 2 15:36:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:36:40 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":311,"numberRolled":5,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":285}} 

 Player 2 15:36:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding AttackRoll 3"},"childOfId":20} 

 Player 2 15:36:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 2 15:36:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:36:40 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 2 15:36:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 2 15:36:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:36:40 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 15:36:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Mask of Infamy<Monster>"} 

 Player 1 15:36:40 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[315,203]} 

 Player 1 15:36:40 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:36:40 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 2 15:36:40 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 2 15:36:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve AttackRoll 3 "}} 

 Player 2 15:36:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 5 vs Mask of Infamy<Monster>"} 

 Player 2 15:36:40 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":311,"numberRolled":5,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":285}} 

 Player 2 15:36:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Added 0 to original roll"}} 

 Player 2 15:36:40 $NEXT_STACK_ID:  

 Player 2 15:36:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:36:41 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 15:36:41 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 1 15:36:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Mask of Infamy<Monster>"} 

 Player 1 15:36:41 $LOG_ERROR:  
"no stack effect to show" 
//////Error From Player 1////
  

 Player 1 15:36:41 $LOG_ERROR:  
//////Error From Player 1////
 [object Object]
////// 

 Player 1 15:36:41 $SHOW_ANNOUNCEMENT:  
{"text":"no stack effect to show"} 

 Player 1 15:36:43 $EDEN_CHOSEN:  
{"cardId":214,"playerId":2} 

 Player 2 15:36:43 $CLEAR_SE_VIS:  

 Player 2 15:36:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Mask of Infamy \n2:Player 2 rolled 5 vs Mask of Infamy<Monster>"} 

 Player 2 15:36:43 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":311,"entityToDoDamageCardId":311,"entityToTakeDamageCardId":285,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5}} 

 Player 2 15:36:43 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":311,"numberRolled":5,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":285}} 

 Player 2 15:36:43 $REPLACE_STACK:  
{"currentStack":[{"entityId":4,"creatorCardId":311,"entityToDoDamageCardId":311,"entityToTakeDamageCardId":285,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5},{"entityId":3,"creatorCardId":311,"numberRolled":5,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":285}]} 

 Player 2 15:36:44 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":5,"originStackId":3},"isAfterActivation":true,"index":5} 

 Player 2 15:36:44 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":311,"numberRolled":5,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":285}} 

 Player 2 15:36:44 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":3} 

 Player 2 15:36:44 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 15:36:44 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 1 15:36:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Mask of Infamy<Monster>"} 

 Player 1 15:36:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Mask of Infamy \n2:Player 2 is rolling against Mask of Infamy<Monster>"} 

 Player 2 15:36:46 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":3} 

 Player 2 15:36:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Remove After Resolve AttackRoll 3  "}} 

 Player 2 15:36:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Mask of Infamy"} 

 Player 2 15:36:46 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":311,"numberRolled":5,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":285}} 

 Player 2 15:36:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Response Remove After Resolve AttackRoll 3"},"childOfId":26} 

 Player 2 15:36:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":26} 

 Player 2 15:36:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:36:47 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 2 15:36:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Wait For Response From Player 1 "},"childOfId":26} 

 Player 2 15:36:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:36:47 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 15:36:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Mask of Infamy \n2:Player 2 is rolling against Mask of Infamy<Monster>"} 

 Player 1 15:36:47 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[315,203]} 

 Player 1 15:36:47 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:36:47 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 15:36:47 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 2 15:36:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Resolve CombatDamage 4 "}} 

 Player 2 15:36:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Mask of Infamy"} 

 Player 2 15:36:47 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":311,"entityToDoDamageCardId":311,"entityToTakeDamageCardId":285,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5}} 

 Player 2 15:36:47 $UPDATE_STACK_VIS:  
{"stackId":4,"text":"Blue Baby will deal 1 combat damage to Mask of Infamy"} 

 Player 2 15:36:47 $MONSTER_GET_DAMAGED:  
{"cardId":285,"hpLeft":3,"damageDealerId":311} 

 Player 2 15:36:47 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":311},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":285,"scopeIsPlayer":false,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 

 Player 2 15:36:47 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":5},{"type":0,"number":311},{"type":0,"number":285}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":7,"originStackId":4},"isAfterActivation":true,"index":7} 

 Player 2 15:36:47 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":311,"entityToDoDamageCardId":311,"entityToTakeDamageCardId":285,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5}} 

 Player 2 15:36:47 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":4} 

 Player 2 15:36:47 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 15:36:47 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 2 15:36:50 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":4} 

 Player 2 15:36:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Remove After Resolve CombatDamage 4  "}} 

 Player 2 15:36:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:36:50 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":311,"entityToDoDamageCardId":311,"entityToTakeDamageCardId":285,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5}} 

 Player 2 15:36:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Response Remove After Resolve CombatDamage 4"},"childOfId":31} 

 Player 2 15:36:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":31} 

 Player 2 15:36:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:36:50 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 15:36:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Mask of Infamy"} 

 Player 1 15:36:50 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[315,203]} 

 Player 1 15:36:50 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:36:50 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 2 15:36:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Wait For Response From Player 2 "},"childOfId":31} 

 Player 2 15:36:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:36:50 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 15:36:50 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 2 15:36:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Stack Was Emptied "}} 

 Player 2 15:36:51 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:36:51 $CLEAR_SE_VIS:  

 Player 2 15:38:27 $NEXT_STACK_ID:  

 Player 2 15:38:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Mask of Infamy<Monster>"} 

 Player 2 15:38:27 $ADD_TO_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":311,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":285}} 

 Player 2 15:38:27 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":311,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":285}} 

 Player 2 15:38:27 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 15:38:27 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 1 15:38:27 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:38:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Mask of Infamy<Monster>"} 

 Player 2 15:38:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Add AttackRoll 5 "}} 

 Player 2 15:38:30 $ROLL_DICE:  
{"playerId":2} 

 Player 2 15:38:32 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":1} 

 Player 2 15:38:32 $UPDATE_STACK_VIS:  
{"stackId":5,"text":"player rolled 1 vs Mask of Infamy<Monster>"} 

 Player 2 15:38:33 $SHOW_DICE_ROLL:  
{"stackId":5} 

 Player 2 15:38:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Mask of Infamy<Monster>"} 

 Player 2 15:38:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:38:36 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":311,"numberRolled":1,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":285}} 

 Player 2 15:38:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Response Adding AttackRoll 5"},"childOfId":36} 

 Player 2 15:38:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 2 "},"childOfId":36} 

 Player 2 15:38:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:38:36 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 2 15:38:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Wait For Response From Player 1 "},"childOfId":36} 

 Player 2 15:38:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:38:36 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 15:38:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Mask of Infamy<Monster>"} 

 Player 1 15:38:36 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[315,203]} 

 Player 1 15:38:36 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:38:36 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 15:38:36 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 2 15:38:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Resolve AttackRoll 5 "}} 

 Player 2 15:38:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Mask of Infamy<Monster>"} 

 Player 2 15:38:36 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":311,"numberRolled":1,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":285}} 

 Player 2 15:38:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Added 0 to original roll"}} 

 Player 2 15:38:36 $NEXT_STACK_ID:  

 Player 2 15:38:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:38:36 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 15:38:36 $SHOW_STACK_EFFECT:  
{"effectId":6} 

 Player 1 15:38:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Mask of Infamy<Monster>"} 

 Player 1 15:38:36 $LOG_ERROR:  
"no stack effect to show" 
//////Error From Player 1////
  

 Player 1 15:38:36 $LOG_ERROR:  
//////Error From Player 1////
 [object Object]
////// 

 Player 1 15:38:36 $SHOW_ANNOUNCEMENT:  
{"text":"no stack effect to show"} 

 Player 2 15:38:39 $CLEAR_SE_VIS:  

 Player 2 15:38:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Mask of Infamy combat damage to Blue Baby \n2:Player 2 rolled 1 vs Mask of Infamy<Monster>"} 

 Player 2 15:38:39 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":311,"entityToDoDamageCardId":285,"entityToTakeDamageCardId":311,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1}} 

 Player 2 15:38:39 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":311,"numberRolled":1,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":285}} 

 Player 2 15:38:39 $REPLACE_STACK:  
{"currentStack":[{"entityId":6,"creatorCardId":311,"entityToDoDamageCardId":285,"entityToTakeDamageCardId":311,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1},{"entityId":5,"creatorCardId":311,"numberRolled":1,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":285}]} 

 Player 2 15:38:39 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":1},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":8,"originStackId":5},"isAfterActivation":true,"index":8} 

 Player 2 15:38:39 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":311,"numberRolled":1,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":285}} 

 Player 2 15:38:39 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":5} 

 Player 2 15:38:39 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 15:38:39 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 1 15:38:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Mask of Infamy<Monster>"} 

 Player 1 15:38:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Mask of Infamy combat damage to Blue Baby \n2:Player 2 is rolling against Mask of Infamy<Monster>"} 

 Player 2 15:38:42 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":5} 

 Player 2 15:38:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Remove After Resolve AttackRoll 5  "}} 

 Player 2 15:38:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Mask of Infamy combat damage to Blue Baby"} 

 Player 2 15:38:42 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":311,"numberRolled":1,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":285}} 

 Player 2 15:38:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Response Remove After Resolve AttackRoll 5"},"childOfId":42} 

 Player 2 15:38:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Wait For Response From Player 2 "},"childOfId":42} 

 Player 2 15:38:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:38:42 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 15:38:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Wait For Response From Player 1 "},"childOfId":42} 

 Player 2 15:38:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:38:42 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 15:38:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Mask of Infamy combat damage to Blue Baby \n2:Player 2 is rolling against Mask of Infamy<Monster>"} 

 Player 1 15:38:42 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[315,203]} 

 Player 1 15:38:42 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:38:42 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 2 15:38:43 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 2 15:38:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Resolve CombatDamage 6 "}} 

 Player 2 15:38:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Mask of Infamy combat damage to Blue Baby"} 

 Player 2 15:38:43 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":311,"entityToDoDamageCardId":285,"entityToTakeDamageCardId":311,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1}} 

 Player 2 15:38:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Mask of Infamy 1 combat damage to Blue Baby"} 

 Player 2 15:38:43 $UPDATE_STACK_VIS:  
{"stackId":6,"text":"Mask of Infamy will deal 1 combat damage to Blue Baby"} 

 Player 2 15:38:43 $PLAYER_GET_HIT:  
{"playerId":2,"damage":1,"damageDealerId":285} 

 Player 2 15:38:43 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":285}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":9,"originStackId":-1},"isAfterActivation":true,"index":9} 

 Player 2 15:38:43 $LOG_ERROR:  
{"message":"\"Cannot read property 'name' of null\"","stack":"\"TypeError: Cannot read property 'name' of null\\n    at AtSpecificHp.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:59:73)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\\n    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113284:71\\n    at new Promise (<anonymous>)\\n    at 486.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113264:14)\\n    at AtSpecificHp.testCondition (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:38:16)\\n    at Function.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:365:56)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\""} 
//////Error From Player 2////
  

 Player 2 15:38:43 $LOG_ERROR:  
//////Error From Player 2////

 "\"Cannot read property 'name' of null\""

 + "\"TypeError: Cannot read property 'name' of null\
    at AtSpecificHp.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:59:73)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113284:71\
    at new Promise (<anonymous>)\
    at 486.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113264:14)\
    at AtSpecificHp.testCondition (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:38:16)\
    at Function.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:365:56)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\""

////// 
//////Error From Player 2////

 "\"Cannot read property 'name' of null\""

 + "\"TypeError: Cannot read property 'name' of null\
    at AtSpecificHp.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:59:73)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113284:71\
    at new Promise (<anonymous>)\
    at 486.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113264:14)\
    at AtSpecificHp.testCondition (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:38:16)\
    at Function.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:365:56)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\""

////// 

 Player 2 15:38:43 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_TAKEN","args":[{"type":2,"number":1},{"type":2,"number":1},{"type":0,"number":285}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":10,"originStackId":6},"isAfterActivation":true,"index":10} 

 Player 2 15:38:43 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":311,"entityToDoDamageCardId":285,"entityToTakeDamageCardId":311,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1}} 

 Player 2 15:38:43 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":6} 

 Player 2 15:38:43 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 15:38:43 $SHOW_STACK_EFFECT:  
{"effectId":6} 

 Player 1 15:38:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Mask of Infamy combat damage to Blue Baby"} 

 Player 2 15:38:45 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":6} 

 Player 2 15:38:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Remove After Resolve CombatDamage 6  "}} 

 Player 2 15:38:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:38:46 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":311,"entityToDoDamageCardId":285,"entityToTakeDamageCardId":311,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1}} 

 Player 2 15:38:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Response Remove After Resolve CombatDamage 6"},"childOfId":47} 

 Player 2 15:38:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Wait For Response From Player 1 "},"childOfId":47} 

 Player 2 15:38:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:38:46 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 15:38:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Mask of Infamy combat damage to Blue Baby"} 

 Player 1 15:38:46 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[315,203]} 

 Player 1 15:38:46 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:38:46 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 2 15:38:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Wait For Response From Player 2 "},"childOfId":47} 

 Player 2 15:38:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:38:46 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 2 15:38:46 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 2 15:38:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Stack Was Emptied "}} 

 Player 2 15:38:47 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:38:47 $CLEAR_SE_VIS:  

 Player 2 15:42:38 $MATCH: 