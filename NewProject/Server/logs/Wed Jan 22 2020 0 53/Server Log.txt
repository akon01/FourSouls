Start Log 

 Player 1 00:53:40 $MATCH:  

 Player 1 00:53:40 $START_GAME:  

 Player 1 00:53:41 $MOVE_TO_TABLE:  

 Player 2 00:53:41 $MOVE_TO_TABLE:  

 Player 2 00:53:49 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 1 00:53:49 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 00:53:49 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":296,"itemCardId":297} 

 Player 2 00:53:49 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":293}],"result":true,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 00:53:49 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":292,"itemCardId":293} 

 Player 2 00:53:49 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[29,117,122,63,111,96,16,24,43,34,78,68,124,140,10,81,70,132,45,54,112,23,59,88,80,17,100,94,15,33,77,91,86,38,61,44,64,97,57,126,113,67,92,48,79,89,53,9,123,130,42,25,133,135,46,116,107,50,39,83,7,141,105,30,49,108,131,11,40,71,129,65,125,118,41,74,93,72,87,110,69,115,120,62,134,56,60,55,136,12,84,22,106,32,139,90,98,114,103,51,37,95,142,35,102,76,104,119,137,47,8,26,85,121,66,20,21,99,58,82,19,101,31,27,109,138,36,28,75,73,18,14,52,13,127,128]} 

 Player 2 00:53:49 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[267,237,266,270,273,244,262,268,249,241,281,261,243,233,232,235,259,236,248,250,257,277,275,280,247,279,276,242,274,240,253,264,230,258,234,228,251,252,231,245,265,254,269,239,229,272,263,271,278,238,260,246,255,256]} 

 Player 2 00:53:49 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[150,219,157,205,187,177,189,175,183,151,202,164,213,222,172,170,211,204,224,203,185,160,149,201,182,216,212,147,165,163,218,166,191,171,181,179,184,210,225,173,161,156,180,207,174,214,146,220,153,195,186,217,162,167,155,168,145,206,192,223,169,221,158,193,176,154,208,215,209,188,152,197,190,199,148,194,196,200,159,198,178]} 

 Player 2 00:53:49 $DRAW_CARD:  
{"deckType":5} 

 Player 2 00:53:49 $FLIP_CARD:  
{"cardId":178} 

 Player 2 00:53:49 $ADD_STORE_CARD:  
{"cardId":178} 

 Player 2 00:53:49 $DRAW_CARD:  
{"deckType":5} 

 Player 2 00:53:49 $FLIP_CARD:  
{"cardId":198} 

 Player 2 00:53:49 $ADD_STORE_CARD:  
{"cardId":198} 

 Player 2 00:53:49 $DRAW_CARD:  
{"deckType":2} 

 Player 2 00:53:49 $FLIP_CARD:  
{"cardId":256} 

 Player 2 00:53:49 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":256} 

 Player 2 00:53:49 $NEW_MONSTER_ON_PLACE:  
{"cardId":256,"monsterPlaceId":1} 

 Player 2 00:53:49 $DRAW_CARD:  
{"deckType":2} 

 Player 2 00:53:49 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":255} 

 Player 2 00:53:49 $DRAW_CARD:  
{"deckType":2} 

 Player 2 00:53:50 $FLIP_CARD:  
{"cardId":246} 

 Player 2 00:53:50 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":246} 

 Player 2 00:53:50 $NEW_MONSTER_ON_PLACE:  
{"cardId":246,"monsterPlaceId":2} 

 Player 2 00:53:50 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 00:53:50 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 00:53:50 $DRAW_CARD:  
{"deckType":1} 

 Player 2 00:53:50 $MOVE_CARD:  
{"moveIndex":1,"cardId":128,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 00:53:50 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":297}],"result":true,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 00:53:50 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":128,"flipIfFlipped":false,"playerId":2} 

 Player 2 00:53:50 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":128} 

 Player 2 00:53:50 $FLIP_CARD:  
{"cardId":128} 

 Player 2 00:53:50 $FLIP_CARD:  
{"cardId":128} 

 Player 2 00:53:50 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":128} 

 Player 2 00:53:50 $DRAW_CARD:  
{"deckType":1} 

 Player 2 00:53:50 $MOVE_CARD:  
{"moveIndex":2,"cardId":127,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 00:53:51 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":127,"flipIfFlipped":false,"playerId":2} 

 Player 2 00:53:51 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":127} 

 Player 2 00:53:51 $FLIP_CARD:  
{"cardId":127} 

 Player 2 00:53:51 $FLIP_CARD:  
{"cardId":127} 

 Player 2 00:53:51 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":127} 

 Player 2 00:53:51 $DRAW_CARD:  
{"deckType":1} 

 Player 2 00:53:51 $MOVE_CARD:  
{"moveIndex":3,"cardId":13,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 00:53:51 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":13,"flipIfFlipped":false,"playerId":2} 

 Player 2 00:53:51 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":13} 

 Player 2 00:53:51 $FLIP_CARD:  
{"cardId":13} 

 Player 2 00:53:51 $FLIP_CARD:  
{"cardId":13} 

 Player 2 00:53:51 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":13} 

 Player 2 00:53:51 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 00:53:51 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 00:53:51 $DRAW_CARD:  
{"deckType":1} 

 Player 2 00:53:51 $MOVE_CARD:  
{"moveIndex":4,"cardId":52,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 00:53:52 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":52,"flipIfFlipped":false,"playerId":2} 

 Player 2 00:53:52 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":52} 

 Player 2 00:53:52 $FLIP_CARD:  
{"cardId":52} 

 Player 2 00:53:52 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":52} 

 Player 2 00:53:52 $DRAW_CARD:  
{"deckType":1} 

 Player 2 00:53:52 $MOVE_CARD:  
{"moveIndex":5,"cardId":14,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 00:53:52 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":14,"flipIfFlipped":false,"playerId":2} 

 Player 2 00:53:52 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":14} 

 Player 2 00:53:52 $FLIP_CARD:  
{"cardId":14} 

 Player 2 00:53:52 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":14} 

 Player 2 00:53:52 $DRAW_CARD:  
{"deckType":1} 

 Player 2 00:53:52 $MOVE_CARD:  
{"moveIndex":6,"cardId":18,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 00:53:53 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":18,"flipIfFlipped":false,"playerId":2} 

 Player 2 00:53:53 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":18} 

 Player 2 00:53:53 $FLIP_CARD:  
{"cardId":18} 

 Player 2 00:53:53 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":18} 

 Player 2 00:53:53 $GAME_HAS_STARTED:  

 Player 2 00:53:53 $SET_TURN:  
{"playerId":2} 

 Player 2 00:53:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:53:53 $NEXT_STACK_ID:  

 Player 2 00:53:53 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:53:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 00:53:53 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 2 00:53:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 00:53:53 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 2 00:53:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 2 00:53:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:53:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 00:53:53 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 2 00:53:53 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 00:53:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 2 00:53:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 2 00:53:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:53:53 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 00:53:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 2 00:53:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:53:53 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:53:53 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 00:53:53 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 00:53:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 00:53:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 00:53:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 00:53:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 00:53:53 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:53:53 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 00:53:53 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 00:53:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 2 00:53:53 $DRAW_CARD:  
{"deckType":1} 

 Player 2 00:53:53 $MOVE_CARD:  
{"moveIndex":7,"cardId":73,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 00:53:54 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":73,"flipIfFlipped":false,"playerId":2} 

 Player 2 00:53:54 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":73} 

 Player 2 00:53:54 $FLIP_CARD:  
{"cardId":73} 

 Player 2 00:53:54 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":73} 

 Player 2 00:53:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 00:53:54 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 2 00:53:54 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 00:53:54 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:53:54 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 2 00:53:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 2 00:53:54 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:53:54 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 2 00:53:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 2 00:53:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 2 00:53:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:53:54 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:53:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 00:53:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 00:53:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 00:53:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 00:53:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 00:53:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 00:53:55 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:53:55 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 2 00:53:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 2 00:53:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:53:55 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 2 00:53:55 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 2 00:53:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 2 00:53:55 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:53:55 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 00:53:55 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 00:53:55 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 00:53:55 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 00:53:55 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 00:53:55 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 00:53:55 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 00:53:55 $UPDATE_ACTIONS:  

 Player 2 00:53:56 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 00:53:57 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 00:53:58 $SHOW_DECISION:  
{"startCardId":73,"endCardId":73,"flipEndCard":true} 

 Player 2 00:54:01 $NEXT_STACK_ID:  

 Player 2 00:54:01 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:54:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime "} 

 Player 2 00:54:01 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":292,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":73,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 00:54:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime "} 

 Player 2 00:54:01 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":292,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":73,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 00:54:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add PlayLootCardStackEffect 2 "}} 

 Player 2 00:54:01 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":73} 

 Player 2 00:54:01 $MOVE_CARD:  
{"moveIndex":8,"cardId":73,"placeID":300,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 00:54:01 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 00:54:01 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 00:54:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime "} 

 Player 1 00:54:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime "} 

 Player 1 00:54:02 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":73,"flipIfFlipped":true,"playerId":2} 

 Player 2 00:54:02 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":73} 

 Player 2 00:54:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime: addMoney"} 

 Player 2 00:54:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:54:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime: addMoney"} 

 Player 2 00:54:02 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":292,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":73,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":73,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 00:54:02 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 00:54:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding PlayLootCardStackEffect 2"},"childOfId":10} 

 Player 2 00:54:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 2 00:54:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:54:02 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 2 00:54:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 2 00:54:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:54:02 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:54:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime "} 

 Player 1 00:54:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime "} 

 Player 1 00:54:02 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:54:02 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 2 00:54:02 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 2 00:54:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve PlayLootCardStackEffect 2 "}} 

 Player 2 00:54:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime: addMoney"} 

 Player 2 00:54:02 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":73,"particleType":6} 

 Player 2 00:54:04 $DISABLE_PARTICLE_EFFECT:  
{"cardId":73,"particleType":6} 

 Player 2 00:54:04 $SET_MONEY:  
{"playerId":2,"numOfCoins":13} 

 Player 2 00:54:04 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":10}],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 2 00:54:04 $REMOVE_FROM_PILE:  
{"cardId":73} 

 Player 2 00:54:04 $MOVE_CARD:  
{"moveIndex":9,"cardId":73,"placeID":301,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 00:54:05 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":73,"flipIfFlipped":true,"playerId":2} 

 Player 2 00:54:05 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":73} 

 Player 2 00:54:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime: addMoney"} 

 Player 2 00:54:05 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":292,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":73,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 00:54:05 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 00:54:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:54:05 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":292,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":73,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 00:54:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve PlayLootCardStackEffect 2  "}} 

 Player 2 00:54:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:54:05 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":292,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":73,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 00:54:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve PlayLootCardStackEffect 2"},"childOfId":15} 

 Player 2 00:54:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 2 00:54:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:54:05 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:54:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime "} 

 Player 1 00:54:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime "} 

 Player 1 00:54:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime "} 

 Player 1 00:54:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime "} 

 Player 1 00:54:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime "} 

 Player 1 00:54:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime "} 

 Player 1 00:54:05 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:54:05 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 00:54:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 2 00:54:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:54:05 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 2 00:54:05 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 2 00:54:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 2 00:54:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:54:05 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 00:54:05 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 00:54:05 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 00:54:05 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 00:54:05 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 00:54:06 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 00:54:06 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 00:54:06 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 00:54:06 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 00:54:06 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 00:54:06 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 00:54:07 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 00:54:08 $SHOW_DECISION:  
{"startCardId":292,"endCardId":292} 

 Player 2 00:54:08 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 00:54:11 $NEXT_STACK_ID:  

 Player 2 00:54:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:54:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Lilith"} 

 Player 2 00:54:11 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":292,"hasLockingStackEffect":false,"itemToPlayCardId":292,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 00:54:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Lilith"} 

 Player 2 00:54:11 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":292,"hasLockingStackEffect":false,"itemToPlayCardId":292,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 00:54:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add ActivateItem 3 "}} 

 Player 1 00:54:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 00:54:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 00:54:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Lilith"} 

 Player 1 00:54:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Lilith"} 

 Player 2 00:54:12 $SHOW_DECISION:  
{"startCardId":292,"endCardId":14,"flipEndCard":true} 

 Player 2 00:54:15 $USE_ITEM:  
{"cardId":292} 

 Player 2 00:54:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:54:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Lilith"} 

 Player 2 00:54:16 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":292,"hasLockingStackEffect":false,"itemToPlayCardId":292,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 00:54:16 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 00:54:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding ActivateItem 3"},"childOfId":20} 

 Player 2 00:54:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 2 00:54:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:54:16 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 2 00:54:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 2 00:54:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:54:16 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:54:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Lilith"} 

 Player 1 00:54:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Lilith"} 

 Player 1 00:54:16 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:54:16 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 2 00:54:16 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 2 00:54:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve ActivateItem 3 "}} 

 Player 2 00:54:16 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":292,"particleType":6} 

 Player 2 00:54:18 $DISABLE_PARTICLE_EFFECT:  
{"cardId":292,"particleType":6} 

 Player 2 00:54:18 $NEXT_STACK_ID:  

 Player 2 00:54:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Lilith"} 

 Player 2 00:54:18 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":14} 

 Player 2 00:54:18 $MOVE_CARD:  
{"moveIndex":10,"cardId":14,"placeID":300,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 00:54:18 $MOVE_CARD_END:  
{"moveIndex":10,"cardId":14,"flipIfFlipped":true,"playerId":2} 

 Player 2 00:54:18 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":14} 

 Player 2 00:54:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 1 Penny(6): addMoney \n2:Player 2 activated Lilith"} 

 Player 2 00:54:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:54:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 1 Penny(6): addMoney \n2:Player 2 activated Lilith"} 

 Player 2 00:54:19 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":292,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":14,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":14,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 00:54:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 1 Penny(6): addMoney \n2:Player 2 activated Lilith"} 

 Player 2 00:54:19 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":292,"hasLockingStackEffect":false,"itemToPlayCardId":292,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 00:54:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 1 Penny(6): addMoney \n2:Player 2 activated Lilith"} 

 Player 2 00:54:19 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":292,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":14,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":14,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 00:54:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 1 Penny(6): addMoney \n2:Player 2 activated Lilith"} 

 Player 2 00:54:19 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":292,"hasLockingStackEffect":false,"itemToPlayCardId":292,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 00:54:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 1 Penny(6): addMoney \n2:Player 2 activated Lilith"} 

 Player 2 00:54:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 1 Penny(6): addMoney \n2:Player 2 activated Lilith"} 

 Player 2 00:54:19 $REPLACE_STACK:  
{"currentStack":[{"entityId":4,"creatorCardId":292,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":14,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":14,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":3,"creatorCardId":292,"hasLockingStackEffect":false,"itemToPlayCardId":292,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 

 Player 2 00:54:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 1 Penny(6): addMoney \n2:Player 2 activated Lilith"} 

 Player 2 00:54:19 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":292,"hasLockingStackEffect":false,"itemToPlayCardId":292,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 00:54:19 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 00:54:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 1 Penny(6): addMoney"} 

 Player 2 00:54:19 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":292,"hasLockingStackEffect":false,"itemToPlayCardId":292,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 00:54:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Remove After Resolve ActivateItem 3  "}} 

 Player 2 00:54:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 1 Penny(6): addMoney"} 

 Player 2 00:54:19 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":292,"hasLockingStackEffect":false,"itemToPlayCardId":292,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 00:54:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Response Remove After Resolve ActivateItem 3"},"childOfId":25} 

 Player 2 00:54:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Wait For Response From Player 2 "},"childOfId":25} 

 Player 2 00:54:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:54:19 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 2 00:54:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 1 "},"childOfId":25} 

 Player 2 00:54:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:54:19 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:54:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Lilith"} 

 Player 1 00:54:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Lilith"} 

 Player 1 00:54:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 1 Penny(6) "} 

 Player 1 00:54:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 1 Penny(6) "} 

 Player 1 00:54:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 1 Penny(6) "} 

 Player 1 00:54:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 1 Penny(6) "} 

 Player 1 00:54:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 1 Penny(6) "} 

 Player 1 00:54:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 1 Penny(6) "} 

 Player 1 00:54:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 1 Penny(6) "} 

 Player 1 00:54:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 1 Penny(6) "} 

 Player 1 00:54:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 1 Penny(6) "} 

 Player 1 00:54:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 1 Penny(6) "} 

 Player 1 00:54:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 1 Penny(6)  \n2:Player 2 activated Lilith"} 

 Player 1 00:54:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 1 Penny(6)  \n2:Player 2 activated Lilith"} 

 Player 1 00:54:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 1 Penny(6)  \n2:Player 2 activated Lilith"} 

 Player 1 00:54:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 1 Penny(6)  \n2:Player 2 activated Lilith"} 

 Player 1 00:54:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 1 Penny(6)  \n2:Player 2 activated Lilith"} 

 Player 1 00:54:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 1 Penny(6)  \n2:Player 2 activated Lilith"} 

 Player 1 00:54:20 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:54:20 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 2 00:54:20 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 2 00:54:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Resolve PlayLootCardStackEffect 4 "}} 

 Player 2 00:54:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 1 Penny(6): addMoney"} 

 Player 2 00:54:20 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":14,"particleType":6} 

 Player 2 00:54:21 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 00:54:22 $DISABLE_PARTICLE_EFFECT:  
{"cardId":14,"particleType":6} 

 Player 2 00:54:22 $SET_MONEY:  
{"playerId":2,"numOfCoins":14} 

 Player 2 00:54:22 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":1}],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 2 00:54:22 $REMOVE_FROM_PILE:  
{"cardId":14} 

 Player 2 00:54:22 $MOVE_CARD:  
{"moveIndex":11,"cardId":14,"placeID":301,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 00:54:22 $MOVE_CARD_END:  
{"moveIndex":11,"cardId":14,"flipIfFlipped":true,"playerId":2} 

 Player 2 00:54:22 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":14} 

 Player 2 00:54:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 1 Penny(6): addMoney"} 

 Player 2 00:54:22 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":292,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":14,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 00:54:22 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 00:54:22 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:54:22 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":292,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":14,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 00:54:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Remove After Resolve PlayLootCardStackEffect 4  "}} 

 Player 2 00:54:22 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:54:22 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":292,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":14,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 00:54:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Response Remove After Resolve PlayLootCardStackEffect 4"},"childOfId":30} 

 Player 2 00:54:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Wait For Response From Player 1 "},"childOfId":30} 

 Player 2 00:54:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:54:23 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:54:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 1 Penny(6) "} 

 Player 1 00:54:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 1 Penny(6) "} 

 Player 1 00:54:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 1 Penny(6) "} 

 Player 1 00:54:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 1 Penny(6) "} 

 Player 1 00:54:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 1 Penny(6) "} 

 Player 1 00:54:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 1 Penny(6) "} 

 Player 1 00:54:23 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:54:23 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 2 00:54:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 2 "},"childOfId":30} 

 Player 2 00:54:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:54:23 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 2 00:54:23 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 2 00:54:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Stack Was Emptied "}} 

 Player 2 00:54:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:54:23 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 00:54:23 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 00:54:23 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 00:54:23 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 00:54:23 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 00:54:23 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 00:54:23 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 00:54:23 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 00:54:23 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 00:54:23 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 00:54:23 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 00:54:23 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 00:54:23 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 00:54:23 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 00:54:23 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 00:54:23 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 00:54:23 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 00:54:24 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 00:54:25 $SHOW_DECISION:  
{"startCardId":292,"endCardId":246} 

 Player 2 00:54:25 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 00:54:28 $NEXT_STACK_ID:  

 Player 2 00:54:28 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:54:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fatty"} 

 Player 2 00:54:28 $ADD_TO_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":292,"attackingPlayerCardId":292,"idOfCardBeingAttacked":246,"stackEffectType":4}} 

 Player 2 00:54:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fatty"} 

 Player 2 00:54:28 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":292,"attackingPlayerCardId":292,"idOfCardBeingAttacked":246,"stackEffectType":4}} 

 Player 2 00:54:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Add DeclareAttack 5 "}} 

 Player 2 00:54:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:54:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fatty"} 

 Player 2 00:54:28 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":292,"attackingPlayerCardId":292,"idOfCardBeingAttacked":246,"stackEffectType":4}} 

 Player 2 00:54:28 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 00:54:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Response Adding DeclareAttack 5"},"childOfId":35} 

 Player 2 00:54:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Wait For Response From Player 2 "},"childOfId":35} 

 Player 2 00:54:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:54:28 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 2 00:54:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 1 "},"childOfId":35} 

 Player 2 00:54:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:54:28 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:54:28 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 00:54:28 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 00:54:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fatty"} 

 Player 1 00:54:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fatty"} 

 Player 1 00:54:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fatty"} 

 Player 1 00:54:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fatty"} 

 Player 1 00:54:28 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:54:28 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 2 00:54:28 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 2 00:54:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Resolve DeclareAttack 5 "}} 

 Player 2 00:54:28 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":246,"particleType":5} 

 Player 2 00:54:28 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":6,"originStackId":5},"isAfterActivation":true,"index":6} 

 Player 2 00:54:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fatty"} 

 Player 2 00:54:28 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":292,"attackingPlayerCardId":292,"idOfCardBeingAttacked":246,"stackEffectType":4}} 

 Player 2 00:54:29 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 00:54:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:54:29 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":292,"attackingPlayerCardId":292,"idOfCardBeingAttacked":246,"stackEffectType":4}} 

 Player 2 00:54:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Remove After Resolve DeclareAttack 5  "}} 

 Player 2 00:54:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:54:29 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":292,"attackingPlayerCardId":292,"idOfCardBeingAttacked":246,"stackEffectType":4}} 

 Player 2 00:54:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Response Remove After Resolve DeclareAttack 5"},"childOfId":40} 

 Player 2 00:54:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Wait For Response From Player 1 "},"childOfId":40} 

 Player 2 00:54:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:54:29 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:54:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fatty"} 

 Player 1 00:54:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fatty"} 

 Player 1 00:54:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fatty"} 

 Player 1 00:54:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fatty"} 

 Player 1 00:54:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fatty"} 

 Player 1 00:54:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fatty"} 

 Player 1 00:54:29 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:54:29 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 2 00:54:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 2 "},"childOfId":40} 

 Player 2 00:54:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:54:29 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 2 00:54:29 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 2 00:54:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Stack Was Emptied "}} 

 Player 2 00:54:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:54:29 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 00:54:29 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 00:54:29 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 00:54:29 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 00:54:29 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 00:54:29 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 00:54:29 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 00:54:29 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 00:54:29 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 00:54:29 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 00:54:29 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 00:54:29 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 00:54:29 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 00:54:29 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 00:54:30 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 00:54:30 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 00:54:30 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 00:54:30 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 00:54:30 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 00:54:30 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 00:54:30 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 00:54:30 $NEXT_STACK_ID:  

 Player 2 00:54:30 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:54:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fatty<Monster>"} 

 Player 2 00:54:30 $ADD_TO_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":292,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":246}} 

 Player 2 00:54:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fatty<Monster>"} 

 Player 2 00:54:30 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":292,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":246}} 

 Player 2 00:54:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Add AttackRoll 6 "}} 

 Player 2 00:54:30 $ROLL_DICE:  
{"playerId":2} 

 Player 1 00:54:30 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 00:54:30 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 00:54:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fatty<Monster>"} 

 Player 1 00:54:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fatty<Monster>"} 

 Player 2 00:54:30 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 00:54:31 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":5} 

 Player 2 00:54:31 $UPDATE_STACK_VIS:  
{"stackId":6,"text":"player rolled 5 vs Fatty<Monster>"} 

 Player 2 00:54:31 $SHOW_DICE_ROLL:  
{"stackId":6} 

 Player 2 00:54:31 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 00:54:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 5 vs Fatty<Monster>"} 

 Player 2 00:54:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:54:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 5 vs Fatty<Monster>"} 

 Player 2 00:54:34 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":292,"numberRolled":5,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":246}} 

 Player 2 00:54:34 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 2 00:54:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Response Adding AttackRoll 6"},"childOfId":45} 

 Player 2 00:54:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Wait For Response From Player 2 "},"childOfId":45} 

 Player 2 00:54:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:54:34 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 2 00:54:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Wait For Response From Player 1 "},"childOfId":45} 

 Player 2 00:54:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:54:34 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:54:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fatty<Monster>"} 

 Player 1 00:54:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fatty<Monster>"} 

 Player 1 00:54:34 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:54:34 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 2 00:54:34 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 2 00:54:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Resolve AttackRoll 6 "}} 

 Player 2 00:54:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Added 0 to original roll"}} 

 Player 2 00:54:35 $NEXT_STACK_ID:  

 Player 2 00:54:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 5 vs Fatty<Monster>"} 

 Player 2 00:54:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:54:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Fatty \n2:Player 2 rolled 5 vs Fatty<Monster>"} 

 Player 2 00:54:35 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":292,"entityToDoDamageCardId":292,"entityToTakeDamageCardId":246,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 00:54:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Fatty \n2:Player 2 rolled 5 vs Fatty<Monster>"} 

 Player 2 00:54:35 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":292,"numberRolled":5,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":246}} 

 Player 2 00:54:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Fatty \n2:Player 2 rolled 5 vs Fatty<Monster>"} 

 Player 2 00:54:35 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":292,"entityToDoDamageCardId":292,"entityToTakeDamageCardId":246,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 00:54:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Fatty \n2:Player 2 rolled 5 vs Fatty<Monster>"} 

 Player 2 00:54:35 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":292,"numberRolled":5,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":246}} 

 Player 2 00:54:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Fatty \n2:Player 2 rolled 5 vs Fatty<Monster>"} 

 Player 2 00:54:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Fatty \n2:Player 2 rolled 5 vs Fatty<Monster>"} 

 Player 2 00:54:35 $REPLACE_STACK:  
{"currentStack":[{"entityId":7,"creatorCardId":292,"entityToDoDamageCardId":292,"entityToTakeDamageCardId":246,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":6,"creatorCardId":292,"numberRolled":5,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":246}]} 

 Player 2 00:54:35 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":2},{"type":2,"number":2}],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":7,"originStackId":6},"isAfterActivation":true,"index":7} 

 Player 2 00:54:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Fatty \n2:Player 2 rolled 5 vs Fatty<Monster>"} 

 Player 2 00:54:35 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":292,"numberRolled":5,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":246}} 

 Player 2 00:54:35 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 2 00:54:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Fatty"} 

 Player 2 00:54:35 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":292,"numberRolled":5,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":246}} 

 Player 2 00:54:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Remove After Resolve AttackRoll 6  "}} 

 Player 2 00:54:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Fatty"} 

 Player 2 00:54:35 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":292,"numberRolled":5,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":246}} 

 Player 2 00:54:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Response Remove After Resolve AttackRoll 6"},"childOfId":51} 

 Player 2 00:54:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Wait For Response From Player 2 "},"childOfId":51} 

 Player 2 00:54:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:54:35 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 2 00:54:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Wait For Response From Player 1 "},"childOfId":51} 

 Player 2 00:54:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:54:35 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:54:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fatty<Monster>"} 

 Player 1 00:54:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fatty<Monster>"} 

 Player 1 00:54:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Fatty"} 

 Player 1 00:54:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Fatty"} 

 Player 1 00:54:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Fatty"} 

 Player 1 00:54:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Fatty"} 

 Player 1 00:54:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Fatty"} 

 Player 1 00:54:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Fatty"} 

 Player 1 00:54:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Fatty"} 

 Player 1 00:54:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Fatty"} 

 Player 1 00:54:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Fatty"} 

 Player 1 00:54:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Fatty"} 

 Player 1 00:54:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Fatty \n2:Player 2 is rolling against Fatty<Monster>"} 

 Player 1 00:54:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Fatty \n2:Player 2 is rolling against Fatty<Monster>"} 

 Player 1 00:54:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Fatty \n2:Player 2 is rolling against Fatty<Monster>"} 

 Player 1 00:54:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Fatty \n2:Player 2 is rolling against Fatty<Monster>"} 

 Player 1 00:54:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Fatty \n2:Player 2 is rolling against Fatty<Monster>"} 

 Player 1 00:54:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Fatty \n2:Player 2 is rolling against Fatty<Monster>"} 

 Player 1 00:54:36 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:54:36 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 2 00:54:36 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 2 00:54:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Resolve CombatDamage 7 "}} 

 Player 2 00:54:36 $UPDATE_STACK_VIS:  
{"stackId":7,"text":"Lilith will deal 1 combat damage to Fatty"} 

 Player 2 00:54:36 $MONSTER_GET_DAMAGED:  
{"cardId":246,"hpLeft":3,"damageDealerId":292} 

 Player 2 00:54:36 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":292}],"result":null,"preventMethod":false,"methodScopeId":246,"scopeIsPlayer":false,"index":8,"originStackId":-1},"isAfterActivation":true,"index":8} 

 Player 2 00:54:36 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":5},{"type":0,"number":292},{"type":0,"number":246}],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":9,"originStackId":7},"isAfterActivation":true,"index":9} 

 Player 2 00:54:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Fatty"} 

 Player 2 00:54:36 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":292,"entityToDoDamageCardId":292,"entityToTakeDamageCardId":246,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 00:54:36 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 2 00:54:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:54:36 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":292,"entityToDoDamageCardId":292,"entityToTakeDamageCardId":246,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 00:54:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":56,"_text":"Remove After Resolve CombatDamage 7  "}} 

 Player 2 00:54:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:54:36 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":292,"entityToDoDamageCardId":292,"entityToTakeDamageCardId":246,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 00:54:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":57,"_text":"Response Remove After Resolve CombatDamage 7"},"childOfId":56} 

 Player 2 00:54:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":58,"_text":"Wait For Response From Player 1 "},"childOfId":56} 

 Player 2 00:54:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:54:37 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:54:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Fatty"} 

 Player 1 00:54:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Fatty"} 

 Player 1 00:54:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Fatty"} 

 Player 1 00:54:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Fatty"} 

 Player 1 00:54:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Fatty"} 

 Player 1 00:54:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Fatty"} 

 Player 1 00:54:37 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:54:37 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 2 00:54:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":59,"_text":"Wait For Response From Player 2 "},"childOfId":56} 

 Player 2 00:54:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:54:37 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 2 00:54:37 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 2 00:54:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":60,"_text":"Stack Was Emptied "}} 

 Player 2 00:54:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:54:37 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 00:54:37 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 00:54:37 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 00:54:37 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 00:54:37 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 00:54:37 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 00:54:37 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 00:54:37 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 00:54:37 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 00:54:37 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 00:54:37 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 00:54:37 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 00:54:37 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 00:54:37 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 00:54:37 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 00:54:37 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 00:54:37 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 00:54:37 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 00:54:37 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 00:54:37 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 00:54:37 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 00:54:38 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 2 00:54:38 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 2 00:54:38 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 2 00:54:38 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 2 00:54:38 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 2 00:54:38 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 2 00:54:38 $ACTION_MASSAGE_REMOVE:  
{"id":60} 

 Player 2 00:54:38 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 2 00:54:38 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 2 00:54:38 $ACTION_MASSAGE_REMOVE:  
{"id":60} 

 Player 2 00:54:39 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 2 00:57:05 $MATCH: 