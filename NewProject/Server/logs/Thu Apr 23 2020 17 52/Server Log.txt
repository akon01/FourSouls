Start Log 

 Player 1 17:52:35 $MATCH:  

 Player 1 17:52:35 $START_GAME:  

 Player 2 17:52:35 $MOVE_TO_TABLE:  

 Player 1 17:52:35 $MOVE_TO_TABLE:  

 Player 1 17:52:44 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 17:52:44 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 2 17:52:44 $SET_CHAR:  
{"originPlayerId":2,"playerId":1,"charCardId":323,"itemCardId":324} 

 Player 1 17:52:44 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":323,"itemCardId":324} 

 Player 1 17:52:44 $SET_CHAR_END:  
{"playerId":2} 

 Player 2 17:52:45 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":315,"itemCardId":318} 

 Player 2 17:52:45 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[74,113,37,116,31,7,20,129,61,56,23,125,117,57,43,76,88,139,96,8,18,62,6,138,104,72,17,66,101,59,12,94,64,99,42,110,124,126,105,100,136,103,121,127,93,85,69,86,34,60,102,119,67,81,90,11,22,84,38,29,53,41,79,122,45,24,36,73,92,28,71,19,14,15,30,123,65,112,46,4,118,51,52,39,25,135,134,26,54,75,106,33,128,80,97,16,5,58,32,132,137,82,108,13,87,40,130,133,111,78,50,21,27,114,109,83,77,35,91,120,55,107,44,95,131,47,115,98,89,70,48,9,68,63,49,10]} 

 Player 2 17:52:45 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[245,301,286,294,226,247,272,254,241,307,274,287,280,235,309,267,240,264,234,230,269,229,238,276,243,270,310,242,244,257,285,277,231,293,306,227,302,265,248,295,300,273,279,266,233,281,225,250,271,253,268,232,259,282,299,237,223,303,262,252,258,278,296,288,260,249,305,284,256,263,304,292,255,289,297,236,283,224,228,246,291,239,298,275,261,308,290,251]} 

 Player 2 17:52:45 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[189,152,199,147,185,151,203,208,214,157,165,206,221,178,204,155,163,172,146,141,158,216,171,148,190,168,217,160,150,192,164,184,215,218,219,144,173,183,167,197,156,191,176,209,181,180,175,196,207,220,210,169,211,201,195,145,205,182,161,198,159,213,202,187,193,194,186,212,166,153,142,170,149,174,188,177,200,179,154,143,162]} 

 Player 2 17:52:45 $DRAW_CARD:  
{"deckType":5} 

 Player 2 17:52:45 $FLIP_CARD:  
{"cardId":162} 

 Player 2 17:52:45 $ADD_STORE_CARD:  
{"cardId":162} 

 Player 2 17:52:45 $DRAW_CARD:  
{"deckType":5} 

 Player 2 17:52:45 $FLIP_CARD:  
{"cardId":143} 

 Player 2 17:52:45 $ADD_STORE_CARD:  
{"cardId":143} 

 Player 2 17:52:45 $DRAW_CARD:  
{"deckType":2} 

 Player 2 17:52:45 $FLIP_CARD:  
{"cardId":251} 

 Player 2 17:52:45 $REGISTER_PASSIVE_ITEM:  
{"cardId":251} 

 Player 2 17:52:45 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":251} 

 Player 2 17:52:45 $NEW_MONSTER_ON_PLACE:  
{"cardId":251,"monsterPlaceId":1} 

 Player 2 17:52:45 $DRAW_CARD:  
{"deckType":2} 

 Player 2 17:52:45 $FLIP_CARD:  
{"cardId":290} 

 Player 2 17:52:45 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":290} 

 Player 2 17:52:45 $NEW_MONSTER_ON_PLACE:  
{"cardId":290,"monsterPlaceId":2} 

 Player 2 17:52:45 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 17:52:45 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":323,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 17:52:45 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:52:45 $MOVE_CARD:  
{"moveIndex":1,"cardId":10,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:52:46 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":10,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:52:46 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":10} 

 Player 2 17:52:46 $FLIP_CARD:  
{"cardId":10} 

 Player 2 17:52:46 $FLIP_CARD:  
{"cardId":10} 

 Player 2 17:52:46 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":10} 

 Player 2 17:52:46 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:52:46 $MOVE_CARD:  
{"moveIndex":2,"cardId":49,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:52:46 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":49,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:52:46 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":49} 

 Player 2 17:52:46 $FLIP_CARD:  
{"cardId":49} 

 Player 2 17:52:46 $FLIP_CARD:  
{"cardId":49} 

 Player 2 17:52:46 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":49} 

 Player 2 17:52:46 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:52:46 $MOVE_CARD:  
{"moveIndex":3,"cardId":63,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:52:47 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":63,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:52:47 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":63} 

 Player 2 17:52:47 $FLIP_CARD:  
{"cardId":63} 

 Player 2 17:52:47 $FLIP_CARD:  
{"cardId":63} 

 Player 2 17:52:47 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":63} 

 Player 2 17:52:47 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 17:52:47 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 17:52:47 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:52:47 $MOVE_CARD:  
{"moveIndex":4,"cardId":68,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:52:47 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":68,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:52:47 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":68} 

 Player 2 17:52:47 $FLIP_CARD:  
{"cardId":68} 

 Player 2 17:52:47 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":68} 

 Player 2 17:52:47 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:52:47 $MOVE_CARD:  
{"moveIndex":5,"cardId":9,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:52:48 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":9,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:52:48 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":9} 

 Player 2 17:52:48 $FLIP_CARD:  
{"cardId":9} 

 Player 2 17:52:48 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":9} 

 Player 2 17:52:48 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:52:48 $MOVE_CARD:  
{"moveIndex":6,"cardId":48,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:52:48 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":48,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:52:48 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":48} 

 Player 2 17:52:48 $FLIP_CARD:  
{"cardId":48} 

 Player 2 17:52:48 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":48} 

 Player 2 17:52:48 $GAME_HAS_STARTED:  

 Player 2 17:52:48 $SET_TURN:  
{"playerId":2} 

 Player 2 17:52:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:52:48 $NEXT_STACK_ID:  

 Player 2 17:52:48 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:52:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 

 Player 2 17:52:48 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":315,"turnPlayerCardId":315,"stackEffectType":13}} 

 Player 2 17:52:48 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":315,"turnPlayerCardId":315,"stackEffectType":13}} 

 Player 2 17:52:48 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 17:52:48 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 1 17:52:48 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:52:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 

 Player 2 17:52:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add Start Turn Loot Draw 1 "}} 

 Player 2 17:52:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:52:51 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":315,"turnPlayerCardId":315,"stackEffectType":13}} 

 Player 2 17:52:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding Start Turn Loot Draw 1"},"childOfId":0} 

 Player 2 17:52:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 2 17:52:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:52:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 2 17:52:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 17:52:51 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 17:52:51 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[323,324]} 

 Player 1 17:52:51 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 17:52:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve Start Turn Loot Draw 1 "}} 

 Player 2 17:52:51 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":1,"creatorCardId":315,"turnPlayerCardId":315,"stackEffectType":13}]} 

 Player 2 17:52:52 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:52:52 $MOVE_CARD:  
{"moveIndex":7,"cardId":70,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:52:52 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":70,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:52:52 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":70} 

 Player 2 17:52:52 $FLIP_CARD:  
{"cardId":70} 

 Player 2 17:52:52 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":70} 

 Player 2 17:52:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Has Drawen Loot For Start Turn"} 

 Player 2 17:52:52 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":315,"turnPlayerCardId":315,"stackEffectType":13}} 

 Player 2 17:52:52 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 17:52:52 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 17:52:52 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 1 17:52:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 

 Player 2 17:52:55 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":1} 

 Player 2 17:52:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve Start Turn Loot Draw 1  "}} 

 Player 2 17:52:55 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:52:55 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":315,"turnPlayerCardId":315,"stackEffectType":13}} 

 Player 2 17:52:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve Start Turn Loot Draw 1"},"childOfId":5} 

 Player 2 17:52:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 2 17:52:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 17:52:55 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 17:52:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 

 Player 1 17:52:55 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[323,324]} 

 Player 1 17:52:55 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 17:52:55 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 2 17:52:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 2 17:52:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:52:55 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 2 17:52:55 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 2 17:52:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 2 17:52:55 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:52:55 $CLEAR_SE_VIS:  

 Player 2 17:52:55 $UPDATE_ACTIONS:  

 Player 2 17:53:11 $MOVE_CARD:  
{"moveIndex":8,"cardId":232,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 

 Player 1 17:53:11 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":232,"flipIfFlipped":true,"playerId":2} 

 Player 2 17:53:11 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[245,301,286,294,226,247,272,254,241,307,274,287,280,235,309,267,240,264,234,230,269,229,238,276,243,270,310,242,244,257,285,277,231,293,306,227,302,265,248,295,300,273,279,266,233,281,225,250,271,253,268,259,282,299,237,223,303,262,252,258,278,296,288,260,249,305,284,256,263,304,292,255,289,297,236,283,224,228,246,291,239,298,275,261,308]} 

 Player 2 17:53:11 $FLIP_CARD:  
{"cardId":232} 

 Player 2 17:53:11 $REMOVE_FROM_PASSIVE_MANAGER:  
{"cardId":251} 

 Player 2 17:53:11 $REGISTER_PASSIVE_ITEM:  
{"cardId":232} 

 Player 2 17:53:11 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":232} 

 Player 2 17:53:11 $NEW_MONSTER_ON_PLACE:  
{"cardId":232,"monsterPlaceId":1} 

 Player 2 17:53:27 $NEXT_STACK_ID:  

 Player 2 17:53:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 declared attack on Carrion Queen"} 

 Player 2 17:53:27 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":315,"attackingPlayerCardId":315,"idOfCardBeingAttacked":232,"stackEffectType":4}} 

 Player 2 17:53:27 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":315,"attackingPlayerCardId":315,"idOfCardBeingAttacked":232,"stackEffectType":4}} 

 Player 2 17:53:27 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 17:53:27 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 1 17:53:27 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:53:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 declared attack on Carrion Queen"} 

 Player 2 17:53:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add Player Declare Attack On Monster 2 "}} 

 Player 2 17:53:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:53:30 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":315,"attackingPlayerCardId":315,"idOfCardBeingAttacked":232,"stackEffectType":4}} 

 Player 2 17:53:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding Player Declare Attack On Monster 2"},"childOfId":10} 

 Player 2 17:53:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 2 17:53:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:53:30 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 2 17:53:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 2 17:53:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 17:53:30 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 17:53:30 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[323,324]} 

 Player 1 17:53:30 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 17:53:30 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 2 17:53:30 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 2 17:53:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve Player Declare Attack On Monster 2 "}} 

 Player 2 17:53:30 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":2,"creatorCardId":315,"attackingPlayerCardId":315,"idOfCardBeingAttacked":232,"stackEffectType":4}]} 

 Player 2 17:53:30 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":232,"particleType":5} 

 Player 2 17:53:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Has Entered Battle with Carrion Queen"} 

 Player 2 17:53:30 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":3,"originStackId":2},"isAfterActivation":true,"index":3} 

 Player 2 17:53:30 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":315,"attackingPlayerCardId":315,"idOfCardBeingAttacked":232,"stackEffectType":4}} 

 Player 2 17:53:30 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 17:53:30 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 17:53:30 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 1 17:53:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 declared attack on Carrion Queen"} 

 Player 2 17:53:33 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":2} 

 Player 2 17:53:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve Player Declare Attack On Monster 2  "}} 

 Player 2 17:53:33 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:53:33 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":315,"attackingPlayerCardId":315,"idOfCardBeingAttacked":232,"stackEffectType":4}} 

 Player 2 17:53:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve Player Declare Attack On Monster 2"},"childOfId":15} 

 Player 2 17:53:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 2 17:53:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 17:53:33 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 17:53:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 declared attack on Carrion Queen"} 

 Player 1 17:53:33 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[323,324]} 

 Player 1 17:53:33 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 17:53:33 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 17:53:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 2 17:53:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:53:33 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 2 17:53:33 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 2 17:53:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 2 17:53:33 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:53:34 $CLEAR_SE_VIS:  

 Player 2 17:53:36 $NEXT_STACK_ID:  

 Player 2 17:53:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Carrion Queen<Monster>"} 

 Player 2 17:53:36 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":315,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":232}} 

 Player 2 17:53:36 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":315,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":232}} 

 Player 2 17:53:36 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 17:53:36 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 1 17:53:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:53:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Carrion Queen<Monster>"} 

 Player 2 17:53:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add Player Attack Roll On Monster 3 "}} 

 Player 2 17:53:39 $ROLL_DICE:  
{"playerId":2} 

 Player 2 17:53:41 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":4} 

 Player 2 17:53:41 $UPDATE_STACK_VIS:  
{"stackId":3,"text":"player rolled 4 vs Carrion Queen<Monster>"} 

 Player 2 17:53:41 $SHOW_DICE_ROLL:  
{"stackId":3} 

 Player 2 17:53:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Carrion Queen<Monster>"} 

 Player 2 17:53:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:53:44 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":315,"numberRolled":4,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":232}} 

 Player 2 17:53:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding Player Attack Roll On Monster 3"},"childOfId":20} 

 Player 2 17:53:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 2 17:53:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:53:44 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 2 17:53:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 2 17:53:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 17:53:44 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 17:53:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Carrion Queen<Monster>"} 

 Player 1 17:53:44 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[323,324]} 

 Player 1 17:53:44 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 17:53:44 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 2 17:53:44 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 2 17:53:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve Player Attack Roll On Monster 3 "}} 

 Player 2 17:53:44 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":3,"creatorCardId":315,"numberRolled":4,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":232}]} 

 Player 2 17:53:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Added 0 to original roll"}} 

 Player 2 17:53:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Rolled 4 Against Carrion Queen<Monster> 4"} 

 Player 2 17:53:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Roll Hit"} 

 Player 2 17:53:44 $NEXT_STACK_ID:  

 Player 2 17:53:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:53:45 $CLEAR_SE_VIS:  

 Player 2 17:53:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Carrion Queen \n2:Player 2 Roll Hit"} 

 Player 2 17:53:45 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 2 17:53:45 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":315,"numberRolled":4,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":232}} 

 Player 2 17:53:45 $REPLACE_STACK:  
{"currentStack":[{"entityId":4,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":3,"creatorCardId":315,"numberRolled":4,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":232}]} 

 Player 2 17:53:45 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 17:53:45 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":4,"originStackId":3},"isAfterActivation":true,"index":4} 

 Player 2 17:53:45 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":315,"numberRolled":4,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":232}} 

 Player 2 17:53:45 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 17:53:45 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 17:53:45 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 1 17:53:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Carrion Queen<Monster>"} 

 Player 1 17:53:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Carrion Queen \n2:Player 2 is rolling against Carrion Queen<Monster>"} 

 Player 2 17:53:47 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":3} 

 Player 2 17:53:47 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 2 17:53:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Remove After Resolve Player Attack Roll On Monster 3  "}} 

 Player 2 17:53:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Carrion Queen"} 

 Player 2 17:53:50 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":315,"numberRolled":4,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":232}} 

 Player 2 17:53:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Response Remove After Resolve Player Attack Roll On Monster 3"},"childOfId":26} 

 Player 2 17:53:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":26} 

 Player 2 17:53:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:53:50 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 2 17:53:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Wait For Response From Player 1 "},"childOfId":26} 

 Player 2 17:53:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 17:53:50 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 17:53:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Carrion Queen \n2:Player 2 is rolling against Carrion Queen<Monster>"} 

 Player 1 17:53:51 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[323,324]} 

 Player 1 17:53:51 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 17:53:51 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 17:53:51 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 2 17:53:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Resolve Monster Combat Damage To A Player 4 "}} 

 Player 2 17:53:51 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":4,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}]} 

 Player 2 17:53:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain will deal 1 combat damage to Carrion Queen "} 

 Player 2 17:53:51 $UPDATE_STACK_VIS:  
{"stackId":4,"text":"Cain will deal 1 combat damage to Carrion Queen"} 

 Player 2 17:53:51 $MONSTER_GET_DAMAGED:  
{"cardId":232,"hpLeft":2,"damageDealerId":315} 

 Player 2 17:53:51 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":315},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":232,"scopeIsPlayer":false,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 2 17:53:51 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":4},{"type":0,"number":315},{"type":0,"number":232}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":6,"originStackId":4},"isAfterActivation":true,"index":6} 

 Player 2 17:53:51 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 2 17:53:51 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 17:53:51 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 17:53:51 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 1 17:53:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Carrion Queen"} 

 Player 1 17:53:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Carrion Queen"} 

 Player 2 17:53:54 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":4} 

 Player 2 17:53:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Remove After Resolve Monster Combat Damage To A Player 4  "}} 

 Player 2 17:53:54 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:53:54 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 2 17:53:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Response Remove After Resolve Monster Combat Damage To A Player 4"},"childOfId":31} 

 Player 2 17:53:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":31} 

 Player 2 17:53:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 17:53:54 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 17:53:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain is going to hurt Carrion Queen"} 

 Player 1 17:53:54 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[323,324]} 

 Player 1 17:53:54 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 17:53:54 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 2 17:53:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Wait For Response From Player 2 "},"childOfId":31} 

 Player 2 17:53:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:53:54 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 17:53:54 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 2 17:53:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Stack Was Emptied "}} 

 Player 2 17:53:54 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:53:54 $CLEAR_SE_VIS:  

 Player 2 19:04:27 $MATCH: 