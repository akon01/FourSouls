{"version":3,"sources":["actions/BindMethodPointcutAction.ts"],"names":[],"mappings":";;;AACA,qCAA8G;AAC9G,2CAA0C;AAE1C,gEAA+D;AAC/D,oCAA6C;AAa7C;;;;;;GAMG;AACH;IAA8C,oDAAe;IAEzD;eACI,kBAAM,uBAAU,CAAC,kBAAkB,CAAC;IACxC,CAAC;IAES,0CAAO,GAAjB,UAAkB,SAAqB,EAAE,IAA4B;QACjE,2BAA2B;QAC3B,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,2CAAoB,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;YACxD,OAAO;SACV;QACD,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,yBAAgB,CAAC,EAAE;YAC1C,OAAO;SACV;QAED,IAAI,KAAK,GAAG,SAAS,CAAC,GAAG,CAAC,yBAAgB,CAAC,CAAC;QAE5C,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QACzB,IAAI,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QAEjC,IAAI,SAAS,GAAG,WAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;QAC9C,IAAI,OAAO,GAAgB,EAAE,CAAC;QAC9B,IAAI,UAAU,GAAG,MAAM,CAAC,yBAAyB,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;QAExE,WAAI,CAAC,KAAK,CAAC,UAAU,EAAE,UAAC,IAAI,EAAE,IAAY;YACtC,IAAI,IAAI,KAAK,aAAa,EAAE;gBACxB,OAAO;aACV;YACD,OAAO,CAAC,IAAI,CAAC;gBACT,IAAI,EAAE,IAAI;gBACV,QAAQ,EAAK,SAAS,SAAI,IAAM;gBAChC,UAAU,EAAE,IAAI;aACnB,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QAEH,IAAI,UAAU,GAAG,yBAAkB,CAAC,UAAU,CAAC,CAAC;QAChD,WAAI,CAAC,KAAK,CAAC,UAAU,EAAE,UAAC,IAAI,EAAE,IAAY;YACtC,IAAI,IAAI,KAAK,aAAa,EAAE;gBACxB,OAAO;aACV;YACD,IAAI,kBAAW,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,EAAE;gBAC/B,OAAO,CAAC,IAAI,CAAC;oBACT,IAAI,EAAE,IAAI;oBACV,QAAQ,EAAK,SAAS,SAAI,IAAM;iBACnC,CAAC,CAAC;aACN;QACL,CAAC,CAAC,CAAC;QAGH,OAAO,CAAC,OAAO,CAAC,UAAA,QAAQ;YACpB,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,MAAM,CAAC,kBAAkB,CAAC,CAAC,CAAC;QAC5E,CAAC,CAAC,CAAC;IACP,CAAC;IAE0B,0CAAiB,GAAxB;QACI,OAAO,EAAC,MAAM,EAAC,0BAA0B,EAAC,QAAQ,EAAC,EAAC,aAAa,EAAC,EAAE,EAAC,SAAS,EAAC,CAAC,WAAW,EAAC,MAAM,CAAC,EAAC,EAAC,CAAC;IAC1G,CAAC;IACN,+BAAC;AAAD,CAzDnB,AAyDoB,CAzD0B,sBAAe,GAyDzC;AAzDP,4DAAwB","file":"../../actions/BindMethodPointcutAction.js","sourcesContent":["\r\nimport { IContainer, ActionData, ActionComposite, getParamerterNames, isUndefined, lang } from '@ts-ioc/core';\r\nimport { AopActions } from './AopActions';\r\nimport { IPointcut, Joinpoint } from '../joinpoints';\r\nimport { isValideAspectTarget } from '../isValideAspectTarget';\r\nimport { ProxyMethodToken } from '../access';\r\n\r\n\r\n/**\r\n * bind pointcut action data.\r\n *\r\n * @export\r\n * @interface BindPointcutActionData\r\n * @extends {ActionData<Joinpoint>}\r\n */\r\nexport interface BindPointcutActionData extends ActionData<Joinpoint> {\r\n}\r\n\r\n/**\r\n * bind method pointcut action.\r\n *\r\n * @export\r\n * @class BindMethodPointcutAction\r\n * @extends {ActionComposite}\r\n */\r\nexport class BindMethodPointcutAction extends ActionComposite {\r\n\r\n    constructor() {\r\n        super(AopActions.bindMethodPointcut);\r\n    }\r\n\r\n    protected working(container: IContainer, data: BindPointcutActionData) {\r\n        // aspect class do nothing.\r\n        if (!data.target || !isValideAspectTarget(data.targetType)) {\r\n            return;\r\n        }\r\n        if (!container.hasRegister(ProxyMethodToken)) {\r\n            return;\r\n        }\r\n\r\n        let proxy = container.get(ProxyMethodToken);\r\n\r\n        let target = data.target;\r\n        let targetType = data.targetType;\r\n\r\n        let className = lang.getClassName(targetType);\r\n        let methods: IPointcut[] = [];\r\n        let decorators = Object.getOwnPropertyDescriptors(targetType.prototype);\r\n\r\n        lang.forIn(decorators, (item, name: string) => {\r\n            if (name === 'constructor') {\r\n                return;\r\n            }\r\n            methods.push({\r\n                name: name,\r\n                fullName: `${className}.${name}`,\r\n                descriptor: item\r\n            });\r\n        });\r\n\r\n        let allmethods = getParamerterNames(targetType);\r\n        lang.forIn(allmethods, (item, name: string) => {\r\n            if (name === 'constructor') {\r\n                return;\r\n            }\r\n            if (isUndefined(decorators[name])) {\r\n                methods.push({\r\n                    name: name,\r\n                    fullName: `${className}.${name}`\r\n                });\r\n            }\r\n        });\r\n\r\n\r\n        methods.forEach(pointcut => {\r\n            proxy.proceed(target, targetType, pointcut, target['_cache_JoinPoint']);\r\n        });\r\n    }\r\n\n                        static getClassAnnations():any  {\n                            return {\"name\":\"BindMethodPointcutAction\",\"params\":{\"constructor\":[],\"working\":[\"container\",\"data\"]}};\n                        }\n                   }\r\n"]}