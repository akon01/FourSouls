import { IModuleInjectorChain } from './IModuleInjectorChain';
import { IModuleInjector } from './IModuleInjector';
import { Type } from '../types';
import { IContainer } from '../IContainer';
/**
 * Module Injector chain, base injector chain.
 *
 * @export
 * @class ModuleInjectorChain
 * @implements {IModuleInjectorChain}
 */
export declare class ModuleInjectorChain implements IModuleInjectorChain {
    protected _injectors: IModuleInjector[];
    readonly injectors: IModuleInjector[];
    constructor();
    first(injector: IModuleInjector): this;
    next(injector: IModuleInjector): this;
    protected isInjector(injector: IModuleInjector): boolean;
    inject(container: IContainer, modules: Type<any>[]): Promise<Type<any>[]>;
    syncInject(container: IContainer, modules: Type<any>[]): Type<any>[];
    static getClassAnnations(): any;
}
