Start Log 
 Player 1 00:57:06 $START_GAME:  
 Player 1 00:57:06 $MOVE_TO_TABLE:  
 Player 1 00:57:14 $FINISH_LOAD:  

 {"id":1,"turnPlayerId":2} 
 Player 1 00:57:15 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":297}],"result":true,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 1 00:57:15 $MOVE_CARD_END:  

 {"moveIndex":1,"cardId":123,"flipIfFlipped":false,"playerId":2} 
 Player 1 00:57:16 $MOVE_CARD_END:  

 {"moveIndex":2,"cardId":141,"flipIfFlipped":false,"playerId":2} 
 Player 1 00:57:16 $MOVE_CARD_END:  

 {"moveIndex":3,"cardId":125,"flipIfFlipped":false,"playerId":2} 
 Player 1 00:57:17 $MOVE_CARD_END:  

 {"moveIndex":4,"cardId":132,"flipIfFlipped":false,"playerId":2} 
 Player 1 00:57:17 $MOVE_CARD_END:  

 {"moveIndex":5,"cardId":113,"flipIfFlipped":false,"playerId":2} 
 Player 1 00:57:18 $MOVE_CARD_END:  

 {"moveIndex":6,"cardId":59,"flipIfFlipped":false,"playerId":2} 
 Player 1 00:57:18 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 00:57:18 $NEXT_STACK_ID:  
 Player 1 00:57:18 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 00:57:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 00:57:18 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 
 Player 1 00:57:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 00:57:18 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":1,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 
 Player 1 00:57:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 
 Player 1 00:57:18 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 00:57:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 00:57:18 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 
 Player 1 00:57:18 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 1 00:57:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 
 Player 1 00:57:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 1 00:57:18 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 00:57:18 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 1 00:57:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 1 00:57:18 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 00:57:18 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 00:57:18 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 1 00:57:18 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 1 00:57:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 
 Player 1 00:57:18 $DRAW_CARD:  

 {"deckType":1} 
 Player 1 00:57:18 $MOVE_CARD:  

 {"moveIndex":7,"cardId":98,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 1 00:57:19 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":98} 
 Player 1 00:57:19 $FLIP_CARD:  

 {"cardId":98} 
 Player 1 00:57:19 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":98} 
 Player 1 00:57:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 00:57:19 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 
 Player 1 00:57:19 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 1 00:57:19 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 00:57:19 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":1,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 
 Player 1 00:57:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 
 Player 1 00:57:19 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 00:57:19 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 
 Player 1 00:57:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 
 Player 1 00:57:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Player 1 00:57:19 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 00:57:19 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 00:57:20 $ACTION_MASSAGE_REMOVE:  

 {"id":7} 
 Player 1 00:57:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Player 1 00:57:20 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 00:57:20 $ACTION_MASSAGE_REMOVE:  

 {"id":8} 
 Player 1 00:57:20 $ACTION_MASSAGE_REMOVE:  

 {"id":6} 
 Player 1 00:57:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":9,"_text":"Stack Was Emptied "}} 
 Player 1 00:57:20 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 00:57:20 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 1 00:57:20 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 1 00:57:20 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 1 00:57:20 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 1 00:57:20 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 1 00:57:20 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 1 00:57:20 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 1 00:57:21 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 1 00:57:21 $SHOW_DECISION:  

 {"startCardId":296,"endCardId":258} 
 Player 1 00:57:22 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 1 00:57:24 $NEXT_STACK_ID:  
 Player 1 00:57:24 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 00:57:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Lust"} 
 Player 1 00:57:24 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":258,"stackEffectType":4}} 
 Player 1 00:57:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Lust"} 
 Player 1 00:57:24 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":2,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":258,"stackEffectType":4}} 
 Player 1 00:57:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":10,"_text":"Add DeclareAttack 2 "}} 
 Player 1 00:57:25 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 00:57:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Lust"} 
 Player 1 00:57:25 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":258,"stackEffectType":4}} 
 Player 1 00:57:25 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 1 00:57:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":11,"_text":"Response Adding DeclareAttack 2"},"childOfId":10} 
 Player 1 00:57:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 
 Player 1 00:57:25 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 00:57:25 $ACTION_MASSAGE_REMOVE:  

 {"id":12} 
 Player 1 00:57:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 
 Player 1 00:57:25 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 00:57:25 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 00:57:25 $ACTION_MASSAGE_REMOVE:  

 {"id":13} 
 Player 1 00:57:25 $ACTION_MASSAGE_REMOVE:  

 {"id":11} 
 Player 1 00:57:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":14,"_text":"Resolve DeclareAttack 2 "}} 
 Player 1 00:57:25 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":258,"particleType":5} 
 Player 1 00:57:25 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":2,"originStackId":2},"isAfterActivation":true,"index":2} 
 Player 1 00:57:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Lust"} 
 Player 1 00:57:25 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":258,"stackEffectType":4}} 
 Player 1 00:57:25 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 1 00:57:25 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 00:57:25 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":2,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":258,"stackEffectType":4}} 
 Player 1 00:57:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":15,"_text":"Remove After Resolve DeclareAttack 2  "}} 
 Player 1 00:57:25 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 00:57:25 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":258,"stackEffectType":4}} 
 Player 1 00:57:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":16,"_text":"Response Remove After Resolve DeclareAttack 2"},"childOfId":15} 
 Player 1 00:57:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 
 Player 1 00:57:25 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 00:57:25 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 00:57:26 $ACTION_MASSAGE_REMOVE:  

 {"id":17} 
 Player 1 00:57:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 
 Player 1 00:57:26 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 00:57:26 $ACTION_MASSAGE_REMOVE:  

 {"id":18} 
 Player 1 00:57:26 $ACTION_MASSAGE_REMOVE:  

 {"id":16} 
 Player 1 00:57:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":19,"_text":"Stack Was Emptied "}} 
 Player 1 00:57:26 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 00:57:26 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 1 00:57:26 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 1 00:57:26 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 1 00:57:26 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 1 00:57:26 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 1 00:57:26 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 1 00:57:26 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 1 00:57:26 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 1 00:57:26 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 1 00:57:26 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 1 00:57:26 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 1 00:57:26 $NEXT_STACK_ID:  
 Player 1 00:57:26 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 00:57:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Lust<Monster>"} 
 Player 1 00:57:26 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":296,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":258}} 
 Player 1 00:57:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Lust<Monster>"} 
 Player 1 00:57:26 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":296,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":258}} 
 Player 1 00:57:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":20,"_text":"Add AttackRoll 3 "}} 
 Player 1 00:57:26 $ROLL_DICE:  

 {"playerId":1} 
 Player 1 00:57:27 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 1 00:57:27 $ROLL_DICE_ENDED:  

 {"playerId":1,"numberRolled":5} 
 Player 1 00:57:27 $UPDATE_STACK_VIS:  

 {"stackId":3,"text":"player rolled 5 vs Lust<Monster>"} 
 Player 1 00:57:28 $SHOW_DICE_ROLL:  

 {"stackId":3} 
 Player 1 00:57:28 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 1 00:57:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 5 vs Lust<Monster>"} 
 Player 1 00:57:31 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 00:57:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 5 vs Lust<Monster>"} 
 Player 1 00:57:31 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":296,"numberRolled":5,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":258}} 
 Player 1 00:57:31 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 1 00:57:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":21,"_text":"Response Adding AttackRoll 3"},"childOfId":20} 
 Player 1 00:57:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":22,"_text":"Wait For Response From Player 1 "},"childOfId":20} 
 Player 1 00:57:31 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 00:57:31 $ACTION_MASSAGE_REMOVE:  

 {"id":22} 
 Player 1 00:57:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":23,"_text":"Wait For Response From Player 2 "},"childOfId":20} 
 Player 1 00:57:31 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 00:57:31 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 00:57:31 $ACTION_MASSAGE_REMOVE:  

 {"id":23} 
 Player 1 00:57:31 $ACTION_MASSAGE_REMOVE:  

 {"id":21} 
 Player 1 00:57:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":24,"_text":"Resolve AttackRoll 3 "}} 
 Player 1 00:57:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":25,"_text":"Added 0 to original roll"}} 
 Player 1 00:57:31 $NEXT_STACK_ID:  
 Player 1 00:57:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 5 vs Lust<Monster>"} 
 Player 1 00:57:31 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 00:57:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Lust \n2:Player 1 rolled 5 vs Lust<Monster>"} 
 Player 1 00:57:31 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":4,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 00:57:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Lust \n2:Player 1 rolled 5 vs Lust<Monster>"} 
 Player 1 00:57:31 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":296,"numberRolled":5,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":258}} 
 Player 1 00:57:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Lust \n2:Player 1 rolled 5 vs Lust<Monster>"} 
 Player 1 00:57:31 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":4,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 00:57:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Lust \n2:Player 1 rolled 5 vs Lust<Monster>"} 
 Player 1 00:57:31 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":296,"numberRolled":5,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":258}} 
 Player 1 00:57:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Lust \n2:Player 1 rolled 5 vs Lust<Monster>"} 
 Player 1 00:57:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Lust \n2:Player 1 rolled 5 vs Lust<Monster>"} 
 Player 1 00:57:31 $REPLACE_STACK:  

 {"currentStack":[{"entityId":4,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":3,"creatorCardId":296,"numberRolled":5,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":258}]} 
 Player 1 00:57:31 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":3,"originStackId":3},"isAfterActivation":true,"index":3} 
 Player 1 00:57:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Lust \n2:Player 1 rolled 5 vs Lust<Monster>"} 
 Player 1 00:57:31 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":296,"numberRolled":5,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":258}} 
 Player 1 00:57:31 $ACTION_MASSAGE_REMOVE:  

 {"id":24} 
 Player 1 00:57:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Lust"} 
 Player 1 00:57:31 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":296,"numberRolled":5,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":258}} 
 Player 1 00:57:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":26,"_text":"Remove After Resolve AttackRoll 3  "}} 
 Player 1 00:57:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Lust"} 
 Player 1 00:57:32 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":296,"numberRolled":5,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":258}} 
 Player 1 00:57:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":27,"_text":"Response Remove After Resolve AttackRoll 3"},"childOfId":26} 
 Player 1 00:57:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":28,"_text":"Wait For Response From Player 1 "},"childOfId":26} 
 Player 1 00:57:32 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 00:57:32 $ACTION_MASSAGE_REMOVE:  

 {"id":28} 
 Player 1 00:57:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":29,"_text":"Wait For Response From Player 2 "},"childOfId":26} 
 Player 1 00:57:32 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 00:57:32 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 00:57:32 $ACTION_MASSAGE_REMOVE:  

 {"id":29} 
 Player 1 00:57:32 $ACTION_MASSAGE_REMOVE:  

 {"id":27} 
 Player 1 00:57:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":30,"_text":"Resolve CombatDamage 4 "}} 
 Player 1 00:57:32 $UPDATE_STACK_VIS:  

 {"stackId":4,"text":"Samson will deal 1 combat damage to Lust"} 
 Player 1 00:57:33 $MONSTER_GET_DAMAGED:  

 {"cardId":258,"hpLeft":1,"damageDealerId":296} 
 Player 1 00:57:33 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":296}],"result":null,"preventMethod":false,"methodScopeId":258,"scopeIsPlayer":false,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 
 Player 1 00:57:33 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":5},{"type":0,"number":296},{"type":0,"number":258}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":5,"originStackId":4},"isAfterActivation":true,"index":5} 
 Player 1 00:57:33 $NEXT_STACK_ID:  
 Player 1 00:57:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Lust"} 
 Player 1 00:57:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Lust \n2:Activate Lust effect DealDamage<DealDamage>"} 
 Player 1 00:57:33 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":5,"creatorCardId":258,"hasLockingStackEffect":false,"cardActivatorId":258,"cardWithEffectId":258,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":258,"cardId":258,"effctType":0},"isAfterActivation":true,"index":5,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 00:57:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Lust \n2:Activate Lust effect DealDamage<DealDamage>"} 
 Player 1 00:57:33 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":5,"creatorCardId":258,"hasLockingStackEffect":false,"cardActivatorId":258,"cardWithEffectId":258,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":258,"cardId":258,"effctType":0},"isAfterActivation":true,"index":5,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 00:57:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":31,"_text":"Add ActivatePassiveEffect 5 "}} 
 Player 1 00:57:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Lust \n2:Activate Lust effect DealDamage<DealDamage>"} 
 Player 1 00:57:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Lust \n2:Activate Lust effect DealDamage<DealDamage>"} 
 Player 1 00:57:33 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":258,"effectCardPlayer":258},"entityId":5,"creatorCardId":258,"hasLockingStackEffect":false,"cardActivatorId":258,"cardWithEffectId":258,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":258,"cardId":258,"effctType":0},"isAfterActivation":true,"index":5,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 00:57:33 $ACTION_MASSAGE_REMOVE:  

 {"id":31} 
 Player 1 00:57:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":32,"_text":"Response Adding ActivatePassiveEffect 5"},"childOfId":31} 
 Player 1 00:57:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":33,"_text":"Wait For Response From Player 2 "},"childOfId":31} 
 Player 1 00:57:33 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 00:57:33 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 00:57:33 $ACTION_MASSAGE_REMOVE:  

 {"id":33} 
 Player 1 00:57:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":34,"_text":"Wait For Response From Player 1 "},"childOfId":31} 
 Player 1 00:57:33 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 00:57:33 $ACTION_MASSAGE_REMOVE:  

 {"id":34} 
 Player 1 00:57:33 $ACTION_MASSAGE_REMOVE:  

 {"id":32} 
 Player 1 00:57:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":35,"_text":"Resolve ActivatePassiveEffect 5 "}} 
 Player 1 00:57:33 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":258,"particleType":6} 
 Player 1 00:57:34 $ACTION_MASSAGE_REMOVE:  

 {"id":25} 
 Player 1 00:57:34 $ACTION_MASSAGE_REMOVE:  

 {"id":26} 
 Player 1 00:57:35 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":258,"particleType":6} 
 Player 1 00:57:35 $PLAYER_GET_HIT:  

 {"playerId":1,"damage":1,"damageDealerId":258} 
 Player 1 00:57:35 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":258}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 
 Player 1 00:57:35 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":5},{"type":0,"number":296},{"type":0,"number":258}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":false,"index":5,"originStackId":4},"isAfterActivation":true,"index":5} 
 Player 1 00:57:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Lust \n2:Activate Lust effect DealDamage<DealDamage>"} 
 Player 1 00:57:35 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":258,"effectCardPlayer":258},"entityId":5,"creatorCardId":258,"hasLockingStackEffect":false,"cardActivatorId":258,"cardWithEffectId":258,"isAfterActivation":true,"index":5,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 00:57:35 $ACTION_MASSAGE_REMOVE:  

 {"id":35} 
 Player 1 00:57:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Lust"} 
 Player 1 00:57:36 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":258,"effectCardPlayer":258},"entityId":5,"creatorCardId":258,"hasLockingStackEffect":false,"cardActivatorId":258,"cardWithEffectId":258,"isAfterActivation":true,"index":5,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 00:57:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":36,"_text":"Remove After Resolve ActivatePassiveEffect 5  "}} 
 Player 1 00:57:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Lust"} 
 Player 1 00:57:36 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":258,"effectCardPlayer":258},"entityId":5,"creatorCardId":258,"hasLockingStackEffect":false,"cardActivatorId":258,"cardWithEffectId":258,"isAfterActivation":true,"index":5,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 00:57:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":37,"_text":"Response Remove After Resolve ActivatePassiveEffect 5"},"childOfId":36} 
 Player 1 00:57:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":38,"_text":"Wait For Response From Player 1 "},"childOfId":36} 
 Player 1 00:57:36 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 00:57:36 $ACTION_MASSAGE_REMOVE:  

 {"id":38} 
 Player 1 00:57:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":39,"_text":"Wait For Response From Player 2 "},"childOfId":36} 
 Player 1 00:57:36 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 00:57:36 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 00:57:36 $ACTION_MASSAGE_REMOVE:  

 {"id":39} 
 Player 1 00:57:36 $ACTION_MASSAGE_REMOVE:  

 {"id":37} 
 Player 1 00:57:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":40,"_text":"Resolve CombatDamage 4 "}} 
 Player 1 00:57:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Lust"} 
 Player 1 00:57:36 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":4,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 00:57:36 $ACTION_MASSAGE_REMOVE:  

 {"id":30} 
 Player 1 00:57:36 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 00:57:36 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":4,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 00:57:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":41,"_text":"Remove After Resolve CombatDamage 4  "}} 
 Player 1 00:57:36 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 00:57:36 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":4,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 00:57:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":42,"_text":"Response Remove After Resolve CombatDamage 4"},"childOfId":41} 
 Player 1 00:57:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":43,"_text":"Wait For Response From Player 2 "},"childOfId":41} 
 Player 1 00:57:36 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 00:57:36 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 00:57:37 $ACTION_MASSAGE_REMOVE:  

 {"id":43} 
 Player 1 00:57:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":44,"_text":"Wait For Response From Player 1 "},"childOfId":41} 
 Player 1 00:57:37 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 00:57:37 $ACTION_MASSAGE_REMOVE:  

 {"id":44} 
 Player 1 00:57:37 $ACTION_MASSAGE_REMOVE:  

 {"id":42} 
 Player 1 00:57:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":45,"_text":"Stack Was Emptied "}} 
 Player 1 00:57:37 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 00:57:37 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 1 00:57:37 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 1 00:57:37 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 1 00:57:37 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 1 00:57:37 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 1 00:57:37 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 1 00:57:37 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 1 00:57:37 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 1 00:57:37 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 1 00:57:37 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 1 00:57:37 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 1 00:57:37 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 1 00:57:37 $ACTION_MASSAGE_REMOVE:  

 {"id":24} 
 Player 1 00:57:37 $ACTION_MASSAGE_REMOVE:  

 {"id":25} 
 Player 1 00:57:37 $ACTION_MASSAGE_REMOVE:  

 {"id":26} 
 Player 1 00:57:37 $ACTION_MASSAGE_REMOVE:  

 {"id":30} 
 Player 1 00:57:37 $ACTION_MASSAGE_REMOVE:  

 {"id":31} 
 Player 1 00:57:37 $ACTION_MASSAGE_REMOVE:  

 {"id":35} 
 Player 1 00:57:37 $ACTION_MASSAGE_REMOVE:  

 {"id":36} 
 Player 1 00:57:37 $ACTION_MASSAGE_REMOVE:  

 {"id":40} 
 Player 1 00:57:37 $ACTION_MASSAGE_REMOVE:  

 {"id":41} 
 Player 1 00:57:37 $ACTION_MASSAGE_REMOVE:  

 {"id":45} 
 Player 1 00:57:38 $ACTION_MASSAGE_REMOVE:  

 {"id":45} 
 Player 1 00:57:38 $ACTION_MASSAGE_REMOVE:  

 {"id":36} 
 Player 1 00:57:39 $ACTION_MASSAGE_REMOVE:  

 {"id":41}