Start Log 

 Player 1 20:22:03 $MATCH:  

 Player 1 20:22:04 $START_GAME:  

 Player 2 20:22:04 $MOVE_TO_TABLE:  

 Player 1 20:22:04 $MOVE_TO_TABLE:  

 Player 1 20:22:15 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 20:22:15 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 2 20:22:15 $SET_CHAR:  
{"originPlayerId":2,"playerId":1,"charCardId":314,"itemCardId":317} 

 Player 1 20:22:15 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":314,"itemCardId":317} 

 Player 1 20:22:15 $SET_CHAR_END:  
{"playerId":2} 

 Player 2 20:22:15 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":322,"itemCardId":323} 

 Player 2 20:22:15 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[46,103,136,17,97,72,70,77,47,49,81,52,19,67,108,98,115,38,116,32,122,61,82,18,12,124,71,34,26,107,117,58,90,99,118,114,84,50,100,63,135,92,94,130,91,48,126,139,113,128,83,30,76,44,53,29,59,51,66,14,10,129,15,22,80,85,106,137,121,96,16,11,109,141,40,62,105,20,57,23,35,111,65,6,87,125,25,39,43,133,45,31,101,119,74,28,7,33,21,102,8,131,138,132,36,60,127,89,140,37,134,86,79,93,54,9,69,104,56,55,64,95,120,75,41,13,68,112,123,24,78,73,27,110,88,42]} 

 Player 2 20:22:15 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[265,224,247,242,233,275,246,283,254,262,289,304,298,272,249,279,287,238,276,239,230,285,271,278,286,225,292,250,268,288,291,229,274,258,261,231,264,308,228,290,300,227,260,236,256,267,251,255,307,281,248,226,240,257,309,302,293,241,282,273,235,245,280,296,294,303,295,252,234,244,305,232,301,237,266,243,269,253,263,259,306,284,270,277,299,297]} 

 Player 2 20:22:15 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[211,176,178,206,222,185,217,152,179,150,216,162,166,208,170,144,148,154,218,153,169,210,158,180,173,202,199,156,209,212,200,147,171,221,155,161,167,195,168,198,183,175,191,145,190,146,160,172,220,149,207,204,165,214,188,143,159,196,164,182,177,151,203,192,174,163,197,201,189,181,157,193,215,205,184,186,219,187,194,213]} 

 Player 2 20:22:15 $DRAW_CARD:  
{"deckType":5} 

 Player 2 20:22:16 $FLIP_CARD:  
{"cardId":213} 

 Player 2 20:22:16 $ADD_STORE_CARD:  
{"cardId":213} 

 Player 2 20:22:16 $DRAW_CARD:  
{"deckType":5} 

 Player 2 20:22:16 $FLIP_CARD:  
{"cardId":194} 

 Player 2 20:22:16 $ADD_STORE_CARD:  
{"cardId":194} 

 Player 2 20:22:16 $DRAW_CARD:  
{"deckType":2} 

 Player 2 20:22:16 $FLIP_CARD:  
{"cardId":297} 

 Player 2 20:22:16 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":297} 

 Player 2 20:22:16 $NEW_MONSTER_ON_PLACE:  
{"cardId":297,"monsterPlaceId":1} 

 Player 2 20:22:16 $DRAW_CARD:  
{"deckType":2} 

 Player 2 20:22:16 $FLIP_CARD:  
{"cardId":299} 

 Player 2 20:22:16 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":299} 

 Player 2 20:22:16 $NEW_MONSTER_ON_PLACE:  
{"cardId":299,"monsterPlaceId":2} 

 Player 2 20:22:16 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 20:22:16 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":314,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 20:22:16 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:22:16 $MOVE_CARD:  
{"moveIndex":1,"cardId":42,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:22:17 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":42,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:22:17 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":42} 

 Player 2 20:22:17 $FLIP_CARD:  
{"cardId":42} 

 Player 2 20:22:17 $FLIP_CARD:  
{"cardId":42} 

 Player 2 20:22:17 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":42} 

 Player 2 20:22:17 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:22:17 $MOVE_CARD:  
{"moveIndex":2,"cardId":88,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:22:17 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":88,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:22:18 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":88} 

 Player 2 20:22:18 $FLIP_CARD:  
{"cardId":88} 

 Player 2 20:22:18 $FLIP_CARD:  
{"cardId":88} 

 Player 2 20:22:18 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":88} 

 Player 2 20:22:18 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:22:18 $MOVE_CARD:  
{"moveIndex":3,"cardId":110,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:22:18 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":110,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:22:18 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":110} 

 Player 2 20:22:18 $FLIP_CARD:  
{"cardId":110} 

 Player 2 20:22:18 $FLIP_CARD:  
{"cardId":110} 

 Player 2 20:22:18 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":110} 

 Player 2 20:22:18 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 20:22:19 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":322,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 20:22:19 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:22:19 $MOVE_CARD:  
{"moveIndex":4,"cardId":27,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:22:19 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":27,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:22:19 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":27} 

 Player 2 20:22:19 $FLIP_CARD:  
{"cardId":27} 

 Player 2 20:22:19 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":27} 

 Player 2 20:22:19 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:22:19 $MOVE_CARD:  
{"moveIndex":5,"cardId":73,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:22:20 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":73,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:22:20 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":73} 

 Player 2 20:22:20 $FLIP_CARD:  
{"cardId":73} 

 Player 2 20:22:20 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":73} 

 Player 2 20:22:20 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:22:20 $MOVE_CARD:  
{"moveIndex":6,"cardId":78,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:22:20 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":78,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:22:20 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":78} 

 Player 2 20:22:20 $FLIP_CARD:  
{"cardId":78} 

 Player 2 20:22:21 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":78} 

 Player 2 20:22:21 $GAME_HAS_STARTED:  

 Player 2 20:22:21 $SET_TURN:  
{"playerId":1} 

 Player 2 20:22:21 $START_TURN:  
{"playerId":1} 

 Player 2 20:22:21 $UPDATE_ACTIONS:  

 Player 1 20:22:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:22:21 $NEXT_STACK_ID:  

 Player 1 20:22:21 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:22:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 20:22:21 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":314,"turnPlayerCardId":314,"stackEffectType":13}} 

 Player 1 20:22:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 20:22:21 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":314,"turnPlayerCardId":314,"stackEffectType":13}} 

 Player 1 20:22:21 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 20:22:21 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 2 20:22:21 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:22:21 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:22:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 20:22:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 20:22:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 1 20:22:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:22:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 20:22:24 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":314,"turnPlayerCardId":314,"stackEffectType":13}} 

 Player 1 20:22:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 1 20:22:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 1 20:22:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:22:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 1 20:22:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:22:24 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:22:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 20:22:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 20:22:24 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[322,323]} 

 Player 2 20:22:24 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:22:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 1 20:22:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 20:22:24 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":314,"turnPlayerCardId":314,"stackEffectType":13}} 

 Player 1 20:22:24 $DRAW_CARD:  
{"deckType":1} 

 Player 1 20:22:25 $MOVE_CARD:  
{"moveIndex":7,"cardId":24,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 20:22:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 20:22:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 20:22:25 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":24,"flipIfFlipped":false,"playerId":1} 

 Player 1 20:22:25 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":24} 

 Player 1 20:22:25 $FLIP_CARD:  
{"cardId":24} 

 Player 1 20:22:25 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":24} 

 Player 1 20:22:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 20:22:25 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":314,"turnPlayerCardId":314,"stackEffectType":13}} 

 Player 1 20:22:25 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":1} 

 Player 1 20:22:25 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 20:22:25 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 2 20:22:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 20:22:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 20:22:28 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":1} 

 Player 1 20:22:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 1 20:22:28 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:22:28 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":314,"turnPlayerCardId":314,"stackEffectType":13}} 

 Player 1 20:22:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 1 20:22:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 1 20:22:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:22:28 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:22:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 20:22:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 20:22:29 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[322,323]} 

 Player 2 20:22:29 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:22:29 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 1 20:22:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 1 20:22:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:22:29 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 1 20:22:29 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 1 20:22:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 1 20:22:29 $CLEAR_SE_VIS:  

 Player 1 20:22:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:23:40 $MOVE_CARD:  
{"moveIndex":8,"cardId":158,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Hand"} 

 Player 2 20:23:41 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":158,"flipIfFlipped":true,"playerId":1} 

 Player 1 20:23:41 $REGISTER_PASSIVE_ITEM:  
{"cardId":158} 

 Player 1 20:23:41 $MOVE_CARD:  
{"moveIndex":9,"cardId":158,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 

 Player 2 20:23:41 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":158,"flipIfFlipped":true,"playerId":1} 

 Player 1 20:23:41 $ADD_AN_ITEM:  
{"playerId":1,"cardId":158,"isReward":true} 

 Player 1 20:23:41 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":158}],"result":true,"preventMethod":false,"methodScopeId":314,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 20:24:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:24:35 $CLEAR_SE_VIS:  

 Player 1 20:24:35 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:24:35 $CLEAR_SE_VIS:  

 Player 1 20:24:35 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 1 20:24:35 $END_TURN:  

 Player 1 20:24:35 $SET_TURN:  
{"playerId":2} 

 Player 1 20:24:35 $START_TURN:  
{"playerId":2} 

 Player 2 20:24:35 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 20:24:35 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:24:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:24:35 $NEXT_STACK_ID:  

 Player 2 20:24:35 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:24:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 20:24:36 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":322,"turnPlayerCardId":322,"stackEffectType":13}} 

 Player 2 20:24:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 20:24:36 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":322,"turnPlayerCardId":322,"stackEffectType":13}} 

 Player 2 20:24:36 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 20:24:36 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 1 20:24:36 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 20:24:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:24:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:24:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 20:24:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 20:24:36 $CLEAR_SE_VIS:  

 Player 2 20:24:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add StartTurnLoot 2 "}} 

 Player 2 20:24:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:24:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 20:24:38 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":322,"turnPlayerCardId":322,"stackEffectType":13}} 

 Player 2 20:24:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding StartTurnLoot 2"},"childOfId":10} 

 Player 2 20:24:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 2 20:24:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:24:39 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 2 20:24:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 2 20:24:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:24:39 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:24:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 20:24:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 20:24:39 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[314,317]} 

 Player 1 20:24:39 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:24:39 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 2 20:24:39 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 2 20:24:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve StartTurnLoot 2 "}} 

 Player 2 20:24:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 20:24:39 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":322,"turnPlayerCardId":322,"stackEffectType":13}} 

 Player 2 20:24:39 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:24:39 $MOVE_CARD:  
{"moveIndex":10,"cardId":123,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:24:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 20:24:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 20:24:39 $MOVE_CARD_END:  
{"moveIndex":10,"cardId":123,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:24:39 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":123} 

 Player 2 20:24:40 $FLIP_CARD:  
{"cardId":123} 

 Player 2 20:24:40 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":123} 

 Player 2 20:24:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 20:24:40 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":322,"turnPlayerCardId":322,"stackEffectType":13}} 

 Player 2 20:24:40 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":2} 

 Player 2 20:24:40 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 20:24:40 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 1 20:24:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 20:24:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 20:24:42 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":2} 

 Player 2 20:24:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve StartTurnLoot 2  "}} 

 Player 2 20:24:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:24:43 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":322,"turnPlayerCardId":322,"stackEffectType":13}} 

 Player 2 20:24:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve StartTurnLoot 2"},"childOfId":15} 

 Player 2 20:24:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 2 20:24:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:24:43 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:24:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 20:24:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 20:24:43 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[314,317]} 

 Player 1 20:24:43 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:24:43 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 20:24:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 2 20:24:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:24:43 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 2 20:24:43 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 2 20:24:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 2 20:24:43 $CLEAR_SE_VIS:  

 Player 2 20:24:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:25:01 $NEXT_STACK_ID:  

 Player 2 20:25:01 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:25:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(5) "} 

 Player 2 20:25:01 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":322,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":78,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 20:25:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(5) "} 

 Player 2 20:25:01 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":322,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":78,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 20:25:02 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 20:25:02 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 1 20:25:02 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:25:02 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:25:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(5) "} 

 Player 1 20:25:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(5) "} 

 Player 2 20:25:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add PlayLootCardStackEffect 3 "}} 

 Player 2 20:25:04 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":78} 

 Player 2 20:25:04 $MOVE_CARD:  
{"moveIndex":11,"cardId":78,"placeID":328,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 20:25:05 $MOVE_CARD_END:  
{"moveIndex":11,"cardId":78,"flipIfFlipped":true,"playerId":2} 

 Player 2 20:25:05 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":78} 

 Player 2 20:25:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(5): addMoney"} 

 Player 2 20:25:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:25:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(5): addMoney"} 

 Player 2 20:25:05 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":322,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":78,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":78,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 20:25:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding PlayLootCardStackEffect 3"},"childOfId":20} 

 Player 2 20:25:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 2 20:25:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:25:05 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 2 20:25:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 2 20:25:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:25:05 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:25:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(5) "} 

 Player 1 20:25:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(5) "} 

 Player 1 20:25:05 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[314,317]} 

 Player 1 20:25:05 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:25:05 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 2 20:25:05 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 2 20:25:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve PlayLootCardStackEffect 3 "}} 

 Player 2 20:25:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(5): addMoney"} 

 Player 2 20:25:05 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":322,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":78,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":78,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 20:25:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(5): addMoney"} 

 Player 2 20:25:05 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":78,"particleType":6} 

 Player 1 20:25:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(5) "} 

 Player 1 20:25:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(5) "} 

 Player 2 20:25:07 $DISABLE_PARTICLE_EFFECT:  
{"cardId":78,"particleType":6} 

 Player 2 20:25:07 $SET_MONEY:  
{"playerId":2,"numOfCoins":13} 

 Player 2 20:25:07 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":10}],"result":null,"preventMethod":false,"methodScopeId":322,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 20:25:07 $REMOVE_FROM_PILE:  
{"cardId":78} 

 Player 2 20:25:07 $MOVE_CARD:  
{"moveIndex":12,"cardId":78,"placeID":329,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 20:25:08 $MOVE_CARD_END:  
{"moveIndex":12,"cardId":78,"flipIfFlipped":true,"playerId":2} 

 Player 2 20:25:08 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":78} 

 Player 2 20:25:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(5): addMoney"} 

 Player 2 20:25:08 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":322,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":78,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 20:25:08 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":3} 

 Player 2 20:25:08 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 20:25:08 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 1 20:25:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(5) "} 

 Player 1 20:25:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(5) "} 

 Player 2 20:25:11 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":3} 

 Player 2 20:25:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Remove After Resolve PlayLootCardStackEffect 3  "}} 

 Player 2 20:25:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:25:11 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":322,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":78,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 20:25:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Response Remove After Resolve PlayLootCardStackEffect 3"},"childOfId":25} 

 Player 2 20:25:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Wait For Response From Player 1 "},"childOfId":25} 

 Player 2 20:25:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:25:11 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:25:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(5) "} 

 Player 1 20:25:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(5) "} 

 Player 1 20:25:11 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[314,317]} 

 Player 1 20:25:11 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:25:11 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 2 20:25:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":25} 

 Player 2 20:25:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:25:11 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 2 20:25:11 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 2 20:25:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Stack Was Emptied "}} 

 Player 2 20:25:11 $CLEAR_SE_VIS:  

 Player 2 20:25:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:25:31 $NEXT_STACK_ID:  

 Player 2 20:25:31 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:25:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Placenta for 10"} 

 Player 2 20:25:32 $ADD_TO_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":322,"itemToPurchaseCardId":194,"playerWhoBuysCardId":322,"cost":10,"stackEffectType":9}} 

 Player 2 20:25:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Placenta for 10"} 

 Player 2 20:25:32 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":322,"itemToPurchaseCardId":194,"playerWhoBuysCardId":322,"cost":10,"stackEffectType":9}} 

 Player 2 20:25:32 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 20:25:32 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 1 20:25:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:25:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:25:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Placenta for 10"} 

 Player 1 20:25:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Placenta for 10"} 

 Player 2 20:25:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Add PurchaseItem 4 "}} 

 Player 2 20:25:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:25:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Placenta for 10"} 

 Player 2 20:25:35 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":322,"itemToPurchaseCardId":194,"playerWhoBuysCardId":322,"cost":10,"stackEffectType":9}} 

 Player 2 20:25:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Response Adding PurchaseItem 4"},"childOfId":30} 

 Player 2 20:25:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Wait For Response From Player 2 "},"childOfId":30} 

 Player 2 20:25:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:25:35 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 2 20:25:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":30} 

 Player 2 20:25:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:25:35 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:25:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Placenta for 10"} 

 Player 1 20:25:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Placenta for 10"} 

 Player 1 20:25:35 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[314,317]} 

 Player 1 20:25:35 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:25:35 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 2 20:25:35 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 2 20:25:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Resolve PurchaseItem 4 "}} 

 Player 2 20:25:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Placenta for 10"} 

 Player 2 20:25:35 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":322,"itemToPurchaseCardId":194,"playerWhoBuysCardId":322,"cost":10,"stackEffectType":9}} 

 Player 2 20:25:35 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 20:25:35 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-10}],"result":null,"preventMethod":false,"methodScopeId":322,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 2 20:25:35 $REMOVE_ITEM_FROM_SHOP:  
{"cardId":194} 

 Player 2 20:25:35 $NEXT_STACK_ID:  

 Player 2 20:25:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Placenta for 10"} 

 Player 2 20:25:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:25:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Placenta for 10 \n2:Refill Store slot"} 

 Player 2 20:25:35 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":322,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 2 20:25:35 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 20:25:35 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 1 20:25:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Placenta for 10"} 

 Player 1 20:25:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Placenta for 10"} 

 Player 1 20:25:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Placenta for 10"} 

 Player 1 20:25:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Placenta for 10"} 

 Player 2 20:25:38 $CLEAR_SE_VIS:  

 Player 2 20:25:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Placenta for 10 \n2:Refill Store slot"} 

 Player 2 20:25:38 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":322,"itemToPurchaseCardId":194,"playerWhoBuysCardId":322,"cost":10,"stackEffectType":9}} 

 Player 2 20:25:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Placenta for 10 \n2:Refill Store slot"} 

 Player 2 20:25:38 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":322,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 2 20:25:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Placenta for 10 \n2:Refill Store slot"} 

 Player 2 20:25:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Placenta for 10 \n2:Refill Store slot"} 

 Player 2 20:25:38 $REPLACE_STACK:  
{"currentStack":[{"entityId":4,"creatorCardId":322,"itemToPurchaseCardId":194,"playerWhoBuysCardId":322,"cost":10,"stackEffectType":9},{"entityId":5,"creatorCardId":322,"slotType":5,"slotToFillId":0,"stackEffectType":10}]} 

 Player 2 20:25:38 $REGISTER_PASSIVE_ITEM:  
{"cardId":194} 

 Player 2 20:25:38 $MOVE_CARD:  
{"moveIndex":13,"cardId":194,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 

 Player 1 20:25:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Placenta for 10"} 

 Player 1 20:25:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Placenta for 10"} 

 Player 1 20:25:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Placenta for 10"} 

 Player 1 20:25:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Placenta for 10"} 

 Player 1 20:25:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Placenta for 10"} 

 Player 1 20:25:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Placenta for 10"} 

 Player 1 20:25:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Placenta for 10"} 

 Player 1 20:25:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Placenta for 10"} 

 Player 1 20:25:39 $MOVE_CARD_END:  
{"moveIndex":13,"cardId":194,"flipIfFlipped":true,"playerId":2} 

 Player 2 20:25:39 $ADD_AN_ITEM:  
{"playerId":2,"cardId":194,"isReward":false} 

 Player 2 20:25:39 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":194}],"result":true,"preventMethod":false,"methodScopeId":322,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 2 20:25:39 $NEXT_STACK_ID:  

 Player 2 20:25:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Placenta for 10 \n2:Refill Store slot"} 

 Player 2 20:25:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Placenta for 10 \n2:Refill Store slot \n3:Activate Placenta effect GainStats<GainStats>"} 

 Player 2 20:25:39 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":6,"creatorCardId":322,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":194,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":2,"cardId":194,"effctType":0},"isAfterActivation":true,"index":5,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 20:25:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Placenta for 10 \n2:Refill Store slot \n3:Activate Placenta effect GainStats<GainStats>"} 

 Player 2 20:25:39 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":6,"creatorCardId":322,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":194,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":2,"cardId":194,"effctType":0},"isAfterActivation":true,"index":5,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 20:25:39 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 20:25:39 $SHOW_STACK_EFFECT:  
{"effectId":6} 

 Player 1 20:25:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Placenta for 10 \n2:Refill Store slot"} 

 Player 1 20:25:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Placenta for 10 \n2:Refill Store slot"} 

 Player 1 20:25:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Placenta for 10 \n2:Refill Store slot \n3:Activate Placenta "} 

 Player 1 20:25:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Placenta for 10 \n2:Refill Store slot \n3:Activate Placenta "} 

 Player 2 20:25:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Add ActivatePassiveEffect 6 "}} 

 Player 2 20:25:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Placenta for 10 \n2:Refill Store slot \n3:Activate Placenta effect GainStats<GainStats>"} 

 Player 2 20:25:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Placenta for 10 \n2:Refill Store slot \n3:Activate Placenta effect GainStats<GainStats>"} 

 Player 2 20:25:42 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[322],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":322,"effectCardPlayer":322},"entityId":6,"creatorCardId":322,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":194,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":2,"cardId":194,"effctType":0},"isAfterActivation":true,"index":5,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 20:25:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Response Adding ActivatePassiveEffect 6"},"childOfId":35} 

 Player 2 20:25:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Wait For Response From Player 2 "},"childOfId":35} 

 Player 2 20:25:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:25:42 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 2 20:25:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 1 "},"childOfId":35} 

 Player 2 20:25:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:25:42 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:25:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Placenta for 10 \n2:Refill Store slot \n3:Activate Placenta "} 

 Player 1 20:25:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Placenta for 10 \n2:Refill Store slot \n3:Activate Placenta "} 

 Player 1 20:25:42 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[314,317]} 

 Player 1 20:25:42 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:25:42 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 2 20:25:42 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 2 20:25:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Resolve ActivatePassiveEffect 6 "}} 

 Player 2 20:25:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Placenta for 10 \n2:Refill Store slot \n3:Activate Placenta effect GainStats<GainStats>"} 

 Player 2 20:25:42 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[322],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":322,"effectCardPlayer":322},"entityId":6,"creatorCardId":322,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":194,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":2,"cardId":194,"effctType":0},"isAfterActivation":true,"index":5,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 20:25:43 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":194,"particleType":6} 

 Player 1 20:25:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Placenta for 10 \n2:Refill Store slot \n3:Activate Placenta "} 

 Player 1 20:25:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Placenta for 10 \n2:Refill Store slot \n3:Activate Placenta "} 

 Player 2 20:25:44 $DISABLE_PARTICLE_EFFECT:  
{"cardId":194,"particleType":6} 

 Player 2 20:25:44 $PLAYER_GAIN_HP:  
{"playerId":2,"hpToGain":1,"isTemp":false} 

 Player 2 20:25:44 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":194}],"result":true,"preventMethod":false,"methodScopeId":322,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 2 20:25:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Placenta for 10 \n2:Refill Store slot \n3:Activate Placenta effect GainStats<GainStats>"} 

 Player 2 20:25:44 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[322],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":322,"effectCardPlayer":322},"entityId":6,"creatorCardId":322,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":194,"isAfterActivation":true,"index":5,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 20:25:45 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":6} 

 Player 2 20:25:45 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 20:25:45 $SHOW_STACK_EFFECT:  
{"effectId":6} 

 Player 1 20:25:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Placenta for 10 \n2:Refill Store slot \n3:Activate Placenta "} 

 Player 1 20:25:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Placenta for 10 \n2:Refill Store slot \n3:Activate Placenta "} 

 Player 2 20:25:47 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":6} 

 Player 2 20:25:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Remove After Resolve ActivatePassiveEffect 6  "}} 

 Player 2 20:25:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Placenta for 10 \n2:Refill Store slot"} 

 Player 2 20:25:47 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[322],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":322,"effectCardPlayer":322},"entityId":6,"creatorCardId":322,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":194,"isAfterActivation":true,"index":5,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 20:25:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Response Remove After Resolve ActivatePassiveEffect 6"},"childOfId":40} 

 Player 2 20:25:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Wait For Response From Player 1 "},"childOfId":40} 

 Player 2 20:25:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:25:48 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:25:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Placenta for 10 \n2:Refill Store slot \n3:Activate Placenta "} 

 Player 1 20:25:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Placenta for 10 \n2:Refill Store slot \n3:Activate Placenta "} 

 Player 1 20:25:48 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[314,317]} 

 Player 1 20:25:48 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:25:48 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 2 20:25:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 2 "},"childOfId":40} 

 Player 2 20:25:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:25:48 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 2 20:25:48 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 2 20:25:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Resolve RefillEmptySlot 5 "}} 

 Player 2 20:25:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Placenta for 10 \n2:Refill Store slot"} 

 Player 2 20:25:48 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":322,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 2 20:25:48 $DRAW_CARD:  
{"deckType":5} 

 Player 2 20:25:48 $FLIP_CARD:  
{"cardId":187} 

 Player 2 20:25:48 $ADD_STORE_CARD:  
{"cardId":187} 

 Player 2 20:25:48 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":5} 

 Player 2 20:25:48 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 20:25:48 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 1 20:25:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Placenta for 10 \n2:Refill Store slot"} 

 Player 1 20:25:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Placenta for 10 \n2:Refill Store slot"} 

 Player 2 20:25:51 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":5} 

 Player 2 20:25:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Remove After Resolve RefillEmptySlot 5  "}} 

 Player 2 20:25:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Placenta for 10"} 

 Player 2 20:25:51 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":322,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 2 20:25:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Response Remove After Resolve RefillEmptySlot 5"},"childOfId":45} 

 Player 2 20:25:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Wait For Response From Player 2 "},"childOfId":45} 

 Player 2 20:25:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:25:51 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 2 20:25:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Wait For Response From Player 1 "},"childOfId":45} 

 Player 2 20:25:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:25:51 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:25:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Placenta for 10 \n2:Refill Store slot"} 

 Player 1 20:25:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Placenta for 10 \n2:Refill Store slot"} 

 Player 1 20:25:51 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[314,317]} 

 Player 1 20:25:51 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:25:51 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 2 20:25:51 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 2 20:25:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Resolve PurchaseItem 4 "}} 

 Player 2 20:25:51 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":4} 

 Player 2 20:25:51 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 20:25:51 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 2 20:25:54 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":4} 

 Player 2 20:25:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Remove After Resolve PurchaseItem 4  "}} 

 Player 2 20:25:54 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:25:54 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":322,"itemToPurchaseCardId":194,"playerWhoBuysCardId":322,"cost":10,"stackEffectType":9}} 

 Player 2 20:25:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Response Remove After Resolve PurchaseItem 4"},"childOfId":50} 

 Player 2 20:25:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Wait For Response From Player 1 "},"childOfId":50} 

 Player 2 20:25:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:25:55 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:25:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Placenta for 10"} 

 Player 1 20:25:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Placenta for 10"} 

 Player 1 20:25:55 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[314,317]} 

 Player 1 20:25:55 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:25:55 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 2 20:25:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Wait For Response From Player 2 "},"childOfId":50} 

 Player 2 20:25:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:25:55 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 2 20:25:55 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 2 20:25:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Stack Was Emptied "}} 

 Player 2 20:25:55 $CLEAR_SE_VIS:  

 Player 2 20:25:55 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:26:13 $NEXT_STACK_ID:  

 Player 2 20:26:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:26:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 20:26:13 $ADD_TO_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":322,"attackingPlayerCardId":322,"idOfCardBeingAttacked":223,"stackEffectType":4}} 

 Player 2 20:26:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 20:26:13 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":322,"attackingPlayerCardId":322,"idOfCardBeingAttacked":223,"stackEffectType":4}} 

 Player 2 20:26:13 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 20:26:13 $SHOW_STACK_EFFECT:  
{"effectId":7} 

 Player 1 20:26:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:26:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:26:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 20:26:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 20:26:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Add DeclareAttack 7 "}} 

 Player 2 20:26:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:26:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 20:26:16 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":322,"attackingPlayerCardId":322,"idOfCardBeingAttacked":223,"stackEffectType":4}} 

 Player 2 20:26:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":56,"_text":"Response Adding DeclareAttack 7"},"childOfId":55} 

 Player 2 20:26:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":57,"_text":"Wait For Response From Player 2 "},"childOfId":55} 

 Player 2 20:26:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:26:16 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 2 20:26:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":58,"_text":"Wait For Response From Player 1 "},"childOfId":55} 

 Player 2 20:26:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:26:16 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:26:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 20:26:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 20:26:16 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[314,317]} 

 Player 1 20:26:16 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:26:16 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 2 20:26:16 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 2 20:26:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":59,"_text":"Resolve DeclareAttack 7 "}} 

 Player 2 20:26:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 20:26:17 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":322,"attackingPlayerCardId":322,"idOfCardBeingAttacked":223,"stackEffectType":4}} 

 Player 2 20:26:17 $DRAW_CARD:  
{"deckType":2} 

 Player 2 20:26:17 $SHOW_CARD_PREVIEW:  
{"cardToShowId":277,"playerId":2} 

 Player 1 20:26:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 20:26:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 20:26:23 $FLIP_CARD:  
{"cardId":277} 

 Player 2 20:26:23 $REGISTER_PASSIVE_ITEM:  
{"cardId":277} 

 Player 2 20:26:23 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":277} 

 Player 2 20:26:23 $NEW_MONSTER_ON_PLACE:  
{"cardId":277,"monsterPlaceId":1} 

 Player 2 20:26:23 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":277,"particleType":5} 

 Player 2 20:26:23 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":322,"scopeIsPlayer":true,"index":6,"originStackId":7},"isAfterActivation":true,"index":6} 

 Player 2 20:26:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 20:26:23 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":322,"attackingPlayerCardId":322,"idOfCardBeingAttacked":277,"stackEffectType":4}} 

 Player 2 20:26:23 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":7} 

 Player 2 20:26:23 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 20:26:23 $SHOW_STACK_EFFECT:  
{"effectId":7} 

 Player 1 20:26:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 20:26:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 20:26:26 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":7} 

 Player 2 20:26:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":60,"_text":"Remove After Resolve DeclareAttack 7  "}} 

 Player 2 20:26:26 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:26:26 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":322,"attackingPlayerCardId":322,"idOfCardBeingAttacked":277,"stackEffectType":4}} 

 Player 2 20:26:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":61,"_text":"Response Remove After Resolve DeclareAttack 7"},"childOfId":60} 

 Player 2 20:26:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":62,"_text":"Wait For Response From Player 1 "},"childOfId":60} 

 Player 2 20:26:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:26:26 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:26:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Holy Mulligan"} 

 Player 1 20:26:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Holy Mulligan"} 

 Player 1 20:26:26 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[314,317]} 

 Player 1 20:26:26 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:26:26 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 2 20:26:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":63,"_text":"Wait For Response From Player 2 "},"childOfId":60} 

 Player 2 20:26:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:26:27 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 2 20:26:27 $ACTION_MASSAGE_REMOVE:  
{"id":61} 

 Player 2 20:26:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":64,"_text":"Stack Was Emptied "}} 

 Player 2 20:26:27 $CLEAR_SE_VIS:  

 Player 2 20:26:27 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:26:29 $NEXT_STACK_ID:  

 Player 2 20:26:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:26:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Holy Mulligan<Monster>"} 

 Player 2 20:26:29 $ADD_TO_STACK:  
{"stackEffect":{"entityId":8,"creatorCardId":322,"rollingPlayerCardId":322,"stackEffectType":2,"attackedMonsterCardId":277}} 

 Player 2 20:26:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Holy Mulligan<Monster>"} 

 Player 2 20:26:29 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":322,"rollingPlayerCardId":322,"stackEffectType":2,"attackedMonsterCardId":277}} 

 Player 2 20:26:29 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 20:26:29 $SHOW_STACK_EFFECT:  
{"effectId":8} 

 Player 1 20:26:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:26:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:26:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Holy Mulligan<Monster>"} 

 Player 1 20:26:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Holy Mulligan<Monster>"} 

 Player 2 20:26:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":65,"_text":"Add AttackRoll 8 "}} 

 Player 2 20:26:32 $ROLL_DICE:  
{"playerId":2} 

 Player 2 20:26:34 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":4} 

 Player 2 20:26:34 $UPDATE_STACK_VIS:  
{"stackId":8,"text":"player rolled 4 vs Holy Mulligan<Monster>"} 

 Player 2 20:26:34 $SHOW_DICE_ROLL:  
{"stackId":8} 

 Player 2 20:26:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Holy Mulligan<Monster>"} 

 Player 2 20:26:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:26:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Holy Mulligan<Monster>"} 

 Player 2 20:26:37 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":322,"numberRolled":4,"rollingPlayerCardId":322,"stackEffectType":2,"attackedMonsterCardId":277}} 

 Player 2 20:26:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":66,"_text":"Response Adding AttackRoll 8"},"childOfId":65} 

 Player 2 20:26:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":67,"_text":"Wait For Response From Player 2 "},"childOfId":65} 

 Player 2 20:26:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:26:37 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 2 20:26:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":68,"_text":"Wait For Response From Player 1 "},"childOfId":65} 

 Player 2 20:26:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:26:37 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:26:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Holy Mulligan<Monster>"} 

 Player 1 20:26:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Holy Mulligan<Monster>"} 

 Player 1 20:26:37 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[314,317]} 

 Player 1 20:26:37 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:26:37 $ACTION_MASSAGE_REMOVE:  
{"id":68} 

 Player 2 20:26:37 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 2 20:26:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":69,"_text":"Resolve AttackRoll 8 "}} 

 Player 2 20:26:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Holy Mulligan<Monster>"} 

 Player 2 20:26:37 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":322,"numberRolled":4,"rollingPlayerCardId":322,"stackEffectType":2,"attackedMonsterCardId":277}} 

 Player 2 20:26:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":70,"_text":"Added 0 to original roll"}} 

 Player 2 20:26:38 $NEXT_STACK_ID:  

 Player 2 20:26:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Holy Mulligan<Monster>"} 

 Player 2 20:26:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:26:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan \n2:Player 2 rolled 4 vs Holy Mulligan<Monster>"} 

 Player 2 20:26:38 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":322,"entityToDoDamageCardId":322,"entityToTakeDamageCardId":277,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 2 20:26:38 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 20:26:38 $SHOW_STACK_EFFECT:  
{"effectId":9} 

 Player 1 20:26:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Holy Mulligan<Monster>"} 

 Player 1 20:26:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Holy Mulligan<Monster>"} 

 Player 1 20:26:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Holy Mulligan<Monster>"} 

 Player 1 20:26:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Holy Mulligan<Monster>"} 

 Player 2 20:26:40 $CLEAR_SE_VIS:  

 Player 2 20:26:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan \n2:Player 2 rolled 4 vs Holy Mulligan<Monster>"} 

 Player 2 20:26:40 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":322,"entityToDoDamageCardId":322,"entityToTakeDamageCardId":277,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 2 20:26:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan \n2:Player 2 rolled 4 vs Holy Mulligan<Monster>"} 

 Player 2 20:26:41 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":322,"numberRolled":4,"rollingPlayerCardId":322,"stackEffectType":2,"attackedMonsterCardId":277}} 

 Player 2 20:26:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan \n2:Player 2 rolled 4 vs Holy Mulligan<Monster>"} 

 Player 2 20:26:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan \n2:Player 2 rolled 4 vs Holy Mulligan<Monster>"} 

 Player 2 20:26:41 $REPLACE_STACK:  
{"currentStack":[{"entityId":9,"creatorCardId":322,"entityToDoDamageCardId":322,"entityToTakeDamageCardId":277,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":8,"creatorCardId":322,"numberRolled":4,"rollingPlayerCardId":322,"stackEffectType":2,"attackedMonsterCardId":277}]} 

 Player 2 20:26:41 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":322,"scopeIsPlayer":true,"index":7,"originStackId":8},"isAfterActivation":true,"index":7} 

 Player 2 20:26:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan \n2:Player 2 rolled 4 vs Holy Mulligan<Monster>"} 

 Player 2 20:26:41 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":322,"numberRolled":4,"rollingPlayerCardId":322,"stackEffectType":2,"attackedMonsterCardId":277}} 

 Player 2 20:26:41 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":8} 

 Player 2 20:26:41 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 20:26:41 $SHOW_STACK_EFFECT:  
{"effectId":8} 

 Player 1 20:26:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Holy Mulligan<Monster>"} 

 Player 1 20:26:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Holy Mulligan<Monster>"} 

 Player 1 20:26:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Holy Mulligan<Monster>"} 

 Player 1 20:26:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Holy Mulligan<Monster>"} 

 Player 1 20:26:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Holy Mulligan<Monster>"} 

 Player 1 20:26:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Holy Mulligan<Monster>"} 

 Player 1 20:26:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Holy Mulligan<Monster>"} 

 Player 1 20:26:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Holy Mulligan<Monster>"} 

 Player 1 20:26:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan \n2:Player 2 is rolling against Holy Mulligan<Monster>"} 

 Player 1 20:26:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan \n2:Player 2 is rolling against Holy Mulligan<Monster>"} 

 Player 2 20:26:43 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":8} 

 Player 2 20:26:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":71,"_text":"Remove After Resolve AttackRoll 8  "}} 

 Player 2 20:26:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan"} 

 Player 2 20:26:43 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":8,"creatorCardId":322,"numberRolled":4,"rollingPlayerCardId":322,"stackEffectType":2,"attackedMonsterCardId":277}} 

 Player 2 20:26:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":72,"_text":"Response Remove After Resolve AttackRoll 8"},"childOfId":71} 

 Player 2 20:26:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":73,"_text":"Wait For Response From Player 2 "},"childOfId":71} 

 Player 2 20:26:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:26:44 $ACTION_MASSAGE_REMOVE:  
{"id":73} 

 Player 2 20:26:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":74,"_text":"Wait For Response From Player 1 "},"childOfId":71} 

 Player 2 20:26:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:26:44 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:26:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan \n2:Player 2 is rolling against Holy Mulligan<Monster>"} 

 Player 1 20:26:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan \n2:Player 2 is rolling against Holy Mulligan<Monster>"} 

 Player 1 20:26:44 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[314,317]} 

 Player 1 20:26:44 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:26:44 $ACTION_MASSAGE_REMOVE:  
{"id":74} 

 Player 2 20:26:44 $ACTION_MASSAGE_REMOVE:  
{"id":72} 

 Player 2 20:26:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":75,"_text":"Resolve CombatDamage 9 "}} 

 Player 2 20:26:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan"} 

 Player 2 20:26:44 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":322,"entityToDoDamageCardId":322,"entityToTakeDamageCardId":277,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 2 20:26:44 $UPDATE_STACK_VIS:  
{"stackId":9,"text":"Maggy will deal 1 combat damage to Holy Mulligan"} 

 Player 2 20:26:44 $MONSTER_GET_DAMAGED:  
{"cardId":277,"hpLeft":0,"damageDealerId":322} 

 Player 2 20:26:44 $NEXT_STACK_ID:  

 Player 2 20:26:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan"} 

 Player 2 20:26:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:26:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan \n2:[object Object] killed by Maggy"} 

 Player 2 20:26:44 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":322,"monsterToDieCardId":277,"stackEffectType":5,"killerId":322}} 

 Player 2 20:26:44 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 20:26:44 $SHOW_STACK_EFFECT:  
{"effectId":10} 

 Player 1 20:26:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan"} 

 Player 1 20:26:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan"} 

 Player 1 20:26:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan"} 

 Player 1 20:26:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan"} 

 Player 2 20:26:47 $CLEAR_SE_VIS:  

 Player 2 20:26:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan \n2:[object Object] killed by Maggy"} 

 Player 2 20:26:47 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":322,"entityToDoDamageCardId":322,"entityToTakeDamageCardId":277,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 2 20:26:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan \n2:[object Object] killed by Maggy"} 

 Player 2 20:26:47 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":322,"monsterToDieCardId":277,"stackEffectType":5,"killerId":322}} 

 Player 2 20:26:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan \n2:[object Object] killed by Maggy"} 

 Player 2 20:26:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan \n2:[object Object] killed by Maggy"} 

 Player 2 20:26:47 $REPLACE_STACK:  
{"currentStack":[{"entityId":9,"creatorCardId":322,"entityToDoDamageCardId":322,"entityToTakeDamageCardId":277,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":10,"creatorCardId":322,"monsterToDieCardId":277,"stackEffectType":5,"killerId":322}]} 

 Player 2 20:26:47 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":322},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":277,"scopeIsPlayer":false,"index":8,"originStackId":-1},"isAfterActivation":true,"index":8} 

 Player 2 20:26:47 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":4},{"type":0,"number":322},{"type":0,"number":277}],"result":null,"preventMethod":false,"methodScopeId":322,"scopeIsPlayer":true,"index":9,"originStackId":9},"isAfterActivation":true,"index":9} 

 Player 2 20:26:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan \n2:[object Object] killed by Maggy"} 

 Player 2 20:26:47 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":322,"entityToDoDamageCardId":322,"entityToTakeDamageCardId":277,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 2 20:26:47 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":9} 

 Player 2 20:26:47 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 20:26:47 $SHOW_STACK_EFFECT:  
{"effectId":9} 

 Player 1 20:26:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan"} 

 Player 1 20:26:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan"} 

 Player 1 20:26:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan"} 

 Player 1 20:26:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan"} 

 Player 1 20:26:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan"} 

 Player 1 20:26:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan"} 

 Player 1 20:26:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan"} 

 Player 1 20:26:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan"} 

 Player 1 20:26:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan \n2:[object Object] killed by Maggy"} 

 Player 1 20:26:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan \n2:[object Object] killed by Maggy"} 

 Player 2 20:26:50 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":9} 

 Player 2 20:26:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":76,"_text":"Remove After Resolve CombatDamage 9  "}} 

 Player 2 20:26:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Maggy"} 

 Player 2 20:26:50 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":9,"creatorCardId":322,"entityToDoDamageCardId":322,"entityToTakeDamageCardId":277,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 2 20:26:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":77,"_text":"Response Remove After Resolve CombatDamage 9"},"childOfId":76} 

 Player 2 20:26:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":78,"_text":"Wait For Response From Player 2 "},"childOfId":76} 

 Player 2 20:26:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:26:50 $ACTION_MASSAGE_REMOVE:  
{"id":78} 

 Player 2 20:26:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":79,"_text":"Wait For Response From Player 1 "},"childOfId":76} 

 Player 2 20:26:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:26:50 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:26:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan \n2:[object Object] killed by Maggy"} 

 Player 1 20:26:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan \n2:[object Object] killed by Maggy"} 

 Player 1 20:26:50 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[314,317]} 

 Player 1 20:26:50 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:26:50 $ACTION_MASSAGE_REMOVE:  
{"id":79} 

 Player 2 20:26:50 $ACTION_MASSAGE_REMOVE:  
{"id":77} 

 Player 2 20:26:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":80,"_text":"Resolve MonsterDeath 10 "}} 

 Player 2 20:26:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Maggy"} 

 Player 2 20:26:51 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":322,"monsterToDieCardId":277,"stackEffectType":5,"killerId":322}} 

 Player 2 20:26:51 $DISABLE_PARTICLE_EFFECT:  
{"cardId":277,"particleType":5} 

 Player 2 20:26:51 $CANCEL_ATTACK:  

 Player 2 20:26:51 $NEXT_STACK_ID:  

 Player 2 20:26:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Maggy"} 

 Player 2 20:26:51 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[{"type":2}],"result":null,"preventMethod":false,"methodScopeId":277,"scopeIsPlayer":false,"index":1,"originStackId":11},"isAfterActivation":false,"index":1} 

 Player 2 20:26:51 $NEXT_STACK_ID:  

 Player 2 20:26:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Maggy"} 

 Player 2 20:26:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Maggy \n3:Activate Holy Mulligan effect ChainEffects<ChainEffects>"} 

 Player 2 20:26:51 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":12,"creatorCardId":322,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":277,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":277,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 20:26:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Maggy \n3:Activate Holy Mulligan effect ChainEffects<ChainEffects>"} 

 Player 2 20:26:51 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":12,"creatorCardId":322,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":277,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":277,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 20:26:51 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 20:26:51 $SHOW_STACK_EFFECT:  
{"effectId":12} 

 Player 1 20:26:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan"} 

 Player 1 20:26:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan"} 

 Player 1 20:26:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan"} 

 Player 1 20:26:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan"} 

 Player 1 20:26:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan \n2:Activate Holy Mulligan "} 

 Player 1 20:26:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan \n2:Activate Holy Mulligan "} 

 Player 2 20:26:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":81,"_text":"Add ActivatePassiveEffect 12 "}} 

 Player 2 20:26:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Maggy \n3:Activate Holy Mulligan effect ChainEffects<ChainEffects>"} 

 Player 2 20:26:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Maggy \n3:Activate Holy Mulligan effect ChainEffects<ChainEffects>"} 

 Player 2 20:26:54 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":277,"effectCardPlayer":277},"entityId":12,"creatorCardId":322,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":277,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":277,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 20:26:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":82,"_text":"Response Adding ActivatePassiveEffect 12"},"childOfId":81} 

 Player 2 20:26:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":83,"_text":"Wait For Response From Player 1 "},"childOfId":81} 

 Player 2 20:26:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:26:54 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:26:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan \n2:Activate Holy Mulligan "} 

 Player 1 20:26:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan \n2:Activate Holy Mulligan "} 

 Player 1 20:26:54 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[314,317]} 

 Player 1 20:26:54 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:26:54 $ACTION_MASSAGE_REMOVE:  
{"id":83} 

 Player 2 20:26:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":84,"_text":"Wait For Response From Player 2 "},"childOfId":81} 

 Player 2 20:26:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:26:54 $ACTION_MASSAGE_REMOVE:  
{"id":84} 

 Player 2 20:26:54 $ACTION_MASSAGE_REMOVE:  
{"id":82} 

 Player 2 20:26:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":85,"_text":"Resolve ActivatePassiveEffect 12 "}} 

 Player 2 20:26:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Maggy \n3:Activate Holy Mulligan effect ChainEffects<ChainEffects>"} 

 Player 2 20:26:54 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":277,"effectCardPlayer":277},"entityId":12,"creatorCardId":322,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":277,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":277,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 20:26:54 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":277,"particleType":6} 

 Player 1 20:26:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan \n2:Activate Holy Mulligan "} 

 Player 1 20:26:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan \n2:Activate Holy Mulligan "} 

 Player 2 20:26:56 $DISABLE_PARTICLE_EFFECT:  
{"cardId":277,"particleType":6} 

 Player 2 20:26:56 $NEW_MONSTER_PLACE:  

 Player 2 20:26:56 $NEXT_STACK_ID:  

 Player 2 20:26:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Maggy \n3:Activate Holy Mulligan effect ChainEffects<ChainEffects>"} 

 Player 2 20:26:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Maggy \n3:Activate Holy Mulligan effect ChainEffects<ChainEffects> \n4:Refill holder3 slot"} 

 Player 2 20:26:56 $ADD_TO_STACK:  
{"stackEffect":{"entityId":13,"creatorCardId":322,"slotType":2,"slotToFillId":3,"stackEffectType":10}} 

 Player 2 20:26:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Maggy \n3:Activate Holy Mulligan effect ChainEffects<ChainEffects> \n4:Refill holder3 slot"} 

 Player 2 20:26:56 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":13,"creatorCardId":322,"slotType":2,"slotToFillId":3,"stackEffectType":10}} 

 Player 2 20:26:56 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 20:26:56 $SHOW_STACK_EFFECT:  
{"effectId":13} 

 Player 1 20:26:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan \n2:Activate Holy Mulligan "} 

 Player 1 20:26:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan \n2:Activate Holy Mulligan "} 

 Player 1 20:26:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan \n2:Activate Holy Mulligan  \n3:Refill holder3 slot"} 

 Player 1 20:26:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan \n2:Activate Holy Mulligan  \n3:Refill holder3 slot"} 

 Player 2 20:26:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":86,"_text":"Add RefillEmptySlot 13 "}} 

 Player 2 20:26:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:26:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Maggy \n3:Activate Holy Mulligan effect ChainEffects<ChainEffects> \n4:Refill holder3 slot"} 

 Player 2 20:26:59 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":13,"creatorCardId":322,"slotType":2,"slotToFillId":3,"stackEffectType":10}} 

 Player 2 20:26:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":87,"_text":"Response Adding RefillEmptySlot 13"},"childOfId":86} 

 Player 2 20:26:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":88,"_text":"Wait For Response From Player 2 "},"childOfId":86} 

 Player 2 20:26:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:26:59 $ACTION_MASSAGE_REMOVE:  
{"id":88} 

 Player 2 20:26:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":89,"_text":"Wait For Response From Player 1 "},"childOfId":86} 

 Player 2 20:26:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:27:00 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:27:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan \n2:Activate Holy Mulligan  \n3:Refill holder3 slot"} 

 Player 1 20:27:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan \n2:Activate Holy Mulligan  \n3:Refill holder3 slot"} 

 Player 1 20:27:00 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[314,317]} 

 Player 1 20:27:00 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:27:00 $ACTION_MASSAGE_REMOVE:  
{"id":89} 

 Player 2 20:27:00 $ACTION_MASSAGE_REMOVE:  
{"id":87} 

 Player 2 20:27:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":90,"_text":"Resolve RefillEmptySlot 13 "}} 

 Player 2 20:27:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Maggy \n3:Activate Holy Mulligan effect ChainEffects<ChainEffects> \n4:Refill holder3 slot"} 

 Player 2 20:27:00 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":13,"creatorCardId":322,"slotType":2,"slotToFillId":3,"stackEffectType":10}} 

 Player 2 20:27:00 $DRAW_CARD:  
{"deckType":2} 

 Player 2 20:27:00 $FLIP_CARD:  
{"cardId":270} 

 Player 2 20:27:00 $REGISTER_PASSIVE_ITEM:  
{"cardId":270} 

 Player 2 20:27:00 $ADD_MONSTER:  
{"monsterPlaceId":3,"monsterId":270} 

 Player 2 20:27:00 $NEW_MONSTER_ON_PLACE:  
{"cardId":270,"monsterPlaceId":3} 

 Player 2 20:27:00 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":13} 

 Player 2 20:27:00 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 20:27:00 $SHOW_STACK_EFFECT:  
{"effectId":13} 

 Player 1 20:27:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan \n2:Activate Holy Mulligan  \n3:Refill holder3 slot"} 

 Player 1 20:27:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan \n2:Activate Holy Mulligan  \n3:Refill holder3 slot"} 

 Player 2 20:27:03 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":13} 

 Player 2 20:27:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":91,"_text":"Remove After Resolve RefillEmptySlot 13  "}} 

 Player 2 20:27:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Maggy \n3:Activate Holy Mulligan effect ChainEffects<ChainEffects>"} 

 Player 2 20:27:03 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":13,"creatorCardId":322,"slotType":2,"slotToFillId":3,"stackEffectType":10}} 

 Player 2 20:27:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":92,"_text":"Response Remove After Resolve RefillEmptySlot 13"},"childOfId":91} 

 Player 2 20:27:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":93,"_text":"Wait For Response From Player 1 "},"childOfId":91} 

 Player 2 20:27:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:27:03 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:27:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan \n2:Activate Holy Mulligan  \n3:Refill holder3 slot"} 

 Player 1 20:27:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan \n2:Activate Holy Mulligan  \n3:Refill holder3 slot"} 

 Player 1 20:27:03 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[314,317]} 

 Player 1 20:27:03 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:27:03 $ACTION_MASSAGE_REMOVE:  
{"id":93} 

 Player 2 20:27:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":94,"_text":"Wait For Response From Player 2 "},"childOfId":91} 

 Player 2 20:27:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:27:03 $ACTION_MASSAGE_REMOVE:  
{"id":94} 

 Player 2 20:27:03 $ACTION_MASSAGE_REMOVE:  
{"id":92} 

 Player 2 20:27:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":95,"_text":"Resolve ActivatePassiveEffect 12 "}} 

 Player 2 20:27:03 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[{"type":2}],"result":null,"preventMethod":false,"methodScopeId":277,"scopeIsPlayer":false,"index":1,"originStackId":11},"isAfterActivation":false,"index":1} 

 Player 2 20:27:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Maggy \n3:Activate Holy Mulligan effect ChainEffects<ChainEffects>"} 

 Player 2 20:27:03 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":277,"effectCardPlayer":277},"entityId":12,"creatorCardId":322,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":277,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 20:27:03 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":12} 

 Player 2 20:27:03 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 20:27:04 $SHOW_STACK_EFFECT:  
{"effectId":12} 

 Player 1 20:27:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan \n2:Activate Holy Mulligan "} 

 Player 1 20:27:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan \n2:Activate Holy Mulligan "} 

 Player 2 20:27:06 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":12} 

 Player 2 20:27:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":96,"_text":"Remove After Resolve ActivatePassiveEffect 12  "}} 

 Player 2 20:27:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Maggy"} 

 Player 2 20:27:06 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":277,"effectCardPlayer":277},"entityId":12,"creatorCardId":322,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":277,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 20:27:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":97,"_text":"Response Remove After Resolve ActivatePassiveEffect 12"},"childOfId":96} 

 Player 2 20:27:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":98,"_text":"Wait For Response From Player 2 "},"childOfId":96} 

 Player 2 20:27:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:27:06 $ACTION_MASSAGE_REMOVE:  
{"id":98} 

 Player 2 20:27:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":99,"_text":"Wait For Response From Player 1 "},"childOfId":96} 

 Player 2 20:27:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:27:06 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:27:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan \n2:Activate Holy Mulligan "} 

 Player 1 20:27:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan \n2:Activate Holy Mulligan "} 

 Player 1 20:27:07 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[314,317]} 

 Player 1 20:27:07 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:27:07 $ACTION_MASSAGE_REMOVE:  
{"id":99} 

 Player 2 20:27:07 $ACTION_MASSAGE_REMOVE:  
{"id":97} 

 Player 2 20:27:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":100,"_text":"Resolve MonsterDeath 10 "}} 

 Player 2 20:27:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:27:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Maggy"} 

 Player 2 20:27:07 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":322,"monsterCardWithRewardId":277,"playerCardIdToReward":322,"stackEffectType":7}} 

 Player 2 20:27:07 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 20:27:07 $SHOW_STACK_EFFECT:  
{"effectId":11} 

 Player 1 20:27:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan"} 

 Player 1 20:27:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan"} 

 Player 2 20:27:10 $CLEAR_SE_VIS:  

 Player 2 20:27:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Maggy"} 

 Player 2 20:27:10 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":322,"monsterCardWithRewardId":277,"playerCardIdToReward":322,"stackEffectType":7}} 

 Player 2 20:27:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Maggy"} 

 Player 2 20:27:10 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":322,"monsterToDieCardId":277,"stackEffectType":5,"killerId":322}} 

 Player 2 20:27:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Maggy"} 

 Player 2 20:27:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Maggy"} 

 Player 2 20:27:10 $REPLACE_STACK:  
{"currentStack":[{"entityId":11,"creatorCardId":322,"monsterCardWithRewardId":277,"playerCardIdToReward":322,"stackEffectType":7},{"entityId":10,"creatorCardId":322,"monsterToDieCardId":277,"stackEffectType":5,"killerId":322}]} 

 Player 2 20:27:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Maggy"} 

 Player 2 20:27:10 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":322,"monsterToDieCardId":277,"stackEffectType":5,"killerId":322}} 

 Player 2 20:27:10 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":10} 

 Player 2 20:27:10 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 20:27:10 $SHOW_STACK_EFFECT:  
{"effectId":10} 

 Player 1 20:27:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan"} 

 Player 1 20:27:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan"} 

 Player 1 20:27:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan"} 

 Player 1 20:27:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan"} 

 Player 1 20:27:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan"} 

 Player 1 20:27:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan"} 

 Player 1 20:27:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan"} 

 Player 1 20:27:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy combat damage to Holy Mulligan"} 

 Player 1 20:27:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Maggy"} 

 Player 1 20:27:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Maggy"} 

 Player 2 20:27:13 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":10} 

 Player 2 20:27:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":101,"_text":"Remove After Resolve MonsterDeath 10  "}} 

 Player 2 20:27:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Mulligan<Monster> reward"} 

 Player 2 20:27:13 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":10,"creatorCardId":322,"monsterToDieCardId":277,"stackEffectType":5,"killerId":322}} 

 Player 2 20:27:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":102,"_text":"Response Remove After Resolve MonsterDeath 10"},"childOfId":101} 

 Player 2 20:27:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":103,"_text":"Wait For Response From Player 2 "},"childOfId":101} 

 Player 2 20:27:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:27:13 $ACTION_MASSAGE_REMOVE:  
{"id":103} 

 Player 2 20:27:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":104,"_text":"Wait For Response From Player 1 "},"childOfId":101} 

 Player 2 20:27:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:27:13 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:27:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Maggy"} 

 Player 1 20:27:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Maggy"} 

 Player 1 20:27:13 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[314,317]} 

 Player 1 20:27:13 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:27:13 $ACTION_MASSAGE_REMOVE:  
{"id":104} 

 Player 2 20:27:13 $ACTION_MASSAGE_REMOVE:  
{"id":102} 

 Player 2 20:27:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":105,"_text":"Resolve MonsterRewardStackEffect 11 "}} 

 Player 2 20:27:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Mulligan<Monster> reward"} 

 Player 2 20:27:13 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":11,"creatorCardId":322,"monsterCardWithRewardId":277,"playerCardIdToReward":322,"stackEffectType":7}} 

 Player 2 20:27:14 $SET_MONEY:  
{"playerId":2,"numOfCoins":6} 

 Player 2 20:27:14 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":322,"scopeIsPlayer":true,"index":10,"originStackId":-1},"isAfterActivation":true,"index":10} 

 Player 2 20:27:14 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":277,"scopeIsPlayer":false,"index":11,"originStackId":11},"isAfterActivation":true,"index":11} 

 Player 2 20:27:14 $CLEAR_SE_VIS:  

 Player 2 20:27:14 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:27:14 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":11} 

 Player 2 20:27:14 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":11} 

 Player 2 20:27:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":106,"_text":"Fizzle MonsterRewardStackEffect 11"}} 

 Player 2 20:27:14 $FIZZLE_STACK_EFFECT:  
{"entityId":11} 

 Player 2 20:27:14 $MOVE_CARD:  
{"moveIndex":14,"cardId":277,"placeID":331,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 20:27:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Mulligan<Monster> reward"} 

 Player 1 20:27:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Mulligan<Monster> reward"} 

 Player 1 20:27:14 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 20:27:14 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:27:14 $CLEAR_SE_VIS:  

 Player 1 20:27:14 $MOVE_CARD_END:  
{"moveIndex":14,"cardId":277,"flipIfFlipped":true,"playerId":2} 

 Player 2 20:27:14 $MOVE_CARD_TO_PILE:  
{"type":2,"cardId":277} 

 Player 2 20:27:14 $REMOVE_FROM_PASSIVE_MANAGER:  
{"cardId":277} 

 Player 2 20:27:14 $REMOVE_MONSTER:  
{"holderId":1,"monsterId":277} 

 Player 2 20:27:14 $GET_NEXT_MONSTER:  
{"monsterPlaceId":1} 

 Player 2 20:27:14 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":11} 

 Player 2 20:27:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":107,"_text":"Stack Was Emptied "}} 

 Player 2 20:27:14 $CLEAR_SE_VIS:  

 Player 2 20:27:14 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:27:28 $NEXT_STACK_ID:  

 Player 2 20:27:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:27:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 20:27:29 $ADD_TO_STACK:  
{"stackEffect":{"entityId":14,"creatorCardId":322,"attackingPlayerCardId":322,"idOfCardBeingAttacked":223,"stackEffectType":4}} 

 Player 2 20:27:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 20:27:29 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":14,"creatorCardId":322,"attackingPlayerCardId":322,"idOfCardBeingAttacked":223,"stackEffectType":4}} 

 Player 2 20:27:29 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 20:27:29 $SHOW_STACK_EFFECT:  
{"effectId":14} 

 Player 1 20:27:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:27:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:27:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 20:27:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 20:27:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":108,"_text":"Add DeclareAttack 14 "}} 

 Player 2 20:27:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:27:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 20:27:32 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":14,"creatorCardId":322,"attackingPlayerCardId":322,"idOfCardBeingAttacked":223,"stackEffectType":4}} 

 Player 2 20:27:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":109,"_text":"Response Adding DeclareAttack 14"},"childOfId":108} 

 Player 2 20:27:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":110,"_text":"Wait For Response From Player 2 "},"childOfId":108} 

 Player 2 20:27:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:27:32 $ACTION_MASSAGE_REMOVE:  
{"id":110} 

 Player 2 20:27:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":111,"_text":"Wait For Response From Player 1 "},"childOfId":108} 

 Player 2 20:27:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:27:32 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:27:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 20:27:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 20:27:32 $SHOW_REACTIONS:  
{"playerId":1,"cardsIds":[314,317]} 

 Player 1 20:27:38 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":true} 

 Player 1 20:27:39 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[314,317]} 

 Player 1 20:27:39 $NEXT_STACK_ID:  

 Player 1 20:27:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 20:27:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 1 activated Sleight Of Hand"} 

 Player 1 20:27:39 $ADD_TO_STACK:  
{"stackEffect":{"entityId":15,"creatorCardId":314,"hasLockingStackEffect":false,"itemToPlayCardId":317,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 20:27:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 1 activated Sleight Of Hand"} 

 Player 1 20:27:39 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":15,"creatorCardId":314,"hasLockingStackEffect":false,"itemToPlayCardId":317,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 20:27:39 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 20:27:39 $SHOW_STACK_EFFECT:  
{"effectId":15} 

 Player 2 20:27:39 $ACTION_MASSAGE_REMOVE:  
{"id":111} 

 Player 2 20:27:39 $ACTION_MASSAGE_REMOVE:  
{"id":109} 

 Player 2 20:27:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 20:27:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 20:27:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 1 activated Sleight Of Hand"} 

 Player 2 20:27:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 1 activated Sleight Of Hand"} 

 Player 1 20:27:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":112,"_text":"Add ActivateItem 15 "}} 

 Player 1 20:27:44 $SHOW_DECISION:  
{"startCardId":317,"endCardId":223} 

 Player 1 20:27:47 $USE_ITEM:  
{"cardId":317} 

 Player 1 20:27:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:27:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 1 activated Sleight Of Hand"} 

 Player 1 20:27:47 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":15,"creatorCardId":314,"hasLockingStackEffect":false,"itemToPlayCardId":317,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 20:27:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":113,"_text":"Response Adding ActivateItem 15"},"childOfId":112} 

 Player 1 20:27:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":114,"_text":"Wait For Response From Player 2 "},"childOfId":112} 

 Player 1 20:27:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:27:47 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:27:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 1 activated Sleight Of Hand"} 

 Player 2 20:27:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 1 activated Sleight Of Hand"} 

 Player 2 20:27:48 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[322,323]} 

 Player 2 20:27:48 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:27:48 $ACTION_MASSAGE_REMOVE:  
{"id":114} 

 Player 1 20:27:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":115,"_text":"Wait For Response From Player 1 "},"childOfId":112} 

 Player 1 20:27:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:27:48 $SHOW_REACTIONS:  
{"playerId":1,"cardsIds":[314]} 

 Player 1 20:27:52 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[314]} 

 Player 1 20:27:52 $ACTION_MASSAGE_REMOVE:  
{"id":115} 

 Player 1 20:27:52 $ACTION_MASSAGE_REMOVE:  
{"id":113} 

 Player 1 20:27:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":116,"_text":"Resolve ActivateItem 15 "}} 

 Player 1 20:27:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 1 activated Sleight Of Hand"} 

 Player 1 20:27:52 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":15,"creatorCardId":314,"hasLockingStackEffect":false,"itemToPlayCardId":317,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 20:27:52 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":317,"particleType":6} 

 Player 2 20:27:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 1 activated Sleight Of Hand"} 

 Player 2 20:27:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 1 activated Sleight Of Hand"} 

 Player 1 20:27:54 $DISABLE_PARTICLE_EFFECT:  
{"cardId":317,"particleType":6} 

 Player 1 20:28:06 $DECK_ADD_TO_TOP:  
{"deckType":2,"cardId":284} 

 Player 1 20:28:06 $DECK_ADD_TO_TOP:  
{"deckType":2,"cardId":259} 

 Player 1 20:28:06 $DECK_ADD_TO_TOP:  
{"deckType":2,"cardId":306} 

 Player 1 20:28:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 1 activated Sleight Of Hand"} 

 Player 1 20:28:06 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":15,"creatorCardId":314,"hasLockingStackEffect":false,"itemToPlayCardId":317,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 20:28:06 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":15} 

 Player 1 20:28:06 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 20:28:06 $SHOW_STACK_EFFECT:  
{"effectId":15} 

 Player 2 20:28:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 1 activated Sleight Of Hand"} 

 Player 2 20:28:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 1 activated Sleight Of Hand"} 

 Player 1 20:28:09 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":15} 

 Player 1 20:28:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":117,"_text":"Remove After Resolve ActivateItem 15  "}} 

 Player 1 20:28:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 20:28:09 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":15,"creatorCardId":314,"hasLockingStackEffect":false,"itemToPlayCardId":317,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 20:28:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":118,"_text":"Response Remove After Resolve ActivateItem 15"},"childOfId":117} 

 Player 1 20:28:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":119,"_text":"Wait For Response From Player 1 "},"childOfId":117} 

 Player 1 20:28:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:28:09 $SHOW_REACTIONS:  
{"playerId":1,"cardsIds":[314]} 

 Player 2 20:28:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 1 activated Sleight Of Hand"} 

 Player 2 20:28:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 1 activated Sleight Of Hand"} 

 Player 1 20:28:13 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[314]} 

 Player 1 20:28:13 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[314]} 

 Player 1 20:28:13 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[314]} 

 Player 1 20:28:13 $ACTION_MASSAGE_REMOVE:  
{"id":119} 

 Player 1 20:28:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":120,"_text":"Wait For Response From Player 2 "},"childOfId":117} 

 Player 1 20:28:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:28:13 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:28:13 $SHOW_REACTIONS:  
{"playerId":2,"cardsIds":[322,323]} 

 Player 2 20:28:15 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[322,323]} 

 Player 2 20:28:15 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:28:15 $ACTION_MASSAGE_REMOVE:  
{"id":120} 

 Player 1 20:28:15 $ACTION_MASSAGE_REMOVE:  
{"id":118} 

 Player 1 20:28:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":121,"_text":"Resolve DeclareAttack 14 "}} 

 Player 1 20:28:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 20:28:15 $DO_STACK_EFFECT:  
{"originPlayerId":1,"playerId":2,"currentStack":[{"entityId":14,"creatorCardId":322,"attackingPlayerCardId":322,"idOfCardBeingAttacked":223,"stackEffectType":4}]} 

 Player 2 20:28:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 20:28:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 20:28:15 $DRAW_CARD:  
{"deckType":2} 

 Player 2 20:28:16 $SHOW_CARD_PREVIEW:  
{"cardToShowId":306,"playerId":2} 

 Player 2 20:28:20 $FLIP_CARD:  
{"cardId":306} 

 Player 2 20:28:20 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":306} 

 Player 2 20:28:20 $NEW_MONSTER_ON_PLACE:  
{"cardId":306,"monsterPlaceId":1} 

 Player 2 20:28:20 $NEXT_STACK_ID:  

 Player 2 20:28:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 20:28:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs"} 

 Player 2 20:28:20 $ADD_TO_STACK:  
{"stackEffect":{"entityId":16,"creatorCardId":322,"hasLockingStackEffect":false,"itemToPlayCardId":306,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 20:28:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs"} 

 Player 2 20:28:20 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":16,"creatorCardId":322,"hasLockingStackEffect":false,"itemToPlayCardId":306,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 20:28:21 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 20:28:21 $SHOW_STACK_EFFECT:  
{"effectId":16} 

 Player 1 20:28:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 20:28:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 20:28:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs"} 

 Player 1 20:28:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs"} 

 Player 2 20:28:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":122,"_text":"Add ActivateItem 16 "}} 

 Player 2 20:28:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:28:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs"} 

 Player 2 20:28:23 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":16,"creatorCardId":322,"hasLockingStackEffect":false,"itemToPlayCardId":306,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 20:28:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":123,"_text":"Response Adding ActivateItem 16"},"childOfId":122} 

 Player 2 20:28:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":124,"_text":"Wait For Response From Player 2 "},"childOfId":122} 

 Player 2 20:28:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:28:23 $SHOW_REACTIONS:  
{"playerId":2,"cardsIds":[322,323]} 

 Player 1 20:28:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs"} 

 Player 1 20:28:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs"} 

 Player 2 20:28:27 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[322,323]} 

 Player 2 20:28:27 $NEXT_STACK_ID:  

 Player 2 20:28:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs"} 

 Player 2 20:28:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Player 2 activated Yum Heart"} 

 Player 2 20:28:27 $ADD_TO_STACK:  
{"stackEffect":{"entityId":17,"creatorCardId":322,"hasLockingStackEffect":false,"itemToPlayCardId":323,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 20:28:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Player 2 activated Yum Heart"} 

 Player 2 20:28:27 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":17,"creatorCardId":322,"hasLockingStackEffect":false,"itemToPlayCardId":323,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 20:28:27 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 20:28:27 $SHOW_STACK_EFFECT:  
{"effectId":17} 

 Player 1 20:28:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs"} 

 Player 1 20:28:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs"} 

 Player 1 20:28:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Player 2 activated Yum Heart"} 

 Player 1 20:28:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Player 2 activated Yum Heart"} 

 Player 2 20:28:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":125,"_text":"Add ActivateItem 17 "}} 

 Player 2 20:28:33 $SHOW_DECISION:  
{"startCardId":323,"endCardId":322} 

 Player 2 20:28:36 $USE_ITEM:  
{"cardId":323} 

 Player 2 20:28:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:28:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Player 2 activated Yum Heart"} 

 Player 2 20:28:36 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":17,"creatorCardId":322,"hasLockingStackEffect":false,"itemToPlayCardId":323,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 20:28:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":126,"_text":"Response Adding ActivateItem 17"},"childOfId":125} 

 Player 2 20:28:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":127,"_text":"Wait For Response From Player 2 "},"childOfId":125} 

 Player 2 20:28:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:28:36 $SHOW_REACTIONS:  
{"playerId":2,"cardsIds":[322]} 

 Player 1 20:28:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Player 2 activated Yum Heart"} 

 Player 1 20:28:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Player 2 activated Yum Heart"} 

 Player 2 20:28:39 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[322]} 

 Player 2 20:28:39 $ACTION_MASSAGE_REMOVE:  
{"id":127} 

 Player 2 20:28:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":128,"_text":"Wait For Response From Player 1 "},"childOfId":125} 

 Player 2 20:28:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:28:39 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:28:39 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[314]} 

 Player 1 20:28:39 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:28:39 $ACTION_MASSAGE_REMOVE:  
{"id":128} 

 Player 2 20:28:39 $ACTION_MASSAGE_REMOVE:  
{"id":126} 

 Player 2 20:28:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":129,"_text":"Resolve ActivateItem 17 "}} 

 Player 2 20:28:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Player 2 activated Yum Heart"} 

 Player 2 20:28:39 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":17,"creatorCardId":322,"hasLockingStackEffect":false,"itemToPlayCardId":323,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 20:28:39 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":323,"particleType":6} 

 Player 1 20:28:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Player 2 activated Yum Heart"} 

 Player 1 20:28:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Player 2 activated Yum Heart"} 

 Player 2 20:28:41 $DISABLE_PARTICLE_EFFECT:  
{"cardId":323,"particleType":6} 

 Player 2 20:28:41 $PLAYER_ADD_DMG_PREVENTION:  
{"playerId":2,"dmgToPrevent":1} 

 Player 2 20:28:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Player 2 activated Yum Heart"} 

 Player 2 20:28:41 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":17,"creatorCardId":322,"hasLockingStackEffect":false,"itemToPlayCardId":323,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 20:28:41 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":17} 

 Player 2 20:28:41 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 20:28:41 $SHOW_STACK_EFFECT:  
{"effectId":17} 

 Player 1 20:28:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Player 2 activated Yum Heart"} 

 Player 1 20:28:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Player 2 activated Yum Heart"} 

 Player 2 20:28:44 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":17} 

 Player 2 20:28:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":130,"_text":"Remove After Resolve ActivateItem 17  "}} 

 Player 2 20:28:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs"} 

 Player 2 20:28:44 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":17,"creatorCardId":322,"hasLockingStackEffect":false,"itemToPlayCardId":323,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 20:28:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":131,"_text":"Response Remove After Resolve ActivateItem 17"},"childOfId":130} 

 Player 2 20:28:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":132,"_text":"Wait For Response From Player 1 "},"childOfId":130} 

 Player 2 20:28:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:28:44 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:28:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Player 2 activated Yum Heart"} 

 Player 1 20:28:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Player 2 activated Yum Heart"} 

 Player 1 20:28:44 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[314]} 

 Player 1 20:28:44 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:28:45 $ACTION_MASSAGE_REMOVE:  
{"id":132} 

 Player 2 20:28:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":133,"_text":"Wait For Response From Player 2 "},"childOfId":130} 

 Player 2 20:28:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:28:45 $SHOW_REACTIONS:  
{"playerId":2,"cardsIds":[322]} 

 Player 2 20:28:46 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[322]} 

 Player 2 20:28:46 $ACTION_MASSAGE_REMOVE:  
{"id":133} 

 Player 2 20:28:46 $ACTION_MASSAGE_REMOVE:  
{"id":131} 

 Player 2 20:28:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":134,"_text":"Resolve ActivateItem 16 "}} 

 Player 2 20:28:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs"} 

 Player 2 20:28:46 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":16,"creatorCardId":322,"hasLockingStackEffect":false,"itemToPlayCardId":306,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 20:28:46 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":306,"particleType":6} 

 Player 1 20:28:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs"} 

 Player 1 20:28:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs"} 

 Player 2 20:28:48 $DISABLE_PARTICLE_EFFECT:  
{"cardId":306,"particleType":6} 

 Player 2 20:28:48 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_PREVENT_DAMAGE","args":[],"result":1,"preventMethod":false,"methodScopeId":322,"scopeIsPlayer":true,"index":12,"originStackId":-1},"isAfterActivation":true,"index":12} 

 Player 2 20:28:48 $PLAYER_GET_HIT:  
{"playerId":2,"damage":1,"damageDealerId":306} 

 Player 2 20:28:48 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":306}],"result":null,"preventMethod":false,"methodScopeId":322,"scopeIsPlayer":true,"index":13,"originStackId":-1},"isAfterActivation":true,"index":13} 

 Player 2 20:28:48 $MOVE_CARD:  
{"moveIndex":15,"cardId":306,"placeID":331,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 20:28:48 $MOVE_CARD_END:  
{"moveIndex":15,"cardId":306,"flipIfFlipped":true,"playerId":2} 

 Player 2 20:28:48 $MOVE_CARD_TO_PILE:  
{"type":2,"cardId":306} 

 Player 2 20:28:48 $REMOVE_MONSTER:  
{"holderId":1,"monsterId":306} 

 Player 2 20:28:48 $GET_NEXT_MONSTER:  
{"monsterPlaceId":1} 

 Player 2 20:28:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs"} 

 Player 2 20:28:48 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":16,"creatorCardId":322,"hasLockingStackEffect":false,"itemToPlayCardId":306,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 20:28:48 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":16} 

 Player 2 20:28:48 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 20:28:48 $SHOW_STACK_EFFECT:  
{"effectId":16} 

 Player 1 20:28:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs"} 

 Player 1 20:28:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs"} 

 Player 2 20:28:51 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":16} 

 Player 2 20:28:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":135,"_text":"Remove After Resolve ActivateItem 16  "}} 

 Player 2 20:28:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 20:28:51 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":16,"creatorCardId":322,"hasLockingStackEffect":false,"itemToPlayCardId":306,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 20:28:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":136,"_text":"Response Remove After Resolve ActivateItem 16"},"childOfId":135} 

 Player 2 20:28:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":137,"_text":"Wait For Response From Player 2 "},"childOfId":135} 

 Player 2 20:28:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:28:51 $SHOW_REACTIONS:  
{"playerId":2,"cardsIds":[322]} 

 Player 1 20:28:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs"} 

 Player 1 20:28:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs"} 

 Player 2 20:28:58 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[322]} 

 Player 2 20:28:58 $ACTION_MASSAGE_REMOVE:  
{"id":137} 

 Player 2 20:28:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":138,"_text":"Wait For Response From Player 1 "},"childOfId":135} 

 Player 2 20:28:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:28:58 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:28:58 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[314]} 

 Player 1 20:28:58 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:28:58 $ACTION_MASSAGE_REMOVE:  
{"id":138} 

 Player 2 20:28:58 $ACTION_MASSAGE_REMOVE:  
{"id":136} 

 Player 2 20:28:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":139,"_text":"Resolve DeclareAttack 14 "}} 

 Player 2 20:28:58 $ACTION_MASSAGE_REMOVE:  
{"id":124} 

 Player 2 20:28:58 $ACTION_MASSAGE_REMOVE:  
{"id":123} 

 Player 2 20:28:58 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":322,"scopeIsPlayer":true,"index":14,"originStackId":14},"isAfterActivation":true,"index":14} 

 Player 2 20:28:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 20:28:58 $FINISH_DO_STACK_EFFECT:  
{"playerId":1,"newStack":[{"entityId":14,"creatorCardId":322,"attackingPlayerCardId":322,"idOfCardBeingAttacked":306,"stackEffectType":4}]} 

 Player 1 20:28:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 20:28:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 20:28:58 $CLEAR_SE_VIS:  

 Player 1 20:28:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Troll Bombs"} 

 Player 1 20:28:59 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":14,"creatorCardId":322,"attackingPlayerCardId":322,"idOfCardBeingAttacked":306,"stackEffectType":4}} 

 Player 1 20:28:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Troll Bombs"} 

 Player 1 20:28:59 $REPLACE_STACK:  
{"currentStack":[{"entityId":14,"creatorCardId":322,"attackingPlayerCardId":322,"idOfCardBeingAttacked":306,"stackEffectType":4}]} 

 Player 1 20:28:59 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 20:28:59 $SHOW_STACK_EFFECT:  
{"effectId":14} 

 Player 2 20:28:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 20:28:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 20:28:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 20:28:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 20:29:01 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":14} 

 Player 1 20:29:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":140,"_text":"Remove After Resolve DeclareAttack 14  "}} 

 Player 1 20:29:02 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:29:02 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":14,"creatorCardId":322,"attackingPlayerCardId":322,"idOfCardBeingAttacked":306,"stackEffectType":4}} 

 Player 1 20:29:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":141,"_text":"Response Remove After Resolve DeclareAttack 14"},"childOfId":140} 

 Player 1 20:29:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":142,"_text":"Wait For Response From Player 1 "},"childOfId":140} 

 Player 1 20:29:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:29:02 $ACTION_MASSAGE_REMOVE:  
{"id":142} 

 Player 1 20:29:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":143,"_text":"Wait For Response From Player 2 "},"childOfId":140} 

 Player 1 20:29:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:29:02 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:29:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Troll Bombs"} 

 Player 2 20:29:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Troll Bombs"} 

 Player 2 20:29:02 $SHOW_REACTIONS:  
{"playerId":2,"cardsIds":[322]} 

 Player 2 20:29:05 $NEXT_STACK_ID:  

 Player 2 20:29:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:29:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 

 Player 2 20:29:05 $ADD_TO_STACK:  
{"stackEffect":{"entityId":18,"creatorCardId":322,"itemToPurchaseCardId":142,"playerWhoBuysCardId":322,"cost":10,"stackEffectType":9}} 

 Player 2 20:29:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 

 Player 2 20:29:05 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":18,"creatorCardId":322,"itemToPurchaseCardId":142,"playerWhoBuysCardId":322,"cost":10,"stackEffectType":9}} 

 Player 2 20:29:05 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 20:29:05 $SHOW_STACK_EFFECT:  
{"effectId":18} 

 Player 1 20:29:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:29:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:29:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 

 Player 1 20:29:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 

 Player 2 20:29:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":144,"_text":"Add PurchaseItem 18 "}} 

 Player 2 20:29:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:29:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 

 Player 2 20:29:08 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":18,"creatorCardId":322,"itemToPurchaseCardId":142,"playerWhoBuysCardId":322,"cost":10,"stackEffectType":9}} 

 Player 2 20:29:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":145,"_text":"Response Adding PurchaseItem 18"},"childOfId":144} 

 Player 2 20:29:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":146,"_text":"Wait For Response From Player 2 "},"childOfId":144} 

 Player 2 20:29:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:29:08 $SHOW_REACTIONS:  
{"playerId":2,"cardsIds":[322]} 

 Player 1 20:29:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 

 Player 1 20:29:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 

 Player 2 20:29:18 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[322]} 

 Player 2 20:29:18 $ACTION_MASSAGE_REMOVE:  
{"id":146} 

 Player 2 20:29:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":147,"_text":"Wait For Response From Player 1 "},"childOfId":144} 

 Player 2 20:29:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:29:18 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:29:18 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[314]} 

 Player 1 20:29:18 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:29:18 $ACTION_MASSAGE_REMOVE:  
{"id":147} 

 Player 2 20:29:18 $ACTION_MASSAGE_REMOVE:  
{"id":145} 

 Player 2 20:29:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":148,"_text":"Resolve PurchaseItem 18 "}} 

 Player 2 20:29:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 

 Player 2 20:29:18 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":18,"creatorCardId":322,"itemToPurchaseCardId":142,"playerWhoBuysCardId":322,"cost":10,"stackEffectType":9}} 

 Player 2 20:29:18 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":18} 

 Player 2 20:29:18 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 20:29:18 $SHOW_STACK_EFFECT:  
{"effectId":18} 

 Player 1 20:29:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 

 Player 1 20:29:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 

 Player 2 20:29:21 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":18} 

 Player 2 20:29:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":149,"_text":"Remove After Resolve PurchaseItem 18  "}} 

 Player 2 20:29:21 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:29:21 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":18,"creatorCardId":322,"itemToPurchaseCardId":142,"playerWhoBuysCardId":322,"cost":10,"stackEffectType":9}} 

 Player 2 20:29:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":150,"_text":"Response Remove After Resolve PurchaseItem 18"},"childOfId":149} 

 Player 2 20:29:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":151,"_text":"Wait For Response From Player 1 "},"childOfId":149} 

 Player 2 20:29:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:29:21 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:29:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 

 Player 1 20:29:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 

 Player 1 20:29:21 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[314]} 

 Player 1 20:29:21 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:29:21 $ACTION_MASSAGE_REMOVE:  
{"id":151} 

 Player 2 20:29:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":152,"_text":"Wait For Response From Player 2 "},"childOfId":149} 

 Player 2 20:29:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:29:21 $SHOW_REACTIONS:  
{"playerId":2,"cardsIds":[322]} 

 Player 2 20:30:32 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[322]} 

 Player 2 20:30:32 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 2 20:30:32 $ACTION_MASSAGE_REMOVE:  
{"id":152} 

 Player 2 20:30:32 $ACTION_MASSAGE_REMOVE:  
{"id":150} 

 Player 2 20:30:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":153,"_text":"Stack Was Emptied "}} 

 Player 2 20:30:32 $CLEAR_SE_VIS:  

 Player 2 20:30:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:30:32 $ACTION_MASSAGE_REMOVE:  
{"id":143} 

 Player 1 20:30:32 $ACTION_MASSAGE_REMOVE:  
{"id":141} 

 Player 1 20:30:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":153,"_text":"Stack Was Emptied "}} 

 Player 1 20:30:32 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 20:30:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:30:32 $TURN_PLAYER_DO_STACK_EFFECT:  
{"playerId":2} 

 Player 2 20:30:32 $CLEAR_SE_VIS:  

 Player 2 20:33:13 $NEXT_STACK_ID:  

 Player 2 20:33:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:33:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 20:33:14 $ADD_TO_STACK:  
{"stackEffect":{"entityId":19,"creatorCardId":322,"attackingPlayerCardId":322,"idOfCardBeingAttacked":223,"stackEffectType":4}} 

 Player 2 20:33:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 20:33:14 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":19,"creatorCardId":322,"attackingPlayerCardId":322,"idOfCardBeingAttacked":223,"stackEffectType":4}} 

 Player 2 20:33:14 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 20:33:14 $SHOW_STACK_EFFECT:  
{"effectId":19} 

 Player 1 20:33:14 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:33:14 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:33:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 20:33:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 20:33:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":155,"_text":"Add DeclareAttack 19 "}} 

 Player 2 20:33:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:33:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 20:33:17 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":19,"creatorCardId":322,"attackingPlayerCardId":322,"idOfCardBeingAttacked":223,"stackEffectType":4}} 

 Player 2 20:33:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":156,"_text":"Response Adding DeclareAttack 19"},"childOfId":155} 

 Player 2 20:33:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":157,"_text":"Wait For Response From Player 2 "},"childOfId":155} 

 Player 2 20:33:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:33:17 $SHOW_REACTIONS:  
{"playerId":2,"cardsIds":[322]} 

 Player 1 20:33:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 20:33:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 20:33:20 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[322]} 

 Player 2 20:33:20 $ACTION_MASSAGE_REMOVE:  
{"id":157} 

 Player 2 20:33:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":158,"_text":"Wait For Response From Player 1 "},"childOfId":155} 

 Player 2 20:33:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:33:20 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:33:20 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[314]} 

 Player 1 20:33:20 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:33:20 $ACTION_MASSAGE_REMOVE:  
{"id":158} 

 Player 2 20:33:20 $ACTION_MASSAGE_REMOVE:  
{"id":156} 

 Player 2 20:33:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":159,"_text":"Resolve DeclareAttack 19 "}} 

 Player 2 20:33:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 20:33:20 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":19,"creatorCardId":322,"attackingPlayerCardId":322,"idOfCardBeingAttacked":223,"stackEffectType":4}} 

 Player 2 20:33:20 $DRAW_CARD:  
{"deckType":2} 

 Player 2 20:33:20 $SHOW_CARD_PREVIEW:  
{"cardToShowId":259,"playerId":2} 

 Player 1 20:33:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 20:33:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 20:33:26 $FLIP_CARD:  
{"cardId":259} 

 Player 2 20:33:27 $REGISTER_PASSIVE_ITEM:  
{"cardId":259} 

 Player 2 20:33:27 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":259} 

 Player 2 20:33:27 $NEW_MONSTER_ON_PLACE:  
{"cardId":259,"monsterPlaceId":1} 

 Player 2 20:33:27 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":259,"particleType":5} 

 Player 2 20:33:27 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":322,"scopeIsPlayer":true,"index":15,"originStackId":19},"isAfterActivation":true,"index":15} 

 Player 2 20:33:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 20:33:27 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":19,"creatorCardId":322,"attackingPlayerCardId":322,"idOfCardBeingAttacked":259,"stackEffectType":4}} 

 Player 2 20:33:27 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":19} 

 Player 2 20:33:27 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 20:33:27 $SHOW_STACK_EFFECT:  
{"effectId":19} 

 Player 1 20:33:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 20:33:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 20:33:30 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":19} 

 Player 2 20:33:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":160,"_text":"Remove After Resolve DeclareAttack 19  "}} 

 Player 2 20:33:30 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:33:30 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":19,"creatorCardId":322,"attackingPlayerCardId":322,"idOfCardBeingAttacked":259,"stackEffectType":4}} 

 Player 2 20:33:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":161,"_text":"Response Remove After Resolve DeclareAttack 19"},"childOfId":160} 

 Player 2 20:33:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":162,"_text":"Wait For Response From Player 1 "},"childOfId":160} 

 Player 2 20:33:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:33:30 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:33:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fistula"} 

 Player 1 20:33:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fistula"} 

 Player 1 20:33:30 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[314]} 

 Player 1 20:33:30 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:33:30 $ACTION_MASSAGE_REMOVE:  
{"id":162} 

 Player 2 20:33:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":163,"_text":"Wait For Response From Player 2 "},"childOfId":160} 

 Player 2 20:33:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:33:30 $SHOW_REACTIONS:  
{"playerId":2,"cardsIds":[322]}