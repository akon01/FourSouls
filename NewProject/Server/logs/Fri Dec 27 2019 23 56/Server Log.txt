Start Log 

 Player 1 23:56:54 $MATCH:  

 Player 1 23:56:54 $START_GAME:  

 Player 1 23:56:54 $MOVE_TO_TABLE:  

 Player 2 23:56:54 $MOVE_TO_TABLE:  

 Player 1 23:57:02 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 23:57:02 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 2 23:57:02 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":272,"itemCardId":273} 

 Player 2 23:57:02 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":269}],"result":true,"preventMethod":false,"methodScopeId":268,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 23:57:02 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":268,"itemCardId":269} 

 Player 2 23:57:02 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[52,124,53,77,119,142,125,101,62,140,67,19,20,48,107,121,65,95,45,139,72,111,61,75,51,14,130,108,27,99,100,33,13,55,104,89,102,16,93,60,37,29,84,26,90,105,120,115,83,86,34,28,47,137,113,23,79,74,97,103,56,21,30,76,41,70,59,63,88,49,31,126,11,96,69,110,12,138,42,50,131,141,80,58,114,133,116,17,98,43,134,44,87,112,57,106,122,135,136,129,24,40,38,71,127,132,32,54,15,94,128,123,18,109,22,82,68,64,25,92,7,118,35,78,66,46,36,85,81,73,8,9,10,117,39,143,91]} 

 Player 2 23:57:02 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[239,247,234,220,212,242,228,246,224,250,230,211,254,248,244,243,251,257,221,209,214,232,210,236,207,252,223,255,216,231,253,259,241,245,237,256,235,218,208,229,226,206,240,238,258,227,249,215,233,222,217,219,225,213]} 

 Player 2 23:57:02 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[154,153,155,161,182,150,191,147,157,188,146,158,181,201,159,166,184,163,195,169,187,170,173,200,196,177,167,183,198,189,186,162,151,190,171,203,178,152,160,164,199,192,174,194,197,175,202,156,148,193,180,149,165,185,168,179,172,176]} 

 Player 2 23:57:02 $DRAW_CARD:  
{"deckType":5} 

 Player 2 23:57:02 $FLIP_CARD:  
{"cardId":176} 

 Player 2 23:57:02 $ADD_STORE_CARD:  
{"cardId":176} 

 Player 2 23:57:02 $DRAW_CARD:  
{"deckType":5} 

 Player 2 23:57:02 $FLIP_CARD:  
{"cardId":172} 

 Player 2 23:57:02 $ADD_STORE_CARD:  
{"cardId":172} 

 Player 2 23:57:02 $DRAW_CARD:  
{"deckType":2} 

 Player 2 23:57:02 $FLIP_CARD:  
{"cardId":213} 

 Player 2 23:57:03 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":213} 

 Player 2 23:57:03 $NEW_MONSTER_ON_PLACE:  
{"cardId":213,"monsterPlaceId":1} 

 Player 2 23:57:03 $DRAW_CARD:  
{"deckType":2} 

 Player 2 23:57:03 $FLIP_CARD:  
{"cardId":225} 

 Player 2 23:57:03 $REGISTER_PASSIVE_ITEM:  
{"cardId":225} 

 Player 2 23:57:03 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":225} 

 Player 2 23:57:03 $NEW_MONSTER_ON_PLACE:  
{"cardId":225,"monsterPlaceId":2} 

 Player 2 23:57:03 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 23:57:03 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":272,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 23:57:03 $DRAW_CARD:  
{"deckType":1} 

 Player 2 23:57:03 $MOVE_CARD:  
{"moveIndex":1,"cardId":91,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 23:57:03 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":273}],"result":true,"preventMethod":false,"methodScopeId":272,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 23:57:03 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":91,"flipIfFlipped":false,"playerId":2} 

 Player 2 23:57:03 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":91} 

 Player 2 23:57:03 $FLIP_CARD:  
{"cardId":91} 

 Player 2 23:57:03 $FLIP_CARD:  
{"cardId":91} 

 Player 2 23:57:03 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":91} 

 Player 2 23:57:03 $DRAW_CARD:  
{"deckType":1} 

 Player 2 23:57:03 $MOVE_CARD:  
{"moveIndex":2,"cardId":143,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 23:57:04 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":143,"flipIfFlipped":false,"playerId":2} 

 Player 2 23:57:04 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":143} 

 Player 2 23:57:04 $FLIP_CARD:  
{"cardId":143} 

 Player 2 23:57:04 $FLIP_CARD:  
{"cardId":143} 

 Player 2 23:57:04 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":143} 

 Player 2 23:57:04 $DRAW_CARD:  
{"deckType":1} 

 Player 2 23:57:04 $MOVE_CARD:  
{"moveIndex":3,"cardId":39,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 23:57:04 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":39,"flipIfFlipped":false,"playerId":2} 

 Player 2 23:57:05 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":39} 

 Player 2 23:57:05 $FLIP_CARD:  
{"cardId":39} 

 Player 2 23:57:05 $FLIP_CARD:  
{"cardId":39} 

 Player 2 23:57:05 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":39} 

 Player 2 23:57:05 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 23:57:05 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":268,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 23:57:05 $DRAW_CARD:  
{"deckType":1} 

 Player 2 23:57:05 $MOVE_CARD:  
{"moveIndex":4,"cardId":117,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 23:57:05 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":117,"flipIfFlipped":false,"playerId":2} 

 Player 2 23:57:05 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":117} 

 Player 2 23:57:05 $FLIP_CARD:  
{"cardId":117} 

 Player 2 23:57:05 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":117} 

 Player 2 23:57:05 $DRAW_CARD:  
{"deckType":1} 

 Player 2 23:57:05 $MOVE_CARD:  
{"moveIndex":5,"cardId":10,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 23:57:06 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":10,"flipIfFlipped":false,"playerId":2} 

 Player 2 23:57:06 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":10} 

 Player 2 23:57:06 $FLIP_CARD:  
{"cardId":10} 

 Player 2 23:57:06 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":10} 

 Player 2 23:57:06 $DRAW_CARD:  
{"deckType":1} 

 Player 2 23:57:06 $MOVE_CARD:  
{"moveIndex":6,"cardId":9,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 23:57:06 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":9,"flipIfFlipped":false,"playerId":2} 

 Player 2 23:57:06 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":9} 

 Player 2 23:57:06 $FLIP_CARD:  
{"cardId":9} 

 Player 2 23:57:06 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":9} 

 Player 2 23:57:06 $GAME_HAS_STARTED:  

 Player 2 23:57:06 $SET_TURN:  
{"playerId":2} 

 Player 2 23:57:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:57:06 $NEXT_STACK_ID:  

 Player 2 23:57:06 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:57:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 23:57:06 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":268,"turnPlayerCardId":268,"stackEffectType":13}} 

 Player 2 23:57:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 2 23:57:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:57:07 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 23:57:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 23:57:07 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":268,"turnPlayerCardId":268,"stackEffectType":13}} 

 Player 2 23:57:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 2 23:57:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 2 23:57:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:57:07 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 23:57:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 2 23:57:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:57:07 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:57:07 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:57:07 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:57:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 23:57:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 23:57:07 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:57:07 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 23:57:07 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 23:57:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 2 23:57:07 $DRAW_CARD:  
{"deckType":1} 

 Player 2 23:57:07 $MOVE_CARD:  
{"moveIndex":7,"cardId":8,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 23:57:07 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":8,"flipIfFlipped":false,"playerId":2} 

 Player 2 23:57:07 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":8} 

 Player 2 23:57:08 $FLIP_CARD:  
{"cardId":8} 

 Player 2 23:57:08 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":8} 

 Player 2 23:57:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 23:57:08 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":268,"turnPlayerCardId":268,"stackEffectType":13}} 

 Player 2 23:57:08 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 23:57:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 2 23:57:08 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:57:08 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":268,"turnPlayerCardId":268,"stackEffectType":13}} 

 Player 2 23:57:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 2 23:57:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 2 23:57:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:57:08 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:57:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 23:57:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 23:57:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 23:57:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 23:57:08 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:57:08 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 2 23:57:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 2 23:57:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:57:08 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 2 23:57:08 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 2 23:57:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 2 23:57:08 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:57:08 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 23:57:08 $UPDATE_ACTIONS:  

 Player 2 23:57:10 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 23:57:10 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 23:57:16 $NEXT_STACK_ID:  

 Player 2 23:57:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:57:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated The D6"} 

 Player 2 23:57:16 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":268,"hasLockingStackEffect":false,"itemToPlayCardId":269,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 23:57:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add ActivateItem 2 "}} 

 Player 2 23:57:16 $LOG_ERROR:  
{} 
//////Error From Player 2////
  

 Player 2 23:57:16 $LOG_ERROR:  
//////Error From Player 2////
 {}
////// 

 Player 2 23:57:16 $USE_ITEM:  
{"cardId":269} 

 Player 2 23:57:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:57:16 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 23:57:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated The D6"} 

 Player 2 23:57:16 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":268,"hasLockingStackEffect":false,"itemToPlayCardId":269,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 23:57:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding ActivateItem 2"},"childOfId":10} 

 Player 2 23:57:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 2 23:57:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:57:17 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 2 23:57:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 2 23:57:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:57:17 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:57:17 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:57:17 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:57:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated The D6"} 

 Player 1 23:57:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated The D6"} 

 Player 1 23:57:17 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:57:17 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 2 23:57:17 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 2 23:57:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve ActivateItem 2 "}} 

 Player 2 23:57:17 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":269,"particleType":6} 

 Player 2 23:57:17 $NEXT_STACK_ID:  

 Player 2 23:57:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated The D6"} 

 Player 2 23:57:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated The D6 \n2:Player 2 play 1 Penny(2) "} 

 Player 2 23:57:17 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":268,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":10,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 23:57:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Add PlayLootCardStackEffect 3 "}} 

 Player 2 23:57:18 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":10} 

 Player 1 23:57:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated The D6"} 

 Player 1 23:57:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated The D6"} 

 Player 2 23:57:19 $DISABLE_PARTICLE_EFFECT:  
{"cardId":269,"particleType":6} 

 Player 2 23:57:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated The D6 \n2:Player 2 play 1 Penny(2) "} 

 Player 2 23:57:19 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":268,"hasLockingStackEffect":false,"itemToPlayCardId":269,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 23:57:19 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 23:57:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Remove After Resolve ActivateItem 2  "}} 

 Player 2 23:57:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 1 Penny(2) "} 

 Player 2 23:57:19 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":268,"hasLockingStackEffect":false,"itemToPlayCardId":269,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 23:57:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Response Remove After Resolve ActivateItem 2"},"childOfId":16} 

 Player 2 23:57:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":16} 

 Player 2 23:57:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:57:19 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:57:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated The D6 \n2:Player 2 play 1 Penny(2) "} 

 Player 1 23:57:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated The D6 \n2:Player 2 play 1 Penny(2) "} 

 Player 1 23:57:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated The D6 \n2:Player 2 play 1 Penny(2) "} 

 Player 1 23:57:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated The D6 \n2:Player 2 play 1 Penny(2) "} 

 Player 1 23:57:20 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:57:20 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 2 23:57:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Wait For Response From Player 2 "},"childOfId":16} 

 Player 2 23:57:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:57:20 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 23:57:20 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 23:57:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Resolve PlayLootCardStackEffect 3 "}} 

 Player 2 23:57:20 $LOG_ERROR:  
"error while resolving stack effect 3" 
//////Error From Player 2////
  

 Player 2 23:57:20 $LOG_ERROR:  
//////Error From Player 2////
 "error while resolving stack effect 3"
////// 

 Player 2 23:57:20 $LOG_ERROR:  
{} 
//////Error From Player 2////
  

 Player 2 23:57:20 $LOG_ERROR:  
//////Error From Player 2////
 {}
////// 

 Player 2 23:57:20 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 23:57:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Remove After Resolve PlayLootCardStackEffect 3  "}} 

 Player 2 23:57:20 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:57:20 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":268,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":10,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 23:57:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Response Remove After Resolve PlayLootCardStackEffect 3"},"childOfId":21} 

 Player 2 23:57:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 2 "},"childOfId":21} 

 Player 2 23:57:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:57:20 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 2 23:57:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Wait For Response From Player 1 "},"childOfId":21} 

 Player 2 23:57:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:57:20 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:57:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 1 Penny(2) "} 

 Player 1 23:57:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 1 Penny(2) "} 

 Player 1 23:57:20 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:57:20 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 23:57:20 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 2 23:57:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Stack Was Emptied "}} 

 Player 2 23:57:21 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:57:21 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 23:57:21 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 2 23:57:22 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 23:57:22 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 2 23:57:23 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 2 23:58:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:58:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:58:50 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 2 23:58:50 $END_TURN:  

 Player 2 23:58:50 $SET_TURN:  
{"playerId":1} 

 Player 2 23:58:50 $START_TURN:  
{"playerId":1} 

 Player 1 23:58:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:58:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:58:50 $NEXT_STACK_ID:  

 Player 1 23:58:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:58:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 23:58:50 $ADD_TO_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":272,"turnPlayerCardId":272,"stackEffectType":13}} 

 Player 1 23:58:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 4 "}} 

 Player 1 23:58:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:58:50 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 23:58:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 23:58:50 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":272,"turnPlayerCardId":272,"stackEffectType":13}} 

 Player 1 23:58:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 4"},"childOfId":0} 

 Player 1 23:58:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 1 23:58:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:58:50 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 23:58:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 1 23:58:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 23:58:50 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 23:58:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:58:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:58:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 23:58:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 23:58:50 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 23:58:51 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 23:58:51 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 23:58:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 4 "}} 

 Player 1 23:58:51 $DRAW_CARD:  
{"deckType":1} 

 Player 1 23:58:51 $MOVE_CARD:  
{"moveIndex":8,"cardId":73,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 23:58:51 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":73,"flipIfFlipped":false,"playerId":1} 

 Player 1 23:58:51 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":73} 

 Player 1 23:58:51 $FLIP_CARD:  
{"cardId":73} 

 Player 1 23:58:51 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":73} 

 Player 1 23:58:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 23:58:51 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":272,"turnPlayerCardId":272,"stackEffectType":13}} 

 Player 1 23:58:51 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 23:58:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 4  "}} 

 Player 1 23:58:51 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:58:51 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":272,"turnPlayerCardId":272,"stackEffectType":13}} 

 Player 1 23:58:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 4"},"childOfId":5} 

 Player 1 23:58:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 1 23:58:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 23:58:51 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 23:58:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 23:58:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 23:58:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 23:58:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 23:58:52 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 23:58:52 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 1 23:58:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 1 23:58:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:58:52 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 1 23:58:52 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 1 23:58:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 1 23:58:52 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:58:52 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 23:58:53 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 23:58:54 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 23:58:58 $NEXT_STACK_ID:  

 Player 1 23:58:58 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:58:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Yum Heart"} 

 Player 1 23:58:58 $ADD_TO_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":272,"hasLockingStackEffect":false,"itemToPlayCardId":273,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 23:58:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add ActivateItem 5 "}} 

 Player 2 23:58:58 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:58:58 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:58:59 $NEXT_STACK_ID:  

 Player 1 23:58:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Yum Heart"} 

 Player 1 23:58:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Yum Heart \n2:Player 1 play 3 Cents(1) "} 

 Player 1 23:58:59 $ADD_TO_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":272,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":39,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 23:58:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Add PlayLootCardStackEffect 6 "}} 

 Player 1 23:58:59 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":39} 

 Player 2 23:58:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Yum Heart"} 

 Player 2 23:58:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Yum Heart"} 

 Player 2 23:59:51 $MATCH: 