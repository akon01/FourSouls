"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var ActionComposite_1 = require("./ActionComposite");
var utils_1 = require("../../utils");
var CoreActions_1 = require("./CoreActions");
var factories_1 = require("../factories");
var AutoRun_1 = require("../decorators/AutoRun");
var IocExt_1 = require("../decorators/IocExt");
/**
 * Inject DrawType action.
 *
 * @export
 * @class SetPropAction
 * @extends {ActionComposite}
 */
var AutorunAction = /** @class */ (function (_super) {
    tslib_1.__extends(AutorunAction, _super);
    function AutorunAction() {
        return _super.call(this, CoreActions_1.CoreActions.autorun) || this;
    }
    AutorunAction.prototype.getDecorator = function () {
        return [IocExt_1.IocExt, AutoRun_1.Autorun];
    };
    AutorunAction.prototype.working = function (container, data) {
        if (data.raiseContainer && data.raiseContainer !== container) {
            return;
        }
        if (data.tokenKey && data.targetType) {
            var decorators = this.getDecorator();
            decorators.forEach(function (decorator) {
                if (factories_1.hasClassMetadata(decorator, data.targetType)) {
                    var metas = factories_1.getTypeMetadata(decorator, data.targetType);
                    var meta = metas.find(function (it) { return !!it.autorun; });
                    if (!meta && metas.length) {
                        meta = metas[0];
                    }
                    if (meta) {
                        var instance = container.get(data.tokenKey);
                        if (instance && meta.autorun && utils_1.isFunction(instance[meta.autorun])) {
                            container.syncInvoke(instance, meta.autorun);
                        }
                    }
                }
            });
        }
    };
    AutorunAction.getClassAnnations = function () {
        return { "name": "AutorunAction", "params": { "constructor": [], "getDecorator": [], "working": ["container", "data"] } };
    };
    return AutorunAction;
}(ActionComposite_1.ActionComposite));
exports.AutorunAction = AutorunAction;

//# sourceMappingURL=../../sourcemaps/core/actions/AutorunAction.js.map
