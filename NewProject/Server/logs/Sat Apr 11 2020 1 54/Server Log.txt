Start Log 

 Player 1 01:54:22 $MATCH:  

 Player 2 01:54:24 $START_GAME:  

 Player 2 01:54:24 $MOVE_TO_TABLE:  

 Player 1 01:54:24 $MOVE_TO_TABLE:  

 Player 1 01:54:28 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 01:54:32 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 2 01:54:32 $SET_CHAR:  
{"originPlayerId":2,"playerId":1,"charCardId":309,"itemCardId":310} 

 Player 1 01:54:32 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":309,"itemCardId":310} 

 Player 1 01:54:32 $SET_CHAR_END:  
{"playerId":2} 

 Player 2 01:54:32 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":325,"itemCardId":326} 

 Player 2 01:54:32 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[15,59,99,104,93,21,118,28,111,122,98,95,86,33,25,138,48,92,83,97,124,6,39,11,80,123,125,24,109,114,101,12,47,96,51,137,32,76,19,52,58,132,105,106,73,70,18,54,120,82,53,117,91,62,14,69,107,85,63,84,79,77,29,71,4,102,115,119,45,130,38,17,133,34,44,35,49,46,55,110,65,78,5,67,126,94,103,50,127,116,41,139,74,16,57,31,87,26,113,135,43,10,23,81,42,9,112,66,100,131,88,134,75,128,13,72,30,56,136,61,129,20,37,89,7,36,64,121,8,40,90,108,27,68,22,60]} 

 Player 2 01:54:32 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[256,274,279,228,275,259,224,245,301,252,237,227,287,267,282,290,296,284,300,244,235,291,247,258,240,270,272,264,255,288,251,246,280,292,231,223,297,265,276,222,269,230,305,302,260,248,243,241,286,238,306,278,299,307,225,281,289,303,263,283,262,268,249,226,271,285,236,293,239,261,273,233,253,298,242,295,304,250,257,232,308,294,266,254,277,234,229]} 

 Player 2 01:54:32 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[194,166,146,184,185,147,202,182,206,169,204,201,187,207,161,219,183,209,199,177,190,205,168,178,220,167,197,214,179,150,192,180,155,200,148,145,160,142,195,176,163,218,141,174,156,171,211,175,157,189,170,198,193,213,162,191,153,159,181,186,149,152,212,165,154,203,215,158,196,144,172,151,143,216,208,188,173,210,217,164]} 

 Player 2 01:54:32 $DRAW_CARD:  
{"deckType":5} 

 Player 2 01:54:32 $FLIP_CARD:  
{"cardId":164} 

 Player 2 01:54:32 $ADD_STORE_CARD:  
{"cardId":164} 

 Player 2 01:54:32 $DRAW_CARD:  
{"deckType":5} 

 Player 2 01:54:32 $FLIP_CARD:  
{"cardId":217} 

 Player 2 01:54:32 $ADD_STORE_CARD:  
{"cardId":217} 

 Player 2 01:54:32 $DRAW_CARD:  
{"deckType":2} 

 Player 2 01:54:32 $FLIP_CARD:  
{"cardId":229} 

 Player 2 01:54:32 $REGISTER_PASSIVE_ITEM:  
{"cardId":229} 

 Player 2 01:54:32 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":229} 

 Player 2 01:54:32 $NEW_MONSTER_ON_PLACE:  
{"cardId":229,"monsterPlaceId":1} 

 Player 2 01:54:32 $DRAW_CARD:  
{"deckType":2} 

 Player 2 01:54:32 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":234} 

 Player 2 01:54:32 $DRAW_CARD:  
{"deckType":2} 

 Player 2 01:54:32 $FLIP_CARD:  
{"cardId":277} 

 Player 2 01:54:32 $REGISTER_PASSIVE_ITEM:  
{"cardId":277} 

 Player 2 01:54:32 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":277} 

 Player 2 01:54:32 $NEW_MONSTER_ON_PLACE:  
{"cardId":277,"monsterPlaceId":2} 

 Player 2 01:54:32 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 01:54:32 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":309,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 01:54:32 $DRAW_CARD:  
{"deckType":1} 

 Player 2 01:54:32 $MOVE_CARD:  
{"moveIndex":1,"cardId":60,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 01:54:33 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":60,"flipIfFlipped":false,"playerId":2} 

 Player 2 01:54:33 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":60} 

 Player 2 01:54:33 $FLIP_CARD:  
{"cardId":60} 

 Player 2 01:54:33 $FLIP_CARD:  
{"cardId":60} 

 Player 2 01:54:33 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":60} 

 Player 2 01:54:33 $DRAW_CARD:  
{"deckType":1} 

 Player 2 01:54:33 $MOVE_CARD:  
{"moveIndex":2,"cardId":22,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 01:54:33 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":22,"flipIfFlipped":false,"playerId":2} 

 Player 2 01:54:33 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":22} 

 Player 2 01:54:33 $FLIP_CARD:  
{"cardId":22} 

 Player 2 01:54:33 $FLIP_CARD:  
{"cardId":22} 

 Player 2 01:54:34 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":22} 

 Player 2 01:54:34 $DRAW_CARD:  
{"deckType":1} 

 Player 2 01:54:34 $MOVE_CARD:  
{"moveIndex":3,"cardId":68,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 01:54:34 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":68,"flipIfFlipped":false,"playerId":2} 

 Player 2 01:54:34 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":68} 

 Player 2 01:54:34 $FLIP_CARD:  
{"cardId":68} 

 Player 2 01:54:34 $FLIP_CARD:  
{"cardId":68} 

 Player 2 01:54:34 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":68} 

 Player 2 01:54:34 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 01:54:34 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 01:54:34 $DRAW_CARD:  
{"deckType":1} 

 Player 2 01:54:34 $MOVE_CARD:  
{"moveIndex":4,"cardId":27,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 01:54:34 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":27,"flipIfFlipped":false,"playerId":2} 

 Player 2 01:54:35 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":27} 

 Player 2 01:54:35 $FLIP_CARD:  
{"cardId":27} 

 Player 2 01:54:35 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":27} 

 Player 2 01:54:35 $DRAW_CARD:  
{"deckType":1} 

 Player 2 01:54:35 $MOVE_CARD:  
{"moveIndex":5,"cardId":108,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 01:54:35 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":108,"flipIfFlipped":false,"playerId":2} 

 Player 2 01:54:35 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":108} 

 Player 2 01:54:35 $FLIP_CARD:  
{"cardId":108} 

 Player 2 01:54:35 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":108} 

 Player 2 01:54:35 $DRAW_CARD:  
{"deckType":1} 

 Player 2 01:54:35 $MOVE_CARD:  
{"moveIndex":6,"cardId":90,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 01:54:36 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":90,"flipIfFlipped":false,"playerId":2} 

 Player 2 01:54:36 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":90} 

 Player 2 01:54:36 $FLIP_CARD:  
{"cardId":90} 

 Player 2 01:54:36 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":90} 

 Player 2 01:54:36 $GAME_HAS_STARTED:  

 Player 2 01:54:36 $SET_TURN:  
{"playerId":1} 

 Player 2 01:54:36 $START_TURN:  
{"playerId":1} 

 Player 2 01:54:36 $UPDATE_ACTIONS:  

 Player 1 01:54:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:54:36 $NEXT_STACK_ID:  

 Player 1 01:54:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:54:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 01:54:36 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":309,"turnPlayerCardId":309,"stackEffectType":13}} 

 Player 1 01:54:36 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":309,"turnPlayerCardId":309,"stackEffectType":13}} 

 Player 1 01:54:36 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 01:54:36 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 2 01:54:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:54:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 01:54:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 1 01:54:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:54:39 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":309,"turnPlayerCardId":309,"stackEffectType":13}} 

 Player 1 01:54:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 1 01:54:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 1 01:54:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:54:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 1 01:54:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:54:39 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:54:39 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[325,326]} 

 Player 2 01:54:39 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 01:54:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 1 01:54:39 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":309,"turnPlayerCardId":309,"stackEffectType":13}} 

 Player 1 01:54:39 $DRAW_CARD:  
{"deckType":1} 

 Player 1 01:54:39 $MOVE_CARD:  
{"moveIndex":7,"cardId":40,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.599999904632568,"y":-0.20000000298023224,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 01:54:40 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":40,"flipIfFlipped":false,"playerId":1} 

 Player 1 01:54:40 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":40} 

 Player 1 01:54:40 $FLIP_CARD:  
{"cardId":40} 

 Player 1 01:54:40 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":40} 

 Player 1 01:54:40 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":309,"turnPlayerCardId":309,"stackEffectType":13}} 

 Player 1 01:54:40 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":1} 

 Player 1 01:54:40 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 01:54:40 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 1 01:54:43 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":1} 

 Player 1 01:54:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 1 01:54:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:54:43 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":309,"turnPlayerCardId":309,"stackEffectType":13}} 

 Player 1 01:54:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 1 01:54:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 1 01:54:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:54:43 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:54:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 01:54:43 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[325,326]} 

 Player 2 01:54:43 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 01:54:43 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 1 01:54:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 1 01:54:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:54:43 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 1 01:54:43 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 1 01:54:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 1 01:54:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:54:43 $CLEAR_SE_VIS:  

 Player 1 01:55:08 $NEXT_STACK_ID:  

 Player 1 01:55:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(3) "} 

 Player 1 01:55:09 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":309,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":60,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 01:55:09 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":309,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":60,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 01:55:09 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 01:55:09 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 2 01:55:09 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:55:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(3) "} 

 Player 1 01:55:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add PlayLootCardStackEffect 2 "}} 

 Player 1 01:55:12 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":60} 

 Player 1 01:55:12 $MOVE_CARD:  
{"moveIndex":8,"cardId":60,"placeID":327,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 01:55:12 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":60,"flipIfFlipped":true,"playerId":1} 

 Player 1 01:55:12 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":60} 

 Player 1 01:55:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(3): addMoney"} 

 Player 1 01:55:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:55:12 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":309,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":60,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":60,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 01:55:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding PlayLootCardStackEffect 2"},"childOfId":10} 

 Player 1 01:55:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 1 01:55:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:55:12 $SHOW_REACTIONS:  
{"playerId":1,"cardsIds":[309,310]} 

 Player 2 01:55:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(3) "} 

 Player 1 01:55:31 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[309,310]} 

 Player 1 01:55:31 $NEXT_STACK_ID:  

 Player 1 01:55:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(3): addMoney"} 

 Player 1 01:55:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(3): addMoney \n2:Player 1 activated Azazel"} 

 Player 1 01:55:31 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":309,"hasLockingStackEffect":false,"itemToPlayCardId":309,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 01:55:31 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":309,"hasLockingStackEffect":false,"itemToPlayCardId":309,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 01:55:31 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 01:55:31 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 2 01:55:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(3) "} 

 Player 2 01:55:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(3)  \n2:Player 1 activated Azazel"} 

 Player 1 01:55:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Add ActivateItem 3 "}} 

 Player 1 01:55:38 $SHOW_DECISION:  
{"startCardId":309,"endCardId":68,"flipEndCard":true} 

 Player 1 01:55:41 $USE_ITEM:  
{"cardId":309} 

 Player 1 01:55:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:55:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(3): addMoney \n2:Player 1 activated Azazel"} 

 Player 1 01:55:41 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":309,"hasLockingStackEffect":false,"itemToPlayCardId":309,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 01:55:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Response Adding ActivateItem 3"},"childOfId":13} 

 Player 1 01:55:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Wait For Response From Player 1 "},"childOfId":13} 

 Player 1 01:55:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:55:42 $SHOW_REACTIONS:  
{"playerId":1,"cardsIds":[310]} 

 Player 2 01:55:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(3)  \n2:Player 1 activated Azazel"} 

 Player 1 01:55:44 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[310]} 

 Player 1 01:55:44 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[310]} 

 Player 1 01:55:44 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 01:55:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Wait For Response From Player 2 "},"childOfId":13} 

 Player 1 01:55:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:55:44 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:55:44 $SHOW_REACTIONS:  
{"playerId":2,"cardsIds":[325,326]} 

 Player 2 01:55:46 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":true} 

 Player 2 01:55:46 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[325,326]} 

 Player 2 01:55:46 $NEXT_STACK_ID:  

 Player 2 01:55:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(3)  \n2:Player 1 activated Azazel \n3:Player 2 activated The Lost"} 

 Player 2 01:55:46 $ADD_TO_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":325,"hasLockingStackEffect":false,"itemToPlayCardId":325,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 01:55:46 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":325,"hasLockingStackEffect":false,"itemToPlayCardId":325,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 01:55:46 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 01:55:46 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 1 01:55:46 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 1 01:55:46 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 01:55:46 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 1 01:55:46 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 1 01:55:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(3): addMoney \n2:Player 1 activated Azazel"} 

 Player 1 01:55:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(3): addMoney \n2:Player 1 activated Azazel \n3:Player 2 activated The Lost"} 

 Player 2 01:55:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Add ActivateItem 4 "}} 

 Player 2 01:55:51 $SHOW_DECISION:  
{"startCardId":325,"endCardId":27,"flipEndCard":true} 

 Player 2 01:55:51 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[325,326]} 

 Player 2 01:55:51 $RESPOND_TO:  
{"playerId":-1,"stackEffectResponse":false} 

 Player 2 01:55:54 $USE_ITEM:  
{"cardId":325} 

 Player 2 01:55:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 01:55:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(3)  \n2:Player 1 activated Azazel \n3:Player 2 activated The Lost"} 

 Player 2 01:55:54 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":325,"hasLockingStackEffect":false,"itemToPlayCardId":325,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 01:55:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Response Adding ActivateItem 4"},"childOfId":17} 

 Player 2 01:55:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Wait For Response From Player 1 "},"childOfId":17} 

 Player 2 01:55:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 01:55:54 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 01:55:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(3): addMoney \n2:Player 1 activated Azazel \n3:Player 2 activated The Lost"} 

 Player 1 01:55:54 $SHOW_REACTIONS:  
{"playerId":1,"cardsIds":[310]} 

 Player 1 01:55:57 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[310]} 

 Player 1 01:55:58 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 01:55:58 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 01:55:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Wait For Response From Player 2 "},"childOfId":17} 

 Player 2 01:55:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:55:58 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 01:55:58 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 2 01:55:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Resolve ActivateItem 4 "}} 

 Player 2 01:55:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(3)  \n2:Player 1 activated Azazel \n3:Player 2 activated The Lost"} 

 Player 2 01:55:58 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":325,"hasLockingStackEffect":false,"itemToPlayCardId":325,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 01:55:58 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":325,"particleType":6} 

 Player 1 01:55:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(3): addMoney \n2:Player 1 activated Azazel \n3:Player 2 activated The Lost"} 

 Player 2 01:56:00 $DISABLE_PARTICLE_EFFECT:  
{"cardId":325,"particleType":6} 

 Player 2 01:56:00 $NEXT_STACK_ID:  

 Player 2 01:56:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(3)  \n2:Player 1 activated Azazel \n3:Player 2 activated The Lost"} 

 Player 2 01:56:00 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":27} 

 Player 2 01:56:00 $MOVE_CARD:  
{"moveIndex":9,"cardId":27,"placeID":327,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 01:56:00 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":27,"flipIfFlipped":true,"playerId":2} 

 Player 2 01:56:00 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":27} 

 Player 2 01:56:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(3)  \n2:Player 1 activated Azazel \n3:Player 2 play 2 Cents(10): addMoney \n4:Player 2 activated The Lost"} 

 Player 2 01:56:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 01:56:00 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":325,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":27,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":27,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 01:56:00 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 01:56:00 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 1 01:56:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(3): addMoney \n2:Player 1 activated Azazel \n3:Player 2 activated The Lost"} 

 Player 2 01:56:03 $CLEAR_SE_VIS:  

 Player 2 01:56:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(3)  \n2:Player 1 activated Azazel \n3:Player 2 play 2 Cents(10): addMoney \n4:Player 2 activated The Lost"} 

 Player 2 01:56:03 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":309,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":60,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":60,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 01:56:03 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":309,"hasLockingStackEffect":false,"itemToPlayCardId":309,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 01:56:03 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":325,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":27,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":27,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 01:56:03 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":325,"hasLockingStackEffect":false,"itemToPlayCardId":325,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 01:56:03 $REPLACE_STACK:  
{"currentStack":[{"entityId":2,"creatorCardId":309,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":60,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":60,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":3,"creatorCardId":309,"hasLockingStackEffect":false,"itemToPlayCardId":309,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1},{"entityId":5,"creatorCardId":325,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":27,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":27,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":4,"creatorCardId":325,"hasLockingStackEffect":false,"itemToPlayCardId":325,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 

 Player 2 01:56:03 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ACTIVATE_ITEM","args":[{"type":0,"number":325}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 01:56:03 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":325,"hasLockingStackEffect":false,"itemToPlayCardId":325,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 01:56:03 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":4} 

 Player 2 01:56:03 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 01:56:03 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 1 01:56:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(3): addMoney \n2:Player 1 activated Azazel \n3:Player 2 activated The Lost"} 

 Player 1 01:56:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(3)  \n2:Player 1 activated Azazel \n3:Player 2 play 2 Cents(10)  \n4:Player 2 activated The Lost"} 

 Player 2 01:56:06 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":4} 

 Player 2 01:56:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Remove After Resolve ActivateItem 4  "}} 

 Player 2 01:56:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(3)  \n2:Player 1 activated Azazel \n3:Player 2 play 2 Cents(10): addMoney"} 

 Player 2 01:56:06 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":325,"hasLockingStackEffect":false,"itemToPlayCardId":325,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 01:56:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Response Remove After Resolve ActivateItem 4"},"childOfId":22} 

 Player 2 01:56:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Wait For Response From Player 1 "},"childOfId":22} 

 Player 2 01:56:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 01:56:06 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 01:56:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(3)  \n2:Player 1 activated Azazel \n3:Player 2 play 2 Cents(10)  \n4:Player 2 activated The Lost"} 

 Player 1 01:56:06 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[310]} 

 Player 1 01:56:06 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 01:56:06 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 01:56:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Wait For Response From Player 2 "},"childOfId":22} 

 Player 2 01:56:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:56:06 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 01:56:07 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 2 01:56:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Resolve PlayLootCardStackEffect 5 "}} 

 Player 2 01:56:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(3)  \n2:Player 1 activated Azazel \n3:Player 2 play 2 Cents(10): addMoney"} 

 Player 2 01:56:07 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":325,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":27,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":27,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 01:56:07 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":27,"particleType":6} 

 Player 1 01:56:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(3)  \n2:Player 1 activated Azazel \n3:Player 2 play 2 Cents(10) "} 

 Player 2 01:56:08 $DISABLE_PARTICLE_EFFECT:  
{"cardId":27,"particleType":6} 

 Player 2 01:56:08 $SET_MONEY:  
{"playerId":2,"numOfCoins":5} 

 Player 2 01:56:08 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":2}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 2 01:56:09 $REMOVE_FROM_PILE:  
{"cardId":27} 

 Player 2 01:56:09 $MOVE_CARD:  
{"moveIndex":10,"cardId":27,"placeID":328,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 01:56:09 $MOVE_CARD_END:  
{"moveIndex":10,"cardId":27,"flipIfFlipped":true,"playerId":2} 

 Player 2 01:56:09 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":27} 

 Player 2 01:56:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(3)  \n2:Player 1 activated Azazel \n3:Player 2 play 2 Cents(10): addMoney"} 

 Player 2 01:56:09 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":325,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":27,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 01:56:09 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":5} 

 Player 2 01:56:09 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 01:56:09 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 1 01:56:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(3)  \n2:Player 1 activated Azazel \n3:Player 2 play 2 Cents(10) "} 

 Player 2 01:56:12 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":5} 

 Player 2 01:56:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Remove After Resolve PlayLootCardStackEffect 5  "}} 

 Player 2 01:56:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(3)  \n2:Player 1 activated Azazel"} 

 Player 2 01:56:12 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":325,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":27,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 01:56:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Response Remove After Resolve PlayLootCardStackEffect 5"},"childOfId":27} 

 Player 2 01:56:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Wait For Response From Player 2 "},"childOfId":27} 

 Player 2 01:56:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:56:12 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 01:56:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Wait For Response From Player 1 "},"childOfId":27} 

 Player 2 01:56:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 01:56:12 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 01:56:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(3)  \n2:Player 1 activated Azazel \n3:Player 2 play 2 Cents(10) "} 

 Player 1 01:56:12 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[310]} 

 Player 1 01:56:12 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 01:56:12 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 01:56:12 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 2 01:56:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Resolve ActivateItem 3 "}} 

 Player 2 01:56:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(3)  \n2:Player 1 activated Azazel"} 

 Player 2 01:56:12 $DO_STACK_EFFECT:  
{"originPlayerId":2,"playerId":1,"currentStack":[{"entityId":2,"creatorCardId":309,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":60,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":60,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":3,"creatorCardId":309,"hasLockingStackEffect":false,"itemToPlayCardId":309,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 

 Player 1 01:56:13 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":309,"particleType":6} 

 Player 1 01:56:15 $DISABLE_PARTICLE_EFFECT:  
{"cardId":309,"particleType":6} 

 Player 1 01:56:15 $NEXT_STACK_ID:  

 Player 1 01:56:15 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":68} 

 Player 1 01:56:15 $MOVE_CARD:  
{"moveIndex":11,"cardId":68,"placeID":327,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 01:56:15 $MOVE_CARD_END:  
{"moveIndex":11,"cardId":68,"flipIfFlipped":true,"playerId":1} 

 Player 1 01:56:15 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":68} 

 Player 1 01:56:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(3)  \n2:Player 1 play 4 Cents(11): addMoney \n3:Player 1 activated Azazel"} 

 Player 1 01:56:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:56:15 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":309,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":68,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":68,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 01:56:15 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 01:56:15 $SHOW_STACK_EFFECT:  
{"effectId":6} 

 Player 2 01:56:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(3)  \n2:Player 1 activated Azazel"} 

 Player 1 01:56:18 $CLEAR_SE_VIS:  

 Player 1 01:56:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(3)  \n2:Player 1 play 4 Cents(11): addMoney \n3:Player 1 activated Azazel"} 

 Player 1 01:56:18 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":309,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":60,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":60,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 01:56:18 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":309,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":68,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":68,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 01:56:18 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":309,"hasLockingStackEffect":false,"itemToPlayCardId":309,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 01:56:18 $REPLACE_STACK:  
{"currentStack":[{"entityId":2,"creatorCardId":309,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":60,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":60,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":6,"creatorCardId":309,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":68,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":68,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":3,"creatorCardId":309,"hasLockingStackEffect":false,"itemToPlayCardId":309,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 

 Player 1 01:56:18 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ACTIVATE_ITEM","args":[{"type":0,"number":309}],"result":null,"preventMethod":false,"methodScopeId":309,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 01:56:18 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":309,"hasLockingStackEffect":false,"itemToPlayCardId":309,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 01:56:18 $FINISH_DO_STACK_EFFECT:  
{"playerId":2,"newStack":[{"entityId":2,"creatorCardId":309,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":60,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":60,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":6,"creatorCardId":309,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":68,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":68,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":3,"creatorCardId":309,"hasLockingStackEffect":false,"itemToPlayCardId":309,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 

 Player 2 01:56:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(3)  \n2:Player 1 activated Azazel"} 

 Player 2 01:56:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(3)  \n2:Player 1 play 4 Cents(11)  \n3:Player 1 activated Azazel"} 

 Player 2 01:56:19 $CLEAR_SE_VIS:  

 Player 2 01:56:19 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":309,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":60,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":60,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 01:56:19 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":309,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":68,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":68,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 01:56:19 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":309,"hasLockingStackEffect":false,"itemToPlayCardId":309,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 01:56:19 $REPLACE_STACK:  
{"currentStack":[{"entityId":2,"creatorCardId":309,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":60,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":60,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":6,"creatorCardId":309,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":68,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":68,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":3,"creatorCardId":309,"hasLockingStackEffect":false,"itemToPlayCardId":309,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 

 Player 2 01:56:19 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 01:56:19 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 1 01:56:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(3)  \n2:Player 1 play 4 Cents(11): addMoney \n3:Player 1 activated Azazel"} 

 Player 2 01:56:21 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":3} 

 Player 2 01:56:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Remove After Resolve ActivateItem 3  "}} 

 Player 2 01:56:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(3)  \n2:Player 1 play 4 Cents(11) "} 

 Player 2 01:56:22 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":309,"hasLockingStackEffect":false,"itemToPlayCardId":309,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 01:56:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Response Remove After Resolve ActivateItem 3"},"childOfId":32} 

 Player 2 01:56:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Wait For Response From Player 1 "},"childOfId":32} 

 Player 2 01:56:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 01:56:22 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 01:56:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(3)  \n2:Player 1 play 4 Cents(11)  \n3:Player 1 activated Azazel"} 

 Player 1 01:56:22 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[310]} 

 Player 1 01:56:22 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 01:56:22 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 01:56:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Wait For Response From Player 2 "},"childOfId":32} 

 Player 2 01:56:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:56:22 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 01:56:22 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 2 01:56:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Resolve PlayLootCardStackEffect 6 "}} 

 Player 2 01:56:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(3)  \n2:Player 1 play 4 Cents(11) "} 

 Player 2 01:56:22 $DO_STACK_EFFECT:  
{"originPlayerId":2,"playerId":1,"currentStack":[{"entityId":2,"creatorCardId":309,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":60,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":60,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":6,"creatorCardId":309,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":68,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":68,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}]} 

 Player 1 01:56:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(3)  \n2:Player 1 play 4 Cents(11): addMoney"} 

 Player 1 01:56:22 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":68,"particleType":6} 

 Player 1 01:56:24 $DISABLE_PARTICLE_EFFECT:  
{"cardId":68,"particleType":6} 

 Player 1 01:56:24 $SET_MONEY:  
{"playerId":1,"numOfCoins":7} 

 Player 1 01:56:24 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":309,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 1 01:56:24 $REMOVE_FROM_PILE:  
{"cardId":68} 

 Player 1 01:56:24 $MOVE_CARD:  
{"moveIndex":12,"cardId":68,"placeID":328,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 01:56:25 $MOVE_CARD_END:  
{"moveIndex":12,"cardId":68,"flipIfFlipped":true,"playerId":1} 

 Player 1 01:56:25 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":68} 

 Player 1 01:56:25 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":309,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":68,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 01:56:25 $FINISH_DO_STACK_EFFECT:  
{"playerId":2,"newStack":[{"entityId":2,"creatorCardId":309,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":60,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":60,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":6,"creatorCardId":309,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":68,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}]} 

 Player 2 01:56:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(3)  \n2:Player 1 play 4 Cents(11) "} 

 Player 2 01:56:25 $CLEAR_SE_VIS:  

 Player 2 01:56:25 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":309,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":60,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":60,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 01:56:25 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":309,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":68,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 01:56:25 $REPLACE_STACK:  
{"currentStack":[{"entityId":2,"creatorCardId":309,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":60,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":60,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":6,"creatorCardId":309,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":68,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}]} 

 Player 2 01:56:25 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 01:56:25 $SHOW_STACK_EFFECT:  
{"effectId":6} 

 Player 1 01:56:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(3)  \n2:Player 1 play 4 Cents(11): addMoney"} 

 Player 2 01:56:28 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":6} 

 Player 2 01:56:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Remove After Resolve PlayLootCardStackEffect 6  "}} 

 Player 2 01:56:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(3) "} 

 Player 2 01:56:28 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":309,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":68,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 01:56:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Response Remove After Resolve PlayLootCardStackEffect 6"},"childOfId":37} 

 Player 2 01:56:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Wait For Response From Player 2 "},"childOfId":37} 

 Player 2 01:56:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:56:28 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 01:56:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Wait For Response From Player 1 "},"childOfId":37} 

 Player 2 01:56:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 01:56:28 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 01:56:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(3)  \n2:Player 1 play 4 Cents(11) "} 

 Player 1 01:56:28 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[310]} 

 Player 1 01:56:28 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 01:56:28 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 01:56:28 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 2 01:56:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Resolve PlayLootCardStackEffect 2 "}} 

 Player 2 01:56:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(3) "} 

 Player 2 01:56:28 $DO_STACK_EFFECT:  
{"originPlayerId":2,"playerId":1,"currentStack":[{"entityId":2,"creatorCardId":309,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":60,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":60,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}]} 

 Player 1 01:56:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(3): addMoney"} 

 Player 1 01:56:28 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":60,"particleType":6} 

 Player 1 01:56:30 $DISABLE_PARTICLE_EFFECT:  
{"cardId":60,"particleType":6} 

 Player 1 01:56:30 $SET_MONEY:  
{"playerId":1,"numOfCoins":11} 

 Player 1 01:56:30 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":309,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 1 01:56:30 $REMOVE_FROM_PILE:  
{"cardId":60} 

 Player 1 01:56:30 $MOVE_CARD:  
{"moveIndex":13,"cardId":60,"placeID":328,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 01:56:31 $MOVE_CARD_END:  
{"moveIndex":13,"cardId":60,"flipIfFlipped":true,"playerId":1} 

 Player 1 01:56:31 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":60} 

 Player 1 01:56:31 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":309,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":60,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 01:56:31 $FINISH_DO_STACK_EFFECT:  
{"playerId":2,"newStack":[{"entityId":2,"creatorCardId":309,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":60,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}]} 

 Player 2 01:56:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(3) "} 

 Player 2 01:56:31 $CLEAR_SE_VIS:  

 Player 2 01:56:31 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":309,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":60,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 01:56:31 $REPLACE_STACK:  
{"currentStack":[{"entityId":2,"creatorCardId":309,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":60,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}]} 

 Player 2 01:56:31 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 01:56:31 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 1 01:56:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(3): addMoney"} 

 Player 2 01:56:34 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":2} 

 Player 2 01:56:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Remove After Resolve PlayLootCardStackEffect 2  "}} 

 Player 2 01:56:34 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:56:34 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":309,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":60,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 01:56:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Response Remove After Resolve PlayLootCardStackEffect 2"},"childOfId":42} 

 Player 2 01:56:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Wait For Response From Player 1 "},"childOfId":42} 

 Player 2 01:56:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 01:56:34 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 01:56:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(3) "} 

 Player 1 01:56:34 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[310]} 

 Player 1 01:56:34 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 01:56:34 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 01:56:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Wait For Response From Player 2 "},"childOfId":42} 

 Player 2 01:56:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:56:35 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 2 01:56:35 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 2 01:56:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Stack Was Emptied "}} 

 Player 2 01:56:35 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:56:35 $TURN_PLAYER_DO_STACK_EFFECT:  
{"playerId":1} 

 Player 2 01:56:35 $STACK_EMPTIED:  
{"playerId":1} 

 Player 1 01:56:35 $CLEAR_SE_VIS:  

 Player 1 01:56:52 $NEXT_STACK_ID:  

 Player 1 01:56:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Fanny Pack for 10"} 

 Player 1 01:56:52 $ADD_TO_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":309,"itemToPurchaseCardId":164,"playerWhoBuysCardId":309,"cost":10,"stackEffectType":9}} 

 Player 1 01:56:52 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":309,"itemToPurchaseCardId":164,"playerWhoBuysCardId":309,"cost":10,"stackEffectType":9}} 

 Player 1 01:56:52 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 01:56:52 $SHOW_STACK_EFFECT:  
{"effectId":7} 

 Player 2 01:56:52 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:56:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Fanny Pack for 10"} 

 Player 1 01:56:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Add PurchaseItem 7 "}} 

 Player 1 01:56:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:56:55 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":309,"itemToPurchaseCardId":164,"playerWhoBuysCardId":309,"cost":10,"stackEffectType":9}} 

 Player 1 01:56:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Response Adding PurchaseItem 7"},"childOfId":47} 

 Player 1 01:56:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Wait For Response From Player 1 "},"childOfId":47} 

 Player 1 01:56:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:56:55 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 1 01:56:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Wait For Response From Player 2 "},"childOfId":47} 

 Player 1 01:56:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:56:55 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:56:55 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[326]} 

 Player 2 01:56:55 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 01:56:55 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 1 01:56:55 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 1 01:56:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Resolve PurchaseItem 7 "}} 

 Player 1 01:56:55 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":309,"itemToPurchaseCardId":164,"playerWhoBuysCardId":309,"cost":10,"stackEffectType":9}} 

 Player 1 01:56:55 $SET_MONEY:  
{"playerId":1,"numOfCoins":1} 

 Player 1 01:56:55 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-10}],"result":null,"preventMethod":false,"methodScopeId":309,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 1 01:56:55 $REMOVE_ITEM_FROM_SHOP:  
{"cardId":164} 

 Player 1 01:56:55 $NEXT_STACK_ID:  

 Player 1 01:56:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:56:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Fanny Pack for 10 \n2:Refill Store slot"} 

 Player 1 01:56:55 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":309,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 1 01:56:55 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 01:56:55 $SHOW_STACK_EFFECT:  
{"effectId":8} 

 Player 2 01:56:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Fanny Pack for 10"} 

 Player 1 01:56:58 $CLEAR_SE_VIS:  

 Player 1 01:56:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Fanny Pack for 10 \n2:Refill Store slot"} 

 Player 1 01:56:58 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":309,"itemToPurchaseCardId":164,"playerWhoBuysCardId":309,"cost":10,"stackEffectType":9}} 

 Player 1 01:56:58 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":309,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 1 01:56:58 $REPLACE_STACK:  
{"currentStack":[{"entityId":7,"creatorCardId":309,"itemToPurchaseCardId":164,"playerWhoBuysCardId":309,"cost":10,"stackEffectType":9},{"entityId":8,"creatorCardId":309,"slotType":5,"slotToFillId":0,"stackEffectType":10}]} 

 Player 1 01:56:58 $REGISTER_PASSIVE_ITEM:  
{"cardId":164} 

 Player 1 01:56:58 $MOVE_CARD:  
{"moveIndex":14,"cardId":164,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 

 Player 2 01:56:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Fanny Pack for 10"} 

 Player 2 01:56:59 $MOVE_CARD_END:  
{"moveIndex":14,"cardId":164,"flipIfFlipped":true,"playerId":1} 

 Player 1 01:56:59 $ADD_AN_ITEM:  
{"playerId":1,"cardId":164,"isReward":false} 

 Player 1 01:56:59 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":164}],"result":true,"preventMethod":false,"methodScopeId":309,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 1 01:56:59 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_BUY_ITEM","args":[{"type":2,"number":-10},{"type":0,"number":164}],"result":null,"preventMethod":false,"methodScopeId":309,"scopeIsPlayer":true,"index":6,"originStackId":7},"isAfterActivation":true,"index":6} 

 Player 1 01:56:59 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":7} 

 Player 1 01:56:59 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 01:56:59 $SHOW_STACK_EFFECT:  
{"effectId":7} 

 Player 1 01:57:02 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":7} 

 Player 1 01:57:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Remove After Resolve PurchaseItem 7  "}} 

 Player 1 01:57:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 01:57:02 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":309,"itemToPurchaseCardId":164,"playerWhoBuysCardId":309,"cost":10,"stackEffectType":9}} 

 Player 1 01:57:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Response Remove After Resolve PurchaseItem 7"},"childOfId":52} 

 Player 1 01:57:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Wait For Response From Player 1 "},"childOfId":52} 

 Player 1 01:57:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:57:02 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 1 01:57:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Wait For Response From Player 2 "},"childOfId":52} 

 Player 1 01:57:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:57:02 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:57:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Fanny Pack for 10 \n2:Refill Store slot"} 

 Player 2 01:57:02 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[326]} 

 Player 2 01:57:02 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 01:57:02 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 1 01:57:02 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 1 01:57:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":56,"_text":"Resolve RefillEmptySlot 8 "}} 

 Player 1 01:57:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 01:57:02 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":309,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 1 01:57:02 $DRAW_CARD:  
{"deckType":5} 

 Player 1 01:57:02 $FLIP_CARD:  
{"cardId":210} 

 Player 1 01:57:02 $ADD_STORE_CARD:  
{"cardId":210} 

 Player 1 01:57:03 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":8} 

 Player 1 01:57:03 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 01:57:03 $SHOW_STACK_EFFECT:  
{"effectId":8} 

 Player 2 01:57:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Fanny Pack for 10"} 

 Player 1 01:57:05 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":8} 

 Player 1 01:57:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":57,"_text":"Remove After Resolve RefillEmptySlot 8  "}} 

 Player 1 01:57:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:57:05 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":8,"creatorCardId":309,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 1 01:57:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":58,"_text":"Response Remove After Resolve RefillEmptySlot 8"},"childOfId":57} 

 Player 1 01:57:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":59,"_text":"Wait For Response From Player 2 "},"childOfId":57} 

 Player 1 01:57:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:57:06 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:57:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Fanny Pack for 10"} 

 Player 2 01:57:06 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[326]} 

 Player 2 01:57:06 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 01:57:06 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 1 01:57:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":60,"_text":"Wait For Response From Player 1 "},"childOfId":57} 

 Player 1 01:57:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:57:06 $ACTION_MASSAGE_REMOVE:  
{"id":60} 

 Player 1 01:57:06 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 1 01:57:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":61,"_text":"Stack Was Emptied "}} 

 Player 1 01:57:06 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:57:06 $CLEAR_SE_VIS:  

 Player 1 01:57:26 $NEXT_STACK_ID:  

 Player 1 01:57:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Hopper"} 

 Player 1 01:57:26 $ADD_TO_STACK:  
{"stackEffect":{"entityId":9,"creatorCardId":309,"attackingPlayerCardId":309,"idOfCardBeingAttacked":277,"stackEffectType":4}} 

 Player 1 01:57:26 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":309,"attackingPlayerCardId":309,"idOfCardBeingAttacked":277,"stackEffectType":4}} 

 Player 1 01:57:26 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 01:57:26 $SHOW_STACK_EFFECT:  
{"effectId":9} 

 Player 2 01:57:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Fanny Pack for 10"} 

 Player 2 01:57:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Fanny Pack for 10 \n2:Player 1  declared attack on Hopper"} 

 Player 1 01:57:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":62,"_text":"Add DeclareAttack 9 "}} 

 Player 1 01:57:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:57:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Hopper"} 

 Player 1 01:57:29 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":309,"attackingPlayerCardId":309,"idOfCardBeingAttacked":277,"stackEffectType":4}} 

 Player 1 01:57:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":63,"_text":"Response Adding DeclareAttack 9"},"childOfId":62} 

 Player 1 01:57:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":64,"_text":"Wait For Response From Player 1 "},"childOfId":62} 

 Player 1 01:57:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:57:29 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 1 01:57:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":65,"_text":"Wait For Response From Player 2 "},"childOfId":62} 

 Player 1 01:57:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:57:29 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:57:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Fanny Pack for 10 \n2:Player 1  declared attack on Hopper"} 

 Player 2 01:57:29 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[326]} 

 Player 2 01:57:29 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 01:57:30 $ACTION_MASSAGE_REMOVE:  
{"id":65} 

 Player 1 01:57:30 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 1 01:57:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":66,"_text":"Resolve DeclareAttack 9 "}} 

 Player 1 01:57:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Hopper"} 

 Player 1 01:57:30 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":309,"attackingPlayerCardId":309,"idOfCardBeingAttacked":277,"stackEffectType":4}} 

 Player 1 01:57:30 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":277,"particleType":5} 

 Player 1 01:57:30 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":309,"scopeIsPlayer":true,"index":7,"originStackId":9},"isAfterActivation":true,"index":7} 

 Player 1 01:57:30 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":309,"attackingPlayerCardId":309,"idOfCardBeingAttacked":277,"stackEffectType":4}} 

 Player 1 01:57:30 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":9} 

 Player 1 01:57:30 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 01:57:30 $SHOW_STACK_EFFECT:  
{"effectId":9} 

 Player 2 01:57:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Fanny Pack for 10 \n2:Player 1  declared attack on Hopper"} 

 Player 1 01:57:33 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":9} 

 Player 1 01:57:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":67,"_text":"Remove After Resolve DeclareAttack 9  "}} 

 Player 1 01:57:33 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:57:33 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":9,"creatorCardId":309,"attackingPlayerCardId":309,"idOfCardBeingAttacked":277,"stackEffectType":4}} 

 Player 1 01:57:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":68,"_text":"Response Remove After Resolve DeclareAttack 9"},"childOfId":67} 

 Player 1 01:57:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":69,"_text":"Wait For Response From Player 2 "},"childOfId":67} 

 Player 1 01:57:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:57:33 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:57:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Fanny Pack for 10 \n2:Player 1  declared attack on Hopper"} 

 Player 2 01:57:33 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[326]} 

 Player 2 01:57:33 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 01:57:33 $ACTION_MASSAGE_REMOVE:  
{"id":69} 

 Player 1 01:57:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":70,"_text":"Wait For Response From Player 1 "},"childOfId":67} 

 Player 1 01:57:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:57:33 $ACTION_MASSAGE_REMOVE:  
{"id":70} 

 Player 1 01:57:33 $ACTION_MASSAGE_REMOVE:  
{"id":68} 

 Player 1 01:57:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":71,"_text":"Stack Was Emptied "}} 

 Player 1 01:57:33 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:57:33 $CLEAR_SE_VIS:  

 Player 1 01:57:35 $NEXT_STACK_ID:  

 Player 1 01:57:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Hopper<Monster>"} 

 Player 1 01:57:35 $ADD_TO_STACK:  
{"stackEffect":{"entityId":10,"creatorCardId":309,"rollingPlayerCardId":309,"stackEffectType":2,"attackedMonsterCardId":277}} 

 Player 1 01:57:35 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":309,"rollingPlayerCardId":309,"stackEffectType":2,"attackedMonsterCardId":277}} 

 Player 1 01:57:35 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 01:57:35 $SHOW_STACK_EFFECT:  
{"effectId":10} 

 Player 2 01:57:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Fanny Pack for 10"} 

 Player 2 01:57:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Fanny Pack for 10 \n2:Player 1 is rolling against Hopper<Monster>"} 

 Player 1 01:57:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":72,"_text":"Add AttackRoll 10 "}} 

 Player 1 01:57:38 $ROLL_DICE:  
{"playerId":1} 

 Player 1 01:57:39 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":2} 

 Player 1 01:57:39 $UPDATE_STACK_VIS:  
{"stackId":10,"text":"player rolled 2 vs Hopper<Monster>"} 

 Player 1 01:57:39 $SHOW_DICE_ROLL:  
{"stackId":10} 

 Player 1 01:57:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Hopper<Monster>"} 

 Player 1 01:57:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:57:42 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":309,"numberRolled":2,"rollingPlayerCardId":309,"stackEffectType":2,"attackedMonsterCardId":277}} 

 Player 1 01:57:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":73,"_text":"Response Adding AttackRoll 10"},"childOfId":72} 

 Player 1 01:57:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":74,"_text":"Wait For Response From Player 1 "},"childOfId":72} 

 Player 1 01:57:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:57:42 $ACTION_MASSAGE_REMOVE:  
{"id":74} 

 Player 1 01:57:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":75,"_text":"Wait For Response From Player 2 "},"childOfId":72} 

 Player 1 01:57:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:57:43 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:57:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Fanny Pack for 10 \n2:Player 1 is rolling against Hopper<Monster>"} 

 Player 2 01:57:43 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[326]} 

 Player 2 01:57:43 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 01:57:43 $ACTION_MASSAGE_REMOVE:  
{"id":75} 

 Player 1 01:57:43 $ACTION_MASSAGE_REMOVE:  
{"id":73} 

 Player 1 01:57:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":76,"_text":"Resolve AttackRoll 10 "}} 

 Player 1 01:57:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Hopper<Monster>"} 

 Player 1 01:57:43 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":309,"numberRolled":2,"rollingPlayerCardId":309,"stackEffectType":2,"attackedMonsterCardId":277}} 

 Player 1 01:57:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":77,"_text":"Added 0 to original roll"}} 

 Player 1 01:57:43 $NEXT_STACK_ID:  

 Player 1 01:57:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:57:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Hopper combat damage to Azazel \n2:Player 1 rolled 2 vs Hopper<Monster>"} 

 Player 1 01:57:43 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":309,"entityToDoDamageCardId":277,"entityToTakeDamageCardId":309,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":2}} 

 Player 1 01:57:43 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 01:57:43 $SHOW_STACK_EFFECT:  
{"effectId":11} 

 Player 2 01:57:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Fanny Pack for 10 \n2:Player 1 is rolling against Hopper<Monster>"} 

 Player 2 01:57:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Fanny Pack for 10 \n2:Player 1 is rolling against Hopper<Monster>"} 

 Player 1 01:57:46 $CLEAR_SE_VIS:  

 Player 1 01:57:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Hopper combat damage to Azazel \n2:Player 1 rolled 2 vs Hopper<Monster>"} 

 Player 1 01:57:46 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":309,"entityToDoDamageCardId":277,"entityToTakeDamageCardId":309,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":2}} 

 Player 1 01:57:46 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":309,"numberRolled":2,"rollingPlayerCardId":309,"stackEffectType":2,"attackedMonsterCardId":277}} 

 Player 1 01:57:46 $REPLACE_STACK:  
{"currentStack":[{"entityId":11,"creatorCardId":309,"entityToDoDamageCardId":277,"entityToTakeDamageCardId":309,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":2},{"entityId":10,"creatorCardId":309,"numberRolled":2,"rollingPlayerCardId":309,"stackEffectType":2,"attackedMonsterCardId":277}]} 

 Player 1 01:57:46 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":2},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":309,"scopeIsPlayer":true,"index":8,"originStackId":10},"isAfterActivation":true,"index":8} 

 Player 1 01:57:46 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":309,"numberRolled":2,"rollingPlayerCardId":309,"stackEffectType":2,"attackedMonsterCardId":277}} 

 Player 1 01:57:46 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":10} 

 Player 1 01:57:46 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 01:57:46 $SHOW_STACK_EFFECT:  
{"effectId":10} 

 Player 2 01:57:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Fanny Pack for 10 \n2:Player 1 is rolling against Hopper<Monster>"} 

 Player 2 01:57:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Hopper combat damage to Azazel \n2:Player 1 is rolling against Hopper<Monster>"} 

 Player 1 01:57:49 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":10} 

 Player 1 01:57:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":78,"_text":"Remove After Resolve AttackRoll 10  "}} 

 Player 1 01:57:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Hopper combat damage to Azazel"} 

 Player 1 01:57:49 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":10,"creatorCardId":309,"numberRolled":2,"rollingPlayerCardId":309,"stackEffectType":2,"attackedMonsterCardId":277}} 

 Player 1 01:57:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":79,"_text":"Response Remove After Resolve AttackRoll 10"},"childOfId":78} 

 Player 1 01:57:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":80,"_text":"Wait For Response From Player 1 "},"childOfId":78} 

 Player 1 01:57:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:57:49 $ACTION_MASSAGE_REMOVE:  
{"id":80} 

 Player 1 01:57:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":81,"_text":"Wait For Response From Player 2 "},"childOfId":78} 

 Player 1 01:57:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:57:49 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:57:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Hopper combat damage to Azazel \n2:Player 1 is rolling against Hopper<Monster>"} 

 Player 2 01:57:49 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[326]} 

 Player 2 01:57:49 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 01:57:49 $ACTION_MASSAGE_REMOVE:  
{"id":81} 

 Player 1 01:57:49 $ACTION_MASSAGE_REMOVE:  
{"id":79} 

 Player 1 01:57:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":82,"_text":"Resolve CombatDamage 11 "}} 

 Player 1 01:57:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Hopper combat damage to Azazel"} 

 Player 1 01:57:49 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":11,"creatorCardId":309,"entityToDoDamageCardId":277,"entityToTakeDamageCardId":309,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":2}} 

 Player 1 01:57:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Hopper 1 combat damage to Azazel"} 

 Player 1 01:57:49 $UPDATE_STACK_VIS:  
{"stackId":11,"text":"Hopper will deal 1 combat damage to Azazel"} 

 Player 1 01:57:49 $PLAYER_GET_HIT:  
{"playerId":1,"damage":1,"damageDealerId":277} 

 Player 1 01:57:49 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":277}],"result":null,"preventMethod":false,"methodScopeId":309,"scopeIsPlayer":true,"index":9,"originStackId":-1},"isAfterActivation":true,"index":9} 

 Player 1 01:57:50 $NEXT_STACK_ID:  

 Player 1 01:57:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Hopper 1 combat damage to Azazel \n2:Activate Fanny Pack effect GainLoot<GainLoot>"} 

 Player 1 01:57:50 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":12,"creatorCardId":309,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":164,"effectToDo":{"effectName":"GainLoot","cardEffectNum":0,"cardPlayerId":1,"cardId":164,"effctType":0},"isAfterActivation":true,"index":9,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 01:57:50 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":12,"creatorCardId":309,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":164,"effectToDo":{"effectName":"GainLoot","cardEffectNum":0,"cardPlayerId":1,"cardId":164,"effctType":0},"isAfterActivation":true,"index":9,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 01:57:50 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 01:57:50 $SHOW_STACK_EFFECT:  
{"effectId":12} 

 Player 2 01:57:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Hopper combat damage to Azazel"} 

 Player 2 01:57:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Hopper combat damage to Azazel \n2:Activate Fanny Pack "} 

 Player 1 01:57:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":83,"_text":"Add ActivatePassiveEffect 12 "}} 

 Player 1 01:57:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Hopper 1 combat damage to Azazel \n2:Activate Fanny Pack effect GainLoot<GainLoot>"} 

 Player 1 01:57:52 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[309],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":309,"effectCardPlayer":309},"entityId":12,"creatorCardId":309,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":164,"effectToDo":{"effectName":"GainLoot","cardEffectNum":0,"cardPlayerId":1,"cardId":164,"effctType":0},"isAfterActivation":true,"index":9,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 01:57:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":84,"_text":"Response Adding ActivatePassiveEffect 12"},"childOfId":83} 

 Player 1 01:57:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":85,"_text":"Wait For Response From Player 2 "},"childOfId":83} 

 Player 1 01:57:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:57:52 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:57:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Hopper combat damage to Azazel \n2:Activate Fanny Pack "} 

 Player 2 01:57:53 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[326]} 

 Player 2 01:57:53 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 01:57:53 $ACTION_MASSAGE_REMOVE:  
{"id":85} 

 Player 1 01:57:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":86,"_text":"Wait For Response From Player 1 "},"childOfId":83} 

 Player 1 01:57:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:57:53 $ACTION_MASSAGE_REMOVE:  
{"id":86} 

 Player 1 01:57:53 $ACTION_MASSAGE_REMOVE:  
{"id":84} 

 Player 1 01:57:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":87,"_text":"Resolve ActivatePassiveEffect 12 "}} 

 Player 1 01:57:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Hopper 1 combat damage to Azazel \n2:Activate Fanny Pack effect GainLoot<GainLoot>"} 

 Player 1 01:57:53 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[309],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":309,"effectCardPlayer":309},"entityId":12,"creatorCardId":309,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":164,"effectToDo":{"effectName":"GainLoot","cardEffectNum":0,"cardPlayerId":1,"cardId":164,"effctType":0},"isAfterActivation":true,"index":9,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 01:57:53 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":164,"particleType":6} 

 Player 2 01:57:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Hopper combat damage to Azazel \n2:Activate Fanny Pack "} 

 Player 1 01:57:55 $DISABLE_PARTICLE_EFFECT:  
{"cardId":164,"particleType":6} 

 Player 1 01:57:55 $DRAW_CARD:  
{"deckType":1} 

 Player 1 01:57:55 $MOVE_CARD:  
{"moveIndex":15,"cardId":8,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.599999904632568,"y":-0.20000000298023224,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 01:57:55 $MOVE_CARD_END:  
{"moveIndex":15,"cardId":8,"flipIfFlipped":false,"playerId":1} 

 Player 1 01:57:55 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":8} 

 Player 1 01:57:55 $FLIP_CARD:  
{"cardId":8} 

 Player 1 01:57:55 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":8} 

 Player 1 01:57:55 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":277}],"result":null,"preventMethod":false,"methodScopeId":309,"scopeIsPlayer":true,"index":9,"originStackId":-1},"isAfterActivation":true,"index":9} 

 Player 1 01:57:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Hopper 1 combat damage to Azazel \n2:Activate Fanny Pack effect GainLoot<GainLoot>"} 

 Player 1 01:57:55 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[309],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":309,"effectCardPlayer":309},"entityId":12,"creatorCardId":309,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":164,"isAfterActivation":true,"index":9,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 01:57:55 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":12} 

 Player 1 01:57:55 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 01:57:55 $SHOW_STACK_EFFECT:  
{"effectId":12} 

 Player 2 01:57:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Hopper combat damage to Azazel \n2:Activate Fanny Pack "} 

 Player 1 01:57:58 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":12} 

 Player 1 01:57:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":88,"_text":"Remove After Resolve ActivatePassiveEffect 12  "}} 

 Player 1 01:57:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Hopper 1 combat damage to Azazel"} 

 Player 1 01:57:58 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[309],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":309,"effectCardPlayer":309},"entityId":12,"creatorCardId":309,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":164,"isAfterActivation":true,"index":9,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 01:57:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":89,"_text":"Response Remove After Resolve ActivatePassiveEffect 12"},"childOfId":88} 

 Player 1 01:57:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":90,"_text":"Wait For Response From Player 1 "},"childOfId":88} 

 Player 1 01:57:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:57:58 $ACTION_MASSAGE_REMOVE:  
{"id":90} 

 Player 1 01:57:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":91,"_text":"Wait For Response From Player 2 "},"childOfId":88} 

 Player 1 01:57:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:57:59 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:57:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Hopper combat damage to Azazel \n2:Activate Fanny Pack "} 

 Player 2 01:57:59 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[326]} 

 Player 2 01:57:59 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 01:57:59 $ACTION_MASSAGE_REMOVE:  
{"id":91} 

 Player 1 01:57:59 $ACTION_MASSAGE_REMOVE:  
{"id":89} 

 Player 1 01:57:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":92,"_text":"Resolve CombatDamage 11 "}} 

 Player 1 01:57:59 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_TAKEN","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":0,"number":277}],"result":null,"preventMethod":false,"methodScopeId":309,"scopeIsPlayer":true,"index":10,"originStackId":11},"isAfterActivation":true,"index":10} 

 Player 1 01:57:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Hopper 1 combat damage to Azazel"} 

 Player 1 01:57:59 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":11,"creatorCardId":309,"entityToDoDamageCardId":277,"entityToTakeDamageCardId":309,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":2}} 

 Player 1 01:57:59 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":11} 

 Player 1 01:57:59 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 01:57:59 $SHOW_STACK_EFFECT:  
{"effectId":11} 

 Player 2 01:57:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Hopper combat damage to Azazel"} 

 Player 1 01:58:02 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":11} 

 Player 1 01:58:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":93,"_text":"Remove After Resolve CombatDamage 11  "}} 

 Player 1 01:58:02 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:58:02 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":11,"creatorCardId":309,"entityToDoDamageCardId":277,"entityToTakeDamageCardId":309,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":2}} 

 Player 1 01:58:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":94,"_text":"Response Remove After Resolve CombatDamage 11"},"childOfId":93} 

 Player 1 01:58:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":95,"_text":"Wait For Response From Player 2 "},"childOfId":93} 

 Player 1 01:58:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:58:02 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:58:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Hopper combat damage to Azazel"} 

 Player 2 01:58:02 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[326]} 

 Player 2 01:58:02 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 01:58:02 $ACTION_MASSAGE_REMOVE:  
{"id":95} 

 Player 1 01:58:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":96,"_text":"Wait For Response From Player 1 "},"childOfId":93} 

 Player 1 01:58:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:58:02 $ACTION_MASSAGE_REMOVE:  
{"id":96} 

 Player 1 01:58:02 $ACTION_MASSAGE_REMOVE:  
{"id":94} 

 Player 1 01:58:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":97,"_text":"Stack Was Emptied "}} 

 Player 1 01:58:02 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:58:02 $CLEAR_SE_VIS:  

 Player 1 01:58:13 $NEXT_STACK_ID:  

 Player 1 01:58:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Hopper<Monster>"} 

 Player 1 01:58:13 $ADD_TO_STACK:  
{"stackEffect":{"entityId":13,"creatorCardId":309,"rollingPlayerCardId":309,"stackEffectType":2,"attackedMonsterCardId":277}} 

 Player 1 01:58:13 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":13,"creatorCardId":309,"rollingPlayerCardId":309,"stackEffectType":2,"attackedMonsterCardId":277}} 

 Player 1 01:58:13 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 01:58:13 $SHOW_STACK_EFFECT:  
{"effectId":13} 

 Player 2 01:58:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:58:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Hopper<Monster>"} 

 Player 1 01:58:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":98,"_text":"Add AttackRoll 13 "}} 

 Player 1 01:58:16 $ROLL_DICE:  
{"playerId":1} 

 Player 1 01:58:18 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":5} 

 Player 1 01:58:18 $UPDATE_STACK_VIS:  
{"stackId":13,"text":"player rolled 5 vs Hopper<Monster>"} 

 Player 1 01:58:18 $SHOW_DICE_ROLL:  
{"stackId":13} 

 Player 1 01:58:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 5 vs Hopper<Monster>"} 

 Player 1 01:58:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:58:21 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":13,"creatorCardId":309,"numberRolled":5,"rollingPlayerCardId":309,"stackEffectType":2,"attackedMonsterCardId":277}} 

 Player 1 01:58:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":99,"_text":"Response Adding AttackRoll 13"},"childOfId":98} 

 Player 1 01:58:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":100,"_text":"Wait For Response From Player 1 "},"childOfId":98} 

 Player 1 01:58:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:58:21 $SHOW_REACTIONS:  
{"playerId":1,"cardsIds":[310]} 

 Player 2 01:58:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Hopper<Monster>"} 

 Player 1 01:58:23 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[310]} 

 Player 1 01:58:23 $ACTION_MASSAGE_REMOVE:  
{"id":100} 

 Player 1 01:58:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":101,"_text":"Wait For Response From Player 2 "},"childOfId":98} 

 Player 1 01:58:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:58:23 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:58:23 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[326]} 

 Player 2 01:58:23 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 01:58:23 $ACTION_MASSAGE_REMOVE:  
{"id":101} 

 Player 1 01:58:23 $ACTION_MASSAGE_REMOVE:  
{"id":99} 

 Player 1 01:58:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":102,"_text":"Resolve AttackRoll 13 "}} 

 Player 1 01:58:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 5 vs Hopper<Monster>"} 

 Player 1 01:58:23 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":13,"creatorCardId":309,"numberRolled":5,"rollingPlayerCardId":309,"stackEffectType":2,"attackedMonsterCardId":277}} 

 Player 1 01:58:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":103,"_text":"Added 0 to original roll"}} 

 Player 1 01:58:23 $NEXT_STACK_ID:  

 Player 1 01:58:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:58:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Hopper \n2:Player 1 rolled 5 vs Hopper<Monster>"} 

 Player 1 01:58:23 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":14,"creatorCardId":309,"entityToDoDamageCardId":309,"entityToTakeDamageCardId":277,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5}} 

 Player 1 01:58:23 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 01:58:23 $SHOW_STACK_EFFECT:  
{"effectId":14} 

 Player 2 01:58:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Hopper<Monster>"} 

 Player 2 01:58:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Hopper<Monster>"} 

 Player 1 01:58:26 $CLEAR_SE_VIS:  

 Player 1 01:58:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Hopper \n2:Player 1 rolled 5 vs Hopper<Monster>"} 

 Player 1 01:58:26 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":14,"creatorCardId":309,"entityToDoDamageCardId":309,"entityToTakeDamageCardId":277,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5}} 

 Player 1 01:58:26 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":13,"creatorCardId":309,"numberRolled":5,"rollingPlayerCardId":309,"stackEffectType":2,"attackedMonsterCardId":277}} 

 Player 1 01:58:26 $REPLACE_STACK:  
{"currentStack":[{"entityId":14,"creatorCardId":309,"entityToDoDamageCardId":309,"entityToTakeDamageCardId":277,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5},{"entityId":13,"creatorCardId":309,"numberRolled":5,"rollingPlayerCardId":309,"stackEffectType":2,"attackedMonsterCardId":277}]} 

 Player 1 01:58:26 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":1},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":309,"scopeIsPlayer":true,"index":11,"originStackId":13},"isAfterActivation":true,"index":11} 

 Player 1 01:58:26 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":13,"creatorCardId":309,"numberRolled":5,"rollingPlayerCardId":309,"stackEffectType":2,"attackedMonsterCardId":277}} 

 Player 1 01:58:26 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":13} 

 Player 1 01:58:26 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 01:58:26 $SHOW_STACK_EFFECT:  
{"effectId":13} 

 Player 2 01:58:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Hopper<Monster>"} 

 Player 2 01:58:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Hopper \n2:Player 1 is rolling against Hopper<Monster>"} 

 Player 1 01:58:29 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":13} 

 Player 1 01:58:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":104,"_text":"Remove After Resolve AttackRoll 13  "}} 

 Player 1 01:58:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Hopper"} 

 Player 1 01:58:29 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":13,"creatorCardId":309,"numberRolled":5,"rollingPlayerCardId":309,"stackEffectType":2,"attackedMonsterCardId":277}} 

 Player 1 01:58:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":105,"_text":"Response Remove After Resolve AttackRoll 13"},"childOfId":104} 

 Player 1 01:58:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":106,"_text":"Wait For Response From Player 1 "},"childOfId":104} 

 Player 1 01:58:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:58:29 $SHOW_REACTIONS:  
{"playerId":1,"cardsIds":[310]} 

 Player 2 01:58:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Hopper \n2:Player 1 is rolling against Hopper<Monster>"} 

 Player 1 01:58:32 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[310]} 

 Player 1 01:58:32 $ACTION_MASSAGE_REMOVE:  
{"id":106} 

 Player 1 01:58:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":107,"_text":"Wait For Response From Player 2 "},"childOfId":104} 

 Player 1 01:58:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:58:32 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:58:32 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[326]} 

 Player 2 01:58:32 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 01:58:32 $ACTION_MASSAGE_REMOVE:  
{"id":107} 

 Player 1 01:58:32 $ACTION_MASSAGE_REMOVE:  
{"id":105} 

 Player 1 01:58:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":108,"_text":"Resolve CombatDamage 14 "}} 

 Player 1 01:58:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Hopper"} 

 Player 1 01:58:33 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":14,"creatorCardId":309,"entityToDoDamageCardId":309,"entityToTakeDamageCardId":277,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5}} 

 Player 1 01:58:33 $UPDATE_STACK_VIS:  
{"stackId":14,"text":"Azazel will deal 1 combat damage to Hopper"} 

 Player 1 01:58:33 $MONSTER_GET_DAMAGED:  
{"cardId":277,"hpLeft":1,"damageDealerId":309} 

 Player 1 01:58:33 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":309},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":277,"scopeIsPlayer":false,"index":12,"originStackId":-1},"isAfterActivation":true,"index":12} 

 Player 1 01:58:33 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":5},{"type":0,"number":309},{"type":0,"number":277}],"result":null,"preventMethod":false,"methodScopeId":309,"scopeIsPlayer":true,"index":13,"originStackId":14},"isAfterActivation":true,"index":13} 

 Player 1 01:58:33 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":14,"creatorCardId":309,"entityToDoDamageCardId":309,"entityToTakeDamageCardId":277,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5}} 

 Player 1 01:58:33 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":14} 

 Player 1 01:58:33 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 01:58:33 $SHOW_STACK_EFFECT:  
{"effectId":14} 

 Player 1 01:58:36 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":14} 

 Player 1 01:58:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":109,"_text":"Remove After Resolve CombatDamage 14  "}} 

 Player 1 01:58:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:58:36 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":14,"creatorCardId":309,"entityToDoDamageCardId":309,"entityToTakeDamageCardId":277,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5}} 

 Player 1 01:58:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":110,"_text":"Response Remove After Resolve CombatDamage 14"},"childOfId":109} 

 Player 1 01:58:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":111,"_text":"Wait For Response From Player 2 "},"childOfId":109} 

 Player 1 01:58:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:58:36 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:58:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Hopper"} 

 Player 2 01:58:36 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[326]} 

 Player 2 01:58:36 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 01:58:36 $ACTION_MASSAGE_REMOVE:  
{"id":111} 

 Player 1 01:58:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":112,"_text":"Wait For Response From Player 1 "},"childOfId":109} 

 Player 1 01:58:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:58:36 $SHOW_REACTIONS:  
{"playerId":1,"cardsIds":[310]} 

 Player 1 01:58:38 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[310]} 

 Player 1 01:58:38 $ACTION_MASSAGE_REMOVE:  
{"id":112} 

 Player 1 01:58:38 $ACTION_MASSAGE_REMOVE:  
{"id":110} 

 Player 1 01:58:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":113,"_text":"Stack Was Emptied "}} 

 Player 1 01:58:38 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:58:38 $CLEAR_SE_VIS:  

 Player 1 01:58:46 $NEXT_STACK_ID:  

 Player 1 01:58:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Hopper<Monster>"} 

 Player 1 01:58:46 $ADD_TO_STACK:  
{"stackEffect":{"entityId":15,"creatorCardId":309,"rollingPlayerCardId":309,"stackEffectType":2,"attackedMonsterCardId":277}} 

 Player 1 01:58:46 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":15,"creatorCardId":309,"rollingPlayerCardId":309,"stackEffectType":2,"attackedMonsterCardId":277}} 

 Player 1 01:58:46 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 01:58:46 $SHOW_STACK_EFFECT:  
{"effectId":15} 

 Player 2 01:58:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:58:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Hopper<Monster>"} 

 Player 1 01:58:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":114,"_text":"Add AttackRoll 15 "}} 

 Player 1 01:58:49 $ROLL_DICE:  
{"playerId":1} 

 Player 1 01:58:51 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":4} 

 Player 1 01:58:51 $UPDATE_STACK_VIS:  
{"stackId":15,"text":"player rolled 4 vs Hopper<Monster>"} 

 Player 1 01:58:51 $SHOW_DICE_ROLL:  
{"stackId":15} 

 Player 1 01:58:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs Hopper<Monster>"} 

 Player 1 01:58:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:58:54 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":15,"creatorCardId":309,"numberRolled":4,"rollingPlayerCardId":309,"stackEffectType":2,"attackedMonsterCardId":277}} 

 Player 1 01:58:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":115,"_text":"Response Adding AttackRoll 15"},"childOfId":114} 

 Player 1 01:58:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":116,"_text":"Wait For Response From Player 1 "},"childOfId":114} 

 Player 1 01:58:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:58:54 $ACTION_MASSAGE_REMOVE:  
{"id":116} 

 Player 1 01:58:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":117,"_text":"Wait For Response From Player 2 "},"childOfId":114} 

 Player 1 01:58:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:58:54 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:58:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Hopper<Monster>"} 

 Player 2 01:58:54 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[326]} 

 Player 2 01:58:54 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 01:58:54 $ACTION_MASSAGE_REMOVE:  
{"id":117} 

 Player 1 01:58:54 $ACTION_MASSAGE_REMOVE:  
{"id":115} 

 Player 1 01:58:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":118,"_text":"Resolve AttackRoll 15 "}} 

 Player 1 01:58:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs Hopper<Monster>"} 

 Player 1 01:58:54 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":15,"creatorCardId":309,"numberRolled":4,"rollingPlayerCardId":309,"stackEffectType":2,"attackedMonsterCardId":277}} 

 Player 1 01:58:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":119,"_text":"Added 0 to original roll"}} 

 Player 1 01:58:54 $NEXT_STACK_ID:  

 Player 1 01:58:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:58:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Hopper \n2:Player 1 rolled 4 vs Hopper<Monster>"} 

 Player 1 01:58:54 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":16,"creatorCardId":309,"entityToDoDamageCardId":309,"entityToTakeDamageCardId":277,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 1 01:58:54 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 01:58:55 $SHOW_STACK_EFFECT:  
{"effectId":16} 

 Player 2 01:58:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Hopper<Monster>"} 

 Player 2 01:58:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Hopper<Monster>"} 

 Player 1 01:58:57 $CLEAR_SE_VIS:  

 Player 1 01:58:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Hopper \n2:Player 1 rolled 4 vs Hopper<Monster>"} 

 Player 1 01:58:57 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":16,"creatorCardId":309,"entityToDoDamageCardId":309,"entityToTakeDamageCardId":277,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 1 01:58:57 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":15,"creatorCardId":309,"numberRolled":4,"rollingPlayerCardId":309,"stackEffectType":2,"attackedMonsterCardId":277}} 

 Player 1 01:58:57 $REPLACE_STACK:  
{"currentStack":[{"entityId":16,"creatorCardId":309,"entityToDoDamageCardId":309,"entityToTakeDamageCardId":277,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":15,"creatorCardId":309,"numberRolled":4,"rollingPlayerCardId":309,"stackEffectType":2,"attackedMonsterCardId":277}]} 

 Player 1 01:58:57 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":1},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":309,"scopeIsPlayer":true,"index":14,"originStackId":15},"isAfterActivation":true,"index":14} 

 Player 1 01:58:57 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":15,"creatorCardId":309,"numberRolled":4,"rollingPlayerCardId":309,"stackEffectType":2,"attackedMonsterCardId":277}} 

 Player 1 01:58:57 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":15} 

 Player 1 01:58:57 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 01:58:58 $SHOW_STACK_EFFECT:  
{"effectId":15} 

 Player 2 01:58:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Hopper<Monster>"} 

 Player 2 01:58:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Hopper \n2:Player 1 is rolling against Hopper<Monster>"} 

 Player 1 01:59:00 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":15} 

 Player 1 01:59:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":120,"_text":"Remove After Resolve AttackRoll 15  "}} 

 Player 1 01:59:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Hopper"} 

 Player 1 01:59:00 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":15,"creatorCardId":309,"numberRolled":4,"rollingPlayerCardId":309,"stackEffectType":2,"attackedMonsterCardId":277}} 

 Player 1 01:59:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":121,"_text":"Response Remove After Resolve AttackRoll 15"},"childOfId":120} 

 Player 1 01:59:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":122,"_text":"Wait For Response From Player 1 "},"childOfId":120} 

 Player 1 01:59:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:59:01 $ACTION_MASSAGE_REMOVE:  
{"id":122} 

 Player 1 01:59:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":123,"_text":"Wait For Response From Player 2 "},"childOfId":120} 

 Player 1 01:59:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:59:01 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:59:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Hopper \n2:Player 1 is rolling against Hopper<Monster>"} 

 Player 2 01:59:01 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[326]} 

 Player 2 01:59:01 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 01:59:01 $ACTION_MASSAGE_REMOVE:  
{"id":123} 

 Player 1 01:59:01 $ACTION_MASSAGE_REMOVE:  
{"id":121} 

 Player 1 01:59:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":124,"_text":"Resolve CombatDamage 16 "}} 

 Player 1 01:59:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Hopper"} 

 Player 1 01:59:01 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":16,"creatorCardId":309,"entityToDoDamageCardId":309,"entityToTakeDamageCardId":277,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 1 01:59:01 $UPDATE_STACK_VIS:  
{"stackId":16,"text":"Azazel will deal 1 combat damage to Hopper"} 

 Player 1 01:59:01 $MONSTER_GET_DAMAGED:  
{"cardId":277,"hpLeft":0,"damageDealerId":309} 

 Player 1 01:59:01 $NEXT_STACK_ID:  

 Player 1 01:59:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:59:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Hopper \n2:[object Object] killed by Azazel"} 

 Player 1 01:59:01 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":17,"creatorCardId":309,"monsterToDieCardId":277,"stackEffectType":5,"killerId":309}} 

 Player 1 01:59:01 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 01:59:01 $SHOW_STACK_EFFECT:  
{"effectId":17} 

 Player 2 01:59:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Hopper"} 

 Player 1 01:59:04 $CLEAR_SE_VIS:  

 Player 1 01:59:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Hopper \n2:[object Object] killed by Azazel"} 

 Player 1 01:59:04 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":16,"creatorCardId":309,"entityToDoDamageCardId":309,"entityToTakeDamageCardId":277,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 1 01:59:04 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":17,"creatorCardId":309,"monsterToDieCardId":277,"stackEffectType":5,"killerId":309}} 

 Player 1 01:59:04 $REPLACE_STACK:  
{"currentStack":[{"entityId":16,"creatorCardId":309,"entityToDoDamageCardId":309,"entityToTakeDamageCardId":277,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":17,"creatorCardId":309,"monsterToDieCardId":277,"stackEffectType":5,"killerId":309}]} 

 Player 1 01:59:04 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":309},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":277,"scopeIsPlayer":false,"index":15,"originStackId":-1},"isAfterActivation":true,"index":15} 

 Player 1 01:59:04 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":4},{"type":0,"number":309},{"type":0,"number":277}],"result":null,"preventMethod":false,"methodScopeId":309,"scopeIsPlayer":true,"index":16,"originStackId":16},"isAfterActivation":true,"index":16} 

 Player 1 01:59:04 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":16,"creatorCardId":309,"entityToDoDamageCardId":309,"entityToTakeDamageCardId":277,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 1 01:59:04 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":16} 

 Player 1 01:59:04 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 01:59:04 $SHOW_STACK_EFFECT:  
{"effectId":16} 

 Player 2 01:59:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Hopper"} 

 Player 2 01:59:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Hopper \n2:[object Object] killed by Azazel"} 

 Player 1 01:59:07 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":16} 

 Player 1 01:59:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":125,"_text":"Remove After Resolve CombatDamage 16  "}} 

 Player 1 01:59:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Azazel"} 

 Player 1 01:59:07 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":16,"creatorCardId":309,"entityToDoDamageCardId":309,"entityToTakeDamageCardId":277,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 1 01:59:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":126,"_text":"Response Remove After Resolve CombatDamage 16"},"childOfId":125} 

 Player 1 01:59:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":127,"_text":"Wait For Response From Player 1 "},"childOfId":125} 

 Player 1 01:59:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:59:07 $ACTION_MASSAGE_REMOVE:  
{"id":127} 

 Player 1 01:59:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":128,"_text":"Wait For Response From Player 2 "},"childOfId":125} 

 Player 1 01:59:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:59:07 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:59:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Hopper \n2:[object Object] killed by Azazel"} 

 Player 2 01:59:07 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[326]} 

 Player 2 01:59:07 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 01:59:07 $ACTION_MASSAGE_REMOVE:  
{"id":128} 

 Player 1 01:59:07 $ACTION_MASSAGE_REMOVE:  
{"id":126} 

 Player 1 01:59:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":129,"_text":"Resolve MonsterDeath 17 "}} 

 Player 1 01:59:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Azazel"} 

 Player 1 01:59:07 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":17,"creatorCardId":309,"monsterToDieCardId":277,"stackEffectType":5,"killerId":309}} 

 Player 1 01:59:07 $DISABLE_PARTICLE_EFFECT:  
{"cardId":277,"particleType":5} 

 Player 1 01:59:07 $CANCEL_ATTACK:  

 Player 1 01:59:07 $NEXT_STACK_ID:  

 Player 1 01:59:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:59:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Hopper<Monster> reward \n2:[object Object] killed by Azazel"} 

 Player 1 01:59:08 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":18,"creatorCardId":309,"monsterCardWithRewardId":277,"playerCardIdToReward":309,"stackEffectType":7}} 

 Player 1 01:59:08 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 01:59:08 $SHOW_STACK_EFFECT:  
{"effectId":18} 

 Player 2 01:59:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Hopper"} 

 Player 2 01:59:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Hopper"} 

 Player 1 01:59:10 $CLEAR_SE_VIS:  

 Player 1 01:59:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Hopper<Monster> reward \n2:[object Object] killed by Azazel"} 

 Player 1 01:59:10 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":18,"creatorCardId":309,"monsterCardWithRewardId":277,"playerCardIdToReward":309,"stackEffectType":7}} 

 Player 1 01:59:10 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":17,"creatorCardId":309,"monsterToDieCardId":277,"stackEffectType":5,"killerId":309}} 

 Player 1 01:59:10 $REPLACE_STACK:  
{"currentStack":[{"entityId":18,"creatorCardId":309,"monsterCardWithRewardId":277,"playerCardIdToReward":309,"stackEffectType":7},{"entityId":17,"creatorCardId":309,"monsterToDieCardId":277,"stackEffectType":5,"killerId":309}]} 

 Player 1 01:59:11 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":17,"creatorCardId":309,"monsterToDieCardId":277,"stackEffectType":5,"killerId":309}} 

 Player 1 01:59:11 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":17} 

 Player 1 01:59:11 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 01:59:11 $SHOW_STACK_EFFECT:  
{"effectId":17} 

 Player 2 01:59:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Hopper"} 

 Player 2 01:59:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Hopper<Monster> reward \n2:[object Object] killed by Azazel"} 

 Player 1 01:59:13 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":17} 

 Player 1 01:59:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":130,"_text":"Remove After Resolve MonsterDeath 17  "}} 

 Player 1 01:59:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Hopper<Monster> reward"} 

 Player 1 01:59:14 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":17,"creatorCardId":309,"monsterToDieCardId":277,"stackEffectType":5,"killerId":309}} 

 Player 1 01:59:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":131,"_text":"Response Remove After Resolve MonsterDeath 17"},"childOfId":130} 

 Player 1 01:59:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":132,"_text":"Wait For Response From Player 1 "},"childOfId":130} 

 Player 1 01:59:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:59:14 $ACTION_MASSAGE_REMOVE:  
{"id":132} 

 Player 1 01:59:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":133,"_text":"Wait For Response From Player 2 "},"childOfId":130} 

 Player 1 01:59:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:59:14 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:59:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Hopper<Monster> reward \n2:[object Object] killed by Azazel"} 

 Player 2 01:59:14 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[326]} 

 Player 2 01:59:14 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 01:59:14 $ACTION_MASSAGE_REMOVE:  
{"id":133} 

 Player 1 01:59:14 $ACTION_MASSAGE_REMOVE:  
{"id":131} 

 Player 1 01:59:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":134,"_text":"Resolve MonsterRewardStackEffect 18 "}} 

 Player 1 01:59:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Hopper<Monster> reward"} 

 Player 1 01:59:14 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":18,"creatorCardId":309,"monsterCardWithRewardId":277,"playerCardIdToReward":309,"stackEffectType":7}} 

 Player 1 01:59:14 $SET_MONEY:  
{"playerId":1,"numOfCoins":4} 

 Player 1 01:59:14 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":309,"scopeIsPlayer":true,"index":17,"originStackId":-1},"isAfterActivation":true,"index":17} 

 Player 1 01:59:14 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":277,"scopeIsPlayer":false,"index":18,"originStackId":18},"isAfterActivation":true,"index":18} 

 Player 1 01:59:14 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:59:14 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":18} 

 Player 1 01:59:14 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":18} 

 Player 1 01:59:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":135,"_text":"Fizzle MonsterRewardStackEffect 18"}} 

 Player 1 01:59:14 $FIZZLE_STACK_EFFECT:  
{"entityId":18} 

 Player 1 01:59:14 $CLEAR_SE_VIS:  

 Player 1 01:59:14 $MOVE_CARD:  
{"moveIndex":16,"cardId":277,"placeID":330,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 01:59:14 $STACK_EMPTIED:  
{"playerId":1} 

 Player 1 01:59:14 $CLEAR_SE_VIS:  

 Player 2 01:59:15 $MOVE_CARD_END:  
{"moveIndex":16,"cardId":277,"flipIfFlipped":true,"playerId":1} 

 Player 1 01:59:15 $MOVE_CARD_TO_PILE:  
{"type":2,"cardId":277} 

 Player 1 01:59:15 $REMOVE_FROM_PASSIVE_MANAGER:  
{"cardId":277} 

 Player 1 01:59:15 $REMOVE_MONSTER:  
{"holderId":2,"monsterId":277} 

 Player 1 01:59:15 $NEXT_STACK_ID:  

 Player 1 01:59:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder2 slot"} 

 Player 1 01:59:15 $ADD_TO_STACK:  
{"stackEffect":{"entityId":19,"creatorCardId":309,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 

 Player 1 01:59:15 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":19,"creatorCardId":309,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 

 Player 1 01:59:15 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 01:59:15 $SHOW_STACK_EFFECT:  
{"effectId":19} 

 Player 2 01:59:15 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:59:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder2 slot"} 

 Player 1 01:59:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":136,"_text":"Add RefillEmptySlot 19 "}} 

 Player 1 01:59:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:59:18 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":19,"creatorCardId":309,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 

 Player 1 01:59:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":137,"_text":"Response Adding RefillEmptySlot 19"},"childOfId":136} 

 Player 1 01:59:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":138,"_text":"Wait For Response From Player 1 "},"childOfId":136} 

 Player 1 01:59:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:59:18 $ACTION_MASSAGE_REMOVE:  
{"id":138} 

 Player 1 01:59:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":139,"_text":"Wait For Response From Player 2 "},"childOfId":136} 

 Player 1 01:59:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:59:18 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:59:18 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[326]} 

 Player 2 01:59:18 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 01:59:18 $ACTION_MASSAGE_REMOVE:  
{"id":139} 

 Player 1 01:59:18 $ACTION_MASSAGE_REMOVE:  
{"id":137} 

 Player 1 01:59:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":140,"_text":"Resolve RefillEmptySlot 19 "}} 

 Player 1 01:59:18 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":19,"creatorCardId":309,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 

 Player 1 01:59:18 $DRAW_CARD:  
{"deckType":2} 

 Player 1 01:59:18 $FLIP_CARD:  
{"cardId":254} 

 Player 1 01:59:19 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":254} 

 Player 1 01:59:19 $NEW_MONSTER_ON_PLACE:  
{"cardId":254,"monsterPlaceId":2} 

 Player 1 01:59:19 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":19} 

 Player 1 01:59:19 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 01:59:19 $SHOW_STACK_EFFECT:  
{"effectId":19} 

 Player 1 01:59:21 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":19} 

 Player 1 01:59:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":141,"_text":"Remove After Resolve RefillEmptySlot 19  "}} 

 Player 1 01:59:21 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:59:22 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":19,"creatorCardId":309,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 

 Player 1 01:59:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":142,"_text":"Response Remove After Resolve RefillEmptySlot 19"},"childOfId":141} 

 Player 1 01:59:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":143,"_text":"Wait For Response From Player 2 "},"childOfId":141} 

 Player 1 01:59:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 01:59:22 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 01:59:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder2 slot"} 

 Player 2 01:59:22 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[326]} 

 Player 2 01:59:22 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 01:59:22 $ACTION_MASSAGE_REMOVE:  
{"id":143} 

 Player 1 01:59:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":144,"_text":"Wait For Response From Player 1 "},"childOfId":141} 

 Player 1 01:59:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:59:22 $ACTION_MASSAGE_REMOVE:  
{"id":144} 

 Player 1 01:59:22 $ACTION_MASSAGE_REMOVE:  
{"id":142} 

 Player 1 01:59:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":145,"_text":"Stack Was Emptied "}} 

 Player 1 01:59:22 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:59:22 $CLEAR_SE_VIS:  

 Player 1 01:59:22 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":18} 

 Player 1 01:59:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":146,"_text":"Stack Was Emptied "}} 

 Player 1 01:59:22 $CLEAR_SE_VIS:  

 Player 1 01:59:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 01:59:28 $CLEAR_SE_VIS:  

 Player 1 01:59:28 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 1 01:59:28 $CLEAR_SE_VIS:  

 Player 1 01:59:28 $END_TURN:  

 Player 1 01:59:28 $SET_TURN:  
{"playerId":2} 

 Player 1 01:59:28 $START_TURN:  
{"playerId":2} 

 Player 2 01:59:28 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 01:59:28 $RECHARGE_ITEM:  
{"cardId":325} 

 Player 2 01:59:28 $PLAYER_RECHARGE_ITEM:  
{"playerId":2,"cardId":325} 

 Player 2 01:59:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:59:28 $NEXT_STACK_ID:  

 Player 2 01:59:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 01:59:28 $ADD_TO_STACK:  
{"stackEffect":{"entityId":20,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 

 Player 2 01:59:28 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":20,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 

 Player 2 01:59:28 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 01:59:28 $SHOW_STACK_EFFECT:  
{"effectId":20} 

 Player 1 01:59:28 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 01:59:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 01:59:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 01:59:29 $CLEAR_SE_VIS:  

 Player 2 01:59:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":147,"_text":"Add StartTurnLoot 20 "}} 

 Player 2 01:59:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:59:31 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":20,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 

 Player 2 01:59:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":148,"_text":"Response Adding StartTurnLoot 20"},"childOfId":147} 

 Player 2 01:59:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":149,"_text":"Wait For Response From Player 2 "},"childOfId":147} 

 Player 2 01:59:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:59:31 $ACTION_MASSAGE_REMOVE:  
{"id":149} 

 Player 2 01:59:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":150,"_text":"Wait For Response From Player 1 "},"childOfId":147} 

 Player 2 01:59:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 01:59:32 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 01:59:32 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[310]} 

 Player 1 01:59:32 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 01:59:32 $ACTION_MASSAGE_REMOVE:  
{"id":150} 

 Player 2 01:59:32 $ACTION_MASSAGE_REMOVE:  
{"id":148} 

 Player 2 01:59:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":151,"_text":"Resolve StartTurnLoot 20 "}} 

 Player 2 01:59:32 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":20,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 

 Player 2 01:59:32 $DRAW_CARD:  
{"deckType":1} 

 Player 2 01:59:32 $MOVE_CARD:  
{"moveIndex":17,"cardId":121,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 01:59:32 $MOVE_CARD_END:  
{"moveIndex":17,"cardId":121,"flipIfFlipped":false,"playerId":2} 

 Player 2 01:59:32 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":121} 

 Player 2 01:59:32 $FLIP_CARD:  
{"cardId":121} 

 Player 2 01:59:32 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":121} 

 Player 2 01:59:32 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":20,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 

 Player 2 01:59:32 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":20} 

 Player 2 01:59:32 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 01:59:32 $SHOW_STACK_EFFECT:  
{"effectId":20} 

 Player 2 01:59:35 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":20} 

 Player 2 01:59:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":152,"_text":"Remove After Resolve StartTurnLoot 20  "}} 

 Player 2 01:59:35 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:59:35 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":20,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 

 Player 2 01:59:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":153,"_text":"Response Remove After Resolve StartTurnLoot 20"},"childOfId":152} 

 Player 2 01:59:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":154,"_text":"Wait For Response From Player 1 "},"childOfId":152} 

 Player 2 01:59:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 01:59:35 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 01:59:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 01:59:36 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[310]} 

 Player 1 01:59:36 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 01:59:36 $ACTION_MASSAGE_REMOVE:  
{"id":154} 

 Player 2 01:59:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":155,"_text":"Wait For Response From Player 2 "},"childOfId":152} 

 Player 2 01:59:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 01:59:36 $ACTION_MASSAGE_REMOVE:  
{"id":155} 

 Player 2 01:59:36 $ACTION_MASSAGE_REMOVE:  
{"id":153} 

 Player 2 01:59:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":156,"_text":"Stack Was Emptied "}} 

 Player 2 01:59:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 01:59:36 $CLEAR_SE_VIS:  

 Player 2 02:01:04 $NEXT_STACK_ID:  

 Player 2 02:01:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Boom Fly"} 

 Player 2 02:01:04 $ADD_TO_STACK:  
{"stackEffect":{"entityId":21,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":229,"stackEffectType":4}} 

 Player 2 02:01:04 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":21,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":229,"stackEffectType":4}} 

 Player 2 02:01:04 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 02:01:04 $SHOW_STACK_EFFECT:  
{"effectId":21} 

 Player 1 02:01:04 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:01:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Boom Fly"} 

 Player 2 02:01:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":157,"_text":"Add DeclareAttack 21 "}} 

 Player 2 02:01:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:01:07 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":21,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":229,"stackEffectType":4}} 

 Player 2 02:01:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":158,"_text":"Response Adding DeclareAttack 21"},"childOfId":157} 

 Player 2 02:01:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":159,"_text":"Wait For Response From Player 2 "},"childOfId":157} 

 Player 2 02:01:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:01:07 $SHOW_REACTIONS:  
{"playerId":2,"cardsIds":[325,326,108,90,121]} 

 Player 2 02:01:11 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[325,326,108,90,121]} 

 Player 2 02:01:11 $ACTION_MASSAGE_REMOVE:  
{"id":159} 

 Player 2 02:01:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":160,"_text":"Wait For Response From Player 1 "},"childOfId":157} 

 Player 2 02:01:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:01:11 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:01:11 $SHOW_REACTIONS:  
{"playerId":1,"cardsIds":[310]} 

 Player 1 02:01:13 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[310]} 

 Player 1 02:01:13 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:01:13 $ACTION_MASSAGE_REMOVE:  
{"id":160} 

 Player 2 02:01:13 $ACTION_MASSAGE_REMOVE:  
{"id":158} 

 Player 2 02:01:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":161,"_text":"Resolve DeclareAttack 21 "}} 

 Player 2 02:01:13 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":21,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":229,"stackEffectType":4}} 

 Player 2 02:01:13 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":229,"particleType":5} 

 Player 2 02:01:13 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":5,"originStackId":21},"isAfterActivation":true,"index":5} 

 Player 2 02:01:13 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":21,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":229,"stackEffectType":4}} 

 Player 2 02:01:13 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":21} 

 Player 2 02:01:13 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 02:01:13 $SHOW_STACK_EFFECT:  
{"effectId":21} 

 Player 2 02:01:16 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":21} 

 Player 2 02:01:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":162,"_text":"Remove After Resolve DeclareAttack 21  "}} 

 Player 2 02:01:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:01:16 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":21,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":229,"stackEffectType":4}} 

 Player 2 02:01:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":163,"_text":"Response Remove After Resolve DeclareAttack 21"},"childOfId":162} 

 Player 2 02:01:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":164,"_text":"Wait For Response From Player 1 "},"childOfId":162} 

 Player 2 02:01:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:01:16 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:01:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Boom Fly"} 

 Player 1 02:01:16 $SHOW_REACTIONS:  
{"playerId":1,"cardsIds":[310]} 

 Player 1 02:01:38 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[310]} 

 Player 1 02:01:38 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:01:38 $ACTION_MASSAGE_REMOVE:  
{"id":164} 

 Player 2 02:01:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":165,"_text":"Wait For Response From Player 2 "},"childOfId":162} 

 Player 2 02:01:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:01:38 $ACTION_MASSAGE_REMOVE:  
{"id":165} 

 Player 2 02:01:39 $ACTION_MASSAGE_REMOVE:  
{"id":163} 

 Player 2 02:01:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":166,"_text":"Stack Was Emptied "}} 

 Player 2 02:01:39 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:01:39 $CLEAR_SE_VIS:  

 Player 2 02:01:47 $NEXT_STACK_ID:  

 Player 2 02:01:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Boom Fly<Monster>"} 

 Player 2 02:01:47 $ADD_TO_STACK:  
{"stackEffect":{"entityId":22,"creatorCardId":325,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":229}} 

 Player 2 02:01:47 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":22,"creatorCardId":325,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":229}} 

 Player 2 02:01:47 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 02:01:47 $SHOW_STACK_EFFECT:  
{"effectId":22} 

 Player 1 02:01:47 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:01:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Boom Fly<Monster>"} 

 Player 2 02:01:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":167,"_text":"Add AttackRoll 22 "}} 

 Player 2 02:01:50 $ROLL_DICE:  
{"playerId":2} 

 Player 2 02:01:52 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":1} 

 Player 2 02:01:52 $UPDATE_STACK_VIS:  
{"stackId":22,"text":"player rolled 1 vs Boom Fly<Monster>"} 

 Player 2 02:01:52 $SHOW_DICE_ROLL:  
{"stackId":22} 

 Player 2 02:01:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Boom Fly<Monster>"} 

 Player 2 02:01:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:01:55 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":22,"creatorCardId":325,"numberRolled":1,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":229}} 

 Player 2 02:01:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":168,"_text":"Response Adding AttackRoll 22"},"childOfId":167} 

 Player 2 02:01:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":169,"_text":"Wait For Response From Player 2 "},"childOfId":167} 

 Player 2 02:01:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:01:55 $SHOW_REACTIONS:  
{"playerId":2,"cardsIds":[325,326,108,90,121]} 

 Player 1 02:01:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Boom Fly<Monster>"} 

 Player 1 02:01:56 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[310]} 

 Player 1 02:01:56 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 1 02:01:56 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[310]} 

 Player 1 02:01:56 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:01:59 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[325,326,108,90,121]} 

 Player 2 02:01:59 $NEXT_STACK_ID:  

 Player 2 02:01:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Boom Fly<Monster>"} 

 Player 2 02:01:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Boom Fly<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 02:01:59 $ADD_TO_STACK:  
{"stackEffect":{"entityId":23,"creatorCardId":325,"hasLockingStackEffect":false,"itemToPlayCardId":326,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 02:01:59 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":23,"creatorCardId":325,"hasLockingStackEffect":false,"itemToPlayCardId":326,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 02:01:59 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 02:01:59 $SHOW_STACK_EFFECT:  
{"effectId":23} 

 Player 1 02:01:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Boom Fly<Monster>"} 

 Player 1 02:01:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Boom Fly<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 02:02:01 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[325,326,108,90,121]} 

 Player 2 02:02:01 $RESPOND_TO:  
{"playerId":-1,"stackEffectResponse":false} 

 Player 2 02:02:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":170,"_text":"Add ActivateItem 23 "}} 

 Player 2 02:02:05 $SHOW_DECISION:  
{"startCardId":326,"endCardId":325} 

 Player 2 02:02:08 $USE_ITEM:  
{"cardId":326} 

 Player 2 02:02:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:02:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Boom Fly<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 02:02:08 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":23,"creatorCardId":325,"hasLockingStackEffect":false,"itemToPlayCardId":326,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 02:02:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":171,"_text":"Response Adding ActivateItem 23"},"childOfId":170} 

 Player 2 02:02:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":172,"_text":"Wait For Response From Player 2 "},"childOfId":170} 

 Player 2 02:02:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:02:08 $ACTION_MASSAGE_REMOVE:  
{"id":172} 

 Player 2 02:02:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":173,"_text":"Wait For Response From Player 1 "},"childOfId":170} 

 Player 2 02:02:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:02:09 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:02:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Boom Fly<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 1 02:02:09 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[310]} 

 Player 1 02:02:09 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:02:09 $ACTION_MASSAGE_REMOVE:  
{"id":173} 

 Player 2 02:02:09 $ACTION_MASSAGE_REMOVE:  
{"id":171} 

 Player 2 02:02:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":174,"_text":"Resolve ActivateItem 23 "}} 

 Player 2 02:02:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Boom Fly<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 02:02:09 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":23,"creatorCardId":325,"hasLockingStackEffect":false,"itemToPlayCardId":326,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 02:02:09 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":326,"particleType":6} 

 Player 1 02:02:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Boom Fly<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 02:02:11 $DISABLE_PARTICLE_EFFECT:  
{"cardId":326,"particleType":6} 

 Player 2 02:02:11 $REGISTER_ONE_TURN_PASSIVE_EFFECT:  
{"cardId":326,"effectIndex":{"type":3,"index":0},"conditionData":[{"effectTargets":[325],"chainEffectsData":[],"methodArgs":[],"isPassive":false,"effectCard":326,"effectCardOwner":325,"effectCardPlayer":325}]} 

 Player 2 02:02:11 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ACTIVATE_ITEM","args":[{"type":0,"number":326}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 

 Player 2 02:02:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Boom Fly<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 02:02:11 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":23,"creatorCardId":325,"hasLockingStackEffect":false,"itemToPlayCardId":326,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 02:02:11 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":23} 

 Player 2 02:02:11 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 02:02:11 $SHOW_STACK_EFFECT:  
{"effectId":23} 

 Player 1 02:02:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Boom Fly<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 02:02:14 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":23} 

 Player 2 02:02:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":175,"_text":"Remove After Resolve ActivateItem 23  "}} 

 Player 2 02:02:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Boom Fly<Monster>"} 

 Player 2 02:02:14 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":23,"creatorCardId":325,"hasLockingStackEffect":false,"itemToPlayCardId":326,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 02:02:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":176,"_text":"Response Remove After Resolve ActivateItem 23"},"childOfId":175} 

 Player 2 02:02:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":177,"_text":"Wait For Response From Player 1 "},"childOfId":175} 

 Player 2 02:02:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:02:14 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:02:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Boom Fly<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 1 02:02:14 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[310]} 

 Player 1 02:02:14 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:02:14 $ACTION_MASSAGE_REMOVE:  
{"id":177} 

 Player 2 02:02:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":178,"_text":"Wait For Response From Player 2 "},"childOfId":175} 

 Player 2 02:02:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:02:14 $ACTION_MASSAGE_REMOVE:  
{"id":178} 

 Player 2 02:02:14 $ACTION_MASSAGE_REMOVE:  
{"id":176} 

 Player 2 02:02:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":179,"_text":"Resolve AttackRoll 22 "}} 

 Player 2 02:02:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Boom Fly<Monster>"} 

 Player 2 02:02:14 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":22,"creatorCardId":325,"numberRolled":1,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":229}} 

 Player 2 02:02:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":180,"_text":"Added 0 to original roll"}} 

 Player 2 02:02:14 $NEXT_STACK_ID:  

 Player 2 02:02:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:02:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Boom Fly combat damage to The Lost \n2:Player 2 rolled 1 vs Boom Fly<Monster>"} 

 Player 2 02:02:14 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":24,"creatorCardId":325,"entityToDoDamageCardId":229,"entityToTakeDamageCardId":325,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1}} 

 Player 2 02:02:14 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 02:02:14 $SHOW_STACK_EFFECT:  
{"effectId":24} 

 Player 1 02:02:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Boom Fly<Monster>"} 

 Player 1 02:02:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Boom Fly<Monster>"} 

 Player 2 02:02:17 $CLEAR_SE_VIS:  

 Player 2 02:02:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Boom Fly combat damage to The Lost \n2:Player 2 rolled 1 vs Boom Fly<Monster>"} 

 Player 2 02:02:17 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":24,"creatorCardId":325,"entityToDoDamageCardId":229,"entityToTakeDamageCardId":325,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1}} 

 Player 2 02:02:17 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":22,"creatorCardId":325,"numberRolled":1,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":229}} 

 Player 2 02:02:17 $REPLACE_STACK:  
{"currentStack":[{"entityId":24,"creatorCardId":325,"entityToDoDamageCardId":229,"entityToTakeDamageCardId":325,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1},{"entityId":22,"creatorCardId":325,"numberRolled":1,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":229}]} 

 Player 2 02:02:17 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":7,"originStackId":22},"isAfterActivation":true,"index":7} 

 Player 2 02:02:17 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":22,"creatorCardId":325,"numberRolled":1,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":229}} 

 Player 2 02:02:17 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":22} 

 Player 2 02:02:17 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 02:02:17 $SHOW_STACK_EFFECT:  
{"effectId":22} 

 Player 1 02:02:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Boom Fly<Monster>"} 

 Player 1 02:02:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Boom Fly combat damage to The Lost \n2:Player 2 is rolling against Boom Fly<Monster>"} 

 Player 2 02:02:20 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":22} 

 Player 2 02:02:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":181,"_text":"Remove After Resolve AttackRoll 22  "}} 

 Player 2 02:02:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Boom Fly combat damage to The Lost"} 

 Player 2 02:02:20 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":22,"creatorCardId":325,"numberRolled":1,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":229}} 

 Player 2 02:02:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":182,"_text":"Response Remove After Resolve AttackRoll 22"},"childOfId":181} 

 Player 2 02:02:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":183,"_text":"Wait For Response From Player 2 "},"childOfId":181} 

 Player 2 02:02:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:02:20 $ACTION_MASSAGE_REMOVE:  
{"id":183} 

 Player 2 02:02:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":184,"_text":"Wait For Response From Player 1 "},"childOfId":181} 

 Player 2 02:02:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:02:20 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:02:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Boom Fly combat damage to The Lost \n2:Player 2 is rolling against Boom Fly<Monster>"} 

 Player 1 02:02:20 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[310]} 

 Player 1 02:02:20 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:02:20 $ACTION_MASSAGE_REMOVE:  
{"id":184} 

 Player 2 02:02:20 $ACTION_MASSAGE_REMOVE:  
{"id":182} 

 Player 2 02:02:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":185,"_text":"Resolve CombatDamage 24 "}} 

 Player 2 02:02:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Boom Fly combat damage to The Lost"} 

 Player 2 02:02:21 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":24,"creatorCardId":325,"entityToDoDamageCardId":229,"entityToTakeDamageCardId":325,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1}} 

 Player 2 02:02:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Boom Fly 1 combat damage to The Lost"} 

 Player 2 02:02:21 $UPDATE_STACK_VIS:  
{"stackId":24,"text":"Boom Fly will deal 1 combat damage to The Lost"} 

 Player 2 02:02:21 $PLAYER_GET_HIT:  
{"playerId":2,"damage":1,"damageDealerId":229} 

 Player 2 02:02:21 $NEXT_STACK_ID:  

 Player 2 02:02:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:02:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Boom Fly 1 combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 02:02:21 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":25,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":229}} 

 Player 2 02:02:21 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 02:02:21 $SHOW_STACK_EFFECT:  
{"effectId":25} 

 Player 1 02:02:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Boom Fly combat damage to The Lost"} 

 Player 2 02:02:23 $CLEAR_SE_VIS:  

 Player 2 02:02:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Boom Fly 1 combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 02:02:24 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":24,"creatorCardId":325,"entityToDoDamageCardId":229,"entityToTakeDamageCardId":325,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1}} 

 Player 2 02:02:24 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":25,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":229}} 

 Player 2 02:02:24 $REPLACE_STACK:  
{"currentStack":[{"entityId":24,"creatorCardId":325,"entityToDoDamageCardId":229,"entityToTakeDamageCardId":325,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1},{"entityId":25,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":229}]} 

 Player 2 02:02:24 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":229}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":8,"originStackId":-1},"isAfterActivation":true,"index":8} 

 Player 2 02:02:24 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_TAKEN","args":[{"type":2,"number":1},{"type":2,"number":1},{"type":0,"number":229}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":9,"originStackId":24},"isAfterActivation":true,"index":9} 

 Player 2 02:02:24 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":24} 

 Player 2 02:02:24 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 02:02:24 $SHOW_STACK_EFFECT:  
{"effectId":24} 

 Player 1 02:02:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Boom Fly combat damage to The Lost"} 

 Player 2 02:02:26 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":24} 

 Player 2 02:02:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":186,"_text":"Remove After Resolve CombatDamage 24  "}} 

 Player 2 02:02:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 02:02:27 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":24,"creatorCardId":325,"entityToDoDamageCardId":229,"entityToTakeDamageCardId":325,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1}} 

 Player 2 02:02:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":187,"_text":"Response Remove After Resolve CombatDamage 24"},"childOfId":186} 

 Player 2 02:02:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":188,"_text":"Wait For Response From Player 2 "},"childOfId":186} 

 Player 2 02:02:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:02:27 $ACTION_MASSAGE_REMOVE:  
{"id":188} 

 Player 2 02:02:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":189,"_text":"Wait For Response From Player 1 "},"childOfId":186} 

 Player 2 02:02:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:02:27 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:02:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Boom Fly combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 1 02:02:27 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[310]} 

 Player 1 02:02:27 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:02:27 $ACTION_MASSAGE_REMOVE:  
{"id":189} 

 Player 2 02:02:27 $ACTION_MASSAGE_REMOVE:  
{"id":187} 

 Player 2 02:02:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":190,"_text":"Resolve PlayerDeath 25 "}} 

 Player 2 02:02:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 02:02:27 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":25,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":229}} 

 Player 2 02:02:27 $DISABLE_PARTICLE_EFFECT:  
{"cardId":229,"particleType":5} 

 Player 2 02:02:27 $CANCEL_ATTACK:  

 Player 2 02:02:27 $NEXT_STACK_ID:  

 Player 2 02:02:27 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_PAY_DEATH_PANELTIES","args":[],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":1,"originStackId":26},"isAfterActivation":false,"index":1} 

 Player 2 02:02:27 $NEXT_STACK_ID:  

 Player 2 02:02:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 

 Player 2 02:02:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 2 02:02:27 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":27,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":326,"effctType":3},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 02:02:27 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":27,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":326,"effctType":3},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 02:02:27 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 02:02:27 $SHOW_STACK_EFFECT:  
{"effectId":27} 

 Player 1 02:02:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Boom Fly combat damage to The Lost"} 

 Player 1 02:02:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Boom Fly combat damage to The Lost"} 

 Player 1 02:02:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Boom Fly combat damage to The Lost \n2:Activate HolyMantle "} 

 Player 2 02:02:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":191,"_text":"Add ActivatePassiveEffect 27 "}} 

 Player 2 02:02:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 2 02:02:30 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":27,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":326,"effctType":3},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 02:02:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":192,"_text":"Response Adding ActivatePassiveEffect 27"},"childOfId":191} 

 Player 2 02:02:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":193,"_text":"Wait For Response From Player 1 "},"childOfId":191} 

 Player 2 02:02:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:02:30 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:02:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Boom Fly combat damage to The Lost \n2:Activate HolyMantle "} 

 Player 1 02:02:30 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[310]} 

 Player 1 02:02:30 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:02:30 $ACTION_MASSAGE_REMOVE:  
{"id":193} 

 Player 2 02:02:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":194,"_text":"Wait For Response From Player 2 "},"childOfId":191} 

 Player 2 02:02:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:02:30 $ACTION_MASSAGE_REMOVE:  
{"id":194} 

 Player 2 02:02:30 $ACTION_MASSAGE_REMOVE:  
{"id":192} 

 Player 2 02:02:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":195,"_text":"Resolve ActivatePassiveEffect 27 "}} 

 Player 2 02:02:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 2 02:02:30 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":27,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":326,"effctType":3},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 02:02:30 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":326,"particleType":6} 

 Player 1 02:02:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Boom Fly combat damage to The Lost \n2:Activate HolyMantle "} 

 Player 2 02:02:32 $DISABLE_PARTICLE_EFFECT:  
{"cardId":326,"particleType":6} 

 Player 2 02:02:32 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":26} 

 Player 2 02:02:32 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":26} 

 Player 2 02:02:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":196,"_text":"Fizzle PlayerDeathPenalties 26"}} 

 Player 2 02:02:32 $FIZZLE_STACK_EFFECT:  
{"entityId":26} 

 Player 2 02:02:32 $PLAYER_HEAL:  
{"playerId":2,"hpToHeal":1,"healDown":true} 

 Player 2 02:02:32 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_PAY_DEATH_PANELTIES","args":[],"result":null,"preventMethod":true,"methodScopeId":325,"scopeIsPlayer":true,"index":1,"originStackId":26},"isAfterActivation":false,"index":1} 

 Player 2 02:02:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 2 02:02:32 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":27,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 02:02:32 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":27} 

 Player 2 02:02:32 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 02:02:33 $SHOW_STACK_EFFECT:  
{"effectId":27} 

 Player 1 02:02:33 $PLAYER_HEAL:  
{"playerId":2,"hpToHeal":1} 

 Player 1 02:02:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Boom Fly combat damage to The Lost \n2:Activate HolyMantle "} 

 Player 2 02:02:35 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":27} 

 Player 2 02:02:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":197,"_text":"Remove After Resolve ActivatePassiveEffect 27  "}} 

 Player 2 02:02:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 02:02:35 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":27,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 02:02:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":198,"_text":"Response Remove After Resolve ActivatePassiveEffect 27"},"childOfId":197} 

 Player 2 02:02:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":199,"_text":"Wait For Response From Player 2 "},"childOfId":197} 

 Player 2 02:02:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:02:35 $ACTION_MASSAGE_REMOVE:  
{"id":199} 

 Player 2 02:02:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":200,"_text":"Wait For Response From Player 1 "},"childOfId":197} 

 Player 2 02:02:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:02:35 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:02:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Boom Fly combat damage to The Lost \n2:Activate HolyMantle "} 

 Player 1 02:02:36 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[310]} 

 Player 1 02:02:36 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:02:36 $ACTION_MASSAGE_REMOVE:  
{"id":200} 

 Player 2 02:02:36 $ACTION_MASSAGE_REMOVE:  
{"id":198} 

 Player 2 02:02:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":201,"_text":"Resolve PlayerDeath 25 "}} 

 Player 2 02:02:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 02:02:36 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":25,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":229}} 

 Player 2 02:02:36 $NEXT_STACK_ID:  

 Player 2 02:02:36 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_PAY_DEATH_PANELTIES","args":[],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":2,"originStackId":28},"isAfterActivation":false,"index":2} 

 Player 2 02:02:36 $NEXT_STACK_ID:  

 Player 2 02:02:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 

 Player 2 02:02:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 2 02:02:36 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":29,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":326,"effctType":3},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 02:02:36 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":29,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":326,"effctType":3},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 02:02:36 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 02:02:36 $SHOW_STACK_EFFECT:  
{"effectId":29} 

 Player 1 02:02:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Boom Fly combat damage to The Lost"} 

 Player 1 02:02:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Boom Fly combat damage to The Lost"} 

 Player 1 02:02:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Boom Fly combat damage to The Lost \n2:Activate HolyMantle "} 

 Player 2 02:02:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":202,"_text":"Add ActivatePassiveEffect 29 "}} 

 Player 2 02:02:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 2 02:02:39 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":29,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":326,"effctType":3},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 02:02:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":203,"_text":"Response Adding ActivatePassiveEffect 29"},"childOfId":202} 

 Player 2 02:02:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":204,"_text":"Wait For Response From Player 1 "},"childOfId":202} 

 Player 2 02:02:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:02:39 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:02:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Boom Fly combat damage to The Lost \n2:Activate HolyMantle "} 

 Player 1 02:02:39 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[310]} 

 Player 1 02:02:39 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:02:39 $ACTION_MASSAGE_REMOVE:  
{"id":204} 

 Player 2 02:02:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":205,"_text":"Wait For Response From Player 2 "},"childOfId":202} 

 Player 2 02:02:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:02:39 $ACTION_MASSAGE_REMOVE:  
{"id":205} 

 Player 2 02:02:39 $ACTION_MASSAGE_REMOVE:  
{"id":203} 

 Player 2 02:02:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":206,"_text":"Resolve ActivatePassiveEffect 29 "}} 

 Player 2 02:02:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 2 02:02:39 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":29,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":326,"effctType":3},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 02:02:39 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":326,"particleType":6} 

 Player 1 02:02:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Boom Fly combat damage to The Lost \n2:Activate HolyMantle "} 

 Player 2 02:02:41 $DISABLE_PARTICLE_EFFECT:  
{"cardId":326,"particleType":6} 

 Player 2 02:02:41 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":28} 

 Player 2 02:02:41 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":28} 

 Player 2 02:02:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":207,"_text":"Fizzle PlayerDeathPenalties 28"}} 

 Player 2 02:02:41 $FIZZLE_STACK_EFFECT:  
{"entityId":28} 

 Player 2 02:02:41 $PLAYER_HEAL:  
{"playerId":2,"hpToHeal":1,"healDown":true} 

 Player 2 02:02:41 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_PAY_DEATH_PANELTIES","args":[],"result":null,"preventMethod":true,"methodScopeId":325,"scopeIsPlayer":true,"index":2,"originStackId":28},"isAfterActivation":false,"index":2} 

 Player 2 02:02:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 2 02:02:41 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":29,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 02:02:41 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":29} 

 Player 2 02:02:41 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 02:02:41 $SHOW_STACK_EFFECT:  
{"effectId":29} 

 Player 1 02:02:41 $PLAYER_HEAL:  
{"playerId":2,"hpToHeal":1} 

 Player 1 02:02:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Boom Fly combat damage to The Lost \n2:Activate HolyMantle "} 

 Player 2 02:02:44 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":29} 

 Player 2 02:02:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":208,"_text":"Remove After Resolve ActivatePassiveEffect 29  "}} 

 Player 2 02:02:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 02:02:44 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":29,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 02:02:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":209,"_text":"Response Remove After Resolve ActivatePassiveEffect 29"},"childOfId":208} 

 Player 2 02:02:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":210,"_text":"Wait For Response From Player 2 "},"childOfId":208} 

 Player 2 02:02:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:02:44 $ACTION_MASSAGE_REMOVE:  
{"id":210} 

 Player 2 02:02:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":211,"_text":"Wait For Response From Player 1 "},"childOfId":208} 

 Player 2 02:02:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:02:44 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:02:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Boom Fly combat damage to The Lost \n2:Activate HolyMantle "} 

 Player 1 02:02:44 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[310]} 

 Player 1 02:02:44 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:02:44 $ACTION_MASSAGE_REMOVE:  
{"id":211} 

 Player 2 02:02:44 $ACTION_MASSAGE_REMOVE:  
{"id":209} 

 Player 2 02:02:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":212,"_text":"Resolve PlayerDeath 25 "}} 

 Player 2 02:02:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 02:02:44 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":25,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":229}} 

 Player 2 02:02:44 $NEXT_STACK_ID:  

 Player 2 02:02:44 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_PAY_DEATH_PANELTIES","args":[],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":3,"originStackId":30},"isAfterActivation":false,"index":3} 

 Player 2 02:02:44 $NEXT_STACK_ID:  

 Player 2 02:02:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 

 Player 2 02:02:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 2 02:02:44 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":31,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":326,"effctType":3},"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 02:02:45 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":31,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":326,"effctType":3},"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 02:02:45 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 02:02:45 $SHOW_STACK_EFFECT:  
{"effectId":31} 

 Player 1 02:02:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Boom Fly combat damage to The Lost"} 

 Player 1 02:02:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Boom Fly combat damage to The Lost"} 

 Player 1 02:02:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Boom Fly combat damage to The Lost \n2:Activate HolyMantle "} 

 Player 2 02:02:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":213,"_text":"Add ActivatePassiveEffect 31 "}} 

 Player 2 02:02:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 2 02:02:47 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":31,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":326,"effctType":3},"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 02:02:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":214,"_text":"Response Adding ActivatePassiveEffect 31"},"childOfId":213} 

 Player 2 02:02:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":215,"_text":"Wait For Response From Player 1 "},"childOfId":213} 

 Player 2 02:02:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:02:47 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:02:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Boom Fly combat damage to The Lost \n2:Activate HolyMantle "} 

 Player 1 02:02:48 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[310]} 

 Player 1 02:02:48 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:02:48 $ACTION_MASSAGE_REMOVE:  
{"id":215} 

 Player 2 02:02:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":216,"_text":"Wait For Response From Player 2 "},"childOfId":213} 

 Player 2 02:02:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:02:48 $ACTION_MASSAGE_REMOVE:  
{"id":216} 

 Player 2 02:02:48 $ACTION_MASSAGE_REMOVE:  
{"id":214} 

 Player 2 02:02:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":217,"_text":"Resolve ActivatePassiveEffect 31 "}} 

 Player 2 02:02:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 2 02:02:48 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":31,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":326,"effctType":3},"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 02:02:48 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":326,"particleType":6} 

 Player 1 02:02:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Boom Fly combat damage to The Lost \n2:Activate HolyMantle "} 

 Player 2 02:02:50 $DISABLE_PARTICLE_EFFECT:  
{"cardId":326,"particleType":6} 

 Player 2 02:02:50 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":30} 

 Player 2 02:02:50 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":30} 

 Player 2 02:02:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":218,"_text":"Fizzle PlayerDeathPenalties 30"}} 

 Player 2 02:02:50 $FIZZLE_STACK_EFFECT:  
{"entityId":30} 

 Player 2 02:02:50 $PLAYER_HEAL:  
{"playerId":2,"hpToHeal":1,"healDown":true} 

 Player 2 02:02:50 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_PAY_DEATH_PANELTIES","args":[],"result":null,"preventMethod":true,"methodScopeId":325,"scopeIsPlayer":true,"index":3,"originStackId":30},"isAfterActivation":false,"index":3} 

 Player 2 02:02:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 2 02:02:50 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":31,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 02:02:50 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":31} 

 Player 2 02:02:50 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 02:02:50 $SHOW_STACK_EFFECT:  
{"effectId":31} 

 Player 1 02:02:50 $PLAYER_HEAL:  
{"playerId":2,"hpToHeal":1} 

 Player 1 02:02:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Boom Fly combat damage to The Lost \n2:Activate HolyMantle "} 

 Player 2 02:02:53 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":31} 

 Player 2 02:02:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":219,"_text":"Remove After Resolve ActivatePassiveEffect 31  "}} 

 Player 2 02:02:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 02:02:53 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":31,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 02:02:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":220,"_text":"Response Remove After Resolve ActivatePassiveEffect 31"},"childOfId":219} 

 Player 2 02:02:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":221,"_text":"Wait For Response From Player 2 "},"childOfId":219} 

 Player 2 02:02:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:02:53 $ACTION_MASSAGE_REMOVE:  
{"id":221} 

 Player 2 02:02:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":222,"_text":"Wait For Response From Player 1 "},"childOfId":219} 

 Player 2 02:02:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:02:53 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:02:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Boom Fly combat damage to The Lost \n2:Activate HolyMantle "} 

 Player 1 02:02:53 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[310]} 

 Player 1 02:02:53 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:02:53 $ACTION_MASSAGE_REMOVE:  
{"id":222} 

 Player 2 02:02:53 $ACTION_MASSAGE_REMOVE:  
{"id":220} 

 Player 2 02:02:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":223,"_text":"Resolve PlayerDeath 25 "}} 

 Player 2 02:02:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 02:02:53 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":25,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":229}} 

 Player 2 02:02:53 $NEXT_STACK_ID:  

 Player 2 02:02:53 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_PAY_DEATH_PANELTIES","args":[],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":4,"originStackId":32},"isAfterActivation":false,"index":4} 

 Player 2 02:02:53 $NEXT_STACK_ID:  

 Player 2 02:02:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 

 Player 2 02:02:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 2 02:02:53 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":33,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":326,"effctType":3},"isAfterActivation":false,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 02:02:53 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":33,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":326,"effctType":3},"isAfterActivation":false,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 02:02:53 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 02:02:53 $SHOW_STACK_EFFECT:  
{"effectId":33} 

 Player 1 02:02:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Boom Fly combat damage to The Lost"} 

 Player 1 02:02:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Boom Fly combat damage to The Lost"} 

 Player 1 02:02:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Boom Fly combat damage to The Lost \n2:Activate HolyMantle "} 

 Player 2 02:02:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":224,"_text":"Add ActivatePassiveEffect 33 "}} 

 Player 2 02:02:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 2 02:02:56 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":33,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":326,"effctType":3},"isAfterActivation":false,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 02:02:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":225,"_text":"Response Adding ActivatePassiveEffect 33"},"childOfId":224} 

 Player 2 02:02:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":226,"_text":"Wait For Response From Player 1 "},"childOfId":224} 

 Player 2 02:02:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:02:56 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:02:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Boom Fly combat damage to The Lost \n2:Activate HolyMantle "} 

 Player 1 02:02:56 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[310]} 

 Player 1 02:02:56 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:02:56 $ACTION_MASSAGE_REMOVE:  
{"id":226} 

 Player 2 02:02:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":227,"_text":"Wait For Response From Player 2 "},"childOfId":224} 

 Player 2 02:02:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:02:56 $SHOW_REACTIONS:  
{"playerId":2,"cardsIds":[325,108,90,121]} 

 Player 2 02:03:29 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[325,108,90,121]} 

 Player 2 02:03:29 $ACTION_MASSAGE_REMOVE:  
{"id":227} 

 Player 2 02:03:29 $ACTION_MASSAGE_REMOVE:  
{"id":225} 

 Player 2 02:03:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":228,"_text":"Resolve ActivatePassiveEffect 33 "}} 

 Player 2 02:03:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 2 02:03:29 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":33,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":326,"effctType":3},"isAfterActivation":false,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 02:03:29 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":326,"particleType":6} 

 Player 1 02:03:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Boom Fly combat damage to The Lost \n2:Activate HolyMantle "} 

 Player 2 02:03:31 $DISABLE_PARTICLE_EFFECT:  
{"cardId":326,"particleType":6} 

 Player 2 02:03:31 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":32} 

 Player 2 02:03:31 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":32} 

 Player 2 02:03:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":229,"_text":"Fizzle PlayerDeathPenalties 32"}} 

 Player 2 02:03:31 $FIZZLE_STACK_EFFECT:  
{"entityId":32} 

 Player 2 02:03:31 $PLAYER_HEAL:  
{"playerId":2,"hpToHeal":1,"healDown":true} 

 Player 2 02:03:31 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_PAY_DEATH_PANELTIES","args":[],"result":null,"preventMethod":true,"methodScopeId":325,"scopeIsPlayer":true,"index":4,"originStackId":32},"isAfterActivation":false,"index":4} 

 Player 2 02:03:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 2 02:03:31 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":33,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"isAfterActivation":false,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 02:03:31 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":33} 

 Player 2 02:03:31 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 02:03:32 $SHOW_STACK_EFFECT:  
{"effectId":33} 

 Player 1 02:03:32 $PLAYER_HEAL:  
{"playerId":2,"hpToHeal":1} 

 Player 1 02:03:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Boom Fly combat damage to The Lost \n2:Activate HolyMantle "} 

 Player 2 02:03:34 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":33} 

 Player 2 02:03:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":230,"_text":"Remove After Resolve ActivatePassiveEffect 33  "}} 

 Player 2 02:03:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 02:03:34 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":33,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"isAfterActivation":false,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 02:03:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":231,"_text":"Response Remove After Resolve ActivatePassiveEffect 33"},"childOfId":230} 

 Player 2 02:03:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":232,"_text":"Wait For Response From Player 2 "},"childOfId":230} 

 Player 2 02:03:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:03:34 $SHOW_REACTIONS:  
{"playerId":2,"cardsIds":[325,108,90,121]} 

 Player 1 02:03:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Boom Fly combat damage to The Lost \n2:Activate HolyMantle "} 

 Player 2 02:03:37 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[325,108,90,121]} 

 Player 2 02:03:37 $ACTION_MASSAGE_REMOVE:  
{"id":232} 

 Player 2 02:03:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":233,"_text":"Wait For Response From Player 1 "},"childOfId":230} 

 Player 2 02:03:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:03:37 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:03:37 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[310]} 

 Player 1 02:03:37 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:03:37 $ACTION_MASSAGE_REMOVE:  
{"id":233} 

 Player 2 02:03:37 $ACTION_MASSAGE_REMOVE:  
{"id":231} 

 Player 2 02:03:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":234,"_text":"Resolve PlayerDeath 25 "}} 

 Player 2 02:03:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 02:03:37 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":25,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":229}} 

 Player 2 02:03:37 $NEXT_STACK_ID:  

 Player 2 02:03:37 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_PAY_DEATH_PANELTIES","args":[],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":5,"originStackId":34},"isAfterActivation":false,"index":5} 

 Player 2 02:03:37 $NEXT_STACK_ID:  

 Player 2 02:03:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 

 Player 2 02:03:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 2 02:03:38 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":35,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":326,"effctType":3},"isAfterActivation":false,"index":5,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 02:03:38 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":35,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":326,"effctType":3},"isAfterActivation":false,"index":5,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 02:03:38 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 02:03:38 $SHOW_STACK_EFFECT:  
{"effectId":35} 

 Player 1 02:03:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Boom Fly combat damage to The Lost"} 

 Player 1 02:03:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Boom Fly combat damage to The Lost"} 

 Player 1 02:03:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Boom Fly combat damage to The Lost \n2:Activate HolyMantle "} 

 Player 2 02:03:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":235,"_text":"Add ActivatePassiveEffect 35 "}} 

 Player 2 02:03:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 2 02:03:40 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":35,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":326,"effctType":3},"isAfterActivation":false,"index":5,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 02:03:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":236,"_text":"Response Adding ActivatePassiveEffect 35"},"childOfId":235} 

 Player 2 02:03:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":237,"_text":"Wait For Response From Player 1 "},"childOfId":235} 

 Player 2 02:03:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:03:40 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:03:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Boom Fly combat damage to The Lost \n2:Activate HolyMantle "} 

 Player 1 02:03:41 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[310]} 

 Player 1 02:03:41 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:03:41 $ACTION_MASSAGE_REMOVE:  
{"id":237} 

 Player 2 02:03:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":238,"_text":"Wait For Response From Player 2 "},"childOfId":235} 

 Player 2 02:03:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:03:41 $SHOW_REACTIONS:  
{"playerId":2,"cardsIds":[325,108,90,121]} 

 Player 2 02:04:08 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[325,108,90,121]} 

 Player 2 02:04:08 $ACTION_MASSAGE_REMOVE:  
{"id":238} 

 Player 2 02:04:08 $ACTION_MASSAGE_REMOVE:  
{"id":236} 

 Player 2 02:04:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":239,"_text":"Resolve ActivatePassiveEffect 35 "}} 

 Player 2 02:04:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 2 02:04:08 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":35,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":326,"effctType":3},"isAfterActivation":false,"index":5,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 02:04:08 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":326,"particleType":6} 

 Player 1 02:04:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Boom Fly combat damage to The Lost \n2:Activate HolyMantle "} 

 Player 2 02:04:10 $DISABLE_PARTICLE_EFFECT:  
{"cardId":326,"particleType":6} 

 Player 2 02:04:10 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":34} 

 Player 2 02:04:10 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":34} 

 Player 2 02:04:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":240,"_text":"Fizzle PlayerDeathPenalties 34"}} 

 Player 2 02:04:10 $FIZZLE_STACK_EFFECT:  
{"entityId":34} 

 Player 2 02:04:10 $PLAYER_HEAL:  
{"playerId":2,"hpToHeal":1,"healDown":true} 

 Player 2 02:04:10 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_PAY_DEATH_PANELTIES","args":[],"result":null,"preventMethod":true,"methodScopeId":325,"scopeIsPlayer":true,"index":5,"originStackId":34},"isAfterActivation":false,"index":5} 

 Player 2 02:04:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 2 02:04:10 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":35,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"isAfterActivation":false,"index":5,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 02:04:10 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":35} 

 Player 2 02:04:10 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 02:04:10 $SHOW_STACK_EFFECT:  
{"effectId":35} 

 Player 1 02:04:10 $PLAYER_HEAL:  
{"playerId":2,"hpToHeal":1} 

 Player 1 02:04:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Boom Fly combat damage to The Lost \n2:Activate HolyMantle "} 

 Player 2 02:04:13 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":35} 

 Player 2 02:04:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":241,"_text":"Remove After Resolve ActivatePassiveEffect 35  "}} 

 Player 2 02:04:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 02:04:13 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":35,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"isAfterActivation":false,"index":5,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 02:04:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":242,"_text":"Response Remove After Resolve ActivatePassiveEffect 35"},"childOfId":241} 

 Player 2 02:04:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":243,"_text":"Wait For Response From Player 2 "},"childOfId":241} 

 Player 2 02:04:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:04:13 $SHOW_REACTIONS:  
{"playerId":2,"cardsIds":[325,108,90,121]} 

 Player 1 02:04:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Boom Fly combat damage to The Lost \n2:Activate HolyMantle "} 

 Player 2 02:04:17 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[325,108,90,121]} 

 Player 2 02:04:17 $ACTION_MASSAGE_REMOVE:  
{"id":243} 

 Player 2 02:04:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":244,"_text":"Wait For Response From Player 1 "},"childOfId":241} 

 Player 2 02:04:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:04:18 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:04:18 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[310]} 

 Player 1 02:04:18 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:04:18 $ACTION_MASSAGE_REMOVE:  
{"id":244} 

 Player 2 02:04:18 $ACTION_MASSAGE_REMOVE:  
{"id":242} 

 Player 2 02:04:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":245,"_text":"Resolve PlayerDeath 25 "}} 

 Player 2 02:04:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 02:04:18 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":25,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":229}} 

 Player 2 02:04:18 $NEXT_STACK_ID:  

 Player 2 02:04:18 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_PAY_DEATH_PANELTIES","args":[],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":6,"originStackId":36},"isAfterActivation":false,"index":6} 

 Player 2 02:04:18 $NEXT_STACK_ID:  

 Player 2 02:04:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 

 Player 2 02:04:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 2 02:04:18 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":37,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":326,"effctType":3},"isAfterActivation":false,"index":6,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 02:04:18 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":37,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":326,"effctType":3},"isAfterActivation":false,"index":6,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 02:04:18 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 02:04:18 $SHOW_STACK_EFFECT:  
{"effectId":37} 

 Player 1 02:04:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Boom Fly combat damage to The Lost"} 

 Player 1 02:04:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Boom Fly combat damage to The Lost"} 

 Player 1 02:04:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Boom Fly combat damage to The Lost \n2:Activate HolyMantle "} 

 Player 2 02:04:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":246,"_text":"Add ActivatePassiveEffect 37 "}} 

 Player 2 02:04:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 2 02:04:21 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":37,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":326,"effctType":3},"isAfterActivation":false,"index":6,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 02:04:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":247,"_text":"Response Adding ActivatePassiveEffect 37"},"childOfId":246} 

 Player 2 02:04:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":248,"_text":"Wait For Response From Player 1 "},"childOfId":246} 

 Player 2 02:04:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:04:21 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:04:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Boom Fly combat damage to The Lost \n2:Activate HolyMantle "} 

 Player 1 02:04:21 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[310]} 

 Player 1 02:04:21 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:04:21 $ACTION_MASSAGE_REMOVE:  
{"id":248} 

 Player 2 02:04:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":249,"_text":"Wait For Response From Player 2 "},"childOfId":246} 

 Player 2 02:04:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:04:21 $SHOW_REACTIONS:  
{"playerId":2,"cardsIds":[325,108,90,121]} 

 Player 2 02:05:51 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[325,108,90,121]} 

 Player 2 02:05:51 $ACTION_MASSAGE_REMOVE:  
{"id":249} 

 Player 2 02:05:51 $ACTION_MASSAGE_REMOVE:  
{"id":247} 

 Player 2 02:05:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":250,"_text":"Resolve ActivatePassiveEffect 37 "}} 

 Player 2 02:05:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 2 02:05:51 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":37,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":326,"effctType":3},"isAfterActivation":false,"index":6,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 02:05:51 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":326,"particleType":6} 

 Player 1 02:05:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Boom Fly combat damage to The Lost \n2:Activate HolyMantle "} 

 Player 2 02:05:53 $DISABLE_PARTICLE_EFFECT:  
{"cardId":326,"particleType":6} 

 Player 2 02:05:53 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":36} 

 Player 2 02:05:53 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":36} 

 Player 2 02:05:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":251,"_text":"Fizzle PlayerDeathPenalties 36"}} 

 Player 2 02:05:53 $FIZZLE_STACK_EFFECT:  
{"entityId":36} 

 Player 2 02:05:53 $PLAYER_HEAL:  
{"playerId":2,"hpToHeal":1,"healDown":true} 

 Player 2 02:05:53 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_PAY_DEATH_PANELTIES","args":[],"result":null,"preventMethod":true,"methodScopeId":325,"scopeIsPlayer":true,"index":6,"originStackId":36},"isAfterActivation":false,"index":6} 

 Player 2 02:05:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 2 02:05:53 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":37,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"isAfterActivation":false,"index":6,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 02:05:53 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":37} 

 Player 2 02:05:53 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 02:05:53 $SHOW_STACK_EFFECT:  
{"effectId":37} 

 Player 1 02:05:53 $PLAYER_HEAL:  
{"playerId":2,"hpToHeal":1} 

 Player 1 02:05:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Boom Fly combat damage to The Lost \n2:Activate HolyMantle "} 

 Player 2 02:05:56 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":37} 

 Player 2 02:05:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":252,"_text":"Remove After Resolve ActivatePassiveEffect 37  "}} 

 Player 2 02:05:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 02:05:56 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":37,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"isAfterActivation":false,"index":6,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 02:05:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":253,"_text":"Response Remove After Resolve ActivatePassiveEffect 37"},"childOfId":252} 

 Player 2 02:05:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":254,"_text":"Wait For Response From Player 2 "},"childOfId":252} 

 Player 2 02:05:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:05:56 $SHOW_REACTIONS:  
{"playerId":2,"cardsIds":[325,108,90,121]} 

 Player 1 02:05:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Boom Fly combat damage to The Lost \n2:Activate HolyMantle "} 

 Player 2 02:07:26 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[325,108,90,121]} 

 Player 2 02:07:26 $ACTION_MASSAGE_REMOVE:  
{"id":254} 

 Player 2 02:07:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":255,"_text":"Wait For Response From Player 1 "},"childOfId":252} 

 Player 2 02:07:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:07:26 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:07:26 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[310]} 

 Player 1 02:07:26 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:07:26 $ACTION_MASSAGE_REMOVE:  
{"id":255} 

 Player 2 02:07:26 $ACTION_MASSAGE_REMOVE:  
{"id":253} 

 Player 2 02:07:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":256,"_text":"Resolve PlayerDeath 25 "}} 

 Player 2 02:07:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 02:07:26 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":25,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":229}} 

 Player 2 02:07:27 $NEXT_STACK_ID:  

 Player 2 02:07:27 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_PAY_DEATH_PANELTIES","args":[],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":7,"originStackId":38},"isAfterActivation":false,"index":7} 

 Player 2 02:07:27 $NEXT_STACK_ID:  

 Player 2 02:07:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 

 Player 2 02:07:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 2 02:07:27 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":39,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":326,"effctType":3},"isAfterActivation":false,"index":7,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 02:07:27 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":39,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":326,"effctType":3},"isAfterActivation":false,"index":7,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 02:07:27 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 02:07:27 $SHOW_STACK_EFFECT:  
{"effectId":39} 

 Player 1 02:07:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Boom Fly combat damage to The Lost"} 

 Player 1 02:07:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Boom Fly combat damage to The Lost"} 

 Player 1 02:07:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Boom Fly combat damage to The Lost \n2:Activate HolyMantle "} 

 Player 2 02:07:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":257,"_text":"Add ActivatePassiveEffect 39 "}} 

 Player 2 02:07:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 2 02:07:29 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":39,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":326,"effctType":3},"isAfterActivation":false,"index":7,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 02:07:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":258,"_text":"Response Adding ActivatePassiveEffect 39"},"childOfId":257} 

 Player 2 02:07:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":259,"_text":"Wait For Response From Player 1 "},"childOfId":257} 

 Player 2 02:07:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:07:30 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:07:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Boom Fly combat damage to The Lost \n2:Activate HolyMantle "} 

 Player 1 02:07:30 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[310]} 

 Player 1 02:07:30 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:07:30 $ACTION_MASSAGE_REMOVE:  
{"id":259} 

 Player 2 02:07:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":260,"_text":"Wait For Response From Player 2 "},"childOfId":257} 

 Player 2 02:07:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:07:30 $SHOW_REACTIONS:  
{"playerId":2,"cardsIds":[325,108,90,121]} 

 Player 2 02:09:01 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[325,108,90,121]} 

 Player 2 02:09:01 $ACTION_MASSAGE_REMOVE:  
{"id":260} 

 Player 2 02:09:01 $ACTION_MASSAGE_REMOVE:  
{"id":258} 

 Player 2 02:09:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":261,"_text":"Resolve ActivatePassiveEffect 39 "}} 

 Player 2 02:09:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 2 02:09:01 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":39,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":326,"effctType":3},"isAfterActivation":false,"index":7,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 02:09:01 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":326,"particleType":6} 

 Player 1 02:09:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Boom Fly combat damage to The Lost \n2:Activate HolyMantle "} 

 Player 2 02:09:03 $DISABLE_PARTICLE_EFFECT:  
{"cardId":326,"particleType":6} 

 Player 2 02:09:03 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":38} 

 Player 2 02:09:03 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":38} 

 Player 2 02:09:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":262,"_text":"Fizzle PlayerDeathPenalties 38"}} 

 Player 2 02:09:03 $FIZZLE_STACK_EFFECT:  
{"entityId":38} 

 Player 2 02:09:03 $PLAYER_HEAL:  
{"playerId":2,"hpToHeal":1,"healDown":true} 

 Player 2 02:09:03 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_PAY_DEATH_PANELTIES","args":[],"result":null,"preventMethod":true,"methodScopeId":325,"scopeIsPlayer":true,"index":7,"originStackId":38},"isAfterActivation":false,"index":7} 

 Player 2 02:09:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 2 02:09:03 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":39,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"isAfterActivation":false,"index":7,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 02:09:03 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":39} 

 Player 2 02:09:03 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 02:09:03 $SHOW_STACK_EFFECT:  
{"effectId":39} 

 Player 1 02:09:03 $PLAYER_HEAL:  
{"playerId":2,"hpToHeal":1} 

 Player 1 02:09:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Boom Fly combat damage to The Lost \n2:Activate HolyMantle "} 

 Player 2 02:09:06 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":39} 

 Player 2 02:09:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":263,"_text":"Remove After Resolve ActivatePassiveEffect 39  "}} 

 Player 2 02:09:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 02:09:06 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":39,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"isAfterActivation":false,"index":7,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 02:09:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":264,"_text":"Response Remove After Resolve ActivatePassiveEffect 39"},"childOfId":263} 

 Player 2 02:09:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":265,"_text":"Wait For Response From Player 2 "},"childOfId":263} 

 Player 2 02:09:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:09:06 $SHOW_REACTIONS:  
{"playerId":2,"cardsIds":[325,108,90,121]} 

 Player 1 02:09:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Boom Fly combat damage to The Lost \n2:Activate HolyMantle "} 

 Player 2 02:10:41 $MATCH: 