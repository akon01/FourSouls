Start Log 

 Player 1 16:36:28 $MATCH:  

 Player 1 16:36:29 $START_GAME:  

 Player 2 16:36:29 $MOVE_TO_TABLE:  

 Player 1 16:36:29 $MOVE_TO_TABLE:  

 Player 2 16:36:36 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 1 16:36:36 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 16:36:36 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":271,"itemCardId":272} 

 Player 2 16:36:36 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":268}],"result":true,"preventMethod":false,"methodScopeId":267,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 16:36:36 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":267,"itemCardId":268} 

 Player 2 16:36:36 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[99,135,34,95,101,92,50,86,37,113,89,77,130,70,127,140,123,96,116,79,35,84,88,53,138,13,64,26,90,55,52,51,56,59,40,20,49,132,28,85,54,117,108,71,104,74,36,11,93,38,110,129,42,39,136,107,137,17,41,45,30,15,121,65,61,111,115,19,27,112,9,118,81,10,98,14,67,75,16,43,76,57,124,97,114,142,83,139,87,102,33,25,141,122,73,22,78,12,7,103,62,128,131,31,48,105,119,29,94,143,21,63,8,72,109,68,32,47,18,66,80,126,106,100,69,46,133,134,44,23,24,82,125,60,91,120,58]} 

 Player 2 16:36:36 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[220,206,243,240,205,208,254,212,242,239,238,216,232,251,255,250,227,218,223,210,253,230,213,224,233,252,236,245,228,229,249,217,258,257,214,237,247,226,225,231,222,221,207,219,215,256,211,248,234,209,241,246,235,244]} 

 Player 2 16:36:36 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[168,151,173,171,156,180,179,169,150,178,174,201,196,176,167,172,193,182,157,183,190,149,198,166,152,187,165,160,148,194,158,155,200,185,163,164,191,192,186,162,195,159,184,154,202,161,177,189,146,153,170,147,199,188,175,197,181]} 

 Player 2 16:36:36 $DRAW_CARD:  
{"deckType":5} 

 Player 2 16:36:36 $FLIP_CARD:  
{"cardId":181} 

 Player 2 16:36:36 $ADD_STORE_CARD:  
{"cardId":181} 

 Player 2 16:36:36 $DRAW_CARD:  
{"deckType":5} 

 Player 2 16:36:36 $FLIP_CARD:  
{"cardId":197} 

 Player 2 16:36:36 $ADD_STORE_CARD:  
{"cardId":197} 

 Player 2 16:36:37 $DRAW_CARD:  
{"deckType":2} 

 Player 2 16:36:37 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":244} 

 Player 2 16:36:37 $DRAW_CARD:  
{"deckType":2} 

 Player 2 16:36:37 $FLIP_CARD:  
{"cardId":235} 

 Player 2 16:36:37 $REGISTER_PASSIVE_ITEM:  
{"cardId":235} 

 Player 2 16:36:37 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":235} 

 Player 2 16:36:37 $NEW_MONSTER_ON_PLACE:  
{"cardId":235,"monsterPlaceId":1} 

 Player 2 16:36:37 $DRAW_CARD:  
{"deckType":2} 

 Player 2 16:36:37 $FLIP_CARD:  
{"cardId":246} 

 Player 2 16:36:37 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":246} 

 Player 2 16:36:37 $NEW_MONSTER_ON_PLACE:  
{"cardId":246,"monsterPlaceId":2} 

 Player 2 16:36:37 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 16:36:37 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":271,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 16:36:37 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:36:37 $MOVE_CARD:  
{"moveIndex":1,"cardId":58,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:36:37 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":272}],"result":true,"preventMethod":false,"methodScopeId":271,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 16:36:37 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":58,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:36:37 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":58} 

 Player 2 16:36:37 $FLIP_CARD:  
{"cardId":58} 

 Player 2 16:36:37 $FLIP_CARD:  
{"cardId":58} 

 Player 2 16:36:37 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":58} 

 Player 2 16:36:37 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:36:37 $MOVE_CARD:  
{"moveIndex":2,"cardId":120,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:36:38 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":120,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:36:38 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":120} 

 Player 2 16:36:38 $FLIP_CARD:  
{"cardId":120} 

 Player 2 16:36:38 $FLIP_CARD:  
{"cardId":120} 

 Player 2 16:36:38 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":120} 

 Player 2 16:36:38 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:36:38 $MOVE_CARD:  
{"moveIndex":3,"cardId":91,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:36:38 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":91,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:36:38 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":91} 

 Player 2 16:36:38 $FLIP_CARD:  
{"cardId":91} 

 Player 2 16:36:38 $FLIP_CARD:  
{"cardId":91} 

 Player 2 16:36:38 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":91} 

 Player 2 16:36:38 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 16:36:38 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":267,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 16:36:38 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:36:38 $MOVE_CARD:  
{"moveIndex":4,"cardId":60,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:36:39 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":60,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:36:39 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":60} 

 Player 2 16:36:39 $FLIP_CARD:  
{"cardId":60} 

 Player 2 16:36:39 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":60} 

 Player 2 16:36:39 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:36:39 $MOVE_CARD:  
{"moveIndex":5,"cardId":125,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:36:39 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":125,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:36:39 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":125} 

 Player 2 16:36:39 $FLIP_CARD:  
{"cardId":125} 

 Player 2 16:36:39 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":125} 

 Player 2 16:36:39 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:36:39 $MOVE_CARD:  
{"moveIndex":6,"cardId":82,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:36:40 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":82,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:36:40 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":82} 

 Player 2 16:36:40 $FLIP_CARD:  
{"cardId":82} 

 Player 2 16:36:40 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":82} 

 Player 2 16:36:40 $GAME_HAS_STARTED:  

 Player 2 16:36:40 $SET_TURN:  
{"playerId":1} 

 Player 2 16:36:40 $START_TURN:  
{"playerId":1} 

 Player 2 16:36:40 $UPDATE_ACTIONS:  

 Player 1 16:36:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:36:40 $NEXT_STACK_ID:  

 Player 1 16:36:40 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:36:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 16:36:40 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":271,"turnPlayerCardId":271,"stackEffectType":13}} 

 Player 1 16:36:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 16:36:40 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":271,"turnPlayerCardId":271,"stackEffectType":13}} 

 Player 1 16:36:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 1 16:36:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:36:40 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 16:36:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 16:36:40 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":271,"turnPlayerCardId":271,"stackEffectType":13}} 

 Player 1 16:36:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 1 16:36:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 1 16:36:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:36:40 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 16:36:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 1 16:36:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 16:36:40 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 16:36:40 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:36:40 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:36:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 16:36:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 16:36:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 16:36:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 16:36:41 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 16:36:41 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 16:36:41 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 16:36:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 1 16:36:41 $DRAW_CARD:  
{"deckType":1} 

 Player 1 16:36:41 $MOVE_CARD:  
{"moveIndex":7,"cardId":24,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 16:36:41 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":24,"flipIfFlipped":false,"playerId":1} 

 Player 2 16:36:51 $MATCH: Start Log 

 Player 1 16:36:51 $MATCH:  

 Player 1 16:36:52 $START_GAME:  

 Player 2 16:36:52 $MOVE_TO_TABLE:  

 Player 1 16:36:52 $MOVE_TO_TABLE:  

 Player 2 16:36:59 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 1 16:36:59 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 16:36:59 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":271,"itemCardId":272} 

 Player 2 16:36:59 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":276}],"result":true,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 16:36:59 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":275,"itemCardId":276} 

 Player 2 16:36:59 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[44,45,8,43,95,31,11,83,56,75,67,42,82,102,91,22,60,86,79,116,46,108,64,100,69,137,76,14,62,96,87,57,9,71,73,125,131,25,104,142,58,105,132,59,66,21,84,136,120,109,63,117,74,13,72,20,122,36,77,93,16,23,78,129,54,114,55,121,38,103,32,50,124,128,111,94,28,123,24,118,119,49,39,17,141,112,35,127,61,10,113,101,40,12,7,135,98,65,139,143,115,51,70,134,41,34,90,26,33,88,138,18,80,133,52,89,19,97,37,85,27,53,106,92,130,126,68,110,47,48,107,99,140,29,30,81,15]} 

 Player 2 16:36:59 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[244,215,258,245,222,205,240,209,216,218,212,237,223,214,233,243,230,221,225,208,207,257,227,238,241,231,229,248,232,224,236,256,254,219,211,249,235,213,217,242,251,234,210,247,228,226,206,239,220,250,252,246,255,253]} 

 Player 2 16:36:59 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[149,164,189,159,156,194,158,199,152,153,198,169,171,172,178,177,157,154,160,165,180,175,161,192,191,201,182,200,148,167,181,174,176,188,202,168,151,183,196,185,162,166,155,179,195,147,197,146,187,190,163,173,170,186,184,150,193]} 

 Player 2 16:36:59 $DRAW_CARD:  
{"deckType":5} 

 Player 2 16:36:59 $FLIP_CARD:  
{"cardId":193} 

 Player 2 16:36:59 $ADD_STORE_CARD:  
{"cardId":193} 

 Player 2 16:36:59 $DRAW_CARD:  
{"deckType":5} 

 Player 2 16:36:59 $FLIP_CARD:  
{"cardId":150} 

 Player 2 16:36:59 $ADD_STORE_CARD:  
{"cardId":150} 

 Player 2 16:36:59 $DRAW_CARD:  
{"deckType":2} 

 Player 2 16:36:59 $FLIP_CARD:  
{"cardId":253} 

 Player 2 16:36:59 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":253} 

 Player 2 16:36:59 $NEW_MONSTER_ON_PLACE:  
{"cardId":253,"monsterPlaceId":1} 

 Player 2 16:36:59 $DRAW_CARD:  
{"deckType":2} 

 Player 2 16:36:59 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":255} 

 Player 2 16:36:59 $DRAW_CARD:  
{"deckType":2} 

 Player 2 16:37:00 $FLIP_CARD:  
{"cardId":246} 

 Player 2 16:37:00 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":246} 

 Player 2 16:37:00 $NEW_MONSTER_ON_PLACE:  
{"cardId":246,"monsterPlaceId":2} 

 Player 2 16:37:00 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 16:37:00 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":271,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 16:37:00 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:37:00 $MOVE_CARD:  
{"moveIndex":1,"cardId":15,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:37:00 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":272}],"result":true,"preventMethod":false,"methodScopeId":271,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 16:37:00 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":15,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:37:00 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":15} 

 Player 2 16:37:00 $FLIP_CARD:  
{"cardId":15} 

 Player 2 16:37:00 $FLIP_CARD:  
{"cardId":15} 

 Player 2 16:37:00 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":15} 

 Player 2 16:37:00 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:37:00 $MOVE_CARD:  
{"moveIndex":2,"cardId":81,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:37:01 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":81,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:37:01 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":81} 

 Player 2 16:37:01 $FLIP_CARD:  
{"cardId":81} 

 Player 2 16:37:01 $FLIP_CARD:  
{"cardId":81} 

 Player 2 16:37:01 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":81} 

 Player 2 16:37:01 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:37:01 $MOVE_CARD:  
{"moveIndex":3,"cardId":30,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:37:01 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":30,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:37:01 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":30} 

 Player 2 16:37:01 $FLIP_CARD:  
{"cardId":30} 

 Player 2 16:37:01 $FLIP_CARD:  
{"cardId":30} 

 Player 2 16:37:01 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":30} 

 Player 2 16:37:01 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 16:37:01 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 16:37:01 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:37:01 $MOVE_CARD:  
{"moveIndex":4,"cardId":29,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:37:02 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":29,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:37:02 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":29} 

 Player 2 16:37:02 $FLIP_CARD:  
{"cardId":29} 

 Player 2 16:37:02 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":29} 

 Player 2 16:37:02 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:37:02 $MOVE_CARD:  
{"moveIndex":5,"cardId":140,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:37:02 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":140,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:37:02 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":140} 

 Player 2 16:37:02 $FLIP_CARD:  
{"cardId":140} 

 Player 2 16:37:02 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":140} 

 Player 2 16:37:02 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:37:02 $MOVE_CARD:  
{"moveIndex":6,"cardId":99,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:37:03 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":99,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:37:03 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":99} 

 Player 2 16:37:03 $FLIP_CARD:  
{"cardId":99} 

 Player 2 16:37:03 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":99} 

 Player 2 16:37:03 $GAME_HAS_STARTED:  

 Player 2 16:37:03 $SET_TURN:  
{"playerId":2} 

 Player 2 16:37:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:37:03 $NEXT_STACK_ID:  

 Player 2 16:37:03 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:37:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 16:37:03 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":275,"turnPlayerCardId":275,"stackEffectType":13}} 

 Player 2 16:37:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 16:37:03 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":275,"turnPlayerCardId":275,"stackEffectType":13}} 

 Player 2 16:37:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 2 16:37:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:37:03 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 16:37:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 16:37:03 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":275,"turnPlayerCardId":275,"stackEffectType":13}} 

 Player 2 16:37:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 2 16:37:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 2 16:37:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:37:03 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 16:37:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 2 16:37:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:37:03 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:37:03 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:37:03 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:37:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 16:37:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 16:37:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 16:37:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 16:37:03 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:37:03 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 16:37:03 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 16:37:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 2 16:37:04 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:37:04 $MOVE_CARD:  
{"moveIndex":7,"cardId":107,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:37:04 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":107,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:37:04 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":107} 

 Player 2 16:37:04 $FLIP_CARD:  
{"cardId":107} 

 Player 2 16:37:04 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":107} 

 Player 2 16:37:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 16:37:04 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":275,"turnPlayerCardId":275,"stackEffectType":13}} 

 Player 2 16:37:04 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 16:37:04 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:37:04 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":275,"turnPlayerCardId":275,"stackEffectType":13}} 

 Player 2 16:37:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 2 16:37:04 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:37:04 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":275,"turnPlayerCardId":275,"stackEffectType":13}} 

 Player 2 16:37:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 2 16:37:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 2 16:37:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:37:04 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:37:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 16:37:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 16:37:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 16:37:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 16:37:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 16:37:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 16:37:04 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:37:04 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 2 16:37:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 2 16:37:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:37:05 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 2 16:37:05 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 2 16:37:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 2 16:37:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:37:05 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 16:37:05 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 16:37:05 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 16:37:05 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 16:37:05 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 16:37:05 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 16:37:05 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 16:37:05 $UPDATE_ACTIONS:  

 Player 2 16:37:06 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 16:37:07 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 16:44:57 $SHOW_DECISION:  
{"startCardId":275,"endCardId":246} 

 Player 2 16:45:00 $NEXT_STACK_ID:  

 Player 2 16:45:00 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:45:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Spider"} 

 Player 2 16:45:00 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":275,"attackingPlayerCardId":275,"idOfCardBeingAttacked":246,"stackEffectType":4}} 

 Player 2 16:45:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Spider"} 

 Player 2 16:45:00 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":275,"attackingPlayerCardId":275,"idOfCardBeingAttacked":246,"stackEffectType":4}} 

 Player 2 16:45:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add DeclareAttack 2 "}} 

 Player 2 16:45:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:45:00 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 16:45:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Spider"} 

 Player 2 16:45:00 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":275,"attackingPlayerCardId":275,"idOfCardBeingAttacked":246,"stackEffectType":4}} 

 Player 2 16:45:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding DeclareAttack 2"},"childOfId":10} 

 Player 2 16:45:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 2 16:45:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:45:00 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 2 16:45:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 2 16:45:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:45:01 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:45:01 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:45:01 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:45:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Spider"} 

 Player 1 16:45:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Spider"} 

 Player 1 16:45:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Spider"} 

 Player 1 16:45:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Spider"} 

 Player 1 16:45:01 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:45:01 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 2 16:45:01 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 2 16:45:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve DeclareAttack 2 "}} 

 Player 2 16:45:01 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":246,"particleType":5} 

 Player 2 16:45:01 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":4,"originStackId":2},"isAfterActivation":true,"index":4} 

 Player 2 16:45:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Spider"} 

 Player 2 16:45:01 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":275,"attackingPlayerCardId":275,"idOfCardBeingAttacked":246,"stackEffectType":4}} 

 Player 2 16:45:01 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 16:45:01 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:45:01 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":275,"attackingPlayerCardId":275,"idOfCardBeingAttacked":246,"stackEffectType":4}} 

 Player 2 16:45:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve DeclareAttack 2  "}} 

 Player 2 16:45:01 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:45:01 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":275,"attackingPlayerCardId":275,"idOfCardBeingAttacked":246,"stackEffectType":4}} 

 Player 2 16:45:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve DeclareAttack 2"},"childOfId":15} 

 Player 2 16:45:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 2 16:45:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:45:01 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:45:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Spider"} 

 Player 1 16:45:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Spider"} 

 Player 1 16:45:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Spider"} 

 Player 1 16:45:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Spider"} 

 Player 1 16:45:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Spider"} 

 Player 1 16:45:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Spider"} 

 Player 1 16:45:01 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:45:01 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 16:45:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 2 16:45:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:45:02 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 2 16:45:02 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 2 16:45:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 2 16:45:02 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:45:02 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 16:45:02 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 16:45:02 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 16:45:02 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 16:45:02 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 16:45:02 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 16:45:02 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 16:45:02 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 16:45:02 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 16:45:02 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 16:45:02 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 16:45:03 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 16:45:04 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 16:45:05 $NEXT_STACK_ID:  

 Player 2 16:45:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:45:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster>"} 

 Player 2 16:45:05 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":275,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":246}} 

 Player 2 16:45:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster>"} 

 Player 2 16:45:05 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":275,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":246}} 

 Player 2 16:45:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add AttackRoll 3 "}} 

 Player 2 16:45:05 $ROLL_DICE:  
{"playerId":2} 

 Player 1 16:45:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:45:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:45:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster>"} 

 Player 1 16:45:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster>"} 

 Player 2 16:45:07 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":4} 

 Player 2 16:45:07 $UPDATE_STACK_VIS:  
{"stackId":3,"text":"player rolled 4 vs Spider<Monster>"} 

 Player 2 16:45:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Spider<Monster>"} 

 Player 2 16:45:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:45:07 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 16:45:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Spider<Monster>"} 

 Player 2 16:45:07 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":246}} 

 Player 2 16:45:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding AttackRoll 3"},"childOfId":20} 

 Player 2 16:45:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 2 16:45:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 16:45:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster>"} 

 Player 1 16:45:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster>"} 

 Player 2 16:45:09 $SHOW_DECISION:  
{"startCardId":275,"endCardId":276} 

 Player 2 16:45:12 $NEXT_STACK_ID:  

 Player 2 16:45:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Spider<Monster>"} 

 Player 2 16:45:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Spider<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 16:45:12 $ADD_TO_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 16:45:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Spider<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 16:45:12 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 16:45:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Add ActivateItem 4 "}} 

 Player 1 16:45:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster>"} 

 Player 1 16:45:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster>"} 

 Player 1 16:45:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 1 16:45:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 16:45:14 $SHOW_DECISION:  
{"startCardId":276,"endCardId":275} 

 Player 2 16:45:15 $RESPOND_TO:  
{"playerId":-1,"stackEffectResponse":false} 

 Player 2 16:45:17 $USE_ITEM:  
{"cardId":276} 

 Player 2 16:45:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:45:17 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 2 16:45:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Spider<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 16:45:17 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 16:45:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Response Adding ActivateItem 4"},"childOfId":23} 

 Player 2 16:45:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Wait For Response From Player 2 "},"childOfId":23} 

 Player 2 16:45:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:45:17 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 16:45:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Wait For Response From Player 1 "},"childOfId":23} 

 Player 2 16:45:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:45:17 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:45:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 1 16:45:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 1 16:45:19 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":true} 

 Player 1 16:45:19 $SHOW_DECISION:  
{"startCardId":271,"endCardId":271} 

 Player 2 16:45:19 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 2 16:45:19 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 16:45:19 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 2 16:45:19 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 1 16:45:22 $NEXT_STACK_ID:  

 Player 1 16:45:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 1 16:45:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 activated Maggy"} 

 Player 1 16:45:22 $ADD_TO_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":271,"hasLockingStackEffect":false,"itemToPlayCardId":271,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 16:45:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 activated Maggy"} 

 Player 1 16:45:22 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":271,"hasLockingStackEffect":false,"itemToPlayCardId":271,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 16:45:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Add ActivateItem 5 "}} 

 Player 2 16:45:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Spider<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 16:45:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Spider<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 16:45:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 activated Maggy"} 

 Player 2 16:45:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 activated Maggy"} 

 Player 1 16:45:24 $SHOW_DECISION:  
{"startCardId":271,"endCardId":15} 

 Player 1 16:45:25 $RESPOND_TO:  
{"playerId":-1,"stackEffectResponse":false} 

 Player 1 16:45:27 $USE_ITEM:  
{"cardId":271} 

 Player 1 16:45:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 16:45:27 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 1 16:45:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 activated Maggy"} 

 Player 1 16:45:27 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":271,"hasLockingStackEffect":false,"itemToPlayCardId":271,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 16:45:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Response Adding ActivateItem 5"},"childOfId":27} 

 Player 1 16:45:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Wait For Response From Player 2 "},"childOfId":27} 

 Player 1 16:45:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 16:45:27 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 16:45:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 activated Maggy"} 

 Player 2 16:45:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 activated Maggy"} 

 Player 2 16:45:27 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 16:45:27 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 1 16:45:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Wait For Response From Player 1 "},"childOfId":27} 

 Player 1 16:45:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:45:27 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 16:45:27 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 1 16:45:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Resolve ActivateItem 5 "}} 

 Player 1 16:45:27 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":271,"particleType":6} 

 Player 1 16:45:29 $DISABLE_PARTICLE_EFFECT:  
{"cardId":271,"particleType":6} 

 Player 1 16:45:29 $NEXT_STACK_ID:  

 Player 1 16:45:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 activated Maggy"} 

 Player 1 16:45:29 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":15} 

 Player 1 16:45:29 $MOVE_CARD:  
{"moveIndex":8,"cardId":15,"placeID":277,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 16:45:30 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":15,"flipIfFlipped":true,"playerId":1} 

 Player 1 16:45:30 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":15} 

 Player 1 16:45:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7): addMoney \n4:Player 1 activated Maggy"} 

 Player 1 16:45:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 16:45:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7): addMoney \n4:Player 1 activated Maggy"} 

 Player 1 16:45:30 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":271,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":15,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":15,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 16:45:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7): addMoney \n4:Player 1 activated Maggy"} 

 Player 1 16:45:30 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":275,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":246}} 

 Player 1 16:45:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7): addMoney \n4:Player 1 activated Maggy"} 

 Player 1 16:45:30 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":271,"hasLockingStackEffect":false,"itemToPlayCardId":271,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 16:45:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7): addMoney \n4:Player 1 activated Maggy"} 

 Player 1 16:45:30 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":246}} 

 Player 1 16:45:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7): addMoney \n4:Player 1 activated Maggy"} 

 Player 1 16:45:30 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 16:45:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7): addMoney \n4:Player 1 activated Maggy"} 

 Player 1 16:45:30 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":271,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":15,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":15,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 16:45:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7): addMoney \n4:Player 1 activated Maggy"} 

 Player 1 16:45:30 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":271,"hasLockingStackEffect":false,"itemToPlayCardId":271,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 16:45:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7): addMoney \n4:Player 1 activated Maggy"} 

 Player 1 16:45:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7): addMoney \n4:Player 1 activated Maggy"} 

 Player 1 16:45:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7): addMoney \n4:Player 1 activated Maggy"} 

 Player 1 16:45:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7): addMoney \n4:Player 1 activated Maggy"} 

 Player 1 16:45:30 $REPLACE_STACK:  
{"currentStack":[{"entityId":3,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":246},{"entityId":4,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1},{"entityId":6,"creatorCardId":271,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":15,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":15,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":5,"creatorCardId":271,"hasLockingStackEffect":false,"itemToPlayCardId":271,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 

 Player 1 16:45:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7): addMoney \n4:Player 1 activated Maggy"} 

 Player 1 16:45:30 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":271,"hasLockingStackEffect":false,"itemToPlayCardId":271,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 16:45:30 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 1 16:45:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7): addMoney"} 

 Player 1 16:45:31 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":271,"hasLockingStackEffect":false,"itemToPlayCardId":271,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 16:45:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Remove After Resolve ActivateItem 5  "}} 

 Player 1 16:45:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7): addMoney"} 

 Player 1 16:45:31 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":271,"hasLockingStackEffect":false,"itemToPlayCardId":271,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 16:45:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Response Remove After Resolve ActivateItem 5"},"childOfId":32} 

 Player 1 16:45:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Wait For Response From Player 2 "},"childOfId":32} 

 Player 1 16:45:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 16:45:31 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 16:45:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 activated Maggy"} 

 Player 2 16:45:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 activated Maggy"} 

 Player 2 16:45:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7) "} 

 Player 2 16:45:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7) "} 

 Player 2 16:45:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7) "} 

 Player 2 16:45:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7) "} 

 Player 2 16:45:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7) "} 

 Player 2 16:45:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7) "} 

 Player 2 16:45:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7) "} 

 Player 2 16:45:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7) "} 

 Player 2 16:45:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7) "} 

 Player 2 16:45:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7) "} 

 Player 2 16:45:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7) "} 

 Player 2 16:45:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7) "} 

 Player 2 16:45:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7) "} 

 Player 2 16:45:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7) "} 

 Player 2 16:45:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7) "} 

 Player 2 16:45:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7) "} 

 Player 2 16:45:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7) "} 

 Player 2 16:45:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7) "} 

 Player 2 16:45:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7) "} 

 Player 2 16:45:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7) "} 

 Player 2 16:45:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7)  \n4:Player 1 activated Maggy"} 

 Player 2 16:45:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7)  \n4:Player 1 activated Maggy"} 

 Player 2 16:45:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7)  \n4:Player 1 activated Maggy"} 

 Player 2 16:45:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7)  \n4:Player 1 activated Maggy"} 

 Player 2 16:45:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7)  \n4:Player 1 activated Maggy"} 

 Player 2 16:45:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7)  \n4:Player 1 activated Maggy"} 

 Player 2 16:45:31 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 16:45:31 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 1 16:45:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Wait For Response From Player 1 "},"childOfId":32} 

 Player 1 16:45:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:45:32 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 1 16:45:32 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 1 16:45:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Resolve PlayLootCardStackEffect 6 "}} 

 Player 1 16:45:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7): addMoney"} 

 Player 1 16:45:32 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":15,"particleType":6} 

 Player 1 16:45:33 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 1 16:45:33 $DISABLE_PARTICLE_EFFECT:  
{"cardId":15,"particleType":6} 

 Player 1 16:45:34 $SET_MONEY:  
{"playerId":1,"numOfCoins":4} 

 Player 1 16:45:34 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":1}],"result":null,"preventMethod":false,"methodScopeId":271,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 1 16:45:34 $REMOVE_FROM_PILE:  
{"cardId":15} 

 Player 1 16:45:34 $MOVE_CARD:  
{"moveIndex":9,"cardId":15,"placeID":278,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 16:45:34 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":15,"flipIfFlipped":true,"playerId":1} 

 Player 1 16:45:34 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":15} 

 Player 1 16:45:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7): addMoney"} 

 Player 1 16:45:34 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":271,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":15,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 16:45:34 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 1 16:45:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 1 16:45:34 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":271,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":15,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 16:45:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Remove After Resolve PlayLootCardStackEffect 6  "}} 

 Player 1 16:45:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 1 16:45:34 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":271,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":15,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 16:45:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Response Remove After Resolve PlayLootCardStackEffect 6"},"childOfId":37} 

 Player 1 16:45:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Wait For Response From Player 1 "},"childOfId":37} 

 Player 1 16:45:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:45:34 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 1 16:45:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Wait For Response From Player 2 "},"childOfId":37} 

 Player 1 16:45:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 16:45:34 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 16:45:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7) "} 

 Player 2 16:45:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7) "} 

 Player 2 16:45:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7) "} 

 Player 2 16:45:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7) "} 

 Player 2 16:45:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7) "} 

 Player 2 16:45:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle \n3:Player 1 play 1 Penny(7) "} 

 Player 2 16:45:35 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 16:45:35 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 1 16:45:35 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 1 16:45:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Resolve ActivateItem 4 "}} 

 Player 1 16:45:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 1 16:45:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 1 16:45:35 $DO_STACK_EFFECT:  
{"originPlayerId":1,"playerId":2,"currentStack":[{"entityId":3,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":246},{"entityId":4,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 

 Player 2 16:45:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 16:45:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 16:45:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 16:45:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 16:45:35 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":276,"particleType":6} 

 Player 2 16:45:37 $DISABLE_PARTICLE_EFFECT:  
{"cardId":276,"particleType":6} 

 Player 2 16:45:37 $REGISTER_ONE_TURN_PASSIVE_EFFECT:  
{"cardId":276,"effectIndex":{"type":3,"index":0},"conditionData":[{"effectTargets":[275],"chainEffectsData":[],"methodArgs":[],"isPassive":false,"effectCard":276,"effectCardOwner":275,"effectCardPlayer":275}]} 

 Player 2 16:45:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 16:45:37 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 16:45:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 16:45:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 16:45:37 $FINISH_DO_STACK_EFFECT:  
{"playerId":1,"newStack":[{"entityId":3,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":246},{"entityId":4,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 

 Player 1 16:45:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 1 16:45:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 1 16:45:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 1 16:45:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 1 16:45:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 1 16:45:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 1 16:45:37 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 1 16:45:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 1 16:45:37 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":246}} 

 Player 1 16:45:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 1 16:45:37 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":246}} 

 Player 1 16:45:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 1 16:45:37 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 16:45:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 1 16:45:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 1 16:45:37 $REPLACE_STACK:  
{"currentStack":[{"entityId":3,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":246},{"entityId":4,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 

 Player 1 16:45:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster>"} 

 Player 1 16:45:37 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 16:45:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Remove After Resolve ActivateItem 4  "}} 

 Player 1 16:45:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster>"} 

 Player 1 16:45:38 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 16:45:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Response Remove After Resolve ActivateItem 4"},"childOfId":42} 

 Player 1 16:45:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Wait For Response From Player 2 "},"childOfId":42} 

 Player 1 16:45:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 16:45:38 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 1 16:45:38 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 2 16:45:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 16:45:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 16:45:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 16:45:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 16:45:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 16:45:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 16:45:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 16:45:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 16:45:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 16:45:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 16:45:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 16:45:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 16:45:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 16:45:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 16:45:38 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 16:45:38 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 1 16:45:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Wait For Response From Player 1 "},"childOfId":42} 

 Player 1 16:45:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:45:38 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 1 16:45:38 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 1 16:45:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Resolve AttackRoll 3 "}} 

 Player 1 16:45:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster>"} 

 Player 1 16:45:38 $DO_STACK_EFFECT:  
{"originPlayerId":1,"playerId":2,"currentStack":[{"entityId":3,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":246}]} 

 Player 2 16:45:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster>"} 

 Player 2 16:45:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster>"} 

 Player 2 16:45:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Added 0 to original roll"}} 

 Player 2 16:45:38 $NEXT_STACK_ID:  

 Player 2 16:45:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster>"} 

 Player 2 16:45:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:45:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is rolling against Spider<Monster>"} 

 Player 2 16:45:39 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":275,"entityToDoDamageCardId":246,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 16:45:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is rolling against Spider<Monster>"} 

 Player 2 16:45:39 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":246}} 

 Player 2 16:45:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is rolling against Spider<Monster>"} 

 Player 2 16:45:39 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":275,"entityToDoDamageCardId":246,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 16:45:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is rolling against Spider<Monster>"} 

 Player 2 16:45:39 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":246}} 

 Player 2 16:45:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is rolling against Spider<Monster>"} 

 Player 2 16:45:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is rolling against Spider<Monster>"} 

 Player 2 16:45:39 $REPLACE_STACK:  
{"currentStack":[{"entityId":7,"creatorCardId":275,"entityToDoDamageCardId":246,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":3,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":246}]} 

 Player 2 16:45:39 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":5,"originStackId":3},"isAfterActivation":true,"index":5} 

 Player 2 16:45:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is rolling against Spider<Monster>"} 

 Player 2 16:45:39 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":246}} 

 Player 2 16:45:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is rolling against Spider<Monster>"} 

 Player 2 16:45:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is rolling against Spider<Monster>"} 

 Player 2 16:45:39 $FINISH_DO_STACK_EFFECT:  
{"playerId":1,"newStack":[{"entityId":7,"creatorCardId":275,"entityToDoDamageCardId":246,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":3,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":246}]} 

 Player 1 16:45:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster>"} 

 Player 1 16:45:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Spider<Monster>"} 

 Player 1 16:45:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost"} 

 Player 1 16:45:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost"} 

 Player 1 16:45:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost"} 

 Player 1 16:45:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost"} 

 Player 1 16:45:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost"} 

 Player 1 16:45:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost"} 

 Player 1 16:45:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost"} 

 Player 1 16:45:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost"} 

 Player 1 16:45:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost"} 

 Player 1 16:45:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost"} 

 Player 1 16:45:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is rolling against Spider<Monster>"} 

 Player 1 16:45:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is rolling against Spider<Monster>"} 

 Player 1 16:45:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is rolling against Spider<Monster>"} 

 Player 1 16:45:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is rolling against Spider<Monster>"} 

 Player 1 16:45:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is rolling against Spider<Monster>"} 

 Player 1 16:45:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is rolling against Spider<Monster>"} 

 Player 1 16:45:39 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 1 16:45:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is rolling against Spider<Monster>"} 

 Player 1 16:45:39 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":275,"entityToDoDamageCardId":246,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 16:45:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is rolling against Spider<Monster>"} 

 Player 1 16:45:39 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":275,"entityToDoDamageCardId":246,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 16:45:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is rolling against Spider<Monster>"} 

 Player 1 16:45:40 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":246}} 

 Player 1 16:45:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is rolling against Spider<Monster>"} 

 Player 1 16:45:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is rolling against Spider<Monster>"} 

 Player 1 16:45:40 $REPLACE_STACK:  
{"currentStack":[{"entityId":7,"creatorCardId":275,"entityToDoDamageCardId":246,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":3,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":246}]} 

 Player 1 16:45:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost"} 

 Player 1 16:45:40 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":246}} 

 Player 1 16:45:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Remove After Resolve AttackRoll 3  "}} 

 Player 1 16:45:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost"} 

 Player 1 16:45:40 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":246}} 

 Player 1 16:45:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Response Remove After Resolve AttackRoll 3"},"childOfId":48} 

 Player 1 16:45:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Wait For Response From Player 2 "},"childOfId":48} 

 Player 1 16:45:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 16:45:40 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 16:45:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is rolling against Spider<Monster>"} 

 Player 2 16:45:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is rolling against Spider<Monster>"} 

 Player 2 16:45:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is rolling against Spider<Monster>"} 

 Player 2 16:45:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is rolling against Spider<Monster>"} 

 Player 2 16:45:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is rolling against Spider<Monster>"} 

 Player 2 16:45:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is rolling against Spider<Monster>"} 

 Player 2 16:45:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is rolling against Spider<Monster>"} 

 Player 2 16:45:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is rolling against Spider<Monster>"} 

 Player 2 16:45:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is rolling against Spider<Monster>"} 

 Player 2 16:45:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is rolling against Spider<Monster>"} 

 Player 2 16:45:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is rolling against Spider<Monster>"} 

 Player 2 16:45:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is rolling against Spider<Monster>"} 

 Player 2 16:45:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is rolling against Spider<Monster>"} 

 Player 2 16:45:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is rolling against Spider<Monster>"} 

 Player 2 16:45:40 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 16:45:40 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 1 16:45:40 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 1 16:45:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Wait For Response From Player 1 "},"childOfId":48} 

 Player 1 16:45:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:45:40 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 1 16:45:40 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 1 16:45:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Resolve CombatDamage 7 "}} 

 Player 1 16:45:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost"} 

 Player 1 16:45:40 $DO_STACK_EFFECT:  
{"originPlayerId":1,"playerId":2,"currentStack":[{"entityId":7,"creatorCardId":275,"entityToDoDamageCardId":246,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}]} 

 Player 2 16:45:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost"} 

 Player 2 16:45:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost"} 

 Player 2 16:45:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider 1 combat damage to The Lost"} 

 Player 2 16:45:41 $UPDATE_STACK_VIS:  
{"stackId":7,"text":"Spider will deal 1 combat damage to The Lost"} 

 Player 2 16:45:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider 1 combat damage to The Lost"} 

 Player 2 16:45:41 $PLAYER_GET_HIT:  
{"playerId":2,"damage":1,"damageDealerId":246} 

 Player 2 16:45:41 $NEXT_STACK_ID:  

 Player 2 16:45:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider 1 combat damage to The Lost"} 

 Player 2 16:45:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:45:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider 1 combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 16:45:41 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":246}} 

 Player 2 16:45:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider 1 combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 16:45:41 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":275,"entityToDoDamageCardId":246,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 16:45:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider 1 combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 16:45:41 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":275,"entityToDoDamageCardId":246,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 16:45:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider 1 combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 16:45:41 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":246}} 

 Player 2 16:45:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider 1 combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 16:45:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider 1 combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 16:45:41 $REPLACE_STACK:  
{"currentStack":[{"entityId":7,"creatorCardId":275,"entityToDoDamageCardId":246,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":8,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":246}]} 

 Player 2 16:45:41 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":246}],"result":null,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 

 Player 2 16:45:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider 1 combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 16:45:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider 1 combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 16:45:41 $FINISH_DO_STACK_EFFECT:  
{"playerId":1,"newStack":[{"entityId":7,"creatorCardId":275,"entityToDoDamageCardId":246,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":8,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":246}]} 

 Player 1 16:45:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost"} 

 Player 1 16:45:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost"} 

 Player 1 16:45:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 16:45:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 16:45:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 16:45:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 16:45:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 16:45:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 16:45:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 16:45:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 16:45:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 16:45:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 16:45:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 1 16:45:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 1 16:45:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 1 16:45:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 1 16:45:42 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 1 16:45:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 1 16:45:42 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":275,"entityToDoDamageCardId":246,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 16:45:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 1 16:45:42 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":275,"entityToDoDamageCardId":246,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 16:45:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 1 16:45:42 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":246}} 

 Player 1 16:45:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 1 16:45:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 1 16:45:42 $REPLACE_STACK:  
{"currentStack":[{"entityId":7,"creatorCardId":275,"entityToDoDamageCardId":246,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":8,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":246}]} 

 Player 1 16:45:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 16:45:42 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":275,"entityToDoDamageCardId":246,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 16:45:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Remove After Resolve CombatDamage 7  "}} 

 Player 1 16:45:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 16:45:42 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":275,"entityToDoDamageCardId":246,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 16:45:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Response Remove After Resolve CombatDamage 7"},"childOfId":53} 

 Player 1 16:45:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Wait For Response From Player 2 "},"childOfId":53} 

 Player 1 16:45:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 16:45:42 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 16:45:42 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 2 16:45:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider 1 combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 16:45:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider 1 combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 16:45:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider 1 combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 16:45:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider 1 combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 16:45:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider 1 combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 16:45:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider 1 combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 16:45:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider 1 combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 16:45:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider 1 combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 16:45:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider 1 combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 16:45:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider 1 combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 16:45:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 16:45:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 16:45:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 16:45:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 1 16:45:42 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 2 16:45:42 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 16:45:42 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 1 16:45:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":56,"_text":"Wait For Response From Player 1 "},"childOfId":53} 

 Player 1 16:45:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:45:43 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 1 16:45:43 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 1 16:45:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":57,"_text":"Resolve PlayerDeath 8 "}} 

 Player 1 16:45:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 16:45:43 $DO_STACK_EFFECT:  
{"originPlayerId":1,"playerId":2,"currentStack":[{"entityId":8,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":246}]} 

 Player 2 16:45:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 16:45:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 16:45:43 $DISABLE_PARTICLE_EFFECT:  
{"cardId":246,"particleType":5} 

 Player 2 16:45:43 $CANCEL_ATTACK:  

 Player 2 16:45:43 $NEXT_STACK_ID:  

 Player 2 16:45:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 16:45:43 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_PAY_DEATH_PANELTIES","args":[],"result":null,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":1,"originStackId":9},"isAfterActivation":false,"index":1} 

 Player 2 16:45:43 $NEXT_STACK_ID:  

 Player 2 16:45:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 

 Player 2 16:45:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 2 16:45:43 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":10,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":276,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":276,"effctType":3},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 16:45:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 2 16:45:43 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":10,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":276,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":276,"effctType":3},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 16:45:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":58,"_text":"Add ActivatePassiveEffect 10 "}} 

 Player 2 16:45:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 2 16:45:43 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 2 16:45:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 2 16:45:43 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":10,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":276,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":276,"effctType":3},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 16:45:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":59,"_text":"Response Adding ActivatePassiveEffect 10"},"childOfId":58} 

 Player 2 16:45:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":60,"_text":"Wait For Response From Player 1 "},"childOfId":58} 

 Player 2 16:45:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:45:43 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:45:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 16:45:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 16:45:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 

 Player 1 16:45:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 

 Player 1 16:45:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 

 Player 1 16:45:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 

 Player 1 16:45:43 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:45:43 $ACTION_MASSAGE_REMOVE:  
{"id":60} 

 Player 2 16:45:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":61,"_text":"Wait For Response From Player 2 "},"childOfId":58} 

 Player 2 16:45:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:45:43 $ACTION_MASSAGE_REMOVE:  
{"id":61} 

 Player 2 16:45:44 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 2 16:45:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":62,"_text":"Resolve ActivatePassiveEffect 10 "}} 

 Player 2 16:45:44 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":276,"particleType":6} 

 Player 1 16:45:44 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 2 16:45:45 $DISABLE_PARTICLE_EFFECT:  
{"cardId":276,"particleType":6} 

 Player 2 16:45:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 2 16:45:45 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":275,"playerToPayCardId":275,"stackEffectType":16}} 

 Player 2 16:45:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":63,"_text":"Fizzle PlayerDeathPenalties 9"}} 

 Player 2 16:45:46 $FIZZLE_STACK_EFFECT:  
{"entityId":9} 

 Player 2 16:45:46 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_PAY_DEATH_PANELTIES","args":[],"result":null,"preventMethod":true,"methodScopeId":275,"scopeIsPlayer":true,"index":1,"originStackId":9},"isAfterActivation":false,"index":1} 

 Player 2 16:45:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 2 16:45:46 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":10,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":276,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 16:45:46 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 2 16:45:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 16:45:46 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":10,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":276,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 16:45:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":64,"_text":"Remove After Resolve ActivatePassiveEffect 10  "}} 

 Player 2 16:45:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 16:45:46 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":10,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":276,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 16:45:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":65,"_text":"Response Remove After Resolve ActivatePassiveEffect 10"},"childOfId":64} 

 Player 2 16:45:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":66,"_text":"Wait For Response From Player 2 "},"childOfId":64} 

 Player 2 16:45:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:45:46 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 2 16:45:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":67,"_text":"Wait For Response From Player 1 "},"childOfId":64} 

 Player 2 16:45:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:45:46 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:45:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 

 Player 1 16:45:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 

 Player 1 16:45:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 

 Player 1 16:45:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 

 Player 1 16:45:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 

 Player 1 16:45:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 

 Player 1 16:45:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 

 Player 1 16:45:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 

 Player 1 16:45:46 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:45:46 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 2 16:45:46 $ACTION_MASSAGE_REMOVE:  
{"id":65} 

 Player 2 16:45:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":68,"_text":"Resolve PlayerDeath 8 "}} 

 Player 2 16:45:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 16:45:46 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":275,"playerToPayCardId":275,"stackEffectType":16}} 

 Player 2 16:45:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 16:45:46 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":246}} 

 Player 2 16:45:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 16:45:46 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":246}} 

 Player 2 16:45:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 16:45:47 $REPLACE_STACK:  
{"currentStack":[{"entityId":8,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":246}]} 

 Player 2 16:45:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 16:45:47 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":246}} 

 Player 2 16:45:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 16:45:47 $FINISH_DO_STACK_EFFECT:  
{"playerId":1,"newStack":[{"entityId":8,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":246}]} 

 Player 1 16:45:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 16:45:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 16:45:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to pay death penalties"} 

 Player 1 16:45:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to pay death penalties"} 

 Player 1 16:45:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to pay death penalties"} 

 Player 1 16:45:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to pay death penalties"} 

 Player 1 16:45:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to pay death penalties"} 

 Player 1 16:45:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to pay death penalties"} 

 Player 1 16:45:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 16:45:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 16:45:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 16:45:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 16:45:47 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 1 16:45:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 16:45:47 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":246}} 

 Player 1 16:45:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 16:45:47 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":246}} 

 Player 1 16:45:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 16:45:47 $REPLACE_STACK:  
{"currentStack":[{"entityId":8,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":246}]} 

 Player 1 16:45:47 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:45:47 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":246}} 

 Player 1 16:45:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":69,"_text":"Remove After Resolve PlayerDeath 8  "}} 

 Player 1 16:45:47 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:45:47 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":8,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":246}} 

 Player 1 16:45:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":70,"_text":"Response Remove After Resolve PlayerDeath 8"},"childOfId":69} 

 Player 1 16:45:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":71,"_text":"Wait For Response From Player 1 "},"childOfId":69} 

 Player 1 16:45:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:45:47 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 1 16:45:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":72,"_text":"Wait For Response From Player 2 "},"childOfId":69} 

 Player 1 16:45:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 16:45:47 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 16:45:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 16:45:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 16:45:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 16:45:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 16:45:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 16:45:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 16:45:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 16:45:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 16:45:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 16:45:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 16:45:48 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 16:45:48 $ACTION_MASSAGE_REMOVE:  
{"id":72} 

 Player 1 16:45:48 $ACTION_MASSAGE_REMOVE:  
{"id":70} 

 Player 1 16:45:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":73,"_text":"Stack Was Emptied "}} 

 Player 1 16:45:48 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 16:45:48 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:45:48 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 16:45:48 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 16:45:48 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 16:45:48 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 16:45:48 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 16:45:48 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 16:45:48 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 16:45:48 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 16:45:48 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 16:45:48 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 16:45:48 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 16:45:48 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 16:45:48 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 1 16:45:48 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 1 16:45:48 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 1 16:45:48 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 1 16:45:48 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 1 16:45:48 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 1 16:45:48 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 1 16:45:48 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 1 16:45:48 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 1 16:45:48 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 1 16:45:48 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 1 16:45:48 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 1 16:45:48 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 1 16:45:48 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 1 16:45:48 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 1 16:45:49 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 1 16:45:49 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 1 16:45:49 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 1 16:45:49 $ACTION_MASSAGE_REMOVE:  
{"id":68} 

 Player 1 16:45:49 $ACTION_MASSAGE_REMOVE:  
{"id":69} 

 Player 1 16:45:49 $ACTION_MASSAGE_REMOVE:  
{"id":73} 

 Player 1 16:45:49 $TURN_PLAYER_DO_STACK_EFFECT:  
{"playerId":2} 

 Player 2 16:45:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:45:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:45:49 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 16:45:49 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 16:45:49 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 16:45:49 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 16:45:49 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 16:45:49 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 16:45:49 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 16:45:49 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 16:45:49 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 16:45:49 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 16:45:49 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 16:45:49 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 16:45:49 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 2 16:45:49 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 2 16:45:49 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 2 16:45:49 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 2 16:45:49 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 2 16:45:49 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 2 16:45:49 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 2 16:45:49 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 2 16:45:49 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 2 16:45:49 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 2 16:45:49 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 2 16:45:49 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 2 16:45:49 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 2 16:45:49 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 2 16:45:49 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 2 16:45:49 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 2 16:45:49 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 2 16:45:49 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 2 16:45:49 $ACTION_MASSAGE_REMOVE:  
{"id":68} 

 Player 2 16:45:49 $ACTION_MASSAGE_REMOVE:  
{"id":69} 

 Player 2 16:45:49 $ACTION_MASSAGE_REMOVE:  
{"id":73} 

 Player 2 16:45:50 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 2 16:45:50 $END_TURN:  

 Player 2 16:45:50 $SET_TURN:  
{"playerId":1} 

 Player 2 16:45:50 $START_TURN:  
{"playerId":1} 

 Player 2 16:45:50 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 2 16:45:50 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  
{"id":73} 

 Player 1 16:45:50 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 16:45:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  
{"id":68} 

 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  
{"id":69} 

 Player 1 16:45:50 $ACTION_MASSAGE_REMOVE:  
{"id":73} 

 Player 1 16:45:51 $RECHARGE_ITEM:  
{"cardId":271} 

 Player 1 16:45:51 $PLAYER_RECHARGE_ITEM:  
{"playerId":1,"cardId":271} 

 Player 1 16:45:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:45:51 $NEXT_STACK_ID:  

 Player 1 16:45:51 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:45:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 16:45:51 $ADD_TO_STACK:  
{"stackEffect":{"entityId":11,"creatorCardId":271,"turnPlayerCardId":271,"stackEffectType":13}} 

 Player 1 16:45:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 16:45:51 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":271,"turnPlayerCardId":271,"stackEffectType":13}} 

 Player 1 16:45:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":74,"_text":"Add StartTurnLoot 11 "}} 

 Player 1 16:45:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:45:51 $ACTION_MASSAGE_REMOVE:  
{"id":74} 

 Player 1 16:45:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 16:45:51 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":11,"creatorCardId":271,"turnPlayerCardId":271,"stackEffectType":13}} 

 Player 1 16:45:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":75,"_text":"Response Adding StartTurnLoot 11"},"childOfId":74} 

 Player 1 16:45:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":76,"_text":"Wait For Response From Player 1 "},"childOfId":74} 

 Player 1 16:45:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:45:51 $ACTION_MASSAGE_REMOVE:  
{"id":76} 

 Player 1 16:45:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":77,"_text":"Wait For Response From Player 2 "},"childOfId":74} 

 Player 1 16:45:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 16:45:51 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 1 16:45:51 $ACTION_MASSAGE_REMOVE:  
{"id":69} 

 Player 2 16:45:51 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 16:45:51 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:45:51 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:45:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 16:45:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 16:45:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 16:45:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 16:45:51 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 16:45:51 $ACTION_MASSAGE_REMOVE:  
{"id":77} 

 Player 1 16:45:51 $ACTION_MASSAGE_REMOVE:  
{"id":75} 

 Player 1 16:45:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":78,"_text":"Resolve StartTurnLoot 11 "}} 

 Player 1 16:45:51 $DRAW_CARD:  
{"deckType":1} 

 Player 1 16:45:51 $MOVE_CARD:  
{"moveIndex":10,"cardId":48,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 16:45:52 $MOVE_CARD_END:  
{"moveIndex":10,"cardId":48,"flipIfFlipped":false,"playerId":1} 

 Player 1 16:45:52 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":48} 

 Player 1 16:45:52 $FLIP_CARD:  
{"cardId":48} 

 Player 1 16:45:52 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":48} 

 Player 1 16:45:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 16:45:52 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":11,"creatorCardId":271,"turnPlayerCardId":271,"stackEffectType":13}} 

 Player 1 16:45:52 $ACTION_MASSAGE_REMOVE:  
{"id":78} 

 Player 1 16:45:52 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:45:52 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":271,"turnPlayerCardId":271,"stackEffectType":13}} 

 Player 1 16:45:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":79,"_text":"Remove After Resolve StartTurnLoot 11  "}} 

 Player 1 16:45:52 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:45:52 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":11,"creatorCardId":271,"turnPlayerCardId":271,"stackEffectType":13}} 

 Player 1 16:45:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":80,"_text":"Response Remove After Resolve StartTurnLoot 11"},"childOfId":79} 

 Player 1 16:45:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":81,"_text":"Wait For Response From Player 2 "},"childOfId":79} 

 Player 1 16:45:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 16:45:52 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 16:45:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 16:45:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 16:45:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 16:45:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 16:45:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 16:45:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 16:45:52 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 16:45:52 $ACTION_MASSAGE_REMOVE:  
{"id":81} 

 Player 1 16:45:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":82,"_text":"Wait For Response From Player 1 "},"childOfId":79} 

 Player 1 16:45:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:45:52 $ACTION_MASSAGE_REMOVE:  
{"id":82} 

 Player 1 16:45:52 $ACTION_MASSAGE_REMOVE:  
{"id":80} 

 Player 1 16:45:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":83,"_text":"Stack Was Emptied "}} 

 Player 1 16:45:52 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:45:52 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 16:45:52 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  
{"id":68} 

 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  
{"id":69} 

 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  
{"id":73} 

 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  
{"id":74} 

 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  
{"id":78} 

 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  
{"id":79} 

 Player 1 16:45:53 $ACTION_MASSAGE_REMOVE:  
{"id":83} 

 Player 1 16:45:54 $ACTION_MASSAGE_REMOVE:  
{"id":83} 

 Player 1 16:45:55 $ACTION_MASSAGE_REMOVE:  
{"id":79} 

 Player 1 16:50:57 $NEXT_STACK_ID:  

 Player 1 16:50:57 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:50:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 2 Cents(10) "} 

 Player 1 16:50:58 $ADD_TO_STACK:  
{"stackEffect":{"entityId":12,"creatorCardId":271,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":30,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 16:50:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 2 Cents(10) "} 

 Player 1 16:50:58 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":12,"creatorCardId":271,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":30,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 16:50:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":84,"_text":"Add PlayLootCardStackEffect 12 "}} 

 Player 1 16:50:58 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":30} 

 Player 1 16:50:58 $MOVE_CARD:  
{"moveIndex":11,"cardId":30,"placeID":277,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 16:50:58 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:50:58 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:50:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 2 Cents(10) "} 

 Player 2 16:50:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 2 Cents(10) "} 

 Player 2 16:50:58 $MOVE_CARD_END:  
{"moveIndex":11,"cardId":30,"flipIfFlipped":true,"playerId":1} 

 Player 1 16:50:58 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":30} 

 Player 1 16:50:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 2 Cents(10): addMoney"} 

 Player 1 16:50:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:50:58 $ACTION_MASSAGE_REMOVE:  
{"id":84} 

 Player 1 16:50:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 2 Cents(10): addMoney"} 

 Player 1 16:50:58 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":12,"creatorCardId":271,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":30,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":30,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 16:50:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":85,"_text":"Response Adding PlayLootCardStackEffect 12"},"childOfId":84} 

 Player 1 16:50:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":86,"_text":"Wait For Response From Player 1 "},"childOfId":84} 

 Player 1 16:50:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:50:58 $ACTION_MASSAGE_REMOVE:  
{"id":86} 

 Player 1 16:50:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":87,"_text":"Wait For Response From Player 2 "},"childOfId":84} 

 Player 1 16:50:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 16:50:58 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 16:50:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 2 Cents(10) "} 

 Player 2 16:50:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 2 Cents(10) "} 

 Player 2 16:50:58 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 16:50:58 $ACTION_MASSAGE_REMOVE:  
{"id":87} 

 Player 1 16:50:58 $ACTION_MASSAGE_REMOVE:  
{"id":85} 

 Player 1 16:50:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":88,"_text":"Resolve PlayLootCardStackEffect 12 "}} 

 Player 1 16:50:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 2 Cents(10): addMoney"} 

 Player 1 16:50:59 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":30,"particleType":6} 

 Player 1 16:51:00 $DISABLE_PARTICLE_EFFECT:  
{"cardId":30,"particleType":6} 

 Player 1 16:51:01 $SET_MONEY:  
{"playerId":1,"numOfCoins":6} 

 Player 1 16:51:01 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":2}],"result":null,"preventMethod":false,"methodScopeId":271,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 1 16:51:01 $REMOVE_FROM_PILE:  
{"cardId":30} 

 Player 1 16:51:01 $MOVE_CARD:  
{"moveIndex":12,"cardId":30,"placeID":278,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 16:51:01 $MOVE_CARD_END:  
{"moveIndex":12,"cardId":30,"flipIfFlipped":true,"playerId":1} 

 Player 1 16:51:01 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":30} 

 Player 1 16:51:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 2 Cents(10): addMoney"} 

 Player 1 16:51:01 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":12,"creatorCardId":271,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":30,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 16:51:01 $ACTION_MASSAGE_REMOVE:  
{"id":88} 

 Player 1 16:51:01 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:51:01 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":12,"creatorCardId":271,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":30,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 16:51:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":89,"_text":"Remove After Resolve PlayLootCardStackEffect 12  "}} 

 Player 1 16:51:01 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:51:01 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":12,"creatorCardId":271,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":30,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 16:51:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":90,"_text":"Response Remove After Resolve PlayLootCardStackEffect 12"},"childOfId":89} 

 Player 1 16:51:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":91,"_text":"Wait For Response From Player 2 "},"childOfId":89} 

 Player 1 16:51:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 16:51:01 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 16:51:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 2 Cents(10) "} 

 Player 2 16:51:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 2 Cents(10) "} 

 Player 2 16:51:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 2 Cents(10) "} 

 Player 2 16:51:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 2 Cents(10) "} 

 Player 2 16:51:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 2 Cents(10) "} 

 Player 2 16:51:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 2 Cents(10) "} 

 Player 2 16:51:01 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  
{"id":91} 

 Player 1 16:51:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":92,"_text":"Wait For Response From Player 1 "},"childOfId":89} 

 Player 1 16:51:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  
{"id":92} 

 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  
{"id":90} 

 Player 1 16:51:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":93,"_text":"Stack Was Emptied "}} 

 Player 1 16:51:02 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  
{"id":68} 

 Player 1 16:51:02 $ACTION_MASSAGE_REMOVE:  
{"id":69} 

 Player 1 16:51:03 $ACTION_MASSAGE_REMOVE:  
{"id":73} 

 Player 1 16:51:03 $ACTION_MASSAGE_REMOVE:  
{"id":74} 

 Player 1 16:51:03 $ACTION_MASSAGE_REMOVE:  
{"id":78} 

 Player 1 16:51:03 $ACTION_MASSAGE_REMOVE:  
{"id":79} 

 Player 1 16:51:03 $ACTION_MASSAGE_REMOVE:  
{"id":83} 

 Player 1 16:51:03 $ACTION_MASSAGE_REMOVE:  
{"id":84} 

 Player 1 16:51:03 $ACTION_MASSAGE_REMOVE:  
{"id":88} 

 Player 1 16:51:03 $ACTION_MASSAGE_REMOVE:  
{"id":89} 

 Player 1 16:51:03 $ACTION_MASSAGE_REMOVE:  
{"id":93} 

 Player 1 16:51:03 $ACTION_MASSAGE_REMOVE:  
{"id":93} 

 Player 1 16:51:04 $ACTION_MASSAGE_REMOVE:  
{"id":89} 

 Player 2 16:59:34 $MATCH: 