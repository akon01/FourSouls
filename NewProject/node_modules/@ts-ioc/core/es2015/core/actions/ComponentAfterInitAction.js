"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const ActionComposite_1 = require("./ActionComposite");
const utils_1 = require("../../utils");
const CoreActions_1 = require("./CoreActions");
const factories_1 = require("../factories");
/**
 * component after init action, to run @Component decorator class after init hooks.
 *
 * @export
 * @class ComponentAfterInitAction
 * @extends {ActionComposite}
 */
class ComponentAfterInitAction extends ActionComposite_1.ActionComposite {
    constructor() {
        super(CoreActions_1.CoreActions.componentAfterInit);
    }
    working(container, data) {
        if (data.raiseContainer && data.raiseContainer !== container) {
            return;
        }
        if (data.targetType && data.target) {
            if (container.getLifeScope().hasDecorator(data.targetType, factories_1.DecoratorType.Class, surm => surm.actions.includes(CoreActions_1.CoreActions.componentAfterInit))) {
                let component = data.target;
                if (utils_1.isFunction(component.afterInit)) {
                    container.syncInvoke(data.target || data.targetType, 'afterInit', data.target);
                }
            }
        }
    }
    static getClassAnnations() {
        return { "name": "ComponentAfterInitAction", "params": { "constructor": [], "working": ["container", "data"] } };
    }
}
exports.ComponentAfterInitAction = ComponentAfterInitAction;

//# sourceMappingURL=../../sourcemaps/core/actions/ComponentAfterInitAction.js.map
