{"version":3,"sources":["access/IProxyMethod.ts"],"names":[],"mappings":";;AAAA,uCAAiD;AAGjD;;;GAGG;AACU,QAAA,gBAAgB,GAAG,IAAI,kBAAW,CAAe,iBAAiB,CAAC,CAAC","file":"../../access/IProxyMethod.js","sourcesContent":["import { Type, InjectToken } from '@ts-ioc/core';\r\nimport { IPointcut, Joinpoint } from '../joinpoints';\r\n\r\n/**\r\n * Aop proxy method interface token.\r\n * it is a token id, you can register yourself IProxyMethod for this.\r\n */\r\nexport const ProxyMethodToken = new InjectToken<IProxyMethod>('DI_IProxyMethod');\r\n\r\n/**\r\n * proxy method, for proxy advice method.\r\n *\r\n * @export\r\n * @interface IProxyMethod\r\n */\r\nexport interface IProxyMethod {\r\n    /**\r\n     * proceed the proxy method.\r\n     *\r\n     * @param {*} target\r\n     * @param {Type<any>} targetType\r\n     * @param {IPointcut} pointcut\r\n     * @param {Joinpoint} [provJoinpoint]\r\n     * @memberof IProxyMethod\r\n     */\r\n    proceed(target: any, targetType: Type<any>, pointcut: IPointcut, provJoinpoint?: Joinpoint);\r\n}\r\n"]}