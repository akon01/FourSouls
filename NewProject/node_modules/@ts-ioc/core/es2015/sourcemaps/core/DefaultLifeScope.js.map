{"version":3,"sources":["core/DefaultLifeScope.ts"],"names":[],"mappings":"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","file":"../../core/DefaultLifeScope.js","sourcesContent":["import { LifeScope, DecorSummary } from '../LifeScope';\r\nimport { Type, ObjectMap, Token, IocState, Express } from '../types';\r\nimport { isClass, isAbstractClass, isArray, lang } from '../utils';\r\nimport { Singleton } from './decorators/Singleton';\r\nimport { MethodMetadata } from './metadatas';\r\nimport { IContainer } from '../IContainer';\r\nimport { CoreActions, ActionComponent, LifeState } from './actions';\r\nimport {\r\n    DecoratorType, getOwnParamerterNames, getOwnMethodMetadata, hasOwnClassMetadata,\r\n    getMethodDecorators, getClassDecorators, getPropDecorators, getParamDecorators\r\n} from './factories';\r\nimport { ActionData } from './ActionData';\r\nimport { ActionFactory } from './ActionFactory';\r\nimport { IParameter } from '../IParameter';\r\nimport { MetaAccessorToken } from './IMetaAccessor';\r\n\r\n\r\n/**\r\n * default implement life scope.\r\n *\r\n * @export\r\n * @class DefaultLifeScope\r\n * @implements {LifeScope}\r\n */\r\nexport class DefaultLifeScope implements LifeScope {\r\n    decorators: DecorSummary[];\r\n    action: ActionComponent;\r\n    constructor(private container: IContainer) {\r\n        this.decorators = [];\r\n        this.buildAction();\r\n    }\r\n\r\n    addAction(action: ActionComponent, ...nodepaths: string[]): this {\r\n        let parent = this.action;\r\n        nodepaths.forEach(pathname => {\r\n            parent = parent.find(act => act.name === pathname);\r\n        });\r\n        if (parent) {\r\n            parent.add(action);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    registerDecorator(decorator: Function, ...actions: string[]): this {\r\n        let type = this.getDecoratorType(decorator);\r\n        return this.registerCustomDecorator(decorator, type, ...actions);\r\n    }\r\n\r\n    registerCustomDecorator(decorator: Function, type: DecoratorType, ...actions: string[]): this {\r\n        let types = this.toActionName(type);\r\n        let name = decorator.toString();\r\n        if (!this.decorators.some(d => d.name === name)) {\r\n            this.decorators.push({\r\n                name: name,\r\n                types: types,\r\n                actions: actions\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n\r\n    execute<T>(data: ActionData<T>, ...names: string[]) {\r\n        names = names.filter(n => !!n);\r\n        let act: ActionComponent = this.action;\r\n        names.forEach(name => {\r\n            act = act.find(itm => itm.name === name);\r\n        });\r\n        if (act) {\r\n            act.execute(this.container, data);\r\n        }\r\n    }\r\n\r\n    routeExecute<T>(data: ActionData<T>, ...names: string[]) {\r\n        this.execute(data, ...names);\r\n        let container = this.container.parent;\r\n        while (container) {\r\n            container.getLifeScope().execute(lang.assign({}, data), ...names);\r\n            container = container.parent;\r\n        }\r\n    }\r\n\r\n    hasDecorator(target: Type<any> | any, dtype: DecoratorType, match?: Express<DecorSummary, boolean>): boolean {\r\n        let decors;\r\n        switch (dtype) {\r\n            case DecoratorType.Class:\r\n                decors = getClassDecorators(target);\r\n                break;\r\n            case DecoratorType.Property:\r\n                decors = getPropDecorators(target);\r\n                break;\r\n            case DecoratorType.Parameter:\r\n                decors = getParamDecorators(target);\r\n                break;\r\n            case DecoratorType.Method:\r\n                decors = getMethodDecorators(target);\r\n                break;\r\n        }\r\n        if (decors) {\r\n            return decors.some(dec => this.decorators.some(d => d.name === dec && match(d)));\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getClassDecorators(type: Type<any>, match?: Express<DecorSummary, boolean>): DecorSummary[] {\r\n        return getClassDecorators(type)\r\n            .map(dec => this.decorators.find(d => d.name === dec))\r\n            .filter(d => d && (match ? match(d) : true));\r\n    }\r\n\r\n    getMethodDecorators(type: Type<any>, match?: Express<DecorSummary, boolean>): DecorSummary[] {\r\n        return getMethodDecorators(type)\r\n            .map(dec => this.decorators.find(d => d.name === dec))\r\n            .filter(d => d && (match ? match(d) : true));\r\n    }\r\n\r\n    getPropertyDecorators(type: Type<any>, match?: Express<DecorSummary, boolean>): DecorSummary[] {\r\n        return getPropDecorators(type)\r\n            .map(dec => this.decorators.find(d => d.name === dec))\r\n            .filter(d => d && (match ? match(d) : true));\r\n    }\r\n\r\n    getParameterDecorators(target: any, propertyKey: string, match?: Express<DecorSummary, boolean>): DecorSummary[] {\r\n        return getParamDecorators(target, propertyKey)\r\n            .map(dec => this.decorators.find(d => d.name === dec))\r\n            .filter(d => d && (match ? match(d) : true));\r\n    }\r\n\r\n    getDecoratorType(decirator: any): DecoratorType {\r\n        return decirator.decoratorType || DecoratorType.All;\r\n    }\r\n\r\n    /**\r\n     * is vaildate dependence type or not. dependence type must with class decorator.\r\n     *\r\n     * @template T\r\n     * @param {Type<T>} target\r\n     * @returns {boolean}\r\n     * @memberof Container\r\n     */\r\n    isVaildDependence<T>(target: Type<T>): boolean {\r\n        if (!target) {\r\n            return false;\r\n        }\r\n        if (!isClass(target)) {\r\n            return false;\r\n        }\r\n\r\n        if (isAbstractClass(target)) {\r\n            return false;\r\n        }\r\n        return this.getClassDecorators(target).length > 0;\r\n    }\r\n\r\n    getAtionByName(name: string): ActionComponent {\r\n        return this.action.find(action => action.name === name) as ActionComponent;\r\n    }\r\n\r\n    getClassAction(): ActionComponent {\r\n        return this.getAtionByName(this.toActionName(DecoratorType.Class));\r\n    }\r\n    getMethodAction(): ActionComponent {\r\n        return this.getAtionByName(this.toActionName(DecoratorType.Method));\r\n    }\r\n\r\n    getPropertyAction(): ActionComponent {\r\n        return this.getAtionByName(this.toActionName(DecoratorType.Property));\r\n    }\r\n    getParameterAction(): ActionComponent {\r\n        return this.getAtionByName(this.toActionName(DecoratorType.Parameter));\r\n    }\r\n\r\n    /**\r\n     * get constructor parameters metadata.\r\n     *\r\n     * @template T\r\n     * @param {Type<T>} type\r\n     * @returns {IParameter[]}\r\n     * @memberof IContainer\r\n     */\r\n    getConstructorParameters<T>(type: Type<T>): IParameter[] {\r\n        return this.getParameters(type);\r\n    }\r\n\r\n    /**\r\n     * get method params metadata.\r\n     *\r\n     * @template T\r\n     * @param {Type<T>} type\r\n     * @param {T} instance\r\n     * @param {(string | symbol)} propertyKey\r\n     * @returns {IParameter[]}\r\n     * @memberof IContainer\r\n     */\r\n    getMethodParameters<T>(type: Type<T>, instance: T, propertyKey: string): IParameter[] {\r\n        return this.getParameters(type, instance, propertyKey);\r\n    }\r\n\r\n    /**\r\n     * get paramerter names.\r\n     *\r\n     * @template T\r\n     * @param {Type<T>} type\r\n     * @param {string} propertyKey\r\n     * @returns {string[]}\r\n     * @memberof DefaultLifeScope\r\n     */\r\n    getParamerterNames<T>(type: Type<T>, propertyKey: string): string[] {\r\n        let metadata = getOwnParamerterNames(type);\r\n        let paramNames = [];\r\n        if (metadata && metadata.hasOwnProperty(propertyKey)) {\r\n            paramNames = metadata[propertyKey]\r\n        }\r\n        if (!isArray(paramNames)) {\r\n            paramNames = [];\r\n        }\r\n        return paramNames;\r\n    }\r\n\r\n    isSingletonType<T>(type: Type<T>): boolean {\r\n        if (hasOwnClassMetadata(Singleton, type)) {\r\n            return true;\r\n        }\r\n        let metadata = this.container.get(MetaAccessorToken).find(type, this.container, m => m.singleton === true);\r\n        return !!metadata;\r\n    }\r\n\r\n    getMethodMetadatas<T>(type: Type<T>, propertyKey: string): MethodMetadata[] {\r\n        let metadatas = [];\r\n        this.getMethodDecorators(type)\r\n            .forEach(dec => {\r\n                let metas: ObjectMap<MethodMetadata[]> = getOwnMethodMetadata<MethodMetadata>(dec.name, type);\r\n                if (metas.hasOwnProperty(propertyKey)) {\r\n                    metadatas = metadatas.concat(metas[propertyKey] || []);\r\n                }\r\n            });\r\n        return metadatas;\r\n    }\r\n\r\n    filerDecorators(express?: Express<DecorSummary, boolean>): DecorSummary[] {\r\n        return this.decorators.filter(express);\r\n    }\r\n\r\n    protected getParameters<T>(type: Type<T>, instance?: T, propertyKey?: string): IParameter[] {\r\n        propertyKey = propertyKey || 'constructor';\r\n        let data = {\r\n            target: instance,\r\n            targetType: type,\r\n            propertyKey: propertyKey\r\n        } as ActionData<Token<any>[]>;\r\n        this.execute(data, LifeState.onInit, CoreActions.bindParameterType);\r\n\r\n        let paramNames = this.getParamerterNames(type, propertyKey);\r\n\r\n        if (data.execResult.length) {\r\n            return data.execResult.map((typ, idx) => {\r\n                return {\r\n                    type: typ,\r\n                    name: paramNames[idx]\r\n                }\r\n            });\r\n        } else {\r\n            return paramNames.map(name => {\r\n                return {\r\n                    name: name,\r\n                    type: undefined\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    protected getTypeDecorators(decType: string, match?: Express<DecorSummary, boolean>): DecorSummary[] {\r\n        return this.filerDecorators(value => {\r\n            let flag = (value.types || '').indexOf(decType) >= 0;\r\n            if (flag && match) {\r\n                flag = match(value);\r\n            }\r\n            return flag;\r\n        });\r\n    }\r\n\r\n    protected buildAction() {\r\n        let factory = new ActionFactory();\r\n\r\n        let action = factory.create('');\r\n        action\r\n            .add(factory.create(IocState.design)\r\n                .add(factory.create(CoreActions.bindProvider))\r\n                .add(factory.create(CoreActions.autorun))\r\n            )\r\n            .add(factory.create(IocState.runtime)\r\n                .add(factory.create(LifeState.beforeCreateArgs))\r\n                .add(factory.create(LifeState.beforeConstructor))\r\n                .add(factory.create(LifeState.afterConstructor))\r\n                .add(factory.create(LifeState.onInit)\r\n                    .add(factory.create(CoreActions.componentBeforeInit))\r\n                    .add(factory.create(this.toActionName(DecoratorType.Class)))\r\n                    .add(factory.create(this.toActionName(DecoratorType.Method)))\r\n                    .add(factory.create(this.toActionName(DecoratorType.Property))\r\n                        .add(factory.create(CoreActions.bindPropertyType))\r\n                        .add(factory.create(CoreActions.injectProperty)))\r\n                    .add(factory.create(this.toActionName(DecoratorType.Parameter))\r\n                        .add(factory.create(CoreActions.bindParameterType))\r\n                        .add(factory.create(CoreActions.bindParameterProviders)))\r\n                    .add(factory.create(CoreActions.componentInit))\r\n                )\r\n                .add(factory.create(LifeState.AfterInit)\r\n                    .add(factory.create(CoreActions.singletion))\r\n                    .add(factory.create(CoreActions.componentAfterInit))\r\n                    .add(factory.create(CoreActions.methodAutorun)))\r\n            )\r\n            .add(factory.create(CoreActions.cache));\r\n\r\n        this.action = action;\r\n    }\r\n\r\n\r\n    toActionName(type: DecoratorType): string {\r\n        let types = [];\r\n        if (type & DecoratorType.Class) {\r\n            types.push('ClassDecorator');\r\n        }\r\n        if (type & DecoratorType.Method) {\r\n            types.push('MethodDecorator');\r\n        }\r\n        if (type & DecoratorType.Property) {\r\n            types.push('PropertyDecorator');\r\n        }\r\n        if (type & DecoratorType.Parameter) {\r\n            types.push('ParameterDecorator');\r\n        }\r\n\r\n        return types.join(',');\r\n    }\r\n\r\n\n                        static getClassAnnations():any  {\n                            return {\"name\":\"DefaultLifeScope\",\"params\":{\"constructor\":[\"container\"],\"addAction\":[\"action\",\"nodepaths\"],\"registerDecorator\":[\"decorator\",\"actions\"],\"registerCustomDecorator\":[\"decorator\",\"type\",\"actions\"],\"execute\":[\"data\",\"names\"],\"routeExecute\":[\"data\",\"names\"],\"hasDecorator\":[\"target\",\"dtype\",\"match\"],\"getClassDecorators\":[\"type\",\"match\"],\"getMethodDecorators\":[\"type\",\"match\"],\"getPropertyDecorators\":[\"type\",\"match\"],\"getParameterDecorators\":[\"target\",\"propertyKey\",\"match\"],\"getDecoratorType\":[\"decirator\"],\"isVaildDependence\":[\"target\"],\"getAtionByName\":[\"name\"],\"getClassAction\":[],\"getMethodAction\":[],\"getPropertyAction\":[],\"getParameterAction\":[],\"getConstructorParameters\":[\"type\"],\"getMethodParameters\":[\"type\",\"instance\",\"propertyKey\"],\"getParamerterNames\":[\"type\",\"propertyKey\"],\"isSingletonType\":[\"type\"],\"getMethodMetadatas\":[\"type\",\"propertyKey\"],\"filerDecorators\":[\"express\"],\"getParameters\":[\"type\",\"instance\",\"propertyKey\"],\"getTypeDecorators\":[\"decType\",\"match\"],\"buildAction\":[],\"toActionName\":[\"type\"]}};\n                        }\n                   }\r\n"]}