Start Log 

 Player 1 18:09:44 $MATCH:  

 Player 1 18:09:45 $START_GAME:  

 Player 1 18:09:45 $MOVE_TO_TABLE:  

 Player 2 18:09:45 $MOVE_TO_TABLE:  

 Player 1 18:09:50 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 18:09:54 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 2 18:09:54 $SET_CHAR:  
{"originPlayerId":2,"playerId":1,"charCardId":309,"itemCardId":310} 

 Player 1 18:09:54 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":309,"itemCardId":310} 

 Player 1 18:09:54 $SET_CHAR_END:  
{"playerId":2} 

 Player 2 18:09:54 $CHOOSE_FOR_EDEN:  
{"playerId":2,"originPlayerId":2} 

 Player 2 18:09:54 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[197,166,175,144,148,205,199,146,195,201,202,188,143,182,183,177,170,200,192,208,160,206,213,204,203,217,145,161,218,179,216,155,207,163,178,159,212,198,191,162,215,187,164,165,184,150,168,219,151,142,220,193,154,169,214,185,174,180,186,149,209,181,210,147,153,158,190,173,141,196,211,176,156,172,152,167,194,189,157,171]} 

 Player 2 18:10:02 $EDEN_CHOSEN:  
{"cardId":175,"playerId":2} 

 Player 2 18:10:02 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[197,166,144,148,205,199,146,195,201,202,188,143,182,183,177,170,200,192,208,160,206,213,204,203,217,145,161,218,179,216,155,207,163,178,159,212,198,191,162,215,187,164,165,184,150,168,219,151,142,220,193,154,169,214,185,174,180,186,149,209,181,210,147,153,158,190,173,141,196,211,176,156,172,152,167,194,189,157,171]} 

 Player 2 18:10:02 $FLIP_CARD:  
{"cardId":175} 

 Player 2 18:10:02 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":315,"itemCardId":175} 

 Player 2 18:10:02 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[49,25,57,11,6,130,21,120,30,90,80,104,132,7,61,40,33,23,82,101,78,114,47,98,123,5,107,87,28,27,62,129,55,105,15,71,124,97,81,86,126,84,36,135,118,85,20,14,37,59,73,91,32,8,131,13,31,75,10,51,24,65,12,4,58,93,77,76,125,111,42,94,112,139,9,83,102,67,138,99,43,69,54,70,26,92,100,22,19,108,64,17,34,115,39,137,18,44,41,96,74,103,136,38,95,52,134,63,66,133,113,88,45,116,68,56,46,50,79,16,72,110,29,128,127,60,121,106,122,117,109,89,119,53,35,48]} 

 Player 2 18:10:02 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[301,264,266,306,254,250,275,289,297,234,268,277,278,231,284,248,240,305,259,237,263,230,236,226,307,223,253,228,233,249,265,290,304,293,256,261,308,246,299,291,270,300,302,274,271,235,251,232,252,286,222,238,285,294,260,298,269,283,262,281,255,227,267,225,280,242,224,295,239,276,282,229,257,272,279,244,292,241,243,303,288,287,273,258,247,245,296]} 

 Player 2 18:10:02 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[171,144,156,198,216,155,218,173,210,192,212,184,145,154,176,167,170,220,183,181,211,168,163,199,193,153,146,161,190,151,200,160,141,177,205,219,172,201,207,189,157,179,214,180,206,166,217,182,142,188,178,150,165,209,148,159,149,196,191,174,213,208,162,195,147,197,158,194,187,143,169,204,203,152,202,186,164,215,185]} 

 Player 2 18:10:02 $DRAW_CARD:  
{"deckType":5} 

 Player 2 18:10:02 $FLIP_CARD:  
{"cardId":185} 

 Player 2 18:10:02 $ADD_STORE_CARD:  
{"cardId":185} 

 Player 2 18:10:02 $DRAW_CARD:  
{"deckType":5} 

 Player 2 18:10:02 $FLIP_CARD:  
{"cardId":215} 

 Player 2 18:10:02 $ADD_STORE_CARD:  
{"cardId":215} 

 Player 2 18:10:02 $DRAW_CARD:  
{"deckType":2} 

 Player 2 18:10:02 $FLIP_CARD:  
{"cardId":296} 

 Player 2 18:10:02 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":296} 

 Player 2 18:10:02 $NEW_MONSTER_ON_PLACE:  
{"cardId":296,"monsterPlaceId":1} 

 Player 2 18:10:02 $DRAW_CARD:  
{"deckType":2} 

 Player 2 18:10:02 $FLIP_CARD:  
{"cardId":245} 

 Player 2 18:10:02 $REGISTER_PASSIVE_ITEM:  
{"cardId":245} 

 Player 2 18:10:02 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":245} 

 Player 2 18:10:02 $NEW_MONSTER_ON_PLACE:  
{"cardId":245,"monsterPlaceId":2} 

 Player 2 18:10:02 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 18:10:02 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":309,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 18:10:02 $DRAW_CARD:  
{"deckType":1} 

 Player 2 18:10:02 $MOVE_CARD:  
{"moveIndex":1,"cardId":48,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 18:10:03 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":48,"flipIfFlipped":false,"playerId":2} 

 Player 2 18:10:03 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":48} 

 Player 2 18:10:03 $FLIP_CARD:  
{"cardId":48} 

 Player 2 18:10:03 $FLIP_CARD:  
{"cardId":48} 

 Player 2 18:10:03 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":48} 

 Player 2 18:10:03 $DRAW_CARD:  
{"deckType":1} 

 Player 2 18:10:03 $MOVE_CARD:  
{"moveIndex":2,"cardId":35,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 18:10:03 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":35,"flipIfFlipped":false,"playerId":2} 

 Player 2 18:10:03 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":35} 

 Player 2 18:10:03 $FLIP_CARD:  
{"cardId":35} 

 Player 2 18:10:03 $FLIP_CARD:  
{"cardId":35} 

 Player 2 18:10:03 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":35} 

 Player 2 18:10:03 $DRAW_CARD:  
{"deckType":1} 

 Player 2 18:10:03 $MOVE_CARD:  
{"moveIndex":3,"cardId":53,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 18:10:04 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":53,"flipIfFlipped":false,"playerId":2} 

 Player 2 18:10:04 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":53} 

 Player 2 18:10:04 $FLIP_CARD:  
{"cardId":53} 

 Player 2 18:10:04 $FLIP_CARD:  
{"cardId":53} 

 Player 2 18:10:04 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":53} 

 Player 2 18:10:04 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 18:10:04 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 18:10:04 $DRAW_CARD:  
{"deckType":1} 

 Player 2 18:10:04 $MOVE_CARD:  
{"moveIndex":4,"cardId":119,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 18:10:04 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":119,"flipIfFlipped":false,"playerId":2} 

 Player 2 18:10:04 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":119} 

 Player 2 18:10:04 $FLIP_CARD:  
{"cardId":119} 

 Player 2 18:10:04 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":119} 

 Player 2 18:10:05 $DRAW_CARD:  
{"deckType":1} 

 Player 2 18:10:05 $MOVE_CARD:  
{"moveIndex":5,"cardId":89,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 18:10:05 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":89,"flipIfFlipped":false,"playerId":2} 

 Player 2 18:10:05 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":89} 

 Player 2 18:10:05 $FLIP_CARD:  
{"cardId":89} 

 Player 2 18:10:05 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":89} 

 Player 2 18:10:05 $DRAW_CARD:  
{"deckType":1} 

 Player 2 18:10:05 $MOVE_CARD:  
{"moveIndex":6,"cardId":109,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 18:10:05 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":109,"flipIfFlipped":false,"playerId":2} 

 Player 2 18:10:05 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":109} 

 Player 2 18:10:05 $FLIP_CARD:  
{"cardId":109} 

 Player 2 18:10:05 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":109} 

 Player 2 18:10:05 $GAME_HAS_STARTED:  

 Player 2 18:10:06 $SET_TURN:  
{"playerId":1} 

 Player 2 18:10:06 $START_TURN:  
{"playerId":1} 

 Player 2 18:10:06 $UPDATE_ACTIONS:  

 Player 1 18:10:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:10:06 $NEXT_STACK_ID:  

 Player 1 18:10:06 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:10:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 18:10:06 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":309,"turnPlayerCardId":309,"stackEffectType":13}} 

 Player 1 18:10:06 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":309,"turnPlayerCardId":309,"stackEffectType":13}} 

 Player 1 18:10:06 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 18:10:06 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 2 18:10:06 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:10:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 18:10:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 1 18:10:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:10:09 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":309,"turnPlayerCardId":309,"stackEffectType":13}} 

 Player 1 18:10:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 1 18:10:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 1 18:10:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:10:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 1 18:10:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 18:10:09 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 18:10:09 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[315,175]} 

 Player 2 18:10:09 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 18:10:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 1 18:10:09 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":309,"turnPlayerCardId":309,"stackEffectType":13}} 

 Player 1 18:10:09 $DRAW_CARD:  
{"deckType":1} 

 Player 1 18:10:09 $MOVE_CARD:  
{"moveIndex":7,"cardId":117,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.599999904632568,"y":-0.20000000298023224,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 18:10:10 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":117,"flipIfFlipped":false,"playerId":1} 

 Player 1 18:10:10 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":117} 

 Player 1 18:10:10 $FLIP_CARD:  
{"cardId":117} 

 Player 1 18:10:10 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":117} 

 Player 1 18:10:10 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":309,"turnPlayerCardId":309,"stackEffectType":13}} 

 Player 1 18:10:10 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":1} 

 Player 1 18:10:10 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 18:10:10 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 1 18:10:13 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":1} 

 Player 1 18:10:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 1 18:10:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:10:13 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":309,"turnPlayerCardId":309,"stackEffectType":13}} 

 Player 1 18:10:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 1 18:10:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 1 18:10:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 18:10:13 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 18:10:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 18:10:13 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[315,175]} 

 Player 2 18:10:13 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 18:10:13 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 1 18:10:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 1 18:10:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:10:13 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 1 18:10:13 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 1 18:10:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 1 18:10:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:10:13 $CLEAR_SE_VIS:  

 Player 1 18:10:19 $NEXT_STACK_ID:  

 Player 1 18:10:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(0) "} 

 Player 1 18:10:19 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":309,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":35,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 18:10:19 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":309,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":35,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 18:10:19 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 18:10:19 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 2 18:10:19 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:10:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(0) "} 

 Player 1 18:10:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add PlayLootCardStackEffect 2 "}} 

 Player 1 18:10:22 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":35} 

 Player 1 18:10:22 $MOVE_CARD:  
{"moveIndex":8,"cardId":35,"placeID":327,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 18:10:23 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":35,"flipIfFlipped":true,"playerId":1} 

 Player 1 18:10:23 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":35} 

 Player 1 18:10:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(0): addMoney"} 

 Player 1 18:10:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:10:23 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":309,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":35,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":35,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 18:10:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding PlayLootCardStackEffect 2"},"childOfId":10} 

 Player 1 18:10:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 1 18:10:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:10:23 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 1 18:10:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 1 18:10:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 18:10:23 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 18:10:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(0) "} 

 Player 2 18:10:23 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[315,175]} 

 Player 2 18:10:23 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 18:10:23 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 1 18:10:23 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 1 18:10:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve PlayLootCardStackEffect 2 "}} 

 Player 1 18:10:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(0): addMoney"} 

 Player 1 18:10:23 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":309,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":35,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":35,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 18:10:23 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":35,"particleType":6} 

 Player 2 18:10:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(0) "} 

 Player 1 18:10:25 $DISABLE_PARTICLE_EFFECT:  
{"cardId":35,"particleType":6} 

 Player 1 18:10:25 $SET_MONEY:  
{"playerId":1,"numOfCoins":6} 

 Player 1 18:10:25 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":309,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 18:10:25 $REMOVE_FROM_PILE:  
{"cardId":35} 

 Player 1 18:10:25 $MOVE_CARD:  
{"moveIndex":9,"cardId":35,"placeID":328,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 18:10:26 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":35,"flipIfFlipped":true,"playerId":1} 

 Player 1 18:10:26 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":35} 

 Player 1 18:10:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(0): addMoney"} 

 Player 1 18:10:26 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":309,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":35,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 18:10:26 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":2} 

 Player 1 18:10:26 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 18:10:26 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 2 18:10:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(0) "} 

 Player 1 18:10:29 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":2} 

 Player 1 18:10:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve PlayLootCardStackEffect 2  "}} 

 Player 1 18:10:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:10:29 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":309,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":35,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 18:10:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve PlayLootCardStackEffect 2"},"childOfId":15} 

 Player 1 18:10:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 1 18:10:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 18:10:29 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 18:10:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(0) "} 

 Player 2 18:10:29 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[315,175]} 

 Player 2 18:10:29 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 18:10:29 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 1 18:10:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 1 18:10:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:10:30 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 1 18:10:30 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 1 18:10:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 1 18:10:30 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:10:30 $CLEAR_SE_VIS:  

 Player 1 18:10:32 $NEXT_STACK_ID:  

 Player 1 18:10:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Spider"} 

 Player 1 18:10:32 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":309,"attackingPlayerCardId":309,"idOfCardBeingAttacked":296,"stackEffectType":4}} 

 Player 1 18:10:32 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":309,"attackingPlayerCardId":309,"idOfCardBeingAttacked":296,"stackEffectType":4}} 

 Player 1 18:10:32 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 18:10:32 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 2 18:10:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:10:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Spider"} 

 Player 1 18:10:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add DeclareAttack 3 "}} 

 Player 1 18:10:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:10:35 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":309,"attackingPlayerCardId":309,"idOfCardBeingAttacked":296,"stackEffectType":4}} 

 Player 1 18:10:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding DeclareAttack 3"},"childOfId":20} 

 Player 1 18:10:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 1 18:10:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:10:35 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 1 18:10:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 1 18:10:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 18:10:36 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 18:10:36 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[315,175]} 

 Player 2 18:10:36 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 18:10:36 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 1 18:10:36 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 1 18:10:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve DeclareAttack 3 "}} 

 Player 1 18:10:36 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":309,"attackingPlayerCardId":309,"idOfCardBeingAttacked":296,"stackEffectType":4}} 

 Player 1 18:10:36 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":296,"particleType":5} 

 Player 1 18:10:36 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":309,"scopeIsPlayer":true,"index":2,"originStackId":3},"isAfterActivation":true,"index":2} 

 Player 1 18:10:36 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":309,"attackingPlayerCardId":309,"idOfCardBeingAttacked":296,"stackEffectType":4}} 

 Player 1 18:10:36 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":3} 

 Player 1 18:10:36 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 18:10:36 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 1 18:10:39 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":3} 

 Player 1 18:10:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Remove After Resolve DeclareAttack 3  "}} 

 Player 1 18:10:39 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:10:39 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":309,"attackingPlayerCardId":309,"idOfCardBeingAttacked":296,"stackEffectType":4}} 

 Player 1 18:10:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Response Remove After Resolve DeclareAttack 3"},"childOfId":25} 

 Player 1 18:10:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Wait For Response From Player 2 "},"childOfId":25} 

 Player 1 18:10:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 18:10:39 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 18:10:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Spider"} 

 Player 2 18:10:39 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[315,175]} 

 Player 2 18:10:39 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 18:10:39 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 1 18:10:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 1 "},"childOfId":25} 

 Player 1 18:10:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:10:39 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 1 18:10:39 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 1 18:10:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Stack Was Emptied "}} 

 Player 1 18:10:39 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:10:39 $CLEAR_SE_VIS:  

 Player 1 18:10:42 $NEXT_STACK_ID:  

 Player 1 18:10:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Spider<Monster>"} 

 Player 1 18:10:42 $ADD_TO_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":309,"rollingPlayerCardId":309,"stackEffectType":2,"attackedMonsterCardId":296}} 

 Player 1 18:10:42 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":309,"rollingPlayerCardId":309,"stackEffectType":2,"attackedMonsterCardId":296}} 

 Player 1 18:10:42 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 18:10:42 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 2 18:10:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:10:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Spider<Monster>"} 

 Player 1 18:10:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Add AttackRoll 4 "}} 

 Player 1 18:10:45 $ROLL_DICE:  
{"playerId":1} 

 Player 1 18:10:47 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":1} 

 Player 1 18:10:47 $UPDATE_STACK_VIS:  
{"stackId":4,"text":"player rolled 1 vs Spider<Monster>"} 

 Player 1 18:10:47 $SHOW_DICE_ROLL:  
{"stackId":4} 

 Player 1 18:10:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 1 vs Spider<Monster>"} 

 Player 1 18:10:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:10:50 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":309,"numberRolled":1,"rollingPlayerCardId":309,"stackEffectType":2,"attackedMonsterCardId":296}} 

 Player 1 18:10:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Response Adding AttackRoll 4"},"childOfId":30} 

 Player 1 18:10:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Wait For Response From Player 1 "},"childOfId":30} 

 Player 1 18:10:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:10:51 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 1 18:10:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 2 "},"childOfId":30} 

 Player 1 18:10:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 18:10:51 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 18:10:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Spider<Monster>"} 

 Player 2 18:10:51 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[315,175]} 

 Player 2 18:10:51 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 18:10:51 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 1 18:10:51 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 1 18:10:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Resolve AttackRoll 4 "}} 

 Player 1 18:10:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 1 vs Spider<Monster>"} 

 Player 1 18:10:51 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":309,"numberRolled":1,"rollingPlayerCardId":309,"stackEffectType":2,"attackedMonsterCardId":296}} 

 Player 1 18:10:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Added 0 to original roll"}} 

 Player 1 18:10:51 $NEXT_STACK_ID:  

 Player 1 18:10:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:10:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to Azazel \n2:Player 1 rolled 1 vs Spider<Monster>"} 

 Player 1 18:10:51 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":309,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":309,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1}} 

 Player 1 18:10:51 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 18:10:51 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 2 18:10:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Spider<Monster>"} 

 Player 2 18:10:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Spider<Monster>"} 

 Player 1 18:10:54 $CLEAR_SE_VIS:  

 Player 1 18:10:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to Azazel \n2:Player 1 rolled 1 vs Spider<Monster>"} 

 Player 1 18:10:54 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":309,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":309,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1}} 

 Player 1 18:10:54 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":309,"numberRolled":1,"rollingPlayerCardId":309,"stackEffectType":2,"attackedMonsterCardId":296}} 

 Player 1 18:10:54 $REPLACE_STACK:  
{"currentStack":[{"entityId":5,"creatorCardId":309,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":309,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1},{"entityId":4,"creatorCardId":309,"numberRolled":1,"rollingPlayerCardId":309,"stackEffectType":2,"attackedMonsterCardId":296}]} 

 Player 1 18:10:54 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":309,"scopeIsPlayer":true,"index":3,"originStackId":4},"isAfterActivation":true,"index":3} 

 Player 1 18:10:54 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":309,"numberRolled":1,"rollingPlayerCardId":309,"stackEffectType":2,"attackedMonsterCardId":296}} 

 Player 1 18:10:54 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":4} 

 Player 1 18:10:54 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 18:10:54 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 2 18:10:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Spider<Monster>"} 

 Player 2 18:10:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to Azazel \n2:Player 1 is rolling against Spider<Monster>"} 

 Player 1 18:10:57 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":4} 

 Player 1 18:10:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Remove After Resolve AttackRoll 4  "}} 

 Player 1 18:10:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to Azazel"} 

 Player 1 18:10:57 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":309,"numberRolled":1,"rollingPlayerCardId":309,"stackEffectType":2,"attackedMonsterCardId":296}} 

 Player 1 18:10:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Response Remove After Resolve AttackRoll 4"},"childOfId":36} 

 Player 1 18:10:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 1 "},"childOfId":36} 

 Player 1 18:10:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:10:57 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 1 18:10:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Wait For Response From Player 2 "},"childOfId":36} 

 Player 1 18:10:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 18:10:57 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 18:10:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to Azazel \n2:Player 1 is rolling against Spider<Monster>"} 

 Player 2 18:10:57 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[315,175]} 

 Player 2 18:10:57 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 18:10:58 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 1 18:10:58 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 1 18:10:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Resolve CombatDamage 5 "}} 

 Player 1 18:10:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to Azazel"} 

 Player 1 18:10:58 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":309,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":309,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1}} 

 Player 1 18:10:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider 1 combat damage to Azazel"} 

 Player 1 18:10:58 $UPDATE_STACK_VIS:  
{"stackId":5,"text":"Spider will deal 1 combat damage to Azazel"} 

 Player 1 18:10:58 $PLAYER_GET_HIT:  
{"playerId":1,"damage":1,"damageDealerId":296} 

 Player 1 18:10:58 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":296}],"result":null,"preventMethod":false,"methodScopeId":309,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 1 18:10:58 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_TAKEN","args":[{"type":2,"number":1},{"type":2,"number":1},{"type":0,"number":296}],"result":null,"preventMethod":false,"methodScopeId":309,"scopeIsPlayer":true,"index":5,"originStackId":5},"isAfterActivation":true,"index":5} 

 Player 1 18:10:58 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":309,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":309,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1}} 

 Player 1 18:10:58 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":5} 

 Player 1 18:10:58 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 18:10:58 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 2 18:10:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to Azazel"} 

 Player 1 18:11:01 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":5} 

 Player 1 18:11:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Remove After Resolve CombatDamage 5  "}} 

 Player 1 18:11:01 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:11:01 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":309,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":309,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1}} 

 Player 1 18:11:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Response Remove After Resolve CombatDamage 5"},"childOfId":41} 

 Player 1 18:11:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 2 "},"childOfId":41} 

 Player 1 18:11:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 18:11:01 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 18:11:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Spider combat damage to Azazel"} 

 Player 2 18:11:01 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[315,175]} 

 Player 2 18:11:01 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 18:11:01 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 1 18:11:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Wait For Response From Player 1 "},"childOfId":41} 

 Player 1 18:11:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:11:01 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 1 18:11:01 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 1 18:11:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Stack Was Emptied "}} 

 Player 1 18:11:01 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:11:01 $CLEAR_SE_VIS:  

 Player 1 18:11:02 $NEXT_STACK_ID:  

 Player 1 18:11:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Spider<Monster>"} 

 Player 1 18:11:02 $ADD_TO_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":309,"rollingPlayerCardId":309,"stackEffectType":2,"attackedMonsterCardId":296}} 

 Player 1 18:11:02 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":309,"rollingPlayerCardId":309,"stackEffectType":2,"attackedMonsterCardId":296}} 

 Player 1 18:11:02 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 18:11:02 $SHOW_STACK_EFFECT:  
{"effectId":6} 

 Player 2 18:11:02 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:11:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Spider<Monster>"} 

 Player 1 18:11:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Add AttackRoll 6 "}} 

 Player 1 18:11:05 $ROLL_DICE:  
{"playerId":1} 

 Player 1 18:11:06 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":2} 

 Player 1 18:11:06 $UPDATE_STACK_VIS:  
{"stackId":6,"text":"player rolled 2 vs Spider<Monster>"} 

 Player 1 18:11:06 $SHOW_DICE_ROLL:  
{"stackId":6} 

 Player 1 18:11:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Spider<Monster>"} 

 Player 1 18:11:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:11:09 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":309,"numberRolled":2,"rollingPlayerCardId":309,"stackEffectType":2,"attackedMonsterCardId":296}} 

 Player 1 18:11:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Response Adding AttackRoll 6"},"childOfId":46} 

 Player 1 18:11:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Wait For Response From Player 1 "},"childOfId":46} 

 Player 1 18:11:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:11:09 $SHOW_REACTIONS:  
{"playerId":1,"cardsIds":[309,310]} 

 Player 2 18:11:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Spider<Monster>"} 

 Player 1 18:11:11 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[309,310]} 

 Player 1 18:11:11 $NEXT_STACK_ID:  

 Player 1 18:11:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Spider<Monster>"} 

 Player 1 18:11:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Spider<Monster> \n2:Player 1 activated Lord Of The Pit"} 

 Player 1 18:11:11 $ADD_TO_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":309,"hasLockingStackEffect":false,"itemToPlayCardId":310,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 18:11:11 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":309,"hasLockingStackEffect":false,"itemToPlayCardId":310,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 18:11:11 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 18:11:11 $SHOW_STACK_EFFECT:  
{"effectId":7} 

 Player 2 18:11:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Spider<Monster>"} 

 Player 2 18:11:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Spider<Monster> \n2:Player 1 activated Lord Of The Pit"} 

 Player 1 18:11:12 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[309,310]} 

 Player 1 18:11:12 $RESPOND_TO:  
{"playerId":-1,"stackEffectResponse":false} 

 Player 1 18:11:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Add ActivateItem 7 "}} 

 Player 1 18:11:14 $USE_ITEM:  
{"cardId":310} 

 Player 1 18:11:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:11:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Spider<Monster> \n2:Player 1 activated Lord Of The Pit"} 

 Player 1 18:11:14 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":309,"hasLockingStackEffect":false,"itemToPlayCardId":310,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 18:11:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Response Adding ActivateItem 7"},"childOfId":49} 

 Player 1 18:11:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Wait For Response From Player 1 "},"childOfId":49} 

 Player 1 18:11:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:11:15 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 1 18:11:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Wait For Response From Player 2 "},"childOfId":49} 

 Player 1 18:11:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 18:11:15 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 18:11:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Spider<Monster> \n2:Player 1 activated Lord Of The Pit"} 

 Player 2 18:11:15 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[315,175]} 

 Player 2 18:11:15 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 18:11:15 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 1 18:11:15 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 1 18:11:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Resolve ActivateItem 7 "}} 

 Player 1 18:11:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Spider<Monster> \n2:Player 1 activated Lord Of The Pit"} 

 Player 1 18:11:15 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":309,"hasLockingStackEffect":false,"itemToPlayCardId":310,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 18:11:15 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":310,"particleType":6} 

 Player 2 18:11:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Spider<Monster> \n2:Player 1 activated Lord Of The Pit"} 

 Player 1 18:11:17 $DISABLE_PARTICLE_EFFECT:  
{"cardId":310,"particleType":6} 

 Player 1 18:11:17 $DISABLE_PARTICLE_EFFECT:  
{"cardId":296,"particleType":5} 

 Player 1 18:11:17 $CANCEL_ATTACK:  

 Player 1 18:11:17 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":6} 

 Player 1 18:11:17 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":6} 

 Player 1 18:11:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Fizzle AttackRoll 6"}} 

 Player 1 18:11:17 $FIZZLE_STACK_EFFECT:  
{"entityId":6} 

 Player 1 18:11:17 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ACTIVATE_ITEM","args":[{"type":0,"number":310}],"result":null,"preventMethod":false,"methodScopeId":309,"scopeIsPlayer":true,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 

 Player 1 18:11:17 $NEXT_STACK_ID:  

 Player 1 18:11:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lord Of The Pit"} 

 Player 1 18:11:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lord Of The Pit \n2:Activate Cursed Psy Horf effect DealDamage<DealDamage>"} 

 Player 1 18:11:17 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":8,"creatorCardId":309,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":245,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":245,"effctType":0},"isAfterActivation":true,"index":6,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 18:11:17 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":8,"creatorCardId":309,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":245,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":245,"effctType":0},"isAfterActivation":true,"index":6,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 18:11:17 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 18:11:17 $SHOW_STACK_EFFECT:  
{"effectId":8} 

 Player 2 18:11:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lord Of The Pit"} 

 Player 2 18:11:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lord Of The Pit \n2:Activate Cursed Psy Horf "} 

 Player 1 18:11:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Add ActivatePassiveEffect 8 "}} 

 Player 1 18:11:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lord Of The Pit \n2:Activate Cursed Psy Horf effect DealDamage<DealDamage>"} 

 Player 1 18:11:20 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[309],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":245,"effectCardPlayer":245},"entityId":8,"creatorCardId":309,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":245,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":245,"effctType":0},"isAfterActivation":true,"index":6,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 18:11:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":56,"_text":"Response Adding ActivatePassiveEffect 8"},"childOfId":55} 

 Player 1 18:11:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":57,"_text":"Wait For Response From Player 2 "},"childOfId":55} 

 Player 1 18:11:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 18:11:20 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 18:11:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lord Of The Pit \n2:Activate Cursed Psy Horf "} 

 Player 2 18:11:20 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[315,175]} 

 Player 2 18:11:20 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 18:11:20 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 1 18:11:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":58,"_text":"Wait For Response From Player 1 "},"childOfId":55} 

 Player 1 18:11:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:11:20 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 1 18:11:20 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 1 18:11:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":59,"_text":"Resolve ActivatePassiveEffect 8 "}} 

 Player 1 18:11:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lord Of The Pit \n2:Activate Cursed Psy Horf effect DealDamage<DealDamage>"} 

 Player 1 18:11:20 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[309],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":245,"effectCardPlayer":245},"entityId":8,"creatorCardId":309,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":245,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":245,"effctType":0},"isAfterActivation":true,"index":6,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 18:11:20 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":245,"particleType":6} 

 Player 2 18:11:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lord Of The Pit \n2:Activate Cursed Psy Horf "} 

 Player 1 18:11:22 $DISABLE_PARTICLE_EFFECT:  
{"cardId":245,"particleType":6} 

 Player 1 18:11:22 $PLAYER_GET_HIT:  
{"playerId":1,"damage":1,"damageDealerId":245} 

 Player 1 18:11:22 $NEXT_STACK_ID:  

 Player 1 18:11:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lord Of The Pit \n2:Activate Cursed Psy Horf effect DealDamage<DealDamage>"} 

 Player 1 18:11:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:11:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lord Of The Pit \n2:Activate Cursed Psy Horf effect DealDamage<DealDamage> \n3:Player 1 is about to die"} 

 Player 1 18:11:22 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":309,"playerToDieCardId":309,"stackEffectType":15,"killerId":245}} 

 Player 1 18:11:22 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 18:11:23 $SHOW_STACK_EFFECT:  
{"effectId":9} 

 Player 2 18:11:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lord Of The Pit \n2:Activate Cursed Psy Horf "} 

 Player 1 18:11:25 $CLEAR_SE_VIS:  

 Player 1 18:11:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lord Of The Pit \n2:Activate Cursed Psy Horf effect DealDamage<DealDamage> \n3:Player 1 is about to die"} 

 Player 1 18:11:25 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":309,"hasLockingStackEffect":false,"itemToPlayCardId":310,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 18:11:25 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[309],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":245,"effectCardPlayer":245},"entityId":8,"creatorCardId":309,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":245,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":245,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ACTIVATE_ITEM","args":[{"type":0,"number":310}],"result":null,"preventMethod":false,"methodScopeId":309,"scopeIsPlayer":false,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 18:11:25 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":309,"playerToDieCardId":309,"stackEffectType":15,"killerId":245}} 

 Player 1 18:11:26 $REPLACE_STACK:  
{"currentStack":[{"entityId":7,"creatorCardId":309,"hasLockingStackEffect":false,"itemToPlayCardId":310,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1},{"effectCollectedData":{"effectTargets":[309],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":245,"effectCardPlayer":245},"entityId":8,"creatorCardId":309,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":245,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":245,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ACTIVATE_ITEM","args":[{"type":0,"number":310}],"result":null,"preventMethod":false,"methodScopeId":309,"scopeIsPlayer":false,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6,"hasDataBeenCollectedYet":true,"stackEffectType":14},{"entityId":9,"creatorCardId":309,"playerToDieCardId":309,"stackEffectType":15,"killerId":245}]} 

 Player 1 18:11:26 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":245}],"result":null,"preventMethod":false,"methodScopeId":309,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 

 Player 1 18:11:26 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ACTIVATE_ITEM","args":[{"type":0,"number":310}],"result":null,"preventMethod":false,"methodScopeId":309,"scopeIsPlayer":false,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 

 Player 1 18:11:26 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[309],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":245,"effectCardPlayer":245},"entityId":8,"creatorCardId":309,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":245,"isAfterActivation":true,"index":6,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 18:11:26 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":8} 

 Player 1 18:11:26 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 18:11:26 $SHOW_STACK_EFFECT:  
{"effectId":8} 

 Player 2 18:11:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lord Of The Pit \n2:Activate Cursed Psy Horf "} 

 Player 2 18:11:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lord Of The Pit \n2:Activate Cursed Psy Horf  \n3:Player 1 is about to die"} 

 Player 1 18:11:28 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":8} 

 Player 1 18:11:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":60,"_text":"Remove After Resolve ActivatePassiveEffect 8  "}} 

 Player 1 18:11:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lord Of The Pit \n2:Player 1 is about to die"} 

 Player 1 18:11:29 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[309],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":245,"effectCardPlayer":245},"entityId":8,"creatorCardId":309,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":245,"isAfterActivation":true,"index":6,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 18:11:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":61,"_text":"Response Remove After Resolve ActivatePassiveEffect 8"},"childOfId":60} 

 Player 1 18:11:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":62,"_text":"Wait For Response From Player 1 "},"childOfId":60} 

 Player 1 18:11:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:11:29 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 1 18:11:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":63,"_text":"Wait For Response From Player 2 "},"childOfId":60} 

 Player 1 18:11:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 18:11:29 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 18:11:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lord Of The Pit \n2:Activate Cursed Psy Horf  \n3:Player 1 is about to die"} 

 Player 2 18:11:29 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[315,175]} 

 Player 2 18:11:29 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 18:11:29 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 1 18:11:29 $ACTION_MASSAGE_REMOVE:  
{"id":61} 

 Player 1 18:11:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":64,"_text":"Resolve PlayerDeath 9 "}} 

 Player 1 18:11:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lord Of The Pit \n2:Player 1 is about to die"} 

 Player 1 18:11:29 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":309,"playerToDieCardId":309,"stackEffectType":15,"killerId":245}} 

 Player 1 18:11:29 $NEXT_STACK_ID:  

 Player 1 18:11:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:11:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lord Of The Pit \n2:Player 1 is about to die \n3:Player 1 is about to pay death penalties"} 

 Player 1 18:11:29 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":309,"playerToPayCardId":309,"stackEffectType":16}} 

 Player 1 18:11:29 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 18:11:29 $SHOW_STACK_EFFECT:  
{"effectId":10} 

 Player 2 18:11:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lord Of The Pit \n2:Activate Cursed Psy Horf "} 

 Player 2 18:11:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lord Of The Pit \n2:Activate Cursed Psy Horf "} 

 Player 1 18:11:32 $CLEAR_SE_VIS:  

 Player 1 18:11:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lord Of The Pit \n2:Player 1 is about to die \n3:Player 1 is about to pay death penalties"} 

 Player 1 18:11:32 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":309,"hasLockingStackEffect":false,"itemToPlayCardId":310,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 18:11:32 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":309,"playerToDieCardId":309,"stackEffectType":15,"killerId":245}} 

 Player 1 18:11:32 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":309,"playerToPayCardId":309,"stackEffectType":16}} 

 Player 1 18:11:32 $REPLACE_STACK:  
{"currentStack":[{"entityId":7,"creatorCardId":309,"hasLockingStackEffect":false,"itemToPlayCardId":310,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1},{"entityId":9,"creatorCardId":309,"playerToDieCardId":309,"stackEffectType":15,"killerId":245},{"entityId":10,"creatorCardId":309,"playerToPayCardId":309,"stackEffectType":16}]} 

 Player 1 18:11:32 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":309,"playerToDieCardId":309,"stackEffectType":15,"killerId":245}} 

 Player 1 18:11:32 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":9} 

 Player 1 18:11:32 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 18:11:32 $SHOW_STACK_EFFECT:  
{"effectId":9} 

 Player 2 18:11:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lord Of The Pit \n2:Activate Cursed Psy Horf "} 

 Player 2 18:11:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lord Of The Pit \n2:Player 1 is about to die \n3:Player 1 is about to pay death penalties"} 

 Player 1 18:11:35 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":9} 

 Player 1 18:11:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":65,"_text":"Remove After Resolve PlayerDeath 9  "}} 

 Player 1 18:11:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lord Of The Pit \n2:Player 1 is about to pay death penalties"} 

 Player 1 18:11:35 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":9,"creatorCardId":309,"playerToDieCardId":309,"stackEffectType":15,"killerId":245}} 

 Player 1 18:11:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":66,"_text":"Response Remove After Resolve PlayerDeath 9"},"childOfId":65} 

 Player 1 18:11:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":67,"_text":"Wait For Response From Player 1 "},"childOfId":65} 

 Player 1 18:11:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:11:35 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 1 18:11:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":68,"_text":"Wait For Response From Player 2 "},"childOfId":65} 

 Player 1 18:11:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 18:11:35 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 18:11:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lord Of The Pit \n2:Player 1 is about to die \n3:Player 1 is about to pay death penalties"} 

 Player 2 18:11:35 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[315,175]} 

 Player 2 18:11:35 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 18:11:36 $ACTION_MASSAGE_REMOVE:  
{"id":68} 

 Player 1 18:11:36 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 1 18:11:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":69,"_text":"Resolve PlayerDeathPenalties 10 "}} 

 Player 1 18:11:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lord Of The Pit \n2:Player 1 is about to pay death penalties"} 

 Player 1 18:11:36 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":309,"playerToPayCardId":309,"stackEffectType":16}} 

 Player 1 18:11:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":70,"_text":"Player 1 pays Penalties"}} 

 Player 1 18:11:36 $SET_MONEY:  
{"playerId":1,"numOfCoins":5} 

 Player 1 18:11:36 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-1}],"result":null,"preventMethod":false,"methodScopeId":309,"scopeIsPlayer":true,"index":8,"originStackId":-1},"isAfterActivation":true,"index":8} 

 Player 2 18:11:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lord Of The Pit \n2:Player 1 is about to die"} 

 Player 1 18:11:39 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":53} 

 Player 1 18:11:39 $MOVE_CARD:  
{"moveIndex":10,"cardId":53,"placeID":328,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 18:11:39 $MOVE_CARD_END:  
{"moveIndex":10,"cardId":53,"flipIfFlipped":true,"playerId":1} 

 Player 1 18:11:39 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":53} 

 Player 1 18:11:39 $USE_ITEM:  
{"cardId":309} 

 Player 1 18:11:39 $USE_ITEM:  
{"cardId":310} 

 Player 1 18:11:39 $PLAYER_DIED:  
{"playerId":1} 

 Player 1 18:11:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lord Of The Pit \n2:Player 1 is about to pay death penalties"} 

 Player 1 18:11:39 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":309,"playerToPayCardId":309,"stackEffectType":16}} 

 Player 1 18:11:39 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":10} 

 Player 1 18:11:39 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 18:11:39 $SHOW_STACK_EFFECT:  
{"effectId":10} 

 Player 2 18:11:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lord Of The Pit \n2:Player 1 is about to die"} 

 Player 1 18:11:42 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":10} 

 Player 1 18:11:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":71,"_text":"Remove After Resolve PlayerDeathPenalties 10  "}} 

 Player 1 18:11:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lord Of The Pit"} 

 Player 1 18:11:42 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":10,"creatorCardId":309,"playerToPayCardId":309,"stackEffectType":16}} 

 Player 1 18:11:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":72,"_text":"Response Remove After Resolve PlayerDeathPenalties 10"},"childOfId":71} 

 Player 1 18:11:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":73,"_text":"Wait For Response From Player 2 "},"childOfId":71} 

 Player 1 18:11:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 18:11:42 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 18:11:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lord Of The Pit \n2:Player 1 is about to pay death penalties"} 

 Player 2 18:11:43 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[315,175]} 

 Player 2 18:11:43 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 18:11:43 $ACTION_MASSAGE_REMOVE:  
{"id":73} 

 Player 1 18:11:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":74,"_text":"Wait For Response From Player 1 "},"childOfId":71} 

 Player 1 18:11:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:11:43 $ACTION_MASSAGE_REMOVE:  
{"id":74} 

 Player 1 18:11:43 $ACTION_MASSAGE_REMOVE:  
{"id":72} 

 Player 1 18:11:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":75,"_text":"Resolve ActivateItem 7 "}} 

 Player 1 18:11:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lord Of The Pit"} 

 Player 1 18:11:43 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":309,"hasLockingStackEffect":false,"itemToPlayCardId":310,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 18:11:43 $LOG_ERROR:  
"error while resolving stack effect 7" 
//////Error From Player 1////
  

 Player 1 18:11:43 $LOG_ERROR:  
//////Error From Player 1////
 [object Object]
////// 

 Player 1 18:11:43 $LOG_ERROR:  
{"message":"\"Cannot read property 'node' of null\"","stack":"\"TypeError: Cannot read property 'node' of null\\n    at ActivateItem.<anonymous> (src/project.dev.js:2413:42)\\n    at step (src/project.dev.js:2228:21)\\n    at Object.next (src/project.dev.js:2172:18)\\n    at src/project.dev.js:2150:71\\n    at new Promise (<anonymous>)\\n    at __awaiter (src/project.dev.js:2130:14)\\n    at ActivateItem.resolve (src/project.dev.js:2355:16)\\n    at Function.<anonymous> (src/project.dev.js:34970:39)\\n    at step (src/project.dev.js:34854:21)\\n    at Object.next (src/project.dev.js:34798:18)\""} 
//////Error From Player 1////
  

 Player 1 18:11:43 $LOG_ERROR:  
//////Error From Player 1////

 "\"Cannot read property 'node' of null\""

 + "\"TypeError: Cannot read property 'node' of null\
    at ActivateItem.<anonymous> (src/project.dev.js:2413:42)\
    at step (src/project.dev.js:2228:21)\
    at Object.next (src/project.dev.js:2172:18)\
    at src/project.dev.js:2150:71\
    at new Promise (<anonymous>)\
    at __awaiter (src/project.dev.js:2130:14)\
    at ActivateItem.resolve (src/project.dev.js:2355:16)\
    at Function.<anonymous> (src/project.dev.js:34970:39)\
    at step (src/project.dev.js:34854:21)\
    at Object.next (src/project.dev.js:34798:18)\""

////// 
//////Error From Player 1////

 "\"Cannot read property 'node' of null\""

 + "\"TypeError: Cannot read property 'node' of null\
    at ActivateItem.<anonymous> (src/project.dev.js:2413:42)\
    at step (src/project.dev.js:2228:21)\
    at Object.next (src/project.dev.js:2172:18)\
    at src/project.dev.js:2150:71\
    at new Promise (<anonymous>)\
    at __awaiter (src/project.dev.js:2130:14)\
    at ActivateItem.resolve (src/project.dev.js:2355:16)\
    at Function.<anonymous> (src/project.dev.js:34970:39)\
    at step (src/project.dev.js:34854:21)\
    at Object.next (src/project.dev.js:34798:18)\""

////// 

 Player 1 18:11:43 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":7} 

 Player 1 18:11:43 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 18:11:43 $SHOW_STACK_EFFECT:  
{"effectId":7} 

 Player 1 18:11:46 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":7} 

 Player 1 18:11:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":76,"_text":"Remove After Resolve ActivateItem 7  "}} 

 Player 1 18:11:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:11:46 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":309,"hasLockingStackEffect":false,"itemToPlayCardId":310,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 18:11:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":77,"_text":"Response Remove After Resolve ActivateItem 7"},"childOfId":76} 

 Player 1 18:11:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":78,"_text":"Wait For Response From Player 1 "},"childOfId":76} 

 Player 1 18:11:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:11:46 $ACTION_MASSAGE_REMOVE:  
{"id":78} 

 Player 1 18:11:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":79,"_text":"Wait For Response From Player 2 "},"childOfId":76} 

 Player 1 18:11:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 18:11:46 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 18:11:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lord Of The Pit"} 

 Player 2 18:11:46 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[315,175]} 

 Player 2 18:11:47 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 18:11:47 $ACTION_MASSAGE_REMOVE:  
{"id":79} 

 Player 1 18:11:47 $ACTION_MASSAGE_REMOVE:  
{"id":77} 

 Player 1 18:11:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":80,"_text":"Stack Was Emptied "}} 

 Player 1 18:11:47 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:11:47 $CLEAR_SE_VIS:  

 Player 1 18:11:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:11:47 $CLEAR_SE_VIS:  

 Player 1 18:11:47 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 1 18:11:47 $CLEAR_SE_VIS:  

 Player 1 18:11:47 $END_TURN:  

 Player 1 18:11:47 $SET_TURN:  
{"playerId":2} 

 Player 1 18:11:47 $START_TURN:  
{"playerId":2} 

 Player 1 18:11:47 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":7} 

 Player 1 18:11:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":81,"_text":"Stack Was Emptied "}} 

 Player 1 18:11:47 $TURN_PLAYER_DO_STACK_EFFECT:  
{"playerId":2} 

 Player 1 18:11:47 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 18:11:47 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 1 18:11:47 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 2 18:11:48 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 18:11:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:11:48 $NEXT_STACK_ID:  

 Player 2 18:11:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 18:11:48 $ADD_TO_STACK:  
{"stackEffect":{"entityId":11,"creatorCardId":315,"turnPlayerCardId":315,"stackEffectType":13}} 

 Player 2 18:11:48 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":315,"turnPlayerCardId":315,"stackEffectType":13}} 

 Player 2 18:11:48 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 18:11:48 $SHOW_STACK_EFFECT:  
{"effectId":11} 

 Player 2 18:11:48 $CLEAR_SE_VIS:  

 Player 1 18:11:48 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 18:11:48 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:11:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 18:11:48 $CLEAR_SE_VIS:  

 Player 2 18:11:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":82,"_text":"Add StartTurnLoot 11 "}} 

 Player 2 18:11:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:11:50 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":11,"creatorCardId":315,"turnPlayerCardId":315,"stackEffectType":13}} 

 Player 2 18:11:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":83,"_text":"Response Adding StartTurnLoot 11"},"childOfId":82} 

 Player 2 18:11:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":84,"_text":"Wait For Response From Player 2 "},"childOfId":82} 

 Player 2 18:11:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:11:50 $ACTION_MASSAGE_REMOVE:  
{"id":84} 

 Player 2 18:11:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":85,"_text":"Wait For Response From Player 1 "},"childOfId":82} 

 Player 2 18:11:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 18:11:51 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 18:11:51 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[]} 

 Player 1 18:11:51 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 18:11:51 $ACTION_MASSAGE_REMOVE:  
{"id":85} 

 Player 2 18:11:51 $ACTION_MASSAGE_REMOVE:  
{"id":83} 

 Player 2 18:11:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":86,"_text":"Resolve StartTurnLoot 11 "}} 

 Player 2 18:11:51 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":11,"creatorCardId":315,"turnPlayerCardId":315,"stackEffectType":13}} 

 Player 2 18:11:51 $DRAW_CARD:  
{"deckType":1} 

 Player 2 18:11:51 $MOVE_CARD:  
{"moveIndex":11,"cardId":122,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 18:11:51 $MOVE_CARD_END:  
{"moveIndex":11,"cardId":122,"flipIfFlipped":false,"playerId":2} 

 Player 2 18:11:51 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":122} 

 Player 2 18:11:51 $FLIP_CARD:  
{"cardId":122} 

 Player 2 18:11:51 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":122} 

 Player 2 18:11:51 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":11,"creatorCardId":315,"turnPlayerCardId":315,"stackEffectType":13}} 

 Player 2 18:11:51 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":11} 

 Player 2 18:11:51 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 18:11:51 $SHOW_STACK_EFFECT:  
{"effectId":11} 

 Player 2 18:11:54 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":11} 

 Player 2 18:11:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":87,"_text":"Remove After Resolve StartTurnLoot 11  "}} 

 Player 2 18:11:54 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:11:54 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":11,"creatorCardId":315,"turnPlayerCardId":315,"stackEffectType":13}} 

 Player 2 18:11:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":88,"_text":"Response Remove After Resolve StartTurnLoot 11"},"childOfId":87} 

 Player 2 18:11:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":89,"_text":"Wait For Response From Player 1 "},"childOfId":87} 

 Player 2 18:11:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 18:11:55 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 18:11:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 18:11:55 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[]} 

 Player 1 18:11:55 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 18:11:55 $ACTION_MASSAGE_REMOVE:  
{"id":89} 

 Player 2 18:11:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":90,"_text":"Wait For Response From Player 2 "},"childOfId":87} 

 Player 2 18:11:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:11:55 $ACTION_MASSAGE_REMOVE:  
{"id":90} 

 Player 2 18:11:55 $ACTION_MASSAGE_REMOVE:  
{"id":88} 

 Player 2 18:11:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":91,"_text":"Stack Was Emptied "}} 

 Player 2 18:11:55 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:11:55 $CLEAR_SE_VIS:  

 Player 1 01:53:17 $MATCH:  

 Player 2 01:54:21 $MATCH: 