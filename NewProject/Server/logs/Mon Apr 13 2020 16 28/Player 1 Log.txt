Start Log 
 Player 1 16:28:19 $START_GAME:  
 Player 1 16:28:19 $MOVE_TO_TABLE:  
 Player 1 16:28:28 $FINISH_LOAD:  

 {"id":1,"turnPlayerId":2} 
 Player 1 16:28:28 $ASSIGN_CHAR_TO_PLAYER:  

 {"playerId":1,"charCardId":325,"itemCardId":326} 
 Player 1 16:28:28 $SET_CHAR_END:  

 {"playerId":2} 
 Player 1 16:28:37 $MOVE_CARD_END:  

 {"moveIndex":1,"cardId":94,"flipIfFlipped":false,"playerId":2} 
 Player 1 16:28:38 $MOVE_CARD_END:  

 {"moveIndex":2,"cardId":55,"flipIfFlipped":false,"playerId":2} 
 Player 1 16:28:38 $MOVE_CARD_END:  

 {"moveIndex":3,"cardId":65,"flipIfFlipped":false,"playerId":2} 
 Player 1 16:28:39 $MOVE_CARD_END:  

 {"moveIndex":4,"cardId":25,"flipIfFlipped":false,"playerId":2} 
 Player 1 16:28:39 $MOVE_CARD_END:  

 {"moveIndex":5,"cardId":62,"flipIfFlipped":false,"playerId":2} 
 Player 1 16:28:40 $MOVE_CARD_END:  

 {"moveIndex":6,"cardId":28,"flipIfFlipped":false,"playerId":2} 
 Player 1 16:28:40 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 16:28:40 $NEXT_STACK_ID:  
 Player 1 16:28:40 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 16:28:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 16:28:40 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 
 Player 1 16:28:40 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":1,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 
 Player 1 16:28:40 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 16:28:40 $SHOW_STACK_EFFECT:  

 {"effectId":1} 
 Player 1 16:28:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 
 Player 1 16:28:43 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 16:28:43 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 
 Player 1 16:28:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 
 Player 1 16:28:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 1 16:28:43 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 16:28:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 1 16:28:43 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 16:28:43 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 16:28:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 
 Player 1 16:28:43 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 
 Player 1 16:28:43 $DRAW_CARD:  

 {"deckType":1} 
 Player 1 16:28:43 $MOVE_CARD:  

 {"moveIndex":7,"cardId":113,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 1 16:28:44 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":113} 
 Player 1 16:28:44 $FLIP_CARD:  

 {"cardId":113} 
 Player 1 16:28:44 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":113} 
 Player 1 16:28:44 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 
 Player 1 16:28:44 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":1} 
 Player 1 16:28:44 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 16:28:44 $SHOW_STACK_EFFECT:  

 {"effectId":1} 
 Player 1 16:28:47 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":1} 
 Player 1 16:28:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 
 Player 1 16:28:47 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 16:28:47 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 
 Player 1 16:28:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 
 Player 1 16:28:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Player 1 16:28:47 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 16:28:47 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 16:28:47 $ACTION_MASSAGE_REMOVE:  

 {"id":7} 
 Player 1 16:28:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Player 1 16:28:47 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 16:28:47 $ACTION_MASSAGE_REMOVE:  

 {"id":8} 
 Player 1 16:28:47 $ACTION_MASSAGE_REMOVE:  

 {"id":6} 
 Player 1 16:28:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":9,"_text":"Stack Was Emptied "}} 
 Player 1 16:28:47 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 16:28:47 $CLEAR_SE_VIS:  
 Player 1 16:28:57 $NEXT_STACK_ID:  
 Player 1 16:28:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Pooter"} 
 Player 1 16:28:57 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":291,"stackEffectType":4}} 
 Player 1 16:28:57 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":2,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":291,"stackEffectType":4}} 
 Player 1 16:28:57 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 16:28:57 $SHOW_STACK_EFFECT:  

 {"effectId":2} 
 Player 1 16:29:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":10,"_text":"Add DeclareAttack 2 "}} 
 Player 1 16:29:00 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 16:29:00 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":291,"stackEffectType":4}} 
 Player 1 16:29:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":11,"_text":"Response Adding DeclareAttack 2"},"childOfId":10} 
 Player 1 16:29:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 
 Player 1 16:29:00 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 16:29:00 $ACTION_MASSAGE_REMOVE:  

 {"id":12} 
 Player 1 16:29:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 
 Player 1 16:29:00 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 16:29:00 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 16:29:00 $ACTION_MASSAGE_REMOVE:  

 {"id":13} 
 Player 1 16:29:00 $ACTION_MASSAGE_REMOVE:  

 {"id":11} 
 Player 1 16:29:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":14,"_text":"Resolve DeclareAttack 2 "}} 
 Player 1 16:29:01 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":291,"stackEffectType":4}} 
 Player 1 16:29:01 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":291,"particleType":5} 
 Player 1 16:29:01 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":1,"originStackId":2},"isAfterActivation":true,"index":1} 
 Player 1 16:29:01 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":291,"stackEffectType":4}} 
 Player 1 16:29:01 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":2} 
 Player 1 16:29:01 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 16:29:01 $SHOW_STACK_EFFECT:  

 {"effectId":2} 
 Player 1 16:29:03 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":2} 
 Player 1 16:29:03 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":15,"_text":"Remove After Resolve DeclareAttack 2  "}} 
 Player 1 16:29:04 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 16:29:04 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":291,"stackEffectType":4}} 
 Player 1 16:29:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":16,"_text":"Response Remove After Resolve DeclareAttack 2"},"childOfId":15} 
 Player 1 16:29:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 
 Player 1 16:29:04 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 16:29:04 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 16:29:04 $ACTION_MASSAGE_REMOVE:  

 {"id":17} 
 Player 1 16:29:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 
 Player 1 16:29:04 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 16:29:04 $ACTION_MASSAGE_REMOVE:  

 {"id":18} 
 Player 1 16:29:04 $ACTION_MASSAGE_REMOVE:  

 {"id":16} 
 Player 1 16:29:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":19,"_text":"Stack Was Emptied "}} 
 Player 1 16:29:04 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 16:29:04 $CLEAR_SE_VIS:  
 Player 1 16:29:16 $NEXT_STACK_ID:  
 Player 1 16:29:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Pooter<Monster>"} 
 Player 1 16:29:16 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":325,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":291}} 
 Player 1 16:29:16 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":325,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":291}} 
 Player 1 16:29:16 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 16:29:16 $SHOW_STACK_EFFECT:  

 {"effectId":3} 
 Player 1 16:29:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":20,"_text":"Add AttackRoll 3 "}} 
 Player 1 16:29:19 $ROLL_DICE:  

 {"playerId":1} 
 Player 1 16:29:20 $ROLL_DICE_ENDED:  

 {"playerId":1,"numberRolled":1} 
 Player 1 16:29:20 $UPDATE_STACK_VIS:  

 {"stackId":3,"text":"player rolled 1 vs Pooter<Monster>"} 
 Player 1 16:29:20 $SHOW_DICE_ROLL:  

 {"stackId":3} 
 Player 1 16:29:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 1 vs Pooter<Monster>"} 
 Player 1 16:29:23 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 16:29:23 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":325,"numberRolled":1,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":291}} 
 Player 1 16:29:23 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":21,"_text":"Response Adding AttackRoll 3"},"childOfId":20} 
 Player 1 16:29:23 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":22,"_text":"Wait For Response From Player 1 "},"childOfId":20} 
 Player 1 16:29:23 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 16:29:23 $ACTION_MASSAGE_REMOVE:  

 {"id":22} 
 Player 1 16:29:23 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":23,"_text":"Wait For Response From Player 2 "},"childOfId":20} 
 Player 1 16:29:23 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 16:29:23 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 16:29:23 $ACTION_MASSAGE_REMOVE:  

 {"id":23} 
 Player 1 16:29:23 $ACTION_MASSAGE_REMOVE:  

 {"id":21} 
 Player 1 16:29:23 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":24,"_text":"Resolve AttackRoll 3 "}} 
 Player 1 16:29:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 1 vs Pooter<Monster>"} 
 Player 1 16:29:23 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":325,"numberRolled":1,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":291}} 
 Player 1 16:29:23 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":25,"_text":"Added 0 to original roll"}} 
 Player 1 16:29:23 $NEXT_STACK_ID:  
 Player 1 16:29:23 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 16:29:23 $CLEAR_SE_VIS:  
 Player 1 16:29:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Pooter combat damage to The Lost \n2:Player 1 rolled 1 vs Pooter<Monster>"} 
 Player 1 16:29:23 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":4,"creatorCardId":325,"entityToDoDamageCardId":291,"entityToTakeDamageCardId":325,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1}} 
 Player 1 16:29:24 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":325,"numberRolled":1,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":291}} 
 Player 1 16:29:24 $REPLACE_STACK:  

 {"currentStack":[{"entityId":4,"creatorCardId":325,"entityToDoDamageCardId":291,"entityToTakeDamageCardId":325,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1},{"entityId":3,"creatorCardId":325,"numberRolled":1,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":291}]} 
 Player 1 16:29:24 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 16:29:24 $SHOW_STACK_EFFECT:  

 {"effectId":4} 
 Player 1 16:29:26 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":2,"originStackId":3},"isAfterActivation":true,"index":2} 
 Player 1 16:29:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Pooter combat damage to The Lost \n2:Player 1 rolled 1 vs Pooter<Monster>"} 
 Player 1 16:29:26 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":325,"numberRolled":1,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":291}} 
 Player 1 16:29:26 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":3} 
 Player 1 16:29:26 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 16:29:26 $SHOW_STACK_EFFECT:  

 {"effectId":3} 
 Player 1 16:29:29 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":3} 
 Player 1 16:29:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":26,"_text":"Remove After Resolve AttackRoll 3  "}} 
 Player 1 16:29:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Pooter combat damage to The Lost"} 
 Player 1 16:29:29 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":325,"numberRolled":1,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":291}} 
 Player 1 16:29:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":27,"_text":"Response Remove After Resolve AttackRoll 3"},"childOfId":26} 
 Player 1 16:29:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":28,"_text":"Wait For Response From Player 1 "},"childOfId":26} 
 Player 1 16:29:29 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 16:29:29 $ACTION_MASSAGE_REMOVE:  

 {"id":28} 
 Player 1 16:29:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":29,"_text":"Wait For Response From Player 2 "},"childOfId":26} 
 Player 1 16:29:30 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 16:29:30 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 16:29:30 $ACTION_MASSAGE_REMOVE:  

 {"id":29} 
 Player 1 16:29:30 $ACTION_MASSAGE_REMOVE:  

 {"id":27} 
 Player 1 16:29:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":30,"_text":"Resolve CombatDamage 4 "}} 
 Player 1 16:29:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Pooter combat damage to The Lost"} 
 Player 1 16:29:30 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":4,"creatorCardId":325,"entityToDoDamageCardId":291,"entityToTakeDamageCardId":325,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1}} 
 Player 1 16:29:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Pooter 1 combat damage to The Lost"} 
 Player 1 16:29:30 $UPDATE_STACK_VIS:  

 {"stackId":4,"text":"Pooter will deal 1 combat damage to The Lost"} 
 Player 1 16:29:30 $PLAYER_GET_HIT:  

 {"playerId":1,"damage":1,"damageDealerId":291} 
 Player 1 16:29:30 $NEXT_STACK_ID:  
 Player 1 16:29:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Pooter 1 combat damage to The Lost \n2:Player 1 is about to die"} 
 Player 1 16:29:30 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":5,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":291}} 
 Player 1 16:29:30 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 16:29:30 $SHOW_STACK_EFFECT:  

 {"effectId":5} 
 Player 1 16:29:33 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 16:29:33 $CLEAR_SE_VIS:  
 Player 1 16:29:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Pooter 1 combat damage to The Lost \n2:Player 1 is about to die"} 
 Player 1 16:29:33 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":4,"creatorCardId":325,"entityToDoDamageCardId":291,"entityToTakeDamageCardId":325,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1}} 
 Player 1 16:29:33 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":5,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":291}} 
 Player 1 16:29:33 $REPLACE_STACK:  

 {"currentStack":[{"entityId":4,"creatorCardId":325,"entityToDoDamageCardId":291,"entityToTakeDamageCardId":325,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1},{"entityId":5,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":291}]} 
 Player 1 16:29:33 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":291}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Player 1 16:29:33 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_TAKEN","args":[{"type":2,"number":1},{"type":2,"number":1},{"type":0,"number":291}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":4,"originStackId":4},"isAfterActivation":true,"index":4} 
 Player 1 16:29:33 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":4} 
 Player 1 16:29:33 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 16:29:33 $SHOW_STACK_EFFECT:  

 {"effectId":4} 
 Player 1 16:29:36 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":4} 
 Player 1 16:29:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":31,"_text":"Remove After Resolve CombatDamage 4  "}} 
 Player 1 16:29:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 1 16:29:36 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":4,"creatorCardId":325,"entityToDoDamageCardId":291,"entityToTakeDamageCardId":325,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1}} 
 Player 1 16:29:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":32,"_text":"Response Remove After Resolve CombatDamage 4"},"childOfId":31} 
 Player 1 16:29:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":31} 
 Player 1 16:29:36 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 16:29:36 $ACTION_MASSAGE_REMOVE:  

 {"id":33} 
 Player 1 16:29:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":34,"_text":"Wait For Response From Player 2 "},"childOfId":31} 
 Player 1 16:29:36 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 16:29:36 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 16:29:36 $ACTION_MASSAGE_REMOVE:  

 {"id":34} 
 Player 1 16:29:36 $ACTION_MASSAGE_REMOVE:  

 {"id":32} 
 Player 1 16:29:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":35,"_text":"Resolve PlayerDeath 5 "}} 
 Player 1 16:29:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 1 16:29:36 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":5,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":291}} 
 Player 1 16:29:36 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":291,"particleType":5} 
 Player 1 16:29:36 $CANCEL_ATTACK:  
 Player 1 16:29:36 $NEXT_STACK_ID:  
 Player 1 16:29:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 
 Player 1 16:29:37 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":6,"creatorCardId":325,"playerToPayCardId":325,"stackEffectType":16}} 
 Player 1 16:29:37 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 16:29:37 $SHOW_STACK_EFFECT:  

 {"effectId":6} 
 Player 1 16:29:39 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 16:29:39 $CLEAR_SE_VIS:  
 Player 1 16:29:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 
 Player 1 16:29:39 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":5,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":291}} 
 Player 1 16:29:39 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":6,"creatorCardId":325,"playerToPayCardId":325,"stackEffectType":16}} 
 Player 1 16:29:39 $REPLACE_STACK:  

 {"currentStack":[{"entityId":5,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":291},{"entityId":6,"creatorCardId":325,"playerToPayCardId":325,"stackEffectType":16}]} 
 Player 1 16:29:39 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":5,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":291}} 
 Player 1 16:29:39 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":5} 
 Player 1 16:29:40 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 16:29:40 $SHOW_STACK_EFFECT:  

 {"effectId":5} 
 Player 1 16:29:42 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":5} 
 Player 1 16:29:42 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":36,"_text":"Remove After Resolve PlayerDeath 5  "}} 
 Player 1 16:29:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 1 16:29:42 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":5,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":291}} 
 Player 1 16:29:42 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":37,"_text":"Response Remove After Resolve PlayerDeath 5"},"childOfId":36} 
 Player 1 16:29:42 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":38,"_text":"Wait For Response From Player 1 "},"childOfId":36} 
 Player 1 16:29:42 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 16:29:42 $ACTION_MASSAGE_REMOVE:  

 {"id":38} 
 Player 1 16:29:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":39,"_text":"Wait For Response From Player 2 "},"childOfId":36} 
 Player 1 16:29:43 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 16:29:43 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 16:29:43 $ACTION_MASSAGE_REMOVE:  

 {"id":39} 
 Player 1 16:29:43 $ACTION_MASSAGE_REMOVE:  

 {"id":37} 
 Player 1 16:29:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":40,"_text":"Resolve PlayerDeathPenalties 6 "}} 
 Player 1 16:29:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 1 16:29:43 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":6,"creatorCardId":325,"playerToPayCardId":325,"stackEffectType":16}} 
 Player 1 16:29:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":41,"_text":"Player 1 pays Penalties"}} 
 Player 1 16:29:43 $SET_MONEY:  

 {"playerId":1,"numOfCoins":2} 
 Player 1 16:29:43 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-1}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5}