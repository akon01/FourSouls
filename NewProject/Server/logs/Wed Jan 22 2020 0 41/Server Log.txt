Start Log 

 Player 1 00:41:10 $MATCH:  

 Player 1 00:41:10 $START_GAME:  

 Player 1 00:41:10 $MOVE_TO_TABLE:  

 Player 2 00:41:10 $MOVE_TO_TABLE:  

 Player 1 00:41:22 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 00:41:30 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 2 00:41:30 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":286,"itemCardId":289} 

 Player 2 00:41:30 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":293}],"result":true,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 00:41:30 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":292,"itemCardId":293} 

 Player 2 00:41:30 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[71,51,18,117,27,56,75,33,73,134,137,9,111,86,22,43,89,30,98,58,64,103,123,57,46,88,62,102,133,80,45,52,108,84,78,32,106,82,109,70,112,92,19,104,44,34,35,122,37,67,140,115,47,132,113,48,139,72,105,94,77,76,55,31,120,127,26,138,135,128,16,25,53,28,110,119,142,101,8,68,141,11,95,96,23,121,41,99,42,40,91,90,50,17,107,15,66,20,69,39,93,136,129,13,7,116,54,124,74,118,114,63,97,65,131,130,126,10,79,59,85,36,24,38,61,100,49,12,60,87,83,21,14,29,125,81]} 

 Player 2 00:41:31 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[262,230,270,232,281,240,245,276,250,255,280,275,261,231,236,237,244,248,243,254,233,271,246,278,277,265,263,260,249,267,234,235,273,241,239,228,247,274,269,268,272,242,264,229,259,253,256,258,252,251,266,257,238,279]} 

 Player 2 00:41:31 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[206,182,196,153,207,157,189,177,174,180,186,214,164,220,154,165,150,185,160,166,198,221,171,187,200,212,181,159,210,147,179,193,216,197,191,163,213,208,173,184,172,211,149,203,205,146,204,155,167,224,215,192,178,190,170,148,156,194,222,169,199,145,217,161,201,219,223,202,218,152,175,195,225,209,183,151,168,162,158,176,188]} 

 Player 2 00:41:31 $DRAW_CARD:  
{"deckType":5} 

 Player 2 00:41:31 $FLIP_CARD:  
{"cardId":188} 

 Player 2 00:41:31 $ADD_STORE_CARD:  
{"cardId":188} 

 Player 2 00:41:31 $DRAW_CARD:  
{"deckType":5} 

 Player 2 00:41:31 $FLIP_CARD:  
{"cardId":176} 

 Player 2 00:41:31 $ADD_STORE_CARD:  
{"cardId":176} 

 Player 2 00:41:31 $DRAW_CARD:  
{"deckType":2} 

 Player 2 00:41:31 $FLIP_CARD:  
{"cardId":279} 

 Player 2 00:41:31 $REGISTER_PASSIVE_ITEM:  
{"cardId":279} 

 Player 2 00:41:31 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":279} 

 Player 2 00:41:31 $NEW_MONSTER_ON_PLACE:  
{"cardId":279,"monsterPlaceId":1} 

 Player 2 00:41:31 $DRAW_CARD:  
{"deckType":2} 

 Player 2 00:41:31 $FLIP_CARD:  
{"cardId":238} 

 Player 2 00:41:31 $REGISTER_PASSIVE_ITEM:  
{"cardId":238} 

 Player 2 00:41:31 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":238} 

 Player 2 00:41:31 $NEW_MONSTER_ON_PLACE:  
{"cardId":238,"monsterPlaceId":2} 

 Player 2 00:41:31 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 00:41:31 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 00:41:31 $DRAW_CARD:  
{"deckType":1} 

 Player 2 00:41:31 $MOVE_CARD:  
{"moveIndex":1,"cardId":81,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 00:41:31 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":289}],"result":true,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 00:41:32 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":81,"flipIfFlipped":false,"playerId":2} 

 Player 2 00:41:32 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":81} 

 Player 2 00:41:32 $FLIP_CARD:  
{"cardId":81} 

 Player 2 00:41:32 $FLIP_CARD:  
{"cardId":81} 

 Player 2 00:41:32 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":81} 

 Player 2 00:41:32 $DRAW_CARD:  
{"deckType":1} 

 Player 2 00:41:32 $MOVE_CARD:  
{"moveIndex":2,"cardId":125,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 00:41:32 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":125,"flipIfFlipped":false,"playerId":2} 

 Player 2 00:41:32 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":125} 

 Player 2 00:41:32 $FLIP_CARD:  
{"cardId":125} 

 Player 2 00:41:32 $FLIP_CARD:  
{"cardId":125} 

 Player 2 00:41:32 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":125} 

 Player 2 00:41:33 $DRAW_CARD:  
{"deckType":1} 

 Player 2 00:41:33 $MOVE_CARD:  
{"moveIndex":3,"cardId":29,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 00:41:33 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":29,"flipIfFlipped":false,"playerId":2} 

 Player 2 00:41:33 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":29} 

 Player 2 00:41:33 $FLIP_CARD:  
{"cardId":29} 

 Player 2 00:41:33 $FLIP_CARD:  
{"cardId":29} 

 Player 2 00:41:33 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":29} 

 Player 2 00:41:33 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 00:41:33 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 00:41:33 $DRAW_CARD:  
{"deckType":1} 

 Player 2 00:41:33 $MOVE_CARD:  
{"moveIndex":4,"cardId":14,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 00:41:33 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":14,"flipIfFlipped":false,"playerId":2} 

 Player 2 00:41:34 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":14} 

 Player 2 00:41:34 $FLIP_CARD:  
{"cardId":14} 

 Player 2 00:41:34 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":14} 

 Player 2 00:41:34 $DRAW_CARD:  
{"deckType":1} 

 Player 2 00:41:34 $MOVE_CARD:  
{"moveIndex":5,"cardId":21,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 00:41:34 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":21,"flipIfFlipped":false,"playerId":2} 

 Player 2 00:41:34 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":21} 

 Player 2 00:41:34 $FLIP_CARD:  
{"cardId":21} 

 Player 2 00:41:34 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":21} 

 Player 2 00:41:34 $DRAW_CARD:  
{"deckType":1} 

 Player 2 00:41:34 $MOVE_CARD:  
{"moveIndex":6,"cardId":83,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 00:41:35 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":83,"flipIfFlipped":false,"playerId":2} 

 Player 2 00:41:35 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":83} 

 Player 2 00:41:35 $FLIP_CARD:  
{"cardId":83} 

 Player 2 00:41:35 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":83} 

 Player 2 00:41:35 $GAME_HAS_STARTED:  

 Player 2 00:41:35 $SET_TURN:  
{"playerId":1} 

 Player 2 00:41:35 $START_TURN:  
{"playerId":1} 

 Player 2 00:41:35 $UPDATE_ACTIONS:  

 Player 1 00:41:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 00:41:35 $NEXT_STACK_ID:  

 Player 1 00:41:35 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 00:41:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 00:41:35 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 

 Player 1 00:41:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 00:41:35 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 

 Player 1 00:41:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 1 00:41:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 00:41:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 00:41:35 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 

 Player 1 00:41:35 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 00:41:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 1 00:41:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 1 00:41:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 00:41:35 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 00:41:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 1 00:41:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 00:41:35 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 00:41:35 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:41:35 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:41:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 00:41:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 00:41:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 00:41:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 00:41:36 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 00:41:36 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 00:41:36 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 00:41:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 1 00:41:36 $DRAW_CARD:  
{"deckType":1} 

 Player 1 00:41:36 $MOVE_CARD:  
{"moveIndex":7,"cardId":87,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 00:41:36 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":87,"flipIfFlipped":false,"playerId":1} 

 Player 1 00:41:36 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":87} 

 Player 1 00:41:36 $FLIP_CARD:  
{"cardId":87} 

 Player 1 00:41:36 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":87} 

 Player 1 00:41:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 00:41:36 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 

 Player 1 00:41:36 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 00:41:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 00:41:36 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 

 Player 1 00:41:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 1 00:41:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 00:41:36 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 

 Player 1 00:41:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 1 00:41:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 1 00:41:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 00:41:36 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 00:41:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 00:41:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 00:41:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 00:41:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 00:41:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 00:41:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 00:41:37 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 00:41:37 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 1 00:41:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 1 00:41:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 00:41:37 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 1 00:41:37 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 1 00:41:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 1 00:41:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 00:41:37 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 00:41:37 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 00:41:37 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 00:41:37 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 00:41:37 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 00:41:37 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 00:41:37 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 00:41:38 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 00:41:39 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 00:41:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 00:41:40 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 00:41:40 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 00:41:40 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 00:41:40 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 00:41:40 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 00:41:40 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 00:41:40 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 00:41:40 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 00:41:40 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 1 00:41:40 $END_TURN:  

 Player 1 00:41:40 $SET_TURN:  
{"playerId":2} 

 Player 1 00:41:40 $START_TURN:  
{"playerId":2} 

 Player 2 00:41:41 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 00:41:41 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:41:41 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 00:41:41 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 00:41:41 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 00:41:41 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 00:41:41 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 00:41:41 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 00:41:41 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 00:41:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:41:41 $NEXT_STACK_ID:  

 Player 2 00:41:41 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:41:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 00:41:41 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 2 00:41:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 00:41:41 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 2 00:41:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add StartTurnLoot 2 "}} 

 Player 2 00:41:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:41:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 00:41:41 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 2 00:41:41 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 00:41:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding StartTurnLoot 2"},"childOfId":10} 

 Player 2 00:41:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 2 00:41:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:41:41 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 2 00:41:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 2 00:41:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:41:41 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:41:42 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 00:41:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 00:41:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 00:41:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 00:41:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 00:41:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 00:41:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 00:41:42 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:41:42 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 2 00:41:42 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 2 00:41:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve StartTurnLoot 2 "}} 

 Player 2 00:41:42 $DRAW_CARD:  
{"deckType":1} 

 Player 2 00:41:42 $MOVE_CARD:  
{"moveIndex":8,"cardId":60,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 00:41:42 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":60,"flipIfFlipped":false,"playerId":2} 

 Player 2 00:41:42 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":60} 

 Player 2 00:41:42 $FLIP_CARD:  
{"cardId":60} 

 Player 2 00:41:42 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":60} 

 Player 2 00:41:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 00:41:42 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 2 00:41:43 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 00:41:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:41:43 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 2 00:41:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve StartTurnLoot 2  "}} 

 Player 2 00:41:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:41:43 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 2 00:41:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve StartTurnLoot 2"},"childOfId":15} 

 Player 2 00:41:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 2 00:41:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:41:43 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:41:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 00:41:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 00:41:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 00:41:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 00:41:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 00:41:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 00:41:43 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:41:43 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 00:41:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 2 00:41:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:41:43 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 2 00:41:43 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 2 00:41:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 2 00:41:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:41:43 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 00:41:43 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 00:41:43 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 00:41:43 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 00:41:43 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 00:41:44 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 00:41:44 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 00:41:44 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 00:41:44 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 00:41:44 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 00:41:44 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 00:41:45 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 00:41:45 $SHOW_DECISION:  
{"startCardId":60,"endCardId":60,"flipEndCard":true} 

 Player 2 00:41:45 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 00:41:48 $NEXT_STACK_ID:  

 Player 2 00:41:48 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:41:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(0) "} 

 Player 2 00:41:48 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":292,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":60,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 00:41:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(0) "} 

 Player 2 00:41:48 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":292,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":60,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 00:41:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add PlayLootCardStackEffect 3 "}} 

 Player 2 00:41:48 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":60} 

 Player 2 00:41:48 $MOVE_CARD:  
{"moveIndex":9,"cardId":60,"placeID":300,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 00:41:48 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 00:41:48 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 00:41:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(0) "} 

 Player 1 00:41:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(0) "} 

 Player 1 00:41:48 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":60,"flipIfFlipped":true,"playerId":2} 

 Player 2 00:41:48 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":60} 

 Player 2 00:41:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(0): addMoney"} 

 Player 2 00:41:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:41:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(0): addMoney"} 

 Player 2 00:41:49 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":292,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":60,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":60,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 00:41:49 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 00:41:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding PlayLootCardStackEffect 3"},"childOfId":20} 

 Player 2 00:41:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 2 00:41:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:41:49 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 2 00:41:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 2 00:41:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:41:49 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:41:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(0) "} 

 Player 1 00:41:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(0) "} 

 Player 1 00:41:49 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:41:49 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 2 00:41:49 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 2 00:41:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve PlayLootCardStackEffect 3 "}} 

 Player 2 00:41:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(0): addMoney"} 

 Player 2 00:41:49 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":60,"particleType":6} 

 Player 2 00:41:51 $DISABLE_PARTICLE_EFFECT:  
{"cardId":60,"particleType":6} 

 Player 2 00:41:51 $SET_MONEY:  
{"playerId":2,"numOfCoins":7} 

 Player 2 00:41:51 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 2 00:41:51 $REMOVE_FROM_PILE:  
{"cardId":60} 

 Player 2 00:41:51 $MOVE_CARD:  
{"moveIndex":10,"cardId":60,"placeID":301,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 00:41:52 $MOVE_CARD_END:  
{"moveIndex":10,"cardId":60,"flipIfFlipped":true,"playerId":2} 

 Player 2 00:41:52 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":60} 

 Player 2 00:41:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(0): addMoney"} 

 Player 2 00:41:52 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":292,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":60,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 00:41:52 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 00:41:52 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:41:52 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":292,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":60,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 00:41:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Remove After Resolve PlayLootCardStackEffect 3  "}} 

 Player 2 00:41:52 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:41:52 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":292,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":60,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 00:41:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Response Remove After Resolve PlayLootCardStackEffect 3"},"childOfId":25} 

 Player 2 00:41:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Wait For Response From Player 1 "},"childOfId":25} 

 Player 2 00:41:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:41:52 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:41:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(0) "} 

 Player 1 00:41:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(0) "} 

 Player 1 00:41:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(0) "} 

 Player 1 00:41:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(0) "} 

 Player 1 00:41:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(0) "} 

 Player 1 00:41:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(0) "} 

 Player 1 00:41:52 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:41:52 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 2 00:41:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":25} 

 Player 2 00:41:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:41:52 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 2 00:41:52 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 2 00:41:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Stack Was Emptied "}} 

 Player 2 00:41:52 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:41:53 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 00:41:53 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 00:41:53 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 00:41:53 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 00:41:53 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 00:41:53 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 00:41:53 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 00:41:53 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 00:41:53 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 00:41:53 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 00:41:53 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 00:41:53 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 00:41:53 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 00:41:53 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 00:41:53 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 00:41:54 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 00:41:55 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 00:42:11 $SHOW_DECISION:  
{"startCardId":292,"endCardId":292} 

 Player 2 00:42:14 $NEXT_STACK_ID:  

 Player 2 00:42:14 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:42:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Lilith"} 

 Player 2 00:42:14 $ADD_TO_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":292,"hasLockingStackEffect":false,"itemToPlayCardId":292,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 00:42:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Lilith"} 

 Player 2 00:42:14 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":292,"hasLockingStackEffect":false,"itemToPlayCardId":292,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 00:42:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Add ActivateItem 4 "}} 

 Player 1 00:42:14 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 00:42:14 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 00:42:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Lilith"} 

 Player 1 00:42:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Lilith"} 

 Player 2 00:42:20 $SHOW_DECISION:  
{"startCardId":292,"endCardId":21,"flipEndCard":true} 

 Player 2 00:42:23 $USE_ITEM:  
{"cardId":292} 

 Player 2 00:42:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:42:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Lilith"} 

 Player 2 00:42:23 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":292,"hasLockingStackEffect":false,"itemToPlayCardId":292,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 00:42:23 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 00:42:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Response Adding ActivateItem 4"},"childOfId":30} 

 Player 2 00:42:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Wait For Response From Player 2 "},"childOfId":30} 

 Player 2 00:42:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:42:23 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 2 00:42:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":30} 

 Player 2 00:42:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:42:23 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:42:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Lilith"} 

 Player 1 00:42:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Lilith"} 

 Player 1 00:42:24 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:42:24 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 2 00:42:24 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 2 00:42:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Resolve ActivateItem 4 "}} 

 Player 2 00:42:24 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":292,"particleType":6} 

 Player 2 00:42:26 $DISABLE_PARTICLE_EFFECT:  
{"cardId":292,"particleType":6} 

 Player 2 00:42:26 $NEXT_STACK_ID:  

 Player 2 00:42:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Lilith"} 

 Player 2 00:42:26 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":21} 

 Player 2 00:42:26 $MOVE_CARD:  
{"moveIndex":11,"cardId":21,"placeID":300,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 00:42:26 $MOVE_CARD_END:  
{"moveIndex":11,"cardId":21,"flipIfFlipped":true,"playerId":2} 

 Player 2 00:42:26 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":21} 

 Player 2 00:42:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 2 Cents(1): addMoney \n2:Player 2 activated Lilith"} 

 Player 2 00:42:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:42:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 2 Cents(1): addMoney \n2:Player 2 activated Lilith"} 

 Player 2 00:42:26 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":292,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":21,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":21,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 00:42:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 2 Cents(1): addMoney \n2:Player 2 activated Lilith"} 

 Player 2 00:42:26 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":292,"hasLockingStackEffect":false,"itemToPlayCardId":292,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 00:42:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 2 Cents(1): addMoney \n2:Player 2 activated Lilith"} 

 Player 2 00:42:26 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":292,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":21,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":21,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 00:42:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 2 Cents(1): addMoney \n2:Player 2 activated Lilith"} 

 Player 2 00:42:27 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":292,"hasLockingStackEffect":false,"itemToPlayCardId":292,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 00:42:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 2 Cents(1): addMoney \n2:Player 2 activated Lilith"} 

 Player 2 00:42:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 2 Cents(1): addMoney \n2:Player 2 activated Lilith"} 

 Player 2 00:42:27 $REPLACE_STACK:  
{"currentStack":[{"entityId":5,"creatorCardId":292,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":21,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":21,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":4,"creatorCardId":292,"hasLockingStackEffect":false,"itemToPlayCardId":292,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 

 Player 2 00:42:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 2 Cents(1): addMoney \n2:Player 2 activated Lilith"} 

 Player 2 00:42:27 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":292,"hasLockingStackEffect":false,"itemToPlayCardId":292,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 00:42:27 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 00:42:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 2 Cents(1): addMoney"} 

 Player 2 00:42:27 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":292,"hasLockingStackEffect":false,"itemToPlayCardId":292,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 00:42:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Remove After Resolve ActivateItem 4  "}} 

 Player 2 00:42:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 2 Cents(1): addMoney"} 

 Player 2 00:42:27 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":292,"hasLockingStackEffect":false,"itemToPlayCardId":292,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 00:42:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Response Remove After Resolve ActivateItem 4"},"childOfId":35} 

 Player 2 00:42:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Wait For Response From Player 2 "},"childOfId":35} 

 Player 2 00:42:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:42:27 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 2 00:42:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 1 "},"childOfId":35} 

 Player 2 00:42:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:42:27 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:42:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Lilith"} 

 Player 1 00:42:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Lilith"} 

 Player 1 00:42:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 2 Cents(1) "} 

 Player 1 00:42:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 2 Cents(1) "} 

 Player 1 00:42:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 2 Cents(1) "} 

 Player 1 00:42:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 2 Cents(1) "} 

 Player 1 00:42:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 2 Cents(1) "} 

 Player 1 00:42:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 2 Cents(1) "} 

 Player 1 00:42:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 2 Cents(1) "} 

 Player 1 00:42:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 2 Cents(1) "} 

 Player 1 00:42:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 2 Cents(1) "} 

 Player 1 00:42:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 2 Cents(1) "} 

 Player 1 00:42:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 2 Cents(1)  \n2:Player 2 activated Lilith"} 

 Player 1 00:42:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 2 Cents(1)  \n2:Player 2 activated Lilith"} 

 Player 1 00:42:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 2 Cents(1)  \n2:Player 2 activated Lilith"} 

 Player 1 00:42:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 2 Cents(1)  \n2:Player 2 activated Lilith"} 

 Player 1 00:42:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 2 Cents(1)  \n2:Player 2 activated Lilith"} 

 Player 1 00:42:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 2 Cents(1)  \n2:Player 2 activated Lilith"} 

 Player 1 00:42:28 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:42:28 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 2 00:42:28 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 2 00:42:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Resolve PlayLootCardStackEffect 5 "}} 

 Player 2 00:42:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 2 Cents(1): addMoney"} 

 Player 2 00:42:28 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":21,"particleType":6} 

 Player 2 00:42:29 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 00:42:30 $DISABLE_PARTICLE_EFFECT:  
{"cardId":21,"particleType":6} 

 Player 2 00:42:30 $SET_MONEY:  
{"playerId":2,"numOfCoins":9} 

 Player 2 00:42:30 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":2}],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 2 00:42:30 $REMOVE_FROM_PILE:  
{"cardId":21} 

 Player 2 00:42:30 $MOVE_CARD:  
{"moveIndex":12,"cardId":21,"placeID":301,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 00:42:30 $MOVE_CARD_END:  
{"moveIndex":12,"cardId":21,"flipIfFlipped":true,"playerId":2} 

 Player 2 00:42:30 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":21} 

 Player 2 00:42:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 2 Cents(1): addMoney"} 

 Player 2 00:42:30 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":292,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":21,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 00:42:31 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 00:42:31 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:42:31 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":292,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":21,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 00:42:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Remove After Resolve PlayLootCardStackEffect 5  "}} 

 Player 2 00:42:31 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:42:31 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":292,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":21,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 00:42:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Response Remove After Resolve PlayLootCardStackEffect 5"},"childOfId":40} 

 Player 2 00:42:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Wait For Response From Player 1 "},"childOfId":40} 

 Player 2 00:42:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:42:31 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:42:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 2 Cents(1) "} 

 Player 1 00:42:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 2 Cents(1) "} 

 Player 1 00:42:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 2 Cents(1) "} 

 Player 1 00:42:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 2 Cents(1) "} 

 Player 1 00:42:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 2 Cents(1) "} 

 Player 1 00:42:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 2 Cents(1) "} 

 Player 1 00:42:31 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:42:31 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 2 00:42:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 2 "},"childOfId":40} 

 Player 2 00:42:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:42:31 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 2 00:42:31 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 2 00:42:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Stack Was Emptied "}} 

 Player 2 00:42:31 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:42:31 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 00:42:31 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 00:42:31 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 00:42:31 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 00:42:32 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 00:42:32 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 00:42:32 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 00:42:32 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 00:42:32 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 00:42:32 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 00:42:32 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 00:42:32 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 00:42:32 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 00:42:32 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 00:42:32 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 00:42:32 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 00:42:32 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 00:42:32 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 00:42:32 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 00:42:32 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 00:42:32 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 00:42:33 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 00:42:33 $SHOW_DECISION:  
{"startCardId":292,"endCardId":279} 

 Player 2 00:42:33 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 00:42:36 $NEXT_STACK_ID:  

 Player 2 00:42:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:42:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on War"} 

 Player 2 00:42:36 $ADD_TO_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":292,"attackingPlayerCardId":292,"idOfCardBeingAttacked":279,"stackEffectType":4}} 

 Player 2 00:42:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on War"} 

 Player 2 00:42:36 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":292,"attackingPlayerCardId":292,"idOfCardBeingAttacked":279,"stackEffectType":4}} 

 Player 2 00:42:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Add DeclareAttack 6 "}} 

 Player 2 00:42:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:42:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on War"} 

 Player 2 00:42:36 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":292,"attackingPlayerCardId":292,"idOfCardBeingAttacked":279,"stackEffectType":4}} 

 Player 2 00:42:36 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 2 00:42:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Response Adding DeclareAttack 6"},"childOfId":45} 

 Player 2 00:42:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Wait For Response From Player 2 "},"childOfId":45} 

 Player 2 00:42:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:42:36 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 2 00:42:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Wait For Response From Player 1 "},"childOfId":45} 

 Player 2 00:42:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:42:36 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:42:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 00:42:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 00:42:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on War"} 

 Player 1 00:42:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on War"} 

 Player 1 00:42:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on War"} 

 Player 1 00:42:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on War"} 

 Player 1 00:42:37 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:42:37 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 2 00:42:37 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 2 00:42:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Resolve DeclareAttack 6 "}} 

 Player 2 00:42:37 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":279,"particleType":5} 

 Player 2 00:42:37 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":6,"originStackId":6},"isAfterActivation":true,"index":6} 

 Player 2 00:42:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on War"} 

 Player 2 00:42:37 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":292,"attackingPlayerCardId":292,"idOfCardBeingAttacked":279,"stackEffectType":4}} 

 Player 2 00:42:37 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 2 00:42:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:42:37 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":292,"attackingPlayerCardId":292,"idOfCardBeingAttacked":279,"stackEffectType":4}} 

 Player 2 00:42:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Remove After Resolve DeclareAttack 6  "}} 

 Player 2 00:42:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:42:37 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":292,"attackingPlayerCardId":292,"idOfCardBeingAttacked":279,"stackEffectType":4}} 

 Player 2 00:42:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Response Remove After Resolve DeclareAttack 6"},"childOfId":50} 

 Player 2 00:42:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Wait For Response From Player 1 "},"childOfId":50} 

 Player 2 00:42:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:42:37 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:42:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on War"} 

 Player 1 00:42:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on War"} 

 Player 1 00:42:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on War"} 

 Player 1 00:42:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on War"} 

 Player 1 00:42:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on War"} 

 Player 1 00:42:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on War"} 

 Player 1 00:42:37 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:42:38 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 2 00:42:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Wait For Response From Player 2 "},"childOfId":50} 

 Player 2 00:42:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:42:38 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 2 00:42:38 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 2 00:42:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Stack Was Emptied "}} 

 Player 2 00:42:38 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:42:38 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 00:42:38 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 00:42:38 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 00:42:38 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 00:42:38 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 00:42:38 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 00:42:38 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 00:42:38 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 00:42:38 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 00:42:38 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 00:42:38 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 00:42:38 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 00:42:38 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 00:42:38 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 00:42:38 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 00:42:38 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 00:42:38 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 00:42:38 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 00:42:38 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 00:42:38 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 00:42:38 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 00:42:38 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 2 00:42:38 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 2 00:42:39 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 2 00:42:39 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 2 00:42:39 $NEXT_STACK_ID:  

 Player 2 00:42:39 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:42:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against War<Monster>"} 

 Player 2 00:42:39 $ADD_TO_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":292,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":279}} 

 Player 2 00:42:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against War<Monster>"} 

 Player 2 00:42:39 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":292,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":279}} 

 Player 2 00:42:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Add AttackRoll 7 "}} 

 Player 2 00:42:39 $ROLL_DICE:  
{"playerId":2} 

 Player 1 00:42:39 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 00:42:39 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 00:42:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against War<Monster>"} 

 Player 1 00:42:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against War<Monster>"} 

 Player 2 00:42:39 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 2 00:42:40 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 2 00:42:41 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":2} 

 Player 2 00:42:41 $UPDATE_STACK_VIS:  
{"stackId":7,"text":"player rolled 2 vs War<Monster>"} 

 Player 2 00:42:41 $SHOW_DICE_ROLL:  
{"stackId":7} 

 Player 2 00:42:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 2 vs War<Monster>"} 

 Player 2 00:42:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:42:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 2 vs War<Monster>"} 

 Player 2 00:42:44 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":292,"numberRolled":2,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":279}} 

 Player 2 00:42:44 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 2 00:42:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":56,"_text":"Response Adding AttackRoll 7"},"childOfId":55} 

 Player 2 00:42:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":57,"_text":"Wait For Response From Player 2 "},"childOfId":55} 

 Player 2 00:42:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:42:44 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 2 00:42:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":58,"_text":"Wait For Response From Player 1 "},"childOfId":55} 

 Player 2 00:42:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:42:44 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:42:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against War<Monster>"} 

 Player 1 00:42:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against War<Monster>"} 

 Player 1 00:42:44 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:42:44 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 2 00:42:44 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 2 00:42:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":59,"_text":"Resolve AttackRoll 7 "}} 

 Player 2 00:42:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":60,"_text":"Added 0 to original roll"}} 

 Player 2 00:42:45 $NEXT_STACK_ID:  

 Player 2 00:42:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 2 vs War<Monster>"} 

 Player 2 00:42:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:42:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to Lilith \n2:Player 2 rolled 2 vs War<Monster>"} 

 Player 2 00:42:45 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":292,"entityToDoDamageCardId":279,"entityToTakeDamageCardId":292,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 00:42:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to Lilith \n2:Player 2 rolled 2 vs War<Monster>"} 

 Player 2 00:42:45 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":292,"numberRolled":2,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":279}} 

 Player 2 00:42:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to Lilith \n2:Player 2 rolled 2 vs War<Monster>"} 

 Player 2 00:42:45 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":292,"entityToDoDamageCardId":279,"entityToTakeDamageCardId":292,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 00:42:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to Lilith \n2:Player 2 rolled 2 vs War<Monster>"} 

 Player 2 00:42:45 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":292,"numberRolled":2,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":279}} 

 Player 2 00:42:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to Lilith \n2:Player 2 rolled 2 vs War<Monster>"} 

 Player 2 00:42:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to Lilith \n2:Player 2 rolled 2 vs War<Monster>"} 

 Player 2 00:42:45 $REPLACE_STACK:  
{"currentStack":[{"entityId":8,"creatorCardId":292,"entityToDoDamageCardId":279,"entityToTakeDamageCardId":292,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":7,"creatorCardId":292,"numberRolled":2,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":279}]} 

 Player 2 00:42:45 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":2},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":7,"originStackId":7},"isAfterActivation":true,"index":7} 

 Player 2 00:42:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to Lilith \n2:Player 2 rolled 2 vs War<Monster>"} 

 Player 2 00:42:45 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":292,"numberRolled":2,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":279}} 

 Player 2 00:42:45 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 2 00:42:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to Lilith"} 

 Player 2 00:42:45 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":292,"numberRolled":2,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":279}} 

 Player 2 00:42:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":61,"_text":"Remove After Resolve AttackRoll 7  "}} 

 Player 2 00:42:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to Lilith"} 

 Player 2 00:42:45 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":292,"numberRolled":2,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":279}} 

 Player 2 00:42:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":62,"_text":"Response Remove After Resolve AttackRoll 7"},"childOfId":61} 

 Player 2 00:42:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":63,"_text":"Wait For Response From Player 2 "},"childOfId":61} 

 Player 2 00:42:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:42:46 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 2 00:42:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":64,"_text":"Wait For Response From Player 1 "},"childOfId":61} 

 Player 2 00:42:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:42:46 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:42:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against War<Monster>"} 

 Player 1 00:42:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against War<Monster>"} 

 Player 1 00:42:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to Lilith"} 

 Player 1 00:42:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to Lilith"} 

 Player 1 00:42:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to Lilith"} 

 Player 1 00:42:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to Lilith"} 

 Player 1 00:42:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to Lilith"} 

 Player 1 00:42:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to Lilith"} 

 Player 1 00:42:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to Lilith"} 

 Player 1 00:42:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to Lilith"} 

 Player 1 00:42:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to Lilith"} 

 Player 1 00:42:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to Lilith"} 

 Player 1 00:42:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to Lilith \n2:Player 2 is rolling against War<Monster>"} 

 Player 1 00:42:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to Lilith \n2:Player 2 is rolling against War<Monster>"} 

 Player 1 00:42:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to Lilith \n2:Player 2 is rolling against War<Monster>"} 

 Player 1 00:42:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to Lilith \n2:Player 2 is rolling against War<Monster>"} 

 Player 1 00:42:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to Lilith \n2:Player 2 is rolling against War<Monster>"} 

 Player 1 00:42:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to Lilith \n2:Player 2 is rolling against War<Monster>"} 

 Player 1 00:42:46 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:42:47 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 2 00:42:47 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 2 00:42:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":65,"_text":"Resolve CombatDamage 8 "}} 

 Player 2 00:42:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War 1 combat damage to Lilith"} 

 Player 2 00:42:47 $UPDATE_STACK_VIS:  
{"stackId":8,"text":"War will deal 1 combat damage to Lilith"} 

 Player 2 00:42:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War 1 combat damage to Lilith"} 

 Player 2 00:42:47 $PLAYER_GET_HIT:  
{"playerId":2,"damage":1,"damageDealerId":279} 

 Player 2 00:42:47 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":279}],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":8,"originStackId":-1},"isAfterActivation":true,"index":8} 

 Player 2 00:42:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War 1 combat damage to Lilith"} 

 Player 2 00:42:47 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":292,"entityToDoDamageCardId":279,"entityToTakeDamageCardId":292,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 00:42:47 $ACTION_MASSAGE_REMOVE:  
{"id":65} 

 Player 2 00:42:47 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:42:47 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":292,"entityToDoDamageCardId":279,"entityToTakeDamageCardId":292,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 00:42:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":66,"_text":"Remove After Resolve CombatDamage 8  "}} 

 Player 2 00:42:47 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:42:47 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":8,"creatorCardId":292,"entityToDoDamageCardId":279,"entityToTakeDamageCardId":292,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 00:42:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":67,"_text":"Response Remove After Resolve CombatDamage 8"},"childOfId":66} 

 Player 2 00:42:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":68,"_text":"Wait For Response From Player 1 "},"childOfId":66} 

 Player 2 00:42:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:42:48 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 2 00:42:48 $ACTION_MASSAGE_REMOVE:  
{"id":60} 

 Player 2 00:42:48 $ACTION_MASSAGE_REMOVE:  
{"id":61} 

 Player 1 00:42:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to Lilith"} 

 Player 1 00:42:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to Lilith"} 

 Player 1 00:42:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to Lilith"} 

 Player 1 00:42:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to Lilith"} 

 Player 1 00:42:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to Lilith"} 

 Player 1 00:42:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War combat damage to Lilith"} 

 Player 1 00:42:48 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:42:48 $ACTION_MASSAGE_REMOVE:  
{"id":68} 

 Player 2 00:42:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":69,"_text":"Wait For Response From Player 2 "},"childOfId":66} 

 Player 2 00:42:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:42:48 $ACTION_MASSAGE_REMOVE:  
{"id":69} 

 Player 2 00:42:48 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 2 00:42:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":70,"_text":"Stack Was Emptied "}} 

 Player 2 00:42:48 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:42:48 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 00:42:48 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 00:42:48 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 00:42:48 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 00:42:48 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 00:42:49 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 00:42:49 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 00:42:49 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 00:42:49 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 00:42:49 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 00:42:49 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 00:42:49 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 00:42:49 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 00:42:49 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 00:42:49 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 00:42:49 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 00:42:49 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 00:42:49 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 00:42:49 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 00:42:49 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 00:42:49 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 00:42:49 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 2 00:42:49 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 2 00:42:49 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 2 00:42:49 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 2 00:42:49 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 2 00:42:49 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 2 00:42:49 $ACTION_MASSAGE_REMOVE:  
{"id":60} 

 Player 2 00:42:50 $ACTION_MASSAGE_REMOVE:  
{"id":61} 

 Player 2 00:42:50 $ACTION_MASSAGE_REMOVE:  
{"id":65} 

 Player 2 00:42:50 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 2 00:42:50 $ACTION_MASSAGE_REMOVE:  
{"id":70} 

 Player 2 00:42:50 $ACTION_MASSAGE_REMOVE:  
{"id":70} 

 Player 2 00:42:50 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 2 00:43:48 $MATCH: 