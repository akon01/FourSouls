Start Log 
 Player 1 07:37:24 $START_GAME:  
 Player 1 07:37:24 $MOVE_TO_TABLE:  
 Player 1 07:37:33 $FINISH_LOAD:  
 {"id":1,"turnPlayerId":2} 
 Player 1 07:37:33 $DECK_ARRAGMENT:  
 {"deckType":5,"arrangement":[198,150,188,152,184,172,169,177,196,200,164,147,189,186,183,158,174,180,203,157,173,154,182,156,202,197,167,163,187,199,190,155,192,153,162,166,185,160,151,146,176,168,193,170,171,179,194,181,201,149,191,195,178,161,165,148,175,159]} 
 Player 1 07:37:36 $EDEN_CHOSEN:  
 {"cardId":188,"playerId":2} 
 Player 1 07:37:37 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":188}],"result":true,"preventMethod":false,"methodScopeId":266,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 1 07:37:38 $MOVE_CARD_END:  
 {"moveIndex":1,"cardId":83,"flipIfFlipped":false,"playerId":2} 
 Player 1 07:37:38 $MOVE_CARD_END:  
 {"moveIndex":2,"cardId":140,"flipIfFlipped":false,"playerId":2} 
 Player 1 07:37:39 $MOVE_CARD_END:  
 {"moveIndex":3,"cardId":54,"flipIfFlipped":false,"playerId":2} 
 Player 1 07:37:39 $MOVE_CARD_END:  
 {"moveIndex":4,"cardId":101,"flipIfFlipped":false,"playerId":2} 
 Player 1 07:37:40 $MOVE_CARD_END:  
 {"moveIndex":5,"cardId":118,"flipIfFlipped":false,"playerId":2} 
 Player 1 07:37:40 $MOVE_CARD_END:  
 {"moveIndex":6,"cardId":128,"flipIfFlipped":false,"playerId":2} 
 Player 1 07:37:40 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 07:37:40 $NEXT_STACK_ID:  
 Player 1 07:37:41 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 07:37:41 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 07:37:41 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":1,"creatorCardId":266,"turnPlayerCardId":266,"stackEffectType":13}} 
 Player 1 07:37:41 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 
 Player 1 07:37:41 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 07:37:41 $ACTION_MASSAGE_REMOVE:  
 {"id":0} 
 Player 1 07:37:41 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 07:37:41 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":1,"creatorCardId":266,"turnPlayerCardId":266,"stackEffectType":13}} 
 Player 1 07:37:41 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 
 Player 1 07:37:41 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 1 07:37:41 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 07:37:41 $ACTION_MASSAGE_REMOVE:  
 {"id":2} 
 Player 1 07:37:41 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 1 07:37:41 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 07:37:41 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 07:37:41 $ACTION_MASSAGE_REMOVE:  
 {"id":3} 
 Player 1 07:37:41 $ACTION_MASSAGE_REMOVE:  
 {"id":1} 
 Player 1 07:37:41 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 
 Player 1 07:37:41 $DRAW_CARD:  
 {"deckType":1} 
 Player 1 07:37:41 $MOVE_CARD:  
 {"moveIndex":7,"cardId":131,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 1 07:37:42 $CARD_DRAWN:  
 {"playerId":1,"deckType":1,"drawnCardId":131} 
 Player 1 07:37:42 $FLIP_CARD:  
 {"cardId":131} 
 Player 1 07:37:42 $PLAYER_GET_LOOT:  
 {"playerId":1,"cardId":131} 
 Player 1 07:37:42 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 07:37:42 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":1,"creatorCardId":266,"turnPlayerCardId":266,"stackEffectType":13}} 
 Player 1 07:37:42 $ACTION_MASSAGE_REMOVE:  
 {"id":4} 
 Player 1 07:37:42 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 
 Player 1 07:37:42 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 07:37:42 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":1,"creatorCardId":266,"turnPlayerCardId":266,"stackEffectType":13}} 
 Player 1 07:37:42 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 
 Player 1 07:37:42 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Player 1 07:37:42 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 07:37:42 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 07:37:42 $ACTION_MASSAGE_REMOVE:  
 {"id":7} 
 Player 1 07:37:42 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Player 1 07:37:42 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 07:37:42 $ACTION_MASSAGE_REMOVE:  
 {"id":8} 
 Player 1 07:37:42 $ACTION_MASSAGE_REMOVE:  
 {"id":6} 
 Player 1 07:37:42 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":9,"_text":"Stack Was Emptied "}} 
 Player 1 07:37:42 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 07:37:42 $ACTION_MASSAGE_REMOVE:  
 {"id":5} 
 Player 1 07:37:44 $ACTION_MASSAGE_REMOVE:  
 {"id":9} 
 Player 1 07:37:45 $ACTION_MASSAGE_REMOVE:  
 {"id":5} 
 Player 1 07:37:52 $MOVE_CARD:  
 {"moveIndex":8,"cardId":109,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Hand"} 
 Player 1 07:37:52 $PLAYER_GET_LOOT:  
 {"playerId":1,"cardId":109} 
 Player 1 07:37:55 $NEXT_STACK_ID:  
 Player 1 07:37:55 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 07:37:55 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Joker "} 
 Player 1 07:37:55 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":2,"creatorCardId":266,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":109,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 1 07:37:55 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":10,"_text":"Add PlayLootCardStackEffect 2 "}} 
 Player 1 07:37:55 $PLAYER_LOSE_LOOT:  
 {"playerId":1,"cardId":109} 
 Player 1 07:37:55 $MOVE_CARD:  
 {"moveIndex":9,"cardId":109,"placeID":278,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 07:37:55 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Joker: ChainEffects"} 
 Player 1 07:37:55 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Joker: ChainEffects"} 
 Player 1 07:38:12 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 07:38:12 $ACTION_MASSAGE_REMOVE:  
 {"id":10} 
 Player 1 07:38:12 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Joker: ChainEffects"} 
 Player 1 07:38:12 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":2,"creatorCardId":266,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":109,"lootPlayerId":1,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":109,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 07:38:12 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":11,"_text":"Response Adding PlayLootCardStackEffect 2"},"childOfId":10} 
 Player 1 07:38:12 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 
 Player 1 07:38:12 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 07:38:12 $ACTION_MASSAGE_REMOVE:  
 {"id":12} 
 Player 1 07:38:12 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 
 Player 1 07:38:12 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 07:38:12 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 07:38:12 $ACTION_MASSAGE_REMOVE:  
 {"id":13} 
 Player 1 07:38:12 $ACTION_MASSAGE_REMOVE:  
 {"id":11} 
 Player 1 07:38:12 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":14,"_text":"Resolve PlayLootCardStackEffect 2 "}} 
 Player 1 07:38:12 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Joker: ChainEffects"} 
 Player 1 07:38:12 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":109,"particleType":6} 
 Player 1 07:38:14 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":109,"particleType":6} 
 Player 1 07:38:43 $LOG_ERROR:  
 {} 
 Player 1 07:38:43 $LOG_ERROR:  
 {} 
 Player 1 07:38:43 $MOVE_CARD:  
 {"moveIndex":10,"cardId":109,"placeID":279,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 07:38:44 $MOVE_CARD_TO_PILE:  
 {"type":1,"cardId":109} 
 Player 1 07:38:44 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Joker: ChainEffects"} 
 Player 1 07:38:44 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":2,"creatorCardId":266,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":109,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 07:38:44 $ACTION_MASSAGE_REMOVE:  
 {"id":14} 
 Player 1 07:38:44 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":15,"_text":"Remove After Resolve PlayLootCardStackEffect 2  "}} 
 Player 1 07:38:44 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 07:38:44 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":2,"creatorCardId":266,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":109,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 07:38:44 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":16,"_text":"Response Remove After Resolve PlayLootCardStackEffect 2"},"childOfId":15} 
 Player 1 07:38:44 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 
 Player 1 07:38:44 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 1 07:38:44 $GET_REACTION:  
 {"playerId":2,"activePlayerId":1} 
 Player 1 07:38:44 $ACTION_MASSAGE_REMOVE:  
 {"id":17} 
 Player 1 07:38:44 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 
 Player 1 07:38:44 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 1 07:38:44 $ACTION_MASSAGE_REMOVE:  
 {"id":18} 
 Player 1 07:38:45 $ACTION_MASSAGE_REMOVE:  
 {"id":16} 
 Player 1 07:38:45 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":19,"_text":"Stack Was Emptied "}} 
 Player 1 07:38:45 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 1 07:38:45 $ACTION_MASSAGE_REMOVE:  
 {"id":15} 
 Player 1 07:38:46 $ACTION_MASSAGE_REMOVE:  
 {"id":19} 
 Player 1 07:38:47 $ACTION_MASSAGE_REMOVE:  
 {"id":15}