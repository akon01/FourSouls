Start Log 

 Player 1 02:16:09 $MATCH:  

 Player 1 02:16:10 $START_GAME:  

 Player 1 02:16:10 $MOVE_TO_TABLE:  

 Player 2 02:16:10 $MOVE_TO_TABLE:  

 Player 1 02:16:18 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 02:16:18 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 2 02:16:18 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":270,"itemCardId":271} 

 Player 2 02:16:18 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":263}],"result":true,"preventMethod":false,"methodScopeId":262,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 02:16:18 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":262,"itemCardId":263} 

 Player 2 02:16:18 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143]} 

 Player 2 02:16:18 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259]} 

 Player 2 02:16:18 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203]} 

 Player 2 02:16:18 $DRAW_CARD:  
{"deckType":1} 

 Player 2 02:16:18 $FLIP_CARD:  
{"cardId":203} 

 Player 2 02:16:18 $ADD_STORE_CARD:  
{"cardId":203} 

 Player 2 02:16:18 $DRAW_CARD:  
{"deckType":1} 

 Player 2 02:16:18 $FLIP_CARD:  
{"cardId":202} 

 Player 2 02:16:18 $ADD_STORE_CARD:  
{"cardId":202} 

 Player 2 02:16:18 $DRAW_CARD:  
{"deckType":1} 

 Player 2 02:16:18 $DECK_ADD_TO_BOTTOM:  
{"deckType":1,"cardId":259} 

 Player 2 02:16:18 $DRAW_CARD:  
{"deckType":1} 

 Player 2 02:16:18 $FLIP_CARD:  
{"cardId":258} 

 Player 2 02:16:18 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":258} 

 Player 2 02:16:18 $NEW_MONSTER_ON_PLACE:  
{"cardId":258,"monsterPlaceId":1} 

 Player 2 02:16:18 $DRAW_CARD:  
{"deckType":1} 

 Player 2 02:16:18 $FLIP_CARD:  
{"cardId":257} 

 Player 2 02:16:18 $REGISTER_PASSIVE_ITEM:  
{"cardId":257} 

 Player 2 02:16:18 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":257} 

 Player 2 02:16:18 $NEW_MONSTER_ON_PLACE:  
{"cardId":257,"monsterPlaceId":2} 

 Player 2 02:16:18 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 02:16:19 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 02:16:19 $DRAW_CARD:  
{"deckType":1} 

 Player 2 02:16:19 $MOVE_CARD:  
{"moveIndex":1,"cardId":143,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 02:16:19 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":271}],"result":true,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 02:16:19 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":143,"flipIfFlipped":false,"playerId":2} 

 Player 2 02:16:19 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":143} 

 Player 2 02:16:19 $FLIP_CARD:  
{"cardId":143} 

 Player 2 02:16:19 $FLIP_CARD:  
{"cardId":143} 

 Player 2 02:16:19 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":143} 

 Player 2 02:16:19 $DRAW_CARD:  
{"deckType":1} 

 Player 2 02:16:19 $MOVE_CARD:  
{"moveIndex":2,"cardId":142,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 02:16:19 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":142,"flipIfFlipped":false,"playerId":2} 

 Player 2 02:16:19 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":142} 

 Player 2 02:16:19 $FLIP_CARD:  
{"cardId":142} 

 Player 2 02:16:20 $FLIP_CARD:  
{"cardId":142} 

 Player 2 02:16:20 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":142} 

 Player 2 02:16:20 $DRAW_CARD:  
{"deckType":1} 

 Player 2 02:16:20 $MOVE_CARD:  
{"moveIndex":3,"cardId":141,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 02:16:20 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":141,"flipIfFlipped":false,"playerId":2} 

 Player 2 02:16:20 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":141} 

 Player 2 02:16:20 $FLIP_CARD:  
{"cardId":141} 

 Player 2 02:16:20 $FLIP_CARD:  
{"cardId":141} 

 Player 2 02:16:20 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":141} 

 Player 2 02:16:20 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 02:16:20 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":262,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 02:16:20 $DRAW_CARD:  
{"deckType":1} 

 Player 2 02:16:20 $MOVE_CARD:  
{"moveIndex":4,"cardId":140,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 02:16:20 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":140,"flipIfFlipped":false,"playerId":2} 

 Player 2 02:16:21 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":140} 

 Player 2 02:16:21 $FLIP_CARD:  
{"cardId":140} 

 Player 2 02:16:21 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":140} 

 Player 2 02:16:21 $DRAW_CARD:  
{"deckType":1} 

 Player 2 02:16:21 $MOVE_CARD:  
{"moveIndex":5,"cardId":139,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 02:16:21 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":139,"flipIfFlipped":false,"playerId":2} 

 Player 2 02:16:21 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":139} 

 Player 2 02:16:21 $FLIP_CARD:  
{"cardId":139} 

 Player 2 02:16:21 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":139} 

 Player 2 02:16:21 $DRAW_CARD:  
{"deckType":1} 

 Player 2 02:16:21 $MOVE_CARD:  
{"moveIndex":6,"cardId":138,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 02:16:21 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":138,"flipIfFlipped":false,"playerId":2} 

 Player 2 02:16:21 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":138} 

 Player 2 02:16:22 $FLIP_CARD:  
{"cardId":138} 

 Player 2 02:16:22 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":138} 

 Player 2 02:16:22 $GAME_HAS_STARTED:  

 Player 2 02:16:22 $SET_TURN:  
{"playerId":1} 

 Player 2 02:16:22 $START_TURN:  
{"playerId":1} 

 Player 2 02:16:22 $UPDATE_ACTIONS:  

 Player 1 02:16:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:16:22 $NEXT_STACK_ID:  

 Player 1 02:16:22 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:16:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 02:16:22 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":270,"turnPlayerCardId":270,"stackEffectType":13}} 

 Player 1 02:16:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 02:16:22 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":270,"turnPlayerCardId":270,"stackEffectType":13}} 

 Player 1 02:16:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 1 02:16:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:16:22 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 02:16:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 02:16:22 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":270,"turnPlayerCardId":270,"stackEffectType":13}} 

 Player 1 02:16:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 1 02:16:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 1 02:16:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:16:22 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 02:16:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 1 02:16:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:16:22 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:16:22 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:16:22 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:16:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:16:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:16:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:16:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:16:22 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:16:22 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 02:16:22 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 02:16:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 1 02:16:22 $DRAW_CARD:  
{"deckType":1} 

 Player 1 02:16:22 $MOVE_CARD:  
{"moveIndex":7,"cardId":192,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 02:16:23 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":192,"flipIfFlipped":false,"playerId":1} 

 Player 1 02:16:23 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":192} 

 Player 1 02:16:23 $FLIP_CARD:  
{"cardId":192} 

 Player 1 02:16:23 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":192} 

 Player 1 02:16:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 02:16:23 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":270,"turnPlayerCardId":270,"stackEffectType":13}} 

 Player 1 02:16:23 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 02:16:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:16:23 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":270,"turnPlayerCardId":270,"stackEffectType":13}} 

 Player 1 02:16:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 1 02:16:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:16:23 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":270,"turnPlayerCardId":270,"stackEffectType":13}} 

 Player 1 02:16:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 1 02:16:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 1 02:16:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:16:23 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:16:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:16:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:16:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:16:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:16:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:16:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 02:16:23 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:16:23 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 1 02:16:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 1 02:16:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:16:23 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 1 02:16:23 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 1 02:16:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 1 02:16:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:16:23 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 02:16:24 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 02:16:24 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 02:16:24 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 02:16:24 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 02:16:24 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 02:16:24 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 02:16:25 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 02:16:26 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 02:16:29 $SHOW_DECISION:  
{"startCardId":270,"endCardId":257} 

 Player 1 02:16:32 $NEXT_STACK_ID:  

 Player 1 02:16:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:16:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on War"} 

 Player 1 02:16:33 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":270,"attackingPlayerCardId":270,"idOfCardBeingAttacked":257,"stackEffectType":4}} 

 Player 1 02:16:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on War"} 

 Player 1 02:16:33 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":270,"attackingPlayerCardId":270,"idOfCardBeingAttacked":257,"stackEffectType":4}} 

 Player 1 02:16:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add DeclareAttack 2 "}} 

 Player 1 02:16:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:16:33 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 02:16:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on War"} 

 Player 1 02:16:33 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":270,"attackingPlayerCardId":270,"idOfCardBeingAttacked":257,"stackEffectType":4}} 

 Player 1 02:16:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding DeclareAttack 2"},"childOfId":10} 

 Player 1 02:16:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 1 02:16:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:16:33 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 1 02:16:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 1 02:16:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:16:33 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:16:33 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:16:33 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:16:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on War"} 

 Player 2 02:16:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on War"} 

 Player 2 02:16:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on War"} 

 Player 2 02:16:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on War"} 

 Player 2 02:16:33 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:16:33 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 1 02:16:33 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 1 02:16:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve DeclareAttack 2 "}} 

 Player 1 02:16:33 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":257,"particleType":5} 

 Player 1 02:16:33 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":2,"originStackId":2},"isAfterActivation":true,"index":2} 

 Player 1 02:16:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on War"} 

 Player 1 02:16:33 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":270,"attackingPlayerCardId":270,"idOfCardBeingAttacked":257,"stackEffectType":4}} 

 Player 1 02:16:33 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 02:16:33 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:16:33 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":270,"attackingPlayerCardId":270,"idOfCardBeingAttacked":257,"stackEffectType":4}} 

 Player 1 02:16:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve DeclareAttack 2  "}} 

 Player 1 02:16:33 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:16:34 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":270,"attackingPlayerCardId":270,"idOfCardBeingAttacked":257,"stackEffectType":4}} 

 Player 1 02:16:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve DeclareAttack 2"},"childOfId":15} 

 Player 1 02:16:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 1 02:16:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:16:34 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:16:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on War"} 

 Player 2 02:16:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on War"} 

 Player 2 02:16:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on War"} 

 Player 2 02:16:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on War"} 

 Player 2 02:16:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on War"} 

 Player 2 02:16:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on War"} 

 Player 2 02:16:34 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:16:34 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 1 02:16:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 1 02:16:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:16:34 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 1 02:16:34 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 1 02:16:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 1 02:16:34 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:16:34 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 02:16:34 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 02:16:34 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 02:16:34 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 02:16:34 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 02:16:34 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 02:16:34 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 02:16:34 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 02:16:34 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 02:16:34 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 02:16:34 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 02:16:35 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 02:16:36 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 02:17:17 $NEXT_STACK_ID:  

 Player 1 02:17:17 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:17:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against War<Monster>"} 

 Player 1 02:17:17 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":270,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":257}} 

 Player 1 02:17:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against War<Monster>"} 

 Player 1 02:17:17 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":270,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":257}} 

 Player 1 02:17:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add AttackRoll 3 "}} 

 Player 1 02:17:17 $ROLL_DICE:  
{"playerId":1} 

 Player 2 02:17:17 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:17:17 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:17:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against War<Monster>"} 

 Player 2 02:17:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against War<Monster>"} 

 Player 1 02:17:19 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":4} 

 Player 1 02:17:19 $UPDATE_STACK_VIS:  
{"stackId":3,"text":"player rolled 4 vs War<Monster>"} 

 Player 1 02:17:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs War<Monster>"} 

 Player 1 02:17:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:17:19 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 02:17:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs War<Monster>"} 

 Player 1 02:17:19 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":270,"numberRolled":4,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":257}} 

 Player 1 02:17:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding AttackRoll 3"},"childOfId":20} 

 Player 1 02:17:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 1 02:17:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:17:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against War<Monster>"} 

 Player 2 02:17:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against War<Monster>"} 

 Player 1 02:17:23 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 1 02:17:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 1 02:17:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:17:23 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:17:23 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:17:23 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 1 02:17:23 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 1 02:17:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve AttackRoll 3 "}} 

 Player 1 02:17:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Added 0 to original roll"}} 

 Player 1 02:17:23 $NEXT_STACK_ID:  

 Player 1 02:17:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs War<Monster>"} 

 Player 1 02:17:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:17:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to War \n2:Player 1 rolled 4 vs War<Monster>"} 

 Player 1 02:17:23 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":270,"entityToDoDamageCardId":270,"entityToTakeDamageCardId":257,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 02:17:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to War \n2:Player 1 rolled 4 vs War<Monster>"} 

 Player 1 02:17:23 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":270,"numberRolled":4,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":257}} 

 Player 1 02:17:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to War \n2:Player 1 rolled 4 vs War<Monster>"} 

 Player 1 02:17:23 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":270,"entityToDoDamageCardId":270,"entityToTakeDamageCardId":257,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 02:17:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to War \n2:Player 1 rolled 4 vs War<Monster>"} 

 Player 1 02:17:23 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":270,"numberRolled":4,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":257}} 

 Player 1 02:17:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to War \n2:Player 1 rolled 4 vs War<Monster>"} 

 Player 1 02:17:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to War \n2:Player 1 rolled 4 vs War<Monster>"} 

 Player 1 02:17:23 $REPLACE_STACK:  
{"currentStack":[{"entityId":4,"creatorCardId":270,"entityToDoDamageCardId":270,"entityToTakeDamageCardId":257,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":3,"creatorCardId":270,"numberRolled":4,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":257}]} 

 Player 1 02:17:23 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":6},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":3,"originStackId":3},"isAfterActivation":true,"index":3} 

 Player 1 02:17:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to War \n2:Player 1 rolled 4 vs War<Monster>"} 

 Player 1 02:17:23 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":270,"numberRolled":4,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":257}} 

 Player 1 02:17:23 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 02:17:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to War"} 

 Player 1 02:17:24 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":270,"numberRolled":4,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":257}} 

 Player 1 02:17:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Remove After Resolve AttackRoll 3  "}} 

 Player 1 02:17:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to War"} 

 Player 1 02:17:24 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":270,"numberRolled":4,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":257}} 

 Player 1 02:17:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Response Remove After Resolve AttackRoll 3"},"childOfId":26} 

 Player 1 02:17:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 1 "},"childOfId":26} 

 Player 1 02:17:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:17:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against War<Monster>"} 

 Player 2 02:17:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against War<Monster>"} 

 Player 2 02:17:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to War"} 

 Player 2 02:17:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to War"} 

 Player 2 02:17:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to War"} 

 Player 2 02:17:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to War"} 

 Player 2 02:17:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to War"} 

 Player 2 02:17:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to War"} 

 Player 2 02:17:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to War"} 

 Player 2 02:17:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to War"} 

 Player 2 02:17:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to War"} 

 Player 2 02:17:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to War"} 

 Player 2 02:17:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to War \n2:Player 1 is rolling against War<Monster>"} 

 Player 2 02:17:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to War \n2:Player 1 is rolling against War<Monster>"} 

 Player 2 02:17:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to War \n2:Player 1 is rolling against War<Monster>"} 

 Player 2 02:17:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to War \n2:Player 1 is rolling against War<Monster>"} 

 Player 2 02:17:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to War \n2:Player 1 is rolling against War<Monster>"} 

 Player 2 02:17:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to War \n2:Player 1 is rolling against War<Monster>"} 

 Player 1 02:17:26 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 02:17:26 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 1 02:17:30 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 1 02:17:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Wait For Response From Player 2 "},"childOfId":26} 

 Player 1 02:17:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:17:30 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:17:30 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:17:30 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 1 02:17:30 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 1 02:17:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Resolve CombatDamage 4 "}} 

 Player 1 02:17:31 $UPDATE_STACK_VIS:  
{"stackId":4,"text":"Lilith will deal 1 combat damage to War"} 

 Player 1 02:17:31 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":270}],"result":null,"preventMethod":false,"methodScopeId":257,"scopeIsPlayer":false,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1} 

 Player 1 02:17:31 $NEXT_STACK_ID:  

 Player 1 02:17:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to War"} 

 Player 1 02:17:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to War \n2:Activate War effect GainStats<GainStats>"} 

 Player 1 02:17:31 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":5,"creatorCardId":257,"hasLockingStackEffect":false,"cardActivatorId":257,"cardWithEffectId":257,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":257,"cardId":257,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 02:17:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to War \n2:Activate War effect GainStats<GainStats>"} 

 Player 1 02:17:31 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":5,"creatorCardId":257,"hasLockingStackEffect":false,"cardActivatorId":257,"cardWithEffectId":257,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":257,"cardId":257,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 02:17:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Add ActivatePassiveEffect 5 "}} 

 Player 1 02:17:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to War \n2:Activate War effect GainStats<GainStats>"} 

 Player 1 02:17:31 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 1 02:17:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to War \n2:Activate War effect GainStats<GainStats>"} 

 Player 1 02:17:31 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[257],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":257,"effectCardPlayer":257},"entityId":5,"creatorCardId":257,"hasLockingStackEffect":false,"cardActivatorId":257,"cardWithEffectId":257,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":257,"cardId":257,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 02:17:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Response Adding ActivatePassiveEffect 5"},"childOfId":31} 

 Player 1 02:17:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 2 "},"childOfId":31} 

 Player 1 02:17:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:17:31 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:17:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to War"} 

 Player 2 02:17:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to War"} 

 Player 2 02:17:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to War \n2:Activate War "} 

 Player 2 02:17:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to War \n2:Activate War "} 

 Player 2 02:17:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to War \n2:Activate War "} 

 Player 2 02:17:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to War \n2:Activate War "} 

 Player 2 02:17:31 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:17:31 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 1 02:17:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Wait For Response From Player 1 "},"childOfId":31} 

 Player 1 02:17:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:19:01 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 1 02:19:01 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 1 02:19:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Resolve ActivatePassiveEffect 5 "}} 

 Player 1 02:19:01 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":257,"particleType":6} 

 Player 1 02:19:03 $DISABLE_PARTICLE_EFFECT:  
{"cardId":257,"particleType":6} 

 Player 1 02:19:03 $MONSTER_GAIN_DMG:  
{"cardId":257,"DMGToGain":1} 

 Player 1 02:19:03 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":270}],"result":null,"preventMethod":false,"methodScopeId":257,"scopeIsPlayer":false,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1} 

 Player 1 02:19:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to War \n2:Activate War effect GainStats<GainStats>"} 

 Player 1 02:19:03 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[257],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":257,"effectCardPlayer":257},"entityId":5,"creatorCardId":257,"hasLockingStackEffect":false,"cardActivatorId":257,"cardWithEffectId":257,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 02:19:03 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 1 02:19:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to War"} 

 Player 1 02:19:03 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[257],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":257,"effectCardPlayer":257},"entityId":5,"creatorCardId":257,"hasLockingStackEffect":false,"cardActivatorId":257,"cardWithEffectId":257,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 02:19:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Remove After Resolve ActivatePassiveEffect 5  "}} 

 Player 1 02:19:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to War"} 

 Player 1 02:19:04 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[257],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":257,"effectCardPlayer":257},"entityId":5,"creatorCardId":257,"hasLockingStackEffect":false,"cardActivatorId":257,"cardWithEffectId":257,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 02:19:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Response Remove After Resolve ActivatePassiveEffect 5"},"childOfId":36} 

 Player 1 02:19:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 1 "},"childOfId":36} 

 Player 1 02:19:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:19:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to War \n2:Activate War "} 

 Player 2 02:19:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to War \n2:Activate War "} 

 Player 2 02:19:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to War \n2:Activate War "} 

 Player 2 02:19:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to War \n2:Activate War "} 

 Player 2 02:19:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to War \n2:Activate War "} 

 Player 2 02:19:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to War \n2:Activate War "} 

 Player 1 02:19:06 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 1 02:19:16 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 1 02:19:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Wait For Response From Player 2 "},"childOfId":36} 

 Player 1 02:19:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:19:16 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:19:16 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:19:16 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 1 02:19:16 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 1 02:19:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Resolve CombatDamage 4 "}} 

 Player 1 02:19:16 $MONSTER_GET_DAMAGED:  
{"cardId":257,"hpLeft":2,"damageDealerId":270} 

 Player 1 02:19:16 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":270}],"result":null,"preventMethod":false,"methodScopeId":257,"scopeIsPlayer":false,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 02:19:16 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":6},{"type":0,"number":270},{"type":0,"number":257}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":4,"originStackId":4},"isAfterActivation":true,"index":4} 

 Player 1 02:19:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to War"} 

 Player 1 02:19:16 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":270,"entityToDoDamageCardId":270,"entityToTakeDamageCardId":257,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 02:19:16 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 02:19:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:19:16 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":270,"entityToDoDamageCardId":270,"entityToTakeDamageCardId":257,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 02:19:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Remove After Resolve CombatDamage 4  "}} 

 Player 1 02:19:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:19:17 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":270,"entityToDoDamageCardId":270,"entityToTakeDamageCardId":257,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 02:19:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Response Remove After Resolve CombatDamage 4"},"childOfId":41} 

 Player 1 02:19:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 2 "},"childOfId":41} 

 Player 1 02:19:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 02:19:17 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 02:19:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to War"} 

 Player 2 02:19:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to War"} 

 Player 2 02:19:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to War"} 

 Player 2 02:19:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to War"} 

 Player 2 02:19:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to War"} 

 Player 2 02:19:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to War"} 

 Player 2 02:19:17 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 02:19:17 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 1 02:19:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Wait For Response From Player 1 "},"childOfId":41} 

 Player 1 02:19:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 02:19:19 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 1 02:19:23 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 1 02:19:23 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 1 02:19:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Stack Was Emptied "}} 

 Player 1 02:19:24 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:19:24 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 02:19:24 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 02:19:24 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 02:19:24 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 02:19:24 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 02:19:24 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 02:19:24 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 02:19:24 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 02:19:24 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 02:19:24 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 02:19:24 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 02:19:24 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 02:19:24 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 02:19:24 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 02:19:24 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 1 02:19:24 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 02:19:24 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 1 02:19:24 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 1 02:19:24 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 1 02:19:24 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 1 02:19:24 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 1 02:19:24 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 1 02:19:25 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 2 02:23:30 $MATCH: 