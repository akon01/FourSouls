Start Log 

 Player 1 21:43:01 $MATCH:  

 Player 1 21:43:02 $START_GAME:  

 Player 2 21:43:02 $MOVE_TO_TABLE:  

 Player 1 21:43:02 $MOVE_TO_TABLE:  

 Player 2 21:43:11 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 1 21:43:11 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 21:43:11 $SET_CHAR:  
{"originPlayerId":2,"playerId":1,"charCardId":323,"itemCardId":324} 

 Player 1 21:43:11 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":323,"itemCardId":324} 

 Player 1 21:43:11 $SET_CHAR_END:  
{"playerId":2} 

 Player 2 21:43:11 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":327,"itemCardId":328} 

 Player 2 21:43:11 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[35,125,129,23,117,34,138,75,94,121,102,76,111,29,11,108,40,86,88,9,16,128,99,73,79,109,133,81,32,72,89,39,106,98,45,100,123,93,120,36,74,28,137,67,44,18,26,13,118,116,122,8,47,51,101,56,69,91,105,41,25,17,63,132,15,104,59,53,14,21,130,65,52,61,30,96,136,20,113,82,55,12,119,139,38,31,10,112,66,90,115,19,71,33,131,107,95,46,84,50,110,114,48,103,6,5,64,87,57,49,43,4,134,83,126,85,97,22,54,27,77,58,7,37,127,60,92,42,80,24,68,78,62,124,135,70]} 

 Player 2 21:43:11 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[263,290,300,282,291,302,257,272,225,276,305,236,250,295,235,303,293,227,268,280,294,230,292,297,284,228,238,275,304,279,286,287,270,246,260,289,240,262,256,242,288,241,283,310,266,278,261,258,251,244,301,247,226,273,296,231,308,259,234,239,281,264,255,271,224,232,285,243,299,252,306,249,248,254,245,277,274,309,237,233,269,267,307,223,265,229,253,298]} 

 Player 2 21:43:11 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[178,213,167,219,204,207,210,159,182,152,206,168,165,194,214,200,156,209,199,198,160,158,197,216,193,142,185,154,215,221,186,163,190,172,184,188,141,208,189,169,145,202,151,175,157,179,176,192,201,211,177,181,180,146,217,164,218,170,183,171,143,191,187,155,147,162,166,153,148,196,195,149,161,203,173,212,144,174,150,220,205]} 

 Player 2 21:43:11 $DRAW_CARD:  
{"deckType":5} 

 Player 2 21:43:11 $FLIP_CARD:  
{"cardId":205} 

 Player 2 21:43:11 $ADD_STORE_CARD:  
{"cardId":205} 

 Player 2 21:43:11 $DRAW_CARD:  
{"deckType":5} 

 Player 2 21:43:11 $FLIP_CARD:  
{"cardId":220} 

 Player 2 21:43:11 $ADD_STORE_CARD:  
{"cardId":220} 

 Player 2 21:43:11 $DRAW_CARD:  
{"deckType":2} 

 Player 2 21:43:11 $FLIP_CARD:  
{"cardId":298} 

 Player 2 21:43:12 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":298} 

 Player 2 21:43:12 $NEW_MONSTER_ON_PLACE:  
{"cardId":298,"monsterPlaceId":1} 

 Player 2 21:43:12 $DRAW_CARD:  
{"deckType":2} 

 Player 2 21:43:12 $FLIP_CARD:  
{"cardId":253} 

 Player 2 21:43:12 $REGISTER_PASSIVE_ITEM:  
{"cardId":253} 

 Player 2 21:43:12 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":253} 

 Player 2 21:43:12 $NEW_MONSTER_ON_PLACE:  
{"cardId":253,"monsterPlaceId":2} 

 Player 2 21:43:12 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 21:43:12 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":323,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 21:43:12 $DRAW_CARD:  
{"deckType":1} 

 Player 2 21:43:12 $MOVE_CARD:  
{"moveIndex":1,"cardId":70,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 21:43:12 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":70,"flipIfFlipped":false,"playerId":2} 

 Player 2 21:43:12 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":70} 

 Player 2 21:43:12 $FLIP_CARD:  
{"cardId":70} 

 Player 2 21:43:12 $FLIP_CARD:  
{"cardId":70} 

 Player 2 21:43:12 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":70} 

 Player 2 21:43:12 $DRAW_CARD:  
{"deckType":1} 

 Player 2 21:43:12 $MOVE_CARD:  
{"moveIndex":2,"cardId":135,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 21:43:13 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":135,"flipIfFlipped":false,"playerId":2} 

 Player 2 21:43:13 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":135} 

 Player 2 21:43:13 $FLIP_CARD:  
{"cardId":135} 

 Player 2 21:43:13 $FLIP_CARD:  
{"cardId":135} 

 Player 2 21:43:13 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":135} 

 Player 2 21:43:13 $DRAW_CARD:  
{"deckType":1} 

 Player 2 21:43:13 $MOVE_CARD:  
{"moveIndex":3,"cardId":124,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 21:43:13 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":124,"flipIfFlipped":false,"playerId":2} 

 Player 2 21:43:13 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":124} 

 Player 2 21:43:13 $FLIP_CARD:  
{"cardId":124} 

 Player 2 21:43:13 $FLIP_CARD:  
{"cardId":124} 

 Player 2 21:43:13 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":124} 

 Player 2 21:43:13 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 21:43:13 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":327,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 21:43:13 $DRAW_CARD:  
{"deckType":1} 

 Player 2 21:43:13 $MOVE_CARD:  
{"moveIndex":4,"cardId":62,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 21:43:14 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":62,"flipIfFlipped":false,"playerId":2} 

 Player 2 21:43:14 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":62} 

 Player 2 21:43:14 $FLIP_CARD:  
{"cardId":62} 

 Player 2 21:43:14 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":62} 

 Player 2 21:43:14 $DRAW_CARD:  
{"deckType":1} 

 Player 2 21:43:14 $MOVE_CARD:  
{"moveIndex":5,"cardId":78,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 21:43:14 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":78,"flipIfFlipped":false,"playerId":2} 

 Player 2 21:43:14 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":78} 

 Player 2 21:43:14 $FLIP_CARD:  
{"cardId":78} 

 Player 2 21:43:14 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":78} 

 Player 2 21:43:14 $DRAW_CARD:  
{"deckType":1} 

 Player 2 21:43:14 $MOVE_CARD:  
{"moveIndex":6,"cardId":68,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 21:43:15 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":68,"flipIfFlipped":false,"playerId":2} 

 Player 2 21:43:15 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":68} 

 Player 2 21:43:15 $FLIP_CARD:  
{"cardId":68} 

 Player 2 21:43:15 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":68} 

 Player 2 21:43:15 $GAME_HAS_STARTED:  

 Player 2 21:43:15 $SET_TURN:  
{"playerId":1} 

 Player 2 21:43:15 $START_TURN:  
{"playerId":1} 

 Player 2 21:43:15 $UPDATE_ACTIONS:  

 Player 1 21:43:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:43:15 $NEXT_STACK_ID:  

 Player 1 21:43:15 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:43:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 

 Player 1 21:43:15 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13}} 

 Player 1 21:43:15 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13}} 

 Player 1 21:43:15 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 21:43:15 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 2 21:43:15 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 21:43:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 

 Player 1 21:43:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 1 21:43:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:43:18 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13}} 

 Player 1 21:43:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 1 21:43:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 1 21:43:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:43:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 1 21:43:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:43:18 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:43:18 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[327,328]} 

 Player 2 21:43:18 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:43:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 1 21:43:18 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13}} 

 Player 1 21:43:18 $DRAW_CARD:  
{"deckType":1} 

 Player 1 21:43:18 $MOVE_CARD:  
{"moveIndex":7,"cardId":24,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 21:43:19 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":24,"flipIfFlipped":false,"playerId":1} 

 Player 1 21:43:19 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":24} 

 Player 1 21:43:19 $FLIP_CARD:  
{"cardId":24} 

 Player 1 21:43:19 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":24} 

 Player 1 21:43:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Has Drawen Loot For Start Turn"} 

 Player 1 21:43:19 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13}} 

 Player 1 21:43:19 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":1} 

 Player 1 21:43:19 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 21:43:19 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 2 21:43:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 

 Player 1 21:43:22 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":1} 

 Player 1 21:43:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 1 21:43:22 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:43:22 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":323,"turnPlayerCardId":323,"stackEffectType":13}} 

 Player 1 21:43:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 1 21:43:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 1 21:43:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:43:22 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:43:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 

 Player 2 21:43:22 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[327,328]} 

 Player 2 21:43:22 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:43:22 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 1 21:43:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 1 21:43:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:43:22 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 1 21:43:22 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 1 21:43:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 1 21:43:22 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:43:22 $CLEAR_SE_VIS:  

 Player 1 21:43:32 $MOVE_CARD:  
{"moveIndex":8,"cardId":281,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Hand"} 

 Player 2 21:43:33 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":281,"flipIfFlipped":true,"playerId":1} 

 Player 1 21:43:33 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[263,290,300,282,291,302,257,272,225,276,305,236,250,295,235,303,293,227,268,280,294,230,292,297,284,228,238,275,304,279,286,287,270,246,260,289,240,262,256,242,288,241,283,310,266,278,261,258,251,244,301,247,226,273,296,231,308,259,234,239,264,255,271,224,232,285,243,299,252,306,249,248,254,245,277,274,309,237,233,269,267,307,223,265,229]} 

 Player 1 21:43:33 $FLIP_CARD:  
{"cardId":281} 

 Player 1 21:43:33 $REGISTER_PASSIVE_ITEM:  
{"cardId":281} 

 Player 1 21:43:33 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":281} 

 Player 1 21:43:33 $NEW_MONSTER_ON_PLACE:  
{"cardId":281,"monsterPlaceId":1} 

 Player 1 21:43:37 $NEXT_STACK_ID:  

 Player 1 21:43:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 declared attack on Isaac!"} 

 Player 1 21:43:37 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":323,"attackingPlayerCardId":323,"idOfCardBeingAttacked":281,"stackEffectType":4}} 

 Player 1 21:43:38 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":323,"attackingPlayerCardId":323,"idOfCardBeingAttacked":281,"stackEffectType":4}} 

 Player 1 21:43:38 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 21:43:38 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 2 21:43:38 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 21:43:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 declared attack on Isaac!"} 

 Player 1 21:43:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add DeclareAttack 2 "}} 

 Player 1 21:43:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:43:41 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":323,"attackingPlayerCardId":323,"idOfCardBeingAttacked":281,"stackEffectType":4}} 

 Player 1 21:43:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding DeclareAttack 2"},"childOfId":10} 

 Player 1 21:43:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 1 21:43:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:43:41 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 1 21:43:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 1 21:43:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:43:41 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:43:41 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[327,328]} 

 Player 2 21:43:41 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:43:41 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 1 21:43:41 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 1 21:43:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve DeclareAttack 2 "}} 

 Player 1 21:43:41 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":323,"attackingPlayerCardId":323,"idOfCardBeingAttacked":281,"stackEffectType":4}} 

 Player 1 21:43:41 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":281,"particleType":5} 

 Player 1 21:43:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Has Entered Battle with Isaac!"} 

 Player 1 21:43:41 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":323,"scopeIsPlayer":true,"index":1,"originStackId":2},"isAfterActivation":true,"index":1} 

 Player 1 21:43:41 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":323,"attackingPlayerCardId":323,"idOfCardBeingAttacked":281,"stackEffectType":4}} 

 Player 1 21:43:41 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":2} 

 Player 1 21:43:41 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 21:43:41 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 2 21:43:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 declared attack on Isaac!"} 

 Player 1 21:43:44 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":2} 

 Player 1 21:43:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve DeclareAttack 2  "}} 

 Player 1 21:43:44 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:43:44 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":323,"attackingPlayerCardId":323,"idOfCardBeingAttacked":281,"stackEffectType":4}} 

 Player 1 21:43:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve DeclareAttack 2"},"childOfId":15} 

 Player 1 21:43:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 1 21:43:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:43:44 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:43:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 declared attack on Isaac!"} 

 Player 2 21:43:44 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[327,328]} 

 Player 2 21:43:44 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:43:44 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 1 21:43:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 1 21:43:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:43:44 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 1 21:43:44 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 1 21:43:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 1 21:43:44 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:43:44 $CLEAR_SE_VIS:  

 Player 1 21:43:46 $NEXT_STACK_ID:  

 Player 1 21:43:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Isaac!<Monster>"} 

 Player 1 21:43:46 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":323,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 1 21:43:46 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":323,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 1 21:43:46 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 21:43:46 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 2 21:43:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 21:43:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Isaac!<Monster>"} 

 Player 1 21:43:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add AttackRoll 3 "}} 

 Player 1 21:43:49 $ROLL_DICE:  
{"playerId":1} 

 Player 1 21:43:51 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":5} 

 Player 1 21:43:51 $UPDATE_STACK_VIS:  
{"stackId":3,"text":"player rolled 5 vs Isaac!<Monster>"} 

 Player 1 21:43:51 $SHOW_DICE_ROLL:  
{"stackId":3} 

 Player 1 21:43:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 5 vs Isaac!<Monster>"} 

 Player 1 21:43:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:43:54 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":323,"numberRolled":5,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 1 21:43:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding AttackRoll 3"},"childOfId":20} 

 Player 1 21:43:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 1 21:43:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:43:54 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 1 21:43:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 1 21:43:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:43:54 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:43:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Isaac!<Monster>"} 

 Player 2 21:43:55 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[327,328]} 

 Player 2 21:43:55 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:43:55 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 1 21:43:55 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 1 21:43:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve AttackRoll 3 "}} 

 Player 1 21:43:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 5 vs Isaac!<Monster>"} 

 Player 1 21:43:55 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":323,"numberRolled":5,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 1 21:43:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Added 0 to original roll"}} 

 Player 1 21:43:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Rolled 3 Against Isaac!<Monster> 3"} 

 Player 1 21:43:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Roll Hit"} 

 Player 1 21:43:55 $NEXT_STACK_ID:  

 Player 1 21:43:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:43:55 $CLEAR_SE_VIS:  

 Player 1 21:43:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Player 1 Roll Hit"} 

 Player 1 21:43:55 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 

 Player 1 21:43:55 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":323,"numberRolled":5,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 1 21:43:55 $REPLACE_STACK:  
{"currentStack":[{"entityId":4,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3},{"entityId":3,"creatorCardId":323,"numberRolled":5,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":281}]} 

 Player 1 21:43:55 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 21:43:55 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 2 21:43:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Isaac!<Monster>"} 

 Player 2 21:43:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Isaac!<Monster>"} 

 Player 1 21:43:58 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":3},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":323,"scopeIsPlayer":true,"index":2,"originStackId":3},"isAfterActivation":true,"index":2} 

 Player 1 21:43:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Player 1 Roll Hit"} 

 Player 1 21:43:58 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":323,"numberRolled":5,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 1 21:43:58 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":3} 

 Player 1 21:43:58 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 21:43:58 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 2 21:43:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Player 1 is rolling against Isaac!<Monster>"} 

 Player 1 21:44:01 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":3} 

 Player 1 21:44:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Remove After Resolve AttackRoll 3  "}} 

 Player 1 21:44:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac!"} 

 Player 1 21:44:01 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":323,"numberRolled":5,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 1 21:44:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Response Remove After Resolve AttackRoll 3"},"childOfId":26} 

 Player 1 21:44:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 1 "},"childOfId":26} 

 Player 1 21:44:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:44:01 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 1 21:44:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Wait For Response From Player 2 "},"childOfId":26} 

 Player 1 21:44:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:44:01 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:44:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Player 1 is rolling against Isaac!<Monster>"} 

 Player 2 21:44:01 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[327,328]} 

 Player 2 21:44:01 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:44:01 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 1 21:44:01 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 1 21:44:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Resolve CombatDamage 4 "}} 

 Player 1 21:44:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac!"} 

 Player 1 21:44:01 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 

 Player 1 21:44:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy will deal 1 combat damage to Isaac! "} 

 Player 1 21:44:01 $UPDATE_STACK_VIS:  
{"stackId":4,"text":"Maggy will deal 1 combat damage to Isaac!"} 

 Player 1 21:44:01 $MONSTER_GET_DAMAGED:  
{"cardId":281,"hpLeft":6,"damageDealerId":323} 

 Player 1 21:44:01 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":323},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 1 21:44:01 $NEXT_STACK_ID:  

 Player 1 21:44:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy will deal 1 combat damage to Isaac!  \n2:Activate Isaac! Effect DealDamage<DealDamage>"} 

 Player 1 21:44:01 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":5,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":281,"effctType":0},"isAfterActivation":true,"index":3,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 21:44:01 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":5,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":281,"effctType":0},"isAfterActivation":true,"index":3,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 21:44:01 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 21:44:02 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 2 21:44:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac!"} 

 Player 2 21:44:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Activate Isaac! "} 

 Player 1 21:44:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Add ActivatePassiveEffect 5 "}} 

 Player 1 21:44:18 $SHOW_DECISION:  
{"startCardId":281,"endCardId":327} 

 Player 1 21:44:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy will deal 1 combat damage to Isaac!  \n2:Activate Isaac! effect DealDamage<DealDamage>"} 

 Player 1 21:44:21 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[327],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":5,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":281,"effctType":0},"isAfterActivation":true,"index":3,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 21:44:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Response Adding ActivatePassiveEffect 5"},"childOfId":31} 

 Player 1 21:44:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 2 "},"childOfId":31} 

 Player 1 21:44:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:44:21 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:44:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Activate Isaac! "} 

 Player 2 21:44:21 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[327,328]} 

 Player 2 21:44:21 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:44:21 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 1 21:44:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Wait For Response From Player 1 "},"childOfId":31} 

 Player 1 21:44:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:44:21 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 1 21:44:21 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 1 21:44:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Resolve ActivatePassiveEffect 5 "}} 

 Player 1 21:44:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy will deal 1 combat damage to Isaac!  \n2:Activate Isaac! effect DealDamage<DealDamage>"} 

 Player 1 21:44:21 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[327],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":5,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":281,"effctType":0},"isAfterActivation":true,"index":3,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 21:44:21 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":281,"particleType":6} 

 Player 2 21:44:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Activate Isaac! "} 

 Player 1 21:44:23 $DISABLE_PARTICLE_EFFECT:  
{"cardId":281,"particleType":6} 

 Player 1 21:44:23 $PLAYER_GET_HIT:  
{"playerId":2,"damage":1,"damageDealerId":281} 

 Player 1 21:44:23 $NEXT_STACK_ID:  

 Player 1 21:44:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy will deal 1 combat damage to Isaac!  \n2:Activate Isaac! effect DealDamage<DealDamage>"} 

 Player 1 21:44:23 $CLEAR_SE_VIS:  

 Player 1 21:44:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy will deal 1 combat damage to Isaac!  \n2:Activate Isaac! effect DealDamage<DealDamage> \n3:Player 2 Is About To Die"} 

 Player 1 21:44:23 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 

 Player 1 21:44:23 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[327],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":5,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":281,"effctType":0},"effectPassiveMeta":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":323},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 21:44:23 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":327,"playerToDieCardId":327,"stackEffectType":15,"killerId":281}} 

 Player 1 21:44:23 $REPLACE_STACK:  
{"currentStack":[{"entityId":4,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3},{"effectCollectedData":{"effectTargets":[327],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":5,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":281,"effctType":0},"effectPassiveMeta":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":323},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3,"hasDataBeenCollectedYet":true,"stackEffectType":14},{"entityId":6,"creatorCardId":327,"playerToDieCardId":327,"stackEffectType":15,"killerId":281}]} 

 Player 1 21:44:23 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":327,"playerToDieCardId":327,"stackEffectType":15,"killerId":281}} 

 Player 1 21:44:23 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 21:44:23 $SHOW_STACK_EFFECT:  
{"effectId":6} 

 Player 2 21:44:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Activate Isaac! "} 

 Player 2 21:44:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Activate Isaac!  \n3:Player 2 Is About To Die"} 

 Player 1 21:44:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:44:26 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":281}],"result":null,"preventMethod":false,"methodScopeId":327,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 1 21:44:26 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":323},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 1 21:44:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy will deal 1 combat damage to Isaac!  \n2:Activated Isaac! Effect \n3:Player 2 Is About To Die"} 

 Player 1 21:44:26 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[327],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":5,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"isAfterActivation":true,"index":3,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 21:44:26 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 21:44:26 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 2 21:44:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Activate Isaac!  \n3:Player 2 Is About To Die"} 

 Player 1 21:44:29 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":5} 

 Player 1 21:44:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Remove After Resolve ActivatePassiveEffect 5  "}} 

 Player 1 21:44:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy will deal 1 combat damage to Isaac!  \n2:Player 2 Is About To Die"} 

 Player 1 21:44:29 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[327],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":5,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"isAfterActivation":true,"index":3,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 21:44:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Response Remove After Resolve ActivatePassiveEffect 5"},"childOfId":36} 

 Player 1 21:44:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 1 "},"childOfId":36} 

 Player 1 21:44:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:44:29 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 1 21:44:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Wait For Response From Player 2 "},"childOfId":36} 

 Player 1 21:44:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:44:29 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:44:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Activate Isaac!  \n3:Player 2 Is About To Die"} 

 Player 2 21:44:29 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[327,328]} 

 Player 2 21:44:29 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:44:29 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 1 21:44:29 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 1 21:44:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Resolve PlayerDeath 6 "}} 

 Player 1 21:44:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy will deal 1 combat damage to Isaac!  \n2:Player 2 Is About To Die"} 

 Player 1 21:44:30 $DO_STACK_EFFECT:  
{"originPlayerId":1,"playerId":2,"currentStack":[{"entityId":4,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3},{"entityId":6,"creatorCardId":327,"playerToDieCardId":327,"stackEffectType":15,"killerId":281}]} 

 Player 2 21:44:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Activate Isaac! "} 

 Player 2 21:44:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Player 2 Has Died"} 

 Player 2 21:44:30 $NEXT_STACK_ID:  

 Player 2 21:44:30 $CLEAR_SE_VIS:  

 Player 2 21:44:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Player 2 Has Died \n3:Player 2 Is About To Pay Death Penalties"} 

 Player 2 21:44:30 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 

 Player 2 21:44:30 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":327,"playerToDieCardId":327,"stackEffectType":15,"killerId":281}} 

 Player 2 21:44:30 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":327,"playerToPayCardId":327,"stackEffectType":16}} 

 Player 2 21:44:30 $REPLACE_STACK:  
{"currentStack":[{"entityId":4,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3},{"entityId":6,"creatorCardId":327,"playerToDieCardId":327,"stackEffectType":15,"killerId":281},{"entityId":7,"creatorCardId":327,"playerToPayCardId":327,"stackEffectType":16}]} 

 Player 2 21:44:30 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":327,"playerToPayCardId":327,"stackEffectType":16}} 

 Player 2 21:44:30 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 21:44:30 $SHOW_STACK_EFFECT:  
{"effectId":7} 

 Player 1 21:44:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy will deal 1 combat damage to Isaac!  \n2:Player 2 Is About To Die"} 

 Player 1 21:44:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Player 2 Is About To Die \n3:Player 2 Is About To Pay Death Penalties"} 

 Player 2 21:44:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:44:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Player 2 Has Died \n3:Player 2 Is About To Pay Death Penalties"} 

 Player 2 21:44:33 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":327,"playerToDieCardId":327,"stackEffectType":15,"killerId":281}} 

 Player 2 21:44:33 $FINISH_DO_STACK_EFFECT:  
{"playerId":1,"newStack":[{"entityId":4,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3},{"entityId":6,"creatorCardId":327,"playerToDieCardId":327,"stackEffectType":15,"killerId":281},{"entityId":7,"creatorCardId":327,"playerToPayCardId":327,"stackEffectType":16}]} 

 Player 1 21:44:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Player 2 Is About To Die \n3:Player 2 Is About To Pay Death Penalties"} 

 Player 1 21:44:33 $CLEAR_SE_VIS:  

 Player 1 21:44:33 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 

 Player 1 21:44:33 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":327,"playerToDieCardId":327,"stackEffectType":15,"killerId":281}} 

 Player 1 21:44:33 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":327,"playerToPayCardId":327,"stackEffectType":16}} 

 Player 1 21:44:33 $REPLACE_STACK:  
{"currentStack":[{"entityId":4,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3},{"entityId":6,"creatorCardId":327,"playerToDieCardId":327,"stackEffectType":15,"killerId":281},{"entityId":7,"creatorCardId":327,"playerToPayCardId":327,"stackEffectType":16}]} 

 Player 1 21:44:33 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 21:44:33 $SHOW_STACK_EFFECT:  
{"effectId":6} 

 Player 2 21:44:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Player 2 Has Died \n3:Player 2 Is About To Pay Death Penalties"} 

 Player 1 21:44:36 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":6} 

 Player 1 21:44:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Remove After Resolve PlayerDeath 6  "}} 

 Player 1 21:44:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Player 2 Is About To Pay Death Penalties"} 

 Player 1 21:44:36 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":327,"playerToDieCardId":327,"stackEffectType":15,"killerId":281}} 

 Player 1 21:44:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Response Remove After Resolve PlayerDeath 6"},"childOfId":41} 

 Player 1 21:44:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 1 "},"childOfId":41} 

 Player 1 21:44:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:44:36 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 1 21:44:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Wait For Response From Player 2 "},"childOfId":41} 

 Player 1 21:44:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:44:36 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:44:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Player 2 Is About To Die \n3:Player 2 Is About To Pay Death Penalties"} 

 Player 2 21:44:36 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[327,328]} 

 Player 2 21:44:36 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:44:36 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 1 21:44:36 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 1 21:44:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Resolve PlayerDeathPenalties 7 "}} 

 Player 1 21:44:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Player 2 Is About To Pay Death Penalties"} 

 Player 1 21:44:36 $DO_STACK_EFFECT:  
{"originPlayerId":1,"playerId":2,"currentStack":[{"entityId":4,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3},{"entityId":7,"creatorCardId":327,"playerToPayCardId":327,"stackEffectType":16}]} 

 Player 2 21:44:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Player 2 Is About To Die"} 

 Player 2 21:44:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Player 2 pays Penalties"}} 

 Player 2 21:44:36 $SET_MONEY:  
{"playerId":2,"numOfCoins":2} 

 Player 2 21:44:36 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-1}],"result":null,"preventMethod":false,"methodScopeId":327,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 21:44:42 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":62} 

 Player 2 21:44:42 $MOVE_CARD:  
{"moveIndex":9,"cardId":62,"placeID":330,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 21:44:43 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":62,"flipIfFlipped":true,"playerId":2} 

 Player 2 21:44:43 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":62} 

 Player 2 21:44:43 $USE_ITEM:  
{"cardId":327} 

 Player 2 21:44:43 $USE_ITEM:  
{"cardId":328} 

 Player 2 21:44:43 $PLAYER_DIED:  
{"playerId":2} 

 Player 2 21:44:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Player 2 Paid Death Penalties"} 

 Player 2 21:44:43 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":327,"playerToPayCardId":327,"stackEffectType":16}} 

 Player 2 21:44:43 $FINISH_DO_STACK_EFFECT:  
{"playerId":1,"newStack":[{"entityId":4,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3},{"entityId":7,"creatorCardId":327,"playerToPayCardId":327,"stackEffectType":16}]} 

 Player 1 21:44:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Player 2 Is About To Pay Death Penalties"} 

 Player 1 21:44:43 $CLEAR_SE_VIS:  

 Player 1 21:44:43 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 

 Player 1 21:44:43 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":327,"playerToPayCardId":327,"stackEffectType":16}} 

 Player 1 21:44:43 $REPLACE_STACK:  
{"currentStack":[{"entityId":4,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3},{"entityId":7,"creatorCardId":327,"playerToPayCardId":327,"stackEffectType":16}]} 

 Player 1 21:44:43 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 21:44:43 $SHOW_STACK_EFFECT:  
{"effectId":7} 

 Player 2 21:44:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Player 2 Paid Death Penalties"} 

 Player 1 21:44:46 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":7} 

 Player 1 21:44:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Remove After Resolve PlayerDeathPenalties 7  "}} 

 Player 1 21:44:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac!"} 

 Player 1 21:44:46 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":327,"playerToPayCardId":327,"stackEffectType":16}} 

 Player 1 21:44:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Response Remove After Resolve PlayerDeathPenalties 7"},"childOfId":47} 

 Player 1 21:44:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Wait For Response From Player 2 "},"childOfId":47} 

 Player 1 21:44:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:44:46 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:44:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Player 2 Is About To Pay Death Penalties"} 

 Player 2 21:44:46 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[]} 

 Player 2 21:44:46 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:44:46 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 1 21:44:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Wait For Response From Player 1 "},"childOfId":47} 

 Player 1 21:44:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:44:46 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 1 21:44:46 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 1 21:44:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Resolve CombatDamage 4 "}} 

 Player 1 21:44:46 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":3},{"type":0,"number":323},{"type":0,"number":281}],"result":null,"preventMethod":false,"methodScopeId":323,"scopeIsPlayer":true,"index":5,"originStackId":4},"isAfterActivation":true,"index":5} 

 Player 1 21:44:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac!"} 

 Player 1 21:44:46 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 

 Player 1 21:44:46 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":4} 

 Player 1 21:44:47 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 21:44:47 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 1 21:44:49 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":4} 

 Player 1 21:44:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Remove After Resolve CombatDamage 4  "}} 

 Player 1 21:44:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:44:49 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 

 Player 1 21:44:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Response Remove After Resolve CombatDamage 4"},"childOfId":52} 

 Player 1 21:44:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Wait For Response From Player 1 "},"childOfId":52} 

 Player 1 21:44:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:44:49 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 1 21:44:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Wait For Response From Player 2 "},"childOfId":52} 

 Player 1 21:44:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:44:50 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:44:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac!"} 

 Player 2 21:44:50 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[]} 

 Player 2 21:44:50 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:44:50 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 1 21:44:50 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 1 21:44:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":56,"_text":"Stack Was Emptied "}} 

 Player 1 21:44:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:44:50 $CLEAR_SE_VIS:  

 Player 1 21:44:52 $NEXT_STACK_ID:  

 Player 1 21:44:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Isaac!<Monster>"} 

 Player 1 21:44:52 $ADD_TO_STACK:  
{"stackEffect":{"entityId":8,"creatorCardId":323,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 1 21:44:52 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":323,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 1 21:44:52 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 21:44:52 $SHOW_STACK_EFFECT:  
{"effectId":8} 

 Player 2 21:44:52 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 21:44:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Isaac!<Monster>"} 

 Player 1 21:44:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":57,"_text":"Add AttackRoll 8 "}} 

 Player 1 21:44:55 $ROLL_DICE:  
{"playerId":1} 

 Player 1 21:44:56 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":5} 

 Player 1 21:44:56 $UPDATE_STACK_VIS:  
{"stackId":8,"text":"player rolled 5 vs Isaac!<Monster>"} 

 Player 1 21:44:56 $SHOW_DICE_ROLL:  
{"stackId":8} 

 Player 1 21:44:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 5 vs Isaac!<Monster>"} 

 Player 1 21:44:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:44:59 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":323,"numberRolled":5,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 1 21:44:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":58,"_text":"Response Adding AttackRoll 8"},"childOfId":57} 

 Player 1 21:44:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":59,"_text":"Wait For Response From Player 1 "},"childOfId":57} 

 Player 1 21:44:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:44:59 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 1 21:44:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":60,"_text":"Wait For Response From Player 2 "},"childOfId":57} 

 Player 1 21:44:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:44:59 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:44:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Isaac!<Monster>"} 

 Player 2 21:44:59 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[]} 

 Player 2 21:44:59 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:45:00 $ACTION_MASSAGE_REMOVE:  
{"id":60} 

 Player 1 21:45:00 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 1 21:45:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":61,"_text":"Resolve AttackRoll 8 "}} 

 Player 1 21:45:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 5 vs Isaac!<Monster>"} 

 Player 1 21:45:00 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":323,"numberRolled":5,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 1 21:45:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":62,"_text":"Added 0 to original roll"}} 

 Player 1 21:45:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Rolled 3 Against Isaac!<Monster> 3"} 

 Player 1 21:45:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Roll Hit"} 

 Player 1 21:45:00 $NEXT_STACK_ID:  

 Player 1 21:45:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:45:00 $CLEAR_SE_VIS:  

 Player 1 21:45:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Player 1 Roll Hit"} 

 Player 1 21:45:00 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 

 Player 1 21:45:00 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":323,"numberRolled":5,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 1 21:45:00 $REPLACE_STACK:  
{"currentStack":[{"entityId":9,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3},{"entityId":8,"creatorCardId":323,"numberRolled":5,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":281}]} 

 Player 1 21:45:00 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 21:45:00 $SHOW_STACK_EFFECT:  
{"effectId":9} 

 Player 2 21:45:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Isaac!<Monster>"} 

 Player 2 21:45:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Isaac!<Monster>"} 

 Player 1 21:45:03 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":3},{"type":2,"number":1},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":323,"scopeIsPlayer":true,"index":6,"originStackId":8},"isAfterActivation":true,"index":6} 

 Player 1 21:45:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Player 1 Roll Hit"} 

 Player 1 21:45:03 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":323,"numberRolled":5,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 1 21:45:03 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":8} 

 Player 1 21:45:03 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 21:45:03 $SHOW_STACK_EFFECT:  
{"effectId":8} 

 Player 2 21:45:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Player 1 is rolling against Isaac!<Monster>"} 

 Player 1 21:45:06 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":8} 

 Player 1 21:45:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":63,"_text":"Remove After Resolve AttackRoll 8  "}} 

 Player 1 21:45:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac!"} 

 Player 1 21:45:06 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":8,"creatorCardId":323,"numberRolled":5,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 1 21:45:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":64,"_text":"Response Remove After Resolve AttackRoll 8"},"childOfId":63} 

 Player 1 21:45:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":65,"_text":"Wait For Response From Player 1 "},"childOfId":63} 

 Player 1 21:45:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:45:06 $ACTION_MASSAGE_REMOVE:  
{"id":65} 

 Player 1 21:45:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":66,"_text":"Wait For Response From Player 2 "},"childOfId":63} 

 Player 1 21:45:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:45:06 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:45:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Player 1 is rolling against Isaac!<Monster>"} 

 Player 2 21:45:06 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[]} 

 Player 2 21:45:06 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:45:06 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 1 21:45:06 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 1 21:45:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":67,"_text":"Resolve CombatDamage 9 "}} 

 Player 1 21:45:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac!"} 

 Player 1 21:45:06 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 

 Player 1 21:45:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy will deal 1 combat damage to Isaac! "} 

 Player 1 21:45:06 $UPDATE_STACK_VIS:  
{"stackId":9,"text":"Maggy will deal 1 combat damage to Isaac!"} 

 Player 1 21:45:06 $MONSTER_GET_DAMAGED:  
{"cardId":281,"hpLeft":5,"damageDealerId":323} 

 Player 1 21:45:06 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":323},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 

 Player 1 21:45:06 $NEXT_STACK_ID:  

 Player 1 21:45:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy will deal 1 combat damage to Isaac!  \n2:Activate Isaac! Effect DealDamage<DealDamage>"} 

 Player 1 21:45:06 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":10,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":281,"effctType":0},"isAfterActivation":true,"index":7,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 21:45:06 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":10,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":281,"effctType":0},"isAfterActivation":true,"index":7,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 21:45:06 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 21:45:06 $SHOW_STACK_EFFECT:  
{"effectId":10} 

 Player 2 21:45:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac!"} 

 Player 2 21:45:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Activate Isaac! "} 

 Player 1 21:45:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":68,"_text":"Add ActivatePassiveEffect 10 "}} 

 Player 1 21:45:09 $SHOW_DECISION:  
{"startCardId":281,"endCardId":323} 

 Player 1 21:45:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy will deal 1 combat damage to Isaac!  \n2:Activate Isaac! effect DealDamage<DealDamage>"} 

 Player 1 21:45:12 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[323],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":10,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":281,"effctType":0},"isAfterActivation":true,"index":7,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 21:45:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":69,"_text":"Response Adding ActivatePassiveEffect 10"},"childOfId":68} 

 Player 1 21:45:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":70,"_text":"Wait For Response From Player 2 "},"childOfId":68} 

 Player 1 21:45:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:45:12 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:45:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Activate Isaac! "} 

 Player 2 21:45:12 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[]} 

 Player 2 21:45:12 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:45:12 $ACTION_MASSAGE_REMOVE:  
{"id":70} 

 Player 1 21:45:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":71,"_text":"Wait For Response From Player 1 "},"childOfId":68} 

 Player 1 21:45:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:45:12 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 1 21:45:12 $ACTION_MASSAGE_REMOVE:  
{"id":69} 

 Player 1 21:45:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":72,"_text":"Resolve ActivatePassiveEffect 10 "}} 

 Player 1 21:45:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy will deal 1 combat damage to Isaac!  \n2:Activate Isaac! effect DealDamage<DealDamage>"} 

 Player 1 21:45:13 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[323],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":10,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":281,"effctType":0},"isAfterActivation":true,"index":7,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 21:45:13 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":281,"particleType":6} 

 Player 2 21:45:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Activate Isaac! "} 

 Player 1 21:45:14 $DISABLE_PARTICLE_EFFECT:  
{"cardId":281,"particleType":6} 

 Player 1 21:45:14 $PLAYER_GET_HIT:  
{"playerId":1,"damage":1,"damageDealerId":281} 

 Player 1 21:45:14 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":281}],"result":null,"preventMethod":false,"methodScopeId":323,"scopeIsPlayer":true,"index":8,"originStackId":-1},"isAfterActivation":true,"index":8} 

 Player 1 21:45:14 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":323},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 

 Player 1 21:45:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy will deal 1 combat damage to Isaac!  \n2:Activated Isaac! Effect"} 

 Player 1 21:45:15 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[323],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":10,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"isAfterActivation":true,"index":7,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 21:45:15 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":10} 

 Player 1 21:45:15 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 21:45:15 $SHOW_STACK_EFFECT:  
{"effectId":10} 

 Player 2 21:45:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Activate Isaac! "} 

 Player 1 21:45:17 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":10} 

 Player 1 21:45:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":73,"_text":"Remove After Resolve ActivatePassiveEffect 10  "}} 

 Player 1 21:45:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy will deal 1 combat damage to Isaac! "} 

 Player 1 21:45:17 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[323],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":10,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"isAfterActivation":true,"index":7,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 21:45:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":74,"_text":"Response Remove After Resolve ActivatePassiveEffect 10"},"childOfId":73} 

 Player 1 21:45:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":75,"_text":"Wait For Response From Player 1 "},"childOfId":73} 

 Player 1 21:45:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:45:18 $ACTION_MASSAGE_REMOVE:  
{"id":75} 

 Player 1 21:45:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":76,"_text":"Wait For Response From Player 2 "},"childOfId":73} 

 Player 1 21:45:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:45:18 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:45:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Activate Isaac! "} 

 Player 2 21:45:18 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[]} 

 Player 2 21:45:18 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:45:18 $ACTION_MASSAGE_REMOVE:  
{"id":76} 

 Player 1 21:45:18 $ACTION_MASSAGE_REMOVE:  
{"id":74} 

 Player 1 21:45:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":77,"_text":"Resolve CombatDamage 9 "}} 

 Player 1 21:45:18 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":3},{"type":0,"number":323},{"type":0,"number":281}],"result":null,"preventMethod":false,"methodScopeId":323,"scopeIsPlayer":true,"index":9,"originStackId":9},"isAfterActivation":true,"index":9} 

 Player 1 21:45:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy will deal 1 combat damage to Isaac! "} 

 Player 1 21:45:18 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 

 Player 1 21:45:18 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":9} 

 Player 1 21:45:18 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 21:45:18 $SHOW_STACK_EFFECT:  
{"effectId":9} 

 Player 2 21:45:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac!"} 

 Player 1 21:45:21 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":9} 

 Player 1 21:45:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":78,"_text":"Remove After Resolve CombatDamage 9  "}} 

 Player 1 21:45:21 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:45:21 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":9,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 

 Player 1 21:45:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":79,"_text":"Response Remove After Resolve CombatDamage 9"},"childOfId":78} 

 Player 1 21:45:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":80,"_text":"Wait For Response From Player 2 "},"childOfId":78} 

 Player 1 21:45:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:45:21 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:45:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac!"} 

 Player 2 21:45:21 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[]} 

 Player 2 21:45:21 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:45:21 $ACTION_MASSAGE_REMOVE:  
{"id":80} 

 Player 1 21:45:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":81,"_text":"Wait For Response From Player 1 "},"childOfId":78} 

 Player 1 21:45:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:45:21 $ACTION_MASSAGE_REMOVE:  
{"id":81} 

 Player 1 21:45:21 $ACTION_MASSAGE_REMOVE:  
{"id":79} 

 Player 1 21:45:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":82,"_text":"Stack Was Emptied "}} 

 Player 1 21:45:21 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:45:21 $CLEAR_SE_VIS:  

 Player 1 21:45:23 $PLAYER_GAIN_DMG:  
{"playerId":1,"DMGToGain":4,"isTemp":true} 

 Player 1 21:45:27 $NEXT_STACK_ID:  

 Player 1 21:45:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Isaac!<Monster>"} 

 Player 1 21:45:27 $ADD_TO_STACK:  
{"stackEffect":{"entityId":11,"creatorCardId":323,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 1 21:45:27 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":323,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 1 21:45:27 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 21:45:27 $SHOW_STACK_EFFECT:  
{"effectId":11} 

 Player 2 21:45:27 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 21:45:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Isaac!<Monster>"} 

 Player 1 21:45:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":83,"_text":"Add AttackRoll 11 "}} 

 Player 1 21:45:30 $ROLL_DICE:  
{"playerId":1} 

 Player 1 21:45:32 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":3} 

 Player 1 21:45:32 $UPDATE_STACK_VIS:  
{"stackId":11,"text":"player rolled 3 vs Isaac!<Monster>"} 

 Player 1 21:45:32 $SHOW_DICE_ROLL:  
{"stackId":11} 

 Player 1 21:45:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 3 vs Isaac!<Monster>"} 

 Player 1 21:45:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:45:35 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":11,"creatorCardId":323,"numberRolled":3,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 1 21:45:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":84,"_text":"Response Adding AttackRoll 11"},"childOfId":83} 

 Player 1 21:45:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":85,"_text":"Wait For Response From Player 1 "},"childOfId":83} 

 Player 1 21:45:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:45:35 $ACTION_MASSAGE_REMOVE:  
{"id":85} 

 Player 1 21:45:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":86,"_text":"Wait For Response From Player 2 "},"childOfId":83} 

 Player 1 21:45:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:45:35 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:45:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Isaac!<Monster>"} 

 Player 2 21:45:35 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[]} 

 Player 2 21:45:35 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:45:35 $ACTION_MASSAGE_REMOVE:  
{"id":86} 

 Player 1 21:45:35 $ACTION_MASSAGE_REMOVE:  
{"id":84} 

 Player 1 21:45:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":87,"_text":"Resolve AttackRoll 11 "}} 

 Player 1 21:45:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 3 vs Isaac!<Monster>"} 

 Player 1 21:45:35 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":11,"creatorCardId":323,"numberRolled":3,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 1 21:45:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":88,"_text":"Added 0 to original roll"}} 

 Player 1 21:45:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Rolled 3 Against Isaac!<Monster> 3"} 

 Player 1 21:45:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Roll Hit"} 

 Player 1 21:45:36 $NEXT_STACK_ID:  

 Player 1 21:45:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:45:36 $CLEAR_SE_VIS:  

 Player 1 21:45:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Player 1 Roll Hit"} 

 Player 1 21:45:36 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":12,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 

 Player 1 21:45:36 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":323,"numberRolled":3,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 1 21:45:36 $REPLACE_STACK:  
{"currentStack":[{"entityId":12,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3},{"entityId":11,"creatorCardId":323,"numberRolled":3,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":281}]} 

 Player 1 21:45:36 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 21:45:36 $SHOW_STACK_EFFECT:  
{"effectId":12} 

 Player 2 21:45:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Isaac!<Monster>"} 

 Player 2 21:45:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Isaac!<Monster>"} 

 Player 1 21:45:38 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":3},{"type":2,"number":1},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":323,"scopeIsPlayer":true,"index":10,"originStackId":11},"isAfterActivation":true,"index":10} 

 Player 1 21:45:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Player 1 Roll Hit"} 

 Player 1 21:45:38 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":11,"creatorCardId":323,"numberRolled":3,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 1 21:45:38 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":11} 

 Player 1 21:45:38 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 21:45:39 $SHOW_STACK_EFFECT:  
{"effectId":11} 

 Player 2 21:45:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Player 1 is rolling against Isaac!<Monster>"} 

 Player 1 21:45:41 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":11} 

 Player 1 21:45:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":89,"_text":"Remove After Resolve AttackRoll 11  "}} 

 Player 1 21:45:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac!"} 

 Player 1 21:45:41 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":11,"creatorCardId":323,"numberRolled":3,"rollingPlayerCardId":323,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 1 21:45:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":90,"_text":"Response Remove After Resolve AttackRoll 11"},"childOfId":89} 

 Player 1 21:45:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":91,"_text":"Wait For Response From Player 1 "},"childOfId":89} 

 Player 1 21:45:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:45:42 $ACTION_MASSAGE_REMOVE:  
{"id":91} 

 Player 1 21:45:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":92,"_text":"Wait For Response From Player 2 "},"childOfId":89} 

 Player 1 21:45:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:45:42 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:45:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:Player 1 is rolling against Isaac!<Monster>"} 

 Player 2 21:45:42 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[]} 

 Player 2 21:45:42 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:45:42 $ACTION_MASSAGE_REMOVE:  
{"id":92} 

 Player 1 21:45:42 $ACTION_MASSAGE_REMOVE:  
{"id":90} 

 Player 1 21:45:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":93,"_text":"Resolve CombatDamage 12 "}} 

 Player 1 21:45:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac!"} 

 Player 1 21:45:42 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":12,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 

 Player 1 21:45:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy will deal 5 combat damage to Isaac! "} 

 Player 1 21:45:42 $UPDATE_STACK_VIS:  
{"stackId":12,"text":"Maggy will deal 5 combat damage to Isaac!"} 

 Player 1 21:45:42 $MONSTER_GET_DAMAGED:  
{"cardId":281,"hpLeft":0,"damageDealerId":323} 

 Player 1 21:45:42 $NEXT_STACK_ID:  

 Player 1 21:45:42 $CLEAR_SE_VIS:  

 Player 1 21:45:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy will deal 5 combat damage to Isaac!  \n2:[object Object] Is Going To Be Killed by Maggy"} 

 Player 1 21:45:42 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":12,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 

 Player 1 21:45:42 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":13,"creatorCardId":323,"monsterToDieCardId":281,"stackEffectType":5,"killerId":323}} 

 Player 1 21:45:42 $REPLACE_STACK:  
{"currentStack":[{"entityId":12,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3},{"entityId":13,"creatorCardId":323,"monsterToDieCardId":281,"stackEffectType":5,"killerId":323}]} 

 Player 1 21:45:42 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":13,"creatorCardId":323,"monsterToDieCardId":281,"stackEffectType":5,"killerId":323}} 

 Player 1 21:45:42 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 21:45:42 $SHOW_STACK_EFFECT:  
{"effectId":13} 

 Player 2 21:45:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac!"} 

 Player 2 21:45:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:[object Object] Is Going To Be Killed by Maggy"} 

 Player 1 21:45:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:45:45 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":5},{"type":0,"number":323},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":11,"originStackId":-1},"isAfterActivation":true,"index":11} 

 Player 1 21:45:45 $NEXT_STACK_ID:  

 Player 1 21:45:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy will deal 5 combat damage to Isaac!  \n2:[object Object] Is Going To Be Killed by Maggy"} 

 Player 1 21:45:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy will deal 5 combat damage to Isaac!  \n2:[object Object] Is Going To Be Killed by Maggy \n3:Activate Isaac! Effect DealDamage<DealDamage>"} 

 Player 1 21:45:45 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":14,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":281,"effctType":0},"isAfterActivation":true,"index":11,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 21:45:45 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":14,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":281,"effctType":0},"isAfterActivation":true,"index":11,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 21:45:45 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 21:45:45 $SHOW_STACK_EFFECT:  
{"effectId":14} 

 Player 2 21:45:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:[object Object] Is Going To Be Killed by Maggy"} 

 Player 2 21:45:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:[object Object] Is Going To Be Killed by Maggy \n3:Activate Isaac! "} 

 Player 1 21:45:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":94,"_text":"Add ActivatePassiveEffect 14 "}} 

 Player 1 21:45:48 $SHOW_DECISION:  
{"startCardId":281,"endCardId":323} 

 Player 1 21:45:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy will deal 5 combat damage to Isaac!  \n2:[object Object] Is Going To Be Killed by Maggy \n3:Activate Isaac! effect DealDamage<DealDamage>"} 

 Player 1 21:45:51 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[323],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":14,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":281,"effctType":0},"isAfterActivation":true,"index":11,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 21:45:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":95,"_text":"Response Adding ActivatePassiveEffect 14"},"childOfId":94} 

 Player 1 21:45:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":96,"_text":"Wait For Response From Player 1 "},"childOfId":94} 

 Player 1 21:45:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:45:51 $ACTION_MASSAGE_REMOVE:  
{"id":96} 

 Player 1 21:45:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":97,"_text":"Wait For Response From Player 2 "},"childOfId":94} 

 Player 1 21:45:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:45:51 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:45:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:[object Object] Is Going To Be Killed by Maggy \n3:Activate Isaac! "} 

 Player 2 21:45:51 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[]} 

 Player 2 21:45:51 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:45:51 $ACTION_MASSAGE_REMOVE:  
{"id":97} 

 Player 1 21:45:51 $ACTION_MASSAGE_REMOVE:  
{"id":95} 

 Player 1 21:45:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":98,"_text":"Resolve ActivatePassiveEffect 14 "}} 

 Player 1 21:45:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy will deal 5 combat damage to Isaac!  \n2:[object Object] Is Going To Be Killed by Maggy \n3:Activate Isaac! effect DealDamage<DealDamage>"} 

 Player 1 21:45:51 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[323],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":14,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":281,"effctType":0},"isAfterActivation":true,"index":11,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 21:45:51 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":281,"particleType":6} 

 Player 2 21:45:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:[object Object] Is Going To Be Killed by Maggy \n3:Activate Isaac! "} 

 Player 1 21:45:53 $DISABLE_PARTICLE_EFFECT:  
{"cardId":281,"particleType":6} 

 Player 1 21:45:53 $PLAYER_GET_HIT:  
{"playerId":1,"damage":1,"damageDealerId":281} 

 Player 1 21:45:53 $NEXT_STACK_ID:  

 Player 1 21:45:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy will deal 5 combat damage to Isaac!  \n2:[object Object] Is Going To Be Killed by Maggy \n3:Activate Isaac! effect DealDamage<DealDamage>"} 

 Player 1 21:45:53 $CLEAR_SE_VIS:  

 Player 1 21:45:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy will deal 5 combat damage to Isaac!  \n2:[object Object] Is Going To Be Killed by Maggy \n3:Activate Isaac! effect DealDamage<DealDamage> \n4:Player 1 Is About To Die"} 

 Player 1 21:45:53 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":12,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 

 Player 1 21:45:53 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":13,"creatorCardId":323,"monsterToDieCardId":281,"stackEffectType":5,"killerId":323}} 

 Player 1 21:45:53 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[323],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":14,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":281,"effctType":0},"effectPassiveMeta":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":5},{"type":0,"number":323},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":11,"originStackId":-1},"isAfterActivation":true,"index":11,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 21:45:53 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":15,"creatorCardId":323,"playerToDieCardId":323,"stackEffectType":15,"killerId":281}} 

 Player 1 21:45:54 $REPLACE_STACK:  
{"currentStack":[{"entityId":12,"creatorCardId":323,"entityToDoDamageCardId":323,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3},{"entityId":13,"creatorCardId":323,"monsterToDieCardId":281,"stackEffectType":5,"killerId":323},{"effectCollectedData":{"effectTargets":[323],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":14,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":281,"effctType":0},"effectPassiveMeta":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":5},{"type":0,"number":323},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":11,"originStackId":-1},"isAfterActivation":true,"index":11,"hasDataBeenCollectedYet":true,"stackEffectType":14},{"entityId":15,"creatorCardId":323,"playerToDieCardId":323,"stackEffectType":15,"killerId":281}]} 

 Player 1 21:45:54 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":15,"creatorCardId":323,"playerToDieCardId":323,"stackEffectType":15,"killerId":281}} 

 Player 1 21:45:54 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 21:45:54 $SHOW_STACK_EFFECT:  
{"effectId":15} 

 Player 2 21:45:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:[object Object] Is Going To Be Killed by Maggy \n3:Activate Isaac! "} 

 Player 2 21:45:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:[object Object] Is Going To Be Killed by Maggy \n3:Activate Isaac!  \n4:Player 1 Is About To Die"} 

 Player 1 21:45:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:45:56 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":281}],"result":null,"preventMethod":false,"methodScopeId":323,"scopeIsPlayer":true,"index":12,"originStackId":-1},"isAfterActivation":true,"index":12} 

 Player 1 21:45:56 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":5},{"type":0,"number":323},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":11,"originStackId":-1},"isAfterActivation":true,"index":11} 

 Player 1 21:45:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy will deal 5 combat damage to Isaac!  \n2:[object Object] Is Going To Be Killed by Maggy \n3:Activated Isaac! Effect \n4:Player 1 Is About To Die"} 

 Player 1 21:45:56 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[323],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":14,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"isAfterActivation":true,"index":11,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 21:45:56 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 21:45:56 $SHOW_STACK_EFFECT:  
{"effectId":14} 

 Player 2 21:45:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:[object Object] Is Going To Be Killed by Maggy \n3:Activate Isaac!  \n4:Player 1 Is About To Die"} 

 Player 1 21:45:59 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":14} 

 Player 1 21:45:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":99,"_text":"Remove After Resolve ActivatePassiveEffect 14  "}} 

 Player 1 21:45:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy will deal 5 combat damage to Isaac!  \n2:[object Object] Is Going To Be Killed by Maggy \n3:Player 1 Is About To Die"} 

 Player 1 21:45:59 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[323],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":14,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":281,"isAfterActivation":true,"index":11,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 21:45:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":100,"_text":"Response Remove After Resolve ActivatePassiveEffect 14"},"childOfId":99} 

 Player 1 21:45:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":101,"_text":"Wait For Response From Player 1 "},"childOfId":99} 

 Player 1 21:45:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:45:59 $ACTION_MASSAGE_REMOVE:  
{"id":101} 

 Player 1 21:45:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":102,"_text":"Wait For Response From Player 2 "},"childOfId":99} 

 Player 1 21:45:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:46:00 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:46:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:[object Object] Is Going To Be Killed by Maggy \n3:Activate Isaac!  \n4:Player 1 Is About To Die"} 

 Player 2 21:46:00 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[]} 

 Player 2 21:46:00 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:46:00 $ACTION_MASSAGE_REMOVE:  
{"id":102} 

 Player 1 21:46:00 $ACTION_MASSAGE_REMOVE:  
{"id":100} 

 Player 1 21:46:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":103,"_text":"Resolve PlayerDeath 15 "}} 

 Player 1 21:46:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy will deal 5 combat damage to Isaac!  \n2:[object Object] Is Going To Be Killed by Maggy \n3:Player 1 Is About To Die"} 

 Player 1 21:46:00 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":15,"creatorCardId":323,"playerToDieCardId":323,"stackEffectType":15,"killerId":281}} 

 Player 1 21:46:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy will deal 5 combat damage to Isaac!  \n2:[object Object] Is Going To Be Killed by Maggy \n3:Player 1 Has Died"} 

 Player 1 21:46:00 $DISABLE_PARTICLE_EFFECT:  
{"cardId":281,"particleType":5} 

 Player 1 21:46:00 $CANCEL_ATTACK:  

 Player 1 21:46:00 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":12} 

 Player 1 21:46:00 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":12} 

 Player 1 21:46:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":104,"_text":"Fizzle CombatDamage 12"}} 

 Player 1 21:46:00 $FIZZLE_STACK_EFFECT:  
{"entityId":12} 

 Player 1 21:46:00 $NEXT_STACK_ID:  

 Player 1 21:46:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] Is Going To Be Killed by Maggy \n2:Player 1 Has Died"} 

 Player 1 21:46:00 $CLEAR_SE_VIS:  

 Player 1 21:46:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] Is Going To Be Killed by Maggy \n2:Player 1 Has Died \n3:Player 1 Is About To Pay Death Penalties"} 

 Player 1 21:46:00 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":13,"creatorCardId":323,"monsterToDieCardId":281,"stackEffectType":5,"killerId":323}} 

 Player 1 21:46:00 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":15,"creatorCardId":323,"playerToDieCardId":323,"stackEffectType":15,"killerId":281}} 

 Player 1 21:46:00 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":16,"creatorCardId":323,"playerToPayCardId":323,"stackEffectType":16}} 

 Player 1 21:46:00 $REPLACE_STACK:  
{"currentStack":[{"entityId":13,"creatorCardId":323,"monsterToDieCardId":281,"stackEffectType":5,"killerId":323},{"entityId":15,"creatorCardId":323,"playerToDieCardId":323,"stackEffectType":15,"killerId":281},{"entityId":16,"creatorCardId":323,"playerToPayCardId":323,"stackEffectType":16}]} 

 Player 1 21:46:00 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":16,"creatorCardId":323,"playerToPayCardId":323,"stackEffectType":16}} 

 Player 1 21:46:00 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 21:46:00 $SHOW_STACK_EFFECT:  
{"effectId":16} 

 Player 2 21:46:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Maggy is going to hurt Isaac! \n2:[object Object] Is Going To Be Killed by Maggy \n3:Activate Isaac! "} 

 Player 2 21:46:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] Is Going To Be Killed by Maggy \n2:Activate Isaac! "} 

 Player 2 21:46:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] Is Going To Be Killed by Maggy \n2:Player 1 Is About To Die \n3:Player 1 Is About To Pay Death Penalties"} 

 Player 1 21:46:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:46:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] Is Going To Be Killed by Maggy \n2:Player 1 Has Died \n3:Player 1 Is About To Pay Death Penalties"} 

 Player 1 21:46:03 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":15,"creatorCardId":323,"playerToDieCardId":323,"stackEffectType":15,"killerId":281}} 

 Player 1 21:46:03 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 21:46:03 $SHOW_STACK_EFFECT:  
{"effectId":15} 

 Player 2 21:46:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] Is Going To Be Killed by Maggy \n2:Player 1 Is About To Die \n3:Player 1 Is About To Pay Death Penalties"} 

 Player 1 21:46:06 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":15} 

 Player 1 21:46:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":105,"_text":"Remove After Resolve PlayerDeath 15  "}} 

 Player 1 21:46:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] Is Going To Be Killed by Maggy \n2:Player 1 Is About To Pay Death Penalties"} 

 Player 1 21:46:06 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":15,"creatorCardId":323,"playerToDieCardId":323,"stackEffectType":15,"killerId":281}} 

 Player 1 21:46:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":106,"_text":"Response Remove After Resolve PlayerDeath 15"},"childOfId":105} 

 Player 1 21:46:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":107,"_text":"Wait For Response From Player 1 "},"childOfId":105} 

 Player 1 21:46:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:46:06 $ACTION_MASSAGE_REMOVE:  
{"id":107} 

 Player 1 21:46:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":108,"_text":"Wait For Response From Player 2 "},"childOfId":105} 

 Player 1 21:46:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:46:06 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:46:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] Is Going To Be Killed by Maggy \n2:Player 1 Is About To Die \n3:Player 1 Is About To Pay Death Penalties"} 

 Player 2 21:46:06 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[]} 

 Player 2 21:46:06 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:46:06 $ACTION_MASSAGE_REMOVE:  
{"id":108} 

 Player 1 21:46:06 $ACTION_MASSAGE_REMOVE:  
{"id":106} 

 Player 1 21:46:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":109,"_text":"Resolve PlayerDeathPenalties 16 "}} 

 Player 1 21:46:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] Is Going To Be Killed by Maggy \n2:Player 1 Is About To Pay Death Penalties"} 

 Player 1 21:46:06 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":16,"creatorCardId":323,"playerToPayCardId":323,"stackEffectType":16}} 

 Player 1 21:46:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":110,"_text":"Player 1 pays Penalties"}} 

 Player 1 21:46:06 $SET_MONEY:  
{"playerId":1,"numOfCoins":2} 

 Player 1 21:46:06 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-1}],"result":null,"preventMethod":false,"methodScopeId":323,"scopeIsPlayer":true,"index":13,"originStackId":-1},"isAfterActivation":true,"index":13} 

 Player 2 21:46:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] Is Going To Be Killed by Maggy \n2:Player 1 Is About To Die"} 

 Player 1 21:46:10 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":24} 

 Player 1 21:46:10 $MOVE_CARD:  
{"moveIndex":10,"cardId":24,"placeID":330,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 21:46:11 $MOVE_CARD_END:  
{"moveIndex":10,"cardId":24,"flipIfFlipped":true,"playerId":1} 

 Player 1 21:46:11 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":24} 

 Player 1 21:46:11 $USE_ITEM:  
{"cardId":323} 

 Player 1 21:46:11 $USE_ITEM:  
{"cardId":324} 

 Player 1 21:46:11 $PLAYER_DIED:  
{"playerId":1} 

 Player 1 21:46:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] Is Going To Be Killed by Maggy \n2:Player 1 Paid Death Penalties"} 

 Player 1 21:46:11 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":16,"creatorCardId":323,"playerToPayCardId":323,"stackEffectType":16}} 

 Player 1 21:46:11 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":16} 

 Player 1 21:46:11 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 21:46:11 $SHOW_STACK_EFFECT:  
{"effectId":16} 

 Player 2 21:46:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] Is Going To Be Killed by Maggy \n2:Player 1 Is About To Die"} 

 Player 1 21:46:14 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":16} 

 Player 1 21:46:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":111,"_text":"Remove After Resolve PlayerDeathPenalties 16  "}} 

 Player 1 21:46:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] Is Going To Be Killed by Maggy"} 

 Player 1 21:46:14 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":16,"creatorCardId":323,"playerToPayCardId":323,"stackEffectType":16}} 

 Player 1 21:46:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":112,"_text":"Response Remove After Resolve PlayerDeathPenalties 16"},"childOfId":111} 

 Player 1 21:46:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":113,"_text":"Wait For Response From Player 2 "},"childOfId":111} 

 Player 1 21:46:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:46:14 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:46:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] Is Going To Be Killed by Maggy \n2:Player 1 Is About To Pay Death Penalties"} 

 Player 2 21:46:14 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[]} 

 Player 2 21:46:14 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:46:14 $ACTION_MASSAGE_REMOVE:  
{"id":113} 

 Player 1 21:46:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":114,"_text":"Wait For Response From Player 1 "},"childOfId":111} 

 Player 1 21:46:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:46:14 $ACTION_MASSAGE_REMOVE:  
{"id":114} 

 Player 1 21:46:14 $ACTION_MASSAGE_REMOVE:  
{"id":112} 

 Player 1 21:46:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":115,"_text":"Resolve MonsterDeath 13 "}} 

 Player 1 21:46:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] Is Going To Be Killed by Maggy"} 

 Player 1 21:46:14 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":13,"creatorCardId":323,"monsterToDieCardId":281,"stackEffectType":5,"killerId":323}} 

 Player 1 21:46:14 $NEXT_STACK_ID:  

 Player 1 21:46:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:46:14 $CLEAR_SE_VIS:  

 Player 1 21:46:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Get Isaac!<Monster>'s Reward \n2:[object Object] Is Going To Be Killed by Maggy"} 

 Player 1 21:46:14 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":17,"creatorCardId":323,"monsterCardWithRewardId":281,"playerCardIdToReward":323,"stackEffectType":7}} 

 Player 1 21:46:14 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":13,"creatorCardId":323,"monsterToDieCardId":281,"stackEffectType":5,"killerId":323}} 

 Player 1 21:46:14 $REPLACE_STACK:  
{"currentStack":[{"entityId":17,"creatorCardId":323,"monsterCardWithRewardId":281,"playerCardIdToReward":323,"stackEffectType":7},{"entityId":13,"creatorCardId":323,"monsterToDieCardId":281,"stackEffectType":5,"killerId":323}]} 

 Player 1 21:46:14 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 21:46:14 $SHOW_STACK_EFFECT:  
{"effectId":17} 

 Player 2 21:46:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] Is Going To Be Killed by Maggy"} 

 Player 1 21:46:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Get Isaac!<Monster>'s Reward \n2:[object Object] Is Going To Be Killed by Maggy"} 

 Player 1 21:46:17 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":13,"creatorCardId":323,"monsterToDieCardId":281,"stackEffectType":5,"killerId":323}} 

 Player 1 21:46:17 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":13} 

 Player 1 21:46:17 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 21:46:17 $SHOW_STACK_EFFECT:  
{"effectId":13} 

 Player 1 21:46:20 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":13} 

 Player 1 21:46:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":116,"_text":"Remove After Resolve MonsterDeath 13  "}} 

 Player 1 21:46:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Get Isaac!<Monster>'s Reward"} 

 Player 1 21:46:20 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":13,"creatorCardId":323,"monsterToDieCardId":281,"stackEffectType":5,"killerId":323}} 

 Player 1 21:46:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":117,"_text":"Response Remove After Resolve MonsterDeath 13"},"childOfId":116} 

 Player 1 21:46:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":118,"_text":"Wait For Response From Player 1 "},"childOfId":116} 

 Player 1 21:46:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:46:20 $ACTION_MASSAGE_REMOVE:  
{"id":118} 

 Player 1 21:46:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":119,"_text":"Wait For Response From Player 2 "},"childOfId":116} 

 Player 1 21:46:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:46:20 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:46:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Get Isaac!<Monster>'s Reward \n2:[object Object] Is Going To Be Killed by Maggy"} 

 Player 2 21:46:20 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[]} 

 Player 2 21:46:20 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:46:20 $ACTION_MASSAGE_REMOVE:  
{"id":119} 

 Player 1 21:46:20 $ACTION_MASSAGE_REMOVE:  
{"id":117} 

 Player 1 21:46:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":120,"_text":"Resolve MonsterRewardStackEffect 17 "}} 

 Player 1 21:46:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Get Isaac!<Monster>'s Reward"} 

 Player 1 21:46:21 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":17,"creatorCardId":323,"monsterCardWithRewardId":281,"playerCardIdToReward":323,"stackEffectType":7}} 

 Player 1 21:46:21 $DRAW_CARD:  
{"deckType":5} 

 Player 1 21:46:21 $REGISTER_PASSIVE_ITEM:  
{"cardId":150} 

 Player 1 21:46:21 $MOVE_CARD:  
{"moveIndex":11,"cardId":150,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 

 Player 2 21:46:21 $MOVE_CARD_END:  
{"moveIndex":11,"cardId":150,"flipIfFlipped":true,"playerId":1} 

 Player 1 21:46:21 $ADD_AN_ITEM:  
{"playerId":1,"cardId":150,"isReward":true} 

 Player 1 21:46:21 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":150}],"result":true,"preventMethod":false,"methodScopeId":323,"scopeIsPlayer":true,"index":14,"originStackId":-1},"isAfterActivation":true,"index":14} 

 Player 1 21:46:21 $NEXT_STACK_ID:  

 Player 1 21:46:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Get Isaac!<Monster>'s Reward \n2:Activate Champion Belt Effect AddAttackOpportunity<AddAttackOpportunity>"} 

 Player 1 21:46:21 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":18,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":150,"effectToDo":{"effectName":"AddAttackOpportunity","cardEffectNum":1,"cardPlayerId":1,"cardId":150,"effctType":0},"isAfterActivation":true,"index":14,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 21:46:21 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":18,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":150,"effectToDo":{"effectName":"AddAttackOpportunity","cardEffectNum":1,"cardPlayerId":1,"cardId":150,"effctType":0},"isAfterActivation":true,"index":14,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 21:46:21 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 21:46:21 $SHOW_STACK_EFFECT:  
{"effectId":18} 

 Player 2 21:46:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Get Isaac!<Monster>'s Reward"} 

 Player 2 21:46:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Get Isaac!<Monster>'s Reward \n2:Activate Champion Belt "} 

 Player 1 21:46:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":121,"_text":"Add ActivatePassiveEffect 18 "}} 

 Player 1 21:46:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Get Isaac!<Monster>'s Reward \n2:Activate Champion Belt effect AddAttackOpportunity<AddAttackOpportunity>"} 

 Player 1 21:46:24 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[323],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":323,"effectCardPlayer":323},"entityId":18,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":150,"effectToDo":{"effectName":"AddAttackOpportunity","cardEffectNum":1,"cardPlayerId":1,"cardId":150,"effctType":0},"isAfterActivation":true,"index":14,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 21:46:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":122,"_text":"Response Adding ActivatePassiveEffect 18"},"childOfId":121} 

 Player 1 21:46:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":123,"_text":"Wait For Response From Player 2 "},"childOfId":121} 

 Player 1 21:46:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:46:24 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:46:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Get Isaac!<Monster>'s Reward \n2:Activate Champion Belt "} 

 Player 2 21:46:24 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[]} 

 Player 2 21:46:24 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:46:24 $ACTION_MASSAGE_REMOVE:  
{"id":123} 

 Player 1 21:46:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":124,"_text":"Wait For Response From Player 1 "},"childOfId":121} 

 Player 1 21:46:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:46:25 $ACTION_MASSAGE_REMOVE:  
{"id":124} 

 Player 1 21:46:25 $ACTION_MASSAGE_REMOVE:  
{"id":122} 

 Player 1 21:46:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":125,"_text":"Resolve ActivatePassiveEffect 18 "}} 

 Player 1 21:46:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Get Isaac!<Monster>'s Reward \n2:Activate Champion Belt effect AddAttackOpportunity<AddAttackOpportunity>"} 

 Player 1 21:46:25 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[323],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":323,"effectCardPlayer":323},"entityId":18,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":150,"effectToDo":{"effectName":"AddAttackOpportunity","cardEffectNum":1,"cardPlayerId":1,"cardId":150,"effctType":0},"isAfterActivation":true,"index":14,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 21:46:25 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":150,"particleType":6} 

 Player 2 21:46:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Get Isaac!<Monster>'s Reward \n2:Activate Champion Belt "} 

 Player 1 21:46:26 $DISABLE_PARTICLE_EFFECT:  
{"cardId":150,"particleType":6} 

 Player 1 21:46:26 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":150}],"result":true,"preventMethod":false,"methodScopeId":323,"scopeIsPlayer":true,"index":14,"originStackId":-1},"isAfterActivation":true,"index":14} 

 Player 1 21:46:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Get Isaac!<Monster>'s Reward \n2:Activated Champion Belt Effect"} 

 Player 1 21:46:27 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[323],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":323,"effectCardPlayer":323},"entityId":18,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":150,"isAfterActivation":true,"index":14,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 21:46:27 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":18} 

 Player 1 21:46:27 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 21:46:27 $SHOW_STACK_EFFECT:  
{"effectId":18} 

 Player 2 21:46:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Get Isaac!<Monster>'s Reward \n2:Activate Champion Belt "} 

 Player 1 21:46:29 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":18} 

 Player 1 21:46:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":126,"_text":"Remove After Resolve ActivatePassiveEffect 18  "}} 

 Player 1 21:46:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Get Isaac!<Monster>'s Reward"} 

 Player 1 21:46:30 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[323],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":323,"effectCardPlayer":323},"entityId":18,"creatorCardId":323,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":150,"isAfterActivation":true,"index":14,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 21:46:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":127,"_text":"Response Remove After Resolve ActivatePassiveEffect 18"},"childOfId":126} 

 Player 1 21:46:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":128,"_text":"Wait For Response From Player 1 "},"childOfId":126} 

 Player 1 21:46:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:46:30 $ACTION_MASSAGE_REMOVE:  
{"id":128} 

 Player 1 21:46:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":129,"_text":"Wait For Response From Player 2 "},"childOfId":126} 

 Player 1 21:46:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:46:30 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:46:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Get Isaac!<Monster>'s Reward \n2:Activate Champion Belt "} 

 Player 2 21:46:30 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[]} 

 Player 2 21:46:30 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:46:30 $ACTION_MASSAGE_REMOVE:  
{"id":129} 

 Player 1 21:46:30 $ACTION_MASSAGE_REMOVE:  
{"id":127} 

 Player 1 21:46:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":130,"_text":"Resolve MonsterRewardStackEffect 17 "}} 

 Player 1 21:46:30 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":15,"originStackId":17},"isAfterActivation":true,"index":15} 

 Player 1 21:46:30 $LOG_ERROR:  
"error while resolving stack effect 17" 
//////Error From Player 1////
  

 Player 1 21:46:30 $LOG_ERROR:  
//////Error From Player 1////
 [object Object]
////// 

 Player 1 21:46:30 $SHOW_ANNOUNCEMENT:  
{"text":"error while resolving stack effect 17"} 

 Player 1 21:46:30 $LOG_ERROR:  
{"message":"\"Cannot read property '_playerId' of null\"","stack":"\"TypeError: Cannot read property '_playerId' of null\\n    at Function.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:230:32), <anonymous>:731:92)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\\n    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113284:71\\n    at new Promise (<anonymous>)\\n    at 486.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113264:14)\\n    at Function.CardManager.moveCardTo (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:230:32), <anonymous>:693:16)\\n    at Player.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:230:32), <anonymous>:1312:68)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\""} 
//////Error From Player 1////
  

 Player 1 21:46:30 $LOG_ERROR:  
//////Error From Player 1////

 "\"Cannot read property '_playerId' of null\""

 + "\"TypeError: Cannot read property '_playerId' of null\
    at Function.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:230:32), <anonymous>:731:92)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113284:71\
    at new Promise (<anonymous>)\
    at 486.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113264:14)\
    at Function.CardManager.moveCardTo (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:230:32), <anonymous>:693:16)\
    at Player.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:230:32), <anonymous>:1312:68)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\""

////// 
//////Error From Player 1////

 "\"Cannot read property '_playerId' of null\""

 + "\"TypeError: Cannot read property '_playerId' of null\
    at Function.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:230:32), <anonymous>:731:92)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113284:71\
    at new Promise (<anonymous>)\
    at 486.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113264:14)\
    at Function.CardManager.moveCardTo (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:230:32), <anonymous>:693:16)\
    at Player.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:230:32), <anonymous>:1312:68)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\""

////// 

 Player 1 21:46:30 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":17} 

 Player 1 21:46:30 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 21:46:31 $SHOW_STACK_EFFECT:  
{"effectId":17} 

 Player 1 21:46:33 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":17} 

 Player 1 21:46:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":131,"_text":"Remove After Resolve MonsterRewardStackEffect 17  "}} 

 Player 1 21:46:33 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:46:33 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":17,"creatorCardId":323,"monsterCardWithRewardId":281,"playerCardIdToReward":323,"stackEffectType":7}} 

 Player 1 21:46:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":132,"_text":"Response Remove After Resolve MonsterRewardStackEffect 17"},"childOfId":131} 

 Player 1 21:46:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":133,"_text":"Wait For Response From Player 2 "},"childOfId":131} 

 Player 1 21:46:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:46:33 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:46:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Get Isaac!<Monster>'s Reward"} 

 Player 2 21:46:34 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[]} 

 Player 2 21:46:34 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:46:34 $ACTION_MASSAGE_REMOVE:  
{"id":133} 

 Player 1 21:46:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":134,"_text":"Wait For Response From Player 1 "},"childOfId":131} 

 Player 1 21:46:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:46:34 $ACTION_MASSAGE_REMOVE:  
{"id":134} 

 Player 1 21:46:34 $ACTION_MASSAGE_REMOVE:  
{"id":132} 

 Player 1 21:46:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":135,"_text":"Stack Was Emptied "}} 

 Player 1 21:46:34 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:46:34 $CLEAR_SE_VIS:  

 Player 1 21:46:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:46:34 $CLEAR_SE_VIS:  

 Player 1 21:46:34 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 1 21:46:35 $CLEAR_SE_VIS:  

 Player 1 21:46:35 $END_TURN:  

 Player 1 21:46:35 $SET_TURN:  
{"playerId":2} 

 Player 1 21:46:35 $START_TURN:  
{"playerId":2} 

 Player 1 21:46:35 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":5},{"type":2,"number":3},{"type":0,"number":323},{"type":0,"number":281}],"result":null,"preventMethod":false,"methodScopeId":323,"scopeIsPlayer":true,"index":16,"originStackId":12},"isAfterActivation":true,"index":16} 

 Player 1 21:46:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":136,"_text":"Stack Was Emptied "}} 

 Player 1 21:46:35 $TURN_PLAYER_DO_STACK_EFFECT:  
{"playerId":2} 

 Player 1 21:46:35 $STACK_EMPTIED:  
{"playerId":2} 

 Player 2 21:46:35 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 21:46:35 $RECHARGE_ITEM:  
{"cardId":327} 

 Player 2 21:46:35 $PLAYER_RECHARGE_ITEM:  
{"playerId":2,"cardId":327} 

 Player 2 21:46:35 $RECHARGE_ITEM:  
{"cardId":328} 

 Player 2 21:46:35 $PLAYER_RECHARGE_ITEM:  
{"playerId":2,"cardId":328} 

 Player 2 21:46:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:46:35 $NEXT_STACK_ID:  

 Player 2 21:46:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 

 Player 2 21:46:36 $ADD_TO_STACK:  
{"stackEffect":{"entityId":19,"creatorCardId":327,"turnPlayerCardId":327,"stackEffectType":13}} 

 Player 2 21:46:36 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":19,"creatorCardId":327,"turnPlayerCardId":327,"stackEffectType":13}} 

 Player 2 21:46:36 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 21:46:36 $SHOW_STACK_EFFECT:  
{"effectId":19} 

 Player 2 21:46:36 $CLEAR_SE_VIS:  

 Player 1 21:46:36 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 21:46:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:46:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 

 Player 2 21:46:36 $CLEAR_SE_VIS:  

 Player 2 21:46:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":137,"_text":"Add StartTurnLoot 19 "}} 

 Player 2 21:46:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:46:38 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":19,"creatorCardId":327,"turnPlayerCardId":327,"stackEffectType":13}} 

 Player 2 21:46:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":138,"_text":"Response Adding StartTurnLoot 19"},"childOfId":137} 

 Player 2 21:46:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":139,"_text":"Wait For Response From Player 2 "},"childOfId":137} 

 Player 2 21:46:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:46:38 $ACTION_MASSAGE_REMOVE:  
{"id":139} 

 Player 2 21:46:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":140,"_text":"Wait For Response From Player 1 "},"childOfId":137} 

 Player 2 21:46:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:46:38 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:46:38 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[]} 

 Player 1 21:46:38 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:46:38 $ACTION_MASSAGE_REMOVE:  
{"id":140} 

 Player 2 21:46:38 $ACTION_MASSAGE_REMOVE:  
{"id":138} 

 Player 2 21:46:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":141,"_text":"Resolve StartTurnLoot 19 "}} 

 Player 2 21:46:38 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":19,"creatorCardId":327,"turnPlayerCardId":327,"stackEffectType":13}} 

 Player 2 21:46:38 $DRAW_CARD:  
{"deckType":1} 

 Player 2 21:46:38 $MOVE_CARD:  
{"moveIndex":12,"cardId":80,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 21:46:39 $MOVE_CARD_END:  
{"moveIndex":12,"cardId":80,"flipIfFlipped":false,"playerId":2} 

 Player 2 21:46:39 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":80} 

 Player 2 21:46:39 $FLIP_CARD:  
{"cardId":80} 

 Player 2 21:46:39 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":80} 

 Player 2 21:46:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Has Drawen Loot For Start Turn"} 

 Player 2 21:46:39 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":19,"creatorCardId":327,"turnPlayerCardId":327,"stackEffectType":13}} 

 Player 2 21:46:39 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":19} 

 Player 2 21:46:39 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 21:46:39 $SHOW_STACK_EFFECT:  
{"effectId":19} 

 Player 1 21:46:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 

 Player 2 21:46:42 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":19} 

 Player 2 21:46:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":142,"_text":"Remove After Resolve StartTurnLoot 19  "}} 

 Player 2 21:46:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 21:46:42 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":19,"creatorCardId":327,"turnPlayerCardId":327,"stackEffectType":13}} 

 Player 2 21:46:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":143,"_text":"Response Remove After Resolve StartTurnLoot 19"},"childOfId":142} 

 Player 2 21:46:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":144,"_text":"Wait For Response From Player 1 "},"childOfId":142} 

 Player 2 21:46:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:46:42 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:46:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 

 Player 1 21:46:42 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[]} 

 Player 1 21:46:42 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:46:42 $ACTION_MASSAGE_REMOVE:  
{"id":144} 

 Player 2 21:46:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":145,"_text":"Wait For Response From Player 2 "},"childOfId":142} 

 Player 2 21:46:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:46:42 $ACTION_MASSAGE_REMOVE:  
{"id":145} 

 Player 2 21:46:42 $ACTION_MASSAGE_REMOVE:  
{"id":143} 

 Player 2 21:46:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":146,"_text":"Stack Was Emptied "}} 

 Player 2 21:46:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 21:46:42 $CLEAR_SE_VIS:  

 Player 2 21:49:33 $MATCH: 