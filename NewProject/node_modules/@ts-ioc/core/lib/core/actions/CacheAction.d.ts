import { ActionData } from '../ActionData';
import { ClassMetadata } from '../metadatas';
import { ActionComposite } from './ActionComposite';
import { IContainer } from '../../IContainer';
/**
 * cache action data.
 *
 * @export
 * @interface CacheActionData
 * @extends {ActionData<ClassMetadata>}
 */
export interface CacheActionData extends ActionData<ClassMetadata> {
}
/**
 * cache action. To cache instance of Token. define cache expires in decorator.
 *
 * @export
 * @class CacheAction
 * @extends {ActionComposite}
 */
export declare class CacheAction extends ActionComposite {
    constructor();
    protected working(container: IContainer, data: CacheActionData): CacheActionData;
    getCacheMetadata(container: IContainer, data: CacheActionData): ClassMetadata;
    static getClassAnnations(): any;
}
