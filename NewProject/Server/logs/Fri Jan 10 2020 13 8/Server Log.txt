Start Log 

 Player 1 13:08:37 $MATCH:  

 Player 1 13:08:40 $START_GAME:  

 Player 2 13:08:40 $MOVE_TO_TABLE:  

 Player 1 13:08:40 $MOVE_TO_TABLE:  

 Player 2 13:08:48 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 1 13:08:48 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 13:08:48 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":267,"itemCardId":268} 

 Player 2 13:08:48 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":276}],"result":true,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 13:08:48 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":275,"itemCardId":276} 

 Player 2 13:08:48 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[67,99,60,132,33,64,23,77,28,98,21,27,8,31,32,22,122,39,87,73,130,136,117,18,95,91,17,15,105,74,106,139,97,141,55,84,124,121,100,104,129,127,20,119,54,94,62,50,85,123,82,76,53,13,58,90,52,109,111,61,138,115,101,49,110,107,81,80,56,10,120,96,46,47,48,12,134,78,113,30,35,86,36,66,26,25,116,14,140,133,57,79,44,16,88,41,68,38,7,9,45,75,135,114,131,51,108,112,103,72,63,142,37,11,118,19,69,92,128,42,89,70,29,93,34,126,143,65,24,43,125,40,71,137,102,83,59]} 

 Player 2 13:08:48 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[220,211,233,206,254,241,226,250,214,216,209,243,210,234,257,242,249,217,252,207,248,228,239,218,238,232,231,244,245,256,221,205,212,251,255,230,224,236,219,258,225,235,240,247,222,213,229,227,246,215,237,253,223,208]} 

 Player 2 13:08:48 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[179,150,164,184,188,152,170,156,149,197,171,194,177,200,148,159,160,181,193,183,167,166,182,176,192,161,168,180,147,195,187,146,154,201,196,162,189,163,178,157,198,153,172,173,155,158,202,169,185,175,186,190,151,191,165,174,199]} 

 Player 2 13:08:48 $DRAW_CARD:  
{"deckType":5} 

 Player 2 13:08:48 $FLIP_CARD:  
{"cardId":199} 

 Player 2 13:08:48 $ADD_STORE_CARD:  
{"cardId":199} 

 Player 2 13:08:48 $DRAW_CARD:  
{"deckType":5} 

 Player 2 13:08:48 $FLIP_CARD:  
{"cardId":174} 

 Player 2 13:08:48 $ADD_STORE_CARD:  
{"cardId":174} 

 Player 2 13:08:49 $DRAW_CARD:  
{"deckType":2} 

 Player 2 13:08:49 $FLIP_CARD:  
{"cardId":208} 

 Player 2 13:08:49 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":208} 

 Player 2 13:08:49 $NEW_MONSTER_ON_PLACE:  
{"cardId":208,"monsterPlaceId":1} 

 Player 2 13:08:49 $DRAW_CARD:  
{"deckType":2} 

 Player 2 13:08:49 $FLIP_CARD:  
{"cardId":223} 

 Player 2 13:08:49 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":223} 

 Player 2 13:08:49 $NEW_MONSTER_ON_PLACE:  
{"cardId":223,"monsterPlaceId":2} 

 Player 2 13:08:49 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 13:08:49 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":267,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 13:08:49 $DRAW_CARD:  
{"deckType":1} 

 Player 2 13:08:49 $MOVE_CARD:  
{"moveIndex":1,"cardId":59,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 13:08:49 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":268}],"result":true,"preventMethod":false,"methodScopeId":267,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 13:08:49 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":59,"flipIfFlipped":false,"playerId":2} 

 Player 2 13:08:49 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":59} 

 Player 2 13:08:49 $FLIP_CARD:  
{"cardId":59} 

 Player 2 13:08:49 $FLIP_CARD:  
{"cardId":59} 

 Player 2 13:08:49 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":59} 

 Player 2 13:08:49 $DRAW_CARD:  
{"deckType":1} 

 Player 2 13:08:49 $MOVE_CARD:  
{"moveIndex":2,"cardId":83,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 13:08:50 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":83,"flipIfFlipped":false,"playerId":2} 

 Player 2 13:08:50 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":83} 

 Player 2 13:08:50 $FLIP_CARD:  
{"cardId":83} 

 Player 2 13:08:50 $FLIP_CARD:  
{"cardId":83} 

 Player 2 13:08:50 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":83} 

 Player 2 13:08:50 $DRAW_CARD:  
{"deckType":1} 

 Player 2 13:08:50 $MOVE_CARD:  
{"moveIndex":3,"cardId":102,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 13:08:50 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":102,"flipIfFlipped":false,"playerId":2} 

 Player 2 13:08:50 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":102} 

 Player 2 13:08:50 $FLIP_CARD:  
{"cardId":102} 

 Player 2 13:08:50 $FLIP_CARD:  
{"cardId":102} 

 Player 2 13:08:50 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":102} 

 Player 2 13:08:50 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 13:08:50 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 13:08:50 $DRAW_CARD:  
{"deckType":1} 

 Player 2 13:08:50 $MOVE_CARD:  
{"moveIndex":4,"cardId":137,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 13:08:51 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":137,"flipIfFlipped":false,"playerId":2} 

 Player 2 13:08:51 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":137} 

 Player 2 13:08:51 $FLIP_CARD:  
{"cardId":137} 

 Player 2 13:08:51 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":137} 

 Player 2 13:08:51 $DRAW_CARD:  
{"deckType":1} 

 Player 2 13:08:51 $MOVE_CARD:  
{"moveIndex":5,"cardId":71,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 13:08:51 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":71,"flipIfFlipped":false,"playerId":2} 

 Player 2 13:08:51 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":71} 

 Player 2 13:08:51 $FLIP_CARD:  
{"cardId":71} 

 Player 2 13:08:51 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":71} 

 Player 2 13:08:51 $DRAW_CARD:  
{"deckType":1} 

 Player 2 13:08:51 $MOVE_CARD:  
{"moveIndex":6,"cardId":40,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 13:08:52 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":40,"flipIfFlipped":false,"playerId":2} 

 Player 2 13:08:52 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":40} 

 Player 2 13:08:52 $FLIP_CARD:  
{"cardId":40} 

 Player 2 13:08:52 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":40} 

 Player 2 13:08:52 $GAME_HAS_STARTED:  

 Player 2 13:08:52 $SET_TURN:  
{"playerId":1} 

 Player 2 13:08:52 $START_TURN:  
{"playerId":1} 

 Player 2 13:08:52 $UPDATE_ACTIONS:  

 Player 1 13:08:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 13:08:52 $NEXT_STACK_ID:  

 Player 1 13:08:52 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 13:08:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 13:08:52 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":267,"turnPlayerCardId":267,"stackEffectType":13}} 

 Player 1 13:08:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 13:08:52 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":267,"turnPlayerCardId":267,"stackEffectType":13}} 

 Player 1 13:08:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 1 13:08:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 13:08:52 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 13:08:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 13:08:52 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":267,"turnPlayerCardId":267,"stackEffectType":13}} 

 Player 1 13:08:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 1 13:08:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 1 13:08:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 13:08:52 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 13:08:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 1 13:08:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 13:08:52 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 13:08:52 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 13:08:52 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 13:08:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 13:08:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 13:08:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 13:08:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 13:08:53 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 13:08:53 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 13:08:53 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 13:08:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 1 13:08:53 $DRAW_CARD:  
{"deckType":1} 

 Player 1 13:08:53 $MOVE_CARD:  
{"moveIndex":7,"cardId":125,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 13:08:53 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":125,"flipIfFlipped":false,"playerId":1} 

 Player 1 13:08:53 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":125} 

 Player 1 13:08:53 $FLIP_CARD:  
{"cardId":125} 

 Player 1 13:08:53 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":125} 

 Player 1 13:08:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 13:08:53 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":267,"turnPlayerCardId":267,"stackEffectType":13}} 

 Player 1 13:08:53 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 13:08:53 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 13:08:53 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":267,"turnPlayerCardId":267,"stackEffectType":13}} 

 Player 1 13:08:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 1 13:08:53 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 13:08:53 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":267,"turnPlayerCardId":267,"stackEffectType":13}} 

 Player 1 13:08:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 1 13:08:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 1 13:08:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 13:08:53 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 13:08:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 13:08:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 13:08:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 13:08:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 13:08:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 13:08:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 13:08:54 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 13:08:54 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 1 13:08:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 1 13:08:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 13:08:54 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 1 13:08:54 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 1 13:08:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 1 13:08:54 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 13:08:54 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 13:08:54 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 13:08:54 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 13:08:54 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 13:08:54 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 13:08:54 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 13:08:54 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 13:08:55 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 13:08:56 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 13:09:09 $MOVE_CARD:  
{"moveIndex":8,"cardId":184,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 

 Player 1 13:09:09 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":184,"flipIfFlipped":true,"playerId":2} 

 Player 2 13:09:09 $REGISTER_PASSIVE_ITEM:  
{"cardId":184} 

 Player 2 13:09:09 $MOVE_CARD:  
{"moveIndex":9,"cardId":184,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 

 Player 1 13:09:10 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":184,"flipIfFlipped":true,"playerId":2} 

 Player 2 13:09:10 $ADD_AN_ITEM:  
{"playerId":2,"cardId":184,"isReward":true} 

 Player 2 13:09:10 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":184}],"result":true,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 2 13:09:10 $NEXT_STACK_ID:  

 Player 2 13:09:10 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 13:09:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 

 Player 2 13:09:10 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":2,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":184,"effectToDo":{"effectName":"AddPlayLootOpportunity","cardEffectNum":0,"cardPlayerId":2,"cardId":184,"effctType":0},"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 13:09:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 

 Player 2 13:09:10 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":2,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":184,"effectToDo":{"effectName":"AddPlayLootOpportunity","cardEffectNum":0,"cardPlayerId":2,"cardId":184,"effctType":0},"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 13:09:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add ActivatePassiveEffect 2 "}} 

 Player 2 13:09:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 

 Player 2 13:09:10 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 13:09:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 

 Player 2 13:09:10 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":2,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":184,"effectToDo":{"effectName":"AddPlayLootOpportunity","cardEffectNum":0,"cardPlayerId":2,"cardId":184,"effctType":0},"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 13:09:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding ActivatePassiveEffect 2"},"childOfId":10} 

 Player 2 13:09:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 2 13:09:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 13:09:10 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 13:09:10 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 13:09:10 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 13:09:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Polydactyly "} 

 Player 1 13:09:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Polydactyly "} 

 Player 1 13:09:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Polydactyly "} 

 Player 1 13:09:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Polydactyly "} 

 Player 1 13:09:10 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 13:09:11 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 2 13:09:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 2 13:09:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 13:09:11 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 2 13:09:11 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 2 13:09:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve ActivatePassiveEffect 2 "}} 

 Player 2 13:09:11 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":184,"particleType":6} 

 Player 2 13:09:13 $DISABLE_PARTICLE_EFFECT:  
{"cardId":184,"particleType":6} 

 Player 2 13:09:13 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":184}],"result":true,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 2 13:09:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 

 Player 2 13:09:13 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":2,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":184,"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 13:09:13 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 13:09:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 13:09:13 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":2,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":184,"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 13:09:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve ActivatePassiveEffect 2  "}} 

 Player 2 13:09:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 13:09:13 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":2,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":184,"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 13:09:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve ActivatePassiveEffect 2"},"childOfId":15} 

 Player 2 13:09:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 2 13:09:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 13:09:13 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 13:09:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 2 13:09:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 13:09:13 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 13:09:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Polydactyly "} 

 Player 1 13:09:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Polydactyly "} 

 Player 1 13:09:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Polydactyly "} 

 Player 1 13:09:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Polydactyly "} 

 Player 1 13:09:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Polydactyly "} 

 Player 1 13:09:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Polydactyly "} 

 Player 1 13:09:13 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 13:09:13 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 2 13:09:13 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 2 13:09:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 2 13:09:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 13:09:13 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 13:09:13 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 13:09:13 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 13:09:13 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 13:09:13 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 13:09:13 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 13:09:14 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 13:09:14 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 13:09:14 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 13:09:14 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 13:09:14 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 13:09:14 $TURN_PLAYER_DO_STACK_EFFECT:  
{"playerId":1} 

 Player 2 13:09:15 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 13:09:16 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 13:09:16 $MOVE_CARD:  
{"moveIndex":10,"cardId":131,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Hand"} 

 Player 2 13:09:16 $MOVE_CARD_END:  
{"moveIndex":10,"cardId":131,"flipIfFlipped":true,"playerId":1} 

 Player 1 13:09:16 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":131} 

 Player 1 13:09:23 $MOVE_CARD:  
{"moveIndex":11,"cardId":194,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Hand"} 

 Player 2 13:09:24 $MOVE_CARD_END:  
{"moveIndex":11,"cardId":194,"flipIfFlipped":true,"playerId":1} 

 Player 1 13:09:24 $MOVE_CARD:  
{"moveIndex":12,"cardId":194,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 

 Player 2 13:09:24 $MOVE_CARD_END:  
{"moveIndex":12,"cardId":194,"flipIfFlipped":true,"playerId":1} 

 Player 1 13:09:24 $ADD_AN_ITEM:  
{"playerId":1,"cardId":194,"isReward":true} 

 Player 1 13:09:24 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":194}],"result":true,"preventMethod":false,"methodScopeId":267,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 1 13:10:12 $NEXT_STACK_ID:  

 Player 1 13:10:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 13:10:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil "} 

 Player 1 13:10:12 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":267,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 13:10:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil "} 

 Player 1 13:10:12 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":267,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 13:10:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add PlayLootCardStackEffect 3 "}} 

 Player 1 13:10:12 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":131} 

 Player 1 13:10:12 $MOVE_CARD:  
{"moveIndex":13,"cardId":131,"placeID":277,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 13:10:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 13:10:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 13:10:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil "} 

 Player 2 13:10:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil "} 

 Player 2 13:10:13 $MOVE_CARD_END:  
{"moveIndex":13,"cardId":131,"flipIfFlipped":true,"playerId":1} 

 Player 1 13:10:13 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":131} 

 Player 1 13:10:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil: ChainEffects"} 

 Player 1 13:10:15 $SHOW_DECISION:  
{"startCardId":131,"endCardId":184} 

 Player 1 13:10:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 13:10:18 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 13:10:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil: ChainEffects"} 

 Player 1 13:10:18 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":267,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":1,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":131,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 13:10:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding PlayLootCardStackEffect 3"},"childOfId":20} 

 Player 1 13:10:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 1 13:10:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 13:10:18 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 1 13:10:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 1 13:10:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 13:10:18 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 13:10:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil "} 

 Player 2 13:10:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil "} 

 Player 2 13:10:18 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 13:10:18 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 1 13:10:18 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 1 13:10:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve PlayLootCardStackEffect 3 "}} 

 Player 1 13:10:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil: ChainEffects"} 

 Player 1 13:10:18 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":131,"particleType":6} 

 Player 1 13:10:20 $DISABLE_PARTICLE_EFFECT:  
{"cardId":131,"particleType":6} 

 Player 1 13:10:20 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_LOSE_ITEM","args":[{"type":0,"number":194}],"result":null,"preventMethod":false,"methodScopeId":267,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 1 13:10:20 $MOVE_CARD:  
{"moveIndex":14,"cardId":194,"placeID":280,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 13:10:20 $MOVE_CARD_END:  
{"moveIndex":14,"cardId":194,"flipIfFlipped":true,"playerId":1} 

 Player 1 13:10:20 $MOVE_CARD_TO_PILE:  
{"type":5,"cardId":194} 

 Player 1 13:10:20 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_LOSE_ITEM","args":[{"type":0,"number":184}],"result":null,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1} 

 Player 1 13:10:20 $NEXT_STACK_ID:  

 Player 1 13:10:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil: ChainEffects"} 

 Player 1 13:10:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil: ChainEffects \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 

 Player 1 13:10:20 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":184,"effectToDo":{"effectName":"AddPlayLootOpportunity","cardEffectNum":1,"cardPlayerId":2,"cardId":184,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 13:10:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil: ChainEffects \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 

 Player 1 13:10:21 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":184,"effectToDo":{"effectName":"AddPlayLootOpportunity","cardEffectNum":1,"cardPlayerId":2,"cardId":184,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 13:10:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Add ActivatePassiveEffect 4 "}} 

 Player 1 13:10:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil: ChainEffects \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 

 Player 1 13:10:21 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 13:10:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil: ChainEffects \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 

 Player 1 13:10:21 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":184,"effectToDo":{"effectName":"AddPlayLootOpportunity","cardEffectNum":1,"cardPlayerId":2,"cardId":184,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 13:10:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Response Adding ActivatePassiveEffect 4"},"childOfId":25} 

 Player 1 13:10:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Wait For Response From Player 2 "},"childOfId":25} 

 Player 1 13:10:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 13:10:21 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 13:10:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil "} 

 Player 2 13:10:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil "} 

 Player 2 13:10:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 13:10:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 13:10:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 13:10:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 13:10:21 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 13:10:21 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 1 13:10:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 1 "},"childOfId":25} 

 Player 1 13:10:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 13:10:21 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 1 13:10:21 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 1 13:10:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Resolve ActivatePassiveEffect 4 "}} 

 Player 1 13:10:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil: ChainEffects \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 

 Player 1 13:10:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil: ChainEffects \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 

 Player 1 13:10:21 $DO_STACK_EFFECT:  
{"originPlayerId":1,"playerId":2,"currentStack":[{"entityId":3,"creatorCardId":267,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":1,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":131,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"effectCollectedData":null,"entityId":4,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":184,"effectToDo":{"effectName":"AddPlayLootOpportunity","cardEffectNum":1,"cardPlayerId":2,"cardId":184,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}]} 

 Player 2 13:10:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 13:10:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 13:10:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 13:10:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 13:10:21 $LOG_ERROR:  
"error while resolving stack effect 4" 
//////Error From Player 2////
  

 Player 2 13:10:21 $LOG_ERROR:  
//////Error From Player 2////
 [object Object]
////// 

 Player 2 13:10:21 $LOG_ERROR:  
{"message":"\"Cannot read property 'node' of null\"","stack":"\"TypeError: Cannot read property 'node' of null\\n    at ActivatePassiveEffect.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/StackEffects/Activate%20Passive%20Effect.js:220:77)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\\n    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\\n    at new Promise (<anonymous>)\\n    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\\n    at ActivatePassiveEffect.resolve (http://localhost:7456/preview-scripts/assets/Script/StackEffects/Activate%20Passive%20Effect.js:175:16)\\n    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/Stack.js:117:58)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\""} 
//////Error From Player 2////
  

 Player 2 13:10:21 $LOG_ERROR:  
//////Error From Player 2////

 "\"Cannot read property 'node' of null\""

 + "\"TypeError: Cannot read property 'node' of null\
    at ActivatePassiveEffect.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/StackEffects/Activate%20Passive%20Effect.js:220:77)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\
    at new Promise (<anonymous>)\
    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\
    at ActivatePassiveEffect.resolve (http://localhost:7456/preview-scripts/assets/Script/StackEffects/Activate%20Passive%20Effect.js:175:16)\
    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/Stack.js:117:58)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\""

////// 
//////Error From Player 2////

 "\"Cannot read property 'node' of null\""

 + "\"TypeError: Cannot read property 'node' of null\
    at ActivatePassiveEffect.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/StackEffects/Activate%20Passive%20Effect.js:220:77)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\
    at new Promise (<anonymous>)\
    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\
    at ActivatePassiveEffect.resolve (http://localhost:7456/preview-scripts/assets/Script/StackEffects/Activate%20Passive%20Effect.js:175:16)\
    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/Stack.js:117:58)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\""

////// 

 Player 2 13:10:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 13:10:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 13:10:22 $FINISH_DO_STACK_EFFECT:  
{"playerId":1,"newStack":[{"entityId":3,"creatorCardId":267,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":1,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":131,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"effectCollectedData":null,"entityId":4,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":184,"effectPassiveMeta":{"passiveEvent":"PLAYER_LOSE_ITEM","args":[{"type":0,"number":184}],"result":null,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":1},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}]} 

 Player 1 13:10:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil: ChainEffects \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 

 Player 1 13:10:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil: ChainEffects \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 

 Player 1 13:10:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil: ChainEffects \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 

 Player 1 13:10:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil: ChainEffects \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 

 Player 1 13:10:22 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 1 13:10:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 1 13:10:22 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":267,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":1,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":131,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 13:10:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 1 13:10:22 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":267,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":1,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":131,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 13:10:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 1 13:10:22 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":184,"effectPassiveMeta":{"passiveEvent":"PLAYER_LOSE_ITEM","args":[{"type":0,"number":184}],"result":null,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":null},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 13:10:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 1 13:10:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 1 13:10:22 $REPLACE_STACK:  
{"currentStack":[{"entityId":3,"creatorCardId":267,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":1,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":131,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"effectCollectedData":null,"entityId":4,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":184,"effectPassiveMeta":{"passiveEvent":"PLAYER_LOSE_ITEM","args":[{"type":0,"number":184}],"result":null,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":null},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}]} 

 Player 1 13:10:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil "} 

 Player 1 13:10:22 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":184,"effectPassiveMeta":{"passiveEvent":"PLAYER_LOSE_ITEM","args":[{"type":0,"number":184}],"result":null,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":null},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 13:10:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Remove After Resolve ActivatePassiveEffect 4  "}} 

 Player 1 13:10:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil "} 

 Player 1 13:10:22 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":184,"effectPassiveMeta":{"passiveEvent":"PLAYER_LOSE_ITEM","args":[{"type":0,"number":184}],"result":null,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":null},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 13:10:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Response Remove After Resolve ActivatePassiveEffect 4"},"childOfId":30} 

 Player 1 13:10:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Wait For Response From Player 1 "},"childOfId":30} 

 Player 1 13:10:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 13:10:22 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 1 13:10:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 2 "},"childOfId":30} 

 Player 1 13:10:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 13:10:22 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 13:10:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 13:10:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 13:10:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 13:10:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 13:10:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 13:10:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 13:10:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 13:10:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 13:10:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 13:10:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 13:10:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 13:10:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 13:10:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 13:10:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 13:10:23 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 13:10:23 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 1 13:10:23 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 1 13:10:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Resolve PlayLootCardStackEffect 3 "}} 

 Player 1 13:10:23 $REMOVE_FROM_PASSIVE_MANAGER:  
{"cardId":184} 

 Player 1 13:10:23 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_LOSE_ITEM","args":[{"type":0,"number":184}],"result":null,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 13:10:23 $MOVE_CARD:  
{"moveIndex":15,"cardId":184,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 

 Player 2 13:10:23 $MOVE_CARD_END:  
{"moveIndex":15,"cardId":184,"flipIfFlipped":true,"playerId":1} 

 Player 1 13:10:24 $ADD_AN_ITEM:  
{"playerId":1,"cardId":184,"isReward":true} 

 Player 1 13:10:24 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":184}],"result":true,"preventMethod":false,"methodScopeId":267,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 1 13:10:24 $REMOVE_FROM_PILE:  
{"cardId":131} 

 Player 1 13:10:24 $MOVE_CARD:  
{"moveIndex":16,"cardId":131,"placeID":278,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 13:10:24 $MOVE_CARD_END:  
{"moveIndex":16,"cardId":131,"flipIfFlipped":true,"playerId":1} 

 Player 1 13:10:24 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":131} 

 Player 1 13:10:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil "} 

 Player 1 13:10:24 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":267,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 13:10:24 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 13:10:24 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 13:10:24 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":267,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":1,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":131,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 13:10:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Remove After Resolve PlayLootCardStackEffect 3  "}} 

 Player 1 13:10:24 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 13:10:24 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":267,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":1,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":131,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 13:10:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Response Remove After Resolve PlayLootCardStackEffect 3"},"childOfId":35} 

 Player 1 13:10:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Wait For Response From Player 2 "},"childOfId":35} 

 Player 1 13:10:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 13:10:24 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 13:10:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil "} 

 Player 2 13:10:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil "} 

 Player 2 13:10:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil "} 

 Player 2 13:10:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil "} 

 Player 2 13:10:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil "} 

 Player 2 13:10:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil "} 

 Player 2 13:10:25 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 13:10:25 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 1 13:10:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 1 "},"childOfId":35} 

 Player 1 13:10:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 13:10:25 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 1 13:10:25 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 1 13:10:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Stack Was Emptied "}} 

 Player 1 13:10:25 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 13:10:25 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 13:10:25 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 13:10:25 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 13:10:25 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 13:10:25 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 13:10:25 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 13:10:25 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 13:10:25 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 13:10:25 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 13:10:25 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 13:10:25 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 13:10:25 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 13:10:25 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 13:10:25 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 13:10:25 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 1 13:10:25 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 13:10:25 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 1 13:10:25 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 1 13:10:25 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 1 13:10:25 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 13:10:26 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 1 13:10:27 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 1 13:20:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 13:20:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 13:20:50 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 13:20:50 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 13:20:50 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 13:20:50 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 13:20:50 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 13:20:50 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 13:20:50 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 13:20:50 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 13:20:50 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 13:20:50 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 13:20:50 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 13:20:50 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 13:20:50 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 13:20:50 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 13:20:50 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 1 13:20:50 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 13:20:50 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 1 13:20:51 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 1 13:20:51 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 1 13:20:51 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 1 13:20:51 $END_TURN:  

 Player 1 13:20:51 $SET_TURN:  
{"playerId":2} 

 Player 1 13:20:51 $START_TURN:  
{"playerId":2} 

 Player 2 13:20:51 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 13:20:51 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 13:20:51 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 13:20:51 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 13:20:51 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 13:20:51 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 13:20:51 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 13:20:51 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 13:20:51 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 13:20:51 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 13:20:51 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 13:20:51 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 13:20:51 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 13:20:51 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 13:20:51 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 13:20:51 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 13:20:51 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 13:20:51 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 13:20:51 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 13:20:51 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 13:20:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 13:20:51 $NEXT_STACK_ID:  

 Player 2 13:20:51 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 13:20:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 13:20:51 $ADD_TO_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":275,"turnPlayerCardId":275,"stackEffectType":13}} 

 Player 2 13:20:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 13:20:51 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":275,"turnPlayerCardId":275,"stackEffectType":13}} 

 Player 2 13:20:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Add StartTurnLoot 5 "}} 

 Player 2 13:20:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 13:20:51 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 13:20:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 13:20:52 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":275,"turnPlayerCardId":275,"stackEffectType":13}} 

 Player 2 13:20:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Response Adding StartTurnLoot 5"},"childOfId":40} 

 Player 2 13:20:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Wait For Response From Player 2 "},"childOfId":40} 

 Player 2 13:20:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 13:20:52 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 2 13:20:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 1 "},"childOfId":40} 

 Player 2 13:20:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 13:20:52 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 13:20:52 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 13:20:52 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 13:20:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 13:20:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 13:20:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 13:20:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 13:20:52 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 13:20:52 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 2 13:20:52 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 2 13:20:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Resolve StartTurnLoot 5 "}} 

 Player 2 13:20:52 $DRAW_CARD:  
{"deckType":1} 

 Player 2 13:20:52 $MOVE_CARD:  
{"moveIndex":17,"cardId":43,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 13:20:52 $MOVE_CARD_END:  
{"moveIndex":17,"cardId":43,"flipIfFlipped":false,"playerId":2} 

 Player 2 13:20:52 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":43} 

 Player 2 13:20:52 $FLIP_CARD:  
{"cardId":43} 

 Player 2 13:20:52 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":43} 

 Player 2 13:20:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 13:20:53 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":275,"turnPlayerCardId":275,"stackEffectType":13}} 

 Player 2 13:20:53 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 13:20:53 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 13:20:53 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":275,"turnPlayerCardId":275,"stackEffectType":13}} 

 Player 2 13:20:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Remove After Resolve StartTurnLoot 5  "}} 

 Player 2 13:20:53 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 13:20:53 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":275,"turnPlayerCardId":275,"stackEffectType":13}} 

 Player 2 13:20:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Response Remove After Resolve StartTurnLoot 5"},"childOfId":45} 

 Player 2 13:20:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Wait For Response From Player 1 "},"childOfId":45} 

 Player 2 13:20:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 13:20:53 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 13:20:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 13:20:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 13:20:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 13:20:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 13:20:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 13:20:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 13:20:53 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 13:20:53 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 2 13:20:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Wait For Response From Player 2 "},"childOfId":45} 

 Player 2 13:20:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 13:20:53 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 2 13:20:53 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 2 13:20:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Stack Was Emptied "}} 

 Player 2 13:20:53 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 13:20:53 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 13:20:53 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 13:20:53 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 13:20:53 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 13:20:53 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 13:20:53 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 13:20:53 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 13:20:54 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 13:20:54 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 13:20:54 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 13:20:54 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 13:20:54 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 13:20:54 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 13:20:54 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 13:20:54 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 13:20:54 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 13:20:54 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 13:20:54 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 13:20:54 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 13:20:54 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 13:20:54 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 13:20:54 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 2 13:20:54 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 2 13:20:55 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 2 13:20:55 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 2 13:21:02 $SHOW_DECISION:  
{"startCardId":275,"endCardId":223} 

 Player 2 13:21:05 $NEXT_STACK_ID:  

 Player 2 13:21:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 13:21:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fatty"} 

 Player 2 13:21:05 $ADD_TO_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":275,"attackingPlayerCardId":275,"idOfCardBeingAttacked":223,"stackEffectType":4}} 

 Player 2 13:21:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fatty"} 

 Player 2 13:21:05 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":275,"attackingPlayerCardId":275,"idOfCardBeingAttacked":223,"stackEffectType":4}} 

 Player 2 13:21:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Add DeclareAttack 6 "}} 

 Player 2 13:21:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 13:21:05 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 2 13:21:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fatty"} 

 Player 2 13:21:05 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":275,"attackingPlayerCardId":275,"idOfCardBeingAttacked":223,"stackEffectType":4}} 

 Player 2 13:21:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Response Adding DeclareAttack 6"},"childOfId":50} 

 Player 2 13:21:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Wait For Response From Player 2 "},"childOfId":50} 

 Player 2 13:21:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 13:21:05 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 2 13:21:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Wait For Response From Player 1 "},"childOfId":50} 

 Player 2 13:21:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 13:21:05 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 13:21:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 13:21:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 13:21:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fatty"} 

 Player 1 13:21:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fatty"} 

 Player 1 13:21:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fatty"} 

 Player 1 13:21:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fatty"} 

 Player 1 13:21:06 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 13:21:06 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 2 13:21:06 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 2 13:21:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Resolve DeclareAttack 6 "}} 

 Player 2 13:21:06 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":223,"particleType":5} 

 Player 2 13:21:06 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":5,"originStackId":6},"isAfterActivation":true,"index":5} 

 Player 2 13:21:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fatty"} 

 Player 2 13:21:06 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":275,"attackingPlayerCardId":275,"idOfCardBeingAttacked":223,"stackEffectType":4}} 

 Player 2 13:21:06 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 2 13:21:06 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 13:21:06 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":275,"attackingPlayerCardId":275,"idOfCardBeingAttacked":223,"stackEffectType":4}} 

 Player 2 13:21:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Remove After Resolve DeclareAttack 6  "}} 

 Player 2 13:21:06 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 13:21:06 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":275,"attackingPlayerCardId":275,"idOfCardBeingAttacked":223,"stackEffectType":4}} 

 Player 2 13:21:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":56,"_text":"Response Remove After Resolve DeclareAttack 6"},"childOfId":55} 

 Player 2 13:21:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":57,"_text":"Wait For Response From Player 1 "},"childOfId":55} 

 Player 2 13:21:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 13:21:06 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 13:21:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fatty"} 

 Player 1 13:21:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fatty"} 

 Player 1 13:21:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fatty"} 

 Player 1 13:21:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fatty"} 

 Player 1 13:21:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fatty"} 

 Player 1 13:21:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fatty"} 

 Player 1 13:21:06 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 13:21:06 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 2 13:21:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":58,"_text":"Wait For Response From Player 2 "},"childOfId":55} 

 Player 2 13:21:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 13:21:06 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 2 13:21:06 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 2 13:21:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":59,"_text":"Stack Was Emptied "}} 

 Player 2 13:21:06 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 13:21:06 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 13:21:06 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 13:21:06 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 13:21:07 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 13:21:07 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 13:21:07 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 13:21:07 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 13:21:07 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 13:21:07 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 13:21:07 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 13:21:07 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 13:21:07 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 13:21:07 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 13:21:07 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 13:21:07 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 13:21:07 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 13:21:07 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 13:21:07 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 13:21:07 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 13:21:07 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 13:21:07 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 13:21:07 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 2 13:21:07 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 2 13:21:07 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 2 13:21:07 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 2 13:21:07 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 2 13:21:07 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 2 13:21:08 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 2 13:21:09 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 2 13:21:18 $NEXT_STACK_ID:  

 Player 2 13:21:18 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 13:21:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fatty<Monster>"} 

 Player 2 13:21:18 $ADD_TO_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":275,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":223}} 

 Player 2 13:21:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fatty<Monster>"} 

 Player 2 13:21:18 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":275,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":223}} 

 Player 2 13:21:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":60,"_text":"Add AttackRoll 7 "}} 

 Player 2 13:21:18 $ROLL_DICE:  
{"playerId":2} 

 Player 1 13:21:18 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 13:21:18 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 13:21:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fatty<Monster>"} 

 Player 1 13:21:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fatty<Monster>"} 

 Player 2 13:21:20 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":1} 

 Player 2 13:21:20 $UPDATE_STACK_VIS:  
{"stackId":7,"text":"player rolled 1 vs Fatty<Monster>"} 

 Player 2 13:21:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Fatty<Monster>"} 

 Player 2 13:21:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 13:21:20 $ACTION_MASSAGE_REMOVE:  
{"id":60} 

 Player 2 13:21:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Fatty<Monster>"} 

 Player 2 13:21:20 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":275,"numberRolled":1,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":223}} 

 Player 2 13:21:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":61,"_text":"Response Adding AttackRoll 7"},"childOfId":60} 

 Player 2 13:21:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":62,"_text":"Wait For Response From Player 2 "},"childOfId":60} 

 Player 2 13:21:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 13:21:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fatty<Monster>"} 

 Player 1 13:21:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fatty<Monster>"} 

 Player 2 13:21:22 $SHOW_DECISION:  
{"startCardId":275,"endCardId":276} 

 Player 2 13:21:25 $NEXT_STACK_ID:  

 Player 2 13:21:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Fatty<Monster>"} 

 Player 2 13:21:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Fatty<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 13:21:25 $ADD_TO_STACK:  
{"stackEffect":{"entityId":8,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 13:21:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Fatty<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 13:21:25 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 13:21:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":63,"_text":"Add ActivateItem 8 "}} 

 Player 1 13:21:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fatty<Monster>"} 

 Player 1 13:21:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fatty<Monster>"} 

 Player 1 13:21:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fatty<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 1 13:21:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fatty<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 13:21:28 $SHOW_DECISION:  
{"startCardId":276,"endCardId":275} 

 Player 2 13:21:31 $USE_ITEM:  
{"cardId":276} 

 Player 2 13:21:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 13:21:31 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 2 13:21:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Fatty<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 13:21:31 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 13:21:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":64,"_text":"Response Adding ActivateItem 8"},"childOfId":63} 

 Player 2 13:21:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":65,"_text":"Wait For Response From Player 2 "},"childOfId":63} 

 Player 2 13:21:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 13:21:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fatty<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 1 13:21:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fatty<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 13:21:34 $ACTION_MASSAGE_REMOVE:  
{"id":65} 

 Player 2 13:21:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":66,"_text":"Wait For Response From Player 1 "},"childOfId":63} 

 Player 2 13:21:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 13:21:34 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 13:21:34 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 13:21:34 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 2 13:21:35 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 2 13:21:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":67,"_text":"Resolve ActivateItem 8 "}} 

 Player 2 13:21:35 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":276,"particleType":6} 

 Player 2 13:21:36 $DISABLE_PARTICLE_EFFECT:  
{"cardId":276,"particleType":6} 

 Player 2 13:21:37 $REGISTER_ONE_TURN_PASSIVE_EFFECT:  
{"cardId":276,"effectIndex":{"type":3,"index":0},"conditionData":[{"effectTargets":[275],"chainEffectsData":[],"methodArgs":[],"isPassive":false,"effectCard":276,"effectCardOwner":275,"effectCardPlayer":275}]} 

 Player 2 13:21:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Fatty<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 2 13:21:37 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 13:21:37 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 2 13:21:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Fatty<Monster>"} 

 Player 2 13:21:37 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 13:21:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":68,"_text":"Remove After Resolve ActivateItem 8  "}} 

 Player 2 13:21:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Fatty<Monster>"} 

 Player 2 13:21:37 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":8,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 13:21:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":69,"_text":"Response Remove After Resolve ActivateItem 8"},"childOfId":68} 

 Player 2 13:21:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":70,"_text":"Wait For Response From Player 1 "},"childOfId":68} 

 Player 2 13:21:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 13:21:37 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 13:21:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fatty<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 1 13:21:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fatty<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 1 13:21:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fatty<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 1 13:21:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fatty<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 1 13:21:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fatty<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 1 13:21:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fatty<Monster> \n2:Player 2 activated HolyMantle"} 

 Player 1 13:21:37 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 13:21:37 $ACTION_MASSAGE_REMOVE:  
{"id":70} 

 Player 2 13:21:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":71,"_text":"Wait For Response From Player 2 "},"childOfId":68} 

 Player 2 13:21:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 13:21:39 $ACTION_MASSAGE_REMOVE:  
{"id":68} 

 Player 2 13:21:42 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 2 13:21:42 $ACTION_MASSAGE_REMOVE:  
{"id":69} 

 Player 2 13:21:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":72,"_text":"Resolve AttackRoll 7 "}} 

 Player 2 13:21:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":73,"_text":"Added 0 to original roll"}} 

 Player 2 13:21:42 $NEXT_STACK_ID:  

 Player 2 13:21:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Fatty<Monster>"} 

 Player 2 13:21:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 13:21:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 2 rolled 1 vs Fatty<Monster>"} 

 Player 2 13:21:42 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":275,"entityToDoDamageCardId":223,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 13:21:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 2 rolled 1 vs Fatty<Monster>"} 

 Player 2 13:21:42 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":275,"numberRolled":1,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":223}} 

 Player 2 13:21:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 2 rolled 1 vs Fatty<Monster>"} 

 Player 2 13:21:42 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":275,"entityToDoDamageCardId":223,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 13:21:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 2 rolled 1 vs Fatty<Monster>"} 

 Player 2 13:21:42 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":275,"numberRolled":1,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":223}} 

 Player 2 13:21:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 2 rolled 1 vs Fatty<Monster>"} 

 Player 2 13:21:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 2 rolled 1 vs Fatty<Monster>"} 

 Player 2 13:21:42 $REPLACE_STACK:  
{"currentStack":[{"entityId":9,"creatorCardId":275,"entityToDoDamageCardId":223,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":7,"creatorCardId":275,"numberRolled":1,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":223}]} 

 Player 2 13:21:42 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":2,"number":2}],"result":null,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":6,"originStackId":7},"isAfterActivation":true,"index":6} 

 Player 2 13:21:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 2 rolled 1 vs Fatty<Monster>"} 

 Player 2 13:21:42 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":275,"numberRolled":1,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":223}} 

 Player 2 13:21:42 $ACTION_MASSAGE_REMOVE:  
{"id":72} 

 Player 2 13:21:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost"} 

 Player 2 13:21:42 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":275,"numberRolled":1,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":223}} 

 Player 2 13:21:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":74,"_text":"Remove After Resolve AttackRoll 7  "}} 

 Player 2 13:21:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost"} 

 Player 2 13:21:42 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":275,"numberRolled":1,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":223}} 

 Player 2 13:21:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":75,"_text":"Response Remove After Resolve AttackRoll 7"},"childOfId":74} 

 Player 2 13:21:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":76,"_text":"Wait For Response From Player 2 "},"childOfId":74} 

 Player 2 13:21:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 13:21:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fatty<Monster>"} 

 Player 1 13:21:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fatty<Monster>"} 

 Player 1 13:21:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost"} 

 Player 1 13:21:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost"} 

 Player 1 13:21:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost"} 

 Player 1 13:21:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost"} 

 Player 1 13:21:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost"} 

 Player 1 13:21:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost"} 

 Player 1 13:21:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost"} 

 Player 1 13:21:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost"} 

 Player 1 13:21:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost"} 

 Player 1 13:21:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost"} 

 Player 1 13:21:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 2 is rolling against Fatty<Monster>"} 

 Player 1 13:21:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 2 is rolling against Fatty<Monster>"} 

 Player 1 13:21:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 2 is rolling against Fatty<Monster>"} 

 Player 1 13:21:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 2 is rolling against Fatty<Monster>"} 

 Player 1 13:21:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 2 is rolling against Fatty<Monster>"} 

 Player 1 13:21:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 2 is rolling against Fatty<Monster>"} 

 Player 2 13:21:45 $ACTION_MASSAGE_REMOVE:  
{"id":73} 

 Player 2 13:21:45 $ACTION_MASSAGE_REMOVE:  
{"id":74} 

 Player 2 13:21:46 $ACTION_MASSAGE_REMOVE:  
{"id":76} 

 Player 2 13:21:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":77,"_text":"Wait For Response From Player 1 "},"childOfId":74} 

 Player 2 13:21:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 13:21:46 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 13:21:50 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":true} 

 Player 1 13:21:50 $SHOW_DECISION:  
{"startCardId":267,"endCardId":267} 

 Player 2 13:21:50 $ACTION_MASSAGE_REMOVE:  
{"id":77} 

 Player 2 13:21:50 $ACTION_MASSAGE_REMOVE:  
{"id":75} 

 Player 2 13:21:50 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 2 13:21:50 $ACTION_MASSAGE_REMOVE:  
{"id":61} 

 Player 1 13:21:53 $NEXT_STACK_ID:  

 Player 1 13:21:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost"} 

 Player 1 13:21:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 activated Isaac"} 

 Player 1 13:21:53 $ADD_TO_STACK:  
{"stackEffect":{"entityId":10,"creatorCardId":267,"hasLockingStackEffect":false,"itemToPlayCardId":267,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 13:21:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 activated Isaac"} 

 Player 1 13:21:53 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":267,"hasLockingStackEffect":false,"itemToPlayCardId":267,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 13:21:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":78,"_text":"Add ActivateItem 10 "}} 

 Player 2 13:21:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost"} 

 Player 2 13:21:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost"} 

 Player 2 13:21:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 activated Isaac"} 

 Player 2 13:21:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 activated Isaac"} 

 Player 1 13:21:54 $SHOW_DECISION:  
{"startCardId":267,"endCardId":59} 

 Player 1 13:21:56 $RESPOND_TO:  
{"playerId":-1,"stackEffectResponse":false} 

 Player 1 13:21:57 $USE_ITEM:  
{"cardId":267} 

 Player 1 13:21:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 13:21:57 $ACTION_MASSAGE_REMOVE:  
{"id":78} 

 Player 1 13:21:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 activated Isaac"} 

 Player 1 13:21:57 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":267,"hasLockingStackEffect":false,"itemToPlayCardId":267,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 13:21:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":79,"_text":"Response Adding ActivateItem 10"},"childOfId":78} 

 Player 1 13:21:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":80,"_text":"Wait For Response From Player 2 "},"childOfId":78} 

 Player 1 13:21:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 13:21:57 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 13:21:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 activated Isaac"} 

 Player 2 13:21:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 activated Isaac"} 

 Player 2 13:21:58 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 2 13:21:58 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 2 13:21:58 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 2 13:21:58 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 2 13:21:58 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 13:21:58 $ACTION_MASSAGE_REMOVE:  
{"id":80} 

 Player 1 13:21:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":81,"_text":"Wait For Response From Player 1 "},"childOfId":78} 

 Player 1 13:21:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 13:21:58 $ACTION_MASSAGE_REMOVE:  
{"id":81} 

 Player 1 13:21:58 $ACTION_MASSAGE_REMOVE:  
{"id":79} 

 Player 1 13:21:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":82,"_text":"Resolve ActivateItem 10 "}} 

 Player 1 13:21:58 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":267,"particleType":6} 

 Player 1 13:22:00 $DISABLE_PARTICLE_EFFECT:  
{"cardId":267,"particleType":6} 

 Player 1 13:22:00 $NEXT_STACK_ID:  

 Player 1 13:22:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 activated Isaac"} 

 Player 1 13:22:00 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":59} 

 Player 1 13:22:00 $MOVE_CARD:  
{"moveIndex":18,"cardId":59,"placeID":277,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 13:22:00 $MOVE_CARD_END:  
{"moveIndex":18,"cardId":59,"flipIfFlipped":true,"playerId":1} 

 Player 1 13:22:00 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":59} 

 Player 1 13:22:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 play 4 Cents: addMoney \n3:Player 1 activated Isaac"} 

 Player 1 13:22:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 13:22:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 play 4 Cents: addMoney \n3:Player 1 activated Isaac"} 

 Player 1 13:22:01 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":11,"creatorCardId":267,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":59,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":59,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 13:22:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 play 4 Cents: addMoney \n3:Player 1 activated Isaac"} 

 Player 1 13:22:01 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":275,"entityToDoDamageCardId":223,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 13:22:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 play 4 Cents: addMoney \n3:Player 1 activated Isaac"} 

 Player 1 13:22:01 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":275,"entityToDoDamageCardId":223,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 13:22:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 play 4 Cents: addMoney \n3:Player 1 activated Isaac"} 

 Player 1 13:22:01 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":267,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":59,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":59,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 13:22:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 play 4 Cents: addMoney \n3:Player 1 activated Isaac"} 

 Player 1 13:22:01 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":267,"hasLockingStackEffect":false,"itemToPlayCardId":267,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 13:22:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 play 4 Cents: addMoney \n3:Player 1 activated Isaac"} 

 Player 1 13:22:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 play 4 Cents: addMoney \n3:Player 1 activated Isaac"} 

 Player 1 13:22:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 play 4 Cents: addMoney \n3:Player 1 activated Isaac"} 

 Player 1 13:22:01 $REPLACE_STACK:  
{"currentStack":[{"entityId":9,"creatorCardId":275,"entityToDoDamageCardId":223,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":11,"creatorCardId":267,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":59,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":59,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":10,"creatorCardId":267,"hasLockingStackEffect":false,"itemToPlayCardId":267,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 

 Player 1 13:22:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 play 4 Cents: addMoney \n3:Player 1 activated Isaac"} 

 Player 1 13:22:01 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":267,"hasLockingStackEffect":false,"itemToPlayCardId":267,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 13:22:01 $ACTION_MASSAGE_REMOVE:  
{"id":82} 

 Player 1 13:22:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 play 4 Cents: addMoney"} 

 Player 1 13:22:01 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":267,"hasLockingStackEffect":false,"itemToPlayCardId":267,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 13:22:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":83,"_text":"Remove After Resolve ActivateItem 10  "}} 

 Player 1 13:22:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 play 4 Cents: addMoney"} 

 Player 1 13:22:01 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":10,"creatorCardId":267,"hasLockingStackEffect":false,"itemToPlayCardId":267,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 13:22:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":84,"_text":"Response Remove After Resolve ActivateItem 10"},"childOfId":83} 

 Player 1 13:22:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":85,"_text":"Wait For Response From Player 2 "},"childOfId":83} 

 Player 1 13:22:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 13:22:01 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 13:22:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 activated Isaac"} 

 Player 2 13:22:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 activated Isaac"} 

 Player 2 13:22:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 play 4 Cents "} 

 Player 2 13:22:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 play 4 Cents "} 

 Player 2 13:22:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 play 4 Cents "} 

 Player 2 13:22:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 play 4 Cents "} 

 Player 2 13:22:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 play 4 Cents "} 

 Player 2 13:22:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 play 4 Cents "} 

 Player 2 13:22:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 play 4 Cents "} 

 Player 2 13:22:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 play 4 Cents "} 

 Player 2 13:22:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 play 4 Cents "} 

 Player 2 13:22:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 play 4 Cents "} 

 Player 2 13:22:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 play 4 Cents "} 

 Player 2 13:22:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 play 4 Cents "} 

 Player 2 13:22:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 play 4 Cents "} 

 Player 2 13:22:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 play 4 Cents "} 

 Player 2 13:22:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 play 4 Cents  \n3:Player 1 activated Isaac"} 

 Player 2 13:22:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 play 4 Cents  \n3:Player 1 activated Isaac"} 

 Player 2 13:22:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 play 4 Cents  \n3:Player 1 activated Isaac"} 

 Player 2 13:22:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 play 4 Cents  \n3:Player 1 activated Isaac"} 

 Player 2 13:22:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 play 4 Cents  \n3:Player 1 activated Isaac"} 

 Player 2 13:22:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 play 4 Cents  \n3:Player 1 activated Isaac"} 

 Player 2 13:22:02 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 13:22:02 $ACTION_MASSAGE_REMOVE:  
{"id":85} 

 Player 1 13:22:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":86,"_text":"Wait For Response From Player 1 "},"childOfId":83} 

 Player 1 13:22:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 13:22:02 $ACTION_MASSAGE_REMOVE:  
{"id":86} 

 Player 1 13:22:02 $ACTION_MASSAGE_REMOVE:  
{"id":84} 

 Player 1 13:22:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":87,"_text":"Resolve PlayLootCardStackEffect 11 "}} 

 Player 1 13:22:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 play 4 Cents: addMoney"} 

 Player 1 13:22:02 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":59,"particleType":6} 

 Player 1 13:22:03 $ACTION_MASSAGE_REMOVE:  
{"id":83} 

 Player 1 13:22:04 $DISABLE_PARTICLE_EFFECT:  
{"cardId":59,"particleType":6} 

 Player 1 13:22:04 $SET_MONEY:  
{"playerId":1,"numOfCoins":7} 

 Player 1 13:22:04 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":267,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 1 13:22:04 $REMOVE_FROM_PILE:  
{"cardId":59} 

 Player 1 13:22:04 $MOVE_CARD:  
{"moveIndex":19,"cardId":59,"placeID":278,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 13:22:04 $MOVE_CARD_END:  
{"moveIndex":19,"cardId":59,"flipIfFlipped":true,"playerId":1} 

 Player 1 13:22:04 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":59} 

 Player 1 13:22:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 play 4 Cents: addMoney"} 

 Player 1 13:22:04 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":11,"creatorCardId":267,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":59,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 13:22:04 $ACTION_MASSAGE_REMOVE:  
{"id":87} 

 Player 1 13:22:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost"} 

 Player 1 13:22:04 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":267,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":59,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 13:22:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":88,"_text":"Remove After Resolve PlayLootCardStackEffect 11  "}} 

 Player 1 13:22:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost"} 

 Player 1 13:22:05 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":11,"creatorCardId":267,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":59,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 13:22:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":89,"_text":"Response Remove After Resolve PlayLootCardStackEffect 11"},"childOfId":88} 

 Player 1 13:22:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":90,"_text":"Wait For Response From Player 1 "},"childOfId":88} 

 Player 1 13:22:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 13:22:05 $ACTION_MASSAGE_REMOVE:  
{"id":90} 

 Player 1 13:22:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":91,"_text":"Wait For Response From Player 2 "},"childOfId":88} 

 Player 1 13:22:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 13:22:05 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 13:22:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 play 4 Cents "} 

 Player 2 13:22:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 play 4 Cents "} 

 Player 2 13:22:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 play 4 Cents "} 

 Player 2 13:22:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 play 4 Cents "} 

 Player 2 13:22:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 play 4 Cents "} 

 Player 2 13:22:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 play 4 Cents "} 

 Player 2 13:22:05 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 13:22:05 $ACTION_MASSAGE_REMOVE:  
{"id":91} 

 Player 1 13:22:05 $ACTION_MASSAGE_REMOVE:  
{"id":89} 

 Player 1 13:22:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":92,"_text":"Resolve CombatDamage 9 "}} 

 Player 1 13:22:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost"} 

 Player 1 13:22:05 $DO_STACK_EFFECT:  
{"originPlayerId":1,"playerId":2,"currentStack":[{"entityId":9,"creatorCardId":275,"entityToDoDamageCardId":223,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}]} 

 Player 2 13:22:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost"} 

 Player 2 13:22:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost"} 

 Player 2 13:22:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty 1 combat damage to The Lost"} 

 Player 2 13:22:05 $UPDATE_STACK_VIS:  
{"stackId":9,"text":"Fatty will deal 1 combat damage to The Lost"} 

 Player 2 13:22:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty 1 combat damage to The Lost"} 

 Player 2 13:22:05 $PLAYER_GET_HIT:  
{"playerId":2,"damage":1,"damageDealerId":223} 

 Player 2 13:22:05 $NEXT_STACK_ID:  

 Player 2 13:22:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty 1 combat damage to The Lost"} 

 Player 2 13:22:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 13:22:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty 1 combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 13:22:05 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":12,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":223}} 

 Player 2 13:22:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty 1 combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 13:22:05 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":275,"entityToDoDamageCardId":223,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 13:22:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty 1 combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 13:22:06 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":275,"entityToDoDamageCardId":223,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 13:22:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty 1 combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 13:22:06 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":12,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":223}} 

 Player 2 13:22:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty 1 combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 13:22:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty 1 combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 13:22:06 $REPLACE_STACK:  
{"currentStack":[{"entityId":9,"creatorCardId":275,"entityToDoDamageCardId":223,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":12,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":223}]} 

 Player 2 13:22:06 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":223}],"result":null,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 

 Player 2 13:22:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty 1 combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 13:22:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty 1 combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 13:22:06 $FINISH_DO_STACK_EFFECT:  
{"playerId":1,"newStack":[{"entityId":9,"creatorCardId":275,"entityToDoDamageCardId":223,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":12,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":223}]} 

 Player 1 13:22:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost"} 

 Player 1 13:22:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost"} 

 Player 1 13:22:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 13:22:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 13:22:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 13:22:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 13:22:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 13:22:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 13:22:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 13:22:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 13:22:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 13:22:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 13:22:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 1 13:22:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 1 13:22:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 1 13:22:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 1 13:22:06 $ACTION_MASSAGE_REMOVE:  
{"id":92} 

 Player 1 13:22:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 1 13:22:06 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":275,"entityToDoDamageCardId":223,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 13:22:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 1 13:22:06 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":275,"entityToDoDamageCardId":223,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 13:22:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 1 13:22:06 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":12,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":223}} 

 Player 1 13:22:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 1 13:22:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 1 13:22:07 $REPLACE_STACK:  
{"currentStack":[{"entityId":9,"creatorCardId":275,"entityToDoDamageCardId":223,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":12,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":223}]} 

 Player 1 13:22:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 13:22:07 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":275,"entityToDoDamageCardId":223,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 13:22:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":93,"_text":"Remove After Resolve CombatDamage 9  "}} 

 Player 1 13:22:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 13:22:07 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":9,"creatorCardId":275,"entityToDoDamageCardId":223,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 13:22:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":94,"_text":"Response Remove After Resolve CombatDamage 9"},"childOfId":93} 

 Player 1 13:22:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":95,"_text":"Wait For Response From Player 2 "},"childOfId":93} 

 Player 1 13:22:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 13:22:07 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 13:22:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty 1 combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 13:22:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty 1 combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 13:22:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty 1 combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 13:22:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty 1 combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 13:22:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty 1 combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 13:22:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty 1 combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 13:22:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty 1 combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 13:22:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty 1 combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 13:22:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty 1 combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 13:22:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty 1 combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 13:22:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 13:22:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 13:22:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 13:22:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 2 is about to die"} 

 Player 2 13:22:07 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 13:22:07 $ACTION_MASSAGE_REMOVE:  
{"id":95} 

 Player 1 13:22:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":96,"_text":"Wait For Response From Player 1 "},"childOfId":93} 

 Player 1 13:22:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 13:22:07 $ACTION_MASSAGE_REMOVE:  
{"id":96} 

 Player 1 13:22:07 $ACTION_MASSAGE_REMOVE:  
{"id":94} 

 Player 1 13:22:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":97,"_text":"Resolve PlayerDeath 12 "}} 

 Player 1 13:22:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 13:22:07 $DO_STACK_EFFECT:  
{"originPlayerId":1,"playerId":2,"currentStack":[{"entityId":12,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":223}]} 

 Player 1 13:22:07 $ACTION_MASSAGE_REMOVE:  
{"id":88} 

 Player 2 13:22:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 13:22:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 13:22:08 $DISABLE_PARTICLE_EFFECT:  
{"cardId":223,"particleType":5} 

 Player 2 13:22:08 $CANCEL_ATTACK:  

 Player 2 13:22:08 $NEXT_STACK_ID:  

 Player 2 13:22:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 2 13:22:08 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_PAY_DEATH_PANELTIES","args":[],"result":null,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":1,"originStackId":13},"isAfterActivation":false,"index":1} 

 Player 2 13:22:08 $NEXT_STACK_ID:  

 Player 2 13:22:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 

 Player 2 13:22:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 2 13:22:08 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":14,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":276,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":276,"effctType":3},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 13:22:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 2 13:22:08 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":14,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":276,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":276,"effctType":3},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 13:22:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":98,"_text":"Add ActivatePassiveEffect 14 "}} 

 Player 2 13:22:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 2 13:22:08 $ACTION_MASSAGE_REMOVE:  
{"id":98} 

 Player 2 13:22:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 2 13:22:08 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":14,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":276,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":276,"effctType":3},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 13:22:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":99,"_text":"Response Adding ActivatePassiveEffect 14"},"childOfId":98} 

 Player 2 13:22:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":100,"_text":"Wait For Response From Player 1 "},"childOfId":98} 

 Player 2 13:22:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 13:22:08 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 13:22:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 13:22:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die"} 

 Player 1 13:22:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 

 Player 1 13:22:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 

 Player 1 13:22:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 

 Player 1 13:22:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 

 Player 1 13:22:08 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 13:22:08 $ACTION_MASSAGE_REMOVE:  
{"id":100} 

 Player 2 13:22:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":101,"_text":"Wait For Response From Player 2 "},"childOfId":98} 

 Player 2 13:22:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 13:22:08 $ACTION_MASSAGE_REMOVE:  
{"id":101} 

 Player 2 13:22:08 $ACTION_MASSAGE_REMOVE:  
{"id":99} 

 Player 2 13:22:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":102,"_text":"Resolve ActivatePassiveEffect 14 "}} 

 Player 2 13:22:08 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":276,"particleType":6} 

 Player 1 13:22:09 $ACTION_MASSAGE_REMOVE:  
{"id":93} 

 Player 2 13:22:10 $DISABLE_PARTICLE_EFFECT:  
{"cardId":276,"particleType":6} 

 Player 2 13:22:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 2 13:22:10 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":13,"creatorCardId":275,"playerToPayCardId":275,"stackEffectType":16}} 

 Player 2 13:22:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":103,"_text":"Fizzle PlayerDeathPenalties 13"}} 

 Player 2 13:22:10 $FIZZLE_STACK_EFFECT:  
{"entityId":13} 

 Player 1 13:22:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 

 Player 1 13:22:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 

 Player 2 13:22:13 $ACTION_MASSAGE_REMOVE:  
{"id":103} 

 Player 2 13:22:52 $MATCH: 