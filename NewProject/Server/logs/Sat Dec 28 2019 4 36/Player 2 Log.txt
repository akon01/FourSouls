Start Log 
 Player 2 04:36:08 $START_GAME:  
 Player 2 04:36:08 $MOVE_TO_TABLE:  
 Player 2 04:36:13 $FINISH_LOAD:  
 {"id":2,"turnPlayerId":2} 
 Player 2 04:36:13 $CHOOSE_FOR_EDEN:  
 {"playerId":1,"originPlayerId":2} 
 Player 2 04:36:36 $DECK_ARRAGMENT:  
 {"deckType":5,"arrangement":[156,189,161,166,193,190,184,202,185,180,179,164,191,203,172,199,176,187,160,158,171,153,175,157,150,162,178,200,163,201,159,192,183,149,165,194,177,198,186,169,147,196,195,197,188,155,167,182,170,174,148,152,168,181,146,154,151]} 
 Player 2 04:36:36 $FLIP_CARD:  
 {"cardId":173} 
 Player 2 04:36:36 $ASSIGN_CHAR_TO_PLAYER:  
 {"playerId":1,"charCardId":266,"itemCardId":173} 
 Player 2 04:36:36 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":277}],"result":true,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 04:36:36 $ASSIGN_CHAR_TO_PLAYER:  
 {"playerId":2,"charCardId":276,"itemCardId":277} 
 Player 2 04:36:36 $DECK_ARRAGMENT:  
 {"deckType":1,"arrangement":[14,130,31,114,12,65,88,112,36,125,106,84,103,72,59,85,70,118,47,35,48,134,141,68,83,133,21,26,140,77,39,38,23,74,135,122,60,75,28,120,101,42,113,107,93,10,98,105,17,53,52,97,138,58,123,45,94,95,22,40,143,27,71,16,32,129,99,15,66,131,110,63,56,78,128,132,30,9,89,11,8,139,100,73,121,79,116,115,54,20,44,18,86,49,108,92,81,126,62,87,43,142,29,124,76,67,33,91,90,46,111,80,109,25,57,51,137,104,41,69,61,7,82,50,24,55,102,34,19,96,64,37,13,136,127,117,119]} 
 Player 2 04:36:36 $DECK_ARRAGMENT:  
 {"deckType":2,"arrangement":[230,212,218,220,219,258,221,243,222,248,213,257,234,240,254,251,227,233,259,242,223,244,252,207,224,209,217,208,225,236,211,226,228,210,232,241,246,245,247,250,249,229,206,237,214,235,255,238,231,215,216,253,239,256]} 
 Player 2 04:36:36 $DECK_ARRAGMENT:  
 {"deckType":5,"arrangement":[156,189,161,166,193,190,184,202,185,180,179,164,191,203,172,199,176,187,160,158,171,153,175,157,150,162,178,200,163,201,159,192,183,149,165,194,177,198,186,169,147,196,195,197,188,155,167,182,170,174,148,152,168,181,146,154,151]} 
 Player 2 04:36:36 $DRAW_CARD:  
 {"deckType":5} 
 Player 2 04:36:36 $FLIP_CARD:  
 {"cardId":151} 
 Player 2 04:36:36 $ADD_STORE_CARD:  
 {"cardId":151} 
 Player 2 04:36:36 $DRAW_CARD:  
 {"deckType":5} 
 Player 2 04:36:36 $FLIP_CARD:  
 {"cardId":154} 
 Player 2 04:36:36 $ADD_STORE_CARD:  
 {"cardId":154} 
 Player 2 04:36:36 $DRAW_CARD:  
 {"deckType":2} 
 Player 2 04:36:36 $DECK_ADD_TO_BOTTOM:  
 {"deckType":2,"cardId":256} 
 Player 2 04:36:36 $DRAW_CARD:  
 {"deckType":2} 
 Player 2 04:36:36 $FLIP_CARD:  
 {"cardId":239} 
 Player 2 04:36:36 $ADD_MONSTER:  
 {"monsterPlaceId":1,"monsterId":239} 
 Player 2 04:36:36 $NEW_MONSTER_ON_PLACE:  
 {"cardId":239,"monsterPlaceId":1} 
 Player 2 04:36:36 $DRAW_CARD:  
 {"deckType":2} 
 Player 2 04:36:36 $FLIP_CARD:  
 {"cardId":253} 
 Player 2 04:36:36 $ADD_MONSTER:  
 {"monsterPlaceId":2,"monsterId":253} 
 Player 2 04:36:36 $NEW_MONSTER_ON_PLACE:  
 {"cardId":253,"monsterPlaceId":2} 
 Player 2 04:36:36 $SET_MONEY:  
 {"playerId":1,"numOfCoins":3} 
 Player 2 04:36:36 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":266,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 2 04:36:36 $DRAW_CARD:  
 {"deckType":1} 
 Player 2 04:36:36 $MOVE_CARD:  
 {"moveIndex":1,"cardId":119,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 04:36:37 $CARD_DRAWN:  
 {"playerId":1,"deckType":1,"drawnCardId":119} 
 Player 2 04:36:37 $FLIP_CARD:  
 {"cardId":119} 
 Player 2 04:36:37 $FLIP_CARD:  
 {"cardId":119} 
 Player 2 04:36:37 $PLAYER_GET_LOOT:  
 {"playerId":1,"cardId":119} 
 Player 2 04:36:37 $DRAW_CARD:  
 {"deckType":1} 
 Player 2 04:36:37 $MOVE_CARD:  
 {"moveIndex":2,"cardId":117,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 04:36:37 $CARD_DRAWN:  
 {"playerId":1,"deckType":1,"drawnCardId":117} 
 Player 2 04:36:37 $FLIP_CARD:  
 {"cardId":117} 
 Player 2 04:36:37 $FLIP_CARD:  
 {"cardId":117} 
 Player 2 04:36:37 $PLAYER_GET_LOOT:  
 {"playerId":1,"cardId":117} 
 Player 2 04:36:37 $DRAW_CARD:  
 {"deckType":1} 
 Player 2 04:36:37 $MOVE_CARD:  
 {"moveIndex":3,"cardId":127,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 04:36:38 $CARD_DRAWN:  
 {"playerId":1,"deckType":1,"drawnCardId":127} 
 Player 2 04:36:38 $FLIP_CARD:  
 {"cardId":127} 
 Player 2 04:36:38 $FLIP_CARD:  
 {"cardId":127} 
 Player 2 04:36:38 $PLAYER_GET_LOOT:  
 {"playerId":1,"cardId":127} 
 Player 2 04:36:38 $SET_MONEY:  
 {"playerId":2,"numOfCoins":3} 
 Player 2 04:36:38 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Player 2 04:36:38 $DRAW_CARD:  
 {"deckType":1} 
 Player 2 04:36:38 $MOVE_CARD:  
 {"moveIndex":4,"cardId":136,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 04:36:38 $CARD_DRAWN:  
 {"playerId":2,"deckType":1,"drawnCardId":136} 
 Player 2 04:36:38 $FLIP_CARD:  
 {"cardId":136} 
 Player 2 04:36:38 $PLAYER_GET_LOOT:  
 {"playerId":2,"cardId":136} 
 Player 2 04:36:38 $DRAW_CARD:  
 {"deckType":1} 
 Player 2 04:36:38 $MOVE_CARD:  
 {"moveIndex":5,"cardId":13,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 04:36:39 $CARD_DRAWN:  
 {"playerId":2,"deckType":1,"drawnCardId":13} 
 Player 2 04:36:39 $FLIP_CARD:  
 {"cardId":13} 
 Player 2 04:36:39 $PLAYER_GET_LOOT:  
 {"playerId":2,"cardId":13} 
 Player 2 04:36:39 $DRAW_CARD:  
 {"deckType":1} 
 Player 2 04:36:39 $MOVE_CARD:  
 {"moveIndex":6,"cardId":37,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 04:36:39 $CARD_DRAWN:  
 {"playerId":2,"deckType":1,"drawnCardId":37} 
 Player 2 04:36:39 $FLIP_CARD:  
 {"cardId":37} 
 Player 2 04:36:39 $PLAYER_GET_LOOT:  
 {"playerId":2,"cardId":37} 
 Player 2 04:36:39 $GAME_HAS_STARTED:  
 Player 2 04:36:39 $SET_TURN:  
 {"playerId":2} 
 Player 2 04:36:39 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 04:36:39 $NEXT_STACK_ID:  
 Player 2 04:36:39 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 04:36:39 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 04:36:39 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":1,"creatorCardId":276,"turnPlayerCardId":276,"stackEffectType":13}} 
 Player 2 04:36:39 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 
 Player 2 04:36:39 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 04:36:39 $ACTION_MASSAGE_REMOVE:  
 {"id":0} 
 Player 2 04:36:39 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 04:36:39 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":1,"creatorCardId":276,"turnPlayerCardId":276,"stackEffectType":13}} 
 Player 2 04:36:39 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 
 Player 2 04:36:39 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 2 04:36:40 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 04:36:40 $ACTION_MASSAGE_REMOVE:  
 {"id":2} 
 Player 2 04:36:40 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 2 04:36:40 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 04:36:40 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 04:36:40 $ACTION_MASSAGE_REMOVE:  
 {"id":3} 
 Player 2 04:36:40 $ACTION_MASSAGE_REMOVE:  
 {"id":1} 
 Player 2 04:36:40 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 
 Player 2 04:36:40 $DRAW_CARD:  
 {"deckType":1} 
 Player 2 04:36:40 $MOVE_CARD:  
 {"moveIndex":7,"cardId":64,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 04:36:40 $CARD_DRAWN:  
 {"playerId":2,"deckType":1,"drawnCardId":64} 
 Player 2 04:36:40 $FLIP_CARD:  
 {"cardId":64} 
 Player 2 04:36:40 $PLAYER_GET_LOOT:  
 {"playerId":2,"cardId":64} 
 Player 2 04:36:40 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 04:36:40 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":1,"creatorCardId":276,"turnPlayerCardId":276,"stackEffectType":13}} 
 Player 2 04:36:40 $ACTION_MASSAGE_REMOVE:  
 {"id":4} 
 Player 2 04:36:40 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 
 Player 2 04:36:40 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 04:36:40 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":1,"creatorCardId":276,"turnPlayerCardId":276,"stackEffectType":13}} 
 Player 2 04:36:41 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 
 Player 2 04:36:41 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Player 2 04:36:41 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 04:36:41 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 04:36:41 $ACTION_MASSAGE_REMOVE:  
 {"id":7} 
 Player 2 04:36:41 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Player 2 04:36:41 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 04:36:41 $ACTION_MASSAGE_REMOVE:  
 {"id":8} 
 Player 2 04:36:41 $ACTION_MASSAGE_REMOVE:  
 {"id":6} 
 Player 2 04:36:41 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":9,"_text":"Stack Was Emptied "}} 
 Player 2 04:36:41 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 04:36:41 $ACTION_MASSAGE_REMOVE:  
 {"id":5} 
 Player 2 04:36:41 $UPDATE_ACTIONS:  
 Player 2 04:36:42 $ACTION_MASSAGE_REMOVE:  
 {"id":9} 
 Player 2 04:36:43 $ACTION_MASSAGE_REMOVE:  
 {"id":5} 
 Player 2 04:36:47 $NEXT_STACK_ID:  
 Player 2 04:36:47 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 04:36:47 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 4 Cents(4) "} 
 Player 2 04:36:47 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":2,"creatorCardId":276,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":64,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 2 04:36:47 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":10,"_text":"Add PlayLootCardStackEffect 2 "}} 
 Player 2 04:36:47 $PLAYER_LOSE_LOOT:  
 {"playerId":2,"cardId":64} 
 Player 2 04:36:47 $MOVE_CARD:  
 {"moveIndex":8,"cardId":64,"placeID":278,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 04:36:48 $MOVE_CARD_TO_PILE:  
 {"type":7,"cardId":64} 
 Player 2 04:36:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 4 Cents(4): addMoney"} 
 Player 2 04:36:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 4 Cents(4): addMoney"} 
 Player 2 04:36:48 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 04:36:48 $ACTION_MASSAGE_REMOVE:  
 {"id":10} 
 Player 2 04:36:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 4 Cents(4): addMoney"} 
 Player 2 04:36:48 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":2,"creatorCardId":276,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":64,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":64,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 04:36:48 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":11,"_text":"Response Adding PlayLootCardStackEffect 2"},"childOfId":10} 
 Player 2 04:36:48 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 
 Player 2 04:36:48 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 04:36:48 $ACTION_MASSAGE_REMOVE:  
 {"id":12} 
 Player 2 04:36:48 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 
 Player 2 04:36:48 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 04:36:48 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 04:36:48 $ACTION_MASSAGE_REMOVE:  
 {"id":13} 
 Player 2 04:36:48 $ACTION_MASSAGE_REMOVE:  
 {"id":11} 
 Player 2 04:36:48 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":14,"_text":"Resolve PlayLootCardStackEffect 2 "}} 
 Player 2 04:36:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 4 Cents(4): addMoney"} 
 Player 2 04:36:48 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":64,"particleType":6} 
 Player 2 04:36:50 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":64,"particleType":6} 
 Player 2 04:36:50 $SET_MONEY:  
 {"playerId":2,"numOfCoins":7} 
 Player 2 04:36:50 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 
 Player 2 04:36:50 $REMOVE_FROM_PILE:  
 {"cardId":64} 
 Player 2 04:36:50 $MOVE_CARD:  
 {"moveIndex":9,"cardId":64,"placeID":279,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 04:36:51 $MOVE_CARD_TO_PILE:  
 {"type":1,"cardId":64} 
 Player 2 04:36:51 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 4 Cents(4): addMoney"} 
 Player 2 04:36:51 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":2,"creatorCardId":276,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":64,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 04:36:51 $ACTION_MASSAGE_REMOVE:  
 {"id":14} 
 Player 2 04:36:51 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":15,"_text":"Remove After Resolve PlayLootCardStackEffect 2  "}} 
 Player 2 04:36:51 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 04:36:51 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":2,"creatorCardId":276,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":64,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 04:36:51 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":16,"_text":"Response Remove After Resolve PlayLootCardStackEffect 2"},"childOfId":15} 
 Player 2 04:36:51 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 
 Player 2 04:36:51 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 04:36:51 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 04:36:52 $ACTION_MASSAGE_REMOVE:  
 {"id":17} 
 Player 2 04:36:52 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 
 Player 2 04:36:52 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 04:36:52 $ACTION_MASSAGE_REMOVE:  
 {"id":18} 
 Player 2 04:36:52 $ACTION_MASSAGE_REMOVE:  
 {"id":16} 
 Player 2 04:36:52 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":19,"_text":"Stack Was Emptied "}} 
 Player 2 04:36:52 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 04:36:52 $ACTION_MASSAGE_REMOVE:  
 {"id":15} 
 Player 2 04:36:53 $ACTION_MASSAGE_REMOVE:  
 {"id":19} 
 Player 2 04:36:54 $ACTION_MASSAGE_REMOVE:  
 {"id":15} 
 Player 2 04:36:54 $NEXT_STACK_ID:  
 Player 2 04:36:54 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 04:36:54 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated The Lost"} 
 Player 2 04:36:54 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":3,"creatorCardId":276,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 04:36:54 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":20,"_text":"Add ActivateItem 3 "}} 
 Player 2 04:36:57 $USE_ITEM:  
 {"cardId":276} 
 Player 2 04:36:57 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 04:36:57 $ACTION_MASSAGE_REMOVE:  
 {"id":20} 
 Player 2 04:36:57 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated The Lost"} 
 Player 2 04:36:57 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":3,"creatorCardId":276,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 04:36:57 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":21,"_text":"Response Adding ActivateItem 3"},"childOfId":20} 
 Player 2 04:36:57 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 
 Player 2 04:36:57 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 04:36:57 $ACTION_MASSAGE_REMOVE:  
 {"id":22} 
 Player 2 04:36:57 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 
 Player 2 04:36:57 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 04:36:57 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 04:36:57 $ACTION_MASSAGE_REMOVE:  
 {"id":23} 
 Player 2 04:36:57 $ACTION_MASSAGE_REMOVE:  
 {"id":21} 
 Player 2 04:36:57 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":24,"_text":"Resolve ActivateItem 3 "}} 
 Player 2 04:36:57 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":276,"particleType":6} 
 Player 2 04:36:59 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":276,"particleType":6} 
 Player 2 04:36:59 $NEXT_STACK_ID:  
 Player 2 04:36:59 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 activated The Lost"} 
 Player 2 04:36:59 $PLAYER_LOSE_LOOT:  
 {"playerId":2,"cardId":37} 
 Player 2 04:36:59 $MOVE_CARD:  
 {"moveIndex":10,"cardId":37,"placeID":278,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 04:37:00 $MOVE_CARD_TO_PILE:  
 {"type":7,"cardId":37} 
 Player 2 04:37:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 3 Cents: addMoney \n2:Player 2 activated The Lost"} 
 Player 2 04:37:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 3 Cents: addMoney \n2:Player 2 activated The Lost"} 
 Player 2 04:37:00 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 04:37:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 3 Cents: addMoney \n2:Player 2 activated The Lost"} 
 Player 2 04:37:00 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":4,"creatorCardId":276,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":37,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":37,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 04:37:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 3 Cents: addMoney \n2:Player 2 activated The Lost"} 
 Player 2 04:37:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 3 Cents: addMoney \n2:Player 2 activated The Lost"} 
 Player 2 04:37:00 $REPLACE_STACK:  
 {"currentStack":[{"entityId":4,"creatorCardId":276,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":37,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":37,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":3,"creatorCardId":276,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 
 Player 2 04:37:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 3 Cents: addMoney \n2:Player 2 activated The Lost"} 
 Player 2 04:37:00 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":3,"creatorCardId":276,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 04:37:00 $ACTION_MASSAGE_REMOVE:  
 {"id":24} 
 Player 2 04:37:00 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":25,"_text":"Remove After Resolve ActivateItem 3  "}} 
 Player 2 04:37:00 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 3 Cents: addMoney"} 
 Player 2 04:37:00 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":3,"creatorCardId":276,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 04:37:00 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":26,"_text":"Response Remove After Resolve ActivateItem 3"},"childOfId":25} 
 Player 2 04:37:00 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":27,"_text":"Wait For Response From Player 2 "},"childOfId":25} 
 Player 2 04:37:00 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 04:37:00 $ACTION_MASSAGE_REMOVE:  
 {"id":27} 
 Player 2 04:37:00 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":28,"_text":"Wait For Response From Player 1 "},"childOfId":25} 
 Player 2 04:37:00 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 04:37:00 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 04:37:01 $ACTION_MASSAGE_REMOVE:  
 {"id":28} 
 Player 2 04:37:01 $ACTION_MASSAGE_REMOVE:  
 {"id":26} 
 Player 2 04:37:01 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":29,"_text":"Resolve PlayLootCardStackEffect 4 "}} 
 Player 2 04:37:01 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 3 Cents: addMoney"} 
 Player 2 04:37:01 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":37,"particleType":6} 
 Player 2 04:37:03 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":37,"particleType":6} 
 Player 2 04:37:03 $SET_MONEY:  
 {"playerId":2,"numOfCoins":10} 
 Player 2 04:37:03 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 
 Player 2 04:37:03 $REMOVE_FROM_PILE:  
 {"cardId":37} 
 Player 2 04:37:03 $MOVE_CARD:  
 {"moveIndex":11,"cardId":37,"placeID":279,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 04:37:03 $ACTION_MASSAGE_REMOVE:  
 {"id":25} 
 Player 2 04:37:03 $MOVE_CARD_TO_PILE:  
 {"type":1,"cardId":37} 
 Player 2 04:37:03 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 play 3 Cents: addMoney"} 
 Player 2 04:37:03 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":4,"creatorCardId":276,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":37,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 04:37:03 $ACTION_MASSAGE_REMOVE:  
 {"id":29} 
 Player 2 04:37:03 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":30,"_text":"Remove After Resolve PlayLootCardStackEffect 4  "}} 
 Player 2 04:37:03 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 04:37:03 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":4,"creatorCardId":276,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":37,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 04:37:03 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":31,"_text":"Response Remove After Resolve PlayLootCardStackEffect 4"},"childOfId":30} 
 Player 2 04:37:03 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":32,"_text":"Wait For Response From Player 1 "},"childOfId":30} 
 Player 2 04:37:03 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 04:37:03 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 04:37:04 $ACTION_MASSAGE_REMOVE:  
 {"id":32} 
 Player 2 04:37:04 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":33,"_text":"Wait For Response From Player 2 "},"childOfId":30} 
 Player 2 04:37:04 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 04:37:04 $ACTION_MASSAGE_REMOVE:  
 {"id":33} 
 Player 2 04:37:04 $ACTION_MASSAGE_REMOVE:  
 {"id":31} 
 Player 2 04:37:04 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":34,"_text":"Stack Was Emptied "}} 
 Player 2 04:37:04 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 04:37:04 $ACTION_MASSAGE_REMOVE:  
 {"id":30} 
 Player 2 04:37:05 $ACTION_MASSAGE_REMOVE:  
 {"id":34} 
 Player 2 04:37:06 $ACTION_MASSAGE_REMOVE:  
 {"id":30} 
 Player 2 04:37:16 $NEXT_STACK_ID:  
 Player 2 04:37:16 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 04:37:16 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to buy Champion Belt for 10"} 
 Player 2 04:37:16 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":5,"creatorCardId":276,"itemToPurchaseCardId":151,"playerWhoBuysCardId":276,"cost":10,"stackEffectType":9}} 
 Player 2 04:37:16 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":35,"_text":"Add PurchaseItem 5 "}} 
 Player 2 04:37:16 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 04:37:16 $ACTION_MASSAGE_REMOVE:  
 {"id":35} 
 Player 2 04:37:16 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to buy Champion Belt for 10"} 
 Player 2 04:37:16 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":5,"creatorCardId":276,"itemToPurchaseCardId":151,"playerWhoBuysCardId":276,"cost":10,"stackEffectType":9}} 
 Player 2 04:37:16 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":36,"_text":"Response Adding PurchaseItem 5"},"childOfId":35} 
 Player 2 04:37:16 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":37,"_text":"Wait For Response From Player 2 "},"childOfId":35} 
 Player 2 04:37:16 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 04:37:16 $ACTION_MASSAGE_REMOVE:  
 {"id":37} 
 Player 2 04:37:16 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":38,"_text":"Wait For Response From Player 1 "},"childOfId":35} 
 Player 2 04:37:16 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 04:37:16 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 04:37:16 $ACTION_MASSAGE_REMOVE:  
 {"id":38} 
 Player 2 04:37:16 $ACTION_MASSAGE_REMOVE:  
 {"id":36} 
 Player 2 04:37:16 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":39,"_text":"Resolve PurchaseItem 5 "}} 
 Player 2 04:37:16 $SET_MONEY:  
 {"playerId":2,"numOfCoins":0} 
 Player 2 04:37:16 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-10}],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 
 Player 2 04:37:16 $REMOVE_ITEM_FROM_SHOP:  
 {"cardId":151} 
 Player 2 04:37:16 $NEXT_STACK_ID:  
 Player 2 04:37:16 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to buy Champion Belt for 10"} 
 Player 2 04:37:16 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 04:37:16 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to buy Champion Belt for 10 \n2:Refill Store slot"} 
 Player 2 04:37:17 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":6,"creatorCardId":276,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 
 Player 2 04:37:17 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to buy Champion Belt for 10 \n2:Refill Store slot"} 
 Player 2 04:37:17 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to buy Champion Belt for 10 \n2:Refill Store slot"} 
 Player 2 04:37:17 $REPLACE_STACK:  
 {"currentStack":[{"entityId":5,"creatorCardId":276,"itemToPurchaseCardId":151,"playerWhoBuysCardId":276,"cost":10,"stackEffectType":9},{"entityId":6,"creatorCardId":276,"slotType":5,"slotToFillId":0,"stackEffectType":10}]} 
 Player 2 04:37:17 $REGISTER_PASSIVE_ITEM:  
 {"cardId":151} 
 Player 2 04:37:17 $MOVE_CARD:  
 {"moveIndex":12,"cardId":151,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 
 Player 2 04:37:17 $ADD_AN_ITEM:  
 {"playerId":2,"cardId":151,"isReward":false} 
 Player 2 04:37:17 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":151}],"result":true,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 
 Player 2 04:37:17 $NEXT_STACK_ID:  
 Player 2 04:37:17 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to buy Champion Belt for 10 \n2:Refill Store slot"} 
 Player 2 04:37:17 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to buy Champion Belt for 10 \n2:Refill Store slot \n3:Activate Champion Belt effect AddAttackOpportunity<AddAttackOpportunity>"} 
 Player 2 04:37:17 $ADD_TO_STACK:  
 {"stackEffect":{"effectCollectedData":null,"entityId":7,"creatorCardId":276,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":151,"effectToDo":{"effectName":"AddAttackOpportunity","cardEffectNum":1,"cardPlayerId":2,"cardId":151,"effctType":0},"isAfterActivation":true,"index":7,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 04:37:17 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":40,"_text":"Add ActivatePassiveEffect 7 "}} 
 Player 2 04:37:17 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to buy Champion Belt for 10 \n2:Refill Store slot \n3:Activate Champion Belt effect AddAttackOpportunity<AddAttackOpportunity>"} 
 Player 2 04:37:17 $ACTION_MASSAGE_REMOVE:  
 {"id":40} 
 Player 2 04:37:17 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to buy Champion Belt for 10 \n2:Refill Store slot \n3:Activate Champion Belt effect AddAttackOpportunity<AddAttackOpportunity>"} 
 Player 2 04:37:17 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"effectCollectedData":{"effectTargets":[276],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":276,"effectCardPlayer":276},"entityId":7,"creatorCardId":276,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":151,"effectToDo":{"effectName":"AddAttackOpportunity","cardEffectNum":1,"cardPlayerId":2,"cardId":151,"effctType":0},"isAfterActivation":true,"index":7,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 04:37:17 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":41,"_text":"Response Adding ActivatePassiveEffect 7"},"childOfId":40} 
 Player 2 04:37:17 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":42,"_text":"Wait For Response From Player 2 "},"childOfId":40} 
 Player 2 04:37:17 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 04:37:17 $ACTION_MASSAGE_REMOVE:  
 {"id":42} 
 Player 2 04:37:17 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":43,"_text":"Wait For Response From Player 1 "},"childOfId":40} 
 Player 2 04:37:17 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 04:37:17 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 04:37:18 $ACTION_MASSAGE_REMOVE:  
 {"id":43} 
 Player 2 04:37:18 $ACTION_MASSAGE_REMOVE:  
 {"id":41} 
 Player 2 04:37:18 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":44,"_text":"Resolve ActivatePassiveEffect 7 "}} 
 Player 2 04:37:18 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":151,"particleType":6} 
 Player 2 04:37:20 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":151,"particleType":6} 
 Player 2 04:37:20 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":151}],"result":true,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 
 Player 2 04:37:20 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to buy Champion Belt for 10 \n2:Refill Store slot \n3:Activate Champion Belt effect AddAttackOpportunity<AddAttackOpportunity>"} 
 Player 2 04:37:20 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"effectCollectedData":{"effectTargets":[276],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":276,"effectCardPlayer":276},"entityId":7,"creatorCardId":276,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":151,"isAfterActivation":true,"index":7,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 04:37:20 $ACTION_MASSAGE_REMOVE:  
 {"id":44} 
 Player 2 04:37:20 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":45,"_text":"Remove After Resolve ActivatePassiveEffect 7  "}} 
 Player 2 04:37:20 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to buy Champion Belt for 10 \n2:Refill Store slot"} 
 Player 2 04:37:20 $REMOVE_FROM_STACK:  
 {"stackEffect":{"effectCollectedData":{"effectTargets":[276],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":276,"effectCardPlayer":276},"entityId":7,"creatorCardId":276,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":151,"isAfterActivation":true,"index":7,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 04:37:20 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":46,"_text":"Response Remove After Resolve ActivatePassiveEffect 7"},"childOfId":45} 
 Player 2 04:37:20 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":47,"_text":"Wait For Response From Player 1 "},"childOfId":45} 
 Player 2 04:37:20 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 04:37:20 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 04:37:21 $ACTION_MASSAGE_REMOVE:  
 {"id":47} 
 Player 2 04:37:21 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":48,"_text":"Wait For Response From Player 2 "},"childOfId":45} 
 Player 2 04:37:21 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 04:37:21 $ACTION_MASSAGE_REMOVE:  
 {"id":48} 
 Player 2 04:37:21 $ACTION_MASSAGE_REMOVE:  
 {"id":46} 
 Player 2 04:37:21 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":49,"_text":"Resolve RefillEmptySlot 6 "}} 
 Player 2 04:37:21 $DRAW_CARD:  
 {"deckType":5} 
 Player 2 04:37:21 $FLIP_CARD:  
 {"cardId":146} 
 Player 2 04:37:21 $ADD_STORE_CARD:  
 {"cardId":146} 
 Player 2 04:37:21 $ACTION_MASSAGE_REMOVE:  
 {"id":49} 
 Player 2 04:37:21 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":50,"_text":"Remove After Resolve RefillEmptySlot 6  "}} 
 Player 2 04:37:21 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to buy Champion Belt for 10"} 
 Player 2 04:37:21 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":6,"creatorCardId":276,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 
 Player 2 04:37:21 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":51,"_text":"Response Remove After Resolve RefillEmptySlot 6"},"childOfId":50} 
 Player 2 04:37:21 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":52,"_text":"Wait For Response From Player 2 "},"childOfId":50} 
 Player 2 04:37:21 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 04:37:21 $ACTION_MASSAGE_REMOVE:  
 {"id":52} 
 Player 2 04:37:21 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":53,"_text":"Wait For Response From Player 1 "},"childOfId":50} 
 Player 2 04:37:21 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 04:37:21 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 04:37:22 $ACTION_MASSAGE_REMOVE:  
 {"id":53} 
 Player 2 04:37:22 $ACTION_MASSAGE_REMOVE:  
 {"id":51} 
 Player 2 04:37:22 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":54,"_text":"Resolve PurchaseItem 5 "}} 
 Player 2 04:37:22 $ACTION_MASSAGE_REMOVE:  
 {"id":39} 
 Player 2 04:37:22 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":55,"_text":"Remove After Resolve PurchaseItem 5  "}} 
 Player 2 04:37:22 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 04:37:22 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":5,"creatorCardId":276,"itemToPurchaseCardId":151,"playerWhoBuysCardId":276,"cost":10,"stackEffectType":9}} 
 Player 2 04:37:22 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":56,"_text":"Response Remove After Resolve PurchaseItem 5"},"childOfId":55} 
 Player 2 04:37:22 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":57,"_text":"Wait For Response From Player 1 "},"childOfId":55} 
 Player 2 04:37:22 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 04:37:22 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 04:37:22 $ACTION_MASSAGE_REMOVE:  
 {"id":57} 
 Player 2 04:37:22 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":58,"_text":"Wait For Response From Player 2 "},"childOfId":55} 
 Player 2 04:37:22 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 04:37:22 $ACTION_MASSAGE_REMOVE:  
 {"id":58} 
 Player 2 04:37:22 $ACTION_MASSAGE_REMOVE:  
 {"id":56} 
 Player 2 04:37:22 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":59,"_text":"Stack Was Emptied "}} 
 Player 2 04:37:22 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 04:37:22 $ACTION_MASSAGE_REMOVE:  
 {"id":39} 
 Player 2 04:37:22 $ACTION_MASSAGE_REMOVE:  
 {"id":45} 
 Player 2 04:37:22 $ACTION_MASSAGE_REMOVE:  
 {"id":50} 
 Player 2 04:37:23 $ACTION_MASSAGE_REMOVE:  
 {"id":45} 
 Player 2 04:37:24 $ACTION_MASSAGE_REMOVE:  
 {"id":50} 
 Player 2 04:37:24 $ACTION_MASSAGE_REMOVE:  
 {"id":59} 
 Player 2 04:37:25 $ACTION_MASSAGE_REMOVE:  
 {"id":55} 
 Player 2 04:37:27 $NEXT_STACK_ID:  
 Player 2 04:37:27 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 04:37:27 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on Monstro"} 
 Player 2 04:37:27 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":8,"creatorCardId":276,"attackingPlayerCardId":276,"idOfCardBeingAttacked":239,"stackEffectType":4}} 
 Player 2 04:37:27 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":60,"_text":"Add DeclareAttack 8 "}} 
 Player 2 04:37:27 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 04:37:27 $ACTION_MASSAGE_REMOVE:  
 {"id":60} 
 Player 2 04:37:27 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on Monstro"} 
 Player 2 04:37:27 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":8,"creatorCardId":276,"attackingPlayerCardId":276,"idOfCardBeingAttacked":239,"stackEffectType":4}} 
 Player 2 04:37:27 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":61,"_text":"Response Adding DeclareAttack 8"},"childOfId":60} 
 Player 2 04:37:27 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":62,"_text":"Wait For Response From Player 2 "},"childOfId":60} 
 Player 2 04:37:27 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 04:37:27 $ACTION_MASSAGE_REMOVE:  
 {"id":62} 
 Player 2 04:37:27 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":63,"_text":"Wait For Response From Player 1 "},"childOfId":60} 
 Player 2 04:37:27 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 04:37:27 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 04:37:27 $ACTION_MASSAGE_REMOVE:  
 {"id":63} 
 Player 2 04:37:27 $ACTION_MASSAGE_REMOVE:  
 {"id":61} 
 Player 2 04:37:28 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":64,"_text":"Resolve DeclareAttack 8 "}} 
 Player 2 04:37:28 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":239,"particleType":5} 
 Player 2 04:37:28 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":8,"originStackId":8},"isAfterActivation":true,"index":8} 
 Player 2 04:37:28 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2  declared attack on Monstro"} 
 Player 2 04:37:28 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":8,"creatorCardId":276,"attackingPlayerCardId":276,"idOfCardBeingAttacked":239,"stackEffectType":4}} 
 Player 2 04:37:28 $ACTION_MASSAGE_REMOVE:  
 {"id":64} 
 Player 2 04:37:28 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":65,"_text":"Remove After Resolve DeclareAttack 8  "}} 
 Player 2 04:37:28 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 04:37:28 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":8,"creatorCardId":276,"attackingPlayerCardId":276,"idOfCardBeingAttacked":239,"stackEffectType":4}} 
 Player 2 04:37:28 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":66,"_text":"Response Remove After Resolve DeclareAttack 8"},"childOfId":65} 
 Player 2 04:37:28 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":67,"_text":"Wait For Response From Player 1 "},"childOfId":65} 
 Player 2 04:37:28 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 04:37:28 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 04:37:28 $ACTION_MASSAGE_REMOVE:  
 {"id":67} 
 Player 2 04:37:28 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":68,"_text":"Wait For Response From Player 2 "},"childOfId":65} 
 Player 2 04:37:28 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 04:37:28 $ACTION_MASSAGE_REMOVE:  
 {"id":68} 
 Player 2 04:37:28 $ACTION_MASSAGE_REMOVE:  
 {"id":66} 
 Player 2 04:37:28 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":69,"_text":"Stack Was Emptied "}} 
 Player 2 04:37:28 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 04:37:28 $ACTION_MASSAGE_REMOVE:  
 {"id":65} 
 Player 2 04:37:30 $ACTION_MASSAGE_REMOVE:  
 {"id":69} 
 Player 2 04:37:30 $NEXT_STACK_ID:  
 Player 2 04:37:30 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 04:37:30 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is rolling against Monstro<Monster>"} 
 Player 2 04:37:30 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":9,"creatorCardId":276,"rollingPlayerCardId":276,"stackEffectType":2,"attackedMonsterCardId":239}} 
 Player 2 04:37:31 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":70,"_text":"Add AttackRoll 9 "}} 
 Player 2 04:37:31 $ROLL_DICE:  
 {"playerId":2} 
 Player 2 04:37:31 $ACTION_MASSAGE_REMOVE:  
 {"id":65} 
 Player 2 04:37:33 $ROLL_DICE_ENDED:  
 {"playerId":2,"numberRolled":2} 
 Player 2 04:37:33 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 2 vs Monstro<Monster>"} 
 Player 2 04:37:33 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 04:37:33 $ACTION_MASSAGE_REMOVE:  
 {"id":70} 
 Player 2 04:37:33 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 2 vs Monstro<Monster>"} 
 Player 2 04:37:33 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":9,"creatorCardId":276,"numberRolled":2,"rollingPlayerCardId":276,"stackEffectType":2,"attackedMonsterCardId":239}} 
 Player 2 04:37:33 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":71,"_text":"Response Adding AttackRoll 9"},"childOfId":70} 
 Player 2 04:37:33 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":72,"_text":"Wait For Response From Player 2 "},"childOfId":70} 
 Player 2 04:37:33 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 04:37:35 $NEXT_STACK_ID:  
 Player 2 04:37:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 2 vs Monstro<Monster>"} 
 Player 2 04:37:35 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 2 vs Monstro<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 2 04:37:35 $ADD_TO_STACK:  
 {"stackEffect":{"entityId":10,"creatorCardId":276,"hasLockingStackEffect":false,"itemToPlayCardId":277,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 04:37:35 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":73,"_text":"Add ActivateItem 10 "}} 
 Player 2 04:37:37 $USE_ITEM:  
 {"cardId":277} 
 Player 2 04:37:37 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 04:37:37 $ACTION_MASSAGE_REMOVE:  
 {"id":73} 
 Player 2 04:37:37 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 2 vs Monstro<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 2 04:37:37 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":10,"creatorCardId":276,"hasLockingStackEffect":false,"itemToPlayCardId":277,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 04:37:37 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":74,"_text":"Response Adding ActivateItem 10"},"childOfId":73} 
 Player 2 04:37:37 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":75,"_text":"Wait For Response From Player 2 "},"childOfId":73} 
 Player 2 04:37:37 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 04:37:37 $ACTION_MASSAGE_REMOVE:  
 {"id":75} 
 Player 2 04:37:37 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":76,"_text":"Wait For Response From Player 1 "},"childOfId":73} 
 Player 2 04:37:37 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 04:37:37 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 04:37:37 $ACTION_MASSAGE_REMOVE:  
 {"id":76} 
 Player 2 04:37:38 $ACTION_MASSAGE_REMOVE:  
 {"id":74} 
 Player 2 04:37:38 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":77,"_text":"Resolve ActivateItem 10 "}} 
 Player 2 04:37:38 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":277,"particleType":6} 
 Player 2 04:37:40 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":277,"particleType":6} 
 Player 2 04:37:40 $REGISTER_ONE_TURN_PASSIVE_EFFECT:  
 {"cardId":277,"effectIndex":{"type":3,"index":0},"conditionData":[{"effectTargets":[276],"chainEffectsData":[],"methodArgs":[],"isPassive":false,"effectCard":277,"effectCardOwner":276,"effectCardPlayer":276}]} 
 Player 2 04:37:40 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 2 vs Monstro<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 2 04:37:40 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":10,"creatorCardId":276,"hasLockingStackEffect":false,"itemToPlayCardId":277,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 04:37:40 $ACTION_MASSAGE_REMOVE:  
 {"id":77} 
 Player 2 04:37:40 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":78,"_text":"Remove After Resolve ActivateItem 10  "}} 
 Player 2 04:37:40 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 2 vs Monstro<Monster>"} 
 Player 2 04:37:40 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":10,"creatorCardId":276,"hasLockingStackEffect":false,"itemToPlayCardId":277,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 04:37:40 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":79,"_text":"Response Remove After Resolve ActivateItem 10"},"childOfId":78} 
 Player 2 04:37:40 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":80,"_text":"Wait For Response From Player 1 "},"childOfId":78} 
 Player 2 04:37:40 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 04:37:40 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 04:37:40 $ACTION_MASSAGE_REMOVE:  
 {"id":80} 
 Player 2 04:37:40 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":81,"_text":"Wait For Response From Player 2 "},"childOfId":78} 
 Player 2 04:37:40 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 04:37:40 $ACTION_MASSAGE_REMOVE:  
 {"id":81} 
 Player 2 04:37:40 $ACTION_MASSAGE_REMOVE:  
 {"id":79} 
 Player 2 04:37:40 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":82,"_text":"Resolve AttackRoll 9 "}} 
 Player 2 04:37:40 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":83,"_text":"Added 0 to original roll"}} 
 Player 2 04:37:40 $NEXT_STACK_ID:  
 Player 2 04:37:40 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 rolled 2 vs Monstro<Monster>"} 
 Player 2 04:37:40 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 04:37:40 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Monstro combat damage to The Lost \n2:Player 2 rolled 2 vs Monstro<Monster>"} 
 Player 2 04:37:40 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":11,"creatorCardId":276,"entityToDoDamageCardId":239,"entityToTakeDamageCardId":276,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 04:37:40 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Monstro combat damage to The Lost \n2:Player 2 rolled 2 vs Monstro<Monster>"} 
 Player 2 04:37:40 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Monstro combat damage to The Lost \n2:Player 2 rolled 2 vs Monstro<Monster>"} 
 Player 2 04:37:40 $REPLACE_STACK:  
 {"currentStack":[{"entityId":11,"creatorCardId":276,"entityToDoDamageCardId":239,"entityToTakeDamageCardId":276,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":9,"creatorCardId":276,"numberRolled":2,"rollingPlayerCardId":276,"stackEffectType":2,"attackedMonsterCardId":239}]} 
 Player 2 04:37:40 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":2},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":9,"originStackId":9},"isAfterActivation":true,"index":9} 
 Player 2 04:37:40 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Monstro combat damage to The Lost \n2:Player 2 rolled 2 vs Monstro<Monster>"} 
 Player 2 04:37:40 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":9,"creatorCardId":276,"numberRolled":2,"rollingPlayerCardId":276,"stackEffectType":2,"attackedMonsterCardId":239}} 
 Player 2 04:37:40 $ACTION_MASSAGE_REMOVE:  
 {"id":82} 
 Player 2 04:37:40 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":84,"_text":"Remove After Resolve AttackRoll 9  "}} 
 Player 2 04:37:40 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Monstro combat damage to The Lost"} 
 Player 2 04:37:40 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":9,"creatorCardId":276,"numberRolled":2,"rollingPlayerCardId":276,"stackEffectType":2,"attackedMonsterCardId":239}} 
 Player 2 04:37:40 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":85,"_text":"Response Remove After Resolve AttackRoll 9"},"childOfId":84} 
 Player 2 04:37:41 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":86,"_text":"Wait For Response From Player 2 "},"childOfId":84} 
 Player 2 04:37:41 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 04:37:41 $ACTION_MASSAGE_REMOVE:  
 {"id":86} 
 Player 2 04:37:41 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":87,"_text":"Wait For Response From Player 1 "},"childOfId":84} 
 Player 2 04:37:41 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 04:37:41 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 04:37:41 $ACTION_MASSAGE_REMOVE:  
 {"id":87} 
 Player 2 04:37:41 $ACTION_MASSAGE_REMOVE:  
 {"id":85} 
 Player 2 04:37:41 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":88,"_text":"Resolve CombatDamage 11 "}} 
 Player 2 04:37:41 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Monstro 1 combat damage to The Lost"} 
 Player 2 04:37:41 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Monstro 1 combat damage to The Lost"} 
 Player 2 04:37:41 $PLAYER_GET_HIT:  
 {"playerId":2,"damage":1,"damageDealerId":239} 
 Player 2 04:37:41 $NEXT_STACK_ID:  
 Player 2 04:37:41 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Monstro 1 combat damage to The Lost"} 
 Player 2 04:37:41 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 04:37:41 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Monstro 1 combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 2 04:37:41 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":12,"creatorCardId":276,"playerToDieCardId":276,"stackEffectType":15,"killerId":239}} 
 Player 2 04:37:41 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Monstro 1 combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 2 04:37:41 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Monstro 1 combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 2 04:37:41 $REPLACE_STACK:  
 {"currentStack":[{"entityId":11,"creatorCardId":276,"entityToDoDamageCardId":239,"entityToTakeDamageCardId":276,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":12,"creatorCardId":276,"playerToDieCardId":276,"stackEffectType":15,"killerId":239}]} 
 Player 2 04:37:41 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":239}],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":10,"originStackId":-1},"isAfterActivation":true,"index":10} 
 Player 2 04:37:41 $ACTION_MASSAGE_REMOVE:  
 {"id":88} 
 Player 2 04:37:42 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":89,"_text":"Remove After Resolve CombatDamage 11  "}} 
 Player 2 04:37:42 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 04:37:42 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":11,"creatorCardId":276,"entityToDoDamageCardId":239,"entityToTakeDamageCardId":276,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 04:37:42 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":90,"_text":"Response Remove After Resolve CombatDamage 11"},"childOfId":89} 
 Player 2 04:37:42 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":91,"_text":"Wait For Response From Player 2 "},"childOfId":89} 
 Player 2 04:37:42 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 04:37:42 $ACTION_MASSAGE_REMOVE:  
 {"id":91} 
 Player 2 04:37:42 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":92,"_text":"Wait For Response From Player 1 "},"childOfId":89} 
 Player 2 04:37:42 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 04:37:42 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 04:37:42 $ACTION_MASSAGE_REMOVE:  
 {"id":92} 
 Player 2 04:37:42 $ACTION_MASSAGE_REMOVE:  
 {"id":90} 
 Player 2 04:37:42 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":93,"_text":"Resolve PlayerDeath 12 "}} 
 Player 2 04:37:42 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":239,"particleType":5} 
 Player 2 04:37:42 $CANCEL_ATTACK:  
 Player 2 04:37:42 $NEXT_STACK_ID:  
 Player 2 04:37:42 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 04:37:42 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_PAY_DEATH_PANELTIES","args":[],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":1,"originStackId":13},"isAfterActivation":false,"index":1} 
 Player 2 04:37:42 $NEXT_STACK_ID:  
 Player 2 04:37:42 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 2 04:37:42 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 2 04:37:42 $ADD_TO_STACK:  
 {"stackEffect":{"effectCollectedData":null,"entityId":14,"creatorCardId":276,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":277,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":277,"effctType":3},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 04:37:42 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":94,"_text":"Add ActivatePassiveEffect 14 "}} 
 Player 2 04:37:42 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 2 04:37:42 $ACTION_MASSAGE_REMOVE:  
 {"id":94} 
 Player 2 04:37:42 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 2 04:37:42 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"effectCollectedData":null,"entityId":14,"creatorCardId":276,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":277,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":277,"effctType":3},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 04:37:42 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":95,"_text":"Response Adding ActivatePassiveEffect 14"},"childOfId":94} 
 Player 2 04:37:42 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":96,"_text":"Wait For Response From Player 1 "},"childOfId":94} 
 Player 2 04:37:42 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 04:37:42 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 04:37:43 $ACTION_MASSAGE_REMOVE:  
 {"id":78} 
 Player 2 04:37:43 $ACTION_MASSAGE_REMOVE:  
 {"id":96} 
 Player 2 04:37:43 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":97,"_text":"Wait For Response From Player 2 "},"childOfId":94} 
 Player 2 04:37:43 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 04:37:43 $ACTION_MASSAGE_REMOVE:  
 {"id":97} 
 Player 2 04:37:43 $ACTION_MASSAGE_REMOVE:  
 {"id":95} 
 Player 2 04:37:43 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":98,"_text":"Resolve ActivatePassiveEffect 14 "}} 
 Player 2 04:37:43 $ACTIVATE_PARTICLE_EFFECT:  
 {"cardId":277,"particleType":6} 
 Player 2 04:37:43 $ACTION_MASSAGE_REMOVE:  
 {"id":83} 
 Player 2 04:37:43 $ACTION_MASSAGE_REMOVE:  
 {"id":84} 
 Player 2 04:37:44 $ACTION_MASSAGE_REMOVE:  
 {"id":89} 
 Player 2 04:37:45 $DISABLE_PARTICLE_EFFECT:  
 {"cardId":277,"particleType":6} 
 Player 2 04:37:45 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":99,"_text":"Fizzle PlayerDeathPenalties 13"}} 
 Player 2 04:37:45 $UPDATE_PASSIVE_DATA:  
 {"passiveData":{"passiveEvent":"PLAYER_PAY_DEATH_PANELTIES","args":[],"result":null,"preventMethod":true,"methodScopeId":276,"scopeIsPlayer":true,"index":1,"originStackId":13},"isAfterActivation":false,"index":1} 
 Player 2 04:37:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 2 04:37:45 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"effectCollectedData":null,"entityId":14,"creatorCardId":276,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":277,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 04:37:45 $ACTION_MASSAGE_REMOVE:  
 {"id":98} 
 Player 2 04:37:45 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":100,"_text":"Remove After Resolve ActivatePassiveEffect 14  "}} 
 Player 2 04:37:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 04:37:45 $REMOVE_FROM_STACK:  
 {"stackEffect":{"effectCollectedData":null,"entityId":14,"creatorCardId":276,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":277,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 04:37:45 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":101,"_text":"Response Remove After Resolve ActivatePassiveEffect 14"},"childOfId":100} 
 Player 2 04:37:45 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":102,"_text":"Wait For Response From Player 2 "},"childOfId":100} 
 Player 2 04:37:45 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 04:37:45 $ACTION_MASSAGE_REMOVE:  
 {"id":102} 
 Player 2 04:37:45 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":103,"_text":"Wait For Response From Player 1 "},"childOfId":100} 
 Player 2 04:37:45 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 04:37:45 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 04:37:46 $ACTION_MASSAGE_REMOVE:  
 {"id":103} 
 Player 2 04:37:46 $ACTION_MASSAGE_REMOVE:  
 {"id":101} 
 Player 2 04:37:46 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":104,"_text":"Resolve PlayerDeath 12 "}} 
 Player 2 04:37:46 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 04:37:46 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":13,"creatorCardId":276,"playerToPayCardId":276,"stackEffectType":16}} 
 Player 2 04:37:46 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 04:37:46 $REPLACE_STACK:  
 {"currentStack":[{"entityId":12,"creatorCardId":276,"playerToDieCardId":276,"stackEffectType":15,"killerId":239}]} 
 Player 2 04:37:46 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 04:37:46 $UPDATE_STACK_EFFECT:  
 {"stackEffect":{"entityId":12,"creatorCardId":276,"playerToDieCardId":276,"stackEffectType":15,"killerId":239}} 
 Player 2 04:37:46 $ACTION_MASSAGE_REMOVE:  
 {"id":93} 
 Player 2 04:37:46 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":105,"_text":"Remove After Resolve PlayerDeath 12  "}} 
 Player 2 04:37:46 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 04:37:46 $REMOVE_FROM_STACK:  
 {"stackEffect":{"entityId":12,"creatorCardId":276,"playerToDieCardId":276,"stackEffectType":15,"killerId":239}} 
 Player 2 04:37:46 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":106,"_text":"Response Remove After Resolve PlayerDeath 12"},"childOfId":105} 
 Player 2 04:37:46 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":107,"_text":"Wait For Response From Player 1 "},"childOfId":105} 
 Player 2 04:37:46 $GIVE_PLAYER_PRIORITY:  
 {"playerId":1} 
 Player 2 04:37:46 $GET_REACTION:  
 {"playerId":1,"activePlayerId":2} 
 Player 2 04:37:47 $ACTION_MASSAGE_REMOVE:  
 {"id":107} 
 Player 2 04:37:47 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":108,"_text":"Wait For Response From Player 2 "},"childOfId":105} 
 Player 2 04:37:47 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 04:37:47 $ACTION_MASSAGE_REMOVE:  
 {"id":108} 
 Player 2 04:37:47 $ACTION_MASSAGE_REMOVE:  
 {"id":106} 
 Player 2 04:37:47 $ACTION_MASSAGE_ADD:  
 {"massage":{"_id":109,"_text":"Stack Was Emptied "}} 
 Player 2 04:37:47 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 04:37:47 $ACTION_MASSAGE_REMOVE:  
 {"id":71} 
 Player 2 04:37:47 $ACTION_MASSAGE_REMOVE:  
 {"id":72} 
 Player 2 04:37:47 $ACTION_MASSAGE_REMOVE:  
 {"id":78} 
 Player 2 04:37:47 $ACTION_MASSAGE_REMOVE:  
 {"id":82} 
 Player 2 04:37:47 $GIVE_PLAYER_PRIORITY:  
 {"playerId":2} 
 Player 2 04:37:47 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 04:37:47 $ACTION_MASSAGE_REMOVE:  
 {"id":71} 
 Player 2 04:37:47 $ACTION_MASSAGE_REMOVE:  
 {"id":72} 
 Player 2 04:37:47 $REPLACE_STACK:  
 {"currentStack":[]} 
 Player 2 04:37:47 $END_TURN:  
 Player 2 04:37:47 $SET_TURN:  
 {"playerId":1} 
 Player 2 04:37:47 $START_TURN:  
 {"playerId":1} 
 Player 2 04:37:47 $ACTION_MASSAGE_REMOVE:  
 {"id":72} 
 Player 2 04:37:47 $ACTION_MASSAGE_REMOVE:  
 {"id":71} 
 Player 2 04:37:48 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 04:37:48 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 04:37:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 04:37:48 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 04:37:48 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:37:48 $ACTION_MASSAGE_REMOVE:  
 {"id":99} 
 Player 2 04:37:48 $ACTION_MASSAGE_REMOVE:  
 {"id":100} 
 Player 2 04:37:48 $ACTION_MASSAGE_REMOVE:  
 {"id":109} 
 Player 2 04:37:49 $MOVE_CARD_END:  
 {"moveIndex":13,"cardId":96,"flipIfFlipped":false,"playerId":1} 
 Player 2 04:37:49 $ACTION_MASSAGE_REMOVE:  
 {"id":105} 
 Player 2 04:37:49 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 04:37:49 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 04:37:49 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 04:37:49 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 04:37:49 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:38:08 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 04:38:08 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 04:38:08 $MOVE_CARD_END:  
 {"moveIndex":14,"cardId":96,"flipIfFlipped":true,"playerId":1} 
 Player 2 04:38:09 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Counterfiet Penny "} 
 Player 2 04:38:09 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Counterfiet Penny "} 
 Player 2 04:38:09 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:38:11 $MOVE_CARD_END:  
 {"moveIndex":15,"cardId":96,"flipIfFlipped":true,"playerId":1} 
 Player 2 04:38:12 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Counterfiet Penny "} 
 Player 2 04:38:12 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Counterfiet Penny "} 
 Player 2 04:38:12 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Counterfiet Penny "} 
 Player 2 04:38:12 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Counterfiet Penny "} 
 Player 2 04:38:12 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:38:39 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 04:38:39 $UPDATE_STACK_LABLE:  
 {"stackText":"Empty Stack"} 
 Player 2 04:38:42 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 activated Eden"} 
 Player 2 04:38:42 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 activated Eden"} 
 Player 2 04:38:42 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:38:44 $MOVE_CARD_END:  
 {"moveIndex":16,"cardId":117,"flipIfFlipped":true,"playerId":1} 
 Player 2 04:38:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 activated Eden"} 
 Player 2 04:38:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 activated Eden"} 
 Player 2 04:38:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Pill Purple "} 
 Player 2 04:38:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Pill Purple "} 
 Player 2 04:38:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Pill Purple "} 
 Player 2 04:38:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Pill Purple "} 
 Player 2 04:38:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 activated Eden"} 
 Player 2 04:38:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 activated Eden"} 
 Player 2 04:38:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 activated Eden"} 
 Player 2 04:38:45 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 activated Eden"} 
 Player 2 04:38:50 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false} 
 Player 2 04:38:51 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Pill Purple "} 
 Player 2 04:38:51 $UPDATE_STACK_LABLE:  
 {"stackText":" \n1:Player 1 play Pill Purple "} 
 Player 2 04:38:51 $RESPOND_TO:  
 {"playerId":1,"stackEffectResponse":false}