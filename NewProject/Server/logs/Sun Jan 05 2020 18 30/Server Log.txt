Start Log 

 Player 1 18:30:15 $MATCH:  

 Player 1 18:30:16 $START_GAME:  

 Player 2 18:30:16 $MOVE_TO_TABLE:  

 Player 1 18:30:16 $MOVE_TO_TABLE:  

 Player 2 18:30:24 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 1 18:30:24 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 18:30:24 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":276,"itemCardId":277} 

 Player 2 18:30:24 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":263}],"result":true,"preventMethod":false,"methodScopeId":262,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 18:30:24 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":262,"itemCardId":263} 

 Player 2 18:30:24 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[86,76,45,77,17,113,41,46,80,110,119,8,106,51,36,40,85,115,130,22,78,35,82,52,13,108,101,129,48,143,135,44,28,96,131,118,126,66,55,139,97,91,24,62,75,105,71,111,53,38,100,93,87,98,124,125,114,120,43,137,121,59,73,83,33,123,92,21,117,63,23,58,67,11,14,50,94,9,61,103,56,65,90,64,89,112,10,68,69,133,102,84,122,134,127,109,26,140,57,136,49,47,18,29,142,30,20,60,25,34,27,70,32,31,79,39,128,12,81,138,74,19,15,141,7,107,99,72,104,88,95,16,42,116,37,54,132]} 

 Player 2 18:30:24 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[257,217,259,251,247,249,243,250,235,223,229,254,228,232,208,236,239,221,258,253,220,209,226,234,248,225,213,237,241,215,219,256,255,242,207,214,206,216,230,227,238,246,224,218,245,233,231,222,244,240,210,211,212,252]} 

 Player 2 18:30:24 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[150,200,203,179,177,173,148,176,171,152,174,146,163,197,192,183,164,153,199,156,168,149,202,201,167,191,184,154,185,178,157,170,198,194,196,162,169,166,180,189,160,188,151,159,181,175,193,190,186,182,165,147,172,195,187,155,158,161]} 

 Player 2 18:30:24 $DRAW_CARD:  
{"deckType":5} 

 Player 2 18:30:24 $FLIP_CARD:  
{"cardId":161} 

 Player 2 18:30:24 $ADD_STORE_CARD:  
{"cardId":161} 

 Player 2 18:30:24 $DRAW_CARD:  
{"deckType":5} 

 Player 2 18:30:24 $FLIP_CARD:  
{"cardId":158} 

 Player 2 18:30:24 $ADD_STORE_CARD:  
{"cardId":158} 

 Player 2 18:30:24 $DRAW_CARD:  
{"deckType":2} 

 Player 2 18:30:24 $FLIP_CARD:  
{"cardId":252} 

 Player 2 18:30:24 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":252} 

 Player 2 18:30:24 $NEW_MONSTER_ON_PLACE:  
{"cardId":252,"monsterPlaceId":1} 

 Player 2 18:30:24 $DRAW_CARD:  
{"deckType":2} 

 Player 2 18:30:24 $FLIP_CARD:  
{"cardId":212} 

 Player 2 18:30:24 $REGISTER_PASSIVE_ITEM:  
{"cardId":212} 

 Player 2 18:30:24 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":212} 

 Player 2 18:30:24 $NEW_MONSTER_ON_PLACE:  
{"cardId":212,"monsterPlaceId":2} 

 Player 2 18:30:24 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 18:30:24 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 18:30:25 $DRAW_CARD:  
{"deckType":1} 

 Player 2 18:30:25 $MOVE_CARD:  
{"moveIndex":1,"cardId":132,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 18:30:25 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":277}],"result":true,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 18:30:25 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":132,"flipIfFlipped":false,"playerId":2} 

 Player 2 18:30:25 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":132} 

 Player 2 18:30:25 $FLIP_CARD:  
{"cardId":132} 

 Player 2 18:30:25 $FLIP_CARD:  
{"cardId":132} 

 Player 2 18:30:25 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":132} 

 Player 2 18:30:25 $DRAW_CARD:  
{"deckType":1} 

 Player 2 18:30:25 $MOVE_CARD:  
{"moveIndex":2,"cardId":54,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 18:30:25 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":54,"flipIfFlipped":false,"playerId":2} 

 Player 2 18:30:25 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":54} 

 Player 2 18:30:25 $FLIP_CARD:  
{"cardId":54} 

 Player 2 18:30:25 $FLIP_CARD:  
{"cardId":54} 

 Player 2 18:30:25 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":54} 

 Player 2 18:30:26 $DRAW_CARD:  
{"deckType":1} 

 Player 2 18:30:26 $MOVE_CARD:  
{"moveIndex":3,"cardId":37,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 18:30:26 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":37,"flipIfFlipped":false,"playerId":2} 

 Player 2 18:30:26 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":37} 

 Player 2 18:30:26 $FLIP_CARD:  
{"cardId":37} 

 Player 2 18:30:26 $FLIP_CARD:  
{"cardId":37} 

 Player 2 18:30:26 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":37} 

 Player 2 18:30:26 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 18:30:26 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":262,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 18:30:26 $DRAW_CARD:  
{"deckType":1} 

 Player 2 18:30:26 $MOVE_CARD:  
{"moveIndex":4,"cardId":116,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 18:30:26 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":116,"flipIfFlipped":false,"playerId":2} 

 Player 2 18:30:26 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":116} 

 Player 2 18:30:26 $FLIP_CARD:  
{"cardId":116} 

 Player 2 18:30:27 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":116} 

 Player 2 18:30:27 $DRAW_CARD:  
{"deckType":1} 

 Player 2 18:30:27 $MOVE_CARD:  
{"moveIndex":5,"cardId":42,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 18:30:27 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":42,"flipIfFlipped":false,"playerId":2} 

 Player 2 18:30:27 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":42} 

 Player 2 18:30:27 $FLIP_CARD:  
{"cardId":42} 

 Player 2 18:30:27 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":42} 

 Player 2 18:30:27 $DRAW_CARD:  
{"deckType":1} 

 Player 2 18:30:27 $MOVE_CARD:  
{"moveIndex":6,"cardId":16,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 18:30:27 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":16,"flipIfFlipped":false,"playerId":2} 

 Player 2 18:30:27 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":16} 

 Player 2 18:30:27 $FLIP_CARD:  
{"cardId":16} 

 Player 2 18:30:27 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":16} 

 Player 2 18:30:28 $GAME_HAS_STARTED:  

 Player 2 18:30:28 $SET_TURN:  
{"playerId":2} 

 Player 2 18:30:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:30:28 $NEXT_STACK_ID:  

 Player 2 18:30:28 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:30:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 18:30:28 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":262,"turnPlayerCardId":262,"stackEffectType":13}} 

 Player 2 18:30:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 18:30:28 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":262,"turnPlayerCardId":262,"stackEffectType":13}} 

 Player 2 18:30:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 2 18:30:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:30:28 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 18:30:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 18:30:28 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":262,"turnPlayerCardId":262,"stackEffectType":13}} 

 Player 2 18:30:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 2 18:30:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 2 18:30:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:30:28 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 18:30:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 2 18:30:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 18:30:28 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 18:30:28 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:30:28 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:30:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 18:30:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 18:30:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 18:30:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 18:30:28 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 18:30:28 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 18:30:28 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 18:30:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 2 18:30:28 $DRAW_CARD:  
{"deckType":1} 

 Player 2 18:30:28 $MOVE_CARD:  
{"moveIndex":7,"cardId":95,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 18:30:29 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":95,"flipIfFlipped":false,"playerId":2} 

 Player 2 18:30:29 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":95} 

 Player 2 18:30:29 $FLIP_CARD:  
{"cardId":95} 

 Player 2 18:30:29 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":95} 

 Player 2 18:30:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 18:30:29 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":262,"turnPlayerCardId":262,"stackEffectType":13}} 

 Player 2 18:30:29 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 18:30:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:30:29 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":262,"turnPlayerCardId":262,"stackEffectType":13}} 

 Player 2 18:30:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 2 18:30:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:30:29 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":262,"turnPlayerCardId":262,"stackEffectType":13}} 

 Player 2 18:30:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 2 18:30:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 2 18:30:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 18:30:29 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 18:30:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 18:30:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 18:30:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 18:30:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 18:30:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 18:30:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 18:30:29 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 18:30:29 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 2 18:30:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 2 18:30:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:30:29 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 2 18:30:29 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 2 18:30:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 2 18:30:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:30:29 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 18:30:29 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 18:30:30 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 18:30:30 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 18:30:30 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 18:30:30 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 18:30:30 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 18:30:30 $UPDATE_ACTIONS:  

 Player 2 18:30:31 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 18:30:32 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 18:30:37 $NEXT_STACK_ID:  

 Player 2 18:30:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:30:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Forever Alone"} 

 Player 2 18:30:37 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":262,"hasLockingStackEffect":false,"itemToPlayCardId":263,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 18:30:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Forever Alone"} 

 Player 2 18:30:37 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":262,"hasLockingStackEffect":false,"itemToPlayCardId":263,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 18:30:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add ActivateItem 2 "}} 

 Player 1 18:30:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:30:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:30:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Forever Alone"} 

 Player 1 18:30:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Forever Alone"} 

 Player 2 18:30:41 $SHOW_DECISION:  
{"startCardId":263,"endCardId":276} 

 Player 2 18:30:44 $USE_ITEM:  
{"cardId":263} 

 Player 2 18:30:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:30:44 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 18:30:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Forever Alone"} 

 Player 2 18:30:44 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":262,"hasLockingStackEffect":false,"itemToPlayCardId":263,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 18:30:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding ActivateItem 2"},"childOfId":10} 

 Player 2 18:30:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 2 18:30:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:30:44 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 2 18:30:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 2 18:30:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 18:30:44 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 18:30:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Forever Alone"} 

 Player 1 18:30:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Forever Alone"} 

 Player 1 18:30:44 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 18:30:44 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 2 18:30:45 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 2 18:30:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve ActivateItem 2 "}} 

 Player 2 18:30:45 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":263,"particleType":6} 

 Player 2 18:30:46 $DISABLE_PARTICLE_EFFECT:  
{"cardId":263,"particleType":6} 

 Player 2 18:30:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Forever Alone"} 

 Player 2 18:30:47 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":262,"hasLockingStackEffect":false,"itemToPlayCardId":263,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 18:30:47 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 18:30:47 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:30:47 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":262,"hasLockingStackEffect":false,"itemToPlayCardId":263,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 18:30:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve ActivateItem 2  "}} 

 Player 2 18:30:47 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:30:47 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":262,"hasLockingStackEffect":false,"itemToPlayCardId":263,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 18:30:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve ActivateItem 2"},"childOfId":15} 

 Player 2 18:30:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 2 18:30:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 18:30:47 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 18:30:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Forever Alone"} 

 Player 1 18:30:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Forever Alone"} 

 Player 1 18:30:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Forever Alone"} 

 Player 1 18:30:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Forever Alone"} 

 Player 1 18:30:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Forever Alone"} 

 Player 1 18:30:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Forever Alone"} 

 Player 1 18:30:47 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 18:30:47 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 18:30:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 2 18:30:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:30:47 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 2 18:30:47 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 2 18:30:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 2 18:30:47 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:30:47 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 18:30:47 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 18:30:47 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 18:30:47 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 18:30:47 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 18:30:47 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 18:30:47 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 18:30:47 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 18:30:47 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 18:30:47 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 18:30:47 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 18:30:49 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 18:30:49 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 18:31:30 $MOVE_CARD:  
{"moveIndex":8,"cardId":157,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 

 Player 1 18:31:30 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":157,"flipIfFlipped":true,"playerId":2} 

 Player 2 18:31:30 $REGISTER_PASSIVE_ITEM:  
{"cardId":157} 

 Player 2 18:31:30 $MOVE_CARD:  
{"moveIndex":9,"cardId":157,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 

 Player 1 18:31:31 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":157,"flipIfFlipped":true,"playerId":2} 

 Player 2 18:31:31 $ADD_AN_ITEM:  
{"playerId":2,"cardId":157,"isReward":true} 

 Player 2 18:31:31 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":157}],"result":true,"preventMethod":false,"methodScopeId":262,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 2 18:31:38 $NEXT_STACK_ID:  

 Player 2 18:31:38 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:31:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Chub"} 

 Player 2 18:31:38 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":262,"attackingPlayerCardId":262,"idOfCardBeingAttacked":212,"stackEffectType":4}} 

 Player 2 18:31:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Chub"} 

 Player 2 18:31:38 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":262,"attackingPlayerCardId":262,"idOfCardBeingAttacked":212,"stackEffectType":4}} 

 Player 2 18:31:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add DeclareAttack 3 "}} 

 Player 2 18:31:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:31:38 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 18:31:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Chub"} 

 Player 2 18:31:38 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":262,"attackingPlayerCardId":262,"idOfCardBeingAttacked":212,"stackEffectType":4}} 

 Player 2 18:31:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding DeclareAttack 3"},"childOfId":20} 

 Player 2 18:31:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 2 18:31:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:31:38 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 2 18:31:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 2 18:31:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 18:31:38 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 18:31:38 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:31:38 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:31:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Chub"} 

 Player 1 18:31:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Chub"} 

 Player 1 18:31:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Chub"} 

 Player 1 18:31:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Chub"} 

 Player 1 18:31:38 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 18:31:38 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 2 18:31:39 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 2 18:31:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve DeclareAttack 3 "}} 

 Player 2 18:31:39 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":212,"particleType":5} 

 Player 2 18:31:39 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":262,"scopeIsPlayer":true,"index":5,"originStackId":3},"isAfterActivation":true,"index":5} 

 Player 2 18:31:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Chub"} 

 Player 2 18:31:39 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":262,"attackingPlayerCardId":262,"idOfCardBeingAttacked":212,"stackEffectType":4}} 

 Player 2 18:31:39 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 18:31:39 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:31:39 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":262,"attackingPlayerCardId":262,"idOfCardBeingAttacked":212,"stackEffectType":4}} 

 Player 2 18:31:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Remove After Resolve DeclareAttack 3  "}} 

 Player 2 18:31:39 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:31:39 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":262,"attackingPlayerCardId":262,"idOfCardBeingAttacked":212,"stackEffectType":4}} 

 Player 2 18:31:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Response Remove After Resolve DeclareAttack 3"},"childOfId":25} 

 Player 2 18:31:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Wait For Response From Player 1 "},"childOfId":25} 

 Player 2 18:31:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 18:31:39 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 18:31:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Chub"} 

 Player 1 18:31:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Chub"} 

 Player 1 18:31:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Chub"} 

 Player 1 18:31:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Chub"} 

 Player 1 18:31:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Chub"} 

 Player 1 18:31:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Chub"} 

 Player 1 18:31:39 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 18:31:39 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 2 18:31:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":25} 

 Player 2 18:31:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:31:39 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 2 18:31:39 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 2 18:31:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Stack Was Emptied "}} 

 Player 2 18:31:39 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:31:39 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 18:31:39 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 18:31:39 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 18:31:39 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 18:31:39 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 18:31:40 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 18:31:40 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 18:31:40 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 18:31:40 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 18:31:40 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 18:31:40 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 18:31:40 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 18:31:40 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 18:31:40 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 18:31:40 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 18:31:41 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 18:31:41 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 18:31:42 $NEXT_STACK_ID:  

 Player 2 18:31:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:31:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Chub<Monster>"} 

 Player 2 18:31:42 $ADD_TO_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":262,"rollingPlayerCardId":262,"stackEffectType":2,"attackedMonsterCardId":212}} 

 Player 2 18:31:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Chub<Monster>"} 

 Player 2 18:31:42 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":262,"rollingPlayerCardId":262,"stackEffectType":2,"attackedMonsterCardId":212}} 

 Player 2 18:31:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Add AttackRoll 4 "}} 

 Player 2 18:31:42 $ROLL_DICE:  
{"playerId":2} 

 Player 1 18:31:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:31:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:31:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Chub<Monster>"} 

 Player 1 18:31:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Chub<Monster>"} 

 Player 2 18:31:44 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":5} 

 Player 2 18:31:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 5 vs Chub<Monster>"} 

 Player 2 18:31:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:31:44 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 18:31:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 5 vs Chub<Monster>"} 

 Player 2 18:31:44 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":262,"numberRolled":5,"rollingPlayerCardId":262,"stackEffectType":2,"attackedMonsterCardId":212}} 

 Player 2 18:31:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Response Adding AttackRoll 4"},"childOfId":30} 

 Player 2 18:31:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Wait For Response From Player 2 "},"childOfId":30} 

 Player 2 18:31:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:31:44 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 2 18:31:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":30} 

 Player 2 18:31:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 18:31:44 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 18:31:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Chub<Monster>"} 

 Player 1 18:31:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Chub<Monster>"} 

 Player 1 18:31:44 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 18:31:44 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 2 18:31:44 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 2 18:31:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Resolve AttackRoll 4 "}} 

 Player 2 18:31:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Added 0 to original roll"}} 

 Player 2 18:31:44 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":262,"scopeIsPlayer":true,"index":1,"originStackId":4},"isAfterActivation":false,"index":1} 

 Player 2 18:31:44 $NEXT_STACK_ID:  

 Player 2 18:31:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 5 vs Chub<Monster>"} 

 Player 2 18:31:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 5 vs Chub<Monster> \n2:Activate Dads Lost Coin effect Reroll Dice Passive<Reroll Dice Passive>"} 

 Player 2 18:31:44 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":5,"creatorCardId":262,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":157,"effectToDo":{"effectName":"RerollDicePassive","cardEffectNum":0,"cardPlayerId":2,"cardId":157,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 18:31:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 5 vs Chub<Monster> \n2:Activate Dads Lost Coin effect Reroll Dice Passive<Reroll Dice Passive>"} 

 Player 2 18:31:44 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":5,"creatorCardId":262,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":157,"effectToDo":{"effectName":"RerollDicePassive","cardEffectNum":0,"cardPlayerId":2,"cardId":157,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 18:31:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Add ActivatePassiveEffect 5 "}} 

 Player 2 18:31:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 5 vs Chub<Monster> \n2:Activate Dads Lost Coin effect Reroll Dice Passive<Reroll Dice Passive>"} 

 Player 2 18:31:45 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 2 18:31:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 5 vs Chub<Monster> \n2:Activate Dads Lost Coin effect Reroll Dice Passive<Reroll Dice Passive>"} 

 Player 2 18:31:45 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[262],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":262,"effectCardPlayer":262},"entityId":5,"creatorCardId":262,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":157,"effectToDo":{"effectName":"RerollDicePassive","cardEffectNum":0,"cardPlayerId":2,"cardId":157,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 18:31:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Response Adding ActivatePassiveEffect 5"},"childOfId":36} 

 Player 2 18:31:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 1 "},"childOfId":36} 

 Player 2 18:31:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 18:31:45 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 18:31:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Chub<Monster>"} 

 Player 1 18:31:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Chub<Monster>"} 

 Player 1 18:31:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Chub<Monster> \n2:Activate Dads Lost Coin "} 

 Player 1 18:31:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Chub<Monster> \n2:Activate Dads Lost Coin "} 

 Player 1 18:31:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Chub<Monster> \n2:Activate Dads Lost Coin "} 

 Player 1 18:31:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Chub<Monster> \n2:Activate Dads Lost Coin "} 

 Player 1 18:31:45 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 18:31:45 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 2 18:31:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Wait For Response From Player 2 "},"childOfId":36} 

 Player 2 18:31:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:31:45 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 18:31:45 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 2 18:31:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Resolve ActivatePassiveEffect 5 "}} 

 Player 2 18:31:45 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":157,"particleType":6} 

 Player 2 18:31:47 $DISABLE_PARTICLE_EFFECT:  
{"cardId":157,"particleType":6} 

 Player 2 18:31:47 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 18:31:50 $ROLL_DICE:  
{"playerId":2} 

 Player 2 18:31:52 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":5} 

 Player 2 18:31:52 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":262,"scopeIsPlayer":false,"index":1,"originStackId":4},"isAfterActivation":false,"index":1} 

 Player 2 18:31:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 5 vs Chub<Monster> \n2:Activate Dads Lost Coin effect Reroll Dice Passive<Reroll Dice Passive>"} 

 Player 2 18:31:52 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[262],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":262,"effectCardPlayer":262},"entityId":5,"creatorCardId":262,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":157,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 18:31:52 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 18:31:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 5 vs Chub<Monster>"} 

 Player 2 18:31:52 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[262],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":262,"effectCardPlayer":262},"entityId":5,"creatorCardId":262,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":157,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 18:31:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Remove After Resolve ActivatePassiveEffect 5  "}} 

 Player 2 18:31:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 5 vs Chub<Monster>"} 

 Player 2 18:31:52 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[262],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":262,"effectCardPlayer":262},"entityId":5,"creatorCardId":262,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":157,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 18:31:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Response Remove After Resolve ActivatePassiveEffect 5"},"childOfId":41} 

 Player 2 18:31:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 2 "},"childOfId":41} 

 Player 2 18:31:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:31:53 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 2 18:31:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Wait For Response From Player 1 "},"childOfId":41} 

 Player 2 18:31:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 18:31:53 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 18:31:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Chub<Monster> \n2:Activate Dads Lost Coin "} 

 Player 1 18:31:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Chub<Monster> \n2:Activate Dads Lost Coin "} 

 Player 1 18:31:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Chub<Monster> \n2:Activate Dads Lost Coin "} 

 Player 1 18:31:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Chub<Monster> \n2:Activate Dads Lost Coin "} 

 Player 1 18:31:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Chub<Monster> \n2:Activate Dads Lost Coin "} 

 Player 1 18:31:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Chub<Monster> \n2:Activate Dads Lost Coin "} 

 Player 1 18:31:53 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 18:31:53 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 18:31:53 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 2 18:31:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Resolve AttackRoll 4 "}} 

 Player 2 18:31:53 $NEXT_STACK_ID:  

 Player 2 18:31:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 5 vs Chub<Monster>"} 

 Player 2 18:31:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:31:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Chub \n2:Player 2 rolled 5 vs Chub<Monster>"} 

 Player 2 18:31:53 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":262,"entityToDoDamageCardId":262,"entityToTakeDamageCardId":212,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 18:31:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Chub \n2:Player 2 rolled 5 vs Chub<Monster>"} 

 Player 2 18:31:53 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":262,"numberRolled":5,"rollingPlayerCardId":262,"stackEffectType":2,"attackedMonsterCardId":212}} 

 Player 2 18:31:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Chub \n2:Player 2 rolled 5 vs Chub<Monster>"} 

 Player 2 18:31:53 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":262,"entityToDoDamageCardId":262,"entityToTakeDamageCardId":212,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 18:31:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Chub \n2:Player 2 rolled 5 vs Chub<Monster>"} 

 Player 2 18:31:53 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":262,"numberRolled":5,"rollingPlayerCardId":262,"stackEffectType":2,"attackedMonsterCardId":212}} 

 Player 2 18:31:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Chub \n2:Player 2 rolled 5 vs Chub<Monster>"} 

 Player 2 18:31:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Chub \n2:Player 2 rolled 5 vs Chub<Monster>"} 

 Player 2 18:31:53 $REPLACE_STACK:  
{"currentStack":[{"entityId":6,"creatorCardId":262,"entityToDoDamageCardId":262,"entityToTakeDamageCardId":212,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":4,"creatorCardId":262,"numberRolled":5,"rollingPlayerCardId":262,"stackEffectType":2,"attackedMonsterCardId":212}]} 

 Player 2 18:31:53 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":262,"scopeIsPlayer":false,"index":1,"originStackId":4},"isAfterActivation":true,"index":1} 

 Player 2 18:31:53 $LOG_ERROR:  
{"message":"\"Cannot read property 'name' of null\"","stack":"\"TypeError: Cannot read property 'name' of null\\n    at PlayerRollNumber.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardConditions/PlayerRollNumber.js:35:43)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\\n    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\\n    at new Promise (<anonymous>)\\n    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\\n    at PlayerRollNumber.testCondition (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardConditions/PlayerRollNumber.js:27:16)\\n    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:290:56)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\""} 
//////Error From Player 2////
  

 Player 2 18:31:53 $LOG_ERROR:  
//////Error From Player 2////

 "\"Cannot read property 'name' of null\""

 + "\"TypeError: Cannot read property 'name' of null\
    at PlayerRollNumber.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardConditions/PlayerRollNumber.js:35:43)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\
    at new Promise (<anonymous>)\
    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\
    at PlayerRollNumber.testCondition (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardConditions/PlayerRollNumber.js:27:16)\
    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:290:56)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\""

////// 
//////Error From Player 2////

 "\"Cannot read property 'name' of null\""

 + "\"TypeError: Cannot read property 'name' of null\
    at PlayerRollNumber.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardConditions/PlayerRollNumber.js:35:43)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\
    at new Promise (<anonymous>)\
    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\
    at PlayerRollNumber.testCondition (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardConditions/PlayerRollNumber.js:27:16)\
    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:290:56)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\""

////// 

 Player 2 18:31:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Chub \n2:Player 2 rolled 5 vs Chub<Monster>"} 

 Player 2 18:31:53 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":262,"numberRolled":5,"rollingPlayerCardId":262,"stackEffectType":2,"attackedMonsterCardId":212}} 

 Player 2 18:31:53 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 18:31:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Chub"} 

 Player 2 18:31:54 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":262,"numberRolled":5,"rollingPlayerCardId":262,"stackEffectType":2,"attackedMonsterCardId":212}} 

 Player 2 18:31:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Remove After Resolve AttackRoll 4  "}} 

 Player 2 18:31:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Chub"} 

 Player 2 18:31:54 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":262,"numberRolled":5,"rollingPlayerCardId":262,"stackEffectType":2,"attackedMonsterCardId":212}} 

 Player 2 18:31:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Response Remove After Resolve AttackRoll 4"},"childOfId":46} 

 Player 2 18:31:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Wait For Response From Player 2 "},"childOfId":46} 

 Player 2 18:31:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:31:54 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 2 18:31:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Wait For Response From Player 1 "},"childOfId":46} 

 Player 2 18:31:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 18:31:54 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 18:31:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Chub<Monster>"} 

 Player 1 18:31:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Chub<Monster>"} 

 Player 1 18:31:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Chub"} 

 Player 1 18:31:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Chub"} 

 Player 1 18:31:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Chub"} 

 Player 1 18:31:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Chub"} 

 Player 1 18:31:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Chub"} 

 Player 1 18:31:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Chub"} 

 Player 1 18:31:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Chub"} 

 Player 1 18:31:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Chub"} 

 Player 1 18:31:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Chub"} 

 Player 1 18:31:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Chub"} 

 Player 1 18:31:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Chub \n2:Player 2 is rolling against Chub<Monster>"} 

 Player 1 18:31:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Chub \n2:Player 2 is rolling against Chub<Monster>"} 

 Player 1 18:31:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Chub \n2:Player 2 is rolling against Chub<Monster>"} 

 Player 1 18:31:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Chub \n2:Player 2 is rolling against Chub<Monster>"} 

 Player 1 18:31:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Chub \n2:Player 2 is rolling against Chub<Monster>"} 

 Player 1 18:31:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Chub \n2:Player 2 is rolling against Chub<Monster>"} 

 Player 1 18:31:55 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 18:31:55 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 2 18:31:55 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 2 18:31:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Resolve CombatDamage 6 "}} 

 Player 2 18:31:55 $MONSTER_GET_DAMAGED:  
{"cardId":212,"hpLeft":3,"damageDealerId":262} 

 Player 2 18:31:55 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":262}],"result":null,"preventMethod":false,"methodScopeId":212,"scopeIsPlayer":false,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 

 Player 2 18:31:55 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":5},{"type":0,"number":262},{"type":0,"number":212}],"result":null,"preventMethod":false,"methodScopeId":262,"scopeIsPlayer":true,"index":7,"originStackId":6},"isAfterActivation":true,"index":7} 

 Player 2 18:31:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Chub"} 

 Player 2 18:31:55 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":262,"entityToDoDamageCardId":262,"entityToTakeDamageCardId":212,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 18:31:55 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 2 18:31:55 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:31:55 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":262,"entityToDoDamageCardId":262,"entityToTakeDamageCardId":212,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 18:31:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Remove After Resolve CombatDamage 6  "}} 

 Player 2 18:31:55 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:31:55 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":262,"entityToDoDamageCardId":262,"entityToTakeDamageCardId":212,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 18:31:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Response Remove After Resolve CombatDamage 6"},"childOfId":51} 

 Player 2 18:31:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Wait For Response From Player 1 "},"childOfId":51} 

 Player 2 18:31:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 18:31:55 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 2 18:31:55 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 1 18:31:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Chub"} 

 Player 1 18:31:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Chub"} 

 Player 1 18:31:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Chub"} 

 Player 1 18:31:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Chub"} 

 Player 1 18:31:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Chub"} 

 Player 1 18:31:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Chub"} 

 Player 1 18:31:55 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 18:31:55 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 2 18:31:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Wait For Response From Player 2 "},"childOfId":51} 

 Player 2 18:31:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:31:56 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 2 18:31:56 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 2 18:31:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Stack Was Emptied "}} 

 Player 2 18:31:56 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:31:56 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 18:31:56 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 18:31:56 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 18:31:56 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 18:31:56 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 18:31:56 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 18:31:56 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 18:31:56 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 18:31:56 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 18:31:56 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 18:31:56 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 18:31:56 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 18:31:56 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 18:31:56 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 18:31:56 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 18:31:56 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 18:31:56 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 18:31:56 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 18:31:56 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 2 18:31:56 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 18:31:56 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 2 18:31:56 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 2 18:31:56 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 2 18:31:56 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 2 18:31:56 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 2 18:31:56 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 2 18:31:56 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 2 18:31:57 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 2 18:31:58 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 2 18:33:34 $MATCH: 