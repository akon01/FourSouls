Start Log 

 Player 1 23:13:43 $MATCH:  

 Player 1 23:13:43 $START_GAME:  

 Player 2 23:13:43 $MOVE_TO_TABLE:  

 Player 1 23:13:43 $MOVE_TO_TABLE:  

 Player 1 23:13:59 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 23:13:59 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 2 23:13:59 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":284,"itemCardId":285} 

 Player 2 23:13:59 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":293}],"result":true,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 23:13:59 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":292,"itemCardId":293} 

 Player 2 23:13:59 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[17,103,87,125,124,44,15,52,135,11,85,83,126,32,95,38,40,62,142,98,106,55,129,23,47,77,139,31,94,102,110,104,114,116,36,81,73,119,49,26,37,111,60,12,45,109,25,112,21,64,34,72,105,140,48,88,59,76,33,22,123,101,133,35,91,57,99,8,13,16,86,108,24,128,41,63,122,79,84,27,9,30,71,113,56,97,39,96,53,93,29,117,54,78,19,127,82,66,70,18,107,20,28,138,14,118,131,10,42,141,90,121,89,69,74,7,51,67,58,50,120,136,43,61,80,75,46,92,137,130,100,68,132,115,65,134]} 

 Player 2 23:13:59 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[237,278,232,252,263,265,258,244,248,231,243,251,241,266,236,239,228,269,277,259,233,255,250,242,281,272,270,249,247,264,257,238,267,262,234,274,254,240,279,273,246,260,271,261,245,276,256,280,235,230,253,275,268,229]} 

 Player 2 23:13:59 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[182,170,157,165,210,212,196,204,215,146,191,159,180,214,150,197,172,168,184,163,223,198,151,213,205,221,156,177,169,158,199,176,186,222,203,160,200,181,185,217,152,202,220,207,188,192,164,166,218,179,162,174,193,219,211,171,178,187,190,161,173,209,189,183,216,201,153,224,208,147,206,149,194,195,155,225,167,175,145,154,148]} 

 Player 2 23:13:59 $DRAW_CARD:  
{"deckType":5} 

 Player 2 23:13:59 $FLIP_CARD:  
{"cardId":148} 

 Player 2 23:13:59 $ADD_STORE_CARD:  
{"cardId":148} 

 Player 2 23:13:59 $DRAW_CARD:  
{"deckType":5} 

 Player 2 23:13:59 $FLIP_CARD:  
{"cardId":154} 

 Player 2 23:14:00 $ADD_STORE_CARD:  
{"cardId":154} 

 Player 2 23:14:00 $DRAW_CARD:  
{"deckType":2} 

 Player 2 23:14:00 $FLIP_CARD:  
{"cardId":229} 

 Player 2 23:14:00 $REGISTER_PASSIVE_ITEM:  
{"cardId":229} 

 Player 2 23:14:00 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":229} 

 Player 2 23:14:00 $NEW_MONSTER_ON_PLACE:  
{"cardId":229,"monsterPlaceId":1} 

 Player 2 23:14:00 $DRAW_CARD:  
{"deckType":2} 

 Player 2 23:14:00 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":268} 

 Player 2 23:14:00 $DRAW_CARD:  
{"deckType":2} 

 Player 2 23:14:00 $FLIP_CARD:  
{"cardId":275} 

 Player 2 23:14:00 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":275} 

 Player 2 23:14:00 $NEW_MONSTER_ON_PLACE:  
{"cardId":275,"monsterPlaceId":2} 

 Player 2 23:14:00 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 23:14:00 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":284,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 23:14:00 $DRAW_CARD:  
{"deckType":1} 

 Player 2 23:14:00 $MOVE_CARD:  
{"moveIndex":1,"cardId":134,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 23:14:00 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":285}],"result":true,"preventMethod":false,"methodScopeId":284,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 23:14:00 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":134,"flipIfFlipped":false,"playerId":2} 

 Player 2 23:14:00 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":134} 

 Player 2 23:14:00 $FLIP_CARD:  
{"cardId":134} 

 Player 2 23:14:01 $FLIP_CARD:  
{"cardId":134} 

 Player 2 23:14:01 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":134} 

 Player 2 23:14:01 $DRAW_CARD:  
{"deckType":1} 

 Player 2 23:14:01 $MOVE_CARD:  
{"moveIndex":2,"cardId":65,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 23:14:01 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":65,"flipIfFlipped":false,"playerId":2} 

 Player 2 23:14:01 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":65} 

 Player 2 23:14:01 $FLIP_CARD:  
{"cardId":65} 

 Player 2 23:14:01 $FLIP_CARD:  
{"cardId":65} 

 Player 2 23:14:01 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":65} 

 Player 2 23:14:01 $DRAW_CARD:  
{"deckType":1} 

 Player 2 23:14:01 $MOVE_CARD:  
{"moveIndex":3,"cardId":115,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 23:14:02 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":115,"flipIfFlipped":false,"playerId":2} 

 Player 2 23:14:02 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":115} 

 Player 2 23:14:02 $FLIP_CARD:  
{"cardId":115} 

 Player 2 23:14:02 $FLIP_CARD:  
{"cardId":115} 

 Player 2 23:14:02 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":115} 

 Player 2 23:14:02 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 23:14:02 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 23:14:02 $DRAW_CARD:  
{"deckType":1} 

 Player 2 23:14:02 $MOVE_CARD:  
{"moveIndex":4,"cardId":132,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 23:14:02 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":132,"flipIfFlipped":false,"playerId":2} 

 Player 2 23:14:02 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":132} 

 Player 2 23:14:02 $FLIP_CARD:  
{"cardId":132} 

 Player 2 23:14:02 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":132} 

 Player 2 23:14:02 $DRAW_CARD:  
{"deckType":1} 

 Player 2 23:14:02 $MOVE_CARD:  
{"moveIndex":5,"cardId":68,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 23:14:03 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":68,"flipIfFlipped":false,"playerId":2} 

 Player 2 23:14:03 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":68} 

 Player 2 23:14:03 $FLIP_CARD:  
{"cardId":68} 

 Player 2 23:14:03 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":68} 

 Player 2 23:14:03 $DRAW_CARD:  
{"deckType":1} 

 Player 2 23:14:03 $MOVE_CARD:  
{"moveIndex":6,"cardId":100,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 23:14:03 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":100,"flipIfFlipped":false,"playerId":2} 

 Player 2 23:14:03 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":100} 

 Player 2 23:14:03 $FLIP_CARD:  
{"cardId":100} 

 Player 2 23:14:03 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":100} 

 Player 2 23:14:03 $GAME_HAS_STARTED:  

 Player 2 23:14:03 $SET_TURN:  
{"playerId":1} 

 Player 2 23:14:03 $START_TURN:  
{"playerId":1} 

 Player 2 23:14:03 $UPDATE_ACTIONS:  

 Player 1 23:14:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:14:03 $NEXT_STACK_ID:  

 Player 1 23:14:03 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:14:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 23:14:03 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":284,"turnPlayerCardId":284,"stackEffectType":13}} 

 Player 1 23:14:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 23:14:03 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":284,"turnPlayerCardId":284,"stackEffectType":13}} 

 Player 1 23:14:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 1 23:14:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:14:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 23:14:04 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":284,"turnPlayerCardId":284,"stackEffectType":13}} 

 Player 1 23:14:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 1 23:14:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 1 23:14:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:14:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 1 23:14:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 23:14:04 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 23:14:04 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:14:04 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:14:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 23:14:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 23:14:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 23:14:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 23:14:04 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 23:14:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 1 23:14:04 $DRAW_CARD:  
{"deckType":1} 

 Player 1 23:14:04 $MOVE_CARD:  
{"moveIndex":7,"cardId":130,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 23:14:04 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":130,"flipIfFlipped":false,"playerId":1} 

 Player 1 23:14:04 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":130} 

 Player 1 23:14:04 $FLIP_CARD:  
{"cardId":130} 

 Player 1 23:14:04 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":130} 

 Player 1 23:14:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 23:14:04 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":284,"turnPlayerCardId":284,"stackEffectType":13}} 

 Player 1 23:14:04 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:14:04 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":284,"turnPlayerCardId":284,"stackEffectType":13}} 

 Player 1 23:14:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 1 23:14:04 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:14:04 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":284,"turnPlayerCardId":284,"stackEffectType":13}} 

 Player 1 23:14:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 1 23:14:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 1 23:14:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 23:14:05 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 23:14:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 23:14:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 23:14:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 23:14:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 23:14:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 23:14:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 23:14:05 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 23:14:05 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 1 23:14:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 1 23:14:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:14:05 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 1 23:14:05 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 1 23:14:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 1 23:14:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:14:38 $SHOW_DECISION:  
{"startCardId":284,"endCardId":285} 

 Player 1 23:14:41 $NEXT_STACK_ID:  

 Player 1 23:14:41 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:14:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Forever Alone"} 

 Player 1 23:14:41 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":284,"hasLockingStackEffect":false,"itemToPlayCardId":285,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 23:14:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Forever Alone"} 

 Player 1 23:14:41 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":284,"hasLockingStackEffect":false,"itemToPlayCardId":285,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 23:14:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add ActivateItem 2 "}} 

 Player 2 23:14:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:14:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:14:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Forever Alone"} 

 Player 2 23:14:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Forever Alone"} 

 Player 1 23:15:10 $SHOW_EFFECT_CHOSEN:  
{"cardId":285,"pos":{"x":-1334.672,"y":-291.4090000000001},"size":{"w":980,"h":65}} 

 Player 1 23:15:29 $SHOW_DECISION:  
{"startCardId":285,"endCardId":292} 

 Player 1 23:15:32 $USE_ITEM:  
{"cardId":285} 

 Player 1 23:15:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:15:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Forever Alone"} 

 Player 1 23:15:32 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":284,"hasLockingStackEffect":false,"itemToPlayCardId":285,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 23:15:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding ActivateItem 2"},"childOfId":10} 

 Player 1 23:15:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 1 23:15:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:15:32 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 1 23:15:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 1 23:15:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 23:15:32 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 23:15:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Forever Alone"} 

 Player 2 23:15:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Forever Alone"} 

 Player 2 23:15:32 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 23:15:32 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 1 23:15:32 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 1 23:15:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve ActivateItem 2 "}} 

 Player 1 23:15:32 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":285,"particleType":6} 

 Player 1 23:15:34 $DISABLE_PARTICLE_EFFECT:  
{"cardId":285,"particleType":6} 

 Player 1 23:15:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Forever Alone"} 

 Player 1 23:15:34 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":284,"hasLockingStackEffect":false,"itemToPlayCardId":285,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 23:15:34 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:15:34 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":284,"hasLockingStackEffect":false,"itemToPlayCardId":285,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 23:15:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve ActivateItem 2  "}} 

 Player 1 23:15:34 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:15:34 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":284,"hasLockingStackEffect":false,"itemToPlayCardId":285,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 23:15:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve ActivateItem 2"},"childOfId":15} 

 Player 1 23:15:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 1 23:15:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 23:15:34 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 23:15:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Forever Alone"} 

 Player 2 23:15:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Forever Alone"} 

 Player 2 23:15:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Forever Alone"} 

 Player 2 23:15:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Forever Alone"} 

 Player 2 23:15:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Forever Alone"} 

 Player 2 23:15:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Forever Alone"} 

 Player 2 23:15:34 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 23:15:34 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 1 23:15:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 1 23:15:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:15:34 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 1 23:15:34 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 1 23:15:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 1 23:15:35 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:15:54 $SHOW_DECISION:  
{"startCardId":284,"endCardId":284} 

 Player 1 23:15:57 $NEXT_STACK_ID:  

 Player 1 23:15:57 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:15:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blue Baby"} 

 Player 1 23:15:57 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":284,"hasLockingStackEffect":false,"itemToPlayCardId":284,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 23:15:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blue Baby"} 

 Player 1 23:15:57 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":284,"hasLockingStackEffect":false,"itemToPlayCardId":284,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 23:15:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add ActivateItem 3 "}} 

 Player 2 23:15:57 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:15:57 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:15:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blue Baby"} 

 Player 2 23:15:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blue Baby"} 

 Player 1 23:16:00 $SHOW_DECISION:  
{"startCardId":284,"endCardId":65,"flipEndCard":true} 

 Player 1 23:16:03 $USE_ITEM:  
{"cardId":284} 

 Player 1 23:16:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:16:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blue Baby"} 

 Player 1 23:16:03 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":284,"hasLockingStackEffect":false,"itemToPlayCardId":284,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 23:16:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding ActivateItem 3"},"childOfId":20} 

 Player 1 23:16:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 1 23:16:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:16:03 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 1 23:16:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 1 23:16:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 23:16:03 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 23:16:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blue Baby"} 

 Player 2 23:16:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blue Baby"} 

 Player 2 23:16:03 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 23:16:03 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 1 23:16:03 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 1 23:16:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve ActivateItem 3 "}} 

 Player 1 23:16:03 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":284,"particleType":6} 

 Player 1 23:16:05 $DISABLE_PARTICLE_EFFECT:  
{"cardId":284,"particleType":6} 

 Player 1 23:16:05 $NEXT_STACK_ID:  

 Player 1 23:16:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blue Baby"} 

 Player 1 23:16:05 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":65} 

 Player 1 23:16:05 $MOVE_CARD:  
{"moveIndex":8,"cardId":65,"placeID":300,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 23:16:06 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":65,"flipIfFlipped":true,"playerId":1} 

 Player 1 23:16:06 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":65} 

 Player 1 23:16:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(5): addMoney \n2:Player 1 activated Blue Baby"} 

 Player 1 23:16:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:16:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(5): addMoney \n2:Player 1 activated Blue Baby"} 

 Player 1 23:16:06 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":284,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":65,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":65,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 23:16:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(5): addMoney \n2:Player 1 activated Blue Baby"} 

 Player 1 23:16:06 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":284,"hasLockingStackEffect":false,"itemToPlayCardId":284,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 23:16:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(5): addMoney \n2:Player 1 activated Blue Baby"} 

 Player 1 23:16:06 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":284,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":65,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":65,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 23:16:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(5): addMoney \n2:Player 1 activated Blue Baby"} 

 Player 1 23:16:06 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":284,"hasLockingStackEffect":false,"itemToPlayCardId":284,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 23:16:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(5): addMoney \n2:Player 1 activated Blue Baby"} 

 Player 1 23:16:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(5): addMoney \n2:Player 1 activated Blue Baby"} 

 Player 1 23:16:06 $REPLACE_STACK:  
{"currentStack":[{"entityId":4,"creatorCardId":284,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":65,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":65,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":3,"creatorCardId":284,"hasLockingStackEffect":false,"itemToPlayCardId":284,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 

 Player 1 23:16:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(5): addMoney \n2:Player 1 activated Blue Baby"} 

 Player 1 23:16:06 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":284,"hasLockingStackEffect":false,"itemToPlayCardId":284,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 23:16:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(5): addMoney"} 

 Player 1 23:16:06 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":284,"hasLockingStackEffect":false,"itemToPlayCardId":284,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 23:16:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Remove After Resolve ActivateItem 3  "}} 

 Player 1 23:16:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(5): addMoney"} 

 Player 1 23:16:06 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":284,"hasLockingStackEffect":false,"itemToPlayCardId":284,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 23:16:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Response Remove After Resolve ActivateItem 3"},"childOfId":25} 

 Player 1 23:16:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Wait For Response From Player 1 "},"childOfId":25} 

 Player 1 23:16:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:16:06 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 1 23:16:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":25} 

 Player 1 23:16:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 23:16:06 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 23:16:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blue Baby"} 

 Player 2 23:16:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blue Baby"} 

 Player 2 23:16:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(5) "} 

 Player 2 23:16:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(5) "} 

 Player 2 23:16:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(5) "} 

 Player 2 23:16:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(5) "} 

 Player 2 23:16:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(5) "} 

 Player 2 23:16:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(5) "} 

 Player 2 23:16:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(5) "} 

 Player 2 23:16:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(5) "} 

 Player 2 23:16:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(5) "} 

 Player 2 23:16:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(5) "} 

 Player 2 23:16:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(5)  \n2:Player 1 activated Blue Baby"} 

 Player 2 23:16:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(5)  \n2:Player 1 activated Blue Baby"} 

 Player 2 23:16:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(5)  \n2:Player 1 activated Blue Baby"} 

 Player 2 23:16:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(5)  \n2:Player 1 activated Blue Baby"} 

 Player 2 23:16:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(5)  \n2:Player 1 activated Blue Baby"} 

 Player 2 23:16:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(5)  \n2:Player 1 activated Blue Baby"} 

 Player 2 23:16:07 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 23:16:07 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 1 23:16:07 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 1 23:16:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Resolve PlayLootCardStackEffect 4 "}} 

 Player 1 23:16:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(5): addMoney"} 

 Player 1 23:16:07 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":65,"particleType":6} 

 Player 1 23:16:09 $DISABLE_PARTICLE_EFFECT:  
{"cardId":65,"particleType":6} 

 Player 1 23:16:09 $SET_MONEY:  
{"playerId":1,"numOfCoins":8} 

 Player 1 23:16:09 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":284,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 1 23:16:09 $REMOVE_FROM_PILE:  
{"cardId":65} 

 Player 1 23:16:09 $MOVE_CARD:  
{"moveIndex":9,"cardId":65,"placeID":301,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 23:16:09 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":65,"flipIfFlipped":true,"playerId":1} 

 Player 1 23:16:09 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":65} 

 Player 1 23:16:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(5): addMoney"} 

 Player 1 23:16:09 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":284,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":65,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 23:16:09 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:16:09 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":284,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":65,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 23:16:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Remove After Resolve PlayLootCardStackEffect 4  "}} 

 Player 1 23:16:09 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:16:09 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":284,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":65,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 23:16:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Response Remove After Resolve PlayLootCardStackEffect 4"},"childOfId":30} 

 Player 1 23:16:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Wait For Response From Player 2 "},"childOfId":30} 

 Player 1 23:16:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 23:16:10 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 23:16:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(5) "} 

 Player 2 23:16:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(5) "} 

 Player 2 23:16:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(5) "} 

 Player 2 23:16:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(5) "} 

 Player 2 23:16:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(5) "} 

 Player 2 23:16:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(5) "} 

 Player 2 23:16:10 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 23:16:10 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 1 23:16:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":30} 

 Player 1 23:16:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:16:10 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 1 23:16:10 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 1 23:16:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Stack Was Emptied "}} 

 Player 1 23:16:10 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:16:39 $SHOW_DECISION:  
{"startCardId":284,"endCardId":229} 

 Player 1 23:16:42 $NEXT_STACK_ID:  

 Player 1 23:16:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:16:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Begotten"} 

 Player 1 23:16:42 $ADD_TO_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":284,"attackingPlayerCardId":284,"idOfCardBeingAttacked":229,"stackEffectType":4}} 

 Player 1 23:16:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Begotten"} 

 Player 1 23:16:42 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":284,"attackingPlayerCardId":284,"idOfCardBeingAttacked":229,"stackEffectType":4}} 

 Player 1 23:16:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Add DeclareAttack 5 "}} 

 Player 1 23:16:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:16:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Begotten"} 

 Player 1 23:16:42 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":284,"attackingPlayerCardId":284,"idOfCardBeingAttacked":229,"stackEffectType":4}} 

 Player 1 23:16:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Response Adding DeclareAttack 5"},"childOfId":35} 

 Player 1 23:16:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Wait For Response From Player 1 "},"childOfId":35} 

 Player 1 23:16:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:16:42 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 1 23:16:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 2 "},"childOfId":35} 

 Player 1 23:16:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 23:16:42 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 23:16:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:16:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:16:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Begotten"} 

 Player 2 23:16:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Begotten"} 

 Player 2 23:16:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Begotten"} 

 Player 2 23:16:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Begotten"} 

 Player 2 23:16:42 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 23:16:42 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 1 23:16:42 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 1 23:16:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Resolve DeclareAttack 5 "}} 

 Player 1 23:16:43 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":229,"particleType":5} 

 Player 1 23:16:43 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":284,"scopeIsPlayer":true,"index":3,"originStackId":5},"isAfterActivation":true,"index":3} 

 Player 1 23:16:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Begotten"} 

 Player 1 23:16:43 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":284,"attackingPlayerCardId":284,"idOfCardBeingAttacked":229,"stackEffectType":4}} 

 Player 1 23:16:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:16:43 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":284,"attackingPlayerCardId":284,"idOfCardBeingAttacked":229,"stackEffectType":4}} 

 Player 1 23:16:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Remove After Resolve DeclareAttack 5  "}} 

 Player 1 23:16:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:16:43 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":284,"attackingPlayerCardId":284,"idOfCardBeingAttacked":229,"stackEffectType":4}} 

 Player 1 23:16:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Response Remove After Resolve DeclareAttack 5"},"childOfId":40} 

 Player 1 23:16:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Wait For Response From Player 2 "},"childOfId":40} 

 Player 1 23:16:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 23:16:43 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 23:16:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Begotten"} 

 Player 2 23:16:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Begotten"} 

 Player 2 23:16:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Begotten"} 

 Player 2 23:16:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Begotten"} 

 Player 2 23:16:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Begotten"} 

 Player 2 23:16:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Begotten"} 

 Player 2 23:16:43 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 23:16:43 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 1 23:16:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 1 "},"childOfId":40} 

 Player 1 23:16:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:16:43 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 1 23:16:43 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 1 23:16:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Stack Was Emptied "}} 

 Player 1 23:16:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:16:51 $NEXT_STACK_ID:  

 Player 1 23:16:51 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:16:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Begotten<Monster>"} 

 Player 1 23:16:51 $ADD_TO_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":284,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":229}} 

 Player 1 23:16:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Begotten<Monster>"} 

 Player 1 23:16:51 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":284,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":229}} 

 Player 1 23:16:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Add AttackRoll 6 "}} 

 Player 1 23:16:51 $ROLL_DICE:  
{"playerId":1} 

 Player 2 23:16:51 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:16:52 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:16:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Begotten<Monster>"} 

 Player 2 23:16:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Begotten<Monster>"} 

 Player 1 23:16:53 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":2} 

 Player 1 23:16:53 $UPDATE_STACK_VIS:  
{"stackId":6,"text":"player rolled 2 vs Begotten<Monster>"} 

 Player 1 23:16:53 $SHOW_DICE_ROLL:  
{"stackId":6} 

 Player 1 23:16:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Begotten<Monster>"} 

 Player 1 23:16:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:16:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Begotten<Monster>"} 

 Player 1 23:16:57 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":284,"numberRolled":2,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":229}} 

 Player 1 23:16:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Response Adding AttackRoll 6"},"childOfId":45} 

 Player 1 23:16:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Wait For Response From Player 1 "},"childOfId":45} 

 Player 1 23:16:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:16:57 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 1 23:16:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Wait For Response From Player 2 "},"childOfId":45} 

 Player 1 23:16:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 23:16:57 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 23:16:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Begotten<Monster>"} 

 Player 2 23:16:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Begotten<Monster>"} 

 Player 2 23:16:57 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 23:16:57 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 1 23:16:57 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 1 23:16:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Resolve AttackRoll 6 "}} 

 Player 1 23:16:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Added 0 to original roll"}} 

 Player 1 23:16:57 $NEXT_STACK_ID:  

 Player 1 23:16:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Begotten<Monster>"} 

 Player 1 23:16:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:16:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby \n2:Player 1 rolled 2 vs Begotten<Monster>"} 

 Player 1 23:16:57 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":284,"entityToDoDamageCardId":229,"entityToTakeDamageCardId":284,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 23:16:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby \n2:Player 1 rolled 2 vs Begotten<Monster>"} 

 Player 1 23:16:57 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":284,"numberRolled":2,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":229}} 

 Player 1 23:16:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby \n2:Player 1 rolled 2 vs Begotten<Monster>"} 

 Player 1 23:16:57 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":284,"entityToDoDamageCardId":229,"entityToTakeDamageCardId":284,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 23:16:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby \n2:Player 1 rolled 2 vs Begotten<Monster>"} 

 Player 1 23:16:57 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":284,"numberRolled":2,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":229}} 

 Player 1 23:16:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby \n2:Player 1 rolled 2 vs Begotten<Monster>"} 

 Player 1 23:16:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby \n2:Player 1 rolled 2 vs Begotten<Monster>"} 

 Player 1 23:16:57 $REPLACE_STACK:  
{"currentStack":[{"entityId":7,"creatorCardId":284,"entityToDoDamageCardId":229,"entityToTakeDamageCardId":284,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":6,"creatorCardId":284,"numberRolled":2,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":229}]} 

 Player 1 23:16:57 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":2},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":284,"scopeIsPlayer":true,"index":4,"originStackId":6},"isAfterActivation":true,"index":4} 

 Player 1 23:16:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby \n2:Player 1 rolled 2 vs Begotten<Monster>"} 

 Player 1 23:16:57 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":284,"numberRolled":2,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":229}} 

 Player 1 23:16:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby"} 

 Player 1 23:16:57 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":284,"numberRolled":2,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":229}} 

 Player 1 23:16:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Remove After Resolve AttackRoll 6  "}} 

 Player 1 23:16:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby"} 

 Player 1 23:16:57 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":284,"numberRolled":2,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":229}} 

 Player 1 23:16:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Response Remove After Resolve AttackRoll 6"},"childOfId":51} 

 Player 1 23:16:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Wait For Response From Player 1 "},"childOfId":51} 

 Player 1 23:16:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:16:58 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 1 23:16:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Wait For Response From Player 2 "},"childOfId":51} 

 Player 1 23:16:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 23:16:58 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 23:16:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Begotten<Monster>"} 

 Player 2 23:16:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Begotten<Monster>"} 

 Player 2 23:16:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby"} 

 Player 2 23:16:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby"} 

 Player 2 23:16:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby"} 

 Player 2 23:16:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby"} 

 Player 2 23:16:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby"} 

 Player 2 23:16:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby"} 

 Player 2 23:16:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby"} 

 Player 2 23:16:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby"} 

 Player 2 23:16:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby"} 

 Player 2 23:16:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby"} 

 Player 2 23:16:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby \n2:Player 1 is rolling against Begotten<Monster>"} 

 Player 2 23:16:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby \n2:Player 1 is rolling against Begotten<Monster>"} 

 Player 2 23:16:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby \n2:Player 1 is rolling against Begotten<Monster>"} 

 Player 2 23:16:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby \n2:Player 1 is rolling against Begotten<Monster>"} 

 Player 2 23:16:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby \n2:Player 1 is rolling against Begotten<Monster>"} 

 Player 2 23:16:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby \n2:Player 1 is rolling against Begotten<Monster>"} 

 Player 2 23:16:58 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 23:16:58 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 1 23:16:58 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 1 23:16:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Resolve CombatDamage 7 "}} 

 Player 1 23:16:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten 1 combat damage to Blue Baby"} 

 Player 1 23:16:58 $UPDATE_STACK_VIS:  
{"stackId":7,"text":"Begotten will deal 1 combat damage to Blue Baby"} 

 Player 1 23:16:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten 1 combat damage to Blue Baby"} 

 Player 1 23:16:58 $PLAYER_GET_HIT:  
{"playerId":1,"damage":1,"damageDealerId":229} 

 Player 1 23:16:58 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":229}],"result":null,"preventMethod":false,"methodScopeId":284,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 1 23:16:58 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_TAKEN","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":0,"number":229}],"result":null,"preventMethod":false,"methodScopeId":284,"scopeIsPlayer":true,"index":6,"originStackId":7},"isAfterActivation":true,"index":6} 

 Player 1 23:16:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten 1 combat damage to Blue Baby"} 

 Player 1 23:16:58 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":284,"entityToDoDamageCardId":229,"entityToTakeDamageCardId":284,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 23:16:58 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:16:58 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":284,"entityToDoDamageCardId":229,"entityToTakeDamageCardId":284,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 23:16:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":56,"_text":"Remove After Resolve CombatDamage 7  "}} 

 Player 1 23:16:58 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:16:58 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":284,"entityToDoDamageCardId":229,"entityToTakeDamageCardId":284,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 23:16:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":57,"_text":"Response Remove After Resolve CombatDamage 7"},"childOfId":56} 

 Player 1 23:16:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":58,"_text":"Wait For Response From Player 2 "},"childOfId":56} 

 Player 1 23:16:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 23:16:59 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 23:16:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby"} 

 Player 2 23:16:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby"} 

 Player 2 23:16:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby"} 

 Player 2 23:16:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby"} 

 Player 2 23:16:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby"} 

 Player 2 23:16:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby"} 

 Player 2 23:16:59 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 23:16:59 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 1 23:16:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":59,"_text":"Wait For Response From Player 1 "},"childOfId":56} 

 Player 1 23:16:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:16:59 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 1 23:16:59 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 1 23:16:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":60,"_text":"Stack Was Emptied "}} 

 Player 1 23:16:59 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:17:00 $NEXT_STACK_ID:  

 Player 1 23:17:00 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:17:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Begotten<Monster>"} 

 Player 1 23:17:00 $ADD_TO_STACK:  
{"stackEffect":{"entityId":8,"creatorCardId":284,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":229}} 

 Player 1 23:17:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Begotten<Monster>"} 

 Player 1 23:17:00 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":284,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":229}} 

 Player 1 23:17:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":61,"_text":"Add AttackRoll 8 "}} 

 Player 1 23:17:00 $ROLL_DICE:  
{"playerId":1} 

 Player 2 23:17:00 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:17:00 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:17:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Begotten<Monster>"} 

 Player 2 23:17:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Begotten<Monster>"} 

 Player 1 23:17:02 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":3} 

 Player 1 23:17:02 $UPDATE_STACK_VIS:  
{"stackId":8,"text":"player rolled 3 vs Begotten<Monster>"} 

 Player 1 23:17:02 $SHOW_DICE_ROLL:  
{"stackId":8} 

 Player 1 23:17:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 3 vs Begotten<Monster>"} 

 Player 1 23:17:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:17:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 3 vs Begotten<Monster>"} 

 Player 1 23:17:05 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":284,"numberRolled":3,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":229}} 

 Player 1 23:17:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":62,"_text":"Response Adding AttackRoll 8"},"childOfId":61} 

 Player 1 23:17:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":63,"_text":"Wait For Response From Player 1 "},"childOfId":61} 

 Player 1 23:17:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:17:05 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 1 23:17:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":64,"_text":"Wait For Response From Player 2 "},"childOfId":61} 

 Player 1 23:17:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 23:17:05 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 23:17:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Begotten<Monster>"} 

 Player 2 23:17:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Begotten<Monster>"} 

 Player 2 23:17:05 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 23:17:05 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 1 23:17:05 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 1 23:17:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":65,"_text":"Resolve AttackRoll 8 "}} 

 Player 1 23:17:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":66,"_text":"Added 0 to original roll"}} 

 Player 1 23:17:05 $NEXT_STACK_ID:  

 Player 1 23:17:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 3 vs Begotten<Monster>"} 

 Player 1 23:17:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:17:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby \n2:Player 1 rolled 3 vs Begotten<Monster>"} 

 Player 1 23:17:05 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":284,"entityToDoDamageCardId":229,"entityToTakeDamageCardId":284,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 23:17:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby \n2:Player 1 rolled 3 vs Begotten<Monster>"} 

 Player 1 23:17:05 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":284,"numberRolled":3,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":229}} 

 Player 1 23:17:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby \n2:Player 1 rolled 3 vs Begotten<Monster>"} 

 Player 1 23:17:05 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":284,"entityToDoDamageCardId":229,"entityToTakeDamageCardId":284,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 23:17:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby \n2:Player 1 rolled 3 vs Begotten<Monster>"} 

 Player 1 23:17:05 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":284,"numberRolled":3,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":229}} 

 Player 1 23:17:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby \n2:Player 1 rolled 3 vs Begotten<Monster>"} 

 Player 1 23:17:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby \n2:Player 1 rolled 3 vs Begotten<Monster>"} 

 Player 1 23:17:05 $REPLACE_STACK:  
{"currentStack":[{"entityId":9,"creatorCardId":284,"entityToDoDamageCardId":229,"entityToTakeDamageCardId":284,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":8,"creatorCardId":284,"numberRolled":3,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":229}]} 

 Player 1 23:17:05 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":3},{"type":2,"number":1},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":284,"scopeIsPlayer":true,"index":7,"originStackId":8},"isAfterActivation":true,"index":7} 

 Player 1 23:17:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby \n2:Player 1 rolled 3 vs Begotten<Monster>"} 

 Player 1 23:17:05 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":284,"numberRolled":3,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":229}} 

 Player 1 23:17:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby"} 

 Player 1 23:17:05 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":284,"numberRolled":3,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":229}} 

 Player 1 23:17:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":67,"_text":"Remove After Resolve AttackRoll 8  "}} 

 Player 1 23:17:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby"} 

 Player 1 23:17:05 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":8,"creatorCardId":284,"numberRolled":3,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":229}} 

 Player 1 23:17:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":68,"_text":"Response Remove After Resolve AttackRoll 8"},"childOfId":67} 

 Player 1 23:17:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":69,"_text":"Wait For Response From Player 1 "},"childOfId":67} 

 Player 1 23:17:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:17:06 $ACTION_MASSAGE_REMOVE:  
{"id":69} 

 Player 1 23:17:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":70,"_text":"Wait For Response From Player 2 "},"childOfId":67} 

 Player 1 23:17:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 23:17:06 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 23:17:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Begotten<Monster>"} 

 Player 2 23:17:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Begotten<Monster>"} 

 Player 2 23:17:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby"} 

 Player 2 23:17:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby"} 

 Player 2 23:17:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby"} 

 Player 2 23:17:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby"} 

 Player 2 23:17:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby"} 

 Player 2 23:17:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby"} 

 Player 2 23:17:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby"} 

 Player 2 23:17:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby"} 

 Player 2 23:17:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby"} 

 Player 2 23:17:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby"} 

 Player 2 23:17:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby \n2:Player 1 is rolling against Begotten<Monster>"} 

 Player 2 23:17:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby \n2:Player 1 is rolling against Begotten<Monster>"} 

 Player 2 23:17:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby \n2:Player 1 is rolling against Begotten<Monster>"} 

 Player 2 23:17:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby \n2:Player 1 is rolling against Begotten<Monster>"} 

 Player 2 23:17:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby \n2:Player 1 is rolling against Begotten<Monster>"} 

 Player 2 23:17:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby \n2:Player 1 is rolling against Begotten<Monster>"} 

 Player 2 23:17:06 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 23:17:06 $ACTION_MASSAGE_REMOVE:  
{"id":70} 

 Player 1 23:17:06 $ACTION_MASSAGE_REMOVE:  
{"id":68} 

 Player 1 23:17:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":71,"_text":"Resolve CombatDamage 9 "}} 

 Player 1 23:17:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten 1 combat damage to Blue Baby"} 

 Player 1 23:17:06 $UPDATE_STACK_VIS:  
{"stackId":9,"text":"Begotten will deal 1 combat damage to Blue Baby"} 

 Player 1 23:17:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten 1 combat damage to Blue Baby"} 

 Player 1 23:17:06 $PLAYER_GET_HIT:  
{"playerId":1,"damage":1,"damageDealerId":229} 

 Player 1 23:17:06 $NEXT_STACK_ID:  

 Player 1 23:17:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten 1 combat damage to Blue Baby"} 

 Player 1 23:17:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:17:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten 1 combat damage to Blue Baby \n2:Player 1 is about to die"} 

 Player 1 23:17:06 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":284,"playerToDieCardId":284,"stackEffectType":15,"killerId":229}} 

 Player 1 23:17:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten 1 combat damage to Blue Baby \n2:Player 1 is about to die"} 

 Player 1 23:17:06 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":284,"entityToDoDamageCardId":229,"entityToTakeDamageCardId":284,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 23:17:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten 1 combat damage to Blue Baby \n2:Player 1 is about to die"} 

 Player 1 23:17:06 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":284,"entityToDoDamageCardId":229,"entityToTakeDamageCardId":284,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 23:17:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten 1 combat damage to Blue Baby \n2:Player 1 is about to die"} 

 Player 1 23:17:06 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":284,"playerToDieCardId":284,"stackEffectType":15,"killerId":229}} 

 Player 1 23:17:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten 1 combat damage to Blue Baby \n2:Player 1 is about to die"} 

 Player 1 23:17:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten 1 combat damage to Blue Baby \n2:Player 1 is about to die"} 

 Player 1 23:17:07 $REPLACE_STACK:  
{"currentStack":[{"entityId":9,"creatorCardId":284,"entityToDoDamageCardId":229,"entityToTakeDamageCardId":284,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":10,"creatorCardId":284,"playerToDieCardId":284,"stackEffectType":15,"killerId":229}]} 

 Player 1 23:17:07 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":229}],"result":null,"preventMethod":false,"methodScopeId":284,"scopeIsPlayer":true,"index":8,"originStackId":-1},"isAfterActivation":true,"index":8} 

 Player 1 23:17:07 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_TAKEN","args":[{"type":2,"number":1},{"type":2,"number":3},{"type":0,"number":229}],"result":null,"preventMethod":false,"methodScopeId":284,"scopeIsPlayer":true,"index":9,"originStackId":9},"isAfterActivation":true,"index":9} 

 Player 1 23:17:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 1 23:17:07 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":284,"entityToDoDamageCardId":229,"entityToTakeDamageCardId":284,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 23:17:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":72,"_text":"Remove After Resolve CombatDamage 9  "}} 

 Player 1 23:17:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 1 23:17:07 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":9,"creatorCardId":284,"entityToDoDamageCardId":229,"entityToTakeDamageCardId":284,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 23:17:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":73,"_text":"Response Remove After Resolve CombatDamage 9"},"childOfId":72} 

 Player 1 23:17:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":74,"_text":"Wait For Response From Player 1 "},"childOfId":72} 

 Player 1 23:17:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:17:07 $ACTION_MASSAGE_REMOVE:  
{"id":74} 

 Player 1 23:17:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":75,"_text":"Wait For Response From Player 2 "},"childOfId":72} 

 Player 1 23:17:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 23:17:07 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 23:17:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby"} 

 Player 2 23:17:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby"} 

 Player 2 23:17:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 23:17:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 23:17:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 23:17:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 23:17:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 23:17:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 23:17:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 23:17:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 23:17:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 23:17:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 23:17:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby \n2:Player 1 is about to die"} 

 Player 2 23:17:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby \n2:Player 1 is about to die"} 

 Player 2 23:17:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby \n2:Player 1 is about to die"} 

 Player 2 23:17:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Begotten combat damage to Blue Baby \n2:Player 1 is about to die"} 

 Player 2 23:17:07 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 23:17:07 $ACTION_MASSAGE_REMOVE:  
{"id":75} 

 Player 1 23:17:07 $ACTION_MASSAGE_REMOVE:  
{"id":73} 

 Player 1 23:17:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":76,"_text":"Resolve PlayerDeath 10 "}} 

 Player 1 23:17:07 $DISABLE_PARTICLE_EFFECT:  
{"cardId":229,"particleType":5} 

 Player 1 23:17:07 $CANCEL_ATTACK:  

 Player 1 23:17:07 $NEXT_STACK_ID:  

 Player 1 23:17:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 1 23:17:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:17:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 23:17:07 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":11,"creatorCardId":284,"playerToPayCardId":284,"stackEffectType":16}} 

 Player 1 23:17:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 23:17:07 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":284,"playerToDieCardId":284,"stackEffectType":15,"killerId":229}} 

 Player 1 23:17:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 23:17:08 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":284,"playerToDieCardId":284,"stackEffectType":15,"killerId":229}} 

 Player 1 23:17:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 23:17:08 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":284,"playerToPayCardId":284,"stackEffectType":16}} 

 Player 1 23:17:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 23:17:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 23:17:08 $REPLACE_STACK:  
{"currentStack":[{"entityId":10,"creatorCardId":284,"playerToDieCardId":284,"stackEffectType":15,"killerId":229},{"entityId":11,"creatorCardId":284,"playerToPayCardId":284,"stackEffectType":16}]} 

 Player 1 23:17:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 23:17:08 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":284,"playerToDieCardId":284,"stackEffectType":15,"killerId":229}} 

 Player 1 23:17:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 1 23:17:08 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":284,"playerToDieCardId":284,"stackEffectType":15,"killerId":229}} 

 Player 1 23:17:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":77,"_text":"Remove After Resolve PlayerDeath 10  "}} 

 Player 1 23:17:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 1 23:17:08 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":10,"creatorCardId":284,"playerToDieCardId":284,"stackEffectType":15,"killerId":229}} 

 Player 1 23:17:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":78,"_text":"Response Remove After Resolve PlayerDeath 10"},"childOfId":77} 

 Player 1 23:17:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":79,"_text":"Wait For Response From Player 1 "},"childOfId":77} 

 Player 1 23:17:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:17:08 $ACTION_MASSAGE_REMOVE:  
{"id":79} 

 Player 1 23:17:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":80,"_text":"Wait For Response From Player 2 "},"childOfId":77} 

 Player 1 23:17:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 23:17:08 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 23:17:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 23:17:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 23:17:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 23:17:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 23:17:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 23:17:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 23:17:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 23:17:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 23:17:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 23:17:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 23:17:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 23:17:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 23:17:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 2 23:17:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 2 23:17:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 2 23:17:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 2 23:17:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 2 23:17:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 2 23:17:08 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 23:17:08 $ACTION_MASSAGE_REMOVE:  
{"id":80} 

 Player 1 23:17:08 $ACTION_MASSAGE_REMOVE:  
{"id":78} 

 Player 1 23:17:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":81,"_text":"Resolve PlayerDeathPenalties 11 "}} 

 Player 1 23:17:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":82,"_text":"Player 1 pays Penalties"}} 

 Player 1 23:17:08 $SET_MONEY:  
{"playerId":1,"numOfCoins":7} 

 Player 1 23:17:09 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-1}],"result":null,"preventMethod":false,"methodScopeId":284,"scopeIsPlayer":true,"index":10,"originStackId":-1},"isAfterActivation":true,"index":10} 

 Player 1 23:17:12 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":115} 

 Player 1 23:17:12 $MOVE_CARD:  
{"moveIndex":10,"cardId":115,"placeID":301,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 23:17:12 $MOVE_CARD_END:  
{"moveIndex":10,"cardId":115,"flipIfFlipped":true,"playerId":1} 

 Player 1 23:17:12 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":115} 

 Player 1 23:17:12 $USE_ITEM:  
{"cardId":284} 

 Player 1 23:17:12 $USE_ITEM:  
{"cardId":285} 

 Player 1 23:17:12 $PLAYER_DIED:  
{"playerId":1} 

 Player 1 23:17:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 1 23:17:12 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":11,"creatorCardId":284,"playerToPayCardId":284,"stackEffectType":16}} 

 Player 1 23:17:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:17:12 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":284,"playerToPayCardId":284,"stackEffectType":16}} 

 Player 1 23:17:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":83,"_text":"Remove After Resolve PlayerDeathPenalties 11  "}} 

 Player 1 23:17:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:17:13 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":11,"creatorCardId":284,"playerToPayCardId":284,"stackEffectType":16}} 

 Player 1 23:17:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":84,"_text":"Response Remove After Resolve PlayerDeathPenalties 11"},"childOfId":83} 

 Player 1 23:17:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":85,"_text":"Wait For Response From Player 2 "},"childOfId":83} 

 Player 1 23:17:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 23:17:13 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 23:17:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 23:17:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 23:17:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 23:17:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 23:17:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 23:17:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 23:17:13 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 23:17:13 $ACTION_MASSAGE_REMOVE:  
{"id":85} 

 Player 1 23:17:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":86,"_text":"Wait For Response From Player 1 "},"childOfId":83} 

 Player 1 23:17:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:17:13 $ACTION_MASSAGE_REMOVE:  
{"id":86} 

 Player 1 23:17:13 $ACTION_MASSAGE_REMOVE:  
{"id":84} 

 Player 1 23:17:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":87,"_text":"Stack Was Emptied "}} 

 Player 1 23:17:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:17:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:17:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:17:13 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 1 23:17:13 $END_TURN:  

 Player 1 23:17:13 $SET_TURN:  
{"playerId":2} 

 Player 1 23:17:13 $START_TURN:  
{"playerId":2} 

 Player 2 23:17:13 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 23:17:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:17:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:17:13 $NEXT_STACK_ID:  

 Player 2 23:17:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:17:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 23:17:13 $ADD_TO_STACK:  
{"stackEffect":{"entityId":12,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 2 23:17:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 23:17:13 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":12,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 2 23:17:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":88,"_text":"Add StartTurnLoot 12 "}} 

 Player 2 23:17:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:17:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 23:17:13 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":12,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 2 23:17:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":89,"_text":"Response Adding StartTurnLoot 12"},"childOfId":88} 

 Player 2 23:17:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":90,"_text":"Wait For Response From Player 2 "},"childOfId":88} 

 Player 2 23:17:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:17:13 $ACTION_MASSAGE_REMOVE:  
{"id":90} 

 Player 2 23:17:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":91,"_text":"Wait For Response From Player 1 "},"childOfId":88} 

 Player 2 23:17:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:17:14 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:17:14 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 23:17:14 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:17:14 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:17:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 23:17:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 23:17:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 23:17:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 23:17:14 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:17:14 $ACTION_MASSAGE_REMOVE:  
{"id":91} 

 Player 2 23:17:14 $ACTION_MASSAGE_REMOVE:  
{"id":89} 

 Player 2 23:17:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":92,"_text":"Resolve StartTurnLoot 12 "}} 

 Player 2 23:17:14 $DRAW_CARD:  
{"deckType":1} 

 Player 2 23:17:14 $MOVE_CARD:  
{"moveIndex":11,"cardId":137,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 23:17:14 $MOVE_CARD_END:  
{"moveIndex":11,"cardId":137,"flipIfFlipped":false,"playerId":2} 

 Player 2 23:17:14 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":137} 

 Player 2 23:17:14 $FLIP_CARD:  
{"cardId":137} 

 Player 2 23:17:14 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":137} 

 Player 2 23:17:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 23:17:14 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":12,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 2 23:17:14 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:17:14 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":12,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 2 23:17:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":93,"_text":"Remove After Resolve StartTurnLoot 12  "}} 

 Player 2 23:17:14 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:17:14 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":12,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 2 23:17:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":94,"_text":"Response Remove After Resolve StartTurnLoot 12"},"childOfId":93} 

 Player 2 23:17:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":95,"_text":"Wait For Response From Player 1 "},"childOfId":93} 

 Player 2 23:17:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:17:15 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:17:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 23:17:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 23:17:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 23:17:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 23:17:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 23:17:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 23:17:15 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:17:15 $ACTION_MASSAGE_REMOVE:  
{"id":95} 

 Player 2 23:17:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":96,"_text":"Wait For Response From Player 2 "},"childOfId":93} 

 Player 2 23:17:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:17:15 $ACTION_MASSAGE_REMOVE:  
{"id":96} 

 Player 2 23:17:15 $ACTION_MASSAGE_REMOVE:  
{"id":94} 

 Player 2 23:17:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":97,"_text":"Stack Was Emptied "}} 

 Player 2 23:17:15 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:17:24 $SHOW_DECISION:  
{"startCardId":292,"endCardId":293} 

 Player 2 23:17:27 $NEXT_STACK_ID:  

 Player 2 23:17:27 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:17:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Incubus"} 

 Player 2 23:17:27 $ADD_TO_STACK:  
{"stackEffect":{"entityId":13,"creatorCardId":292,"hasLockingStackEffect":false,"itemToPlayCardId":293,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 23:17:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Incubus"} 

 Player 2 23:17:27 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":13,"creatorCardId":292,"hasLockingStackEffect":false,"itemToPlayCardId":293,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 23:17:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":98,"_text":"Add ActivateItem 13 "}} 

 Player 1 23:17:27 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:17:27 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:17:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Incubus"} 

 Player 1 23:17:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Incubus"} 

 Player 2 23:17:29 $SHOW_EFFECT_CHOSEN:  
{"cardId":293,"pos":{"x":-1334.672,"y":-370.9090000000001},"size":{"w":980,"h":155}} 

 Player 2 23:17:35 $SHOW_DECISION:  
{"startCardId":293,"endCardId":284} 

 Player 2 23:17:38 $USE_ITEM:  
{"cardId":293} 

 Player 2 23:17:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:17:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Incubus"} 

 Player 2 23:17:38 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":13,"creatorCardId":292,"hasLockingStackEffect":false,"itemToPlayCardId":293,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 23:17:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":99,"_text":"Response Adding ActivateItem 13"},"childOfId":98} 

 Player 2 23:17:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":100,"_text":"Wait For Response From Player 2 "},"childOfId":98} 

 Player 2 23:17:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:17:38 $ACTION_MASSAGE_REMOVE:  
{"id":100} 

 Player 2 23:17:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":101,"_text":"Wait For Response From Player 1 "},"childOfId":98} 

 Player 2 23:17:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:17:38 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:17:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Incubus"} 

 Player 1 23:17:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Incubus"} 

 Player 1 23:17:38 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:17:38 $ACTION_MASSAGE_REMOVE:  
{"id":101} 

 Player 2 23:17:38 $ACTION_MASSAGE_REMOVE:  
{"id":99} 

 Player 2 23:17:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":102,"_text":"Resolve ActivateItem 13 "}} 

 Player 2 23:17:38 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":293,"particleType":6} 

 Player 2 23:17:40 $DISABLE_PARTICLE_EFFECT:  
{"cardId":293,"particleType":6} 

 Player 2 23:17:58 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":137} 

 Player 2 23:17:58 $MOVE_CARD:  
{"moveIndex":12,"cardId":137,"placeID":1,"flipIfFlipped":false,"playerId":2,"placeType":"Hand"} 

 Player 1 23:17:58 $MOVE_CARD_END:  
{"moveIndex":12,"cardId":137,"flipIfFlipped":false,"playerId":2} 

 Player 2 23:17:58 $FLIP_CARD:  
{"cardId":137} 

 Player 2 23:17:58 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":137} 

 Player 2 23:17:58 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":130} 

 Player 2 23:17:58 $MOVE_CARD:  
{"moveIndex":13,"cardId":130,"placeID":2,"flipIfFlipped":false,"playerId":2,"placeType":"Hand"} 

 Player 1 23:17:59 $MOVE_CARD_END:  
{"moveIndex":13,"cardId":130,"flipIfFlipped":false,"playerId":2} 

 Player 2 23:17:59 $FLIP_CARD:  
{"cardId":130} 

 Player 2 23:17:59 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":130} 

 Player 2 23:17:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Incubus"} 

 Player 2 23:17:59 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":13,"creatorCardId":292,"hasLockingStackEffect":false,"itemToPlayCardId":293,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 23:17:59 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:17:59 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":13,"creatorCardId":292,"hasLockingStackEffect":false,"itemToPlayCardId":293,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 23:17:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":103,"_text":"Remove After Resolve ActivateItem 13  "}} 

 Player 2 23:17:59 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:17:59 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":13,"creatorCardId":292,"hasLockingStackEffect":false,"itemToPlayCardId":293,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 23:17:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":104,"_text":"Response Remove After Resolve ActivateItem 13"},"childOfId":103} 

 Player 2 23:17:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":105,"_text":"Wait For Response From Player 1 "},"childOfId":103} 

 Player 2 23:17:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:17:59 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:17:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Incubus"} 

 Player 1 23:17:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Incubus"} 

 Player 1 23:17:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Incubus"} 

 Player 1 23:17:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Incubus"} 

 Player 1 23:17:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Incubus"} 

 Player 1 23:17:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Incubus"} 

 Player 1 23:17:59 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:17:59 $ACTION_MASSAGE_REMOVE:  
{"id":105} 

 Player 2 23:17:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":106,"_text":"Wait For Response From Player 2 "},"childOfId":103} 

 Player 2 23:17:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:17:59 $ACTION_MASSAGE_REMOVE:  
{"id":106} 

 Player 2 23:17:59 $ACTION_MASSAGE_REMOVE:  
{"id":104} 

 Player 2 23:17:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":107,"_text":"Stack Was Emptied "}} 

 Player 2 23:17:59 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:18:10 $SHOW_DECISION:  
{"startCardId":292,"endCardId":227} 

 Player 2 23:18:13 $NEXT_STACK_ID:  

 Player 2 23:18:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:18:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 23:18:13 $ADD_TO_STACK:  
{"stackEffect":{"entityId":14,"creatorCardId":292,"attackingPlayerCardId":292,"idOfCardBeingAttacked":227,"stackEffectType":4}} 

 Player 2 23:18:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 23:18:13 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":14,"creatorCardId":292,"attackingPlayerCardId":292,"idOfCardBeingAttacked":227,"stackEffectType":4}} 

 Player 2 23:18:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":108,"_text":"Add DeclareAttack 14 "}} 

 Player 2 23:18:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:18:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 23:18:13 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":14,"creatorCardId":292,"attackingPlayerCardId":292,"idOfCardBeingAttacked":227,"stackEffectType":4}} 

 Player 2 23:18:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":109,"_text":"Response Adding DeclareAttack 14"},"childOfId":108} 

 Player 2 23:18:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":110,"_text":"Wait For Response From Player 2 "},"childOfId":108} 

 Player 2 23:18:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:18:14 $ACTION_MASSAGE_REMOVE:  
{"id":110} 

 Player 2 23:18:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":111,"_text":"Wait For Response From Player 1 "},"childOfId":108} 

 Player 2 23:18:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:18:14 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:18:14 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:18:14 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:18:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 23:18:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 23:18:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 23:18:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 23:18:14 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:18:14 $ACTION_MASSAGE_REMOVE:  
{"id":111} 

 Player 2 23:18:14 $ACTION_MASSAGE_REMOVE:  
{"id":109} 

 Player 2 23:18:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":112,"_text":"Resolve DeclareAttack 14 "}} 

 Player 2 23:18:14 $DRAW_CARD:  
{"deckType":2} 

 Player 2 23:18:14 $SHOW_CARD_PREVIEW:  
{"cardToShowId":253,"playerId":2} 

 Player 2 23:18:24 $FLIP_CARD:  
{"cardId":253} 

 Player 2 23:18:24 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":253} 

 Player 2 23:18:24 $NEW_MONSTER_ON_PLACE:  
{"cardId":253,"monsterPlaceId":2} 

 Player 2 23:18:24 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":253,"particleType":5} 

 Player 2 23:18:24 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":4,"originStackId":14},"isAfterActivation":true,"index":4} 

 Player 2 23:18:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 23:18:25 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":14,"creatorCardId":292,"attackingPlayerCardId":292,"idOfCardBeingAttacked":253,"stackEffectType":4}} 

 Player 2 23:18:25 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:18:25 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":14,"creatorCardId":292,"attackingPlayerCardId":292,"idOfCardBeingAttacked":253,"stackEffectType":4}} 

 Player 2 23:18:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":113,"_text":"Remove After Resolve DeclareAttack 14  "}} 

 Player 2 23:18:25 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:18:25 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":14,"creatorCardId":292,"attackingPlayerCardId":292,"idOfCardBeingAttacked":253,"stackEffectType":4}} 

 Player 2 23:18:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":114,"_text":"Response Remove After Resolve DeclareAttack 14"},"childOfId":113} 

 Player 2 23:18:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":115,"_text":"Wait For Response From Player 1 "},"childOfId":113} 

 Player 2 23:18:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:18:25 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:18:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 23:18:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 23:18:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Holy Dinga"} 

 Player 1 23:18:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Holy Dinga"} 

 Player 1 23:18:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Holy Dinga"} 

 Player 1 23:18:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Holy Dinga"} 

 Player 1 23:18:25 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:18:25 $ACTION_MASSAGE_REMOVE:  
{"id":115} 

 Player 2 23:18:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":116,"_text":"Wait For Response From Player 2 "},"childOfId":113} 

 Player 2 23:18:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:18:25 $ACTION_MASSAGE_REMOVE:  
{"id":116} 

 Player 2 23:18:25 $ACTION_MASSAGE_REMOVE:  
{"id":114} 

 Player 2 23:18:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":117,"_text":"Stack Was Emptied "}} 

 Player 2 23:18:25 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:18:36 $NEXT_STACK_ID:  

 Player 2 23:18:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:18:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 

 Player 2 23:18:36 $ADD_TO_STACK:  
{"stackEffect":{"entityId":15,"creatorCardId":292,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":253}} 

 Player 2 23:18:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 

 Player 2 23:18:36 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":15,"creatorCardId":292,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":253}} 

 Player 2 23:18:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":118,"_text":"Add AttackRoll 15 "}} 

 Player 2 23:18:36 $ROLL_DICE:  
{"playerId":2} 

 Player 1 23:18:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:18:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:18:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 

 Player 1 23:18:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 

 Player 2 23:18:37 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":6} 

 Player 2 23:18:37 $UPDATE_STACK_VIS:  
{"stackId":15,"text":"player rolled 6 vs Holy Dinga<Monster>"} 

 Player 2 23:18:37 $SHOW_DICE_ROLL:  
{"stackId":15} 

 Player 2 23:18:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 6 vs Holy Dinga<Monster>"} 

 Player 2 23:18:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:18:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 6 vs Holy Dinga<Monster>"} 

 Player 2 23:18:40 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":15,"creatorCardId":292,"numberRolled":6,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":253}} 

 Player 2 23:18:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":119,"_text":"Response Adding AttackRoll 15"},"childOfId":118} 

 Player 2 23:18:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":120,"_text":"Wait For Response From Player 2 "},"childOfId":118} 

 Player 2 23:18:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:18:40 $ACTION_MASSAGE_REMOVE:  
{"id":120} 

 Player 2 23:18:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":121,"_text":"Wait For Response From Player 1 "},"childOfId":118} 

 Player 2 23:18:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:18:40 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:18:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 

 Player 1 23:18:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 

 Player 1 23:18:40 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:18:40 $ACTION_MASSAGE_REMOVE:  
{"id":121} 

 Player 2 23:18:40 $ACTION_MASSAGE_REMOVE:  
{"id":119} 

 Player 2 23:18:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":122,"_text":"Resolve AttackRoll 15 "}} 

 Player 2 23:18:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":123,"_text":"Added 0 to original roll"}} 

 Player 2 23:18:40 $NEXT_STACK_ID:  

 Player 2 23:18:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 6 vs Holy Dinga<Monster>"} 

 Player 2 23:18:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:18:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga \n2:Player 2 rolled 6 vs Holy Dinga<Monster>"} 

 Player 2 23:18:40 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":16,"creatorCardId":292,"entityToDoDamageCardId":292,"entityToTakeDamageCardId":253,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 23:18:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga \n2:Player 2 rolled 6 vs Holy Dinga<Monster>"} 

 Player 2 23:18:41 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":15,"creatorCardId":292,"numberRolled":6,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":253}} 

 Player 2 23:18:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga \n2:Player 2 rolled 6 vs Holy Dinga<Monster>"} 

 Player 2 23:18:41 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":16,"creatorCardId":292,"entityToDoDamageCardId":292,"entityToTakeDamageCardId":253,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 23:18:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga \n2:Player 2 rolled 6 vs Holy Dinga<Monster>"} 

 Player 2 23:18:41 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":15,"creatorCardId":292,"numberRolled":6,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":253}} 

 Player 2 23:18:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga \n2:Player 2 rolled 6 vs Holy Dinga<Monster>"} 

 Player 2 23:18:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga \n2:Player 2 rolled 6 vs Holy Dinga<Monster>"} 

 Player 2 23:18:41 $REPLACE_STACK:  
{"currentStack":[{"entityId":16,"creatorCardId":292,"entityToDoDamageCardId":292,"entityToTakeDamageCardId":253,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":15,"creatorCardId":292,"numberRolled":6,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":253}]} 

 Player 2 23:18:41 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":6},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":5,"originStackId":15},"isAfterActivation":true,"index":5} 

 Player 2 23:18:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga \n2:Player 2 rolled 6 vs Holy Dinga<Monster>"} 

 Player 2 23:18:41 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":15,"creatorCardId":292,"numberRolled":6,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":253}} 

 Player 2 23:18:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga"} 

 Player 2 23:18:41 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":15,"creatorCardId":292,"numberRolled":6,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":253}} 

 Player 2 23:18:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":124,"_text":"Remove After Resolve AttackRoll 15  "}} 

 Player 2 23:18:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga"} 

 Player 2 23:18:41 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":15,"creatorCardId":292,"numberRolled":6,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":253}} 

 Player 2 23:18:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":125,"_text":"Response Remove After Resolve AttackRoll 15"},"childOfId":124} 

 Player 2 23:18:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":126,"_text":"Wait For Response From Player 2 "},"childOfId":124} 

 Player 2 23:18:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:18:41 $ACTION_MASSAGE_REMOVE:  
{"id":126} 

 Player 2 23:18:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":127,"_text":"Wait For Response From Player 1 "},"childOfId":124} 

 Player 2 23:18:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:18:41 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:18:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 

 Player 1 23:18:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 

 Player 1 23:18:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga"} 

 Player 1 23:18:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga"} 

 Player 1 23:18:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga"} 

 Player 1 23:18:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga"} 

 Player 1 23:18:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga"} 

 Player 1 23:18:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga"} 

 Player 1 23:18:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga"} 

 Player 1 23:18:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga"} 

 Player 1 23:18:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga"} 

 Player 1 23:18:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga"} 

 Player 1 23:18:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga \n2:Player 2 is rolling against Holy Dinga<Monster>"} 

 Player 1 23:18:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga \n2:Player 2 is rolling against Holy Dinga<Monster>"} 

 Player 1 23:18:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga \n2:Player 2 is rolling against Holy Dinga<Monster>"} 

 Player 1 23:18:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga \n2:Player 2 is rolling against Holy Dinga<Monster>"} 

 Player 1 23:18:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga \n2:Player 2 is rolling against Holy Dinga<Monster>"} 

 Player 1 23:18:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga \n2:Player 2 is rolling against Holy Dinga<Monster>"} 

 Player 1 23:18:41 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:18:42 $ACTION_MASSAGE_REMOVE:  
{"id":127} 

 Player 2 23:18:42 $ACTION_MASSAGE_REMOVE:  
{"id":125} 

 Player 2 23:18:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":128,"_text":"Resolve CombatDamage 16 "}} 

 Player 2 23:18:42 $UPDATE_STACK_VIS:  
{"stackId":16,"text":"Lilith will deal 1 combat damage to Holy Dinga"} 

 Player 2 23:18:42 $MONSTER_GET_DAMAGED:  
{"cardId":253,"hpLeft":2,"damageDealerId":292} 

 Player 2 23:18:42 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":292}],"result":null,"preventMethod":false,"methodScopeId":253,"scopeIsPlayer":false,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 

 Player 2 23:18:42 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":6},{"type":0,"number":292},{"type":0,"number":253}],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":7,"originStackId":16},"isAfterActivation":true,"index":7} 

 Player 2 23:18:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga"} 

 Player 2 23:18:42 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":16,"creatorCardId":292,"entityToDoDamageCardId":292,"entityToTakeDamageCardId":253,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 23:18:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:18:42 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":16,"creatorCardId":292,"entityToDoDamageCardId":292,"entityToTakeDamageCardId":253,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 23:18:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":129,"_text":"Remove After Resolve CombatDamage 16  "}} 

 Player 2 23:18:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:18:42 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":16,"creatorCardId":292,"entityToDoDamageCardId":292,"entityToTakeDamageCardId":253,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 23:18:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":130,"_text":"Response Remove After Resolve CombatDamage 16"},"childOfId":129} 

 Player 2 23:18:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":131,"_text":"Wait For Response From Player 1 "},"childOfId":129} 

 Player 2 23:18:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:18:42 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:18:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga"} 

 Player 1 23:18:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga"} 

 Player 1 23:18:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga"} 

 Player 1 23:18:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga"} 

 Player 1 23:18:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga"} 

 Player 1 23:18:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga"} 

 Player 1 23:18:42 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:18:42 $ACTION_MASSAGE_REMOVE:  
{"id":131} 

 Player 2 23:18:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":132,"_text":"Wait For Response From Player 2 "},"childOfId":129} 

 Player 2 23:18:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:18:42 $ACTION_MASSAGE_REMOVE:  
{"id":132} 

 Player 2 23:18:42 $ACTION_MASSAGE_REMOVE:  
{"id":130} 

 Player 2 23:18:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":133,"_text":"Stack Was Emptied "}} 

 Player 2 23:18:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:18:43 $NEXT_STACK_ID:  

 Player 2 23:18:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:18:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 

 Player 2 23:18:43 $ADD_TO_STACK:  
{"stackEffect":{"entityId":17,"creatorCardId":292,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":253}} 

 Player 2 23:18:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 

 Player 2 23:18:43 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":17,"creatorCardId":292,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":253}} 

 Player 2 23:18:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":134,"_text":"Add AttackRoll 17 "}} 

 Player 2 23:18:43 $ROLL_DICE:  
{"playerId":2} 

 Player 1 23:18:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:18:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:18:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 

 Player 1 23:18:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 

 Player 2 23:18:45 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":2} 

 Player 2 23:18:45 $UPDATE_STACK_VIS:  
{"stackId":17,"text":"player rolled 2 vs Holy Dinga<Monster>"} 

 Player 2 23:18:45 $SHOW_DICE_ROLL:  
{"stackId":17} 

 Player 2 23:18:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 2 vs Holy Dinga<Monster>"} 

 Player 2 23:18:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:18:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 2 vs Holy Dinga<Monster>"} 

 Player 2 23:18:48 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":17,"creatorCardId":292,"numberRolled":2,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":253}} 

 Player 2 23:18:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":135,"_text":"Response Adding AttackRoll 17"},"childOfId":134} 

 Player 2 23:18:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":136,"_text":"Wait For Response From Player 2 "},"childOfId":134} 

 Player 2 23:18:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:18:48 $ACTION_MASSAGE_REMOVE:  
{"id":136} 

 Player 2 23:18:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":137,"_text":"Wait For Response From Player 1 "},"childOfId":134} 

 Player 2 23:18:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:18:48 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:18:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 

 Player 1 23:18:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 

 Player 1 23:18:48 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:18:48 $ACTION_MASSAGE_REMOVE:  
{"id":137} 

 Player 2 23:18:49 $ACTION_MASSAGE_REMOVE:  
{"id":135} 

 Player 2 23:18:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":138,"_text":"Resolve AttackRoll 17 "}} 

 Player 2 23:18:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":139,"_text":"Added 0 to original roll"}} 

 Player 2 23:18:49 $NEXT_STACK_ID:  

 Player 2 23:18:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 2 vs Holy Dinga<Monster>"} 

 Player 2 23:18:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:18:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dinga combat damage to Lilith \n2:Player 2 rolled 2 vs Holy Dinga<Monster>"} 

 Player 2 23:18:49 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":18,"creatorCardId":292,"entityToDoDamageCardId":253,"entityToTakeDamageCardId":292,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 23:18:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dinga combat damage to Lilith \n2:Player 2 rolled 2 vs Holy Dinga<Monster>"} 

 Player 2 23:18:49 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":17,"creatorCardId":292,"numberRolled":2,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":253}} 

 Player 2 23:18:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dinga combat damage to Lilith \n2:Player 2 rolled 2 vs Holy Dinga<Monster>"} 

 Player 2 23:18:49 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":18,"creatorCardId":292,"entityToDoDamageCardId":253,"entityToTakeDamageCardId":292,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 23:18:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dinga combat damage to Lilith \n2:Player 2 rolled 2 vs Holy Dinga<Monster>"} 

 Player 2 23:18:49 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":17,"creatorCardId":292,"numberRolled":2,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":253}} 

 Player 2 23:18:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dinga combat damage to Lilith \n2:Player 2 rolled 2 vs Holy Dinga<Monster>"} 

 Player 2 23:18:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dinga combat damage to Lilith \n2:Player 2 rolled 2 vs Holy Dinga<Monster>"} 

 Player 2 23:18:49 $REPLACE_STACK:  
{"currentStack":[{"entityId":18,"creatorCardId":292,"entityToDoDamageCardId":253,"entityToTakeDamageCardId":292,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":17,"creatorCardId":292,"numberRolled":2,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":253}]} 

 Player 2 23:18:49 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":2},{"type":2,"number":1},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":8,"originStackId":17},"isAfterActivation":true,"index":8} 

 Player 2 23:18:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dinga combat damage to Lilith \n2:Player 2 rolled 2 vs Holy Dinga<Monster>"} 

 Player 2 23:18:49 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":17,"creatorCardId":292,"numberRolled":2,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":253}} 

 Player 2 23:18:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dinga combat damage to Lilith"} 

 Player 2 23:18:49 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":17,"creatorCardId":292,"numberRolled":2,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":253}} 

 Player 2 23:18:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":140,"_text":"Remove After Resolve AttackRoll 17  "}} 

 Player 2 23:18:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dinga combat damage to Lilith"} 

 Player 2 23:18:49 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":17,"creatorCardId":292,"numberRolled":2,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":253}} 

 Player 2 23:18:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":141,"_text":"Response Remove After Resolve AttackRoll 17"},"childOfId":140} 

 Player 2 23:18:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":142,"_text":"Wait For Response From Player 2 "},"childOfId":140} 

 Player 2 23:18:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:18:49 $ACTION_MASSAGE_REMOVE:  
{"id":142} 

 Player 2 23:18:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":143,"_text":"Wait For Response From Player 1 "},"childOfId":140} 

 Player 2 23:18:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:18:49 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:18:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 

 Player 1 23:18:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 

 Player 1 23:18:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dinga combat damage to Lilith"} 

 Player 1 23:18:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dinga combat damage to Lilith"} 

 Player 1 23:18:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dinga combat damage to Lilith"} 

 Player 1 23:18:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dinga combat damage to Lilith"} 

 Player 1 23:18:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dinga combat damage to Lilith"} 

 Player 1 23:18:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dinga combat damage to Lilith"} 

 Player 1 23:18:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dinga combat damage to Lilith"} 

 Player 1 23:18:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dinga combat damage to Lilith"} 

 Player 1 23:18:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dinga combat damage to Lilith"} 

 Player 1 23:18:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dinga combat damage to Lilith"} 

 Player 1 23:18:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dinga combat damage to Lilith \n2:Player 2 is rolling against Holy Dinga<Monster>"} 

 Player 1 23:18:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dinga combat damage to Lilith \n2:Player 2 is rolling against Holy Dinga<Monster>"} 

 Player 1 23:18:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dinga combat damage to Lilith \n2:Player 2 is rolling against Holy Dinga<Monster>"} 

 Player 1 23:18:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dinga combat damage to Lilith \n2:Player 2 is rolling against Holy Dinga<Monster>"} 

 Player 1 23:18:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dinga combat damage to Lilith \n2:Player 2 is rolling against Holy Dinga<Monster>"} 

 Player 1 23:18:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dinga combat damage to Lilith \n2:Player 2 is rolling against Holy Dinga<Monster>"} 

 Player 1 23:18:50 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:18:50 $ACTION_MASSAGE_REMOVE:  
{"id":143} 

 Player 2 23:18:50 $ACTION_MASSAGE_REMOVE:  
{"id":141} 

 Player 2 23:18:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":144,"_text":"Resolve CombatDamage 18 "}} 

 Player 2 23:18:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dinga 1 combat damage to Lilith"} 

 Player 2 23:18:50 $UPDATE_STACK_VIS:  
{"stackId":18,"text":"Holy Dinga will deal 1 combat damage to Lilith"} 

 Player 2 23:18:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dinga 1 combat damage to Lilith"} 

 Player 2 23:18:50 $PLAYER_GET_HIT:  
{"playerId":2,"damage":1,"damageDealerId":253} 

 Player 2 23:18:50 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":253}],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":9,"originStackId":-1},"isAfterActivation":true,"index":9} 

 Player 2 23:18:50 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_TAKEN","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":0,"number":253}],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":10,"originStackId":18},"isAfterActivation":true,"index":10} 

 Player 2 23:18:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dinga 1 combat damage to Lilith"} 

 Player 2 23:18:50 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":18,"creatorCardId":292,"entityToDoDamageCardId":253,"entityToTakeDamageCardId":292,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 23:18:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:18:50 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":18,"creatorCardId":292,"entityToDoDamageCardId":253,"entityToTakeDamageCardId":292,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 23:18:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":145,"_text":"Remove After Resolve CombatDamage 18  "}} 

 Player 2 23:18:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:18:50 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":18,"creatorCardId":292,"entityToDoDamageCardId":253,"entityToTakeDamageCardId":292,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 23:18:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":146,"_text":"Response Remove After Resolve CombatDamage 18"},"childOfId":145} 

 Player 2 23:18:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":147,"_text":"Wait For Response From Player 1 "},"childOfId":145} 

 Player 2 23:18:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:18:50 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:18:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dinga combat damage to Lilith"} 

 Player 1 23:18:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dinga combat damage to Lilith"} 

 Player 1 23:18:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dinga combat damage to Lilith"} 

 Player 1 23:18:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dinga combat damage to Lilith"} 

 Player 1 23:18:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dinga combat damage to Lilith"} 

 Player 1 23:18:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Holy Dinga combat damage to Lilith"} 

 Player 1 23:18:50 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:18:50 $ACTION_MASSAGE_REMOVE:  
{"id":147} 

 Player 2 23:18:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":148,"_text":"Wait For Response From Player 2 "},"childOfId":145} 

 Player 2 23:18:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:18:50 $ACTION_MASSAGE_REMOVE:  
{"id":148} 

 Player 2 23:18:50 $ACTION_MASSAGE_REMOVE:  
{"id":146} 

 Player 2 23:18:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":149,"_text":"Stack Was Emptied "}} 

 Player 2 23:18:51 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:18:51 $NEXT_STACK_ID:  

 Player 2 23:18:51 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:18:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 

 Player 2 23:18:51 $ADD_TO_STACK:  
{"stackEffect":{"entityId":19,"creatorCardId":292,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":253}} 

 Player 2 23:18:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 

 Player 2 23:18:51 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":19,"creatorCardId":292,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":253}} 

 Player 2 23:18:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":150,"_text":"Add AttackRoll 19 "}} 

 Player 2 23:18:51 $ROLL_DICE:  
{"playerId":2} 

 Player 1 23:18:51 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:18:51 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:18:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 

 Player 1 23:18:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 

 Player 2 23:18:53 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":4} 

 Player 2 23:18:53 $UPDATE_STACK_VIS:  
{"stackId":19,"text":"player rolled 4 vs Holy Dinga<Monster>"} 

 Player 2 23:18:53 $SHOW_DICE_ROLL:  
{"stackId":19} 

 Player 2 23:18:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Holy Dinga<Monster>"} 

 Player 2 23:18:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:18:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Holy Dinga<Monster>"} 

 Player 2 23:18:56 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":19,"creatorCardId":292,"numberRolled":4,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":253}} 

 Player 2 23:18:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":151,"_text":"Response Adding AttackRoll 19"},"childOfId":150} 

 Player 2 23:18:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":152,"_text":"Wait For Response From Player 2 "},"childOfId":150} 

 Player 2 23:18:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:18:56 $ACTION_MASSAGE_REMOVE:  
{"id":152} 

 Player 2 23:18:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":153,"_text":"Wait For Response From Player 1 "},"childOfId":150} 

 Player 2 23:18:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:18:56 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:18:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 

 Player 1 23:18:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 

 Player 1 23:18:56 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:18:56 $ACTION_MASSAGE_REMOVE:  
{"id":153} 

 Player 2 23:18:56 $ACTION_MASSAGE_REMOVE:  
{"id":151} 

 Player 2 23:18:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":154,"_text":"Resolve AttackRoll 19 "}} 

 Player 2 23:18:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":155,"_text":"Added 0 to original roll"}} 

 Player 2 23:18:56 $NEXT_STACK_ID:  

 Player 2 23:18:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Holy Dinga<Monster>"} 

 Player 2 23:18:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:18:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga \n2:Player 2 rolled 4 vs Holy Dinga<Monster>"} 

 Player 2 23:18:56 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":20,"creatorCardId":292,"entityToDoDamageCardId":292,"entityToTakeDamageCardId":253,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 23:18:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga \n2:Player 2 rolled 4 vs Holy Dinga<Monster>"} 

 Player 2 23:18:56 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":19,"creatorCardId":292,"numberRolled":4,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":253}} 

 Player 2 23:18:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga \n2:Player 2 rolled 4 vs Holy Dinga<Monster>"} 

 Player 2 23:18:56 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":20,"creatorCardId":292,"entityToDoDamageCardId":292,"entityToTakeDamageCardId":253,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 23:18:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga \n2:Player 2 rolled 4 vs Holy Dinga<Monster>"} 

 Player 2 23:18:56 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":19,"creatorCardId":292,"numberRolled":4,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":253}} 

 Player 2 23:18:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga \n2:Player 2 rolled 4 vs Holy Dinga<Monster>"} 

 Player 2 23:18:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga \n2:Player 2 rolled 4 vs Holy Dinga<Monster>"} 

 Player 2 23:18:57 $REPLACE_STACK:  
{"currentStack":[{"entityId":20,"creatorCardId":292,"entityToDoDamageCardId":292,"entityToTakeDamageCardId":253,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":19,"creatorCardId":292,"numberRolled":4,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":253}]} 

 Player 2 23:18:57 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":1},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":11,"originStackId":19},"isAfterActivation":true,"index":11} 

 Player 2 23:18:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga \n2:Player 2 rolled 4 vs Holy Dinga<Monster>"} 

 Player 2 23:18:57 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":19,"creatorCardId":292,"numberRolled":4,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":253}} 

 Player 2 23:18:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga"} 

 Player 2 23:18:57 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":19,"creatorCardId":292,"numberRolled":4,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":253}} 

 Player 2 23:18:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":156,"_text":"Remove After Resolve AttackRoll 19  "}} 

 Player 2 23:18:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga"} 

 Player 2 23:18:57 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":19,"creatorCardId":292,"numberRolled":4,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":253}} 

 Player 2 23:18:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":157,"_text":"Response Remove After Resolve AttackRoll 19"},"childOfId":156} 

 Player 2 23:18:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":158,"_text":"Wait For Response From Player 2 "},"childOfId":156} 

 Player 2 23:18:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:18:57 $ACTION_MASSAGE_REMOVE:  
{"id":158} 

 Player 2 23:18:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":159,"_text":"Wait For Response From Player 1 "},"childOfId":156} 

 Player 2 23:18:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:18:57 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:18:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 

 Player 1 23:18:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 

 Player 1 23:18:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga"} 

 Player 1 23:18:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga"} 

 Player 1 23:18:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga"} 

 Player 1 23:18:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga"} 

 Player 1 23:18:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga"} 

 Player 1 23:18:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga"} 

 Player 1 23:18:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga"} 

 Player 1 23:18:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga"} 

 Player 1 23:18:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga"} 

 Player 1 23:18:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga"} 

 Player 1 23:18:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga \n2:Player 2 is rolling against Holy Dinga<Monster>"} 

 Player 1 23:18:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga \n2:Player 2 is rolling against Holy Dinga<Monster>"} 

 Player 1 23:18:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga \n2:Player 2 is rolling against Holy Dinga<Monster>"} 

 Player 1 23:18:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga \n2:Player 2 is rolling against Holy Dinga<Monster>"} 

 Player 1 23:18:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga \n2:Player 2 is rolling against Holy Dinga<Monster>"} 

 Player 1 23:18:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga \n2:Player 2 is rolling against Holy Dinga<Monster>"} 

 Player 1 23:18:57 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:18:57 $ACTION_MASSAGE_REMOVE:  
{"id":159} 

 Player 2 23:18:57 $ACTION_MASSAGE_REMOVE:  
{"id":157} 

 Player 2 23:18:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":160,"_text":"Resolve CombatDamage 20 "}} 

 Player 2 23:18:57 $UPDATE_STACK_VIS:  
{"stackId":20,"text":"Lilith will deal 1 combat damage to Holy Dinga"} 

 Player 2 23:18:57 $MONSTER_GET_DAMAGED:  
{"cardId":253,"hpLeft":1,"damageDealerId":292} 

 Player 2 23:18:57 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":292}],"result":null,"preventMethod":false,"methodScopeId":253,"scopeIsPlayer":false,"index":12,"originStackId":-1},"isAfterActivation":true,"index":12} 

 Player 2 23:18:57 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":4},{"type":0,"number":292},{"type":0,"number":253}],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":13,"originStackId":20},"isAfterActivation":true,"index":13} 

 Player 2 23:18:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga"} 

 Player 2 23:18:58 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":20,"creatorCardId":292,"entityToDoDamageCardId":292,"entityToTakeDamageCardId":253,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 23:18:58 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:18:58 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":20,"creatorCardId":292,"entityToDoDamageCardId":292,"entityToTakeDamageCardId":253,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 23:18:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":161,"_text":"Remove After Resolve CombatDamage 20  "}} 

 Player 2 23:18:58 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:18:58 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":20,"creatorCardId":292,"entityToDoDamageCardId":292,"entityToTakeDamageCardId":253,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 23:18:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":162,"_text":"Response Remove After Resolve CombatDamage 20"},"childOfId":161} 

 Player 2 23:18:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":163,"_text":"Wait For Response From Player 1 "},"childOfId":161} 

 Player 2 23:18:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:18:58 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:18:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga"} 

 Player 1 23:18:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga"} 

 Player 1 23:18:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga"} 

 Player 1 23:18:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga"} 

 Player 1 23:18:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga"} 

 Player 1 23:18:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga"} 

 Player 1 23:18:58 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:18:58 $ACTION_MASSAGE_REMOVE:  
{"id":163} 

 Player 2 23:18:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":164,"_text":"Wait For Response From Player 2 "},"childOfId":161} 

 Player 2 23:18:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:18:58 $ACTION_MASSAGE_REMOVE:  
{"id":164} 

 Player 2 23:18:58 $ACTION_MASSAGE_REMOVE:  
{"id":162} 

 Player 2 23:18:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":165,"_text":"Stack Was Emptied "}} 

 Player 2 23:18:58 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:19:00 $NEXT_STACK_ID:  

 Player 2 23:19:00 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:19:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 

 Player 2 23:19:00 $ADD_TO_STACK:  
{"stackEffect":{"entityId":21,"creatorCardId":292,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":253}} 

 Player 2 23:19:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 

 Player 2 23:19:00 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":21,"creatorCardId":292,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":253}} 

 Player 2 23:19:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":166,"_text":"Add AttackRoll 21 "}} 

 Player 2 23:19:00 $ROLL_DICE:  
{"playerId":2} 

 Player 1 23:19:00 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:19:00 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:19:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 

 Player 1 23:19:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 

 Player 2 23:19:01 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":3} 

 Player 2 23:19:01 $UPDATE_STACK_VIS:  
{"stackId":21,"text":"player rolled 3 vs Holy Dinga<Monster>"} 

 Player 2 23:19:01 $SHOW_DICE_ROLL:  
{"stackId":21} 

 Player 2 23:19:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 3 vs Holy Dinga<Monster>"} 

 Player 2 23:19:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:19:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 3 vs Holy Dinga<Monster>"} 

 Player 2 23:19:04 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":21,"creatorCardId":292,"numberRolled":3,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":253}} 

 Player 2 23:19:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":167,"_text":"Response Adding AttackRoll 21"},"childOfId":166} 

 Player 2 23:19:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":168,"_text":"Wait For Response From Player 2 "},"childOfId":166} 

 Player 2 23:19:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:19:05 $ACTION_MASSAGE_REMOVE:  
{"id":168} 

 Player 2 23:19:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":169,"_text":"Wait For Response From Player 1 "},"childOfId":166} 

 Player 2 23:19:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:19:05 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:19:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 

 Player 1 23:19:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 

 Player 1 23:19:05 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:19:05 $ACTION_MASSAGE_REMOVE:  
{"id":169} 

 Player 2 23:19:05 $ACTION_MASSAGE_REMOVE:  
{"id":167} 

 Player 2 23:19:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":170,"_text":"Resolve AttackRoll 21 "}} 

 Player 2 23:19:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":171,"_text":"Added 0 to original roll"}} 

 Player 2 23:19:05 $NEXT_STACK_ID:  

 Player 2 23:19:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 3 vs Holy Dinga<Monster>"} 

 Player 2 23:19:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:19:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga \n2:Player 2 rolled 3 vs Holy Dinga<Monster>"} 

 Player 2 23:19:05 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":22,"creatorCardId":292,"entityToDoDamageCardId":292,"entityToTakeDamageCardId":253,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 23:19:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga \n2:Player 2 rolled 3 vs Holy Dinga<Monster>"} 

 Player 2 23:19:05 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":21,"creatorCardId":292,"numberRolled":3,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":253}} 

 Player 2 23:19:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga \n2:Player 2 rolled 3 vs Holy Dinga<Monster>"} 

 Player 2 23:19:05 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":22,"creatorCardId":292,"entityToDoDamageCardId":292,"entityToTakeDamageCardId":253,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 23:19:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga \n2:Player 2 rolled 3 vs Holy Dinga<Monster>"} 

 Player 2 23:19:05 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":21,"creatorCardId":292,"numberRolled":3,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":253}} 

 Player 2 23:19:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga \n2:Player 2 rolled 3 vs Holy Dinga<Monster>"} 

 Player 2 23:19:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga \n2:Player 2 rolled 3 vs Holy Dinga<Monster>"} 

 Player 2 23:19:05 $REPLACE_STACK:  
{"currentStack":[{"entityId":22,"creatorCardId":292,"entityToDoDamageCardId":292,"entityToTakeDamageCardId":253,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":21,"creatorCardId":292,"numberRolled":3,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":253}]} 

 Player 2 23:19:05 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":3},{"type":2,"number":1},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":14,"originStackId":21},"isAfterActivation":true,"index":14} 

 Player 2 23:19:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga \n2:Player 2 rolled 3 vs Holy Dinga<Monster>"} 

 Player 2 23:19:05 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":21,"creatorCardId":292,"numberRolled":3,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":253}} 

 Player 2 23:19:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga"} 

 Player 2 23:19:05 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":21,"creatorCardId":292,"numberRolled":3,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":253}} 

 Player 2 23:19:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":172,"_text":"Remove After Resolve AttackRoll 21  "}} 

 Player 2 23:19:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga"} 

 Player 2 23:19:05 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":21,"creatorCardId":292,"numberRolled":3,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":253}} 

 Player 2 23:19:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":173,"_text":"Response Remove After Resolve AttackRoll 21"},"childOfId":172} 

 Player 2 23:19:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":174,"_text":"Wait For Response From Player 2 "},"childOfId":172} 

 Player 2 23:19:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:19:05 $ACTION_MASSAGE_REMOVE:  
{"id":174} 

 Player 2 23:19:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":175,"_text":"Wait For Response From Player 1 "},"childOfId":172} 

 Player 2 23:19:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:19:05 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:19:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 

 Player 1 23:19:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 

 Player 1 23:19:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga"} 

 Player 1 23:19:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga"} 

 Player 1 23:19:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga"} 

 Player 1 23:19:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga"} 

 Player 1 23:19:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga"} 

 Player 1 23:19:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga"} 

 Player 1 23:19:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga"} 

 Player 1 23:19:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga"} 

 Player 1 23:19:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga"} 

 Player 1 23:19:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga"} 

 Player 1 23:19:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga \n2:Player 2 is rolling against Holy Dinga<Monster>"} 

 Player 1 23:19:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga \n2:Player 2 is rolling against Holy Dinga<Monster>"} 

 Player 1 23:19:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga \n2:Player 2 is rolling against Holy Dinga<Monster>"} 

 Player 1 23:19:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga \n2:Player 2 is rolling against Holy Dinga<Monster>"} 

 Player 1 23:19:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga \n2:Player 2 is rolling against Holy Dinga<Monster>"} 

 Player 1 23:19:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga \n2:Player 2 is rolling against Holy Dinga<Monster>"} 

 Player 1 23:19:06 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:19:06 $ACTION_MASSAGE_REMOVE:  
{"id":175} 

 Player 2 23:19:06 $ACTION_MASSAGE_REMOVE:  
{"id":173} 

 Player 2 23:19:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":176,"_text":"Resolve CombatDamage 22 "}} 

 Player 2 23:19:06 $UPDATE_STACK_VIS:  
{"stackId":22,"text":"Lilith will deal 1 combat damage to Holy Dinga"} 

 Player 2 23:19:06 $MONSTER_GET_DAMAGED:  
{"cardId":253,"hpLeft":0,"damageDealerId":292} 

 Player 2 23:19:06 $NEXT_STACK_ID:  

 Player 2 23:19:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga"} 

 Player 2 23:19:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:19:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga \n2:[object Object] killed by Lilith"} 

 Player 2 23:19:06 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":23,"creatorCardId":292,"monsterToDieCardId":253,"stackEffectType":5,"killerId":292}} 

 Player 2 23:19:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga \n2:[object Object] killed by Lilith"} 

 Player 2 23:19:06 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":22,"creatorCardId":292,"entityToDoDamageCardId":292,"entityToTakeDamageCardId":253,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 23:19:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga \n2:[object Object] killed by Lilith"} 

 Player 2 23:19:06 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":22,"creatorCardId":292,"entityToDoDamageCardId":292,"entityToTakeDamageCardId":253,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 23:19:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga \n2:[object Object] killed by Lilith"} 

 Player 2 23:19:06 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":23,"creatorCardId":292,"monsterToDieCardId":253,"stackEffectType":5,"killerId":292}} 

 Player 2 23:19:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga \n2:[object Object] killed by Lilith"} 

 Player 2 23:19:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga \n2:[object Object] killed by Lilith"} 

 Player 2 23:19:06 $REPLACE_STACK:  
{"currentStack":[{"entityId":22,"creatorCardId":292,"entityToDoDamageCardId":292,"entityToTakeDamageCardId":253,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":23,"creatorCardId":292,"monsterToDieCardId":253,"stackEffectType":5,"killerId":292}]} 

 Player 2 23:19:06 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":292}],"result":null,"preventMethod":false,"methodScopeId":253,"scopeIsPlayer":false,"index":15,"originStackId":-1},"isAfterActivation":true,"index":15} 

 Player 2 23:19:06 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":3},{"type":0,"number":292},{"type":0,"number":253}],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":16,"originStackId":22},"isAfterActivation":true,"index":16} 

 Player 2 23:19:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga \n2:[object Object] killed by Lilith"} 

 Player 2 23:19:06 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":22,"creatorCardId":292,"entityToDoDamageCardId":292,"entityToTakeDamageCardId":253,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 23:19:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Lilith"} 

 Player 2 23:19:06 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":22,"creatorCardId":292,"entityToDoDamageCardId":292,"entityToTakeDamageCardId":253,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 23:19:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":177,"_text":"Remove After Resolve CombatDamage 22  "}} 

 Player 2 23:19:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Lilith"} 

 Player 2 23:19:07 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":22,"creatorCardId":292,"entityToDoDamageCardId":292,"entityToTakeDamageCardId":253,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 23:19:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":178,"_text":"Response Remove After Resolve CombatDamage 22"},"childOfId":177} 

 Player 2 23:19:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":179,"_text":"Wait For Response From Player 2 "},"childOfId":177} 

 Player 2 23:19:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:19:07 $ACTION_MASSAGE_REMOVE:  
{"id":179} 

 Player 2 23:19:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":180,"_text":"Wait For Response From Player 1 "},"childOfId":177} 

 Player 2 23:19:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:19:07 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:19:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga"} 

 Player 1 23:19:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga"} 

 Player 1 23:19:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Lilith"} 

 Player 1 23:19:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Lilith"} 

 Player 1 23:19:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Lilith"} 

 Player 1 23:19:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Lilith"} 

 Player 1 23:19:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Lilith"} 

 Player 1 23:19:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Lilith"} 

 Player 1 23:19:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Lilith"} 

 Player 1 23:19:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Lilith"} 

 Player 1 23:19:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Lilith"} 

 Player 1 23:19:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Lilith"} 

 Player 1 23:19:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga \n2:[object Object] killed by Lilith"} 

 Player 1 23:19:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga \n2:[object Object] killed by Lilith"} 

 Player 1 23:19:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga \n2:[object Object] killed by Lilith"} 

 Player 1 23:19:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga \n2:[object Object] killed by Lilith"} 

 Player 1 23:19:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga \n2:[object Object] killed by Lilith"} 

 Player 1 23:19:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Holy Dinga \n2:[object Object] killed by Lilith"} 

 Player 1 23:19:07 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:19:07 $ACTION_MASSAGE_REMOVE:  
{"id":180} 

 Player 2 23:19:07 $ACTION_MASSAGE_REMOVE:  
{"id":178} 

 Player 2 23:19:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":181,"_text":"Resolve MonsterDeath 23 "}} 

 Player 2 23:19:07 $DISABLE_PARTICLE_EFFECT:  
{"cardId":253,"particleType":5} 

 Player 2 23:19:07 $CANCEL_ATTACK:  

 Player 2 23:19:07 $NEXT_STACK_ID:  

 Player 2 23:19:07 $NEXT_STACK_ID:  

 Player 2 23:19:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Lilith"} 

 Player 2 23:19:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Lilith"} 

 Player 2 23:19:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:19:07 $NEXT_STACK_ID:  

 Player 2 23:19:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:[object Object] killed by Lilith"} 

 Player 2 23:19:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:[object Object] killed by Lilith"} 

 Player 2 23:19:07 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":24,"creatorCardId":292,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"monsterCardWithRewardId":253,"playerCardIdToReward":292,"stackEffectType":7}} 

 Player 2 23:19:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:[object Object] killed by Lilith"} 

 Player 2 23:19:07 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":23,"creatorCardId":292,"monsterToDieCardId":253,"stackEffectType":5,"killerId":292}} 

 Player 2 23:19:08 $NEXT_STACK_ID:  

 Player 2 23:19:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:[object Object] killed by Lilith"} 

 Player 2 23:19:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:[object Object] killed by Lilith"} 

 Player 2 23:19:08 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":24,"creatorCardId":292,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"monsterCardWithRewardId":253,"playerCardIdToReward":292,"stackEffectType":7}} 

 Player 2 23:19:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:[object Object] killed by Lilith"} 

 Player 2 23:19:08 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":23,"creatorCardId":292,"monsterToDieCardId":253,"stackEffectType":5,"killerId":292}} 

 Player 2 23:19:08 $NEXT_STACK_ID:  

 Player 2 23:19:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:[object Object] killed by Lilith"} 

 Player 2 23:19:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:[object Object] killed by Lilith"} 

 Player 2 23:19:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:[object Object] killed by Lilith"} 

 Player 2 23:19:08 $REPLACE_STACK:  
{"currentStack":[{"entityId":24,"creatorCardId":292,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"monsterCardWithRewardId":253,"playerCardIdToReward":292,"stackEffectType":7},{"entityId":23,"creatorCardId":292,"monsterToDieCardId":253,"stackEffectType":5,"killerId":292}]} 

 Player 2 23:19:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:[object Object] killed by Lilith"} 

 Player 2 23:19:08 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":23,"creatorCardId":292,"monsterToDieCardId":253,"stackEffectType":5,"killerId":292}} 

 Player 2 23:19:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward"} 

 Player 2 23:19:08 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":23,"creatorCardId":292,"monsterToDieCardId":253,"stackEffectType":5,"killerId":292}} 

 Player 2 23:19:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":182,"_text":"Remove After Resolve MonsterDeath 23  "}} 

 Player 2 23:19:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward"} 

 Player 2 23:19:08 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":23,"creatorCardId":292,"monsterToDieCardId":253,"stackEffectType":5,"killerId":292}} 

 Player 2 23:19:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":183,"_text":"Response Remove After Resolve MonsterDeath 23"},"childOfId":182} 

 Player 2 23:19:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":184,"_text":"Wait For Response From Player 2 "},"childOfId":182} 

 Player 2 23:19:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:19:08 $ACTION_MASSAGE_REMOVE:  
{"id":184} 

 Player 2 23:19:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":185,"_text":"Wait For Response From Player 1 "},"childOfId":182} 

 Player 2 23:19:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:19:08 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:19:08 $NEXT_STACK_ID:  

 Player 1 23:19:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Lilith"} 

 Player 1 23:19:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Lilith"} 

 Player 1 23:19:08 $NEXT_STACK_ID:  

 Player 1 23:19:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Lilith"} 

 Player 1 23:19:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Lilith"} 

 Player 1 23:19:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward"} 

 Player 1 23:19:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward"} 

 Player 1 23:19:08 $NEXT_STACK_ID:  

 Player 1 23:19:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward"} 

 Player 1 23:19:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward"} 

 Player 1 23:19:08 $NEXT_STACK_ID:  

 Player 1 23:19:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward"} 

 Player 1 23:19:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward"} 

 Player 1 23:19:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward"} 

 Player 1 23:19:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward"} 

 Player 1 23:19:08 $NEXT_STACK_ID:  

 Player 1 23:19:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward"} 

 Player 1 23:19:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward"} 

 Player 1 23:19:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward"} 

 Player 1 23:19:09 $NEXT_STACK_ID:  

 Player 1 23:19:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward"} 

 Player 1 23:19:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward"} 

 Player 1 23:19:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward"} 

 Player 1 23:19:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:[object Object] killed by Lilith"} 

 Player 1 23:19:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:[object Object] killed by Lilith"} 

 Player 1 23:19:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:[object Object] killed by Lilith"} 

 Player 1 23:19:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:[object Object] killed by Lilith"} 

 Player 1 23:19:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:[object Object] killed by Lilith"} 

 Player 1 23:19:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:[object Object] killed by Lilith"} 

 Player 1 23:19:09 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:19:09 $ACTION_MASSAGE_REMOVE:  
{"id":185} 

 Player 2 23:19:09 $ACTION_MASSAGE_REMOVE:  
{"id":183} 

 Player 2 23:19:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":186,"_text":"Resolve MonsterRewardStackEffect 24 "}} 

 Player 2 23:19:09 $NEXT_STACK_ID:  

 Player 2 23:19:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 roll a dice"} 

 Player 2 23:19:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 roll a dice"} 

 Player 2 23:19:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 roll a dice"} 

 Player 2 23:19:09 $ADD_TO_STACK:  
{"stackEffect":{"entityId":25,"creatorCardId":292,"stackEffectToLock":{"entityId":24,"creatorCardId":292,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"monsterCardWithRewardId":253,"playerCardIdToReward":292,"stackEffectType":7},"hasLockingStackEffect":false,"stackEffectType":11}} 

 Player 2 23:19:09 $NEXT_STACK_ID:  

 Player 2 23:19:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 roll a dice"} 

 Player 2 23:19:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 roll a dice"} 

 Player 2 23:19:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 roll a dice"} 

 Player 2 23:19:09 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":25,"creatorCardId":292,"stackEffectToLock":{"entityId":24,"creatorCardId":292,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"monsterCardWithRewardId":253,"playerCardIdToReward":292,"stackEffectType":7},"hasLockingStackEffect":false,"stackEffectType":11}} 

 Player 2 23:19:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":187,"_text":"Add RollDiceStackEffect 25 "}} 

 Player 2 23:19:09 $ROLL_DICE:  
{"playerId":2} 

 Player 1 23:19:09 $NEXT_STACK_ID:  

 Player 1 23:19:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward"} 

 Player 1 23:19:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward"} 

 Player 1 23:19:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward"} 

 Player 1 23:19:09 $NEXT_STACK_ID:  

 Player 1 23:19:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward"} 

 Player 1 23:19:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward"} 

 Player 1 23:19:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward"} 

 Player 1 23:19:09 $NEXT_STACK_ID:  

 Player 1 23:19:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 roll a dice"} 

 Player 1 23:19:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 roll a dice"} 

 Player 1 23:19:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 roll a dice"} 

 Player 1 23:19:09 $NEXT_STACK_ID:  

 Player 1 23:19:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 roll a dice"} 

 Player 1 23:19:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 roll a dice"} 

 Player 1 23:19:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 roll a dice"} 

 Player 2 23:19:11 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":2} 

 Player 2 23:19:11 $UPDATE_STACK_VIS:  
{"stackId":25,"text":"player 2 rolled 2"} 

 Player 2 23:19:11 $SHOW_DICE_ROLL:  
{"stackId":25} 

 Player 2 23:19:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 rolled 2"} 

 Player 2 23:19:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:19:14 $NEXT_STACK_ID:  

 Player 2 23:19:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 rolled 2"} 

 Player 2 23:19:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 rolled 2"} 

 Player 2 23:19:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 rolled 2"} 

 Player 2 23:19:14 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":25,"creatorCardId":292,"stackEffectToLock":{"entityId":24,"creatorCardId":292,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"monsterCardWithRewardId":253,"playerCardIdToReward":292,"stackEffectType":7},"hasLockingStackEffect":false,"numberRolled":2,"stackEffectType":11}} 

 Player 2 23:19:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":188,"_text":"Response Adding RollDiceStackEffect 25"},"childOfId":187} 

 Player 2 23:19:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":189,"_text":"Wait For Response From Player 2 "},"childOfId":187} 

 Player 2 23:19:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:19:14 $ACTION_MASSAGE_REMOVE:  
{"id":189} 

 Player 2 23:19:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":190,"_text":"Wait For Response From Player 1 "},"childOfId":187} 

 Player 2 23:19:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:19:15 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:19:15 $NEXT_STACK_ID:  

 Player 1 23:19:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 roll a dice"} 

 Player 1 23:19:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 roll a dice"} 

 Player 1 23:19:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 roll a dice"} 

 Player 1 23:19:15 $NEXT_STACK_ID:  

 Player 1 23:19:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 roll a dice"} 

 Player 1 23:19:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 roll a dice"} 

 Player 1 23:19:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 roll a dice"} 

 Player 1 23:19:15 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:19:15 $ACTION_MASSAGE_REMOVE:  
{"id":190} 

 Player 2 23:19:15 $ACTION_MASSAGE_REMOVE:  
{"id":188} 

 Player 2 23:19:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":191,"_text":"Resolve RollDiceStackEffect 25 "}} 

 Player 2 23:19:15 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":17,"originStackId":25},"isAfterActivation":true,"index":17} 

 Player 2 23:19:15 $NEXT_STACK_ID:  

 Player 2 23:19:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 rolled 2"} 

 Player 2 23:19:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 rolled 2"} 

 Player 2 23:19:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 rolled 2"} 

 Player 2 23:19:15 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":25,"creatorCardId":292,"stackEffectToLock":{"entityId":24,"creatorCardId":292,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"monsterCardWithRewardId":253,"playerCardIdToReward":292,"stackEffectType":7},"hasLockingStackEffect":false,"numberRolled":2,"stackEffectType":11}} 

 Player 2 23:19:15 $NEXT_STACK_ID:  

 Player 2 23:19:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward"} 

 Player 2 23:19:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward"} 

 Player 2 23:19:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward"} 

 Player 2 23:19:15 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":25,"creatorCardId":292,"stackEffectToLock":{"entityId":24,"creatorCardId":292,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"monsterCardWithRewardId":253,"playerCardIdToReward":292,"stackEffectType":7},"hasLockingStackEffect":false,"numberRolled":2,"stackEffectType":11}} 

 Player 2 23:19:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":192,"_text":"Remove After Resolve RollDiceStackEffect 25  "}} 

 Player 2 23:19:15 $NEXT_STACK_ID:  

 Player 2 23:19:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward"} 

 Player 2 23:19:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward"} 

 Player 2 23:19:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward"} 

 Player 2 23:19:15 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":25,"creatorCardId":292,"stackEffectToLock":{"entityId":24,"creatorCardId":292,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"monsterCardWithRewardId":253,"playerCardIdToReward":292,"stackEffectType":7},"hasLockingStackEffect":false,"numberRolled":2,"stackEffectType":11}} 

 Player 2 23:19:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":193,"_text":"Response Remove After Resolve RollDiceStackEffect 25"},"childOfId":192} 

 Player 2 23:19:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":194,"_text":"Wait For Response From Player 1 "},"childOfId":192} 

 Player 2 23:19:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:19:15 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:19:15 $NEXT_STACK_ID:  

 Player 1 23:19:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 roll a dice"} 

 Player 1 23:19:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 roll a dice"} 

 Player 1 23:19:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 roll a dice"} 

 Player 1 23:19:15 $NEXT_STACK_ID:  

 Player 1 23:19:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 roll a dice"} 

 Player 1 23:19:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 roll a dice"} 

 Player 1 23:19:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 roll a dice"} 

 Player 1 23:19:15 $NEXT_STACK_ID:  

 Player 1 23:19:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 roll a dice"} 

 Player 1 23:19:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 roll a dice"} 

 Player 1 23:19:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 roll a dice"} 

 Player 1 23:19:16 $NEXT_STACK_ID:  

 Player 1 23:19:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 roll a dice"} 

 Player 1 23:19:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 roll a dice"} 

 Player 1 23:19:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 roll a dice"} 

 Player 1 23:19:16 $NEXT_STACK_ID:  

 Player 1 23:19:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 roll a dice"} 

 Player 1 23:19:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 roll a dice"} 

 Player 1 23:19:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 roll a dice"} 

 Player 1 23:19:16 $NEXT_STACK_ID:  

 Player 1 23:19:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 roll a dice"} 

 Player 1 23:19:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 roll a dice"} 

 Player 1 23:19:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 roll a dice"} 

 Player 1 23:19:16 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:19:16 $ACTION_MASSAGE_REMOVE:  
{"id":194} 

 Player 2 23:19:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":195,"_text":"Wait For Response From Player 2 "},"childOfId":192} 

 Player 2 23:19:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:19:16 $ACTION_MASSAGE_REMOVE:  
{"id":195} 

 Player 2 23:19:16 $ACTION_MASSAGE_REMOVE:  
{"id":193} 

 Player 2 23:19:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":196,"_text":"Resolve MonsterRewardStackEffect 24 "}} 

 Player 2 23:19:16 $SET_MONEY:  
{"playerId":2,"numOfCoins":5} 

 Player 2 23:19:16 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":2}],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":18,"originStackId":-1},"isAfterActivation":true,"index":18} 

 Player 2 23:19:16 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":253,"scopeIsPlayer":false,"index":19,"originStackId":24},"isAfterActivation":true,"index":19} 

 Player 2 23:19:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:19:16 $NEXT_STACK_ID:  

 Player 2 23:19:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:19:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:19:16 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":24,"creatorCardId":292,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"monsterCardWithRewardId":253,"playerCardIdToReward":292,"stackEffectType":7}} 

 Player 2 23:19:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":197,"_text":"Fizzle MonsterRewardStackEffect 24"}} 

 Player 2 23:19:16 $FIZZLE_STACK_EFFECT:  
{"entityId":24} 

 Player 2 23:19:16 $MOVE_CARD:  
{"moveIndex":14,"cardId":253,"placeID":303,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 23:19:16 $NEXT_STACK_ID:  

 Player 1 23:19:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward"} 

 Player 1 23:19:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward"} 

 Player 1 23:19:16 $NEXT_STACK_ID:  

 Player 1 23:19:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward"} 

 Player 1 23:19:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward"} 

 Player 1 23:19:16 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 23:19:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:19:16 $MOVE_CARD_END:  
{"moveIndex":14,"cardId":253,"flipIfFlipped":true,"playerId":2} 

 Player 2 23:19:17 $MOVE_CARD_TO_PILE:  
{"type":2,"cardId":253} 

 Player 2 23:19:17 $REMOVE_MONSTER:  
{"holderId":2,"monsterId":253} 

 Player 2 23:19:17 $GET_NEXT_MONSTER:  
{"monsterPlaceId":2} 

 Player 2 23:19:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":198,"_text":"Stack Was Emptied "}} 

 Player 2 23:19:17 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:19:23 $SHOW_DECISION:  
{"startCardId":68,"endCardId":68,"flipEndCard":true} 

 Player 2 23:19:26 $NEXT_STACK_ID:  

 Player 2 23:19:26 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:19:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(8) "} 

 Player 2 23:19:26 $ADD_TO_STACK:  
{"stackEffect":{"entityId":56,"creatorCardId":292,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":68,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 23:19:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(8) "} 

 Player 2 23:19:26 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":56,"creatorCardId":292,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":68,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 23:19:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":199,"_text":"Add PlayLootCardStackEffect 56 "}} 

 Player 2 23:19:26 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":68} 

 Player 2 23:19:26 $MOVE_CARD:  
{"moveIndex":15,"cardId":68,"placeID":300,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 23:19:26 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:19:26 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:19:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(8) "} 

 Player 1 23:19:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(8) "} 

 Player 1 23:19:27 $MOVE_CARD_END:  
{"moveIndex":15,"cardId":68,"flipIfFlipped":true,"playerId":2} 

 Player 2 23:19:27 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":68} 

 Player 2 23:19:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(8): addMoney"} 

 Player 2 23:19:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:19:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(8): addMoney"} 

 Player 2 23:19:27 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":56,"creatorCardId":292,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":68,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":68,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 23:19:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":200,"_text":"Response Adding PlayLootCardStackEffect 56"},"childOfId":199} 

 Player 2 23:19:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":201,"_text":"Wait For Response From Player 2 "},"childOfId":199} 

 Player 2 23:19:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:19:27 $ACTION_MASSAGE_REMOVE:  
{"id":201} 

 Player 2 23:19:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":202,"_text":"Wait For Response From Player 1 "},"childOfId":199} 

 Player 2 23:19:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:19:27 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:19:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(8) "} 

 Player 1 23:19:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(8) "} 

 Player 1 23:19:27 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:19:27 $ACTION_MASSAGE_REMOVE:  
{"id":202} 

 Player 2 23:19:27 $ACTION_MASSAGE_REMOVE:  
{"id":200} 

 Player 2 23:19:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":203,"_text":"Resolve PlayLootCardStackEffect 56 "}} 

 Player 2 23:19:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(8): addMoney"} 

 Player 2 23:19:27 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":68,"particleType":6} 

 Player 2 23:19:29 $DISABLE_PARTICLE_EFFECT:  
{"cardId":68,"particleType":6} 

 Player 2 23:19:29 $SET_MONEY:  
{"playerId":2,"numOfCoins":9} 

 Player 2 23:19:29 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":20,"originStackId":-1},"isAfterActivation":true,"index":20} 

 Player 2 23:19:29 $REMOVE_FROM_PILE:  
{"cardId":68} 

 Player 2 23:19:29 $MOVE_CARD:  
{"moveIndex":16,"cardId":68,"placeID":301,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 23:19:30 $MOVE_CARD_END:  
{"moveIndex":16,"cardId":68,"flipIfFlipped":true,"playerId":2} 

 Player 2 23:19:30 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":68} 

 Player 2 23:19:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(8): addMoney"} 

 Player 2 23:19:30 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":56,"creatorCardId":292,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":68,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 23:19:30 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:19:30 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":56,"creatorCardId":292,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":68,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 23:19:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":204,"_text":"Remove After Resolve PlayLootCardStackEffect 56  "}} 

 Player 2 23:19:30 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:19:30 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":56,"creatorCardId":292,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":68,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 23:19:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":205,"_text":"Response Remove After Resolve PlayLootCardStackEffect 56"},"childOfId":204} 

 Player 2 23:19:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":206,"_text":"Wait For Response From Player 1 "},"childOfId":204} 

 Player 2 23:19:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:19:30 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:19:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(8) "} 

 Player 1 23:19:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(8) "} 

 Player 1 23:19:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(8) "} 

 Player 1 23:19:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(8) "} 

 Player 1 23:19:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(8) "} 

 Player 1 23:19:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(8) "} 

 Player 1 23:19:30 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:19:30 $ACTION_MASSAGE_REMOVE:  
{"id":206} 

 Player 2 23:19:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":207,"_text":"Wait For Response From Player 2 "},"childOfId":204} 

 Player 2 23:19:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:19:30 $ACTION_MASSAGE_REMOVE:  
{"id":207} 

 Player 2 23:19:30 $ACTION_MASSAGE_REMOVE:  
{"id":205} 

 Player 2 23:19:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":208,"_text":"Stack Was Emptied "}} 

 Player 2 23:19:30 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:19:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:19:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:19:32 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 2 23:19:32 $END_TURN:  

 Player 2 23:19:32 $SET_TURN:  
{"playerId":1} 

 Player 2 23:19:32 $START_TURN:  
{"playerId":1} 

 Player 1 23:19:32 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 23:19:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:19:32 $RECHARGE_ITEM:  
{"cardId":284} 

 Player 1 23:19:32 $PLAYER_RECHARGE_ITEM:  
{"playerId":1,"cardId":284} 

 Player 1 23:19:32 $RECHARGE_ITEM:  
{"cardId":285} 

 Player 1 23:19:32 $PLAYER_RECHARGE_ITEM:  
{"playerId":1,"cardId":285} 

 Player 1 23:19:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:19:33 $NEXT_STACK_ID:  

 Player 1 23:19:33 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:19:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 23:19:33 $ADD_TO_STACK:  
{"stackEffect":{"entityId":57,"creatorCardId":284,"turnPlayerCardId":284,"stackEffectType":13}} 

 Player 1 23:19:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 23:19:33 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":57,"creatorCardId":284,"turnPlayerCardId":284,"stackEffectType":13}} 

 Player 1 23:19:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":209,"_text":"Add StartTurnLoot 57 "}} 

 Player 1 23:19:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:19:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 23:19:33 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":57,"creatorCardId":284,"turnPlayerCardId":284,"stackEffectType":13}} 

 Player 1 23:19:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":210,"_text":"Response Adding StartTurnLoot 57"},"childOfId":209} 

 Player 1 23:19:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":211,"_text":"Wait For Response From Player 1 "},"childOfId":209} 

 Player 1 23:19:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:19:33 $ACTION_MASSAGE_REMOVE:  
{"id":211} 

 Player 1 23:19:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":212,"_text":"Wait For Response From Player 2 "},"childOfId":209} 

 Player 1 23:19:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 23:19:33 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 23:19:33 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 23:19:33 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:19:33 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:19:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 23:19:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 23:19:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 23:19:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 23:19:33 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 23:19:33 $ACTION_MASSAGE_REMOVE:  
{"id":212} 

 Player 1 23:19:33 $ACTION_MASSAGE_REMOVE:  
{"id":210} 

 Player 1 23:19:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":213,"_text":"Resolve StartTurnLoot 57 "}} 

 Player 1 23:19:33 $DRAW_CARD:  
{"deckType":1} 

 Player 1 23:19:33 $MOVE_CARD:  
{"moveIndex":17,"cardId":92,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 23:19:34 $MOVE_CARD_END:  
{"moveIndex":17,"cardId":92,"flipIfFlipped":false,"playerId":1} 

 Player 1 23:19:34 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":92} 

 Player 1 23:19:34 $FLIP_CARD:  
{"cardId":92} 

 Player 1 23:19:34 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":92} 

 Player 1 23:19:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 23:19:34 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":57,"creatorCardId":284,"turnPlayerCardId":284,"stackEffectType":13}} 

 Player 1 23:19:34 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:19:34 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":57,"creatorCardId":284,"turnPlayerCardId":284,"stackEffectType":13}} 

 Player 1 23:19:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":214,"_text":"Remove After Resolve StartTurnLoot 57  "}} 

 Player 1 23:19:34 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:19:34 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":57,"creatorCardId":284,"turnPlayerCardId":284,"stackEffectType":13}} 

 Player 1 23:19:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":215,"_text":"Response Remove After Resolve StartTurnLoot 57"},"childOfId":214} 

 Player 1 23:19:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":216,"_text":"Wait For Response From Player 2 "},"childOfId":214} 

 Player 1 23:19:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 23:19:34 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 23:19:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 23:19:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 23:19:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 23:19:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 23:19:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 23:19:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 23:19:34 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 23:19:34 $ACTION_MASSAGE_REMOVE:  
{"id":216} 

 Player 1 23:19:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":217,"_text":"Wait For Response From Player 1 "},"childOfId":214} 

 Player 1 23:19:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:19:34 $ACTION_MASSAGE_REMOVE:  
{"id":217} 

 Player 1 23:19:34 $ACTION_MASSAGE_REMOVE:  
{"id":215} 

 Player 1 23:19:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":218,"_text":"Stack Was Emptied "}} 

 Player 1 23:19:34 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:19:43 $SHOW_DECISION:  
{"startCardId":284,"endCardId":285} 

 Player 1 23:19:46 $NEXT_STACK_ID:  

 Player 1 23:19:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:19:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Forever Alone"} 

 Player 1 23:19:46 $ADD_TO_STACK:  
{"stackEffect":{"entityId":58,"creatorCardId":284,"hasLockingStackEffect":false,"itemToPlayCardId":285,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 23:19:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Forever Alone"} 

 Player 1 23:19:46 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":58,"creatorCardId":284,"hasLockingStackEffect":false,"itemToPlayCardId":285,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 23:19:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":219,"_text":"Add ActivateItem 58 "}} 

 Player 2 23:19:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:19:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:19:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Forever Alone"} 

 Player 2 23:19:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Forever Alone"} 

 Player 1 23:19:49 $SHOW_EFFECT_CHOSEN:  
{"cardId":285,"pos":{"x":-1334.672,"y":-363.9090000000001},"size":{"w":980,"h":65}} 

 Player 1 23:19:55 $SHOW_DECISION:  
{"startCardId":285,"endCardId":227} 

 Player 1 23:19:58 $USE_ITEM:  
{"cardId":285} 

 Player 1 23:19:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:19:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Forever Alone"} 

 Player 1 23:19:58 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":58,"creatorCardId":284,"hasLockingStackEffect":false,"itemToPlayCardId":285,"itemPlayerId":1,"effectToDoData":{"type":1,"index":1},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 23:19:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":220,"_text":"Response Adding ActivateItem 58"},"childOfId":219} 

 Player 1 23:19:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":221,"_text":"Wait For Response From Player 1 "},"childOfId":219} 

 Player 1 23:19:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:19:58 $ACTION_MASSAGE_REMOVE:  
{"id":221} 

 Player 1 23:19:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":222,"_text":"Wait For Response From Player 2 "},"childOfId":219} 

 Player 1 23:19:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 23:19:58 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 23:19:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Forever Alone"} 

 Player 2 23:19:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Forever Alone"} 

 Player 2 23:19:58 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 23:19:58 $ACTION_MASSAGE_REMOVE:  
{"id":222} 

 Player 1 23:19:58 $ACTION_MASSAGE_REMOVE:  
{"id":220} 

 Player 1 23:19:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":223,"_text":"Resolve ActivateItem 58 "}} 

 Player 1 23:19:58 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":285,"particleType":6} 

 Player 1 23:20:00 $DISABLE_PARTICLE_EFFECT:  
{"cardId":285,"particleType":6} 

 Player 1 23:20:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Forever Alone"} 

 Player 1 23:20:00 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":58,"creatorCardId":284,"hasLockingStackEffect":false,"itemToPlayCardId":285,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 23:20:00 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:20:00 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":58,"creatorCardId":284,"hasLockingStackEffect":false,"itemToPlayCardId":285,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 23:20:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":224,"_text":"Remove After Resolve ActivateItem 58  "}} 

 Player 1 23:20:00 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:20:00 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":58,"creatorCardId":284,"hasLockingStackEffect":false,"itemToPlayCardId":285,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 23:20:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":225,"_text":"Response Remove After Resolve ActivateItem 58"},"childOfId":224} 

 Player 1 23:20:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":226,"_text":"Wait For Response From Player 2 "},"childOfId":224} 

 Player 1 23:20:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 23:20:00 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 23:20:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Forever Alone"} 

 Player 2 23:20:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Forever Alone"} 

 Player 2 23:20:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Forever Alone"} 

 Player 2 23:20:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Forever Alone"} 

 Player 2 23:20:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Forever Alone"} 

 Player 2 23:20:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Forever Alone"} 

 Player 2 23:20:01 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 23:20:01 $ACTION_MASSAGE_REMOVE:  
{"id":226} 

 Player 1 23:20:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":227,"_text":"Wait For Response From Player 1 "},"childOfId":224} 

 Player 1 23:20:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:20:01 $ACTION_MASSAGE_REMOVE:  
{"id":227} 

 Player 1 23:20:01 $ACTION_MASSAGE_REMOVE:  
{"id":225} 

 Player 1 23:20:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":228,"_text":"Stack Was Emptied "}} 

 Player 1 23:20:01 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:20:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 23:20:47 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:20:47 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 1 23:20:47 $END_TURN:  

 Player 1 23:20:47 $SET_TURN:  
{"playerId":2} 

 Player 1 23:20:47 $START_TURN:  
{"playerId":2} 

 Player 2 23:20:47 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 23:20:47 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:20:47 $RECHARGE_ITEM:  
{"cardId":293} 

 Player 2 23:20:47 $PLAYER_RECHARGE_ITEM:  
{"playerId":2,"cardId":293} 

 Player 2 23:20:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:20:47 $NEXT_STACK_ID:  

 Player 2 23:20:47 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:20:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 23:20:47 $ADD_TO_STACK:  
{"stackEffect":{"entityId":59,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 2 23:20:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 23:20:48 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":59,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 2 23:20:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":229,"_text":"Add StartTurnLoot 59 "}} 

 Player 2 23:20:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:20:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 23:20:48 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":59,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 2 23:20:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":230,"_text":"Response Adding StartTurnLoot 59"},"childOfId":229} 

 Player 2 23:20:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":231,"_text":"Wait For Response From Player 2 "},"childOfId":229} 

 Player 2 23:20:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:20:48 $ACTION_MASSAGE_REMOVE:  
{"id":231} 

 Player 2 23:20:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":232,"_text":"Wait For Response From Player 1 "},"childOfId":229} 

 Player 2 23:20:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:20:48 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:20:48 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 23:20:48 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:20:48 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:20:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 23:20:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 23:20:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 23:20:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 23:20:48 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:20:48 $ACTION_MASSAGE_REMOVE:  
{"id":232} 

 Player 2 23:20:48 $ACTION_MASSAGE_REMOVE:  
{"id":230} 

 Player 2 23:20:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":233,"_text":"Resolve StartTurnLoot 59 "}} 

 Player 2 23:20:48 $DRAW_CARD:  
{"deckType":1} 

 Player 2 23:20:48 $MOVE_CARD:  
{"moveIndex":18,"cardId":46,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 23:20:48 $MOVE_CARD_END:  
{"moveIndex":18,"cardId":46,"flipIfFlipped":false,"playerId":2} 

 Player 2 23:20:49 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":46} 

 Player 2 23:20:49 $FLIP_CARD:  
{"cardId":46} 

 Player 2 23:20:49 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":46} 

 Player 2 23:20:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 23:20:49 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":59,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 2 23:20:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:20:49 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":59,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 2 23:20:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":234,"_text":"Remove After Resolve StartTurnLoot 59  "}} 

 Player 2 23:20:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:20:49 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":59,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 2 23:20:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":235,"_text":"Response Remove After Resolve StartTurnLoot 59"},"childOfId":234} 

 Player 2 23:20:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":236,"_text":"Wait For Response From Player 1 "},"childOfId":234} 

 Player 2 23:20:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:20:49 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:20:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 23:20:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 23:20:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 23:20:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 23:20:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 23:20:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 23:20:49 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:20:49 $ACTION_MASSAGE_REMOVE:  
{"id":236} 

 Player 2 23:20:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":237,"_text":"Wait For Response From Player 2 "},"childOfId":234} 

 Player 2 23:20:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:20:49 $ACTION_MASSAGE_REMOVE:  
{"id":237} 

 Player 2 23:20:49 $ACTION_MASSAGE_REMOVE:  
{"id":235} 

 Player 2 23:20:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":238,"_text":"Stack Was Emptied "}} 

 Player 2 23:20:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:21:16 $SHOW_DECISION:  
{"startCardId":292,"endCardId":293} 

 Player 2 23:21:19 $NEXT_STACK_ID:  

 Player 2 23:21:19 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:21:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Incubus"} 

 Player 2 23:21:19 $ADD_TO_STACK:  
{"stackEffect":{"entityId":60,"creatorCardId":292,"hasLockingStackEffect":false,"itemToPlayCardId":293,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 23:21:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Incubus"} 

 Player 2 23:21:20 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":60,"creatorCardId":292,"hasLockingStackEffect":false,"itemToPlayCardId":293,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 23:21:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":239,"_text":"Add ActivateItem 60 "}} 

 Player 1 23:21:20 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:21:20 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:21:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Incubus"} 

 Player 1 23:21:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Incubus"} 

 Player 2 23:21:21 $SHOW_EFFECT_CHOSEN:  
{"cardId":293,"pos":{"x":-1334.672,"y":-542.4090000000001},"size":{"w":980,"h":160}} 

 Player 2 23:21:24 $USE_ITEM:  
{"cardId":293} 

 Player 2 23:21:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:21:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Incubus"} 

 Player 2 23:21:24 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":60,"creatorCardId":292,"hasLockingStackEffect":false,"itemToPlayCardId":293,"itemPlayerId":2,"effectToDoData":{"type":1,"index":1},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 23:21:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":240,"_text":"Response Adding ActivateItem 60"},"childOfId":239} 

 Player 2 23:21:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":241,"_text":"Wait For Response From Player 2 "},"childOfId":239} 

 Player 2 23:21:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:21:24 $ACTION_MASSAGE_REMOVE:  
{"id":241} 

 Player 2 23:21:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":242,"_text":"Wait For Response From Player 1 "},"childOfId":239} 

 Player 2 23:21:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:21:24 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:21:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Incubus"} 

 Player 1 23:21:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Incubus"} 

 Player 1 23:21:24 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:21:24 $ACTION_MASSAGE_REMOVE:  
{"id":242} 

 Player 2 23:21:24 $ACTION_MASSAGE_REMOVE:  
{"id":240} 

 Player 2 23:21:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":243,"_text":"Resolve ActivateItem 60 "}} 

 Player 2 23:21:24 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":293,"particleType":6} 

 Player 2 23:21:26 $DISABLE_PARTICLE_EFFECT:  
{"cardId":293,"particleType":6} 

 Player 2 23:21:26 $DRAW_CARD:  
{"deckType":1} 

 Player 2 23:21:26 $MOVE_CARD:  
{"moveIndex":19,"cardId":75,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 23:21:27 $MOVE_CARD_END:  
{"moveIndex":19,"cardId":75,"flipIfFlipped":false,"playerId":2} 

 Player 2 23:21:27 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":75} 

 Player 2 23:21:27 $FLIP_CARD:  
{"cardId":75} 

 Player 2 23:21:27 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":75} 

 Player 2 23:21:30 $MOVE_CARD:  
{"moveIndex":20,"cardId":46,"placeID":6,"flipIfFlipped":false,"playerId":2,"placeType":"Card"} 

 Player 1 23:21:31 $MOVE_CARD_END:  
{"moveIndex":20,"cardId":46,"flipIfFlipped":false,"playerId":2} 

 Player 2 23:21:31 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":46} 

 Player 2 23:21:31 $DECK_ADD_TO_TOP:  
{"deckType":1,"cardId":46} 

 Player 2 23:21:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Incubus"} 

 Player 2 23:21:31 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":60,"creatorCardId":292,"hasLockingStackEffect":false,"itemToPlayCardId":293,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 23:21:31 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:21:31 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":60,"creatorCardId":292,"hasLockingStackEffect":false,"itemToPlayCardId":293,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 23:21:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":244,"_text":"Remove After Resolve ActivateItem 60  "}} 

 Player 2 23:21:31 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:21:31 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":60,"creatorCardId":292,"hasLockingStackEffect":false,"itemToPlayCardId":293,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 23:21:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":245,"_text":"Response Remove After Resolve ActivateItem 60"},"childOfId":244} 

 Player 2 23:21:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":246,"_text":"Wait For Response From Player 1 "},"childOfId":244} 

 Player 2 23:21:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:21:31 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:21:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Incubus"} 

 Player 1 23:21:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Incubus"} 

 Player 1 23:21:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Incubus"} 

 Player 1 23:21:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Incubus"} 

 Player 1 23:21:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Incubus"} 

 Player 1 23:21:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Incubus"} 

 Player 1 23:21:31 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:21:31 $ACTION_MASSAGE_REMOVE:  
{"id":246} 

 Player 2 23:21:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":247,"_text":"Wait For Response From Player 2 "},"childOfId":244} 

 Player 2 23:21:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:21:31 $ACTION_MASSAGE_REMOVE:  
{"id":247} 

 Player 2 23:21:31 $ACTION_MASSAGE_REMOVE:  
{"id":245} 

 Player 2 23:21:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":248,"_text":"Stack Was Emptied "}} 

 Player 2 23:21:31 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:21:33 $SHOW_DECISION:  
{"startCardId":75,"endCardId":75,"flipEndCard":true} 

 Player 2 23:21:36 $NEXT_STACK_ID:  

 Player 2 23:21:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:21:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(1) "} 

 Player 2 23:21:36 $ADD_TO_STACK:  
{"stackEffect":{"entityId":61,"creatorCardId":292,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":75,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 23:21:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(1) "} 

 Player 2 23:21:36 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":61,"creatorCardId":292,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":75,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 23:21:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":249,"_text":"Add PlayLootCardStackEffect 61 "}} 

 Player 2 23:21:36 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":75} 

 Player 2 23:21:36 $MOVE_CARD:  
{"moveIndex":21,"cardId":75,"placeID":300,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 23:21:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:21:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:21:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(1) "} 

 Player 1 23:21:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(1) "} 

 Player 1 23:21:36 $MOVE_CARD_END:  
{"moveIndex":21,"cardId":75,"flipIfFlipped":true,"playerId":2} 

 Player 2 23:21:37 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":75} 

 Player 2 23:21:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(1): addMoney"} 

 Player 2 23:21:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:21:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(1): addMoney"} 

 Player 2 23:21:37 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":61,"creatorCardId":292,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":75,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":75,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 23:21:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":250,"_text":"Response Adding PlayLootCardStackEffect 61"},"childOfId":249} 

 Player 2 23:21:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":251,"_text":"Wait For Response From Player 2 "},"childOfId":249} 

 Player 2 23:21:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:21:37 $ACTION_MASSAGE_REMOVE:  
{"id":251} 

 Player 2 23:21:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":252,"_text":"Wait For Response From Player 1 "},"childOfId":249} 

 Player 2 23:21:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:21:37 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:21:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(1) "} 

 Player 1 23:21:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(1) "} 

 Player 1 23:21:37 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:21:37 $ACTION_MASSAGE_REMOVE:  
{"id":252} 

 Player 2 23:21:37 $ACTION_MASSAGE_REMOVE:  
{"id":250} 

 Player 2 23:21:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":253,"_text":"Resolve PlayLootCardStackEffect 61 "}} 

 Player 2 23:21:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(1): addMoney"} 

 Player 2 23:21:37 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":75,"particleType":6} 

 Player 2 23:21:39 $DISABLE_PARTICLE_EFFECT:  
{"cardId":75,"particleType":6} 

 Player 2 23:21:39 $SET_MONEY:  
{"playerId":2,"numOfCoins":19} 

 Player 2 23:21:39 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":10}],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":21,"originStackId":-1},"isAfterActivation":true,"index":21} 

 Player 2 23:21:39 $REMOVE_FROM_PILE:  
{"cardId":75} 

 Player 2 23:21:39 $MOVE_CARD:  
{"moveIndex":22,"cardId":75,"placeID":301,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 23:21:39 $MOVE_CARD_END:  
{"moveIndex":22,"cardId":75,"flipIfFlipped":true,"playerId":2} 

 Player 2 23:21:39 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":75} 

 Player 2 23:21:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(1): addMoney"} 

 Player 2 23:21:39 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":61,"creatorCardId":292,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":75,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 23:21:40 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:21:40 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":61,"creatorCardId":292,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":75,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 23:21:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":254,"_text":"Remove After Resolve PlayLootCardStackEffect 61  "}} 

 Player 2 23:21:40 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:21:40 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":61,"creatorCardId":292,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":75,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 23:21:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":255,"_text":"Response Remove After Resolve PlayLootCardStackEffect 61"},"childOfId":254} 

 Player 2 23:21:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":256,"_text":"Wait For Response From Player 1 "},"childOfId":254} 

 Player 2 23:21:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:21:40 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:21:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(1) "} 

 Player 1 23:21:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(1) "} 

 Player 1 23:21:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(1) "} 

 Player 1 23:21:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(1) "} 

 Player 1 23:21:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(1) "} 

 Player 1 23:21:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(1) "} 

 Player 1 23:21:40 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:21:40 $ACTION_MASSAGE_REMOVE:  
{"id":256} 

 Player 2 23:21:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":257,"_text":"Wait For Response From Player 2 "},"childOfId":254} 

 Player 2 23:21:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:21:40 $ACTION_MASSAGE_REMOVE:  
{"id":257} 

 Player 2 23:21:40 $ACTION_MASSAGE_REMOVE:  
{"id":255} 

 Player 2 23:21:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":258,"_text":"Stack Was Emptied "}} 

 Player 2 23:21:40 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:21:42 $SHOW_DECISION:  
{"startCardId":292,"endCardId":144} 

 Player 2 23:21:45 $NEXT_STACK_ID:  

 Player 2 23:21:45 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:21:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 

 Player 2 23:21:45 $ADD_TO_STACK:  
{"stackEffect":{"entityId":62,"creatorCardId":292,"itemToPurchaseCardId":144,"playerWhoBuysCardId":292,"cost":10,"stackEffectType":9}} 

 Player 2 23:21:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 

 Player 2 23:21:45 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":62,"creatorCardId":292,"itemToPurchaseCardId":144,"playerWhoBuysCardId":292,"cost":10,"stackEffectType":9}} 

 Player 2 23:21:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":259,"_text":"Add PurchaseItem 62 "}} 

 Player 2 23:21:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:21:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 

 Player 2 23:21:45 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":62,"creatorCardId":292,"itemToPurchaseCardId":144,"playerWhoBuysCardId":292,"cost":10,"stackEffectType":9}} 

 Player 2 23:21:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":260,"_text":"Response Adding PurchaseItem 62"},"childOfId":259} 

 Player 2 23:21:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":261,"_text":"Wait For Response From Player 2 "},"childOfId":259} 

 Player 2 23:21:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:21:45 $ACTION_MASSAGE_REMOVE:  
{"id":261} 

 Player 2 23:21:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":262,"_text":"Wait For Response From Player 1 "},"childOfId":259} 

 Player 2 23:21:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:21:45 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:21:45 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:21:45 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 23:21:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 

 Player 1 23:21:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 

 Player 1 23:21:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 

 Player 1 23:21:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 

 Player 1 23:21:45 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:21:45 $ACTION_MASSAGE_REMOVE:  
{"id":262} 

 Player 2 23:21:45 $ACTION_MASSAGE_REMOVE:  
{"id":260} 

 Player 2 23:21:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":263,"_text":"Resolve PurchaseItem 62 "}} 

 Player 2 23:21:45 $SET_MONEY:  
{"playerId":2,"numOfCoins":9} 

 Player 2 23:21:45 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-10}],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":22,"originStackId":-1},"isAfterActivation":true,"index":22} 

 Player 2 23:21:45 $DRAW_CARD:  
{"deckType":5} 

 Player 2 23:21:45 $MOVE_CARD:  
{"moveIndex":23,"cardId":145,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 

 Player 1 23:21:46 $MOVE_CARD_END:  
{"moveIndex":23,"cardId":145,"flipIfFlipped":true,"playerId":2} 

 Player 2 23:21:46 $ADD_AN_ITEM:  
{"playerId":2,"cardId":145,"isReward":false} 

 Player 2 23:21:46 $LOG_ERROR:  
"error while resolving stack effect 62" 
//////Error From Player 2////
  

 Player 2 23:21:46 $LOG_ERROR:  
//////Error From Player 2////
 [object Object]
////// 

 Player 2 23:21:46 $LOG_ERROR:  
{"message":"\"An Empty Paid Effect Slot In Battery Bum\"","stack":"\"Error: An Empty Paid Effect Slot In Battery Bum\\n    at CardEffect.testEffectsPreConditions (http://localhost:7456/preview-scripts/assets/Script/Entites/CardEffect.js:106:23)\\n    at Function.CardManager.makeItemActivateable (http://localhost:7456/preview-scripts/assets/Script/Managers/CardManager.js:404:54)\\n    at Player.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/GameEntities/Player.js:589:47)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\\n    at fulfilled (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89787:28)\""} 
//////Error From Player 2////
  

 Player 2 23:21:46 $LOG_ERROR:  
//////Error From Player 2////

 "\"An Empty Paid Effect Slot In Battery Bum\""

 + "\"Error: An Empty Paid Effect Slot In Battery Bum\
    at CardEffect.testEffectsPreConditions (http://localhost:7456/preview-scripts/assets/Script/Entites/CardEffect.js:106:23)\
    at Function.CardManager.makeItemActivateable (http://localhost:7456/preview-scripts/assets/Script/Managers/CardManager.js:404:54)\
    at Player.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/GameEntities/Player.js:589:47)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at fulfilled (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89787:28)\""

////// 
//////Error From Player 2////

 "\"An Empty Paid Effect Slot In Battery Bum\""

 + "\"Error: An Empty Paid Effect Slot In Battery Bum\
    at CardEffect.testEffectsPreConditions (http://localhost:7456/preview-scripts/assets/Script/Entites/CardEffect.js:106:23)\
    at Function.CardManager.makeItemActivateable (http://localhost:7456/preview-scripts/assets/Script/Managers/CardManager.js:404:54)\
    at Player.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/GameEntities/Player.js:589:47)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at fulfilled (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89787:28)\""

////// 

 Player 2 23:21:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:21:46 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":62,"creatorCardId":292,"itemToPurchaseCardId":144,"playerWhoBuysCardId":292,"cost":10,"stackEffectType":9}} 

 Player 2 23:21:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":264,"_text":"Remove After Resolve PurchaseItem 62  "}} 

 Player 2 23:21:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:21:46 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":62,"creatorCardId":292,"itemToPurchaseCardId":144,"playerWhoBuysCardId":292,"cost":10,"stackEffectType":9}} 

 Player 2 23:21:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":265,"_text":"Response Remove After Resolve PurchaseItem 62"},"childOfId":264} 

 Player 2 23:21:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":266,"_text":"Wait For Response From Player 1 "},"childOfId":264} 

 Player 2 23:21:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 23:21:47 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 23:21:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 

 Player 1 23:21:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 

 Player 1 23:21:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 

 Player 1 23:21:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 

 Player 1 23:21:47 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 23:21:47 $ACTION_MASSAGE_REMOVE:  
{"id":266} 

 Player 2 23:21:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":267,"_text":"Wait For Response From Player 2 "},"childOfId":264} 

 Player 2 23:21:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 23:21:48 $LOG_ERROR:  
{"message":"\"An Empty Paid Effect Slot In Battery Bum\"","stack":"\"Error: An Empty Paid Effect Slot In Battery Bum\\n    at CardEffect.testEffectsPreConditions (http://localhost:7456/preview-scripts/assets/Script/Entites/CardEffect.js:106:23)\\n    at Player.calculateReactions (http://localhost:7456/preview-scripts/assets/Script/Entites/GameEntities/Player.js:1395:61)\\n    at Player.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/GameEntities/Player.js:1462:30)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\\n    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\\n    at new Promise (<anonymous>)\\n    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\\n    at Player.getResponse (http://localhost:7456/preview-scripts/assets/Script/Entites/GameEntities/Player.js:1450:16)\\n    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/Stack.js:260:61)\""} 
//////Error From Player 2////
  

 Player 2 23:21:48 $LOG_ERROR:  
//////Error From Player 2////

 "\"An Empty Paid Effect Slot In Battery Bum\""

 + "\"Error: An Empty Paid Effect Slot In Battery Bum\
    at CardEffect.testEffectsPreConditions (http://localhost:7456/preview-scripts/assets/Script/Entites/CardEffect.js:106:23)\
    at Player.calculateReactions (http://localhost:7456/preview-scripts/assets/Script/Entites/GameEntities/Player.js:1395:61)\
    at Player.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/GameEntities/Player.js:1462:30)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\
    at new Promise (<anonymous>)\
    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\
    at Player.getResponse (http://localhost:7456/preview-scripts/assets/Script/Entites/GameEntities/Player.js:1450:16)\
    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/Stack.js:260:61)\""

////// 
//////Error From Player 2////

 "\"An Empty Paid Effect Slot In Battery Bum\""

 + "\"Error: An Empty Paid Effect Slot In Battery Bum\
    at CardEffect.testEffectsPreConditions (http://localhost:7456/preview-scripts/assets/Script/Entites/CardEffect.js:106:23)\
    at Player.calculateReactions (http://localhost:7456/preview-scripts/assets/Script/Entites/GameEntities/Player.js:1395:61)\
    at Player.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/GameEntities/Player.js:1462:30)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\
    at new Promise (<anonymous>)\
    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\
    at Player.getResponse (http://localhost:7456/preview-scripts/assets/Script/Entites/GameEntities/Player.js:1450:16)\
    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/Stack.js:260:61)\""

////// 

 Player 2 23:21:48 $ACTION_MASSAGE_REMOVE:  
{"id":267} 

 Player 2 23:21:48 $ACTION_MASSAGE_REMOVE:  
{"id":265} 

 Player 2 23:21:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":268,"_text":"Stack Was Emptied "}} 

 Player 2 23:21:48 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:21:48 $LOG_ERROR:  
{"message":"\"An Empty Paid Effect Slot In Battery Bum\"","stack":"\"Error: An Empty Paid Effect Slot In Battery Bum\\n    at CardEffect.testEffectsPreConditions (http://localhost:7456/preview-scripts/assets/Script/Entites/CardEffect.js:106:23)\\n    at Player.calculateReactions (http://localhost:7456/preview-scripts/assets/Script/Entites/GameEntities/Player.js:1395:61)\\n    at Function.ActionManager.updateActionsForTurnPlayer (http://localhost:7456/preview-scripts/assets/Script/Managers/ActionManager.js:71:31)\\n    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Managers/ActionManager.js:329:51)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\\n    at fulfilled (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89787:28)\""} 
//////Error From Player 2////
  

 Player 2 23:21:48 $LOG_ERROR:  
//////Error From Player 2////

 "\"An Empty Paid Effect Slot In Battery Bum\""

 + "\"Error: An Empty Paid Effect Slot In Battery Bum\
    at CardEffect.testEffectsPreConditions (http://localhost:7456/preview-scripts/assets/Script/Entites/CardEffect.js:106:23)\
    at Player.calculateReactions (http://localhost:7456/preview-scripts/assets/Script/Entites/GameEntities/Player.js:1395:61)\
    at Function.ActionManager.updateActionsForTurnPlayer (http://localhost:7456/preview-scripts/assets/Script/Managers/ActionManager.js:71:31)\
    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Managers/ActionManager.js:329:51)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at fulfilled (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89787:28)\""

////// 
//////Error From Player 2////

 "\"An Empty Paid Effect Slot In Battery Bum\""

 + "\"Error: An Empty Paid Effect Slot In Battery Bum\
    at CardEffect.testEffectsPreConditions (http://localhost:7456/preview-scripts/assets/Script/Entites/CardEffect.js:106:23)\
    at Player.calculateReactions (http://localhost:7456/preview-scripts/assets/Script/Entites/GameEntities/Player.js:1395:61)\
    at Function.ActionManager.updateActionsForTurnPlayer (http://localhost:7456/preview-scripts/assets/Script/Managers/ActionManager.js:71:31)\
    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Managers/ActionManager.js:329:51)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at fulfilled (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89787:28)\""

////// 

 Player 2 23:21:48 $LOG_ERROR:  
{"message":"\"An Empty Paid Effect Slot In Battery Bum\"","stack":"\"Error: An Empty Paid Effect Slot In Battery Bum\\n    at CardEffect.testEffectsPreConditions (http://localhost:7456/preview-scripts/assets/Script/Entites/CardEffect.js:106:23)\\n    at Function.CardManager.makeItemActivateable (http://localhost:7456/preview-scripts/assets/Script/Managers/CardManager.js:404:54)\\n    at Function.ActionManager.updateActionsForTurnPlayer (http://localhost:7456/preview-scripts/assets/Script/Managers/ActionManager.js:150:47)\\n    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Managers/ActionManager.js:329:51)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\\n    at fulfilled (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89787:28)\""} 
//////Error From Player 2////
  

 Player 2 23:21:48 $LOG_ERROR:  
//////Error From Player 2////

 "\"An Empty Paid Effect Slot In Battery Bum\""

 + "\"Error: An Empty Paid Effect Slot In Battery Bum\
    at CardEffect.testEffectsPreConditions (http://localhost:7456/preview-scripts/assets/Script/Entites/CardEffect.js:106:23)\
    at Function.CardManager.makeItemActivateable (http://localhost:7456/preview-scripts/assets/Script/Managers/CardManager.js:404:54)\
    at Function.ActionManager.updateActionsForTurnPlayer (http://localhost:7456/preview-scripts/assets/Script/Managers/ActionManager.js:150:47)\
    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Managers/ActionManager.js:329:51)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at fulfilled (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89787:28)\""

////// 
//////Error From Player 2////

 "\"An Empty Paid Effect Slot In Battery Bum\""

 + "\"Error: An Empty Paid Effect Slot In Battery Bum\
    at CardEffect.testEffectsPreConditions (http://localhost:7456/preview-scripts/assets/Script/Entites/CardEffect.js:106:23)\
    at Function.CardManager.makeItemActivateable (http://localhost:7456/preview-scripts/assets/Script/Managers/CardManager.js:404:54)\
    at Function.ActionManager.updateActionsForTurnPlayer (http://localhost:7456/preview-scripts/assets/Script/Managers/ActionManager.js:150:47)\
    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Managers/ActionManager.js:329:51)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at fulfilled (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89787:28)\""

////// 

 Player 2 17:25:59 $MATCH: 