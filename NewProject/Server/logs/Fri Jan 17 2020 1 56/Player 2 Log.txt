Start Log 
 Player 2 01:56:50 $MOVE_TO_TABLE:  
 Player 2 01:56:59 $FINISH_LOAD:  

 {"id":2,"turnPlayerId":2} 
 Player 2 01:56:59 $ASSIGN_CHAR_TO_PLAYER:  

 {"playerId":1,"charCardId":285,"itemCardId":286} 
 Player 2 01:56:59 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":294}],"result":true,"preventMethod":false,"methodScopeId":293,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 01:56:59 $ASSIGN_CHAR_TO_PLAYER:  

 {"playerId":2,"charCardId":293,"itemCardId":294} 
 Player 2 01:56:59 $DECK_ARRAGMENT:  

 {"deckType":1,"arrangement":[101,133,80,117,62,88,110,111,89,92,87,81,71,86,114,98,38,103,27,112,56,121,17,21,60,32,77,142,137,68,37,48,73,140,29,39,106,90,49,36,91,35,53,23,131,20,61,128,95,123,19,76,45,65,15,9,136,28,13,83,50,16,40,18,75,104,33,125,52,108,22,100,82,57,14,8,67,58,122,54,139,84,119,94,43,46,126,24,12,7,63,41,109,59,64,93,70,34,130,135,127,55,102,26,10,96,134,11,132,47,42,30,78,99,79,44,113,129,51,25,120,85,116,107,74,115,141,138,66,72,97,69,124,118,105,31]} 
 Player 2 01:56:59 $DECK_ARRAGMENT:  

 {"deckType":2,"arrangement":[246,254,271,233,226,247,236,265,223,253,262,243,245,250,228,261,230,251,275,238,252,227,239,258,225,232,249,237,272,257,273,263,224,267,244,269,276,270,268,242,229,266,240,255,234,235,256,231,248,260,259,241,264,274]} 
 Player 2 01:56:59 $DECK_ARRAGMENT:  

 {"deckType":5,"arrangement":[174,157,166,173,203,187,175,163,207,195,220,214,189,188,193,218,217,155,213,216,158,182,162,211,197,170,184,205,145,147,148,185,161,169,191,215,198,151,204,194,168,165,202,212,171,181,176,177,196,219,153,192,179,186,160,156,210,154,209,167,178,180,149,150,208,146,190,183,164,199,159,172,201,206,152,200]} 
 Player 2 01:56:59 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 01:56:59 $FLIP_CARD:  

 {"cardId":200} 
 Player 2 01:56:59 $ADD_STORE_CARD:  

 {"cardId":200} 
 Player 2 01:56:59 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 01:56:59 $FLIP_CARD:  

 {"cardId":152} 
 Player 2 01:56:59 $ADD_STORE_CARD:  

 {"cardId":152} 
 Player 2 01:56:59 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 01:56:59 $FLIP_CARD:  

 {"cardId":274} 
 Player 2 01:56:59 $REGISTER_PASSIVE_ITEM:  

 {"cardId":274} 
 Player 2 01:56:59 $ADD_MONSTER:  

 {"monsterPlaceId":1,"monsterId":274} 
 Player 2 01:56:59 $NEW_MONSTER_ON_PLACE:  

 {"cardId":274,"monsterPlaceId":1} 
 Player 2 01:56:59 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 01:56:59 $FLIP_CARD:  

 {"cardId":264} 
 Player 2 01:56:59 $ADD_MONSTER:  

 {"monsterPlaceId":2,"monsterId":264} 
 Player 2 01:57:00 $NEW_MONSTER_ON_PLACE:  

 {"cardId":264,"monsterPlaceId":2} 
 Player 2 01:57:00 $SET_MONEY:  

 {"playerId":1,"numOfCoins":3} 
 Player 2 01:57:00 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":285,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 2 01:57:00 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 01:57:00 $MOVE_CARD:  

 {"moveIndex":1,"cardId":31,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 01:57:00 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":31} 
 Player 2 01:57:00 $FLIP_CARD:  

 {"cardId":31} 
 Player 2 01:57:00 $FLIP_CARD:  

 {"cardId":31} 
 Player 2 01:57:00 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":31} 
 Player 2 01:57:00 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 01:57:00 $MOVE_CARD:  

 {"moveIndex":2,"cardId":105,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 01:57:01 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":105} 
 Player 2 01:57:01 $FLIP_CARD:  

 {"cardId":105} 
 Player 2 01:57:01 $FLIP_CARD:  

 {"cardId":105} 
 Player 2 01:57:01 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":105} 
 Player 2 01:57:01 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 01:57:01 $MOVE_CARD:  

 {"moveIndex":3,"cardId":118,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 01:57:01 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":118} 
 Player 2 01:57:01 $FLIP_CARD:  

 {"cardId":118} 
 Player 2 01:57:01 $FLIP_CARD:  

 {"cardId":118} 
 Player 2 01:57:01 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":118} 
 Player 2 01:57:01 $SET_MONEY:  

 {"playerId":2,"numOfCoins":3} 
 Player 2 01:57:01 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":293,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Player 2 01:57:01 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 01:57:01 $MOVE_CARD:  

 {"moveIndex":4,"cardId":124,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 01:57:02 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":124} 
 Player 2 01:57:02 $FLIP_CARD:  

 {"cardId":124} 
 Player 2 01:57:02 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":124} 
 Player 2 01:57:02 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 01:57:02 $MOVE_CARD:  

 {"moveIndex":5,"cardId":69,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 01:57:02 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":69} 
 Player 2 01:57:02 $FLIP_CARD:  

 {"cardId":69} 
 Player 2 01:57:02 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":69} 
 Player 2 01:57:02 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 01:57:02 $MOVE_CARD:  

 {"moveIndex":6,"cardId":97,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 01:57:03 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":97} 
 Player 2 01:57:03 $FLIP_CARD:  

 {"cardId":97} 
 Player 2 01:57:03 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":97} 
 Player 2 01:57:03 $GAME_HAS_STARTED:  
 Player 2 01:57:03 $SET_TURN:  

 {"playerId":1} 
 Player 2 01:57:03 $START_TURN:  

 {"playerId":1} 
 Player 2 01:57:03 $UPDATE_ACTIONS:  
 Player 2 01:57:03 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 01:57:03 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 01:57:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 01:57:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 01:57:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 01:57:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 01:57:03 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:57:04 $MOVE_CARD_END:  

 {"moveIndex":7,"cardId":72,"flipIfFlipped":false,"playerId":1} 
 Player 2 01:57:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 01:57:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 01:57:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 01:57:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 01:57:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 01:57:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 01:57:04 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:57:20 $MOVE_CARD:  

 {"moveIndex":8,"cardId":161,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 
 Player 2 01:57:20 $REGISTER_PASSIVE_ITEM:  

 {"cardId":161} 
 Player 2 01:57:20 $MOVE_CARD:  

 {"moveIndex":9,"cardId":161,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 
 Player 2 01:57:20 $ADD_AN_ITEM:  

 {"playerId":2,"cardId":161,"isReward":true} 
 Player 2 01:57:20 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":161}],"result":true,"preventMethod":false,"methodScopeId":293,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 
 Player 2 01:57:31 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 01:57:31 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 01:57:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Spider"} 
 Player 2 01:57:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Spider"} 
 Player 2 01:57:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Spider"} 
 Player 2 01:57:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Spider"} 
 Player 2 01:57:31 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:57:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Spider"} 
 Player 2 01:57:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Spider"} 
 Player 2 01:57:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Spider"} 
 Player 2 01:57:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Spider"} 
 Player 2 01:57:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Spider"} 
 Player 2 01:57:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Spider"} 
 Player 2 01:57:32 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:57:33 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 01:57:33 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 01:57:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Spider<Monster>"} 
 Player 2 01:57:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Spider<Monster>"} 
 Player 2 01:57:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Spider<Monster>"} 
 Player 2 01:57:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Spider<Monster>"} 
 Player 2 01:57:36 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:57:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Spider<Monster>"} 
 Player 2 01:57:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Spider<Monster>"} 
 Player 2 01:57:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Spider<Monster> \n2:Activate Dead Bird "} 
 Player 2 01:57:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Spider<Monster> \n2:Activate Dead Bird "} 
 Player 2 01:57:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Spider<Monster> \n2:Activate Dead Bird "} 
 Player 2 01:57:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Spider<Monster> \n2:Activate Dead Bird "} 
 Player 2 01:57:36 $LOG_ERROR:  

 {"message":"\"no MetaIndex\"","stack":"\"Error: no MetaIndex\\n    at GetTargetFromPassiveMeta.collectData (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/DataCollector/GetTargetFromPassiveMeta.js:34:19)\\n    at CardEffect.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/CardEffect.js:326:60)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\\n    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\\n    at new Promise (<anonymous>)\\n    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\\n    at CardEffect.collectEffectData (http://localhost:7456/preview-scripts/assets/Script/Entites/CardEffect.js:302:16)\\n    at ChainCollector.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/DataCollector/ChainCollector.js:42:128)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\""} 
 Player 2 01:57:36 $LOG_ERROR:  

 {"message":"\"no MetaIndex\"","stack":"\"Error: no MetaIndex\\n    at GetTargetFromPassiveMeta.collectData (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/DataCollector/GetTargetFromPassiveMeta.js:34:19)\\n    at ChooseFromTargetCard.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/DataCollector/ChooseFromTargetCard.js:57:70)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\\n    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\\n    at new Promise (<anonymous>)\\n    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\\n    at ChooseFromTargetCard.collectData (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/DataCollector/ChooseFromTargetCard.js:46:16)\\n    at CardEffect.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/CardEffect.js:326:60)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\""} 
 Player 2 01:57:36 $LOG_ERROR:  

 {"message":"\"Cannot read property 'getComponent' of undefined\"","stack":"\"TypeError: Cannot read property 'getComponent' of undefined\\n    at http://localhost:7456/preview-scripts/assets/Script/Managers/DataInterpreter.js:159:56\\n    at Array.map (<anonymous>)\\n    at Function.DataInterpreter.convertToServerData (http://localhost:7456/preview-scripts/assets/Script/Managers/DataInterpreter.js:152:75)\\n    at CardEffect.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/CardEffect.js:362:62)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.throw (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\\n    at rejected (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89794:36)\""} 
 Player 2 02:00:03 $MATCH: 