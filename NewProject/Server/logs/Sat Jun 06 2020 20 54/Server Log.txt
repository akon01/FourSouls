Start Log 

 Player 1 20:54:05 $MATCH:  

 Player 1 20:54:05 $START_GAME:  

 Player 2 20:54:05 $MOVE_TO_TABLE:  

 Player 1 20:54:05 $MOVE_TO_TABLE:  

 Player 1 20:54:15 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 20:54:15 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 2 20:54:15 $SET_CHAR:  
{"originPlayerId":2,"playerId":1,"charCardId":480,"itemCardId":481} 

 Player 1 20:54:15 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":480,"itemCardId":481} 

 Player 1 20:54:15 $SET_CHAR_END:  
{"playerId":2} 

 Player 2 20:54:15 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":478,"itemCardId":479} 

 Player 2 20:54:15 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[270,203,173,11,117,158,35,196,200,193,30,253,75,6,188,134,272,195,225,254,247,112,58,145,265,29,41,32,10,23,183,79,165,186,67,220,204,39,251,191,215,216,205,263,224,151,159,231,125,271,179,142,160,226,234,211,44,168,182,152,53,73,229,86,244,90,143,64,78,45,108,22,113,83,9,237,243,217,37,274,177,246,43,57,162,240,105,174,94,26,92,68,12,190,147,31,115,48,169,27,89,5,153,223,150,232,210,138,38,184,123,194,52,71,111,198,149,167,17,82,166,213,207,259,181,93,109,33,96,87,102,267,107,235,116,126,88,76,249,242,185,248,60,178,236,141,18,28,34,49,98,100,250,136,201,199,156,171,15,269,132,46,74,110,77,202,140,131,135,148,157,72,208,122,175,161,230,139,65,16,19,127,51,128,69,212,146,70,219,264,130,189,129,192,261,56,4,80,133,101,91,256,81,62,114,66,84,85,258,21,8,20,260,187,36,63,47,144,221,273,172,176,222,14,266,95,255,239,206,257,13,170,228,119,227,55,106,137,54,42,218,99,262,163,118,275,241,103,50,245,268,233,59,97,209,121,25,155,197,40,124,180,24,164,238,61,214,120,252,104,7,154]} 

 Player 2 20:54:15 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[436,426,447,384,460,388,434,422,403,441,382,387,410,415,430,363,444,389,433,404,450,401,366,371,465,369,375,464,397,399,440,427,448,398,395,376,463,367,396,386,365,408,452,373,424,432,414,453,370,445,380,409,457,402,439,425,368,383,443,392,364,423,451,438,442,418,407,412,385,416,429,455,400,391,428,381,419,379,435,458,405,461,446,413,390,377,437,456,431,462,421,420,449,454,394,372,393,459,406,374,411,417,378]} 

 Player 2 20:54:15 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[312,311,292,329,313,296,341,303,323,277,314,325,342,340,346,357,333,283,317,308,297,321,360,290,331,344,348,352,291,355,347,345,280,286,359,320,349,306,299,353,324,293,358,350,302,335,305,309,356,298,279,284,354,289,322,318,328,319,316,288,351,337,327,281,307,304,315,287,326,336,301,330,300,285,294,278,334,343,338,332,339,361,282,295,310]} 

 Player 2 20:54:15 $DRAW_CARD:  
{"deckType":5} 

 Player 2 20:54:15 $FLIP_CARD:  
{"cardId":310} 

 Player 2 20:54:15 $ADD_STORE_CARD:  
{"cardId":310} 

 Player 2 20:54:15 $DRAW_CARD:  
{"deckType":5} 

 Player 2 20:54:15 $FLIP_CARD:  
{"cardId":295} 

 Player 2 20:54:15 $ADD_STORE_CARD:  
{"cardId":295} 

 Player 2 20:54:15 $DRAW_CARD:  
{"deckType":2} 

 Player 2 20:54:15 $FLIP_CARD:  
{"cardId":378} 

 Player 2 20:54:15 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"NEW_ACTIVE_MONSTER","args":[{"type":0,"number":378}],"result":null,"preventMethod":false,"methodScopeId":378,"scopeIsPlayer":false,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 20:54:15 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":378} 

 Player 2 20:54:15 $NEW_MONSTER_ON_PLACE:  
{"cardId":378,"monsterPlaceId":1} 

 Player 2 20:54:15 $DRAW_CARD:  
{"deckType":2} 

 Player 2 20:54:15 $FLIP_CARD:  
{"cardId":417} 

 Player 2 20:54:16 $REGISTER_PASSIVE_ITEM:  
{"cardId":417} 

 Player 2 20:54:16 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"NEW_ACTIVE_MONSTER","args":[{"type":0,"number":417}],"result":null,"preventMethod":false,"methodScopeId":417,"scopeIsPlayer":false,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 20:54:16 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":417} 

 Player 2 20:54:16 $NEW_MONSTER_ON_PLACE:  
{"cardId":417,"monsterPlaceId":2} 

 Player 2 20:54:16 $REGISTER_PASSIVE_ITEM:  
{"cardId":467} 

 Player 2 20:54:16 $REGISTER_PASSIVE_ITEM:  
{"cardId":468} 

 Player 2 20:54:16 $REGISTER_PASSIVE_ITEM:  
{"cardId":469} 

 Player 2 20:54:16 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 20:54:16 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":480,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 20:54:16 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:54:16 $MOVE_CARD:  
{"moveIndex":1,"cardId":154,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:54:16 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"NEW_ACTIVE_MONSTER","args":[{"type":0,"number":378}],"result":null,"preventMethod":false,"methodScopeId":378,"scopeIsPlayer":false,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 20:54:16 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"NEW_ACTIVE_MONSTER","args":[{"type":0,"number":417}],"result":null,"preventMethod":false,"methodScopeId":417,"scopeIsPlayer":false,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 1 20:54:16 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":154,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:54:16 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":154} 

 Player 2 20:54:16 $FLIP_CARD:  
{"cardId":154} 

 Player 2 20:54:16 $FLIP_CARD:  
{"cardId":154} 

 Player 2 20:54:16 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":154} 

 Player 2 20:54:16 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":154}],"result":null,"preventMethod":false,"methodScopeId":480,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 2 20:54:16 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:54:16 $MOVE_CARD:  
{"moveIndex":2,"cardId":7,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:54:17 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":7,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:54:17 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":7} 

 Player 2 20:54:17 $FLIP_CARD:  
{"cardId":7} 

 Player 2 20:54:17 $FLIP_CARD:  
{"cardId":7} 

 Player 2 20:54:17 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":7} 

 Player 2 20:54:17 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":7}],"result":null,"preventMethod":false,"methodScopeId":480,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 2 20:54:17 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:54:17 $MOVE_CARD:  
{"moveIndex":3,"cardId":104,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:54:17 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":104,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:54:17 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":104} 

 Player 2 20:54:17 $FLIP_CARD:  
{"cardId":104} 

 Player 2 20:54:17 $FLIP_CARD:  
{"cardId":104} 

 Player 2 20:54:17 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":104} 

 Player 2 20:54:17 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":104}],"result":null,"preventMethod":false,"methodScopeId":480,"scopeIsPlayer":true,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 

 Player 2 20:54:17 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 20:54:17 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":478,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 

 Player 2 20:54:17 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:54:17 $MOVE_CARD:  
{"moveIndex":4,"cardId":252,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:54:18 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":252,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:54:18 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":252} 

 Player 2 20:54:18 $FLIP_CARD:  
{"cardId":252} 

 Player 2 20:54:18 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":252} 

 Player 2 20:54:18 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":252}],"result":null,"preventMethod":false,"methodScopeId":478,"scopeIsPlayer":true,"index":8,"originStackId":-1},"isAfterActivation":true,"index":8} 

 Player 2 20:54:18 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:54:18 $MOVE_CARD:  
{"moveIndex":5,"cardId":120,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:54:18 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":120,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:54:18 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":120} 

 Player 2 20:54:18 $FLIP_CARD:  
{"cardId":120} 

 Player 2 20:54:18 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":120} 

 Player 2 20:54:18 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":120}],"result":null,"preventMethod":false,"methodScopeId":478,"scopeIsPlayer":true,"index":9,"originStackId":-1},"isAfterActivation":true,"index":9} 

 Player 2 20:54:19 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:54:19 $MOVE_CARD:  
{"moveIndex":6,"cardId":214,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:54:19 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":214,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:54:19 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":214} 

 Player 2 20:54:19 $FLIP_CARD:  
{"cardId":214} 

 Player 2 20:54:19 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":214} 

 Player 2 20:54:19 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":214}],"result":null,"preventMethod":false,"methodScopeId":478,"scopeIsPlayer":true,"index":10,"originStackId":-1},"isAfterActivation":true,"index":10} 

 Player 2 20:54:19 $GAME_HAS_STARTED:  

 Player 2 20:54:19 $SET_TURN:  
{"playerId":1} 

 Player 2 20:54:19 $START_TURN:  
{"playerId":1} 

 Player 2 20:54:19 $UPDATE_ACTIONS:  

 Player 1 20:54:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:54:19 $NEXT_STACK_ID:  

 Player 1 20:54:19 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":480,"turnPlayerCardId":480,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"}} 

 Player 1 20:54:19 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":480,"turnPlayerCardId":480,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"}} 

 Player 1 20:54:19 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 20:54:19 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 1 20:54:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add Start Turn Loot Draw 1 "}} 

 Player 1 20:54:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:54:22 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":480,"turnPlayerCardId":480,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"}} 

 Player 1 20:54:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding Start Turn Loot Draw 1"},"childOfId":0} 

 Player 1 20:54:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 1 20:54:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:54:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 1 20:54:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:54:22 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:54:22 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[478]} 

 Player 2 20:54:22 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:54:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve Start Turn Loot Draw 1 "}} 

 Player 1 20:54:22 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":1,"creatorCardId":480,"turnPlayerCardId":480,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"}]} 

 Player 1 20:54:22 $DRAW_CARD:  
{"deckType":1} 

 Player 1 20:54:22 $MOVE_CARD:  
{"moveIndex":7,"cardId":61,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 20:54:23 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":61,"flipIfFlipped":false,"playerId":1} 

 Player 1 20:54:23 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":61} 

 Player 1 20:54:23 $FLIP_CARD:  
{"cardId":61} 

 Player 1 20:54:23 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":61} 

 Player 1 20:54:23 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":61}],"result":null,"preventMethod":false,"methodScopeId":480,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 1 20:54:23 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":1,"text":"Player 1 Has Drawn Loot For Start Turn"} 

 Player 1 20:54:23 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":480,"turnPlayerCardId":480,"stackEffectType":13,"lable":"Player 1 Has Drawn Loot For Start Turn"}} 

 Player 1 20:54:23 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 1 20:54:23 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 20:54:23 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 1 20:54:26 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":1} 

 Player 1 20:54:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve Start Turn Loot Draw 1  "}} 

 Player 1 20:54:26 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":480,"turnPlayerCardId":480,"stackEffectType":13,"lable":"Player 1 Has Drawn Loot For Start Turn"}} 

 Player 1 20:54:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve Start Turn Loot Draw 1"},"childOfId":5} 

 Player 1 20:54:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 1 20:54:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:54:26 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:54:26 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[478]} 

 Player 2 20:54:26 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:54:26 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 1 20:54:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 1 20:54:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:54:26 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 1 20:54:26 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 1 20:54:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 1 20:54:26 $CLEAR_SE_VIS:  

 Player 1 20:54:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:54:33 $CLEAR_SE_VIS:  

 Player 1 20:54:33 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 1 20:54:33 $CLEAR_SE_VIS:  

 Player 1 20:54:33 $END_TURN:  

 Player 1 20:54:33 $SET_TURN:  
{"playerId":2} 

 Player 1 20:54:33 $START_TURN:  
{"playerId":2} 

 Player 2 20:54:33 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 20:54:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:54:33 $NEXT_STACK_ID:  

 Player 2 20:54:33 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":478,"turnPlayerCardId":478,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}} 

 Player 2 20:54:33 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":478,"turnPlayerCardId":478,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}} 

 Player 2 20:54:33 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 20:54:33 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 1 20:54:33 $STACK_EMPTIED:  
{"playerId":2} 

 Player 2 20:54:33 $CLEAR_SE_VIS:  

 Player 2 20:54:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add Start Turn Loot Draw 2 "}} 

 Player 2 20:54:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:54:36 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":478,"turnPlayerCardId":478,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}} 

 Player 2 20:54:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding Start Turn Loot Draw 2"},"childOfId":10} 

 Player 2 20:54:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 2 20:54:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:54:36 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 2 20:54:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 2 20:54:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:54:36 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:54:36 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[480,481]} 

 Player 1 20:54:37 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:54:37 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 2 20:54:37 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 2 20:54:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve Start Turn Loot Draw 2 "}} 

 Player 2 20:54:37 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":2,"creatorCardId":478,"turnPlayerCardId":478,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}]} 

 Player 2 20:54:37 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:54:37 $MOVE_CARD:  
{"moveIndex":8,"cardId":238,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:54:37 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":238,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:54:37 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":238} 

 Player 2 20:54:37 $FLIP_CARD:  
{"cardId":238} 

 Player 2 20:54:37 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":238} 

 Player 2 20:54:37 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":238}],"result":null,"preventMethod":false,"methodScopeId":478,"scopeIsPlayer":true,"index":11,"originStackId":-1},"isAfterActivation":true,"index":11} 

 Player 2 20:54:37 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":2,"text":"Player 2 Has Drawn Loot For Start Turn"} 

 Player 2 20:54:37 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":478,"turnPlayerCardId":478,"stackEffectType":13,"lable":"Player 2 Has Drawn Loot For Start Turn"}} 

 Player 2 20:54:37 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 20:54:37 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 20:54:37 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 2 20:54:40 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":2} 

 Player 2 20:54:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve Start Turn Loot Draw 2  "}} 

 Player 2 20:54:40 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":478,"turnPlayerCardId":478,"stackEffectType":13,"lable":"Player 2 Has Drawn Loot For Start Turn"}} 

 Player 2 20:54:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve Start Turn Loot Draw 2"},"childOfId":15} 

 Player 2 20:54:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 2 20:54:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:54:40 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:54:40 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[480,481]} 

 Player 1 20:54:40 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:54:40 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 20:54:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 2 20:54:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:54:40 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 2 20:54:40 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 2 20:54:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 2 20:54:41 $CLEAR_SE_VIS:  

 Player 2 20:54:43 $NEXT_STACK_ID:  

 Player 2 20:54:43 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":478,"attackingPlayerCardId":478,"idOfCardBeingAttacked":378,"stackEffectType":4,"lable":"Player 2 declared attack on Clotty"}} 

 Player 2 20:54:43 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":478,"attackingPlayerCardId":478,"idOfCardBeingAttacked":378,"stackEffectType":4,"lable":"Player 2 declared attack on Clotty"}} 

 Player 2 20:54:43 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 20:54:43 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 2 20:54:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add Player Declare Attack On Monster 3 "}} 

 Player 2 20:54:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:54:46 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":478,"attackingPlayerCardId":478,"idOfCardBeingAttacked":378,"stackEffectType":4,"lable":"Player 2 declared attack on Clotty"}} 

 Player 2 20:54:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding Player Declare Attack On Monster 3"},"childOfId":20} 

 Player 2 20:54:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 2 20:54:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:54:46 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 2 20:54:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 2 20:54:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:54:46 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:54:46 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[480,481]} 

 Player 1 20:54:46 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:54:46 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 2 20:54:46 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 2 20:54:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve Player Declare Attack On Monster 3 "}} 

 Player 2 20:54:46 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":3,"creatorCardId":478,"attackingPlayerCardId":478,"idOfCardBeingAttacked":378,"stackEffectType":4,"lable":"Player 2 declared attack on Clotty"}]} 

 Player 2 20:54:46 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":378,"particleType":5} 

 Player 2 20:54:46 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":3,"text":"Player 2 Has Entered Battle with Clotty"} 

 Player 2 20:54:46 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":478,"scopeIsPlayer":true,"index":12,"originStackId":3},"isAfterActivation":true,"index":12} 

 Player 2 20:54:46 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":478,"attackingPlayerCardId":478,"idOfCardBeingAttacked":378,"stackEffectType":4,"lable":"Player 2 Has Entered Battle with Clotty"}} 

 Player 2 20:54:46 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 20:54:47 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 20:54:47 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 2 20:54:49 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":3} 

 Player 2 20:54:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Remove After Resolve Player Declare Attack On Monster 3  "}} 

 Player 2 20:54:49 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":478,"attackingPlayerCardId":478,"idOfCardBeingAttacked":378,"stackEffectType":4,"lable":"Player 2 Has Entered Battle with Clotty"}} 

 Player 2 20:54:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Response Remove After Resolve Player Declare Attack On Monster 3"},"childOfId":25} 

 Player 2 20:54:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Wait For Response From Player 1 "},"childOfId":25} 

 Player 2 20:54:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:54:49 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:54:49 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[480,481]} 

 Player 1 20:54:49 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:54:50 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 2 20:54:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":25} 

 Player 2 20:54:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:54:50 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 2 20:54:50 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 2 20:54:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Stack Was Emptied "}} 

 Player 2 20:54:50 $CLEAR_SE_VIS:  

 Player 2 20:54:50 $NEXT_STACK_ID:  

 Player 2 20:54:50 $ADD_TO_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":478,"rollingPlayerCardId":478,"stackEffectType":2,"attackedMonsterCardId":378,"lable":"Player 2 is rolling against Clotty<Monster>"}} 

 Player 2 20:54:50 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":478,"rollingPlayerCardId":478,"stackEffectType":2,"attackedMonsterCardId":378,"lable":"Player 2 is rolling against Clotty<Monster>"}} 

 Player 2 20:54:50 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 20:54:51 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 2 20:54:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Add Player Attack Roll On Monster 4 "}} 

 Player 2 20:54:53 $ROLL_DICE:  
{"playerId":2} 

 Player 2 20:54:55 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":6} 

 Player 2 20:54:55 $UPDATE_STACK_VIS:  
{"stackId":4,"text":"player rolled 6 vs Clotty<Monster>"} 

 Player 2 20:54:55 $SHOW_DICE_ROLL:  
{"stackId":4} 

 Player 2 20:54:58 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":4,"text":"Player 2 rolled 6 vs Clotty<Monster>"} 

 Player 2 20:54:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:54:58 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":478,"numberRolled":6,"rollingPlayerCardId":478,"stackEffectType":2,"attackedMonsterCardId":378,"lable":"Player 2 rolled 6 vs Clotty<Monster>"}} 

 Player 2 20:54:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Response Adding Player Attack Roll On Monster 4"},"childOfId":30} 

 Player 2 20:54:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Wait For Response From Player 2 "},"childOfId":30} 

 Player 2 20:54:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:54:58 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 2 20:54:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":30} 

 Player 2 20:54:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:54:58 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:54:58 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[480,481]} 

 Player 1 20:54:58 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:54:58 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 2 20:54:58 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 2 20:54:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Resolve Player Attack Roll On Monster 4 "}} 

 Player 2 20:54:58 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":4,"creatorCardId":478,"numberRolled":6,"rollingPlayerCardId":478,"stackEffectType":2,"attackedMonsterCardId":378,"lable":"Player 2 rolled 6 vs Clotty<Monster>"}]} 

 Player 2 20:54:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Added 0 to original roll"}} 

 Player 2 20:54:58 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":4,"text":"Player 2 Rolled 5 Against Clotty<Monster> 3"} 

 Player 2 20:54:58 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":4,"text":"Player 2 Roll Hit"} 

 Player 2 20:54:59 $NEXT_STACK_ID:  

 Player 2 20:54:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:54:59 $CLEAR_SE_VIS:  

 Player 2 20:54:59 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":478,"entityToDoDamageCardId":478,"entityToTakeDamageCardId":378,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5,"lable":"Isaac is going to hurt Clotty"}} 

 Player 2 20:54:59 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":478,"numberRolled":6,"rollingPlayerCardId":478,"stackEffectType":2,"attackedMonsterCardId":378,"lable":"Player 2 Roll Hit"}} 

 Player 2 20:54:59 $REPLACE_STACK:  
{"currentStack":[{"entityId":5,"creatorCardId":478,"entityToDoDamageCardId":478,"entityToTakeDamageCardId":378,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5,"lable":"Isaac is going to hurt Clotty"},{"entityId":4,"creatorCardId":478,"numberRolled":6,"rollingPlayerCardId":478,"stackEffectType":2,"attackedMonsterCardId":378,"lable":"Player 2 Roll Hit"}]} 

 Player 2 20:54:59 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 20:54:59 $LOG_ERROR:  
"error while resolving stack effect Player Attack Roll On Monster 4" 
//////Error From Player 2////
  

 Player 2 20:54:59 $LOG_ERROR:  
//////Error From Player 2////
 [object Object]
////// 

 Player 2 20:54:59 $SHOW_ANNOUNCEMENT:  
{"text":"error while resolving stack effect Player Attack Roll On Monster 4"} 

 Player 2 20:54:59 $LOG_ERROR:  
{"message":"\"Converting circular structure to JSON\\n    --> starting at object with constructor 'cc_Scene'\\n    |     property '_children' -> object with constructor 'Array'\\n    |     index 0 -> object with constructor 'cc_Node'\\n    --- property '_parent' closes the circle\"","stack":"\"TypeError: Converting circular structure to JSON\\n    --> starting at object with constructor 'cc_Scene'\\n    |     property '_children' -> object with constructor 'Array'\\n    |     index 0 -> object with constructor 'cc_Node'\\n    --- property '_parent' closes the circle\\n    at JSON.stringify (<anonymous>)\\n    at ServerClient.send (http://localhost:7456/preview-scripts/assets/ServerClient/ServerClient.js:318:32)\\n    at Function.PassiveManager.updatePassiveMethodData (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:116:38)\\n    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:566:38)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\\n    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113284:71\\n    at new Promise (<anonymous>)\\n    at 486.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113264:14)\\n    at Function.PassiveManager.testForPassiveAfter (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:560:16)\""} 
//////Error From Player 2////
  

 Player 2 20:54:59 $LOG_ERROR:  
//////Error From Player 2////

 "\"Converting circular structure to JSON\
    --> starting at object with constructor 'cc_Scene'\
    |     property '_children' -> object with constructor 'Array'\
    |     index 0 -> object with constructor 'cc_Node'\
    --- property '_parent' closes the circle\""

 + "\"TypeError: Converting circular structure to JSON\
    --> starting at object with constructor 'cc_Scene'\
    |     property '_children' -> object with constructor 'Array'\
    |     index 0 -> object with constructor 'cc_Node'\
    --- property '_parent' closes the circle\
    at JSON.stringify (<anonymous>)\
    at ServerClient.send (http://localhost:7456/preview-scripts/assets/ServerClient/ServerClient.js:318:32)\
    at Function.PassiveManager.updatePassiveMethodData (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:116:38)\
    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:566:38)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113284:71\
    at new Promise (<anonymous>)\
    at 486.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113264:14)\
    at Function.PassiveManager.testForPassiveAfter (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:560:16)\""

////// 
//////Error From Player 2////

 "\"Converting circular structure to JSON\
    --> starting at object with constructor 'cc_Scene'\
    |     property '_children' -> object with constructor 'Array'\
    |     index 0 -> object with constructor 'cc_Node'\
    --- property '_parent' closes the circle\""

 + "\"TypeError: Converting circular structure to JSON\
    --> starting at object with constructor 'cc_Scene'\
    |     property '_children' -> object with constructor 'Array'\
    |     index 0 -> object with constructor 'cc_Node'\
    --- property '_parent' closes the circle\
    at JSON.stringify (<anonymous>)\
    at ServerClient.send (http://localhost:7456/preview-scripts/assets/ServerClient/ServerClient.js:318:32)\
    at Function.PassiveManager.updatePassiveMethodData (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:116:38)\
    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:566:38)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113284:71\
    at new Promise (<anonymous>)\
    at 486.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113264:14)\
    at Function.PassiveManager.testForPassiveAfter (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:560:16)\""

////// 

 Player 2 20:54:59 $SHOW_ANNOUNCEMENT:  
{"text":"\"Converting circular structure to JSON\\n    --> starting at object with constructor 'cc_Scene'\\n    |     property '_children' -> object with constructor 'Array'\\n    |     index 0 -> object with constructor 'cc_Node'\\n    --- property '_parent' closes the circle\""} 

 Player 2 20:54:59 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 20:54:59 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 20:54:59 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 2 20:55:01 $HIDE_ANNOUNCEMENT:  

 Player 2 20:55:01 $HIDE_ANNOUNCEMENT:  

 Player 2 20:55:01 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":4} 

 Player 2 20:55:01 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 2 20:55:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Remove After Resolve Player Attack Roll On Monster 4  "}} 

 Player 2 20:55:04 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":478,"numberRolled":6,"rollingPlayerCardId":478,"stackEffectType":2,"attackedMonsterCardId":378,"lable":"Player 2 Roll Hit"}} 

 Player 2 20:55:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Response Remove After Resolve Player Attack Roll On Monster 4"},"childOfId":36} 

 Player 2 20:55:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 2 "},"childOfId":36} 

 Player 2 20:55:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:55:05 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 2 20:55:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Wait For Response From Player 1 "},"childOfId":36} 

 Player 2 20:55:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:55:05 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:55:05 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[480,481]} 

 Player 1 20:55:05 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:55:05 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 20:55:05 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 2 20:55:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Resolve Monster Combat Damage To A Player 5 "}} 

 Player 2 20:55:05 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":5,"creatorCardId":478,"entityToDoDamageCardId":478,"entityToTakeDamageCardId":378,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5,"lable":"Isaac is going to hurt Clotty"}]} 

 Player 2 20:55:05 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":5,"text":"Isaac will deal 1 combat damage to Clotty "} 

 Player 2 20:55:05 $UPDATE_STACK_VIS:  
{"stackId":5,"text":"Isaac will deal 1 combat damage to Clotty"} 

 Player 2 20:55:05 $MONSTER_GET_DAMAGED:  
{"cardId":378,"hpLeft":1,"damageDealerId":478} 

 Player 2 20:55:05 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":478},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":378,"scopeIsPlayer":false,"index":14,"originStackId":-1},"isAfterActivation":true,"index":14} 

 Player 2 20:55:05 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":5},{"type":0,"number":478},{"type":0,"number":378}],"result":null,"preventMethod":false,"methodScopeId":478,"scopeIsPlayer":true,"index":15,"originStackId":5},"isAfterActivation":true,"index":15} 

 Player 2 20:55:05 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":478,"entityToDoDamageCardId":478,"entityToTakeDamageCardId":378,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5,"lable":"Isaac will deal 1 combat damage to Clotty "}} 

 Player 2 20:55:05 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 20:55:05 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 20:55:05 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 2 20:55:08 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":5} 

 Player 2 20:55:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Remove After Resolve Monster Combat Damage To A Player 5  "}} 

 Player 2 20:55:08 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":478,"entityToDoDamageCardId":478,"entityToTakeDamageCardId":378,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5,"lable":"Isaac will deal 1 combat damage to Clotty "}} 

 Player 2 20:55:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Response Remove After Resolve Monster Combat Damage To A Player 5"},"childOfId":41} 

 Player 2 20:55:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 1 "},"childOfId":41} 

 Player 2 20:55:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:55:08 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:55:08 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[480,481]} 

 Player 1 20:55:08 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:55:08 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 2 20:55:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Wait For Response From Player 2 "},"childOfId":41} 

 Player 2 20:55:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:55:08 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 20:55:08 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 2 20:55:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Stack Was Emptied "}} 

 Player 2 20:55:08 $CLEAR_SE_VIS:  

 Player 2 22:35:54 $MATCH: 