Start Log 
 Player 1 13:08:40 $START_GAME:  
 Player 1 13:08:40 $MOVE_TO_TABLE:  
 Player 1 13:08:48 $FINISH_LOAD:  

 {"id":1,"turnPlayerId":2} 
 Player 1 13:08:49 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":268}],"result":true,"preventMethod":false,"methodScopeId":267,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 1 13:08:49 $MOVE_CARD_END:  

 {"moveIndex":1,"cardId":59,"flipIfFlipped":false,"playerId":2} 
 Player 1 13:08:50 $MOVE_CARD_END:  

 {"moveIndex":2,"cardId":83,"flipIfFlipped":false,"playerId":2} 
 Player 1 13:08:50 $MOVE_CARD_END:  

 {"moveIndex":3,"cardId":102,"flipIfFlipped":false,"playerId":2} 
 Player 1 13:08:51 $MOVE_CARD_END:  

 {"moveIndex":4,"cardId":137,"flipIfFlipped":false,"playerId":2} 
 Player 1 13:08:51 $MOVE_CARD_END:  

 {"moveIndex":5,"cardId":71,"flipIfFlipped":false,"playerId":2} 
 Player 1 13:08:52 $MOVE_CARD_END:  

 {"moveIndex":6,"cardId":40,"flipIfFlipped":false,"playerId":2} 
 Player 1 13:08:52 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 13:08:52 $NEXT_STACK_ID:  
 Player 1 13:08:52 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 13:08:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 13:08:52 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":267,"turnPlayerCardId":267,"stackEffectType":13}} 
 Player 1 13:08:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 13:08:52 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":1,"creatorCardId":267,"turnPlayerCardId":267,"stackEffectType":13}} 
 Player 1 13:08:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 
 Player 1 13:08:52 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 13:08:52 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 1 13:08:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 13:08:52 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":267,"turnPlayerCardId":267,"stackEffectType":13}} 
 Player 1 13:08:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 
 Player 1 13:08:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 1 13:08:52 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 13:08:52 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 1 13:08:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 1 13:08:52 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 13:08:52 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 13:08:53 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 1 13:08:53 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 1 13:08:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 
 Player 1 13:08:53 $DRAW_CARD:  

 {"deckType":1} 
 Player 1 13:08:53 $MOVE_CARD:  

 {"moveIndex":7,"cardId":125,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 1 13:08:53 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":125} 
 Player 1 13:08:53 $FLIP_CARD:  

 {"cardId":125} 
 Player 1 13:08:53 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":125} 
 Player 1 13:08:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 13:08:53 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":267,"turnPlayerCardId":267,"stackEffectType":13}} 
 Player 1 13:08:53 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 1 13:08:53 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 13:08:53 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":1,"creatorCardId":267,"turnPlayerCardId":267,"stackEffectType":13}} 
 Player 1 13:08:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 
 Player 1 13:08:53 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 13:08:53 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":267,"turnPlayerCardId":267,"stackEffectType":13}} 
 Player 1 13:08:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 
 Player 1 13:08:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Player 1 13:08:53 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 13:08:53 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 13:08:54 $ACTION_MASSAGE_REMOVE:  

 {"id":7} 
 Player 1 13:08:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Player 1 13:08:54 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 13:08:54 $ACTION_MASSAGE_REMOVE:  

 {"id":8} 
 Player 1 13:08:54 $ACTION_MASSAGE_REMOVE:  

 {"id":6} 
 Player 1 13:08:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":9,"_text":"Stack Was Emptied "}} 
 Player 1 13:08:54 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 13:08:54 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 1 13:08:54 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 1 13:08:54 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 1 13:08:54 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 1 13:08:54 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 1 13:08:54 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 1 13:08:54 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 1 13:08:55 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 1 13:08:56 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 1 13:09:09 $MOVE_CARD_END:  

 {"moveIndex":8,"cardId":184,"flipIfFlipped":true,"playerId":2} 
 Player 1 13:09:10 $MOVE_CARD_END:  

 {"moveIndex":9,"cardId":184,"flipIfFlipped":true,"playerId":2} 
 Player 1 13:09:10 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 13:09:10 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 13:09:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Polydactyly "} 
 Player 1 13:09:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Polydactyly "} 
 Player 1 13:09:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Polydactyly "} 
 Player 1 13:09:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Polydactyly "} 
 Player 1 13:09:11 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 13:09:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Polydactyly "} 
 Player 1 13:09:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Polydactyly "} 
 Player 1 13:09:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Polydactyly "} 
 Player 1 13:09:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Polydactyly "} 
 Player 1 13:09:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Polydactyly "} 
 Player 1 13:09:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Polydactyly "} 
 Player 1 13:09:13 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 13:09:16 $MOVE_CARD:  

 {"moveIndex":10,"cardId":131,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Hand"} 
 Player 1 13:09:16 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":131} 
 Player 1 13:09:23 $MOVE_CARD:  

 {"moveIndex":11,"cardId":194,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Hand"} 
 Player 1 13:09:24 $MOVE_CARD:  

 {"moveIndex":12,"cardId":194,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 
 Player 1 13:09:24 $ADD_AN_ITEM:  

 {"playerId":1,"cardId":194,"isReward":true} 
 Player 1 13:09:24 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":194}],"result":true,"preventMethod":false,"methodScopeId":267,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 1 13:10:12 $NEXT_STACK_ID:  
 Player 1 13:10:12 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 13:10:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play The Devil "} 
 Player 1 13:10:12 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":267,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 1 13:10:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play The Devil "} 
 Player 1 13:10:12 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":267,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 1 13:10:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":20,"_text":"Add PlayLootCardStackEffect 3 "}} 
 Player 1 13:10:12 $PLAYER_LOSE_LOOT:  

 {"playerId":1,"cardId":131} 
 Player 1 13:10:12 $MOVE_CARD:  

 {"moveIndex":13,"cardId":131,"placeID":277,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 13:10:13 $MOVE_CARD_TO_PILE:  

 {"type":7,"cardId":131} 
 Player 1 13:10:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play The Devil: ChainEffects"} 
 Player 1 13:10:15 $SHOW_DECISION:  

 {"startCardId":131,"endCardId":184} 
 Player 1 13:10:18 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 13:10:18 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 1 13:10:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play The Devil: ChainEffects"} 
 Player 1 13:10:18 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":267,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":1,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":131,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 13:10:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":21,"_text":"Response Adding PlayLootCardStackEffect 3"},"childOfId":20} 
 Player 1 13:10:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":22,"_text":"Wait For Response From Player 1 "},"childOfId":20} 
 Player 1 13:10:18 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 13:10:18 $ACTION_MASSAGE_REMOVE:  

 {"id":22} 
 Player 1 13:10:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":23,"_text":"Wait For Response From Player 2 "},"childOfId":20} 
 Player 1 13:10:18 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 13:10:18 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 13:10:18 $ACTION_MASSAGE_REMOVE:  

 {"id":23} 
 Player 1 13:10:18 $ACTION_MASSAGE_REMOVE:  

 {"id":21} 
 Player 1 13:10:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":24,"_text":"Resolve PlayLootCardStackEffect 3 "}} 
 Player 1 13:10:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play The Devil: ChainEffects"} 
 Player 1 13:10:18 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":131,"particleType":6} 
 Player 1 13:10:20 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":131,"particleType":6} 
 Player 1 13:10:20 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_LOSE_ITEM","args":[{"type":0,"number":194}],"result":null,"preventMethod":false,"methodScopeId":267,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Player 1 13:10:20 $MOVE_CARD:  

 {"moveIndex":14,"cardId":194,"placeID":280,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 13:10:20 $MOVE_CARD_TO_PILE:  

 {"type":5,"cardId":194} 
 Player 1 13:10:20 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_LOSE_ITEM","args":[{"type":0,"number":184}],"result":null,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1} 
 Player 1 13:10:20 $NEXT_STACK_ID:  
 Player 1 13:10:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play The Devil: ChainEffects"} 
 Player 1 13:10:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play The Devil: ChainEffects \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 
 Player 1 13:10:20 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":184,"effectToDo":{"effectName":"AddPlayLootOpportunity","cardEffectNum":1,"cardPlayerId":2,"cardId":184,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 13:10:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play The Devil: ChainEffects \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 
 Player 1 13:10:21 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":184,"effectToDo":{"effectName":"AddPlayLootOpportunity","cardEffectNum":1,"cardPlayerId":2,"cardId":184,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 13:10:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":25,"_text":"Add ActivatePassiveEffect 4 "}} 
 Player 1 13:10:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play The Devil: ChainEffects \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 
 Player 1 13:10:21 $ACTION_MASSAGE_REMOVE:  

 {"id":25} 
 Player 1 13:10:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play The Devil: ChainEffects \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 
 Player 1 13:10:21 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":184,"effectToDo":{"effectName":"AddPlayLootOpportunity","cardEffectNum":1,"cardPlayerId":2,"cardId":184,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 13:10:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":26,"_text":"Response Adding ActivatePassiveEffect 4"},"childOfId":25} 
 Player 1 13:10:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":27,"_text":"Wait For Response From Player 2 "},"childOfId":25} 
 Player 1 13:10:21 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 13:10:21 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 13:10:21 $ACTION_MASSAGE_REMOVE:  

 {"id":27} 
 Player 1 13:10:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":28,"_text":"Wait For Response From Player 1 "},"childOfId":25} 
 Player 1 13:10:21 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 13:10:21 $ACTION_MASSAGE_REMOVE:  

 {"id":28} 
 Player 1 13:10:21 $ACTION_MASSAGE_REMOVE:  

 {"id":26} 
 Player 1 13:10:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":29,"_text":"Resolve ActivatePassiveEffect 4 "}} 
 Player 1 13:10:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play The Devil: ChainEffects \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 
 Player 1 13:10:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play The Devil: ChainEffects \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 
 Player 1 13:10:21 $DO_STACK_EFFECT:  

 {"originPlayerId":1,"playerId":2,"currentStack":[{"entityId":3,"creatorCardId":267,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":1,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":131,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"effectCollectedData":null,"entityId":4,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":184,"effectToDo":{"effectName":"AddPlayLootOpportunity","cardEffectNum":1,"cardPlayerId":2,"cardId":184,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}]} 
 Player 1 13:10:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play The Devil: ChainEffects \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 
 Player 1 13:10:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play The Devil: ChainEffects \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 
 Player 1 13:10:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play The Devil: ChainEffects \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 
 Player 1 13:10:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play The Devil: ChainEffects \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 
 Player 1 13:10:22 $ACTION_MASSAGE_REMOVE:  

 {"id":29} 
 Player 1 13:10:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 13:10:22 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":267,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":1,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":131,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 13:10:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 13:10:22 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":267,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":1,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":131,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 13:10:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 13:10:22 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":184,"effectPassiveMeta":{"passiveEvent":"PLAYER_LOSE_ITEM","args":[{"type":0,"number":184}],"result":null,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":null},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 13:10:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 13:10:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 13:10:22 $REPLACE_STACK:  

 {"currentStack":[{"entityId":3,"creatorCardId":267,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":1,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":131,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"effectCollectedData":null,"entityId":4,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":184,"effectPassiveMeta":{"passiveEvent":"PLAYER_LOSE_ITEM","args":[{"type":0,"number":184}],"result":null,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":null},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}]} 
 Player 1 13:10:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play The Devil "} 
 Player 1 13:10:22 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":184,"effectPassiveMeta":{"passiveEvent":"PLAYER_LOSE_ITEM","args":[{"type":0,"number":184}],"result":null,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":null},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 13:10:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":30,"_text":"Remove After Resolve ActivatePassiveEffect 4  "}} 
 Player 1 13:10:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play The Devil "} 
 Player 1 13:10:22 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":184,"effectPassiveMeta":{"passiveEvent":"PLAYER_LOSE_ITEM","args":[{"type":0,"number":184}],"result":null,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":null},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 13:10:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":31,"_text":"Response Remove After Resolve ActivatePassiveEffect 4"},"childOfId":30} 
 Player 1 13:10:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":32,"_text":"Wait For Response From Player 1 "},"childOfId":30} 
 Player 1 13:10:22 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 13:10:22 $ACTION_MASSAGE_REMOVE:  

 {"id":32} 
 Player 1 13:10:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":33,"_text":"Wait For Response From Player 2 "},"childOfId":30} 
 Player 1 13:10:22 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 13:10:22 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 13:10:23 $ACTION_MASSAGE_REMOVE:  

 {"id":33} 
 Player 1 13:10:23 $ACTION_MASSAGE_REMOVE:  

 {"id":31} 
 Player 1 13:10:23 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":34,"_text":"Resolve PlayLootCardStackEffect 3 "}} 
 Player 1 13:10:23 $REMOVE_FROM_PASSIVE_MANAGER:  

 {"cardId":184} 
 Player 1 13:10:23 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_LOSE_ITEM","args":[{"type":0,"number":184}],"result":null,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 1 13:10:23 $MOVE_CARD:  

 {"moveIndex":15,"cardId":184,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 
 Player 1 13:10:24 $ADD_AN_ITEM:  

 {"playerId":1,"cardId":184,"isReward":true} 
 Player 1 13:10:24 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":184}],"result":true,"preventMethod":false,"methodScopeId":267,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 
 Player 1 13:10:24 $REMOVE_FROM_PILE:  

 {"cardId":131} 
 Player 1 13:10:24 $MOVE_CARD:  

 {"moveIndex":16,"cardId":131,"placeID":278,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 13:10:24 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":131} 
 Player 1 13:10:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play The Devil "} 
 Player 1 13:10:24 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":267,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 13:10:24 $ACTION_MASSAGE_REMOVE:  

 {"id":24} 
 Player 1 13:10:24 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 13:10:24 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":267,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":1,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":131,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 13:10:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":35,"_text":"Remove After Resolve PlayLootCardStackEffect 3  "}} 
 Player 1 13:10:24 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 13:10:24 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":267,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":1,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":131,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 13:10:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":36,"_text":"Response Remove After Resolve PlayLootCardStackEffect 3"},"childOfId":35} 
 Player 1 13:10:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":37,"_text":"Wait For Response From Player 2 "},"childOfId":35} 
 Player 1 13:10:24 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 13:10:24 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 13:10:25 $ACTION_MASSAGE_REMOVE:  

 {"id":37} 
 Player 1 13:10:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":38,"_text":"Wait For Response From Player 1 "},"childOfId":35} 
 Player 1 13:10:25 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 13:10:25 $ACTION_MASSAGE_REMOVE:  

 {"id":38} 
 Player 1 13:10:25 $ACTION_MASSAGE_REMOVE:  

 {"id":36} 
 Player 1 13:10:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":39,"_text":"Stack Was Emptied "}} 
 Player 1 13:10:25 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 13:10:25 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 1 13:10:25 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 1 13:10:25 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 1 13:10:25 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 1 13:10:25 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 1 13:10:25 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 1 13:10:25 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 1 13:10:25 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 1 13:10:25 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 1 13:10:25 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 1 13:10:25 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 1 13:10:25 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 1 13:10:25 $ACTION_MASSAGE_REMOVE:  

 {"id":24} 
 Player 1 13:10:25 $ACTION_MASSAGE_REMOVE:  

 {"id":25} 
 Player 1 13:10:25 $ACTION_MASSAGE_REMOVE:  

 {"id":29} 
 Player 1 13:10:25 $ACTION_MASSAGE_REMOVE:  

 {"id":30} 
 Player 1 13:10:25 $ACTION_MASSAGE_REMOVE:  

 {"id":34} 
 Player 1 13:10:25 $ACTION_MASSAGE_REMOVE:  

 {"id":35} 
 Player 1 13:10:25 $ACTION_MASSAGE_REMOVE:  

 {"id":39} 
 Player 1 13:10:25 $ACTION_MASSAGE_REMOVE:  

 {"id":30} 
 Player 1 13:10:26 $ACTION_MASSAGE_REMOVE:  

 {"id":39} 
 Player 1 13:10:27 $ACTION_MASSAGE_REMOVE:  

 {"id":35} 
 Player 1 13:20:50 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 13:20:50 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 13:20:50 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 1 13:20:50 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 1 13:20:50 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 1 13:20:50 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 1 13:20:50 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 1 13:20:50 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 1 13:20:50 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 1 13:20:50 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 1 13:20:50 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 1 13:20:50 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 1 13:20:50 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 1 13:20:50 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 1 13:20:50 $ACTION_MASSAGE_REMOVE:  

 {"id":24} 
 Player 1 13:20:50 $ACTION_MASSAGE_REMOVE:  

 {"id":25} 
 Player 1 13:20:50 $ACTION_MASSAGE_REMOVE:  

 {"id":29} 
 Player 1 13:20:50 $ACTION_MASSAGE_REMOVE:  

 {"id":30} 
 Player 1 13:20:51 $ACTION_MASSAGE_REMOVE:  

 {"id":34} 
 Player 1 13:20:51 $ACTION_MASSAGE_REMOVE:  

 {"id":35} 
 Player 1 13:20:51 $ACTION_MASSAGE_REMOVE:  

 {"id":39} 
 Player 1 13:20:51 $REPLACE_STACK:  

 {"currentStack":[]} 
 Player 1 13:20:51 $END_TURN:  
 Player 1 13:20:51 $SET_TURN:  

 {"playerId":2} 
 Player 1 13:20:51 $START_TURN:  

 {"playerId":2} 
 Player 1 13:20:52 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 13:20:52 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 13:20:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 13:20:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 13:20:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 13:20:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 13:20:52 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 13:20:52 $MOVE_CARD_END:  

 {"moveIndex":17,"cardId":43,"flipIfFlipped":false,"playerId":2} 
 Player 1 13:20:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 13:20:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 13:20:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 13:20:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 13:20:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 13:20:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 13:20:53 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 13:21:05 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 13:21:05 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 13:21:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Fatty"} 
 Player 1 13:21:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Fatty"} 
 Player 1 13:21:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Fatty"} 
 Player 1 13:21:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Fatty"} 
 Player 1 13:21:06 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 13:21:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Fatty"} 
 Player 1 13:21:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Fatty"} 
 Player 1 13:21:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Fatty"} 
 Player 1 13:21:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Fatty"} 
 Player 1 13:21:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Fatty"} 
 Player 1 13:21:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Fatty"} 
 Player 1 13:21:06 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 13:21:18 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 13:21:18 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 13:21:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Fatty<Monster>"} 
 Player 1 13:21:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Fatty<Monster>"} 
 Player 1 13:21:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Fatty<Monster>"} 
 Player 1 13:21:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Fatty<Monster>"} 
 Player 1 13:21:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Fatty<Monster>"} 
 Player 1 13:21:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Fatty<Monster>"} 
 Player 1 13:21:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Fatty<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 1 13:21:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Fatty<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 1 13:21:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Fatty<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 1 13:21:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Fatty<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 1 13:21:34 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 13:21:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Fatty<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 1 13:21:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Fatty<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 1 13:21:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Fatty<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 1 13:21:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Fatty<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 1 13:21:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Fatty<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 1 13:21:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Fatty<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 1 13:21:37 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 13:21:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Fatty<Monster>"} 
 Player 1 13:21:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Fatty<Monster>"} 
 Player 1 13:21:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Fatty combat damage to The Lost"} 
 Player 1 13:21:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Fatty combat damage to The Lost"} 
 Player 1 13:21:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Fatty combat damage to The Lost"} 
 Player 1 13:21:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Fatty combat damage to The Lost"} 
 Player 1 13:21:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Fatty combat damage to The Lost"} 
 Player 1 13:21:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Fatty combat damage to The Lost"} 
 Player 1 13:21:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Fatty combat damage to The Lost"} 
 Player 1 13:21:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Fatty combat damage to The Lost"} 
 Player 1 13:21:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Fatty combat damage to The Lost"} 
 Player 1 13:21:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Fatty combat damage to The Lost"} 
 Player 1 13:21:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 2 is rolling against Fatty<Monster>"} 
 Player 1 13:21:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 2 is rolling against Fatty<Monster>"} 
 Player 1 13:21:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 2 is rolling against Fatty<Monster>"} 
 Player 1 13:21:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 2 is rolling against Fatty<Monster>"} 
 Player 1 13:21:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 2 is rolling against Fatty<Monster>"} 
 Player 1 13:21:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 2 is rolling against Fatty<Monster>"} 
 Player 1 13:21:50 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":true} 
 Player 1 13:21:50 $SHOW_DECISION:  

 {"startCardId":267,"endCardId":267} 
 Player 1 13:21:53 $NEXT_STACK_ID:  
 Player 1 13:21:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Fatty combat damage to The Lost"} 
 Player 1 13:21:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 activated Isaac"} 
 Player 1 13:21:53 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":10,"creatorCardId":267,"hasLockingStackEffect":false,"itemToPlayCardId":267,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 1 13:21:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 activated Isaac"} 
 Player 1 13:21:53 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":10,"creatorCardId":267,"hasLockingStackEffect":false,"itemToPlayCardId":267,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 1 13:21:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":78,"_text":"Add ActivateItem 10 "}} 
 Player 1 13:21:54 $SHOW_DECISION:  

 {"startCardId":267,"endCardId":59} 
 Player 1 13:21:56 $RESPOND_TO:  

 {"playerId":-1,"stackEffectResponse":false} 
 Player 1 13:21:57 $USE_ITEM:  

 {"cardId":267} 
 Player 1 13:21:57 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 13:21:57 $ACTION_MASSAGE_REMOVE:  

 {"id":78} 
 Player 1 13:21:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 activated Isaac"} 
 Player 1 13:21:57 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":10,"creatorCardId":267,"hasLockingStackEffect":false,"itemToPlayCardId":267,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 13:21:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":79,"_text":"Response Adding ActivateItem 10"},"childOfId":78} 
 Player 1 13:21:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":80,"_text":"Wait For Response From Player 2 "},"childOfId":78} 
 Player 1 13:21:57 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 13:21:57 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 13:21:58 $ACTION_MASSAGE_REMOVE:  

 {"id":80} 
 Player 1 13:21:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":81,"_text":"Wait For Response From Player 1 "},"childOfId":78} 
 Player 1 13:21:58 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 13:21:58 $ACTION_MASSAGE_REMOVE:  

 {"id":81} 
 Player 1 13:21:58 $ACTION_MASSAGE_REMOVE:  

 {"id":79} 
 Player 1 13:21:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":82,"_text":"Resolve ActivateItem 10 "}} 
 Player 1 13:21:58 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":267,"particleType":6} 
 Player 1 13:22:00 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":267,"particleType":6} 
 Player 1 13:22:00 $NEXT_STACK_ID:  
 Player 1 13:22:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 activated Isaac"} 
 Player 1 13:22:00 $PLAYER_LOSE_LOOT:  

 {"playerId":1,"cardId":59} 
 Player 1 13:22:00 $MOVE_CARD:  

 {"moveIndex":18,"cardId":59,"placeID":277,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 13:22:00 $MOVE_CARD_TO_PILE:  

 {"type":7,"cardId":59} 
 Player 1 13:22:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 play 4 Cents: addMoney \n3:Player 1 activated Isaac"} 
 Player 1 13:22:00 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 13:22:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 play 4 Cents: addMoney \n3:Player 1 activated Isaac"} 
 Player 1 13:22:01 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":11,"creatorCardId":267,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":59,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":59,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 13:22:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 play 4 Cents: addMoney \n3:Player 1 activated Isaac"} 
 Player 1 13:22:01 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":9,"creatorCardId":275,"entityToDoDamageCardId":223,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 13:22:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 play 4 Cents: addMoney \n3:Player 1 activated Isaac"} 
 Player 1 13:22:01 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":9,"creatorCardId":275,"entityToDoDamageCardId":223,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 13:22:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 play 4 Cents: addMoney \n3:Player 1 activated Isaac"} 
 Player 1 13:22:01 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":11,"creatorCardId":267,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":59,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":59,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 13:22:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 play 4 Cents: addMoney \n3:Player 1 activated Isaac"} 
 Player 1 13:22:01 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":10,"creatorCardId":267,"hasLockingStackEffect":false,"itemToPlayCardId":267,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 13:22:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 play 4 Cents: addMoney \n3:Player 1 activated Isaac"} 
 Player 1 13:22:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 play 4 Cents: addMoney \n3:Player 1 activated Isaac"} 
 Player 1 13:22:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 play 4 Cents: addMoney \n3:Player 1 activated Isaac"} 
 Player 1 13:22:01 $REPLACE_STACK:  

 {"currentStack":[{"entityId":9,"creatorCardId":275,"entityToDoDamageCardId":223,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":11,"creatorCardId":267,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":59,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":59,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":10,"creatorCardId":267,"hasLockingStackEffect":false,"itemToPlayCardId":267,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 
 Player 1 13:22:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 play 4 Cents: addMoney \n3:Player 1 activated Isaac"} 
 Player 1 13:22:01 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":10,"creatorCardId":267,"hasLockingStackEffect":false,"itemToPlayCardId":267,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 13:22:01 $ACTION_MASSAGE_REMOVE:  

 {"id":82} 
 Player 1 13:22:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 play 4 Cents: addMoney"} 
 Player 1 13:22:01 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":10,"creatorCardId":267,"hasLockingStackEffect":false,"itemToPlayCardId":267,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 13:22:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":83,"_text":"Remove After Resolve ActivateItem 10  "}} 
 Player 1 13:22:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 play 4 Cents: addMoney"} 
 Player 1 13:22:01 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":10,"creatorCardId":267,"hasLockingStackEffect":false,"itemToPlayCardId":267,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 13:22:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":84,"_text":"Response Remove After Resolve ActivateItem 10"},"childOfId":83} 
 Player 1 13:22:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":85,"_text":"Wait For Response From Player 2 "},"childOfId":83} 
 Player 1 13:22:01 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 13:22:01 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 13:22:02 $ACTION_MASSAGE_REMOVE:  

 {"id":85} 
 Player 1 13:22:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":86,"_text":"Wait For Response From Player 1 "},"childOfId":83} 
 Player 1 13:22:02 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 13:22:02 $ACTION_MASSAGE_REMOVE:  

 {"id":86} 
 Player 1 13:22:02 $ACTION_MASSAGE_REMOVE:  

 {"id":84} 
 Player 1 13:22:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":87,"_text":"Resolve PlayLootCardStackEffect 11 "}} 
 Player 1 13:22:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 play 4 Cents: addMoney"} 
 Player 1 13:22:02 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":59,"particleType":6} 
 Player 1 13:22:03 $ACTION_MASSAGE_REMOVE:  

 {"id":83} 
 Player 1 13:22:04 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":59,"particleType":6} 
 Player 1 13:22:04 $SET_MONEY:  

 {"playerId":1,"numOfCoins":7} 
 Player 1 13:22:04 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":267,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 
 Player 1 13:22:04 $REMOVE_FROM_PILE:  

 {"cardId":59} 
 Player 1 13:22:04 $MOVE_CARD:  

 {"moveIndex":19,"cardId":59,"placeID":278,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 13:22:04 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":59} 
 Player 1 13:22:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 1 play 4 Cents: addMoney"} 
 Player 1 13:22:04 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":11,"creatorCardId":267,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":59,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 13:22:04 $ACTION_MASSAGE_REMOVE:  

 {"id":87} 
 Player 1 13:22:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Fatty combat damage to The Lost"} 
 Player 1 13:22:05 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":11,"creatorCardId":267,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":59,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 13:22:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":88,"_text":"Remove After Resolve PlayLootCardStackEffect 11  "}} 
 Player 1 13:22:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Fatty combat damage to The Lost"} 
 Player 1 13:22:05 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":11,"creatorCardId":267,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":59,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 13:22:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":89,"_text":"Response Remove After Resolve PlayLootCardStackEffect 11"},"childOfId":88} 
 Player 1 13:22:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":90,"_text":"Wait For Response From Player 1 "},"childOfId":88} 
 Player 1 13:22:05 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 13:22:05 $ACTION_MASSAGE_REMOVE:  

 {"id":90} 
 Player 1 13:22:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":91,"_text":"Wait For Response From Player 2 "},"childOfId":88} 
 Player 1 13:22:05 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 13:22:05 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 13:22:05 $ACTION_MASSAGE_REMOVE:  

 {"id":91} 
 Player 1 13:22:05 $ACTION_MASSAGE_REMOVE:  

 {"id":89} 
 Player 1 13:22:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":92,"_text":"Resolve CombatDamage 9 "}} 
 Player 1 13:22:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Fatty combat damage to The Lost"} 
 Player 1 13:22:05 $DO_STACK_EFFECT:  

 {"originPlayerId":1,"playerId":2,"currentStack":[{"entityId":9,"creatorCardId":275,"entityToDoDamageCardId":223,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}]} 
 Player 1 13:22:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Fatty combat damage to The Lost"} 
 Player 1 13:22:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Fatty combat damage to The Lost"} 
 Player 1 13:22:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 13:22:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 13:22:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 13:22:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 13:22:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 13:22:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 13:22:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 13:22:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 13:22:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 13:22:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 13:22:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 1 13:22:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 1 13:22:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 1 13:22:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 1 13:22:06 $ACTION_MASSAGE_REMOVE:  

 {"id":92} 
 Player 1 13:22:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 1 13:22:06 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":9,"creatorCardId":275,"entityToDoDamageCardId":223,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 13:22:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 1 13:22:06 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":9,"creatorCardId":275,"entityToDoDamageCardId":223,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 13:22:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 1 13:22:06 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":12,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":223}} 
 Player 1 13:22:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 1 13:22:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Fatty combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 1 13:22:07 $REPLACE_STACK:  

 {"currentStack":[{"entityId":9,"creatorCardId":275,"entityToDoDamageCardId":223,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":12,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":223}]} 
 Player 1 13:22:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 13:22:07 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":9,"creatorCardId":275,"entityToDoDamageCardId":223,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 13:22:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":93,"_text":"Remove After Resolve CombatDamage 9  "}} 
 Player 1 13:22:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 13:22:07 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":9,"creatorCardId":275,"entityToDoDamageCardId":223,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 13:22:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":94,"_text":"Response Remove After Resolve CombatDamage 9"},"childOfId":93} 
 Player 1 13:22:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":95,"_text":"Wait For Response From Player 2 "},"childOfId":93} 
 Player 1 13:22:07 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 13:22:07 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 13:22:07 $ACTION_MASSAGE_REMOVE:  

 {"id":95} 
 Player 1 13:22:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":96,"_text":"Wait For Response From Player 1 "},"childOfId":93} 
 Player 1 13:22:07 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 13:22:07 $ACTION_MASSAGE_REMOVE:  

 {"id":96} 
 Player 1 13:22:07 $ACTION_MASSAGE_REMOVE:  

 {"id":94} 
 Player 1 13:22:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":97,"_text":"Resolve PlayerDeath 12 "}} 
 Player 1 13:22:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 13:22:07 $DO_STACK_EFFECT:  

 {"originPlayerId":1,"playerId":2,"currentStack":[{"entityId":12,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":223}]} 
 Player 1 13:22:07 $ACTION_MASSAGE_REMOVE:  

 {"id":88} 
 Player 1 13:22:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 13:22:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 13:22:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 
 Player 1 13:22:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 
 Player 1 13:22:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 
 Player 1 13:22:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 
 Player 1 13:22:08 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 13:22:09 $ACTION_MASSAGE_REMOVE:  

 {"id":93} 
 Player 1 13:22:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "} 
 Player 1 13:22:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle "}