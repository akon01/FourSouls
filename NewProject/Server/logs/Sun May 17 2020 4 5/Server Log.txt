Start Log 

 Player 1 04:05:20 $MATCH:  

 Player 1 04:05:21 $START_GAME:  

 Player 2 04:05:21 $MOVE_TO_TABLE:  

 Player 1 04:05:21 $MOVE_TO_TABLE:  

 Player 2 04:05:31 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 1 04:05:31 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 04:05:32 $SET_CHAR:  
{"originPlayerId":2,"playerId":1,"charCardId":339,"itemCardId":340} 

 Player 1 04:05:32 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":339,"itemCardId":340} 

 Player 1 04:05:32 $SET_CHAR_END:  
{"playerId":2} 

 Player 2 04:05:32 $CHOOSE_FOR_EDEN:  
{"playerId":2,"originPlayerId":2} 

 Player 2 04:05:32 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[213,203,221,201,218,142,147,183,165,205,224,180,185,225,160,212,166,144,216,208,167,211,194,184,207,178,173,169,190,149,174,204,157,170,141,209,219,202,179,148,196,172,181,161,192,152,158,143,153,156,191,214,200,217,206,189,193,151,223,188,145,222,220,177,182,155,164,146,215,159,176,187,150,199,210,197,186,171,168,162,154,163,195,175,198]} 

 Player 2 04:05:38 $EDEN_CHOSEN:  
{"cardId":203,"playerId":2} 

 Player 2 04:05:38 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[213,221,201,218,142,147,183,165,205,224,180,185,225,160,212,166,144,216,208,167,211,194,184,207,178,173,169,190,149,174,204,157,170,141,209,219,202,179,148,196,172,181,161,192,152,158,143,153,156,191,214,200,217,206,189,193,151,223,188,145,222,220,177,182,155,164,146,215,159,176,187,150,199,210,197,186,171,168,162,154,163,195,175,198]} 

 Player 2 04:05:38 $FLIP_CARD:  
{"cardId":203} 

 Player 2 04:05:38 $REGISTER_PASSIVE_ITEM:  
{"cardId":203} 

 Player 2 04:05:38 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":331,"itemCardId":203} 

 Player 2 04:05:38 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":203}],"result":true,"preventMethod":false,"methodScopeId":331,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 04:05:38 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":332}],"result":null,"preventMethod":false,"methodScopeId":331,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 04:05:38 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[73,78,95,117,124,7,40,88,48,6,29,60,46,105,84,137,57,44,98,96,116,54,15,89,9,85,131,70,109,104,136,74,41,75,126,103,108,27,8,120,50,79,25,91,10,16,94,58,4,121,97,111,135,127,86,51,77,52,22,20,64,82,80,18,35,81,65,102,34,132,72,59,90,69,39,129,43,76,5,21,49,115,138,62,110,123,119,83,114,113,23,31,107,134,14,99,32,125,56,130,33,30,67,122,87,38,68,26,42,13,93,92,128,12,19,47,118,66,28,101,11,36,139,63,53,24,45,37,61,133,100,112,55,71,106,17]} 

 Player 2 04:05:38 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[296,261,307,264,265,259,279,233,267,276,231,245,290,237,302,318,273,295,263,230,258,232,288,240,286,270,239,303,227,238,309,299,293,289,272,271,242,292,285,311,283,254,315,278,247,300,281,298,274,284,287,256,253,252,244,306,313,277,235,317,269,275,297,248,262,310,236,243,320,319,282,291,316,314,294,257,234,280,228,268,304,251,246,229,308,301,305,241,250,312,255,266,260,249]} 

 Player 2 04:05:38 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[178,204,162,160,145,143,155,185,206,150,152,169,171,205,186,175,202,220,168,218,167,207,194,195,217,216,188,209,151,196,153,192,170,164,173,172,149,177,190,159,198,147,221,214,197,213,154,201,141,165,146,180,224,212,223,222,187,156,219,144,191,183,225,199,215,166,174,181,163,161,182,211,189,148,210,158,208,200,179,157,142,184,193,176]} 

 Player 2 04:05:38 $DRAW_CARD:  
{"deckType":5} 

 Player 2 04:05:38 $FLIP_CARD:  
{"cardId":176} 

 Player 2 04:05:38 $ADD_STORE_CARD:  
{"cardId":176} 

 Player 2 04:05:38 $DRAW_CARD:  
{"deckType":5} 

 Player 2 04:05:38 $FLIP_CARD:  
{"cardId":193} 

 Player 2 04:05:38 $ADD_STORE_CARD:  
{"cardId":193} 

 Player 2 04:05:38 $DRAW_CARD:  
{"deckType":2} 

 Player 2 04:05:38 $FLIP_CARD:  
{"cardId":249} 

 Player 2 04:05:38 $REGISTER_PASSIVE_ITEM:  
{"cardId":249} 

 Player 2 04:05:38 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":249} 

 Player 2 04:05:38 $NEW_MONSTER_ON_PLACE:  
{"cardId":249,"monsterPlaceId":1} 

 Player 2 04:05:38 $DRAW_CARD:  
{"deckType":2} 

 Player 2 04:05:38 $FLIP_CARD:  
{"cardId":260} 

 Player 2 04:05:38 $REGISTER_PASSIVE_ITEM:  
{"cardId":260} 

 Player 2 04:05:38 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":260} 

 Player 2 04:05:39 $NEW_MONSTER_ON_PLACE:  
{"cardId":260,"monsterPlaceId":2} 

 Player 2 04:05:39 $REGISTER_PASSIVE_ITEM:  
{"cardId":322} 

 Player 2 04:05:39 $REGISTER_PASSIVE_ITEM:  
{"cardId":323} 

 Player 2 04:05:39 $REGISTER_PASSIVE_ITEM:  
{"cardId":324} 

 Player 2 04:05:39 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 04:05:39 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":339,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 04:05:39 $DRAW_CARD:  
{"deckType":1} 

 Player 2 04:05:39 $MOVE_CARD:  
{"moveIndex":1,"cardId":17,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 04:05:39 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":17,"flipIfFlipped":false,"playerId":2} 

 Player 2 04:05:39 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":17} 

 Player 2 04:05:39 $FLIP_CARD:  
{"cardId":17} 

 Player 2 04:05:39 $FLIP_CARD:  
{"cardId":17} 

 Player 2 04:05:39 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":17} 

 Player 2 04:05:39 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":17}],"result":null,"preventMethod":false,"methodScopeId":339,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 2 04:05:39 $DRAW_CARD:  
{"deckType":1} 

 Player 2 04:05:39 $MOVE_CARD:  
{"moveIndex":2,"cardId":106,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 04:05:40 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":106,"flipIfFlipped":false,"playerId":2} 

 Player 2 04:05:40 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":106} 

 Player 2 04:05:40 $FLIP_CARD:  
{"cardId":106} 

 Player 2 04:05:40 $FLIP_CARD:  
{"cardId":106} 

 Player 2 04:05:40 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":106} 

 Player 2 04:05:40 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":106}],"result":null,"preventMethod":false,"methodScopeId":339,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 2 04:05:40 $DRAW_CARD:  
{"deckType":1} 

 Player 2 04:05:40 $MOVE_CARD:  
{"moveIndex":3,"cardId":71,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 04:05:40 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":71,"flipIfFlipped":false,"playerId":2} 

 Player 2 04:05:40 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":71} 

 Player 2 04:05:40 $FLIP_CARD:  
{"cardId":71} 

 Player 2 04:05:40 $FLIP_CARD:  
{"cardId":71} 

 Player 2 04:05:40 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":71} 

 Player 2 04:05:40 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":71}],"result":null,"preventMethod":false,"methodScopeId":339,"scopeIsPlayer":true,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 

 Player 2 04:05:40 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 04:05:40 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":331,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 

 Player 2 04:05:40 $DRAW_CARD:  
{"deckType":1} 

 Player 2 04:05:40 $MOVE_CARD:  
{"moveIndex":4,"cardId":55,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 04:05:41 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":55,"flipIfFlipped":false,"playerId":2} 

 Player 2 04:05:41 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":55} 

 Player 2 04:05:41 $FLIP_CARD:  
{"cardId":55} 

 Player 2 04:05:41 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":55} 

 Player 2 04:05:41 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":55}],"result":null,"preventMethod":false,"methodScopeId":331,"scopeIsPlayer":true,"index":8,"originStackId":-1},"isAfterActivation":true,"index":8} 

 Player 2 04:05:41 $DRAW_CARD:  
{"deckType":1} 

 Player 2 04:05:41 $MOVE_CARD:  
{"moveIndex":5,"cardId":112,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 04:05:41 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":112,"flipIfFlipped":false,"playerId":2} 

 Player 2 04:05:41 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":112} 

 Player 2 04:05:41 $FLIP_CARD:  
{"cardId":112} 

 Player 2 04:05:41 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":112} 

 Player 2 04:05:41 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":112}],"result":null,"preventMethod":false,"methodScopeId":331,"scopeIsPlayer":true,"index":9,"originStackId":-1},"isAfterActivation":true,"index":9} 

 Player 2 04:05:42 $DRAW_CARD:  
{"deckType":1} 

 Player 2 04:05:42 $MOVE_CARD:  
{"moveIndex":6,"cardId":100,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 04:05:42 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":100,"flipIfFlipped":false,"playerId":2} 

 Player 2 04:05:42 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":100} 

 Player 2 04:05:42 $FLIP_CARD:  
{"cardId":100} 

 Player 2 04:05:42 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":100} 

 Player 2 04:05:42 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":100}],"result":null,"preventMethod":false,"methodScopeId":331,"scopeIsPlayer":true,"index":10,"originStackId":-1},"isAfterActivation":true,"index":10} 

 Player 2 04:05:42 $GAME_HAS_STARTED:  

 Player 2 04:05:42 $SET_TURN:  
{"playerId":2} 

 Player 2 04:05:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 04:05:42 $NEXT_STACK_ID:  

 Player 2 04:05:42 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":331,"turnPlayerCardId":331,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}} 

 Player 2 04:05:42 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":331,"turnPlayerCardId":331,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}} 

 Player 2 04:05:42 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 04:05:42 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 2 04:05:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add Start Turn Loot Draw 1 "}} 

 Player 2 04:05:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 04:05:45 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":331,"turnPlayerCardId":331,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}} 

 Player 2 04:05:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding Start Turn Loot Draw 1"},"childOfId":0} 

 Player 2 04:05:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 2 04:05:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 04:05:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 2 04:05:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 04:05:45 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 04:05:45 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[339,340]} 

 Player 1 04:05:45 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 04:05:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve Start Turn Loot Draw 1 "}} 

 Player 2 04:05:45 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":1,"creatorCardId":331,"turnPlayerCardId":331,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}]} 

 Player 2 04:05:45 $DRAW_CARD:  
{"deckType":1} 

 Player 2 04:05:45 $MOVE_CARD:  
{"moveIndex":7,"cardId":133,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 04:05:46 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":133,"flipIfFlipped":false,"playerId":2} 

 Player 2 04:05:46 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":133} 

 Player 2 04:05:46 $FLIP_CARD:  
{"cardId":133} 

 Player 2 04:05:46 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":133} 

 Player 2 04:05:46 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":133}],"result":null,"preventMethod":false,"methodScopeId":331,"scopeIsPlayer":true,"index":11,"originStackId":-1},"isAfterActivation":true,"index":11} 

 Player 2 04:05:46 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":1,"text":"Player 2 Has Drawn Loot For Start Turn"} 

 Player 2 04:05:46 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":331,"turnPlayerCardId":331,"stackEffectType":13,"lable":"Player 2 Has Drawn Loot For Start Turn"}} 

 Player 2 04:05:46 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 04:05:46 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 04:05:46 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 2 04:05:49 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":1} 

 Player 2 04:05:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve Start Turn Loot Draw 1  "}} 

 Player 2 04:05:49 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":331,"turnPlayerCardId":331,"stackEffectType":13,"lable":"Player 2 Has Drawn Loot For Start Turn"}} 

 Player 2 04:05:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve Start Turn Loot Draw 1"},"childOfId":5} 

 Player 2 04:05:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 2 04:05:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 04:05:49 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 04:05:49 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[339,340]} 

 Player 1 04:05:49 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 04:05:49 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 2 04:05:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 2 04:05:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 04:05:49 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 2 04:05:49 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 2 04:05:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 2 04:05:49 $CLEAR_SE_VIS:  

 Player 2 04:05:49 $UPDATE_ACTIONS:  

 Player 2 04:05:57 $NEXT_STACK_ID:  

 Player 2 04:05:57 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":331,"attackingPlayerCardId":331,"idOfCardBeingAttacked":260,"stackEffectType":4,"lable":"Player 2 declared attack on Famine"}} 

 Player 2 04:05:57 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":331,"attackingPlayerCardId":331,"idOfCardBeingAttacked":260,"stackEffectType":4,"lable":"Player 2 declared attack on Famine"}} 

 Player 2 04:05:57 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 04:05:57 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 2 04:06:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add Player Declare Attack On Monster 2 "}} 

 Player 2 04:06:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 04:06:00 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":331,"attackingPlayerCardId":331,"idOfCardBeingAttacked":260,"stackEffectType":4,"lable":"Player 2 declared attack on Famine"}} 

 Player 2 04:06:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding Player Declare Attack On Monster 2"},"childOfId":10} 

 Player 2 04:06:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 2 04:06:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 04:06:00 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 2 04:06:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 2 04:06:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 04:06:00 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 04:06:00 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[339,340]} 

 Player 1 04:06:00 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 04:06:00 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 2 04:06:00 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 2 04:06:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve Player Declare Attack On Monster 2 "}} 

 Player 2 04:06:01 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":2,"creatorCardId":331,"attackingPlayerCardId":331,"idOfCardBeingAttacked":260,"stackEffectType":4,"lable":"Player 2 declared attack on Famine"}]} 

 Player 2 04:06:01 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":260,"particleType":5} 

 Player 2 04:06:01 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":2,"text":"Player 2 Has Entered Battle with Famine"} 

 Player 2 04:06:01 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":331,"scopeIsPlayer":true,"index":12,"originStackId":2},"isAfterActivation":true,"index":12} 

 Player 2 04:06:01 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":331,"attackingPlayerCardId":331,"idOfCardBeingAttacked":260,"stackEffectType":4,"lable":"Player 2 Has Entered Battle with Famine"}} 

 Player 2 04:06:01 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 04:06:01 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 04:06:01 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 2 04:06:03 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":2} 

 Player 2 04:06:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve Player Declare Attack On Monster 2  "}} 

 Player 2 04:06:04 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":331,"attackingPlayerCardId":331,"idOfCardBeingAttacked":260,"stackEffectType":4,"lable":"Player 2 Has Entered Battle with Famine"}} 

 Player 2 04:06:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve Player Declare Attack On Monster 2"},"childOfId":15} 

 Player 2 04:06:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 2 04:06:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 04:06:04 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 04:06:04 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[339,340]} 

 Player 1 04:06:04 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 04:06:04 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 04:06:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 2 04:06:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 04:06:04 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 2 04:06:04 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 2 04:06:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 2 04:06:04 $CLEAR_SE_VIS:  

 Player 2 04:06:07 $NEXT_STACK_ID:  

 Player 2 04:06:07 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":331,"rollingPlayerCardId":331,"stackEffectType":2,"attackedMonsterCardId":260,"lable":"Player 2 is rolling against Famine<Monster>"}} 

 Player 2 04:06:07 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":331,"rollingPlayerCardId":331,"stackEffectType":2,"attackedMonsterCardId":260,"lable":"Player 2 is rolling against Famine<Monster>"}} 

 Player 2 04:06:07 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 04:06:07 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 2 04:06:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add Player Attack Roll On Monster 3 "}} 

 Player 2 04:06:10 $ROLL_DICE:  
{"playerId":2} 

 Player 2 04:06:11 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":5} 

 Player 2 04:06:11 $UPDATE_STACK_VIS:  
{"stackId":3,"text":"player rolled 5 vs Famine<Monster>"} 

 Player 2 04:06:11 $SHOW_DICE_ROLL:  
{"stackId":3} 

 Player 2 04:06:14 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":3,"text":"Player 2 rolled 5 vs Famine<Monster>"} 

 Player 2 04:06:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 04:06:14 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":331,"numberRolled":5,"rollingPlayerCardId":331,"stackEffectType":2,"attackedMonsterCardId":260,"lable":"Player 2 rolled 5 vs Famine<Monster>"}} 

 Player 2 04:06:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding Player Attack Roll On Monster 3"},"childOfId":20} 

 Player 2 04:06:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 2 04:06:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 04:06:15 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 2 04:06:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 2 04:06:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 04:06:15 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 04:06:15 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[339,340]} 

 Player 1 04:06:15 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 04:06:15 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 2 04:06:15 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 2 04:06:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve Player Attack Roll On Monster 3 "}} 

 Player 2 04:06:15 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":3,"creatorCardId":331,"numberRolled":5,"rollingPlayerCardId":331,"stackEffectType":2,"attackedMonsterCardId":260,"lable":"Player 2 rolled 5 vs Famine<Monster>"}]} 

 Player 2 04:06:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Added 0 to original roll"}} 

 Player 2 04:06:15 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":331,"scopeIsPlayer":true,"index":1,"originStackId":3},"isAfterActivation":false,"index":1} 

 Player 2 04:06:15 $NEXT_STACK_ID:  

 Player 2 04:06:15 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":331,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":203,"effectToDo":{"effectName":"SetDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":203,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14,"lable":"Activate Sacred Heart Effect Set Damage<Set Damage>"}} 

 Player 2 04:06:15 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":331,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":203,"effectToDo":{"effectName":"SetDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":203,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14,"lable":"Activate Sacred Heart Effect Set Damage<Set Damage>"}} 

 Player 2 04:06:15 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 04:06:15 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 2 04:06:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Add Activate Passive Effect 4 "}} 

 Player 2 04:07:27 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":4,"text":"Activate Sacred Heart effect Set Damage<Set Damage>"} 

 Player 2 04:07:27 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":331,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":203,"effectToDo":{"effectName":"SetDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":203,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14,"lable":"Activate Sacred Heart effect Set Damage<Set Damage>"}} 

 Player 2 04:07:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Response Adding Activate Passive Effect 4"},"childOfId":26} 

 Player 2 04:07:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 1 "},"childOfId":26} 

 Player 2 04:07:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 04:07:28 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 04:07:28 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[339,340]} 

 Player 1 04:07:28 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 04:07:28 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 2 04:07:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Wait For Response From Player 2 "},"childOfId":26} 

 Player 2 04:07:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 04:07:28 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 04:07:28 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 2 04:07:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Resolve Activate Passive Effect 4 "}} 

 Player 2 04:07:28 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":3,"creatorCardId":331,"numberRolled":5,"rollingPlayerCardId":331,"stackEffectType":2,"attackedMonsterCardId":260,"lable":"Player 2 rolled 5 vs Famine<Monster>"},{"effectCollectedData":null,"entityId":4,"creatorCardId":331,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":203,"effectToDo":{"effectName":"SetDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":203,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14,"lable":"Activate Sacred Heart effect Set Damage<Set Damage>"}]} 

 Player 2 04:07:28 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":203,"particleType":6} 

 Player 2 04:07:30 $DISABLE_PARTICLE_EFFECT:  
{"cardId":203,"particleType":6} 

 Player 2 04:07:30 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":6},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":331,"scopeIsPlayer":true,"index":1,"originStackId":3},"isAfterActivation":false,"index":1} 

 Player 2 04:07:30 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":4,"text":"Activated Sacred Heart Effect"} 

 Player 2 04:07:30 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":331,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":203,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14,"lable":"Activated Sacred Heart Effect"}} 

 Player 2 04:07:30 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":3,"creatorCardId":331,"numberRolled":5,"rollingPlayerCardId":331,"stackEffectType":2,"attackedMonsterCardId":260,"lable":"Player 2 rolled 5 vs Famine<Monster>"}]} 

 Player 2 04:07:30 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 04:07:30 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 2 04:07:33 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":4} 

 Player 2 04:07:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Remove After Resolve Activate Passive Effect 4  "}} 

 Player 2 04:07:33 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":331,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":203,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14,"lable":"Activated Sacred Heart Effect"}} 

 Player 2 04:07:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Response Remove After Resolve Activate Passive Effect 4"},"childOfId":31} 

 Player 2 04:07:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 2 "},"childOfId":31} 

 Player 2 04:07:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 04:07:33 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 2 04:07:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Wait For Response From Player 1 "},"childOfId":31} 

 Player 2 04:07:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 04:07:33 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 04:07:33 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[339,340]} 

 Player 1 04:07:33 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 04:07:33 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 04:07:33 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 2 04:07:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Resolve Player Attack Roll On Monster 3 "}} 

 Player 2 04:07:33 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":3,"text":"Player 2 Rolled 6 Against Famine<Monster> 3"} 

 Player 2 04:07:33 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":3,"text":"Player 2 Roll Hit"} 

 Player 2 04:07:33 $NEXT_STACK_ID:  

 Player 2 04:07:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 04:07:33 $CLEAR_SE_VIS:  

 Player 2 04:07:33 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":331,"entityToDoDamageCardId":331,"entityToTakeDamageCardId":260,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6,"lable":"Eden is going to hurt Famine"}} 

 Player 2 04:07:33 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":331,"numberRolled":5,"rollingPlayerCardId":331,"stackEffectType":2,"attackedMonsterCardId":260,"lable":"Player 2 Roll Hit"}} 

 Player 2 04:07:33 $REPLACE_STACK:  
{"currentStack":[{"entityId":5,"creatorCardId":331,"entityToDoDamageCardId":331,"entityToTakeDamageCardId":260,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6,"lable":"Eden is going to hurt Famine"},{"entityId":3,"creatorCardId":331,"numberRolled":5,"rollingPlayerCardId":331,"stackEffectType":2,"attackedMonsterCardId":260,"lable":"Player 2 Roll Hit"}]} 

 Player 2 04:07:33 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 04:07:33 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":6},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":331,"scopeIsPlayer":true,"index":1,"originStackId":3},"isAfterActivation":true,"index":1} 

 Player 2 04:07:33 $NEXT_STACK_ID:  

 Player 2 04:07:33 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":6,"creatorCardId":331,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":249,"effectToDo":{"effectName":"EndTurn","cardEffectNum":0,"cardPlayerId":2,"cardId":249,"effctType":0},"isAfterActivation":true,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14,"lable":"Activate Cursed Mom's Hand Effect EndTurn<EndTurn>"}} 

 Player 2 04:07:33 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":6,"creatorCardId":331,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":249,"effectToDo":{"effectName":"EndTurn","cardEffectNum":0,"cardPlayerId":2,"cardId":249,"effctType":0},"isAfterActivation":true,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14,"lable":"Activate Cursed Mom's Hand Effect EndTurn<EndTurn>"}} 

 Player 2 04:07:33 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 04:07:33 $SHOW_STACK_EFFECT:  
{"effectId":6} 

 Player 2 04:07:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Add Activate Passive Effect 6 "}} 

 Player 2 04:07:36 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":6,"text":"Activate Cursed Mom's Hand effect EndTurn<EndTurn>"} 

 Player 2 04:07:36 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[331],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":249,"effectCardPlayer":249},"entityId":6,"creatorCardId":331,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":249,"effectToDo":{"effectName":"EndTurn","cardEffectNum":0,"cardPlayerId":2,"cardId":249,"effctType":0},"isAfterActivation":true,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14,"lable":"Activate Cursed Mom's Hand effect EndTurn<EndTurn>"}} 

 Player 2 04:07:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Response Adding Activate Passive Effect 6"},"childOfId":36} 

 Player 2 04:07:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 2 "},"childOfId":36} 

 Player 2 04:07:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 04:07:36 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 2 04:07:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Wait For Response From Player 1 "},"childOfId":36} 

 Player 2 04:07:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 04:07:36 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 04:07:36 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[339,340]} 

 Player 1 04:07:36 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 04:07:36 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 04:07:36 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 2 04:07:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Resolve Activate Passive Effect 6 "}} 

 Player 2 04:07:37 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":3,"creatorCardId":331,"numberRolled":5,"rollingPlayerCardId":331,"stackEffectType":2,"attackedMonsterCardId":260,"lable":"Player 2 Roll Hit"},{"effectCollectedData":{"effectTargets":[331],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":249,"effectCardPlayer":249},"entityId":6,"creatorCardId":331,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":249,"effectToDo":{"effectName":"EndTurn","cardEffectNum":0,"cardPlayerId":2,"cardId":249,"effctType":0},"isAfterActivation":true,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14,"lable":"Activate Cursed Mom's Hand effect EndTurn<EndTurn>"}]} 

 Player 2 04:07:37 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":249,"particleType":6} 

 Player 2 04:07:38 $DISABLE_PARTICLE_EFFECT:  
{"cardId":249,"particleType":6} 

 Player 2 04:07:38 $DISABLE_PARTICLE_EFFECT:  
{"cardId":260,"particleType":5} 

 Player 2 04:07:38 $CANCEL_ATTACK:  

 Player 2 04:07:39 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":5} 

 Player 2 04:07:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Fizzle Monster Combat Damage To A Player 5"}} 

 Player 2 04:07:39 $SHOW_ANNOUNCEMENT:  
{"text":"Monster Combat Damage To A Player 5 Was Fizzled"} 

 Player 2 04:07:39 $FIZZLE_STACK_EFFECT:  
{"entityId":5} 

 Player 2 04:07:39 $LOG_ERROR:  
"no stack effect to show" 
//////Error From Player 2////
  

 Player 2 04:07:39 $LOG_ERROR:  
//////Error From Player 2////
 [object Object]
////// 

 Player 2 04:07:39 $SHOW_ANNOUNCEMENT:  
{"text":"no stack effect to show"} 

 Player 2 04:07:39 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 04:07:39 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":3} 

 Player 2 04:07:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Fizzle Player Attack Roll On Monster 3"}} 

 Player 2 04:07:39 $SHOW_ANNOUNCEMENT:  
{"text":"Player Attack Roll On Monster 3 Was Fizzled"} 

 Player 2 04:07:39 $FIZZLE_STACK_EFFECT:  
{"entityId":3} 

 Player 2 04:07:39 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":6},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":331,"scopeIsPlayer":false,"index":1,"originStackId":3},"isAfterActivation":true,"index":1} 

 Player 2 04:07:39 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":6,"text":"Activated Cursed Mom's Hand Effect"} 

 Player 2 04:07:39 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[331],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":249,"effectCardPlayer":249},"entityId":6,"creatorCardId":331,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":249,"isAfterActivation":true,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14,"lable":"Activated Cursed Mom's Hand Effect"}} 

 Player 2 04:07:39 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 04:07:39 $SHOW_STACK_EFFECT:  
{"effectId":6} 

 Player 2 04:07:40 $HIDE_ANNOUNCEMENT:  

 Player 2 04:07:41 $HIDE_ANNOUNCEMENT:  

 Player 2 04:07:41 $HIDE_ANNOUNCEMENT:  

 Player 2 04:07:42 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":6} 

 Player 2 04:07:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Remove After Resolve Activate Passive Effect 6  "}} 

 Player 2 04:07:42 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[331],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":249,"effectCardPlayer":249},"entityId":6,"creatorCardId":331,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":249,"isAfterActivation":true,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14,"lable":"Activated Cursed Mom's Hand Effect"}} 

 Player 2 04:07:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Response Remove After Resolve Activate Passive Effect 6"},"childOfId":43} 

 Player 2 04:07:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Wait For Response From Player 1 "},"childOfId":43} 

 Player 2 04:07:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 04:07:42 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 04:07:42 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[339,340]} 

 Player 1 04:07:42 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 04:07:42 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 2 04:07:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Wait For Response From Player 2 "},"childOfId":43} 

 Player 2 04:07:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 04:07:42 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 2 04:07:42 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 04:07:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Stack Was Emptied "}} 

 Player 2 04:07:42 $CLEAR_SE_VIS:  

 Player 2 04:07:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 04:07:42 $CLEAR_SE_VIS:  

 Player 2 04:07:42 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 2 04:07:42 $CLEAR_SE_VIS:  

 Player 2 04:07:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Stack Was Emptied "}} 

 Player 2 04:07:42 $END_TURN:  

 Player 2 04:07:42 $SET_TURN:  
{"playerId":1} 

 Player 2 04:07:42 $START_TURN:  
{"playerId":1} 

 Player 2 04:07:43 $CLEAR_SE_VIS:  

 Player 1 04:07:43 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 04:07:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 04:07:43 $NEXT_STACK_ID:  

 Player 1 04:07:43 $ADD_TO_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":339,"turnPlayerCardId":339,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"}} 

 Player 1 04:07:43 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":339,"turnPlayerCardId":339,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"}} 

 Player 1 04:07:43 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 04:07:43 $SHOW_STACK_EFFECT:  
{"effectId":7} 

 Player 2 04:07:43 $STACK_EMPTIED:  
{"playerId":1} 

 Player 1 04:07:43 $CLEAR_SE_VIS:  

 Player 1 04:07:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Add Start Turn Loot Draw 7 "}} 

 Player 1 04:07:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 04:07:46 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":339,"turnPlayerCardId":339,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"}} 

 Player 1 04:07:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Response Adding Start Turn Loot Draw 7"},"childOfId":49} 

 Player 1 04:07:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Wait For Response From Player 1 "},"childOfId":49} 

 Player 1 04:07:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 04:07:46 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 1 04:07:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Wait For Response From Player 2 "},"childOfId":49} 

 Player 1 04:07:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 04:07:46 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 04:07:46 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[331]} 

 Player 2 04:07:46 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 04:07:46 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 1 04:07:46 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 1 04:07:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Resolve Start Turn Loot Draw 7 "}} 

 Player 1 04:07:46 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":7,"creatorCardId":339,"turnPlayerCardId":339,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"}]} 

 Player 1 04:07:46 $DRAW_CARD:  
{"deckType":1} 

 Player 1 04:07:46 $MOVE_CARD:  
{"moveIndex":8,"cardId":61,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 04:07:46 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":61,"flipIfFlipped":false,"playerId":1} 

 Player 1 04:07:46 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":61} 

 Player 1 04:07:46 $FLIP_CARD:  
{"cardId":61} 

 Player 1 04:07:46 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":61} 

 Player 1 04:07:46 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":61}],"result":null,"preventMethod":false,"methodScopeId":339,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 04:07:47 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":7,"text":"Player 1 Has Drawn Loot For Start Turn"} 

 Player 1 04:07:47 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":339,"turnPlayerCardId":339,"stackEffectType":13,"lable":"Player 1 Has Drawn Loot For Start Turn"}} 

 Player 1 04:07:47 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 1 04:07:47 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 04:07:47 $SHOW_STACK_EFFECT:  
{"effectId":7} 

 Player 1 04:07:49 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":7} 

 Player 1 04:07:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Remove After Resolve Start Turn Loot Draw 7  "}} 

 Player 1 04:07:49 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":339,"turnPlayerCardId":339,"stackEffectType":13,"lable":"Player 1 Has Drawn Loot For Start Turn"}} 

 Player 1 04:07:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Response Remove After Resolve Start Turn Loot Draw 7"},"childOfId":54} 

 Player 1 04:07:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":56,"_text":"Wait For Response From Player 2 "},"childOfId":54} 

 Player 1 04:07:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 04:07:50 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 04:07:50 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[331]} 

 Player 2 04:07:50 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 04:07:50 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 1 04:07:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":57,"_text":"Wait For Response From Player 1 "},"childOfId":54} 

 Player 1 04:07:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 04:07:50 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 1 04:07:50 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 1 04:07:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":58,"_text":"Stack Was Emptied "}} 

 Player 1 04:07:50 $CLEAR_SE_VIS:  

 Player 2 08:52:03 $MATCH: 