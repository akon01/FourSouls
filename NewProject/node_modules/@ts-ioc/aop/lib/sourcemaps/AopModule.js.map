{"version":3,"sources":["AopModule.ts"],"names":[],"mappings":";;;AAAA,qCAA+G;AAC/G,8CAA6C;AAC7C,qCAAoC;AACpC,qCAAuC;AACvC,iDAAgD;AAChD,+DAA8D;AAC9D,2CAAyC;AACzC,mCAAkK;AAGlK;;;;;GAKG;AAEH;IAEI,mBAA4C,SAAqB;QAArB,cAAS,GAAT,SAAS,CAAY;IAEjE,CAAC;IAED;;;;OAIG;IACH,yBAAK,GAAL;QACI,IAAI,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC/B,SAAS,CAAC,QAAQ,CAAC,sBAAS,CAAC,CAAC;QAC9B,SAAS,CAAC,QAAQ,CAAC,4BAAmB,CAAC,CAAC;QACxC,SAAS,CAAC,QAAQ,CAAC,4BAAmB,CAAC,CAAC;QACxC,SAAS,CAAC,QAAQ,CAAC,uBAAc,CAAC,CAAC;QACnC,SAAS,CAAC,QAAQ,CAAC,+BAAsB,CAAC,CAAC;QAC3C,SAAS,CAAC,QAAQ,CAAC,kCAAyB,CAAC,CAAC;QAC9C,SAAS,CAAC,QAAQ,CAAC,qBAAY,CAAC,CAAC;QACjC,SAAS,CAAC,QAAQ,CAAC,oBAAW,CAAC,CAAC;QAChC,SAAS,CAAC,QAAQ,CAAC,iBAAO,CAAC,CAAC;QAC5B,SAAS,CAAC,QAAQ,CAAC,6BAAa,CAAC,CAAC;QAGlC,IAAI,SAAS,GAAG,SAAS,CAAC,GAAG,CAAC,qBAAc,CAAC,CAAC;QAE9C,IAAI,OAAO,GAAG,IAAI,mCAAgB,EAAE,CAAC;QACrC,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,oBAAU,CAAC,YAAY,CAAC,EAAE,eAAQ,CAAC,MAAM,CAAC,CAAC;QAC9E,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,oBAAU,CAAC,aAAa,CAAC,EAAE,eAAQ,CAAC,OAAO,EAAE,gBAAS,CAAC,iBAAiB,CAAC,CAAC;QAC7G,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,oBAAU,CAAC,kBAAkB,CAAC,EAAE,eAAQ,CAAC,OAAO,EAAE,gBAAS,CAAC,SAAS,CAAC,CAAC;QAE1G,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,oBAAU,CAAC,8BAA8B,CAAC,EAAE,eAAQ,CAAC,OAAO,EAAE,gBAAS,CAAC,iBAAiB,CAAC,CAAC;QAC9H,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,oBAAU,CAAC,eAAe,CAAC,EAAE,eAAQ,CAAC,OAAO,EAAE,gBAAS,CAAC,MAAM,EAAE,gBAAS,CAAC,gBAAgB,CAAC,CAAC;QAChI,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,oBAAU,CAAC,6BAA6B,CAAC,EAAE,eAAQ,CAAC,OAAO,EAAE,gBAAS,CAAC,gBAAgB,CAAC,CAAC;QAG5H,SAAS,CAAC,iBAAiB,CAAC,eAAM,EAAE,oBAAU,CAAC,YAAY,EAAE,oBAAU,CAAC,eAAe,CAAC,CAAC;IAE7F,CAAC;IAE0B,2BAAiB,GAAxB;QACI,OAAO,EAAC,MAAM,EAAC,WAAW,EAAC,QAAQ,EAAC,EAAC,aAAa,EAAC,CAAC,WAAW,CAAC,EAAC,OAAO,EAAC,EAAE,EAAC,EAAC,CAAC;IAClF,CAAC;IA3CZ,SAAS;QADrB,aAAM,CAAC,OAAO,CAAC;QAGC,mBAAA,aAAM,CAAC,qBAAc,CAAC,CAAA;;OAF1B,SAAS,CA4CF;IAAD,gBAAC;CA5CpB,AA4CoB,IAAA;AA5CP,8BAAS","file":"../AopModule.js","sourcesContent":["import { IContainer, IocState, LifeState, Inject, ContainerToken, LifeScopeToken, IocExt } from '@ts-ioc/core';\r\nimport { Aspect } from './decorators/Aspect';\r\nimport { Advisor } from './Advisor';\r\nimport { AopActions } from './actions';\r\nimport { AdviceMatcher } from './AdviceMatcher';\r\nimport { AopActionFactory } from './actions/AopActionFactory';\r\nimport { Joinpoint } from './joinpoints';\r\nimport { ProxyMethod, AdvisorChainFactory, AdvisorChain, SyncProceeding, AsyncObservableProceeding, AsyncPromiseProceeding, ReturningRecognizer } from './access';\r\n\r\n\r\n/**\r\n * aop ext for ioc. auto run setup after registered.\r\n * with @IocExt('setup') decorator.\r\n * @export\r\n * @class AopModule\r\n */\r\n@IocExt('setup')\r\nexport class AopModule {\r\n\r\n    constructor(@Inject(ContainerToken) private container: IContainer) {\r\n\r\n    }\r\n\r\n    /**\r\n     * register aop for container.\r\n     *\r\n     * @memberof AopModule\r\n     */\r\n    setup() {\r\n        let container = this.container;\r\n        container.register(Joinpoint);\r\n        container.register(AdvisorChainFactory);\r\n        container.register(ReturningRecognizer);\r\n        container.register(SyncProceeding);\r\n        container.register(AsyncPromiseProceeding);\r\n        container.register(AsyncObservableProceeding);\r\n        container.register(AdvisorChain);\r\n        container.register(ProxyMethod);\r\n        container.register(Advisor);\r\n        container.register(AdviceMatcher);\r\n\r\n\r\n        let lifeScope = container.get(LifeScopeToken);\r\n\r\n        let factory = new AopActionFactory();\r\n        lifeScope.addAction(factory.create(AopActions.registAspect), IocState.design);\r\n        lifeScope.addAction(factory.create(AopActions.matchPointcut), IocState.runtime, LifeState.beforeConstructor);\r\n        lifeScope.addAction(factory.create(AopActions.bindMethodPointcut), IocState.runtime, LifeState.AfterInit);\r\n\r\n        lifeScope.addAction(factory.create(AopActions.invokeBeforeConstructorAdvices), IocState.runtime, LifeState.beforeConstructor);\r\n        lifeScope.addAction(factory.create(AopActions.exetndsInstance), IocState.runtime, LifeState.onInit, LifeState.afterConstructor);\r\n        lifeScope.addAction(factory.create(AopActions.invokeAfterConstructorAdvices), IocState.runtime, LifeState.afterConstructor);\r\n\r\n\r\n        lifeScope.registerDecorator(Aspect, AopActions.registAspect, AopActions.exetndsInstance);\r\n\r\n    }\r\n\n                        static getClassAnnations():any  {\n                            return {\"name\":\"AopModule\",\"params\":{\"constructor\":[\"container\"],\"setup\":[]}};\n                        }\n                   }\r\n"]}